# 1 "txInterpTest.cudafe1.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "txInterpTest.cudafe1.cpp"
# 1 "txInterpTest.cu"
# 61 "/usr/local/cuda/bin/../include/device_types.h"
# 149 "/usr/lib/gcc/x86_64-linux-gnu/4.4.3/include/stddef.h" 3
typedef long ptrdiff_t;
# 211 "/usr/lib/gcc/x86_64-linux-gnu/4.4.3/include/stddef.h" 3
typedef unsigned long size_t;
# 1 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 1 3
# 69 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 3
# 1 "/usr/local/cuda/bin/../include/builtin_types.h" 1 3
# 56 "/usr/local/cuda/bin/../include/builtin_types.h" 3
# 1 "/usr/local/cuda/bin/../include/device_types.h" 1 3
# 53 "/usr/local/cuda/bin/../include/device_types.h" 3
# 1 "/usr/local/cuda/bin/../include/host_defines.h" 1 3
# 54 "/usr/local/cuda/bin/../include/device_types.h" 2 3







enum cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};
# 57 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/driver_types.h" 1 3
# 126 "/usr/local/cuda/bin/../include/driver_types.h" 3
enum cudaError
{





    cudaSuccess = 0,





    cudaErrorMissingConfiguration = 1,





    cudaErrorMemoryAllocation = 2,





    cudaErrorInitializationError = 3,
# 161 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorLaunchFailure = 4,
# 170 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorPriorLaunchFailure = 5,
# 180 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorLaunchTimeout = 6,
# 189 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorLaunchOutOfResources = 7,





    cudaErrorInvalidDeviceFunction = 8,
# 204 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorInvalidConfiguration = 9,





    cudaErrorInvalidDevice = 10,





    cudaErrorInvalidValue = 11,





    cudaErrorInvalidPitchValue = 12,





    cudaErrorInvalidSymbol = 13,




    cudaErrorMapBufferObjectFailed = 14,




    cudaErrorUnmapBufferObjectFailed = 15,





    cudaErrorInvalidHostPointer = 16,





    cudaErrorInvalidDevicePointer = 17,





    cudaErrorInvalidTexture = 18,





    cudaErrorInvalidTextureBinding = 19,






    cudaErrorInvalidChannelDescriptor = 20,





    cudaErrorInvalidMemcpyDirection = 21,
# 285 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorAddressOfConstant = 22,
# 294 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorTextureFetchFailed = 23,
# 303 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorTextureNotBound = 24,
# 312 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorSynchronizationError = 25,





    cudaErrorInvalidFilterSetting = 26,





    cudaErrorInvalidNormSetting = 27,







    cudaErrorMixedDeviceExecution = 28,






    cudaErrorCudartUnloading = 29,




    cudaErrorUnknown = 30,







    cudaErrorNotYetImplemented = 31,
# 361 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorMemoryValueTooLarge = 32,






    cudaErrorInvalidResourceHandle = 33,







    cudaErrorNotReady = 34,






    cudaErrorInsufficientDriver = 35,
# 396 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorSetOnActiveProcess = 36,





    cudaErrorInvalidSurface = 37,





    cudaErrorNoDevice = 38,





    cudaErrorECCUncorrectable = 39,




    cudaErrorSharedObjectSymbolNotFound = 40,




    cudaErrorSharedObjectInitFailed = 41,





    cudaErrorUnsupportedLimit = 42,





    cudaErrorDuplicateVariableName = 43,





    cudaErrorDuplicateTextureName = 44,





    cudaErrorDuplicateSurfaceName = 45,
# 458 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorDevicesUnavailable = 46,




    cudaErrorInvalidKernelImage = 47,







    cudaErrorNoKernelImageForDevice = 48,
# 484 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorIncompatibleDriverContext = 49,






    cudaErrorPeerAccessAlreadyEnabled = 50,






    cudaErrorPeerAccessNotEnabled = 51,





    cudaErrorDeviceAlreadyInUse = 54,







    cudaErrorProfilerDisabled = 55,






    cudaErrorProfilerNotInitialized = 56,






    cudaErrorProfilerAlreadyStarted = 57,





     cudaErrorProfilerAlreadyStopped = 58,







    cudaErrorAssert = 59,






    cudaErrorTooManyPeers = 60,





    cudaErrorHostMemoryAlreadyRegistered = 61,





    cudaErrorHostMemoryNotRegistered = 62,




    cudaErrorOperatingSystem = 63,




    cudaErrorStartupFailure = 0x7f,







    cudaErrorApiFailureBase = 10000
};




enum cudaChannelFormatKind
{
    cudaChannelFormatKindSigned = 0,
    cudaChannelFormatKindUnsigned = 1,
    cudaChannelFormatKindFloat = 2,
    cudaChannelFormatKindNone = 3
};




struct cudaChannelFormatDesc
{
    int x;
    int y;
    int z;
    int w;
    enum cudaChannelFormatKind f;
};




struct cudaArray;




enum cudaMemoryType
{
    cudaMemoryTypeHost = 1,
    cudaMemoryTypeDevice = 2
};




enum cudaMemcpyKind
{
    cudaMemcpyHostToHost = 0,
    cudaMemcpyHostToDevice = 1,
    cudaMemcpyDeviceToHost = 2,
    cudaMemcpyDeviceToDevice = 3,
    cudaMemcpyDefault = 4
};





struct cudaPitchedPtr
{
    void *ptr;
    size_t pitch;
    size_t xsize;
    size_t ysize;
};





struct cudaExtent
{
    size_t width;
    size_t height;
    size_t depth;
};





struct cudaPos
{
    size_t x;
    size_t y;
    size_t z;
};




struct cudaMemcpy3DParms
{
    struct cudaArray *srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;

    struct cudaArray *dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;

    struct cudaExtent extent;
    enum cudaMemcpyKind kind;
};




struct cudaMemcpy3DPeerParms
{
    struct cudaArray *srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;
    int srcDevice;

    struct cudaArray *dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;
    int dstDevice;

    struct cudaExtent extent;
};




struct cudaGraphicsResource;




enum cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone = 0,
    cudaGraphicsRegisterFlagsReadOnly = 1,
    cudaGraphicsRegisterFlagsWriteDiscard = 2,
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,
    cudaGraphicsRegisterFlagsTextureGather = 8
};




enum cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone = 0,
    cudaGraphicsMapFlagsReadOnly = 1,
    cudaGraphicsMapFlagsWriteDiscard = 2
};




enum cudaGraphicsCubeFace
{
    cudaGraphicsCubeFacePositiveX = 0x00,
    cudaGraphicsCubeFaceNegativeX = 0x01,
    cudaGraphicsCubeFacePositiveY = 0x02,
    cudaGraphicsCubeFaceNegativeY = 0x03,
    cudaGraphicsCubeFacePositiveZ = 0x04,
    cudaGraphicsCubeFaceNegativeZ = 0x05
};




struct cudaPointerAttributes
{




    enum cudaMemoryType memoryType;
# 758 "/usr/local/cuda/bin/../include/driver_types.h" 3
    int device;





    void *devicePointer;





    void *hostPointer;
};




struct cudaFuncAttributes
{





   size_t sharedSizeBytes;





   size_t constSizeBytes;




   size_t localSizeBytes;






   int maxThreadsPerBlock;




   int numRegs;






   int ptxVersion;






   int binaryVersion;
};




enum cudaFuncCache
{
    cudaFuncCachePreferNone = 0,
    cudaFuncCachePreferShared = 1,
    cudaFuncCachePreferL1 = 2,
    cudaFuncCachePreferEqual = 3
};





enum cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault = 0,
    cudaSharedMemBankSizeFourByte = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum cudaComputeMode
{
    cudaComputeModeDefault = 0,
    cudaComputeModeExclusive = 1,
    cudaComputeModeProhibited = 2,
    cudaComputeModeExclusiveProcess = 3
};




enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01,
    cudaLimitMallocHeapSize = 0x02
};




enum cudaOutputMode
{
    cudaKeyValuePair = 0x00,
    cudaCSV = 0x01
};




struct cudaDeviceProp
{
    char name[256];
    size_t totalGlobalMem;
    size_t sharedMemPerBlock;
    int regsPerBlock;
    int warpSize;
    size_t memPitch;
    int maxThreadsPerBlock;
    int maxThreadsDim[3];
    int maxGridSize[3];
    int clockRate;
    size_t totalConstMem;
    int major;
    int minor;
    size_t textureAlignment;
    size_t texturePitchAlignment;
    int deviceOverlap;
    int multiProcessorCount;
    int kernelExecTimeoutEnabled;
    int integrated;
    int canMapHostMemory;
    int computeMode;
    int maxTexture1D;
    int maxTexture1DLinear;
    int maxTexture2D[2];
    int maxTexture2DLinear[3];
    int maxTexture2DGather[2];
    int maxTexture3D[3];
    int maxTextureCubemap;
    int maxTexture1DLayered[2];
    int maxTexture2DLayered[3];
    int maxTextureCubemapLayered[2];
    int maxSurface1D;
    int maxSurface2D[2];
    int maxSurface3D[3];
    int maxSurface1DLayered[2];
    int maxSurface2DLayered[3];
    int maxSurfaceCubemap;
    int maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;
    int concurrentKernels;
    int ECCEnabled;
    int pciBusID;
    int pciDeviceID;
    int pciDomainID;
    int tccDriver;
    int asyncEngineCount;
    int unifiedAddressing;
    int memoryClockRate;
    int memoryBusWidth;
    int l2CacheSize;
    int maxThreadsPerMultiProcessor;
};
# 993 "/usr/local/cuda/bin/../include/driver_types.h" 3
struct cudaIpcEventHandle_st
{
    char reserved[64];
};

struct cudaIpcMemHandle_st
{
    char reserved[64];
};
# 1012 "/usr/local/cuda/bin/../include/driver_types.h" 3
typedef enum cudaError cudaError_t;




typedef struct CUstream_st *cudaStream_t;




typedef struct CUevent_st *cudaEvent_t;




typedef struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef struct CUuuid_st cudaUUID_t;




typedef struct cudaIpcEventHandle_st cudaIpcEventHandle_t;
typedef struct cudaIpcMemHandle_st cudaIpcMemHandle_t;




typedef enum cudaOutputMode cudaOutputMode_t;
# 58 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/surface_types.h" 1 3
# 84 "/usr/local/cuda/bin/../include/surface_types.h" 3
enum cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero = 0,
    cudaBoundaryModeClamp = 1,
    cudaBoundaryModeTrap = 2
};




enum cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,
    cudaFormatModeAuto = 1
};




struct surfaceReference
{



    struct cudaChannelFormatDesc channelDesc;
};
# 59 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/texture_types.h" 1 3
# 84 "/usr/local/cuda/bin/../include/texture_types.h" 3
enum cudaTextureAddressMode
{
    cudaAddressModeWrap = 0,
    cudaAddressModeClamp = 1,
    cudaAddressModeMirror = 2,
    cudaAddressModeBorder = 3
};




enum cudaTextureFilterMode
{
    cudaFilterModePoint = 0,
    cudaFilterModeLinear = 1
};




enum cudaTextureReadMode
{
    cudaReadModeElementType = 0,
    cudaReadModeNormalizedFloat = 1
};




struct textureReference
{



    int normalized;



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureAddressMode addressMode[3];



    struct cudaChannelFormatDesc channelDesc;



    int sRGB;
    int __cudaReserved[15];
};
# 60 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/vector_types.h" 1 3
# 59 "/usr/local/cuda/bin/../include/vector_types.h" 3
# 1 "/usr/local/cuda/bin/../include/builtin_types.h" 1 3
# 60 "/usr/local/cuda/bin/../include/builtin_types.h" 3
# 1 "/usr/local/cuda/bin/../include/vector_types.h" 1 3
# 60 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 60 "/usr/local/cuda/bin/../include/vector_types.h" 2 3
# 94 "/usr/local/cuda/bin/../include/vector_types.h" 3
struct char1
{
    signed char x;
};

struct uchar1
{
    unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
    signed char x, y;
};

struct __attribute__((aligned(2))) uchar2
{
    unsigned char x, y;
};

struct char3
{
    signed char x, y, z;
};

struct uchar3
{
    unsigned char x, y, z;
};

struct __attribute__((aligned(4))) char4
{
    signed char x, y, z, w;
};

struct __attribute__((aligned(4))) uchar4
{
    unsigned char x, y, z, w;
};

struct short1
{
    short x;
};

struct ushort1
{
    unsigned short x;
};

struct __attribute__((aligned(4))) short2
{
    short x, y;
};

struct __attribute__((aligned(4))) ushort2
{
    unsigned short x, y;
};

struct short3
{
    short x, y, z;
};

struct ushort3
{
    unsigned short x, y, z;
};

struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };
struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct int1
{
    int x;
};

struct uint1
{
    unsigned int x;
};

struct __attribute__((aligned(8))) int2 { int x; int y; };
struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };

struct int3
{
    int x, y, z;
};

struct uint3
{
    unsigned int x, y, z;
};

struct __attribute__((aligned(16))) int4
{
    int x, y, z, w;
};

struct __attribute__((aligned(16))) uint4
{
    unsigned int x, y, z, w;
};

struct long1
{
    long int x;
};

struct ulong1
{
    unsigned long x;
};






struct __attribute__((aligned(2*sizeof(long int)))) long2
{
    long int x, y;
};

struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
    unsigned long int x, y;
};



struct long3
{
    long int x, y, z;
};

struct ulong3
{
    unsigned long int x, y, z;
};

struct __attribute__((aligned(16))) long4
{
    long int x, y, z, w;
};

struct __attribute__((aligned(16))) ulong4
{
    unsigned long int x, y, z, w;
};

struct float1
{
    float x;
};

struct __attribute__((aligned(8))) float2 { float x; float y; };

struct float3
{
    float x, y, z;
};

struct __attribute__((aligned(16))) float4
{
    float x, y, z, w;
};

struct longlong1
{
    long long int x;
};

struct ulonglong1
{
    unsigned long long int x;
};

struct __attribute__((aligned(16))) longlong2
{
    long long int x, y;
};

struct __attribute__((aligned(16))) ulonglong2
{
    unsigned long long int x, y;
};

struct longlong3
{
    long long int x, y, z;
};

struct ulonglong3
{
    unsigned long long int x, y, z;
};

struct __attribute__((aligned(16))) longlong4
{
    long long int x, y, z ,w;
};

struct __attribute__((aligned(16))) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct double1
{
    double x;
};

struct __attribute__((aligned(16))) double2
{
    double x, y;
};

struct double3
{
    double x, y, z;
};

struct __attribute__((aligned(16))) double4
{
    double x, y, z, w;
};
# 338 "/usr/local/cuda/bin/../include/vector_types.h" 3
typedef struct char1 char1;
typedef struct uchar1 uchar1;
typedef struct char2 char2;
typedef struct uchar2 uchar2;
typedef struct char3 char3;
typedef struct uchar3 uchar3;
typedef struct char4 char4;
typedef struct uchar4 uchar4;
typedef struct short1 short1;
typedef struct ushort1 ushort1;
typedef struct short2 short2;
typedef struct ushort2 ushort2;
typedef struct short3 short3;
typedef struct ushort3 ushort3;
typedef struct short4 short4;
typedef struct ushort4 ushort4;
typedef struct int1 int1;
typedef struct uint1 uint1;
typedef struct int2 int2;
typedef struct uint2 uint2;
typedef struct int3 int3;
typedef struct uint3 uint3;
typedef struct int4 int4;
typedef struct uint4 uint4;
typedef struct long1 long1;
typedef struct ulong1 ulong1;
typedef struct long2 long2;
typedef struct ulong2 ulong2;
typedef struct long3 long3;
typedef struct ulong3 ulong3;
typedef struct long4 long4;
typedef struct ulong4 ulong4;
typedef struct float1 float1;
typedef struct float2 float2;
typedef struct float3 float3;
typedef struct float4 float4;
typedef struct longlong1 longlong1;
typedef struct ulonglong1 ulonglong1;
typedef struct longlong2 longlong2;
typedef struct ulonglong2 ulonglong2;
typedef struct longlong3 longlong3;
typedef struct ulonglong3 ulonglong3;
typedef struct longlong4 longlong4;
typedef struct ulonglong4 ulonglong4;
typedef struct double1 double1;
typedef struct double2 double2;
typedef struct double3 double3;
typedef struct double4 double4;







struct dim3
{
    unsigned int x, y, z;

    dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }

};

typedef struct dim3 dim3;
# 60 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 70 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 2 3
# 1 "/usr/local/cuda/bin/../include/crt/storage_class.h" 1 3
# 71 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 2 3
# 213 "/usr/lib/gcc/x86_64-linux-gnu/4.4.3/include/stddef.h" 2 3
# 126 "/usr/local/cuda/bin/../include/driver_types.h"
# 583 "/usr/local/cuda/bin/../include/driver_types.h"
# 594 "/usr/local/cuda/bin/../include/driver_types.h"
# 606 "/usr/local/cuda/bin/../include/driver_types.h"
struct cudaArray;
# 611 "/usr/local/cuda/bin/../include/driver_types.h"
# 620 "/usr/local/cuda/bin/../include/driver_types.h"
# 633 "/usr/local/cuda/bin/../include/driver_types.h"
# 645 "/usr/local/cuda/bin/../include/driver_types.h"
# 656 "/usr/local/cuda/bin/../include/driver_types.h"
# 666 "/usr/local/cuda/bin/../include/driver_types.h"
# 683 "/usr/local/cuda/bin/../include/driver_types.h"
# 701 "/usr/local/cuda/bin/../include/driver_types.h"
struct cudaGraphicsResource;
# 706 "/usr/local/cuda/bin/../include/driver_types.h"
# 718 "/usr/local/cuda/bin/../include/driver_types.h"
# 728 "/usr/local/cuda/bin/../include/driver_types.h"
# 741 "/usr/local/cuda/bin/../include/driver_types.h"
# 776 "/usr/local/cuda/bin/../include/driver_types.h"
# 826 "/usr/local/cuda/bin/../include/driver_types.h"
# 838 "/usr/local/cuda/bin/../include/driver_types.h"
# 848 "/usr/local/cuda/bin/../include/driver_types.h"
# 859 "/usr/local/cuda/bin/../include/driver_types.h"
# 869 "/usr/local/cuda/bin/../include/driver_types.h"
# 878 "/usr/local/cuda/bin/../include/driver_types.h"
# 993 "/usr/local/cuda/bin/../include/driver_types.h"
# 998 "/usr/local/cuda/bin/../include/driver_types.h"
# 1012 "/usr/local/cuda/bin/../include/driver_types.h"
# 1017 "/usr/local/cuda/bin/../include/driver_types.h"
# 1022 "/usr/local/cuda/bin/../include/driver_types.h"
# 1027 "/usr/local/cuda/bin/../include/driver_types.h"
# 1032 "/usr/local/cuda/bin/../include/driver_types.h"
# 1037 "/usr/local/cuda/bin/../include/driver_types.h"
# 1038 "/usr/local/cuda/bin/../include/driver_types.h"
# 1043 "/usr/local/cuda/bin/../include/driver_types.h"
# 84 "/usr/local/cuda/bin/../include/surface_types.h"
# 94 "/usr/local/cuda/bin/../include/surface_types.h"
# 103 "/usr/local/cuda/bin/../include/surface_types.h"
# 84 "/usr/local/cuda/bin/../include/texture_types.h"
# 95 "/usr/local/cuda/bin/../include/texture_types.h"
# 104 "/usr/local/cuda/bin/../include/texture_types.h"
# 113 "/usr/local/cuda/bin/../include/texture_types.h"
# 94 "/usr/local/cuda/bin/../include/vector_types.h"
# 99 "/usr/local/cuda/bin/../include/vector_types.h"
# 105 "/usr/local/cuda/bin/../include/vector_types.h"
# 110 "/usr/local/cuda/bin/../include/vector_types.h"
# 115 "/usr/local/cuda/bin/../include/vector_types.h"
# 120 "/usr/local/cuda/bin/../include/vector_types.h"
# 125 "/usr/local/cuda/bin/../include/vector_types.h"
# 130 "/usr/local/cuda/bin/../include/vector_types.h"
# 135 "/usr/local/cuda/bin/../include/vector_types.h"
# 140 "/usr/local/cuda/bin/../include/vector_types.h"
# 145 "/usr/local/cuda/bin/../include/vector_types.h"
# 150 "/usr/local/cuda/bin/../include/vector_types.h"
# 155 "/usr/local/cuda/bin/../include/vector_types.h"
# 160 "/usr/local/cuda/bin/../include/vector_types.h"
# 165 "/usr/local/cuda/bin/../include/vector_types.h"
# 166 "/usr/local/cuda/bin/../include/vector_types.h"
# 168 "/usr/local/cuda/bin/../include/vector_types.h"
# 173 "/usr/local/cuda/bin/../include/vector_types.h"
# 178 "/usr/local/cuda/bin/../include/vector_types.h"
# 179 "/usr/local/cuda/bin/../include/vector_types.h"
# 181 "/usr/local/cuda/bin/../include/vector_types.h"
# 186 "/usr/local/cuda/bin/../include/vector_types.h"
# 191 "/usr/local/cuda/bin/../include/vector_types.h"
# 196 "/usr/local/cuda/bin/../include/vector_types.h"
# 201 "/usr/local/cuda/bin/../include/vector_types.h"
# 206 "/usr/local/cuda/bin/../include/vector_types.h"
# 216 "/usr/local/cuda/bin/../include/vector_types.h"
# 221 "/usr/local/cuda/bin/../include/vector_types.h"
# 228 "/usr/local/cuda/bin/../include/vector_types.h"
# 233 "/usr/local/cuda/bin/../include/vector_types.h"
# 238 "/usr/local/cuda/bin/../include/vector_types.h"
# 243 "/usr/local/cuda/bin/../include/vector_types.h"
# 248 "/usr/local/cuda/bin/../include/vector_types.h"
# 253 "/usr/local/cuda/bin/../include/vector_types.h"
# 255 "/usr/local/cuda/bin/../include/vector_types.h"
# 260 "/usr/local/cuda/bin/../include/vector_types.h"
# 265 "/usr/local/cuda/bin/../include/vector_types.h"
# 270 "/usr/local/cuda/bin/../include/vector_types.h"
# 275 "/usr/local/cuda/bin/../include/vector_types.h"
# 280 "/usr/local/cuda/bin/../include/vector_types.h"
# 285 "/usr/local/cuda/bin/../include/vector_types.h"
# 290 "/usr/local/cuda/bin/../include/vector_types.h"
# 295 "/usr/local/cuda/bin/../include/vector_types.h"
# 300 "/usr/local/cuda/bin/../include/vector_types.h"
# 305 "/usr/local/cuda/bin/../include/vector_types.h"
# 310 "/usr/local/cuda/bin/../include/vector_types.h"
# 315 "/usr/local/cuda/bin/../include/vector_types.h"
# 320 "/usr/local/cuda/bin/../include/vector_types.h"
# 338 "/usr/local/cuda/bin/../include/vector_types.h"
# 339 "/usr/local/cuda/bin/../include/vector_types.h"
# 340 "/usr/local/cuda/bin/../include/vector_types.h"
# 341 "/usr/local/cuda/bin/../include/vector_types.h"
# 342 "/usr/local/cuda/bin/../include/vector_types.h"
# 343 "/usr/local/cuda/bin/../include/vector_types.h"
# 344 "/usr/local/cuda/bin/../include/vector_types.h"
# 345 "/usr/local/cuda/bin/../include/vector_types.h"
# 346 "/usr/local/cuda/bin/../include/vector_types.h"
# 347 "/usr/local/cuda/bin/../include/vector_types.h"
# 348 "/usr/local/cuda/bin/../include/vector_types.h"
# 349 "/usr/local/cuda/bin/../include/vector_types.h"
# 350 "/usr/local/cuda/bin/../include/vector_types.h"
# 351 "/usr/local/cuda/bin/../include/vector_types.h"
# 352 "/usr/local/cuda/bin/../include/vector_types.h"
# 353 "/usr/local/cuda/bin/../include/vector_types.h"
# 354 "/usr/local/cuda/bin/../include/vector_types.h"
# 355 "/usr/local/cuda/bin/../include/vector_types.h"
# 356 "/usr/local/cuda/bin/../include/vector_types.h"
# 357 "/usr/local/cuda/bin/../include/vector_types.h"
# 358 "/usr/local/cuda/bin/../include/vector_types.h"
# 359 "/usr/local/cuda/bin/../include/vector_types.h"
# 360 "/usr/local/cuda/bin/../include/vector_types.h"
# 361 "/usr/local/cuda/bin/../include/vector_types.h"
# 362 "/usr/local/cuda/bin/../include/vector_types.h"
# 363 "/usr/local/cuda/bin/../include/vector_types.h"
# 364 "/usr/local/cuda/bin/../include/vector_types.h"
# 365 "/usr/local/cuda/bin/../include/vector_types.h"
# 366 "/usr/local/cuda/bin/../include/vector_types.h"
# 367 "/usr/local/cuda/bin/../include/vector_types.h"
# 368 "/usr/local/cuda/bin/../include/vector_types.h"
# 369 "/usr/local/cuda/bin/../include/vector_types.h"
# 370 "/usr/local/cuda/bin/../include/vector_types.h"
# 371 "/usr/local/cuda/bin/../include/vector_types.h"
# 372 "/usr/local/cuda/bin/../include/vector_types.h"
# 373 "/usr/local/cuda/bin/../include/vector_types.h"
# 374 "/usr/local/cuda/bin/../include/vector_types.h"
# 375 "/usr/local/cuda/bin/../include/vector_types.h"
# 376 "/usr/local/cuda/bin/../include/vector_types.h"
# 377 "/usr/local/cuda/bin/../include/vector_types.h"
# 378 "/usr/local/cuda/bin/../include/vector_types.h"
# 379 "/usr/local/cuda/bin/../include/vector_types.h"
# 380 "/usr/local/cuda/bin/../include/vector_types.h"
# 381 "/usr/local/cuda/bin/../include/vector_types.h"
# 382 "/usr/local/cuda/bin/../include/vector_types.h"
# 383 "/usr/local/cuda/bin/../include/vector_types.h"
# 384 "/usr/local/cuda/bin/../include/vector_types.h"
# 385 "/usr/local/cuda/bin/../include/vector_types.h"
# 393 "/usr/local/cuda/bin/../include/vector_types.h"
# 403 "/usr/local/cuda/bin/../include/vector_types.h"
# 200 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceReset();
# 217 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSynchronize();
# 269 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetLimit(cudaLimit , size_t );
# 293 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetLimit(size_t * , cudaLimit );
# 323 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * );
# 364 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetCacheConfig(cudaFuncCache );
# 393 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * );
# 435 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetSharedMemConfig(cudaSharedMemConfig );
# 458 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetByPCIBusId(int * , char * );
# 485 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetPCIBusId(char * , int , int );
# 527 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcGetEventHandle(cudaIpcEventHandle_t * , cudaEvent_t );
# 562 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcOpenEventHandle(cudaEvent_t * , cudaIpcEventHandle_t );
# 600 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcGetMemHandle(cudaIpcMemHandle_t * , void * );
# 647 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcOpenMemHandle(void ** , cudaIpcMemHandle_t , unsigned );
# 677 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcCloseMemHandle(void * );
# 711 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadExit();
# 735 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSynchronize();
# 794 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetLimit(cudaLimit , size_t );
# 825 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetLimit(size_t * , cudaLimit );
# 860 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetCacheConfig(cudaFuncCache * );
# 906 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetCacheConfig(cudaFuncCache );
# 958 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetLastError();
# 999 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaPeekAtLastError();
# 1013 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" const char *cudaGetErrorString(cudaError_t );
# 1043 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceCount(int * );
# 1246 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceProperties(cudaDeviceProp * , int );
# 1265 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaChooseDevice(int * , const cudaDeviceProp * );
# 1298 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDevice(int );
# 1315 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDevice(int * );
# 1344 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetValidDevices(int * , int );
# 1404 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDeviceFlags(unsigned );
# 1430 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamCreate(cudaStream_t * );
# 1451 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamDestroy(cudaStream_t );
# 1487 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamWaitEvent(cudaStream_t , cudaEvent_t , unsigned );
# 1506 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamSynchronize(cudaStream_t );
# 1524 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamQuery(cudaStream_t );
# 1556 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreate(cudaEvent_t * );
# 1587 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreateWithFlags(cudaEvent_t * , unsigned );
# 1620 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventRecord(cudaEvent_t , cudaStream_t = 0);
# 1649 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventQuery(cudaEvent_t );
# 1681 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventSynchronize(cudaEvent_t );
# 1706 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventDestroy(cudaEvent_t );
# 1747 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventElapsedTime(float * , cudaEvent_t , cudaEvent_t );
# 1786 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaConfigureCall(dim3 , dim3 , size_t = (0), cudaStream_t = 0);
# 1813 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetupArgument(const void * , size_t , size_t );
# 1859 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncSetCacheConfig(const char * , cudaFuncCache );
# 1910 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncSetSharedMemConfig(const char * , cudaSharedMemConfig );
# 1946 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaLaunch(const char * );
# 1979 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * , const char * );
# 2001 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForDevice(double * );
# 2023 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForHost(double * );
# 2055 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc(void ** , size_t );
# 2084 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocHost(void ** , size_t );
# 2123 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocPitch(void ** , size_t * , size_t , size_t );
# 2165 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocArray(cudaArray ** , const cudaChannelFormatDesc * , size_t , size_t = (0), unsigned = (0));
# 2189 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFree(void * );
# 2209 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeHost(void * );
# 2231 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeArray(cudaArray * );
# 2290 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostAlloc(void ** , size_t , unsigned );
# 2343 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostRegister(void * , size_t , unsigned );
# 2362 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostUnregister(void * );
# 2389 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetDevicePointer(void ** , void * , unsigned );
# 2408 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetFlags(unsigned * , void * );
# 2443 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3D(cudaPitchedPtr * , cudaExtent );
# 2543 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3DArray(cudaArray ** , const cudaChannelFormatDesc * , cudaExtent , unsigned = (0));
# 2641 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms * );
# 2669 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * );
# 2773 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * , cudaStream_t = 0);
# 2795 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * , cudaStream_t = 0);
# 2814 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemGetInfo(size_t * , size_t * );
# 2835 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaArrayGetInfo(cudaChannelFormatDesc * , cudaExtent * , unsigned * , cudaArray * );
# 2870 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy(void * , const void * , size_t , cudaMemcpyKind );
# 2902 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyPeer(void * , int , const void * , int , size_t );
# 2936 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArray(cudaArray * , size_t , size_t , const void * , size_t , cudaMemcpyKind );
# 2970 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArray(void * , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind );
# 3005 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyArrayToArray(cudaArray * , size_t , size_t , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind = cudaMemcpyDeviceToDevice);
# 3047 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2D(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind );
# 3089 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArray(cudaArray * , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind );
# 3131 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArray(void * , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind );
# 3171 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DArrayToArray(cudaArray * , size_t , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind = cudaMemcpyDeviceToDevice);
# 3206 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbol(const char * , const void * , size_t , size_t = (0), cudaMemcpyKind = cudaMemcpyHostToDevice);
# 3241 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbol(void * , const char * , size_t , size_t = (0), cudaMemcpyKind = cudaMemcpyDeviceToHost);
# 3283 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyAsync(void * , const void * , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3314 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyPeerAsync(void * , int , const void * , int , size_t , cudaStream_t = 0);
# 3355 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArrayAsync(cudaArray * , size_t , size_t , const void * , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3396 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArrayAsync(void * , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3447 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DAsync(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3497 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArrayAsync(cudaArray * , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3546 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArrayAsync(void * , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3588 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbolAsync(const char * , const void * , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3630 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbolAsync(void * , const char * , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3653 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset(void * , int , size_t );
# 3680 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2D(void * , size_t , int , size_t , size_t );
# 3720 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3D(cudaPitchedPtr , int , cudaExtent );
# 3748 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemsetAsync(void * , int , size_t , cudaStream_t = 0);
# 3781 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2DAsync(void * , size_t , int , size_t , size_t , cudaStream_t = 0);
# 3827 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3DAsync(cudaPitchedPtr , int , cudaExtent , cudaStream_t = 0);
# 3854 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolAddress(void ** , const char * );
# 3876 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolSize(size_t * , const char * );
# 4021 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaPointerGetAttributes(cudaPointerAttributes * , const void * );
# 4055 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceCanAccessPeer(int * , int , int );
# 4096 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceEnablePeerAccess(int , unsigned );
# 4121 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceDisablePeerAccess(int );
# 4167 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource_t );
# 4199 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t , unsigned );
# 4234 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsMapResources(int , cudaGraphicsResource_t * , cudaStream_t = 0);
# 4265 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnmapResources(int , cudaGraphicsResource_t * , cudaStream_t = 0);
# 4294 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceGetMappedPointer(void ** , size_t * , cudaGraphicsResource_t );
# 4328 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray ** , cudaGraphicsResource_t , unsigned , unsigned );
# 4361 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc * , const cudaArray * );
# 4396 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaChannelFormatDesc cudaCreateChannelDesc(int , int , int , int , cudaChannelFormatKind );
# 4443 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t = (((2147483647) * 2U) + 1U));
# 4494 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture2D(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t , size_t , size_t );
# 4522 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTextureToArray(const textureReference * , const cudaArray * , const cudaChannelFormatDesc * );
# 4543 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaUnbindTexture(const textureReference * );
# 4568 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureAlignmentOffset(size_t * , const textureReference * );
# 4602 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureReference(const textureReference ** , const char * );
# 4636 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindSurfaceToArray(const surfaceReference * , const cudaArray * , const cudaChannelFormatDesc * );
# 4664 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSurfaceReference(const surfaceReference ** , const char * );
# 4692 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDriverGetVersion(int * );
# 4709 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaRuntimeGetVersion(int * );
# 4714 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetExportTable(const void ** , const cudaUUID_t * );
# 107 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 108 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 109 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 110 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 112 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 113 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 114 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 116 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 117 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 119 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 120 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 121 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 123 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 124 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 126 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 127 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 128 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 130 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 131 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 133 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 134 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 135 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 137 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 138 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 140 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 141 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 142 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(char)) * 8);
# 147 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 149 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 151 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 152 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 153 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 155 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 156 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 158 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 159 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 160 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 162 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 163 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 165 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 166 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 167 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 169 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 170 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 172 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 173 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 174 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 176 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 177 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 179 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 180 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 181 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 183 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 184 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 186 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 187 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 188 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 190 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 191 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 193 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 194 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 195 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 197 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 198 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 200 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 201 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 202 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 204 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 205 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 207 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 208 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 209 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 211 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 212 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 214 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 215 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 216 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 218 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 219 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 221 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 222 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 223 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 225 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 226 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 228 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 229 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 230 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 232 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 233 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 235 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 236 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 237 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 239 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 240 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 242 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 243 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 244 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 246 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 247 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 249 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 250 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 251 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 253 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 254 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 256 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 257 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 258 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 260 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 261 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 263 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 264 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 265 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 267 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 268 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 270 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 271 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 272 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 274 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 275 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 277 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 278 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 279 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 281 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 282 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 284 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 285 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 286 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 288 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 289 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 291 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 292 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 293 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 295 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 296 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 298 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 299 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 300 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 302 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 303 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 305 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 306 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 307 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 309 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 310 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 312 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 313 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 314 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 316 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 317 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 379 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 380 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 381 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 383 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 384 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 386 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 387 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 388 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 390 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 391 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 393 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 394 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 395 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 397 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 398 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 400 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 401 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 402 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 404 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 405 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 79 "/usr/local/cuda/bin/../include/driver_functions.h"
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz)
# 80 "/usr/local/cuda/bin/../include/driver_functions.h"
{
# 81 "/usr/local/cuda/bin/../include/driver_functions.h"
cudaPitchedPtr s;
# 83 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.ptr) = d;
# 84 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.pitch) = p;
# 85 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.xsize) = xsz;
# 86 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.ysize) = ysz;
# 88 "/usr/local/cuda/bin/../include/driver_functions.h"
return s;
# 89 "/usr/local/cuda/bin/../include/driver_functions.h"
}
# 106 "/usr/local/cuda/bin/../include/driver_functions.h"
static inline cudaPos make_cudaPos(size_t x, size_t y, size_t z)
# 107 "/usr/local/cuda/bin/../include/driver_functions.h"
{
# 108 "/usr/local/cuda/bin/../include/driver_functions.h"
cudaPos p;
# 110 "/usr/local/cuda/bin/../include/driver_functions.h"
(p.x) = x;
# 111 "/usr/local/cuda/bin/../include/driver_functions.h"
(p.y) = y;
# 112 "/usr/local/cuda/bin/../include/driver_functions.h"
(p.z) = z;
# 114 "/usr/local/cuda/bin/../include/driver_functions.h"
return p;
# 115 "/usr/local/cuda/bin/../include/driver_functions.h"
}
# 132 "/usr/local/cuda/bin/../include/driver_functions.h"
static inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d)
# 133 "/usr/local/cuda/bin/../include/driver_functions.h"
{
# 134 "/usr/local/cuda/bin/../include/driver_functions.h"
cudaExtent e;
# 136 "/usr/local/cuda/bin/../include/driver_functions.h"
(e.width) = w;
# 137 "/usr/local/cuda/bin/../include/driver_functions.h"
(e.height) = h;
# 138 "/usr/local/cuda/bin/../include/driver_functions.h"
(e.depth) = d;
# 140 "/usr/local/cuda/bin/../include/driver_functions.h"
return e;
# 141 "/usr/local/cuda/bin/../include/driver_functions.h"
}
# 69 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char1 make_char1(signed char x)
# 70 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 71 "/usr/local/cuda/bin/../include/vector_functions.h"
char1 t; (t.x) = x; return t;
# 72 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 74 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar1 make_uchar1(unsigned char x)
# 75 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 76 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar1 t; (t.x) = x; return t;
# 77 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 79 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char2 make_char2(signed char x, signed char y)
# 80 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 81 "/usr/local/cuda/bin/../include/vector_functions.h"
char2 t; (t.x) = x; (t.y) = y; return t;
# 82 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 84 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 85 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 86 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 87 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 89 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 90 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 91 "/usr/local/cuda/bin/../include/vector_functions.h"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 92 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 94 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 95 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 96 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 97 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 99 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 100 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 101 "/usr/local/cuda/bin/../include/vector_functions.h"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 102 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 104 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 105 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 106 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 107 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 109 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short1 make_short1(short x)
# 110 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 111 "/usr/local/cuda/bin/../include/vector_functions.h"
short1 t; (t.x) = x; return t;
# 112 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 114 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort1 make_ushort1(unsigned short x)
# 115 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 116 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort1 t; (t.x) = x; return t;
# 117 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 119 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short2 make_short2(short x, short y)
# 120 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 121 "/usr/local/cuda/bin/../include/vector_functions.h"
short2 t; (t.x) = x; (t.y) = y; return t;
# 122 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 124 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 125 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 126 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 127 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 129 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short3 make_short3(short x, short y, short z)
# 130 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 131 "/usr/local/cuda/bin/../include/vector_functions.h"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 132 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 134 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 135 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 136 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 137 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 139 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short4 make_short4(short x, short y, short z, short w)
# 140 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 141 "/usr/local/cuda/bin/../include/vector_functions.h"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 142 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 144 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 145 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 146 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 147 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 149 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int1 make_int1(int x)
# 150 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 151 "/usr/local/cuda/bin/../include/vector_functions.h"
int1 t; (t.x) = x; return t;
# 152 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 154 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint1 make_uint1(unsigned x)
# 155 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 156 "/usr/local/cuda/bin/../include/vector_functions.h"
uint1 t; (t.x) = x; return t;
# 157 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 159 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int2 make_int2(int x, int y)
# 160 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 161 "/usr/local/cuda/bin/../include/vector_functions.h"
int2 t; (t.x) = x; (t.y) = y; return t;
# 162 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 164 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint2 make_uint2(unsigned x, unsigned y)
# 165 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 166 "/usr/local/cuda/bin/../include/vector_functions.h"
uint2 t; (t.x) = x; (t.y) = y; return t;
# 167 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 169 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int3 make_int3(int x, int y, int z)
# 170 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 171 "/usr/local/cuda/bin/../include/vector_functions.h"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 172 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 174 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 175 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 176 "/usr/local/cuda/bin/../include/vector_functions.h"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 177 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 179 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int4 make_int4(int x, int y, int z, int w)
# 180 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 181 "/usr/local/cuda/bin/../include/vector_functions.h"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 182 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 184 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 185 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 186 "/usr/local/cuda/bin/../include/vector_functions.h"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 187 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 189 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long1 make_long1(long x)
# 190 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 191 "/usr/local/cuda/bin/../include/vector_functions.h"
long1 t; (t.x) = x; return t;
# 192 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 194 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong1 make_ulong1(unsigned long x)
# 195 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 196 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong1 t; (t.x) = x; return t;
# 197 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 199 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long2 make_long2(long x, long y)
# 200 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 201 "/usr/local/cuda/bin/../include/vector_functions.h"
long2 t; (t.x) = x; (t.y) = y; return t;
# 202 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 204 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 205 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 206 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 207 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 209 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long3 make_long3(long x, long y, long z)
# 210 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 211 "/usr/local/cuda/bin/../include/vector_functions.h"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 212 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 214 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 215 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 216 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 217 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 219 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long4 make_long4(long x, long y, long z, long w)
# 220 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 221 "/usr/local/cuda/bin/../include/vector_functions.h"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 222 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 224 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 225 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 226 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 227 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 229 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float1 make_float1(float x)
# 230 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 231 "/usr/local/cuda/bin/../include/vector_functions.h"
float1 t; (t.x) = x; return t;
# 232 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 234 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float2 make_float2(float x, float y)
# 235 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 236 "/usr/local/cuda/bin/../include/vector_functions.h"
float2 t; (t.x) = x; (t.y) = y; return t;
# 237 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 239 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float3 make_float3(float x, float y, float z)
# 240 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 241 "/usr/local/cuda/bin/../include/vector_functions.h"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 242 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 244 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float4 make_float4(float x, float y, float z, float w)
# 245 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 246 "/usr/local/cuda/bin/../include/vector_functions.h"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 247 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 249 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong1 make_longlong1(long long x)
# 250 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 251 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong1 t; (t.x) = x; return t;
# 252 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 254 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 255 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 256 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong1 t; (t.x) = x; return t;
# 257 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 259 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong2 make_longlong2(long long x, long long y)
# 260 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 261 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 262 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 264 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 265 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 266 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 267 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 269 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 270 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 271 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 272 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 274 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 275 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 276 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 277 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 279 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 280 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 281 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 282 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 284 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 285 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 286 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 287 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 289 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double1 make_double1(double x)
# 290 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 291 "/usr/local/cuda/bin/../include/vector_functions.h"
double1 t; (t.x) = x; return t;
# 292 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 294 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double2 make_double2(double x, double y)
# 295 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 296 "/usr/local/cuda/bin/../include/vector_functions.h"
double2 t; (t.x) = x; (t.y) = y; return t;
# 297 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 299 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double3 make_double3(double x, double y, double z)
# 300 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 301 "/usr/local/cuda/bin/../include/vector_functions.h"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 302 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 304 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double4 make_double4(double x, double y, double z, double w)
# 305 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 306 "/usr/local/cuda/bin/../include/vector_functions.h"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 307 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 43 "/usr/include/string.h" 3
extern "C" void *memcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 45 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 48 "/usr/include/string.h" 3
extern "C" void *memmove(void * , const void * , size_t ) throw()
# 49 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 56 "/usr/include/string.h" 3
extern "C" void *memccpy(void *__restrict__ , const void *__restrict__ , int , size_t ) throw()
# 58 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 64 "/usr/include/string.h" 3
extern "C" void *memset(void * , int , size_t ) throw() __attribute((__nonnull__(1)));
# 67 "/usr/include/string.h" 3
extern "C" int memcmp(const void * , const void * , size_t ) throw()
# 68 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 74 "/usr/include/string.h" 3
extern void *memchr(void * , int , size_t ) throw() __asm__("memchr")
# 75 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 76 "/usr/include/string.h" 3
extern const void *memchr(const void * , int , size_t ) throw() __asm__("memchr")
# 77 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 103 "/usr/include/string.h" 3
void *rawmemchr(void * , int ) throw() __asm__("rawmemchr")
# 104 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 105 "/usr/include/string.h" 3
const void *rawmemchr(const void * , int ) throw() __asm__("rawmemchr")
# 106 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 114 "/usr/include/string.h" 3
void *memrchr(void * , int , size_t ) throw() __asm__("memrchr")
# 115 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 116 "/usr/include/string.h" 3
const void *memrchr(const void * , int , size_t ) throw() __asm__("memrchr")
# 117 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 127 "/usr/include/string.h" 3
extern "C" char *strcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 128 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 130 "/usr/include/string.h" 3
extern "C" char *strncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 132 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 135 "/usr/include/string.h" 3
extern "C" char *strcat(char *__restrict__ , const char *__restrict__ ) throw()
# 136 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 138 "/usr/include/string.h" 3
extern "C" char *strncat(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 139 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 142 "/usr/include/string.h" 3
extern "C" int strcmp(const char * , const char * ) throw()
# 143 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 145 "/usr/include/string.h" 3
extern "C" int strncmp(const char * , const char * , size_t ) throw()
# 146 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 149 "/usr/include/string.h" 3
extern "C" int strcoll(const char * , const char * ) throw()
# 150 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 152 "/usr/include/string.h" 3
extern "C" size_t strxfrm(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 154 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 40 "/usr/include/xlocale.h" 3
extern "C" { typedef
# 28 "/usr/include/xlocale.h" 3
struct __locale_struct {
# 31 "/usr/include/xlocale.h" 3
struct locale_data *__locales[13];
# 34 "/usr/include/xlocale.h" 3
const unsigned short *__ctype_b;
# 35 "/usr/include/xlocale.h" 3
const int *__ctype_tolower;
# 36 "/usr/include/xlocale.h" 3
const int *__ctype_toupper;
# 39 "/usr/include/xlocale.h" 3
const char *__names[13];
# 40 "/usr/include/xlocale.h" 3
} *__locale_t; }
# 43 "/usr/include/xlocale.h" 3
extern "C" { typedef __locale_t locale_t; }
# 164 "/usr/include/string.h" 3
extern "C" int strcoll_l(const char * , const char * , __locale_t ) throw()
# 165 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 167 "/usr/include/string.h" 3
extern "C" size_t strxfrm_l(char * , const char * , size_t , __locale_t ) throw()
# 168 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 4)));
# 173 "/usr/include/string.h" 3
extern "C" char *strdup(const char * ) throw()
# 174 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 181 "/usr/include/string.h" 3
extern "C" char *strndup(const char * , size_t ) throw()
# 182 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 213 "/usr/include/string.h" 3
extern char *strchr(char * , int ) throw() __asm__("strchr")
# 214 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 215 "/usr/include/string.h" 3
extern const char *strchr(const char * , int ) throw() __asm__("strchr")
# 216 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 240 "/usr/include/string.h" 3
extern char *strrchr(char * , int ) throw() __asm__("strrchr")
# 241 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 242 "/usr/include/string.h" 3
extern const char *strrchr(const char * , int ) throw() __asm__("strrchr")
# 243 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 269 "/usr/include/string.h" 3
char *strchrnul(char * , int ) throw() __asm__("strchrnul")
# 270 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 271 "/usr/include/string.h" 3
const char *strchrnul(const char * , int ) throw() __asm__("strchrnul")
# 272 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 282 "/usr/include/string.h" 3
extern "C" size_t strcspn(const char * , const char * ) throw()
# 283 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 286 "/usr/include/string.h" 3
extern "C" size_t strspn(const char * , const char * ) throw()
# 287 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 292 "/usr/include/string.h" 3
extern char *strpbrk(char * , const char * ) throw() __asm__("strpbrk")
# 293 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 294 "/usr/include/string.h" 3
extern const char *strpbrk(const char * , const char * ) throw() __asm__("strpbrk")
# 295 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 319 "/usr/include/string.h" 3
extern char *strstr(char * , const char * ) throw() __asm__("strstr")
# 320 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 321 "/usr/include/string.h" 3
extern const char *strstr(const char * , const char * ) throw() __asm__("strstr")
# 323 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 346 "/usr/include/string.h" 3
extern "C" char *strtok(char *__restrict__ , const char *__restrict__ ) throw()
# 347 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 352 "/usr/include/string.h" 3
extern "C" char *__strtok_r(char *__restrict__ , const char *__restrict__ , char **__restrict__ ) throw()
# 355 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 357 "/usr/include/string.h" 3
extern "C" char *strtok_r(char *__restrict__ , const char *__restrict__ , char **__restrict__ ) throw()
# 359 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 365 "/usr/include/string.h" 3
char *strcasestr(char * , const char * ) throw() __asm__("strcasestr")
# 366 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 367 "/usr/include/string.h" 3
const char *strcasestr(const char * , const char * ) throw() __asm__("strcasestr")
# 369 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 380 "/usr/include/string.h" 3
extern "C" void *memmem(const void * , size_t , const void * , size_t ) throw()
# 382 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 3)));
# 386 "/usr/include/string.h" 3
extern "C" void *__mempcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 388 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 389 "/usr/include/string.h" 3
extern "C" void *mempcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 391 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 397 "/usr/include/string.h" 3
extern "C" size_t strlen(const char * ) throw()
# 398 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 404 "/usr/include/string.h" 3
extern "C" size_t strnlen(const char * , size_t ) throw()
# 405 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 411 "/usr/include/string.h" 3
extern "C" char *strerror(int ) throw();
# 436 "/usr/include/string.h" 3
extern "C" char *strerror_r(int , char * , size_t ) throw()
# 437 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 443 "/usr/include/string.h" 3
extern "C" char *strerror_l(int , __locale_t ) throw();
# 449 "/usr/include/string.h" 3
extern "C" void __bzero(void * , size_t ) throw() __attribute((__nonnull__(1)));
# 453 "/usr/include/string.h" 3
extern "C" void bcopy(const void * , void * , size_t ) throw()
# 454 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 457 "/usr/include/string.h" 3
extern "C" void bzero(void * , size_t ) throw() __attribute((__nonnull__(1)));
# 460 "/usr/include/string.h" 3
extern "C" int bcmp(const void * , const void * , size_t ) throw()
# 461 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 467 "/usr/include/string.h" 3
extern char *index(char * , int ) throw() __asm__("index")
# 468 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 469 "/usr/include/string.h" 3
extern const char *index(const char * , int ) throw() __asm__("index")
# 470 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 495 "/usr/include/string.h" 3
extern char *rindex(char * , int ) throw() __asm__("rindex")
# 496 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 497 "/usr/include/string.h" 3
extern const char *rindex(const char * , int ) throw() __asm__("rindex")
# 498 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 521 "/usr/include/string.h" 3
extern "C" int ffs(int ) throw() __attribute((const));
# 526 "/usr/include/string.h" 3
extern "C" int ffsl(long ) throw() __attribute((const));
# 528 "/usr/include/string.h" 3
extern "C" int ffsll(long long ) throw()
# 529 "/usr/include/string.h" 3
 __attribute((const));
# 534 "/usr/include/string.h" 3
extern "C" int strcasecmp(const char * , const char * ) throw()
# 535 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 538 "/usr/include/string.h" 3
extern "C" int strncasecmp(const char * , const char * , size_t ) throw()
# 539 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 545 "/usr/include/string.h" 3
extern "C" int strcasecmp_l(const char * , const char * , __locale_t ) throw()
# 547 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 549 "/usr/include/string.h" 3
extern "C" int strncasecmp_l(const char * , const char * , size_t , __locale_t ) throw()
# 551 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 4)));
# 557 "/usr/include/string.h" 3
extern "C" char *strsep(char **__restrict__ , const char *__restrict__ ) throw()
# 559 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 564 "/usr/include/string.h" 3
extern "C" char *strsignal(int ) throw();
# 567 "/usr/include/string.h" 3
extern "C" char *__stpcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 568 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 569 "/usr/include/string.h" 3
extern "C" char *stpcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 570 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 574 "/usr/include/string.h" 3
extern "C" char *__stpncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 576 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 577 "/usr/include/string.h" 3
extern "C" char *stpncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 579 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 584 "/usr/include/string.h" 3
extern "C" int strverscmp(const char * , const char * ) throw()
# 585 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 588 "/usr/include/string.h" 3
extern "C" char *strfry(char * ) throw() __attribute((__nonnull__(1)));
# 591 "/usr/include/string.h" 3
extern "C" void *memfrob(void * , size_t ) throw() __attribute((__nonnull__(1)));
# 599 "/usr/include/string.h" 3
char *basename(char * ) throw() __asm__("basename")
# 600 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 601 "/usr/include/string.h" 3
const char *basename(const char * ) throw() __asm__("basename")
# 602 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 31 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned char __u_char; }
# 32 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned short __u_short; }
# 33 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __u_int; }
# 34 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __u_long; }
# 37 "/usr/include/bits/types.h" 3
extern "C" { typedef signed char __int8_t; }
# 38 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned char __uint8_t; }
# 39 "/usr/include/bits/types.h" 3
extern "C" { typedef signed short __int16_t; }
# 40 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned short __uint16_t; }
# 41 "/usr/include/bits/types.h" 3
extern "C" { typedef signed int __int32_t; }
# 42 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __uint32_t; }
# 44 "/usr/include/bits/types.h" 3
extern "C" { typedef signed long __int64_t; }
# 45 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __uint64_t; }
# 53 "/usr/include/bits/types.h" 3
extern "C" { typedef long __quad_t; }
# 54 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __u_quad_t; }
# 134 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __dev_t; }
# 135 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __uid_t; }
# 136 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __gid_t; }
# 137 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __ino_t; }
# 138 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __ino64_t; }
# 139 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __mode_t; }
# 140 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __nlink_t; }
# 141 "/usr/include/bits/types.h" 3
extern "C" { typedef long __off_t; }
# 142 "/usr/include/bits/types.h" 3
extern "C" { typedef long __off64_t; }
# 143 "/usr/include/bits/types.h" 3
extern "C" { typedef int __pid_t; }
# 144 "/usr/include/bits/types.h" 3
extern "C" { typedef struct { int __val[2]; } __fsid_t; }
# 145 "/usr/include/bits/types.h" 3
extern "C" { typedef long __clock_t; }
# 146 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __rlim_t; }
# 147 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __rlim64_t; }
# 148 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __id_t; }
# 149 "/usr/include/bits/types.h" 3
extern "C" { typedef long __time_t; }
# 150 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __useconds_t; }
# 151 "/usr/include/bits/types.h" 3
extern "C" { typedef long __suseconds_t; }
# 153 "/usr/include/bits/types.h" 3
extern "C" { typedef int __daddr_t; }
# 154 "/usr/include/bits/types.h" 3
extern "C" { typedef long __swblk_t; }
# 155 "/usr/include/bits/types.h" 3
extern "C" { typedef int __key_t; }
# 158 "/usr/include/bits/types.h" 3
extern "C" { typedef int __clockid_t; }
# 161 "/usr/include/bits/types.h" 3
extern "C" { typedef void *__timer_t; }
# 164 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blksize_t; }
# 169 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blkcnt_t; }
# 170 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blkcnt64_t; }
# 173 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsblkcnt_t; }
# 174 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsblkcnt64_t; }
# 177 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsfilcnt_t; }
# 178 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsfilcnt64_t; }
# 180 "/usr/include/bits/types.h" 3
extern "C" { typedef long __ssize_t; }
# 184 "/usr/include/bits/types.h" 3
extern "C" { typedef __off64_t __loff_t; }
# 185 "/usr/include/bits/types.h" 3
extern "C" { typedef __quad_t *__qaddr_t; }
# 186 "/usr/include/bits/types.h" 3
extern "C" { typedef char *__caddr_t; }
# 189 "/usr/include/bits/types.h" 3
extern "C" { typedef long __intptr_t; }
# 192 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __socklen_t; }
# 60 "/usr/include/time.h" 3
extern "C" { typedef __clock_t clock_t; }
# 76 "/usr/include/time.h" 3
extern "C" { typedef __time_t time_t; }
# 92 "/usr/include/time.h" 3
extern "C" { typedef __clockid_t clockid_t; }
# 104 "/usr/include/time.h" 3
extern "C" { typedef __timer_t timer_t; }
# 120 "/usr/include/time.h" 3
extern "C" { struct timespec {
# 122 "/usr/include/time.h" 3
__time_t tv_sec;
# 123 "/usr/include/time.h" 3
long tv_nsec;
# 124 "/usr/include/time.h" 3
}; }
# 133 "/usr/include/time.h" 3
extern "C" { struct tm {
# 135 "/usr/include/time.h" 3
int tm_sec;
# 136 "/usr/include/time.h" 3
int tm_min;
# 137 "/usr/include/time.h" 3
int tm_hour;
# 138 "/usr/include/time.h" 3
int tm_mday;
# 139 "/usr/include/time.h" 3
int tm_mon;
# 140 "/usr/include/time.h" 3
int tm_year;
# 141 "/usr/include/time.h" 3
int tm_wday;
# 142 "/usr/include/time.h" 3
int tm_yday;
# 143 "/usr/include/time.h" 3
int tm_isdst;
# 146 "/usr/include/time.h" 3
long tm_gmtoff;
# 147 "/usr/include/time.h" 3
const char *tm_zone;
# 152 "/usr/include/time.h" 3
}; }
# 161 "/usr/include/time.h" 3
extern "C" { struct itimerspec {
# 163 "/usr/include/time.h" 3
timespec it_interval;
# 164 "/usr/include/time.h" 3
timespec it_value;
# 165 "/usr/include/time.h" 3
}; }
# 168 "/usr/include/time.h" 3
struct sigevent;
# 174 "/usr/include/time.h" 3
extern "C" { typedef __pid_t pid_t; }
# 183 "/usr/include/time.h" 3
extern "C" clock_t clock() throw();
# 186 "/usr/include/time.h" 3
extern "C" time_t time(time_t * ) throw();
# 189 "/usr/include/time.h" 3
extern "C" double difftime(time_t , time_t ) throw()
# 190 "/usr/include/time.h" 3
 __attribute((const));
# 193 "/usr/include/time.h" 3
extern "C" time_t mktime(tm * ) throw();
# 199 "/usr/include/time.h" 3
extern "C" size_t strftime(char *__restrict__ , size_t , const char *__restrict__ , const tm *__restrict__ ) throw();
# 207 "/usr/include/time.h" 3
extern "C" char *strptime(const char *__restrict__ , const char *__restrict__ , tm * ) throw();
# 217 "/usr/include/time.h" 3
extern "C" size_t strftime_l(char *__restrict__ , size_t , const char *__restrict__ , const tm *__restrict__ , __locale_t ) throw();
# 224 "/usr/include/time.h" 3
extern "C" char *strptime_l(const char *__restrict__ , const char *__restrict__ , tm * , __locale_t ) throw();
# 233 "/usr/include/time.h" 3
extern "C" tm *gmtime(const time_t * ) throw();
# 237 "/usr/include/time.h" 3
extern "C" tm *localtime(const time_t * ) throw();
# 243 "/usr/include/time.h" 3
extern "C" tm *gmtime_r(const time_t *__restrict__ , tm *__restrict__ ) throw();
# 248 "/usr/include/time.h" 3
extern "C" tm *localtime_r(const time_t *__restrict__ , tm *__restrict__ ) throw();
# 255 "/usr/include/time.h" 3
extern "C" char *asctime(const tm * ) throw();
# 258 "/usr/include/time.h" 3
extern "C" char *ctime(const time_t * ) throw();
# 266 "/usr/include/time.h" 3
extern "C" char *asctime_r(const tm *__restrict__ , char *__restrict__ ) throw();
# 270 "/usr/include/time.h" 3
extern "C" char *ctime_r(const time_t *__restrict__ , char *__restrict__ ) throw();
# 276 "/usr/include/time.h" 3
extern "C" { extern char *__tzname[2]; }
# 277 "/usr/include/time.h" 3
extern "C" { extern int __daylight; }
# 278 "/usr/include/time.h" 3
extern "C" { extern long __timezone; }
# 283 "/usr/include/time.h" 3
extern "C" { extern char *tzname[2]; }
# 287 "/usr/include/time.h" 3
extern "C" void tzset() throw();
# 291 "/usr/include/time.h" 3
extern "C" { extern int daylight; }
# 292 "/usr/include/time.h" 3
extern "C" { extern long timezone; }
# 298 "/usr/include/time.h" 3
extern "C" int stime(const time_t * ) throw();
# 313 "/usr/include/time.h" 3
extern "C" time_t timegm(tm * ) throw();
# 316 "/usr/include/time.h" 3
extern "C" time_t timelocal(tm * ) throw();
# 319 "/usr/include/time.h" 3
extern "C" int dysize(int ) throw() __attribute((const));
# 328 "/usr/include/time.h" 3
extern "C" int nanosleep(const timespec * , timespec * );
# 333 "/usr/include/time.h" 3
extern "C" int clock_getres(clockid_t , timespec * ) throw();
# 336 "/usr/include/time.h" 3
extern "C" int clock_gettime(clockid_t , timespec * ) throw();
# 339 "/usr/include/time.h" 3
extern "C" int clock_settime(clockid_t , const timespec * ) throw();
# 347 "/usr/include/time.h" 3
extern "C" int clock_nanosleep(clockid_t , int , const timespec * , timespec * );
# 352 "/usr/include/time.h" 3
extern "C" int clock_getcpuclockid(pid_t , clockid_t * ) throw();
# 357 "/usr/include/time.h" 3
extern "C" int timer_create(clockid_t , sigevent *__restrict__ , timer_t *__restrict__ ) throw();
# 362 "/usr/include/time.h" 3
extern "C" int timer_delete(timer_t ) throw();
# 365 "/usr/include/time.h" 3
extern "C" int timer_settime(timer_t , int , const itimerspec *__restrict__ , itimerspec *__restrict__ ) throw();
# 370 "/usr/include/time.h" 3
extern "C" int timer_gettime(timer_t , itimerspec * ) throw();
# 374 "/usr/include/time.h" 3
extern "C" int timer_getoverrun(timer_t ) throw();
# 390 "/usr/include/time.h" 3
extern "C" { extern int getdate_err; }
# 399 "/usr/include/time.h" 3
extern "C" tm *getdate(const char * );
# 413 "/usr/include/time.h" 3
extern "C" int getdate_r(const char *__restrict__ , tm *__restrict__ );
# 69 "/usr/local/cuda/bin/../include/common_functions.h"
extern "C" clock_t clock() throw();
# 70 "/usr/local/cuda/bin/../include/common_functions.h"
extern "C" void *memset(void *, int, size_t) throw();
# 71 "/usr/local/cuda/bin/../include/common_functions.h"
extern "C" void *memcpy(void *, const void *, size_t) throw();
# 160 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int abs(int) throw();
# 161 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long labs(long) throw();
# 162 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long long llabs(long long) throw();
# 175 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double fabs(double ) throw();
# 188 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float fabsf(float ) throw();
# 189 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int min(int, int);
# 190 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" unsigned umin(unsigned, unsigned);
# 191 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long long llmin(long long, long long);
# 192 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" unsigned long long ullmin(unsigned long long, unsigned long long);
# 208 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float fminf(float , float ) throw();
# 224 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double fmin(double , double ) throw();
# 225 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int max(int, int);
# 226 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" unsigned umax(unsigned, unsigned);
# 227 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long long llmax(long long, long long);
# 228 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" unsigned long long ullmax(unsigned long long, unsigned long long);
# 244 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float fmaxf(float , float ) throw();
# 260 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double fmax(double, double) throw();
# 273 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double sin(double ) throw();
# 286 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double cos(double ) throw();
# 301 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" void sincos(double , double * , double * ) throw();
# 317 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" void sincosf(float , float * , float * ) throw();
# 330 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double tan(double ) throw();
# 345 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double sqrt(double ) throw();
# 360 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double rsqrt(double );
# 375 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float rsqrtf(float );
# 390 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double log2(double ) throw();
# 401 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double exp2(double ) throw();
# 412 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float exp2f(float ) throw();
# 423 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double exp10(double ) throw();
# 435 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float exp10f(float ) throw();
# 446 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double expm1(double ) throw();
# 457 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float expm1f(float ) throw();
# 472 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float log2f(float ) throw();
# 487 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double log10(double ) throw();
# 502 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double log(double ) throw();
# 517 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double log1p(double ) throw();
# 532 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float log1pf(float ) throw();
# 546 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double floor(double ) throw();
# 557 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double exp(double ) throw();
# 570 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double cosh(double ) throw();
# 582 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double sinh(double ) throw();
# 594 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double tanh(double ) throw();
# 608 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double acosh(double ) throw();
# 622 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float acoshf(float ) throw();
# 634 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double asinh(double ) throw();
# 646 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float asinhf(float ) throw();
# 660 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double atanh(double ) throw();
# 674 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float atanhf(float ) throw();
# 686 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double ldexp(double , int ) throw();
# 698 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float ldexpf(float , int ) throw();
# 711 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double logb(double ) throw();
# 724 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float logbf(float ) throw();
# 742 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int ilogb(double ) throw();
# 760 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int ilogbf(float ) throw();
# 774 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double scalbn(double , int ) throw();
# 788 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float scalbnf(float , int ) throw();
# 802 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double scalbln(double , long ) throw();
# 816 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float scalblnf(float , long ) throw();
# 837 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double frexp(double , int * ) throw();
# 858 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float frexpf(float , int * ) throw();
# 871 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double round(double ) throw();
# 884 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float roundf(float ) throw();
# 898 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long lround(double ) throw();
# 912 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long lroundf(float ) throw();
# 926 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long long llround(double ) throw();
# 940 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long long llroundf(float ) throw();
# 951 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double rint(double ) throw();
# 962 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float rintf(float ) throw();
# 974 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long lrint(double ) throw();
# 986 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long lrintf(float ) throw();
# 998 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long long llrint(double ) throw();
# 1010 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long long llrintf(float ) throw();
# 1023 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double nearbyint(double ) throw();
# 1036 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float nearbyintf(float ) throw();
# 1048 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double ceil(double ) throw();
# 1059 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double trunc(double ) throw();
# 1070 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float truncf(float ) throw();
# 1084 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double fdim(double , double ) throw();
# 1098 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float fdimf(float , float ) throw();
# 1113 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double atan2(double , double ) throw();
# 1126 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double atan(double ) throw();
# 1140 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double acos(double ) throw();
# 1154 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double asin(double ) throw();
# 1169 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double hypot(double , double ) throw();
# 1186 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float hypotf(float , float ) throw();
# 1200 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double cbrt(double ) throw();
# 1214 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float cbrtf(float ) throw();
# 1227 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double rcbrt(double );
# 1240 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float rcbrtf(float );
# 1254 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double sinpi(double );
# 1268 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float sinpif(float );
# 1282 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double cospi(double );
# 1296 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float cospif(float );
# 1324 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double pow(double , double ) throw();
# 1341 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double modf(double , double * ) throw();
# 1361 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double fmod(double , double ) throw();
# 1379 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double remainder(double , double ) throw();
# 1398 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float remainderf(float , float ) throw();
# 1417 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double remquo(double , double , int * ) throw();
# 1436 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float remquof(float , float , int * ) throw();
# 1451 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double j0(double ) throw();
# 1466 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float j0f(float ) throw();
# 1482 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double j1(double ) throw();
# 1498 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float j1f(float ) throw();
# 1514 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double jn(int , double ) throw();
# 1530 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float jnf(int , float ) throw();
# 1547 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double y0(double ) throw();
# 1564 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float y0f(float ) throw();
# 1581 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double y1(double ) throw();
# 1598 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float y1f(float ) throw();
# 1616 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double yn(int , double ) throw();
# 1634 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float ynf(int , float ) throw();
# 1648 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double erf(double ) throw();
# 1662 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float erff(float ) throw();
# 1677 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double erfinv(double );
# 1692 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float erfinvf(float );
# 1706 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double erfc(double ) throw();
# 1720 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float erfcf(float ) throw();
# 1738 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double lgamma(double ) throw();
# 1753 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double erfcinv(double );
# 1768 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float erfcinvf(float );
# 1778 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double erfcx(double );
# 1788 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float erfcxf(float );
# 1806 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float lgammaf(float ) throw();
# 1824 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double tgamma(double ) throw();
# 1842 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float tgammaf(float ) throw();
# 1851 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double copysign(double , double ) throw();
# 1860 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float copysignf(float , float ) throw();
# 1875 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double nextafter(double , double ) throw();
# 1890 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float nextafterf(float , float ) throw();
# 1902 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double nan(const char * ) throw();
# 1914 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float nanf(const char * ) throw();
# 1915 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __isinff(float) throw();
# 1916 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __isnanf(float) throw();
# 1925 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __finite(double) throw();
# 1926 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __finitef(float) throw();
# 1927 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __signbit(double) throw();
# 1928 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __isnan(double) throw();
# 1929 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __isinf(double) throw();
# 1932 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __signbitf(float) throw();
# 1949 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double fma(double , double , double ) throw();
# 1966 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float fmaf(float , float , float ) throw();
# 1971 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __signbitl(long double) throw();
# 1977 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __finitel(long double) throw();
# 1978 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __isinfl(long double) throw();
# 1979 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __isnanl(long double) throw();
# 2017 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float acosf(float ) throw();
# 2031 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float asinf(float ) throw();
# 2045 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float atanf(float ) throw();
# 2060 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float atan2f(float , float ) throw();
# 2074 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float cosf(float ) throw();
# 2088 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float sinf(float ) throw();
# 2102 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float tanf(float ) throw();
# 2116 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float coshf(float ) throw();
# 2129 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float sinhf(float ) throw();
# 2141 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float tanhf(float ) throw();
# 2156 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float logf(float ) throw();
# 2168 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float expf(float ) throw();
# 2183 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float log10f(float ) throw();
# 2199 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float modff(float , float * ) throw();
# 2227 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float powf(float , float ) throw();
# 2242 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float sqrtf(float ) throw();
# 2254 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float ceilf(float ) throw();
# 2268 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float floorf(float ) throw();
# 2288 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float fmodf(float , float ) throw();
# 31 "/usr/include/bits/mathdef.h" 3
extern "C" { typedef float float_t; }
# 32 "/usr/include/bits/mathdef.h" 3
extern "C" { typedef double double_t; }
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" double acos(double ) throw(); extern "C" double __acos(double ) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" double asin(double ) throw(); extern "C" double __asin(double ) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" double atan(double ) throw(); extern "C" double __atan(double ) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" double atan2(double , double ) throw(); extern "C" double __atan2(double , double ) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" double cos(double ) throw(); extern "C" double __cos(double ) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" double sin(double ) throw(); extern "C" double __sin(double ) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" double tan(double ) throw(); extern "C" double __tan(double ) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" double cosh(double ) throw(); extern "C" double __cosh(double ) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" double sinh(double ) throw(); extern "C" double __sinh(double ) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" double tanh(double ) throw(); extern "C" double __tanh(double ) throw();
# 82 "/usr/include/bits/mathcalls.h" 3
extern "C" void sincos(double , double * , double * ) throw(); extern "C" void __sincos(double , double * , double * ) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" double acosh(double ) throw(); extern "C" double __acosh(double ) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" double asinh(double ) throw(); extern "C" double __asinh(double ) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" double atanh(double ) throw(); extern "C" double __atanh(double ) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" double exp(double ) throw(); extern "C" double __exp(double ) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" double frexp(double , int * ) throw(); extern "C" double __frexp(double , int * ) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" double ldexp(double , int ) throw(); extern "C" double __ldexp(double , int ) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" double log(double ) throw(); extern "C" double __log(double ) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" double log10(double ) throw(); extern "C" double __log10(double ) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" double modf(double , double * ) throw(); extern "C" double __modf(double , double * ) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" double exp10(double ) throw(); extern "C" double __exp10(double ) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" double pow10(double ) throw(); extern "C" double __pow10(double ) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" double expm1(double ) throw(); extern "C" double __expm1(double ) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" double log1p(double ) throw(); extern "C" double __log1p(double ) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" double logb(double ) throw(); extern "C" double __logb(double ) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" double exp2(double ) throw(); extern "C" double __exp2(double ) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" double log2(double ) throw(); extern "C" double __log2(double ) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" double pow(double , double ) throw(); extern "C" double __pow(double , double ) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" double sqrt(double ) throw(); extern "C" double __sqrt(double ) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" double hypot(double , double ) throw(); extern "C" double __hypot(double , double ) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" double cbrt(double ) throw(); extern "C" double __cbrt(double ) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" double ceil(double ) throw() __attribute((const)); extern "C" double __ceil(double ) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" double fabs(double ) throw() __attribute((const)); extern "C" double __fabs(double ) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" double floor(double ) throw() __attribute((const)); extern "C" double __floor(double ) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" double fmod(double , double ) throw(); extern "C" double __fmod(double , double ) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isinf(double ) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" int __finite(double ) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinf(double ) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finite(double ) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" double drem(double , double ) throw(); extern "C" double __drem(double , double ) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" double significand(double ) throw(); extern "C" double __significand(double ) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" double copysign(double , double ) throw() __attribute((const)); extern "C" double __copysign(double , double ) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" double nan(const char * ) throw() __attribute((const)); extern "C" double __nan(const char * ) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isnan(double ) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnan(double ) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" double j0(double) throw(); extern "C" double __j0(double) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" double j1(double) throw(); extern "C" double __j1(double) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" double jn(int, double) throw(); extern "C" double __jn(int, double) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" double y0(double) throw(); extern "C" double __y0(double) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" double y1(double) throw(); extern "C" double __y1(double) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" double yn(int, double) throw(); extern "C" double __yn(int, double) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" double erf(double) throw(); extern "C" double __erf(double) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" double erfc(double) throw(); extern "C" double __erfc(double) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" double lgamma(double) throw(); extern "C" double __lgamma(double) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" double tgamma(double) throw(); extern "C" double __tgamma(double) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" double gamma(double) throw(); extern "C" double __gamma(double) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" double lgamma_r(double, int * ) throw(); extern "C" double __lgamma_r(double, int * ) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" double rint(double ) throw(); extern "C" double __rint(double ) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" double nextafter(double , double ) throw() __attribute((const)); extern "C" double __nextafter(double , double ) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" double nexttoward(double , long double ) throw() __attribute((const)); extern "C" double __nexttoward(double , long double ) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" double remainder(double , double ) throw(); extern "C" double __remainder(double , double ) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" double scalbn(double , int ) throw(); extern "C" double __scalbn(double , int ) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" int ilogb(double ) throw(); extern "C" int __ilogb(double ) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" double scalbln(double , long ) throw(); extern "C" double __scalbln(double , long ) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" double nearbyint(double ) throw(); extern "C" double __nearbyint(double ) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" double round(double ) throw() __attribute((const)); extern "C" double __round(double ) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" double trunc(double ) throw() __attribute((const)); extern "C" double __trunc(double ) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" double remquo(double , double , int * ) throw(); extern "C" double __remquo(double , double , int * ) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" long lrint(double ) throw(); extern "C" long __lrint(double ) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llrint(double ) throw(); extern "C" long long __llrint(double ) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" long lround(double ) throw(); extern "C" long __lround(double ) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llround(double ) throw(); extern "C" long long __llround(double ) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" double fdim(double , double ) throw(); extern "C" double __fdim(double , double ) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" double fmax(double , double ) throw(); extern "C" double __fmax(double , double ) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" double fmin(double , double ) throw(); extern "C" double __fmin(double , double ) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassify(double ) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" int __signbit(double ) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" double fma(double , double , double ) throw(); extern "C" double __fma(double , double , double ) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" double scalb(double , double ) throw(); extern "C" double __scalb(double , double ) throw();
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" float acosf(float ) throw(); extern "C" float __acosf(float ) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" float asinf(float ) throw(); extern "C" float __asinf(float ) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" float atanf(float ) throw(); extern "C" float __atanf(float ) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" float atan2f(float , float ) throw(); extern "C" float __atan2f(float , float ) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" float cosf(float ) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" float sinf(float ) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" float tanf(float ) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" float coshf(float ) throw(); extern "C" float __coshf(float ) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" float sinhf(float ) throw(); extern "C" float __sinhf(float ) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" float tanhf(float ) throw(); extern "C" float __tanhf(float ) throw();
# 82 "/usr/include/bits/mathcalls.h" 3
extern "C" void sincosf(float , float * , float * ) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" float acoshf(float ) throw(); extern "C" float __acoshf(float ) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" float asinhf(float ) throw(); extern "C" float __asinhf(float ) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" float atanhf(float ) throw(); extern "C" float __atanhf(float ) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" float expf(float ) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" float frexpf(float , int * ) throw(); extern "C" float __frexpf(float , int * ) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" float ldexpf(float , int ) throw(); extern "C" float __ldexpf(float , int ) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" float logf(float ) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" float log10f(float ) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" float modff(float , float * ) throw(); extern "C" float __modff(float , float * ) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" float exp10f(float ) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" float pow10f(float ) throw(); extern "C" float __pow10f(float ) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" float expm1f(float ) throw(); extern "C" float __expm1f(float ) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" float log1pf(float ) throw(); extern "C" float __log1pf(float ) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" float logbf(float ) throw(); extern "C" float __logbf(float ) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" float exp2f(float ) throw(); extern "C" float __exp2f(float ) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" float log2f(float ) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" float powf(float , float ) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" float sqrtf(float ) throw(); extern "C" float __sqrtf(float ) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" float hypotf(float , float ) throw(); extern "C" float __hypotf(float , float ) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" float cbrtf(float ) throw(); extern "C" float __cbrtf(float ) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" float ceilf(float ) throw() __attribute((const)); extern "C" float __ceilf(float ) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" float fabsf(float ) throw() __attribute((const)); extern "C" float __fabsf(float ) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" float floorf(float ) throw() __attribute((const)); extern "C" float __floorf(float ) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" float fmodf(float , float ) throw(); extern "C" float __fmodf(float , float ) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isinff(float ) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" int __finitef(float ) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinff(float ) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finitef(float ) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" float dremf(float , float ) throw(); extern "C" float __dremf(float , float ) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" float significandf(float ) throw(); extern "C" float __significandf(float ) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" float copysignf(float , float ) throw() __attribute((const)); extern "C" float __copysignf(float , float ) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" float nanf(const char * ) throw() __attribute((const)); extern "C" float __nanf(const char * ) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isnanf(float ) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnanf(float ) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" float j0f(float) throw(); extern "C" float __j0f(float) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" float j1f(float) throw(); extern "C" float __j1f(float) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" float jnf(int, float) throw(); extern "C" float __jnf(int, float) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" float y0f(float) throw(); extern "C" float __y0f(float) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" float y1f(float) throw(); extern "C" float __y1f(float) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" float ynf(int, float) throw(); extern "C" float __ynf(int, float) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" float erff(float) throw(); extern "C" float __erff(float) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" float erfcf(float) throw(); extern "C" float __erfcf(float) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" float lgammaf(float) throw(); extern "C" float __lgammaf(float) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" float tgammaf(float) throw(); extern "C" float __tgammaf(float) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" float gammaf(float) throw(); extern "C" float __gammaf(float) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" float lgammaf_r(float, int * ) throw(); extern "C" float __lgammaf_r(float, int * ) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" float rintf(float ) throw(); extern "C" float __rintf(float ) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" float nextafterf(float , float ) throw() __attribute((const)); extern "C" float __nextafterf(float , float ) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" float nexttowardf(float , long double ) throw() __attribute((const)); extern "C" float __nexttowardf(float , long double ) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" float remainderf(float , float ) throw(); extern "C" float __remainderf(float , float ) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" float scalbnf(float , int ) throw(); extern "C" float __scalbnf(float , int ) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" int ilogbf(float ) throw(); extern "C" int __ilogbf(float ) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" float scalblnf(float , long ) throw(); extern "C" float __scalblnf(float , long ) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" float nearbyintf(float ) throw(); extern "C" float __nearbyintf(float ) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" float roundf(float ) throw() __attribute((const)); extern "C" float __roundf(float ) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" float truncf(float ) throw() __attribute((const)); extern "C" float __truncf(float ) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" float remquof(float , float , int * ) throw(); extern "C" float __remquof(float , float , int * ) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" long lrintf(float ) throw(); extern "C" long __lrintf(float ) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llrintf(float ) throw(); extern "C" long long __llrintf(float ) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" long lroundf(float ) throw(); extern "C" long __lroundf(float ) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llroundf(float ) throw(); extern "C" long long __llroundf(float ) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" float fdimf(float , float ) throw(); extern "C" float __fdimf(float , float ) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" float fmaxf(float , float ) throw(); extern "C" float __fmaxf(float , float ) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" float fminf(float , float ) throw(); extern "C" float __fminf(float , float ) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassifyf(float ) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" int __signbitf(float ) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" float fmaf(float , float , float ) throw(); extern "C" float __fmaf(float , float , float ) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" float scalbf(float , float ) throw(); extern "C" float __scalbf(float , float ) throw();
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" long double acosl(long double ) throw(); extern "C" long double __acosl(long double ) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" long double asinl(long double ) throw(); extern "C" long double __asinl(long double ) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atanl(long double ) throw(); extern "C" long double __atanl(long double ) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atan2l(long double , long double ) throw(); extern "C" long double __atan2l(long double , long double ) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" long double cosl(long double ) throw(); extern "C" long double __cosl(long double ) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sinl(long double ) throw(); extern "C" long double __sinl(long double ) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tanl(long double ) throw(); extern "C" long double __tanl(long double ) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" long double coshl(long double ) throw(); extern "C" long double __coshl(long double ) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sinhl(long double ) throw(); extern "C" long double __sinhl(long double ) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tanhl(long double ) throw(); extern "C" long double __tanhl(long double ) throw();
# 82 "/usr/include/bits/mathcalls.h" 3
extern "C" void sincosl(long double , long double * , long double * ) throw(); extern "C" void __sincosl(long double , long double * , long double * ) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" long double acoshl(long double ) throw(); extern "C" long double __acoshl(long double ) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" long double asinhl(long double ) throw(); extern "C" long double __asinhl(long double ) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atanhl(long double ) throw(); extern "C" long double __atanhl(long double ) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" long double expl(long double ) throw(); extern "C" long double __expl(long double ) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" long double frexpl(long double , int * ) throw(); extern "C" long double __frexpl(long double , int * ) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ldexpl(long double , int ) throw(); extern "C" long double __ldexpl(long double , int ) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" long double logl(long double ) throw(); extern "C" long double __logl(long double ) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log10l(long double ) throw(); extern "C" long double __log10l(long double ) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" long double modfl(long double , long double * ) throw(); extern "C" long double __modfl(long double , long double * ) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" long double exp10l(long double ) throw(); extern "C" long double __exp10l(long double ) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" long double pow10l(long double ) throw(); extern "C" long double __pow10l(long double ) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" long double expm1l(long double ) throw(); extern "C" long double __expm1l(long double ) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log1pl(long double ) throw(); extern "C" long double __log1pl(long double ) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" long double logbl(long double ) throw(); extern "C" long double __logbl(long double ) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" long double exp2l(long double ) throw(); extern "C" long double __exp2l(long double ) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log2l(long double ) throw(); extern "C" long double __log2l(long double ) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" long double powl(long double , long double ) throw(); extern "C" long double __powl(long double , long double ) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sqrtl(long double ) throw(); extern "C" long double __sqrtl(long double ) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" long double hypotl(long double , long double ) throw(); extern "C" long double __hypotl(long double , long double ) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" long double cbrtl(long double ) throw(); extern "C" long double __cbrtl(long double ) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ceill(long double ) throw() __attribute((const)); extern "C" long double __ceill(long double ) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fabsl(long double ) throw() __attribute((const)); extern "C" long double __fabsl(long double ) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" long double floorl(long double ) throw() __attribute((const)); extern "C" long double __floorl(long double ) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmodl(long double , long double ) throw(); extern "C" long double __fmodl(long double , long double ) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isinfl(long double ) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" int __finitel(long double ) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinfl(long double ) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finitel(long double ) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" long double dreml(long double , long double ) throw(); extern "C" long double __dreml(long double , long double ) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" long double significandl(long double ) throw(); extern "C" long double __significandl(long double ) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" long double copysignl(long double , long double ) throw() __attribute((const)); extern "C" long double __copysignl(long double , long double ) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nanl(const char * ) throw() __attribute((const)); extern "C" long double __nanl(const char * ) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isnanl(long double ) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnanl(long double ) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" long double j0l(long double) throw(); extern "C" long double __j0l(long double) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" long double j1l(long double) throw(); extern "C" long double __j1l(long double) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" long double jnl(int, long double) throw(); extern "C" long double __jnl(int, long double) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" long double y0l(long double) throw(); extern "C" long double __y0l(long double) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" long double y1l(long double) throw(); extern "C" long double __y1l(long double) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ynl(int, long double) throw(); extern "C" long double __ynl(int, long double) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" long double erfl(long double) throw(); extern "C" long double __erfl(long double) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" long double erfcl(long double) throw(); extern "C" long double __erfcl(long double) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" long double lgammal(long double) throw(); extern "C" long double __lgammal(long double) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tgammal(long double) throw(); extern "C" long double __tgammal(long double) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" long double gammal(long double) throw(); extern "C" long double __gammal(long double) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" long double lgammal_r(long double, int * ) throw(); extern "C" long double __lgammal_r(long double, int * ) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" long double rintl(long double ) throw(); extern "C" long double __rintl(long double ) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nextafterl(long double , long double ) throw() __attribute((const)); extern "C" long double __nextafterl(long double , long double ) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nexttowardl(long double , long double ) throw() __attribute((const)); extern "C" long double __nexttowardl(long double , long double ) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" long double remainderl(long double , long double ) throw(); extern "C" long double __remainderl(long double , long double ) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalbnl(long double , int ) throw(); extern "C" long double __scalbnl(long double , int ) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" int ilogbl(long double ) throw(); extern "C" int __ilogbl(long double ) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalblnl(long double , long ) throw(); extern "C" long double __scalblnl(long double , long ) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nearbyintl(long double ) throw(); extern "C" long double __nearbyintl(long double ) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" long double roundl(long double ) throw() __attribute((const)); extern "C" long double __roundl(long double ) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" long double truncl(long double ) throw() __attribute((const)); extern "C" long double __truncl(long double ) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" long double remquol(long double , long double , int * ) throw(); extern "C" long double __remquol(long double , long double , int * ) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" long lrintl(long double ) throw(); extern "C" long __lrintl(long double ) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llrintl(long double ) throw(); extern "C" long long __llrintl(long double ) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" long lroundl(long double ) throw(); extern "C" long __lroundl(long double ) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llroundl(long double ) throw(); extern "C" long long __llroundl(long double ) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fdiml(long double , long double ) throw(); extern "C" long double __fdiml(long double , long double ) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmaxl(long double , long double ) throw(); extern "C" long double __fmaxl(long double , long double ) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fminl(long double , long double ) throw(); extern "C" long double __fminl(long double , long double ) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassifyl(long double ) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" int __signbitl(long double ) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmal(long double , long double , long double ) throw(); extern "C" long double __fmal(long double , long double , long double ) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalbl(long double , long double ) throw(); extern "C" long double __scalbl(long double , long double ) throw();
# 161 "/usr/include/math.h" 3
extern "C" { extern int signgam; }
# 203 "/usr/include/math.h" 3
enum {
# 204 "/usr/include/math.h" 3
FP_NAN,
# 206 "/usr/include/math.h" 3
FP_INFINITE,
# 208 "/usr/include/math.h" 3
FP_ZERO,
# 210 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 212 "/usr/include/math.h" 3
FP_NORMAL
# 214 "/usr/include/math.h" 3
};
# 302 "/usr/include/math.h" 3
extern "C" { typedef
# 296 "/usr/include/math.h" 3
enum {
# 297 "/usr/include/math.h" 3
_IEEE_ = (-1),
# 298 "/usr/include/math.h" 3
_SVID_ = 0,
# 299 "/usr/include/math.h" 3
_XOPEN_,
# 300 "/usr/include/math.h" 3
_POSIX_,
# 301 "/usr/include/math.h" 3
_ISOC_
# 302 "/usr/include/math.h" 3
} _LIB_VERSION_TYPE; }
# 307 "/usr/include/math.h" 3
extern "C" { extern _LIB_VERSION_TYPE _LIB_VERSION; }
# 318 "/usr/include/math.h" 3
extern "C" { struct __exception {
# 323 "/usr/include/math.h" 3
int type;
# 324 "/usr/include/math.h" 3
char *name;
# 325 "/usr/include/math.h" 3
double arg1;
# 326 "/usr/include/math.h" 3
double arg2;
# 327 "/usr/include/math.h" 3
double retval;
# 328 "/usr/include/math.h" 3
}; }
# 331 "/usr/include/math.h" 3
extern "C" int matherr(__exception * ) throw();
# 67 "/usr/include/bits/waitstatus.h" 3
extern "C" { union wait {
# 69 "/usr/include/bits/waitstatus.h" 3
int w_status;
# 71 "/usr/include/bits/waitstatus.h" 3
struct {
# 73 "/usr/include/bits/waitstatus.h" 3
unsigned __w_termsig:7;
# 74 "/usr/include/bits/waitstatus.h" 3
unsigned __w_coredump:1;
# 75 "/usr/include/bits/waitstatus.h" 3
unsigned __w_retcode:8;
# 76 "/usr/include/bits/waitstatus.h" 3
unsigned:16;
# 84 "/usr/include/bits/waitstatus.h" 3
} __wait_terminated;
# 86 "/usr/include/bits/waitstatus.h" 3
struct {
# 88 "/usr/include/bits/waitstatus.h" 3
unsigned __w_stopval:8;
# 89 "/usr/include/bits/waitstatus.h" 3
unsigned __w_stopsig:8;
# 90 "/usr/include/bits/waitstatus.h" 3
unsigned:16;
# 97 "/usr/include/bits/waitstatus.h" 3
} __wait_stopped;
# 98 "/usr/include/bits/waitstatus.h" 3
}; }
# 102 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 99 "/usr/include/stdlib.h" 3
struct {
# 100 "/usr/include/stdlib.h" 3
int quot;
# 101 "/usr/include/stdlib.h" 3
int rem;
# 102 "/usr/include/stdlib.h" 3
} div_t; }
# 110 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 107 "/usr/include/stdlib.h" 3
struct {
# 108 "/usr/include/stdlib.h" 3
long quot;
# 109 "/usr/include/stdlib.h" 3
long rem;
# 110 "/usr/include/stdlib.h" 3
} ldiv_t; }
# 122 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 119 "/usr/include/stdlib.h" 3
struct {
# 120 "/usr/include/stdlib.h" 3
long long quot;
# 121 "/usr/include/stdlib.h" 3
long long rem;
# 122 "/usr/include/stdlib.h" 3
} lldiv_t; }
# 140 "/usr/include/stdlib.h" 3
extern "C" size_t __ctype_get_mb_cur_max() throw();
# 145 "/usr/include/stdlib.h" 3
extern "C" double atof(const char * ) throw()
# 146 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 148 "/usr/include/stdlib.h" 3
extern "C" int atoi(const char * ) throw()
# 149 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 151 "/usr/include/stdlib.h" 3
extern "C" long atol(const char * ) throw()
# 152 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 158 "/usr/include/stdlib.h" 3
extern "C" long long atoll(const char * ) throw()
# 159 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 165 "/usr/include/stdlib.h" 3
extern "C" double strtod(const char *__restrict__ , char **__restrict__ ) throw()
# 167 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 173 "/usr/include/stdlib.h" 3
extern "C" float strtof(const char *__restrict__ , char **__restrict__ ) throw()
# 174 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 176 "/usr/include/stdlib.h" 3
extern "C" long double strtold(const char *__restrict__ , char **__restrict__ ) throw()
# 178 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 184 "/usr/include/stdlib.h" 3
extern "C" long strtol(const char *__restrict__ , char **__restrict__ , int ) throw()
# 186 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 188 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul(const char *__restrict__ , char **__restrict__ , int ) throw()
# 190 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 196 "/usr/include/stdlib.h" 3
extern "C" long long strtoq(const char *__restrict__ , char **__restrict__ , int ) throw()
# 198 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 201 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtouq(const char *__restrict__ , char **__restrict__ , int ) throw()
# 203 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 210 "/usr/include/stdlib.h" 3
extern "C" long long strtoll(const char *__restrict__ , char **__restrict__ , int ) throw()
# 212 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 215 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtoull(const char *__restrict__ , char **__restrict__ , int ) throw()
# 217 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 240 "/usr/include/stdlib.h" 3
extern "C" long strtol_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 242 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 244 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 247 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 250 "/usr/include/stdlib.h" 3
extern "C" long long strtoll_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 253 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 256 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtoull_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 259 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 261 "/usr/include/stdlib.h" 3
extern "C" double strtod_l(const char *__restrict__ , char **__restrict__ , __locale_t ) throw()
# 263 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 265 "/usr/include/stdlib.h" 3
extern "C" float strtof_l(const char *__restrict__ , char **__restrict__ , __locale_t ) throw()
# 267 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 269 "/usr/include/stdlib.h" 3
extern "C" long double strtold_l(const char *__restrict__ , char **__restrict__ , __locale_t ) throw()
# 272 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 311 "/usr/include/stdlib.h" 3
extern "C" char *l64a(long ) throw();
# 314 "/usr/include/stdlib.h" 3
extern "C" long a64l(const char * ) throw()
# 315 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 35 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_char u_char; }
# 36 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_short u_short; }
# 37 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_int u_int; }
# 38 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_long u_long; }
# 39 "/usr/include/sys/types.h" 3
extern "C" { typedef __quad_t quad_t; }
# 40 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_quad_t u_quad_t; }
# 41 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsid_t fsid_t; }
# 46 "/usr/include/sys/types.h" 3
extern "C" { typedef __loff_t loff_t; }
# 50 "/usr/include/sys/types.h" 3
extern "C" { typedef __ino_t ino_t; }
# 57 "/usr/include/sys/types.h" 3
extern "C" { typedef __ino64_t ino64_t; }
# 62 "/usr/include/sys/types.h" 3
extern "C" { typedef __dev_t dev_t; }
# 67 "/usr/include/sys/types.h" 3
extern "C" { typedef __gid_t gid_t; }
# 72 "/usr/include/sys/types.h" 3
extern "C" { typedef __mode_t mode_t; }
# 77 "/usr/include/sys/types.h" 3
extern "C" { typedef __nlink_t nlink_t; }
# 82 "/usr/include/sys/types.h" 3
extern "C" { typedef __uid_t uid_t; }
# 88 "/usr/include/sys/types.h" 3
extern "C" { typedef __off_t off_t; }
# 95 "/usr/include/sys/types.h" 3
extern "C" { typedef __off64_t off64_t; }
# 105 "/usr/include/sys/types.h" 3
extern "C" { typedef __id_t id_t; }
# 110 "/usr/include/sys/types.h" 3
extern "C" { typedef __ssize_t ssize_t; }
# 116 "/usr/include/sys/types.h" 3
extern "C" { typedef __daddr_t daddr_t; }
# 117 "/usr/include/sys/types.h" 3
extern "C" { typedef __caddr_t caddr_t; }
# 123 "/usr/include/sys/types.h" 3
extern "C" { typedef __key_t key_t; }
# 137 "/usr/include/sys/types.h" 3
extern "C" { typedef __useconds_t useconds_t; }
# 141 "/usr/include/sys/types.h" 3
extern "C" { typedef __suseconds_t suseconds_t; }
# 151 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned long ulong; }
# 152 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned short ushort; }
# 153 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned uint; }
# 195 "/usr/include/sys/types.h" 3
extern "C" { typedef signed char int8_t __attribute((__mode__(__QI__))); }
# 196 "/usr/include/sys/types.h" 3
extern "C" { typedef short int16_t __attribute((__mode__(__HI__))); }
# 197 "/usr/include/sys/types.h" 3
extern "C" { typedef int int32_t __attribute((__mode__(__SI__))); }
# 198 "/usr/include/sys/types.h" 3
extern "C" { typedef long int64_t __attribute((__mode__(__DI__))); }
# 201 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned char u_int8_t __attribute((__mode__(__QI__))); }
# 202 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned short u_int16_t __attribute((__mode__(__HI__))); }
# 203 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned u_int32_t __attribute((__mode__(__SI__))); }
# 204 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned long u_int64_t __attribute((__mode__(__DI__))); }
# 206 "/usr/include/sys/types.h" 3
extern "C" { typedef long register_t __attribute((__mode__(__word__))); }
# 24 "/usr/include/bits/sigset.h" 3
extern "C" { typedef int __sig_atomic_t; }
# 32 "/usr/include/bits/sigset.h" 3
extern "C" { typedef
# 30 "/usr/include/bits/sigset.h" 3
struct {
# 31 "/usr/include/bits/sigset.h" 3
unsigned long __val[(1024) / ((8) * sizeof(unsigned long))];
# 32 "/usr/include/bits/sigset.h" 3
} __sigset_t; }
# 38 "/usr/include/sys/select.h" 3
extern "C" { typedef __sigset_t sigset_t; }
# 69 "/usr/include/bits/time.h" 3
extern "C" { struct timeval {
# 71 "/usr/include/bits/time.h" 3
__time_t tv_sec;
# 72 "/usr/include/bits/time.h" 3
__suseconds_t tv_usec;
# 73 "/usr/include/bits/time.h" 3
}; }
# 55 "/usr/include/sys/select.h" 3
extern "C" { typedef long __fd_mask; }
# 78 "/usr/include/sys/select.h" 3
extern "C" { typedef
# 68 "/usr/include/sys/select.h" 3
struct {
# 72 "/usr/include/sys/select.h" 3
__fd_mask fds_bits[1024 / (8 * ((int)sizeof(__fd_mask)))];
# 78 "/usr/include/sys/select.h" 3
} fd_set; }
# 85 "/usr/include/sys/select.h" 3
extern "C" { typedef __fd_mask fd_mask; }
# 109 "/usr/include/sys/select.h" 3
extern "C" int select(int , fd_set *__restrict__ , fd_set *__restrict__ , fd_set *__restrict__ , timeval *__restrict__ );
# 121 "/usr/include/sys/select.h" 3
extern "C" int pselect(int , fd_set *__restrict__ , fd_set *__restrict__ , fd_set *__restrict__ , const timespec *__restrict__ , const __sigset_t *__restrict__ );
# 31 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned gnu_dev_major(unsigned long long ) throw();
# 34 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned gnu_dev_minor(unsigned long long ) throw();
# 37 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned long long gnu_dev_makedev(unsigned , unsigned ) throw();
# 228 "/usr/include/sys/types.h" 3
extern "C" { typedef __blksize_t blksize_t; }
# 235 "/usr/include/sys/types.h" 3
extern "C" { typedef __blkcnt_t blkcnt_t; }
# 239 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsblkcnt_t fsblkcnt_t; }
# 243 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsfilcnt_t fsfilcnt_t; }
# 262 "/usr/include/sys/types.h" 3
extern "C" { typedef __blkcnt64_t blkcnt64_t; }
# 263 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsblkcnt64_t fsblkcnt64_t; }
# 264 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsfilcnt64_t fsfilcnt64_t; }
# 50 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned long pthread_t; }
# 57 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 54 "/usr/include/bits/pthreadtypes.h" 3
union {
# 55 "/usr/include/bits/pthreadtypes.h" 3
char __size[56];
# 56 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 57 "/usr/include/bits/pthreadtypes.h" 3
} pthread_attr_t; }
# 65 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 61 "/usr/include/bits/pthreadtypes.h" 3
struct __pthread_internal_list {
# 63 "/usr/include/bits/pthreadtypes.h" 3
__pthread_internal_list *__prev;
# 64 "/usr/include/bits/pthreadtypes.h" 3
__pthread_internal_list *__next;
# 65 "/usr/include/bits/pthreadtypes.h" 3
} __pthread_list_t; }
# 104 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 77 "/usr/include/bits/pthreadtypes.h" 3
union {
# 78 "/usr/include/bits/pthreadtypes.h" 3
struct __pthread_mutex_s {
# 80 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 81 "/usr/include/bits/pthreadtypes.h" 3
unsigned __count;
# 82 "/usr/include/bits/pthreadtypes.h" 3
int __owner;
# 84 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nusers;
# 88 "/usr/include/bits/pthreadtypes.h" 3
int __kind;
# 90 "/usr/include/bits/pthreadtypes.h" 3
int __spins;
# 91 "/usr/include/bits/pthreadtypes.h" 3
__pthread_list_t __list;
# 101 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 102 "/usr/include/bits/pthreadtypes.h" 3
char __size[40];
# 103 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 104 "/usr/include/bits/pthreadtypes.h" 3
} pthread_mutex_t; }
# 110 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 107 "/usr/include/bits/pthreadtypes.h" 3
union {
# 108 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 109 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 110 "/usr/include/bits/pthreadtypes.h" 3
} pthread_mutexattr_t; }
# 130 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 116 "/usr/include/bits/pthreadtypes.h" 3
union {
# 118 "/usr/include/bits/pthreadtypes.h" 3
struct {
# 119 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 120 "/usr/include/bits/pthreadtypes.h" 3
unsigned __futex;
# 121 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __total_seq;
# 122 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __wakeup_seq;
# 123 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __woken_seq;
# 124 "/usr/include/bits/pthreadtypes.h" 3
void *__mutex;
# 125 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nwaiters;
# 126 "/usr/include/bits/pthreadtypes.h" 3
unsigned __broadcast_seq;
# 127 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 128 "/usr/include/bits/pthreadtypes.h" 3
char __size[48];
# 129 "/usr/include/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 130 "/usr/include/bits/pthreadtypes.h" 3
} pthread_cond_t; }
# 136 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 133 "/usr/include/bits/pthreadtypes.h" 3
union {
# 134 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 135 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 136 "/usr/include/bits/pthreadtypes.h" 3
} pthread_condattr_t; }
# 140 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned pthread_key_t; }
# 144 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef int pthread_once_t; }
# 189 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 151 "/usr/include/bits/pthreadtypes.h" 3
union {
# 154 "/usr/include/bits/pthreadtypes.h" 3
struct {
# 155 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 156 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_readers;
# 157 "/usr/include/bits/pthreadtypes.h" 3
unsigned __readers_wakeup;
# 158 "/usr/include/bits/pthreadtypes.h" 3
unsigned __writer_wakeup;
# 159 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_readers_queued;
# 160 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_writers_queued;
# 161 "/usr/include/bits/pthreadtypes.h" 3
int __writer;
# 162 "/usr/include/bits/pthreadtypes.h" 3
int __shared;
# 163 "/usr/include/bits/pthreadtypes.h" 3
unsigned long __pad1;
# 164 "/usr/include/bits/pthreadtypes.h" 3
unsigned long __pad2;
# 167 "/usr/include/bits/pthreadtypes.h" 3
unsigned __flags;
# 168 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 187 "/usr/include/bits/pthreadtypes.h" 3
char __size[56];
# 188 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 189 "/usr/include/bits/pthreadtypes.h" 3
} pthread_rwlock_t; }
# 195 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 192 "/usr/include/bits/pthreadtypes.h" 3
union {
# 193 "/usr/include/bits/pthreadtypes.h" 3
char __size[8];
# 194 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 195 "/usr/include/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t; }
# 201 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef volatile int pthread_spinlock_t; }
# 210 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 207 "/usr/include/bits/pthreadtypes.h" 3
union {
# 208 "/usr/include/bits/pthreadtypes.h" 3
char __size[32];
# 209 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 210 "/usr/include/bits/pthreadtypes.h" 3
} pthread_barrier_t; }
# 216 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 213 "/usr/include/bits/pthreadtypes.h" 3
union {
# 214 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 215 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 216 "/usr/include/bits/pthreadtypes.h" 3
} pthread_barrierattr_t; }
# 327 "/usr/include/stdlib.h" 3
extern "C" long random() throw();
# 330 "/usr/include/stdlib.h" 3
extern "C" void srandom(unsigned ) throw();
# 336 "/usr/include/stdlib.h" 3
extern "C" char *initstate(unsigned , char * , size_t ) throw()
# 337 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 341 "/usr/include/stdlib.h" 3
extern "C" char *setstate(char * ) throw() __attribute((__nonnull__(1)));
# 349 "/usr/include/stdlib.h" 3
extern "C" { struct random_data {
# 351 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 352 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 353 "/usr/include/stdlib.h" 3
int32_t *state;
# 354 "/usr/include/stdlib.h" 3
int rand_type;
# 355 "/usr/include/stdlib.h" 3
int rand_deg;
# 356 "/usr/include/stdlib.h" 3
int rand_sep;
# 357 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 358 "/usr/include/stdlib.h" 3
}; }
# 360 "/usr/include/stdlib.h" 3
extern "C" int random_r(random_data *__restrict__ , int32_t *__restrict__ ) throw()
# 361 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 363 "/usr/include/stdlib.h" 3
extern "C" int srandom_r(unsigned , random_data * ) throw()
# 364 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 366 "/usr/include/stdlib.h" 3
extern "C" int initstate_r(unsigned , char *__restrict__ , size_t , random_data *__restrict__ ) throw()
# 369 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2, 4)));
# 371 "/usr/include/stdlib.h" 3
extern "C" int setstate_r(char *__restrict__ , random_data *__restrict__ ) throw()
# 373 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 380 "/usr/include/stdlib.h" 3
extern "C" int rand() throw();
# 382 "/usr/include/stdlib.h" 3
extern "C" void srand(unsigned ) throw();
# 387 "/usr/include/stdlib.h" 3
extern "C" int rand_r(unsigned * ) throw();
# 395 "/usr/include/stdlib.h" 3
extern "C" double drand48() throw();
# 396 "/usr/include/stdlib.h" 3
extern "C" double erand48(unsigned short [3]) throw() __attribute((__nonnull__(1)));
# 399 "/usr/include/stdlib.h" 3
extern "C" long lrand48() throw();
# 400 "/usr/include/stdlib.h" 3
extern "C" long nrand48(unsigned short [3]) throw()
# 401 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 404 "/usr/include/stdlib.h" 3
extern "C" long mrand48() throw();
# 405 "/usr/include/stdlib.h" 3
extern "C" long jrand48(unsigned short [3]) throw()
# 406 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 409 "/usr/include/stdlib.h" 3
extern "C" void srand48(long ) throw();
# 410 "/usr/include/stdlib.h" 3
extern "C" unsigned short *seed48(unsigned short [3]) throw()
# 411 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 412 "/usr/include/stdlib.h" 3
extern "C" void lcong48(unsigned short [7]) throw() __attribute((__nonnull__(1)));
# 418 "/usr/include/stdlib.h" 3
extern "C" { struct drand48_data {
# 420 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 421 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 422 "/usr/include/stdlib.h" 3
unsigned short __c;
# 423 "/usr/include/stdlib.h" 3
unsigned short __init;
# 424 "/usr/include/stdlib.h" 3
unsigned long long __a;
# 425 "/usr/include/stdlib.h" 3
}; }
# 428 "/usr/include/stdlib.h" 3
extern "C" int drand48_r(drand48_data *__restrict__ , double *__restrict__ ) throw()
# 429 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 430 "/usr/include/stdlib.h" 3
extern "C" int erand48_r(unsigned short [3], drand48_data *__restrict__ , double *__restrict__ ) throw()
# 432 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 435 "/usr/include/stdlib.h" 3
extern "C" int lrand48_r(drand48_data *__restrict__ , long *__restrict__ ) throw()
# 437 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 438 "/usr/include/stdlib.h" 3
extern "C" int nrand48_r(unsigned short [3], drand48_data *__restrict__ , long *__restrict__ ) throw()
# 441 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 444 "/usr/include/stdlib.h" 3
extern "C" int mrand48_r(drand48_data *__restrict__ , long *__restrict__ ) throw()
# 446 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 447 "/usr/include/stdlib.h" 3
extern "C" int jrand48_r(unsigned short [3], drand48_data *__restrict__ , long *__restrict__ ) throw()
# 450 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 453 "/usr/include/stdlib.h" 3
extern "C" int srand48_r(long , drand48_data * ) throw()
# 454 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 456 "/usr/include/stdlib.h" 3
extern "C" int seed48_r(unsigned short [3], drand48_data * ) throw()
# 457 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 459 "/usr/include/stdlib.h" 3
extern "C" int lcong48_r(unsigned short [7], drand48_data * ) throw()
# 461 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 471 "/usr/include/stdlib.h" 3
extern "C" void *malloc(size_t ) throw() __attribute((__malloc__));
# 473 "/usr/include/stdlib.h" 3
extern "C" void *calloc(size_t , size_t ) throw()
# 474 "/usr/include/stdlib.h" 3
 __attribute((__malloc__));
# 485 "/usr/include/stdlib.h" 3
extern "C" void *realloc(void * , size_t ) throw()
# 486 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 488 "/usr/include/stdlib.h" 3
extern "C" void free(void * ) throw();
# 493 "/usr/include/stdlib.h" 3
extern "C" void cfree(void * ) throw();
# 33 "/usr/include/alloca.h" 3
extern "C" void *alloca(size_t ) throw();
# 502 "/usr/include/stdlib.h" 3
extern "C" void *valloc(size_t ) throw() __attribute((__malloc__));
# 507 "/usr/include/stdlib.h" 3
extern "C" int posix_memalign(void ** , size_t , size_t ) throw()
# 508 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 513 "/usr/include/stdlib.h" 3
extern "C" void abort() throw() __attribute((__noreturn__));
# 517 "/usr/include/stdlib.h" 3
extern "C" int atexit(void (* )(void)) throw() __attribute((__nonnull__(1)));
# 524 "/usr/include/stdlib.h" 3
int at_quick_exit(void (* )(void)) throw() __asm__("at_quick_exit")
# 525 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 535 "/usr/include/stdlib.h" 3
extern "C" int on_exit(void (* )(int , void * ), void * ) throw()
# 536 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 543 "/usr/include/stdlib.h" 3
extern "C" void exit(int ) throw() __attribute((__noreturn__));
# 551 "/usr/include/stdlib.h" 3
extern "C" void quick_exit(int ) throw() __attribute((__noreturn__));
# 559 "/usr/include/stdlib.h" 3
extern "C" void _Exit(int ) throw() __attribute((__noreturn__));
# 566 "/usr/include/stdlib.h" 3
extern "C" char *getenv(const char * ) throw() __attribute((__nonnull__(1)));
# 571 "/usr/include/stdlib.h" 3
extern "C" char *__secure_getenv(const char * ) throw()
# 572 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 578 "/usr/include/stdlib.h" 3
extern "C" int putenv(char * ) throw() __attribute((__nonnull__(1)));
# 584 "/usr/include/stdlib.h" 3
extern "C" int setenv(const char * , const char * , int ) throw()
# 585 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 588 "/usr/include/stdlib.h" 3
extern "C" int unsetenv(const char * ) throw();
# 595 "/usr/include/stdlib.h" 3
extern "C" int clearenv() throw();
# 604 "/usr/include/stdlib.h" 3
extern "C" char *mktemp(char * ) throw() __attribute((__nonnull__(1)));
# 615 "/usr/include/stdlib.h" 3
extern "C" int mkstemp(char * ) __attribute((__nonnull__(1)));
# 625 "/usr/include/stdlib.h" 3
extern "C" int mkstemp64(char * ) __attribute((__nonnull__(1)));
# 637 "/usr/include/stdlib.h" 3
extern "C" int mkstemps(char * , int ) __attribute((__nonnull__(1)));
# 647 "/usr/include/stdlib.h" 3
extern "C" int mkstemps64(char * , int )
# 648 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 658 "/usr/include/stdlib.h" 3
extern "C" char *mkdtemp(char * ) throw() __attribute((__nonnull__(1)));
# 669 "/usr/include/stdlib.h" 3
extern "C" int mkostemp(char * , int ) __attribute((__nonnull__(1)));
# 679 "/usr/include/stdlib.h" 3
extern "C" int mkostemp64(char * , int ) __attribute((__nonnull__(1)));
# 689 "/usr/include/stdlib.h" 3
extern "C" int mkostemps(char * , int , int )
# 690 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 701 "/usr/include/stdlib.h" 3
extern "C" int mkostemps64(char * , int , int )
# 702 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 712 "/usr/include/stdlib.h" 3
extern "C" int system(const char * );
# 719 "/usr/include/stdlib.h" 3
extern "C" char *canonicalize_file_name(const char * ) throw()
# 720 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 729 "/usr/include/stdlib.h" 3
extern "C" char *realpath(const char *__restrict__ , char *__restrict__ ) throw();
# 737 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_fn_t)(const void *, const void *); }
# 740 "/usr/include/stdlib.h" 3
extern "C" { typedef __compar_fn_t comparison_fn_t; }
# 744 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_d_fn_t)(const void *, const void *, void *); }
# 750 "/usr/include/stdlib.h" 3
extern "C" void *bsearch(const void * , const void * , size_t , size_t , __compar_fn_t )
# 752 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 5)));
# 756 "/usr/include/stdlib.h" 3
extern "C" void qsort(void * , size_t , size_t , __compar_fn_t )
# 757 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 759 "/usr/include/stdlib.h" 3
extern "C" void qsort_r(void * , size_t , size_t , __compar_d_fn_t , void * )
# 761 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 766 "/usr/include/stdlib.h" 3
extern "C" int abs(int ) throw() __attribute((const));
# 767 "/usr/include/stdlib.h" 3
extern "C" long labs(long ) throw() __attribute((const));
# 771 "/usr/include/stdlib.h" 3
extern "C" long long llabs(long long ) throw()
# 772 "/usr/include/stdlib.h" 3
 __attribute((const));
# 780 "/usr/include/stdlib.h" 3
extern "C" div_t div(int , int ) throw()
# 781 "/usr/include/stdlib.h" 3
 __attribute((const));
# 782 "/usr/include/stdlib.h" 3
extern "C" ldiv_t ldiv(long , long ) throw()
# 783 "/usr/include/stdlib.h" 3
 __attribute((const));
# 788 "/usr/include/stdlib.h" 3
extern "C" lldiv_t lldiv(long long , long long ) throw()
# 790 "/usr/include/stdlib.h" 3
 __attribute((const));
# 802 "/usr/include/stdlib.h" 3
extern "C" char *ecvt(double , int , int *__restrict__ , int *__restrict__ ) throw()
# 803 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 808 "/usr/include/stdlib.h" 3
extern "C" char *fcvt(double , int , int *__restrict__ , int *__restrict__ ) throw()
# 809 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 814 "/usr/include/stdlib.h" 3
extern "C" char *gcvt(double , int , char * ) throw()
# 815 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 820 "/usr/include/stdlib.h" 3
extern "C" char *qecvt(long double , int , int *__restrict__ , int *__restrict__ ) throw()
# 822 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 823 "/usr/include/stdlib.h" 3
extern "C" char *qfcvt(long double , int , int *__restrict__ , int *__restrict__ ) throw()
# 825 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 826 "/usr/include/stdlib.h" 3
extern "C" char *qgcvt(long double , int , char * ) throw()
# 827 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 832 "/usr/include/stdlib.h" 3
extern "C" int ecvt_r(double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 834 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 835 "/usr/include/stdlib.h" 3
extern "C" int fcvt_r(double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 837 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 839 "/usr/include/stdlib.h" 3
extern "C" int qecvt_r(long double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 842 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 843 "/usr/include/stdlib.h" 3
extern "C" int qfcvt_r(long double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 846 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 854 "/usr/include/stdlib.h" 3
extern "C" int mblen(const char * , size_t ) throw();
# 857 "/usr/include/stdlib.h" 3
extern "C" int mbtowc(wchar_t *__restrict__ , const char *__restrict__ , size_t ) throw();
# 861 "/usr/include/stdlib.h" 3
extern "C" int wctomb(char * , wchar_t ) throw();
# 865 "/usr/include/stdlib.h" 3
extern "C" size_t mbstowcs(wchar_t *__restrict__ , const char *__restrict__ , size_t ) throw();
# 868 "/usr/include/stdlib.h" 3
extern "C" size_t wcstombs(char *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 879 "/usr/include/stdlib.h" 3
extern "C" int rpmatch(const char * ) throw() __attribute((__nonnull__(1)));
# 890 "/usr/include/stdlib.h" 3
extern "C" int getsubopt(char **__restrict__ , char *const *__restrict__ , char **__restrict__ ) throw()
# 893 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 899 "/usr/include/stdlib.h" 3
extern "C" void setkey(const char * ) throw() __attribute((__nonnull__(1)));
# 907 "/usr/include/stdlib.h" 3
extern "C" int posix_openpt(int );
# 915 "/usr/include/stdlib.h" 3
extern "C" int grantpt(int ) throw();
# 919 "/usr/include/stdlib.h" 3
extern "C" int unlockpt(int ) throw();
# 924 "/usr/include/stdlib.h" 3
extern "C" char *ptsname(int ) throw();
# 931 "/usr/include/stdlib.h" 3
extern "C" int ptsname_r(int , char * , size_t ) throw()
# 932 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 935 "/usr/include/stdlib.h" 3
extern "C" int getpt();
# 942 "/usr/include/stdlib.h" 3
extern "C" int getloadavg(double [], int ) throw()
# 943 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 69 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template < typename _Iterator, typename _Container >
    class __normal_iterator;
# 74 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
}
# 76 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 78 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __true_type { };
# 79 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __false_type { };
# 81 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< bool __T0>
# 82 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __truth_type {
# 83 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 86 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 87 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 91 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Sp, class _Tp>
# 92 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __traitor {
# 94 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = ((bool)_Sp::__value) || ((bool)_Tp::__value)};
# 95 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 96 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 99 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class , class >
# 100 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __are_same {
# 102 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 103 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 104 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 106 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 107 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 109 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 110 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 111 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 114 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 115 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_void {
# 117 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 118 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 119 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 122 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 124 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 125 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 126 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 131 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 132 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_integer {
# 134 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 135 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 136 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 142 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 144 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 145 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 146 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 149 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 151 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 152 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 153 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 156 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 158 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 159 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 160 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 163 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 165 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 166 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 167 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 171 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 173 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 174 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 175 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 195 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 197 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 198 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 199 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 202 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 204 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 205 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 206 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 209 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 211 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 212 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 213 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 216 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 218 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 219 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 220 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 223 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 225 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 226 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 227 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 230 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 232 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 233 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 234 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 237 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 239 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 240 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 241 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 244 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 246 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 247 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 248 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 253 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 254 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_floating {
# 256 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 257 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 258 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 262 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 264 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 265 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 266 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 269 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 271 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 272 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 273 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 276 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 278 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 279 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 280 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 285 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 286 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 288 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 289 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 290 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 292 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 293 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 295 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 296 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 297 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 302 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 303 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_normal_iterator {
# 305 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 306 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 307 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 309 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container>
# 310 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_normal_iterator< __gnu_cxx::__normal_iterator< _Iterator, _Container> > {
# 313 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 314 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 315 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 320 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 321 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 323 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 328 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 329 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_fundamental : public __traitor< __is_void< _Tp> , __is_arithmetic< _Tp> > {
# 331 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 336 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 337 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 339 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 344 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 345 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_char {
# 347 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 348 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 349 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 352 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 354 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 355 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 356 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 360 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 362 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 363 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 364 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 367 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 368 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_byte {
# 370 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 371 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 372 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 375 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 377 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 378 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 379 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 382 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 384 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 385 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 386 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 389 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 391 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 392 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 393 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 398 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 399 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 401 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 402 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 403 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 417 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/4.4/ext/type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< bool __T1, class >
# 41 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __enable_if {
# 42 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 44 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 45 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 46 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Tp __type; };
# 50 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 51 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __conditional_type {
# 52 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 54 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Iftrue, class _Iffalse>
# 55 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 56 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 60 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 61 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __add_unsigned {
# 64 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 67 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 68 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 71 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 72 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned char __type; };
# 75 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 76 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned char __type; };
# 79 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 80 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned short __type; };
# 83 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 84 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned __type; };
# 87 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 88 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned long __type; };
# 91 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 92 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 96 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 99 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 103 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 104 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __remove_unsigned {
# 107 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 110 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 111 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 114 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 115 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef signed char __type; };
# 118 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 119 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef signed char __type; };
# 122 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 123 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef short __type; };
# 126 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 127 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef int __type; };
# 130 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 131 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef long __type; };
# 134 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 135 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef long long __type; };
# 139 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 142 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 146 "/usr/include/c++/4.4/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type * __ptr )
    { return __ptr == 0; }
# 151 "/usr/include/c++/4.4/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type )
    { return false; }
# 158 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, bool __T2 = std::__is_integer< _Tp> ::__value>
# 159 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote {
# 160 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef double __type; };
# 162 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 163 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 164 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Tp __type; };
# 166 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up>
# 167 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_2 {
# 170 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 171 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 174 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__(__type1() + __type2()) __type;
# 175 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 177 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp>
# 178 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_3 {
# 181 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 182 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 183 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Vp, std::__is_integer< _Vp> ::__value> ::__type __type3;
# 186 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__((__type1() + __type2()) + __type3()) __type;
# 187 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 189 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class _Wp>
# 190 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_4 {
# 193 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 194 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 195 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Vp, std::__is_integer< _Vp> ::__value> ::__type __type3;
# 196 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Wp, std::__is_integer< _Wp> ::__value> ::__type __type4;
# 199 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__(((__type1() + __type2()) + __type3()) + __type4()) __type;
# 200 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 202 "/usr/include/c++/4.4/ext/type_traits.h" 3
}
# 77 "/usr/include/c++/4.4/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 81 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    _Tp __cmath_power ( _Tp, unsigned int );
# 84 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline _Tp
    __pow_helper ( _Tp __x, int __n )
    {
      return __n < 0
        ? _Tp ( 1 ) / __cmath_power ( __x, - __n )
        : __cmath_power ( __x, __n );
    }
# 94 "/usr/include/c++/4.4/cmath" 3
inline double abs(double __x)
# 95 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabs(__x); }
# 98 "/usr/include/c++/4.4/cmath" 3
inline float abs(float __x)
# 99 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsf(__x); }
# 102 "/usr/include/c++/4.4/cmath" 3
inline long double abs(long double __x)
# 103 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsl(__x); }
# 105 "/usr/include/c++/4.4/cmath" 3
using ::acos;
# 108 "/usr/include/c++/4.4/cmath" 3
inline float acos(float __x)
# 109 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_acosf(__x); }
# 112 "/usr/include/c++/4.4/cmath" 3
inline long double acos(long double __x)
# 113 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_acosl(__x); }
# 115 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    acos ( _Tp __x )
    { return __builtin_acos ( __x ); }
# 121 "/usr/include/c++/4.4/cmath" 3
using ::asin;
# 124 "/usr/include/c++/4.4/cmath" 3
inline float asin(float __x)
# 125 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_asinf(__x); }
# 128 "/usr/include/c++/4.4/cmath" 3
inline long double asin(long double __x)
# 129 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_asinl(__x); }
# 131 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    asin ( _Tp __x )
    { return __builtin_asin ( __x ); }
# 137 "/usr/include/c++/4.4/cmath" 3
using ::atan;
# 140 "/usr/include/c++/4.4/cmath" 3
inline float atan(float __x)
# 141 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atanf(__x); }
# 144 "/usr/include/c++/4.4/cmath" 3
inline long double atan(long double __x)
# 145 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atanl(__x); }
# 147 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    atan ( _Tp __x )
    { return __builtin_atan ( __x ); }
# 153 "/usr/include/c++/4.4/cmath" 3
using ::atan2;
# 156 "/usr/include/c++/4.4/cmath" 3
inline float atan2(float __y, float __x)
# 157 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 160 "/usr/include/c++/4.4/cmath" 3
inline long double atan2(long double __y, long double __x)
# 161 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 163 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    atan2 ( _Tp __y, _Up __x )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return atan2 ( __type ( __y ), __type ( __x ) );
    }
# 175 "/usr/include/c++/4.4/cmath" 3
using ::ceil;
# 178 "/usr/include/c++/4.4/cmath" 3
inline float ceil(float __x)
# 179 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ceilf(__x); }
# 182 "/usr/include/c++/4.4/cmath" 3
inline long double ceil(long double __x)
# 183 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ceill(__x); }
# 185 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    ceil ( _Tp __x )
    { return __builtin_ceil ( __x ); }
# 191 "/usr/include/c++/4.4/cmath" 3
using ::cos;
# 194 "/usr/include/c++/4.4/cmath" 3
inline float cos(float __x)
# 195 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_cosf(__x); }
# 198 "/usr/include/c++/4.4/cmath" 3
inline long double cos(long double __x)
# 199 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_cosl(__x); }
# 201 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cos ( _Tp __x )
    { return __builtin_cos ( __x ); }
# 207 "/usr/include/c++/4.4/cmath" 3
using ::cosh;
# 210 "/usr/include/c++/4.4/cmath" 3
inline float cosh(float __x)
# 211 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_coshf(__x); }
# 214 "/usr/include/c++/4.4/cmath" 3
inline long double cosh(long double __x)
# 215 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_coshl(__x); }
# 217 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cosh ( _Tp __x )
    { return __builtin_cosh ( __x ); }
# 223 "/usr/include/c++/4.4/cmath" 3
using ::exp;
# 226 "/usr/include/c++/4.4/cmath" 3
inline float exp(float __x)
# 227 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_expf(__x); }
# 230 "/usr/include/c++/4.4/cmath" 3
inline long double exp(long double __x)
# 231 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_expl(__x); }
# 233 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    exp ( _Tp __x )
    { return __builtin_exp ( __x ); }
# 239 "/usr/include/c++/4.4/cmath" 3
using ::fabs;
# 242 "/usr/include/c++/4.4/cmath" 3
inline float fabs(float __x)
# 243 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsf(__x); }
# 246 "/usr/include/c++/4.4/cmath" 3
inline long double fabs(long double __x)
# 247 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsl(__x); }
# 249 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    fabs ( _Tp __x )
    { return __builtin_fabs ( __x ); }
# 255 "/usr/include/c++/4.4/cmath" 3
using ::floor;
# 258 "/usr/include/c++/4.4/cmath" 3
inline float floor(float __x)
# 259 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_floorf(__x); }
# 262 "/usr/include/c++/4.4/cmath" 3
inline long double floor(long double __x)
# 263 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_floorl(__x); }
# 265 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    floor ( _Tp __x )
    { return __builtin_floor ( __x ); }
# 271 "/usr/include/c++/4.4/cmath" 3
using ::fmod;
# 274 "/usr/include/c++/4.4/cmath" 3
inline float fmod(float __x, float __y)
# 275 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 278 "/usr/include/c++/4.4/cmath" 3
inline long double fmod(long double __x, long double __y)
# 279 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 281 "/usr/include/c++/4.4/cmath" 3
using ::frexp;
# 284 "/usr/include/c++/4.4/cmath" 3
inline float frexp(float __x, int *__exp)
# 285 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 288 "/usr/include/c++/4.4/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 289 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 291 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    frexp ( _Tp __x, int * __exp )
    { return __builtin_frexp ( __x, __exp ); }
# 297 "/usr/include/c++/4.4/cmath" 3
using ::ldexp;
# 300 "/usr/include/c++/4.4/cmath" 3
inline float ldexp(float __x, int __exp)
# 301 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 304 "/usr/include/c++/4.4/cmath" 3
inline long double ldexp(long double __x, int __exp)
# 305 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 307 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
  ldexp ( _Tp __x, int __exp )
  { return __builtin_ldexp ( __x, __exp ); }
# 313 "/usr/include/c++/4.4/cmath" 3
using ::log;
# 316 "/usr/include/c++/4.4/cmath" 3
inline float log(float __x)
# 317 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_logf(__x); }
# 320 "/usr/include/c++/4.4/cmath" 3
inline long double log(long double __x)
# 321 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_logl(__x); }
# 323 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log ( _Tp __x )
    { return __builtin_log ( __x ); }
# 329 "/usr/include/c++/4.4/cmath" 3
using ::log10;
# 332 "/usr/include/c++/4.4/cmath" 3
inline float log10(float __x)
# 333 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_log10f(__x); }
# 336 "/usr/include/c++/4.4/cmath" 3
inline long double log10(long double __x)
# 337 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_log10l(__x); }
# 339 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log10 ( _Tp __x )
    { return __builtin_log10 ( __x ); }
# 345 "/usr/include/c++/4.4/cmath" 3
using ::modf;
# 348 "/usr/include/c++/4.4/cmath" 3
inline float modf(float __x, float *__iptr)
# 349 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 352 "/usr/include/c++/4.4/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 353 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 355 "/usr/include/c++/4.4/cmath" 3
using ::pow;
# 358 "/usr/include/c++/4.4/cmath" 3
inline float pow(float __x, float __y)
# 359 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powf(__x, __y); }
# 362 "/usr/include/c++/4.4/cmath" 3
inline long double pow(long double __x, long double __y)
# 363 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powl(__x, __y); }
# 369 "/usr/include/c++/4.4/cmath" 3
inline double pow(double __x, int __i)
# 370 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powi(__x, __i); }
# 373 "/usr/include/c++/4.4/cmath" 3
inline float pow(float __x, int __n)
# 374 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powif(__x, __n); }
# 377 "/usr/include/c++/4.4/cmath" 3
inline long double pow(long double __x, int __n)
# 378 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powil(__x, __n); }
# 381 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    pow ( _Tp __x, _Up __y )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return pow ( __type ( __x ), __type ( __y ) );
    }
# 393 "/usr/include/c++/4.4/cmath" 3
using ::sin;
# 396 "/usr/include/c++/4.4/cmath" 3
inline float sin(float __x)
# 397 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinf(__x); }
# 400 "/usr/include/c++/4.4/cmath" 3
inline long double sin(long double __x)
# 401 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinl(__x); }
# 403 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sin ( _Tp __x )
    { return __builtin_sin ( __x ); }
# 409 "/usr/include/c++/4.4/cmath" 3
using ::sinh;
# 412 "/usr/include/c++/4.4/cmath" 3
inline float sinh(float __x)
# 413 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinhf(__x); }
# 416 "/usr/include/c++/4.4/cmath" 3
inline long double sinh(long double __x)
# 417 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinhl(__x); }
# 419 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sinh ( _Tp __x )
    { return __builtin_sinh ( __x ); }
# 425 "/usr/include/c++/4.4/cmath" 3
using ::sqrt;
# 428 "/usr/include/c++/4.4/cmath" 3
inline float sqrt(float __x)
# 429 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sqrtf(__x); }
# 432 "/usr/include/c++/4.4/cmath" 3
inline long double sqrt(long double __x)
# 433 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sqrtl(__x); }
# 435 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sqrt ( _Tp __x )
    { return __builtin_sqrt ( __x ); }
# 441 "/usr/include/c++/4.4/cmath" 3
using ::tan;
# 444 "/usr/include/c++/4.4/cmath" 3
inline float tan(float __x)
# 445 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanf(__x); }
# 448 "/usr/include/c++/4.4/cmath" 3
inline long double tan(long double __x)
# 449 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanl(__x); }
# 451 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tan ( _Tp __x )
    { return __builtin_tan ( __x ); }
# 457 "/usr/include/c++/4.4/cmath" 3
using ::tanh;
# 460 "/usr/include/c++/4.4/cmath" 3
inline float tanh(float __x)
# 461 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanhf(__x); }
# 464 "/usr/include/c++/4.4/cmath" 3
inline long double tanh(long double __x)
# 465 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanhl(__x); }
# 467 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tanh ( _Tp __x )
    { return __builtin_tanh ( __x ); }
# 473 "/usr/include/c++/4.4/cmath" 3
}
# 492 "/usr/include/c++/4.4/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 494 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    fpclassify ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_fpclassify ( FP_NAN, FP_INFINITE, FP_NORMAL,
      FP_SUBNORMAL, FP_ZERO, __type ( __f ) );
    }
# 504 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isfinite ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isfinite ( __type ( __f ) );
    }
# 513 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isinf ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isinf ( __type ( __f ) );
    }
# 522 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnan ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnan ( __type ( __f ) );
    }
# 531 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnormal ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnormal ( __type ( __f ) );
    }
# 540 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    signbit ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_signbit ( __type ( __f ) );
    }
# 549 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 558 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreaterequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreaterequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 567 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isless ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isless ( __type ( __f1 ), __type ( __f2 ) );
    }
# 576 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 585 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 594 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isunordered ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isunordered ( __type ( __f1 ), __type ( __f2 ) );
    }
# 603 "/usr/include/c++/4.4/cmath" 3
}
# 35 "/usr/include/c++/4.4/bits/cmath.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 37 "/usr/include/c++/4.4/bits/cmath.tcc" 3
template < typename _Tp >
    inline _Tp
    __cmath_power ( _Tp __x, unsigned int __n )
    {
      _Tp __y = __n % 2 ? __x : _Tp ( 1 );

      while ( __n >>= 1 )
        {
          __x = __x * __x;
          if ( __n % 2 )
            __y = __y * __x;
        }

      return __y;
    }
# 53 "/usr/include/c++/4.4/bits/cmath.tcc" 3
}
# 49 "/usr/include/c++/4.4/cstddef" 3
namespace std __attribute((__visibility__("default"))) {
# 51 "/usr/include/c++/4.4/cstddef" 3
using ::ptrdiff_t;
# 52 "/usr/include/c++/4.4/cstddef" 3
using ::size_t;
# 54 "/usr/include/c++/4.4/cstddef" 3
}
# 100 "/usr/include/c++/4.4/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 102 "/usr/include/c++/4.4/cstdlib" 3
using ::div_t;
# 103 "/usr/include/c++/4.4/cstdlib" 3
using ::ldiv_t;
# 105 "/usr/include/c++/4.4/cstdlib" 3
using ::abort;
# 106 "/usr/include/c++/4.4/cstdlib" 3
using ::abs;
# 107 "/usr/include/c++/4.4/cstdlib" 3
using ::atexit;
# 108 "/usr/include/c++/4.4/cstdlib" 3
using ::atof;
# 109 "/usr/include/c++/4.4/cstdlib" 3
using ::atoi;
# 110 "/usr/include/c++/4.4/cstdlib" 3
using ::atol;
# 111 "/usr/include/c++/4.4/cstdlib" 3
using ::bsearch;
# 112 "/usr/include/c++/4.4/cstdlib" 3
using ::calloc;
# 113 "/usr/include/c++/4.4/cstdlib" 3
using ::div;
# 114 "/usr/include/c++/4.4/cstdlib" 3
using ::exit;
# 115 "/usr/include/c++/4.4/cstdlib" 3
using ::free;
# 116 "/usr/include/c++/4.4/cstdlib" 3
using ::getenv;
# 117 "/usr/include/c++/4.4/cstdlib" 3
using ::labs;
# 118 "/usr/include/c++/4.4/cstdlib" 3
using ::ldiv;
# 119 "/usr/include/c++/4.4/cstdlib" 3
using ::malloc;
# 121 "/usr/include/c++/4.4/cstdlib" 3
using ::mblen;
# 122 "/usr/include/c++/4.4/cstdlib" 3
using ::mbstowcs;
# 123 "/usr/include/c++/4.4/cstdlib" 3
using ::mbtowc;
# 125 "/usr/include/c++/4.4/cstdlib" 3
using ::qsort;
# 126 "/usr/include/c++/4.4/cstdlib" 3
using ::rand;
# 127 "/usr/include/c++/4.4/cstdlib" 3
using ::realloc;
# 128 "/usr/include/c++/4.4/cstdlib" 3
using ::srand;
# 129 "/usr/include/c++/4.4/cstdlib" 3
using ::strtod;
# 130 "/usr/include/c++/4.4/cstdlib" 3
using ::strtol;
# 131 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoul;
# 132 "/usr/include/c++/4.4/cstdlib" 3
using ::system;
# 134 "/usr/include/c++/4.4/cstdlib" 3
using ::wcstombs;
# 135 "/usr/include/c++/4.4/cstdlib" 3
using ::wctomb;
# 139 "/usr/include/c++/4.4/cstdlib" 3
inline long abs(long __i) { return labs(__i); }
# 142 "/usr/include/c++/4.4/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 144 "/usr/include/c++/4.4/cstdlib" 3
}
# 157 "/usr/include/c++/4.4/cstdlib" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 160 "/usr/include/c++/4.4/cstdlib" 3
using ::lldiv_t;
# 166 "/usr/include/c++/4.4/cstdlib" 3
using ::_Exit;
# 170 "/usr/include/c++/4.4/cstdlib" 3
inline long long abs(long long __x) { return (__x >= (0)) ? __x : (-__x); }
# 173 "/usr/include/c++/4.4/cstdlib" 3
using ::llabs;
# 176 "/usr/include/c++/4.4/cstdlib" 3
inline lldiv_t div(long long __n, long long __d)
# 177 "/usr/include/c++/4.4/cstdlib" 3
{ lldiv_t __q; (__q.quot) = (__n / __d); (__q.rem) = (__n % __d); return __q; }
# 179 "/usr/include/c++/4.4/cstdlib" 3
using ::lldiv;
# 190 "/usr/include/c++/4.4/cstdlib" 3
using ::atoll;
# 191 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoll;
# 192 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoull;
# 194 "/usr/include/c++/4.4/cstdlib" 3
using ::strtof;
# 195 "/usr/include/c++/4.4/cstdlib" 3
using ::strtold;
# 197 "/usr/include/c++/4.4/cstdlib" 3
}
# 199 "/usr/include/c++/4.4/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 202 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::lldiv_t;
# 204 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::_Exit;
# 205 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::abs;
# 207 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::llabs;
# 208 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::div;
# 209 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::lldiv;
# 211 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::atoll;
# 212 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtof;
# 213 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtoll;
# 214 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtoull;
# 215 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtold;
# 217 "/usr/include/c++/4.4/cstdlib" 3
}
# 2335 "/usr/local/cuda/bin/../include/math_functions.h"
namespace __gnu_cxx {
# 2337 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline long long abs(long long);
# 2338 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2340 "/usr/local/cuda/bin/../include/math_functions.h"
namespace std {
# 2342 "/usr/local/cuda/bin/../include/math_functions.h"
template< class T> extern inline T __pow_helper(T, int);
# 2343 "/usr/local/cuda/bin/../include/math_functions.h"
template< class T> extern inline T __cmath_power(T, unsigned);
# 2344 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2346 "/usr/local/cuda/bin/../include/math_functions.h"
using std::abs;
# 2347 "/usr/local/cuda/bin/../include/math_functions.h"
using std::fabs;
# 2348 "/usr/local/cuda/bin/../include/math_functions.h"
using std::ceil;
# 2349 "/usr/local/cuda/bin/../include/math_functions.h"
using std::floor;
# 2350 "/usr/local/cuda/bin/../include/math_functions.h"
using std::sqrt;
# 2351 "/usr/local/cuda/bin/../include/math_functions.h"
using std::pow;
# 2352 "/usr/local/cuda/bin/../include/math_functions.h"
using std::log;
# 2353 "/usr/local/cuda/bin/../include/math_functions.h"
using std::log10;
# 2354 "/usr/local/cuda/bin/../include/math_functions.h"
using std::fmod;
# 2355 "/usr/local/cuda/bin/../include/math_functions.h"
using std::modf;
# 2356 "/usr/local/cuda/bin/../include/math_functions.h"
using std::exp;
# 2357 "/usr/local/cuda/bin/../include/math_functions.h"
using std::frexp;
# 2358 "/usr/local/cuda/bin/../include/math_functions.h"
using std::ldexp;
# 2359 "/usr/local/cuda/bin/../include/math_functions.h"
using std::asin;
# 2360 "/usr/local/cuda/bin/../include/math_functions.h"
using std::sin;
# 2361 "/usr/local/cuda/bin/../include/math_functions.h"
using std::sinh;
# 2362 "/usr/local/cuda/bin/../include/math_functions.h"
using std::acos;
# 2363 "/usr/local/cuda/bin/../include/math_functions.h"
using std::cos;
# 2364 "/usr/local/cuda/bin/../include/math_functions.h"
using std::cosh;
# 2365 "/usr/local/cuda/bin/../include/math_functions.h"
using std::atan;
# 2366 "/usr/local/cuda/bin/../include/math_functions.h"
using std::atan2;
# 2367 "/usr/local/cuda/bin/../include/math_functions.h"
using std::tan;
# 2368 "/usr/local/cuda/bin/../include/math_functions.h"
using std::tanh;
# 2531 "/usr/local/cuda/bin/../include/math_functions.h"
namespace std {
# 2534 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline long abs(long);
# 2535 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float abs(float);
# 2536 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline double abs(double);
# 2537 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float fabs(float);
# 2538 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float ceil(float);
# 2539 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float floor(float);
# 2540 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float sqrt(float);
# 2541 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float pow(float, float);
# 2542 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float pow(float, int);
# 2543 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline double pow(double, int);
# 2544 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float log(float);
# 2545 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float log10(float);
# 2546 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float fmod(float, float);
# 2547 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float modf(float, float *);
# 2548 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float exp(float);
# 2549 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float frexp(float, int *);
# 2550 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float ldexp(float, int);
# 2551 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float asin(float);
# 2552 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float sin(float);
# 2553 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float sinh(float);
# 2554 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float acos(float);
# 2555 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float cos(float);
# 2556 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float cosh(float);
# 2557 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float atan(float);
# 2558 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float atan2(float, float);
# 2559 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float tan(float);
# 2560 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float tanh(float);
# 2563 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2566 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float logb(float a)
# 2567 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2568 "/usr/local/cuda/bin/../include/math_functions.h"
return logbf(a);
# 2569 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2571 "/usr/local/cuda/bin/../include/math_functions.h"
static inline int ilogb(float a)
# 2572 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2573 "/usr/local/cuda/bin/../include/math_functions.h"
return ilogbf(a);
# 2574 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2576 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float scalbn(float a, int b)
# 2577 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2578 "/usr/local/cuda/bin/../include/math_functions.h"
return scalbnf(a, b);
# 2579 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2581 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float scalbln(float a, long b)
# 2582 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2583 "/usr/local/cuda/bin/../include/math_functions.h"
return scalblnf(a, b);
# 2584 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2586 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float exp2(float a)
# 2587 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2588 "/usr/local/cuda/bin/../include/math_functions.h"
return exp2f(a);
# 2589 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2591 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float exp10(float a)
# 2592 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2593 "/usr/local/cuda/bin/../include/math_functions.h"
return exp10f(a);
# 2594 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2596 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float expm1(float a)
# 2597 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2598 "/usr/local/cuda/bin/../include/math_functions.h"
return expm1f(a);
# 2599 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2601 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float log2(float a)
# 2602 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2603 "/usr/local/cuda/bin/../include/math_functions.h"
return log2f(a);
# 2604 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2606 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float log1p(float a)
# 2607 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2608 "/usr/local/cuda/bin/../include/math_functions.h"
return log1pf(a);
# 2609 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2611 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float rsqrt(float a)
# 2612 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2613 "/usr/local/cuda/bin/../include/math_functions.h"
return rsqrtf(a);
# 2614 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2616 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float acosh(float a)
# 2617 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2618 "/usr/local/cuda/bin/../include/math_functions.h"
return acoshf(a);
# 2619 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2621 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float asinh(float a)
# 2622 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2623 "/usr/local/cuda/bin/../include/math_functions.h"
return asinhf(a);
# 2624 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2626 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float atanh(float a)
# 2627 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2628 "/usr/local/cuda/bin/../include/math_functions.h"
return atanhf(a);
# 2629 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2631 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float hypot(float a, float b)
# 2632 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2633 "/usr/local/cuda/bin/../include/math_functions.h"
return hypotf(a, b);
# 2634 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2636 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float cbrt(float a)
# 2637 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2638 "/usr/local/cuda/bin/../include/math_functions.h"
return cbrtf(a);
# 2639 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2641 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float rcbrt(float a)
# 2642 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2643 "/usr/local/cuda/bin/../include/math_functions.h"
return rcbrtf(a);
# 2644 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2646 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float sinpi(float a)
# 2647 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2648 "/usr/local/cuda/bin/../include/math_functions.h"
return sinpif(a);
# 2649 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2651 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float cospi(float a)
# 2652 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2653 "/usr/local/cuda/bin/../include/math_functions.h"
return cospif(a);
# 2654 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2656 "/usr/local/cuda/bin/../include/math_functions.h"
static inline void sincos(float a, float *sptr, float *cptr)
# 2657 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2658 "/usr/local/cuda/bin/../include/math_functions.h"
sincosf(a, sptr, cptr);
# 2659 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2661 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float j0(float a)
# 2662 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2663 "/usr/local/cuda/bin/../include/math_functions.h"
return j0f(a);
# 2664 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2666 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float j1(float a)
# 2667 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2668 "/usr/local/cuda/bin/../include/math_functions.h"
return j1f(a);
# 2669 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2671 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float jn(int n, float a)
# 2672 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2673 "/usr/local/cuda/bin/../include/math_functions.h"
return jnf(n, a);
# 2674 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2676 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float y0(float a)
# 2677 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2678 "/usr/local/cuda/bin/../include/math_functions.h"
return y0f(a);
# 2679 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2681 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float y1(float a)
# 2682 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2683 "/usr/local/cuda/bin/../include/math_functions.h"
return y1f(a);
# 2684 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2686 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float yn(int n, float a)
# 2687 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2688 "/usr/local/cuda/bin/../include/math_functions.h"
return ynf(n, a);
# 2689 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2691 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erf(float a)
# 2692 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2693 "/usr/local/cuda/bin/../include/math_functions.h"
return erff(a);
# 2694 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2696 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erfinv(float a)
# 2697 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2698 "/usr/local/cuda/bin/../include/math_functions.h"
return erfinvf(a);
# 2699 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2701 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erfc(float a)
# 2702 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2703 "/usr/local/cuda/bin/../include/math_functions.h"
return erfcf(a);
# 2704 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2706 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erfcinv(float a)
# 2707 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2708 "/usr/local/cuda/bin/../include/math_functions.h"
return erfcinvf(a);
# 2709 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2711 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erfcx(float a)
# 2712 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2713 "/usr/local/cuda/bin/../include/math_functions.h"
return erfcxf(a);
# 2714 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2716 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float lgamma(float a)
# 2717 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2718 "/usr/local/cuda/bin/../include/math_functions.h"
return lgammaf(a);
# 2719 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2721 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float tgamma(float a)
# 2722 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2723 "/usr/local/cuda/bin/../include/math_functions.h"
return tgammaf(a);
# 2724 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2726 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float copysign(float a, float b)
# 2727 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2728 "/usr/local/cuda/bin/../include/math_functions.h"
return copysignf(a, b);
# 2729 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2731 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double copysign(double a, float b)
# 2732 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2733 "/usr/local/cuda/bin/../include/math_functions.h"
return copysign(a, (double)b);
# 2734 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2736 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float copysign(float a, double b)
# 2737 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2738 "/usr/local/cuda/bin/../include/math_functions.h"
return copysignf(a, (float)b);
# 2739 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2741 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float nextafter(float a, float b)
# 2742 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2743 "/usr/local/cuda/bin/../include/math_functions.h"
return nextafterf(a, b);
# 2744 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2746 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float remainder(float a, float b)
# 2747 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2748 "/usr/local/cuda/bin/../include/math_functions.h"
return remainderf(a, b);
# 2749 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2751 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float remquo(float a, float b, int *quo)
# 2752 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2753 "/usr/local/cuda/bin/../include/math_functions.h"
return remquof(a, b, quo);
# 2754 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2756 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float round(float a)
# 2757 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2758 "/usr/local/cuda/bin/../include/math_functions.h"
return roundf(a);
# 2759 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2761 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long lround(float a)
# 2762 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2763 "/usr/local/cuda/bin/../include/math_functions.h"
return lroundf(a);
# 2764 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2766 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long llround(float a)
# 2767 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2768 "/usr/local/cuda/bin/../include/math_functions.h"
return llroundf(a);
# 2769 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2771 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float trunc(float a)
# 2772 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2773 "/usr/local/cuda/bin/../include/math_functions.h"
return truncf(a);
# 2774 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2776 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float rint(float a)
# 2777 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2778 "/usr/local/cuda/bin/../include/math_functions.h"
return rintf(a);
# 2779 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2781 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long lrint(float a)
# 2782 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2783 "/usr/local/cuda/bin/../include/math_functions.h"
return lrintf(a);
# 2784 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2786 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long llrint(float a)
# 2787 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2788 "/usr/local/cuda/bin/../include/math_functions.h"
return llrintf(a);
# 2789 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2791 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float nearbyint(float a)
# 2792 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2793 "/usr/local/cuda/bin/../include/math_functions.h"
return nearbyintf(a);
# 2794 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2796 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fdim(float a, float b)
# 2797 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2798 "/usr/local/cuda/bin/../include/math_functions.h"
return fdimf(a, b);
# 2799 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2801 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fma(float a, float b, float c)
# 2802 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2803 "/usr/local/cuda/bin/../include/math_functions.h"
return fmaf(a, b, c);
# 2804 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2806 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fmax(float a, float b)
# 2807 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2808 "/usr/local/cuda/bin/../include/math_functions.h"
return fmaxf(a, b);
# 2809 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2811 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fmin(float a, float b)
# 2812 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2813 "/usr/local/cuda/bin/../include/math_functions.h"
return fminf(a, b);
# 2814 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2816 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned min(unsigned a, unsigned b)
# 2817 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2818 "/usr/local/cuda/bin/../include/math_functions.h"
return umin(a, b);
# 2819 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2821 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned min(int a, unsigned b)
# 2822 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2823 "/usr/local/cuda/bin/../include/math_functions.h"
return umin((unsigned)a, b);
# 2824 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2826 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned min(unsigned a, int b)
# 2827 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2828 "/usr/local/cuda/bin/../include/math_functions.h"
return umin(a, (unsigned)b);
# 2829 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2831 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long min(long long a, long long b)
# 2832 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2833 "/usr/local/cuda/bin/../include/math_functions.h"
return llmin(a, b);
# 2834 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2836 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long min(unsigned long long a, unsigned long long b)
# 2837 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2838 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmin(a, b);
# 2839 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2841 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long min(long long a, unsigned long long b)
# 2842 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2843 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmin((unsigned long long)a, b);
# 2844 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2846 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long min(unsigned long long a, long long b)
# 2847 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2848 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmin(a, (unsigned long long)b);
# 2849 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2851 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float min(float a, float b)
# 2852 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2853 "/usr/local/cuda/bin/../include/math_functions.h"
return fminf(a, b);
# 2854 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2856 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double min(double a, double b)
# 2857 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2858 "/usr/local/cuda/bin/../include/math_functions.h"
return fmin(a, b);
# 2859 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2861 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double min(float a, double b)
# 2862 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2863 "/usr/local/cuda/bin/../include/math_functions.h"
return fmin((double)a, b);
# 2864 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2866 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double min(double a, float b)
# 2867 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2868 "/usr/local/cuda/bin/../include/math_functions.h"
return fmin(a, (double)b);
# 2869 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2871 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned max(unsigned a, unsigned b)
# 2872 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2873 "/usr/local/cuda/bin/../include/math_functions.h"
return umax(a, b);
# 2874 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2876 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned max(int a, unsigned b)
# 2877 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2878 "/usr/local/cuda/bin/../include/math_functions.h"
return umax((unsigned)a, b);
# 2879 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2881 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned max(unsigned a, int b)
# 2882 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2883 "/usr/local/cuda/bin/../include/math_functions.h"
return umax(a, (unsigned)b);
# 2884 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2886 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long max(long long a, long long b)
# 2887 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2888 "/usr/local/cuda/bin/../include/math_functions.h"
return llmax(a, b);
# 2889 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2891 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long max(unsigned long long a, unsigned long long b)
# 2892 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2893 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmax(a, b);
# 2894 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2896 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long max(long long a, unsigned long long b)
# 2897 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2898 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmax((unsigned long long)a, b);
# 2899 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2901 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long max(unsigned long long a, long long b)
# 2902 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2903 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmax(a, (unsigned long long)b);
# 2904 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2906 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float max(float a, float b)
# 2907 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2908 "/usr/local/cuda/bin/../include/math_functions.h"
return fmaxf(a, b);
# 2909 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2911 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double max(double a, double b)
# 2912 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2913 "/usr/local/cuda/bin/../include/math_functions.h"
return fmax(a, b);
# 2914 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2916 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double max(float a, double b)
# 2917 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2918 "/usr/local/cuda/bin/../include/math_functions.h"
return fmax((double)a, b);
# 2919 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2921 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double max(double a, float b)
# 2922 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2923 "/usr/local/cuda/bin/../include/math_functions.h"
return fmax(a, (double)b);
# 2924 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 73 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
template< class T, int dim = 1>
# 74 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
struct surface : public surfaceReference {
# 76 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
surface()
# 77 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
{
# 78 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 79 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
}
# 81 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
surface(cudaChannelFormatDesc desc)
# 82 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
{
# 83 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
(channelDesc) = desc;
# 84 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
}
# 85 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
};
# 87 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
template< int dim>
# 88 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
struct surface< void, dim> : public surfaceReference {
# 90 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
surface()
# 91 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
{
# 92 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< void> ();
# 93 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
}
# 94 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
};
# 73 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType>
# 74 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
struct texture : public textureReference {
# 76 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
texture(int norm = 0, cudaTextureFilterMode
# 77 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
fMode = cudaFilterModePoint, cudaTextureAddressMode
# 78 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
aMode = cudaAddressModeClamp)
# 79 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
{
# 80 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(normalized) = norm;
# 81 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(filterMode) = fMode;
# 82 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 83 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 84 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 85 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 86 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(sRGB) = 0;
# 87 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
}
# 89 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
texture(int norm, cudaTextureFilterMode
# 90 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
fMode, cudaTextureAddressMode
# 91 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
aMode, cudaChannelFormatDesc
# 92 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
desc)
# 93 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
{
# 94 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(normalized) = norm;
# 95 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(filterMode) = fMode;
# 96 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 97 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 98 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 99 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(channelDesc) = desc;
# 100 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(sRGB) = 0;
# 101 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
}
# 102 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
};
# 1103 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline int mulhi(int a, int b)
# 1104 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1106 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1108 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b)
# 1109 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1111 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1113 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b)
# 1114 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1116 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1118 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b)
# 1119 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1121 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1123 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline long long mul64hi(long long a, long long b)
# 1124 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1126 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1128 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b)
# 1129 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1131 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1133 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b)
# 1134 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1136 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1138 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b)
# 1139 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1141 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1143 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline int float_as_int(float a)
# 1144 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 1146 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1148 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline float int_as_float(int a)
# 1149 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 1151 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1153 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline float saturate(float a)
# 1154 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 1156 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1158 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline int mul24(int a, int b)
# 1159 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1161 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1163 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b)
# 1164 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1166 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1168 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void trap()
# 1169 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 1171 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1174 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void brkpt(int c = 0)
# 1175 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)c;
# 1177 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1179 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void syncthreads()
# 1180 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 1182 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1184 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void prof_trigger(int e)
# 1185 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)e;
# 1202 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1204 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void threadfence(bool global = true)
# 1205 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)global;
# 1207 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1209 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode = cudaRoundZero)
# 1210 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1215 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1217 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero)
# 1218 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1223 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1225 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest)
# 1226 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1231 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1233 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest)
# 1234 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1239 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 96 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd(int *address, int val)
# 97 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 99 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 101 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val)
# 102 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 104 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 106 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicSub(int *address, int val)
# 107 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 109 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 111 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val)
# 112 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 114 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 116 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch(int *address, int val)
# 117 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 119 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 121 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val)
# 122 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 124 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 126 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch(float *address, float val)
# 127 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 129 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 131 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin(int *address, int val)
# 132 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 134 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 136 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val)
# 137 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 139 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 141 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax(int *address, int val)
# 142 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 144 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 146 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val)
# 147 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 149 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 151 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val)
# 152 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 154 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 156 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val)
# 157 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 159 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 161 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd(int *address, int val)
# 162 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 164 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 166 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val)
# 167 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 169 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 171 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr(int *address, int val)
# 172 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 174 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 176 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val)
# 177 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 179 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 181 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor(int *address, int val)
# 182 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 184 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 186 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val)
# 187 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 189 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 191 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val)
# 192 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 194 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 196 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val)
# 197 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 199 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 81 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val)
# 82 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 84 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 86 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val)
# 87 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 89 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 91 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val)
# 92 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 94 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 96 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline bool any(bool cond)
# 97 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
# 99 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 101 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline bool all(bool cond)
# 102 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
# 104 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 521 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode)
# 522 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
# 527 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 529 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest)
# 530 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 535 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 537 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest)
# 538 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 543 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 545 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode = cudaRoundZero)
# 546 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 551 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 553 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero)
# 554 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 559 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 561 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode = cudaRoundZero)
# 562 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 567 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 569 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode = cudaRoundZero)
# 570 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 575 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 577 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode = cudaRoundNearest)
# 578 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 583 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 585 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode = cudaRoundNearest)
# 586 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 591 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 593 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest)
# 594 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 596 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 598 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest)
# 599 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 601 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 603 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest)
# 604 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 606 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 77 "/usr/local/cuda/bin/../include/sm_20_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd(float *address, float val)
# 78 "/usr/local/cuda/bin/../include/sm_20_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 80 "/usr/local/cuda/bin/../include/sm_20_atomic_functions.h"
exit(___);}
# 239 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
__attribute__((unused)) static inline unsigned ballot(bool pred)
# 240 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 242 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 244 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
__attribute__((unused)) static inline int syncthreads_count(bool pred)
# 245 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 247 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 249 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_and(bool pred)
# 250 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 252 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 254 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_or(bool pred)
# 255 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 257 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 93 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl(int var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 98 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 100 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_up(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 105 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 107 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_down(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 112 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 114 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_xor(int var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 119 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 121 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl(float var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 127 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 129 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_up(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 135 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 137 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_down(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 143 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 145 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_xor(float var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 151 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 99 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 100 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dread(T *res, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 101 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
# 108 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 110 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 111 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 112 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 118 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 120 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 121 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dread(T *res, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 122 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
# 124 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 127 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 128 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 130 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 133 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 134 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 136 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 139 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 140 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 142 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 145 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 146 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 148 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 151 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 152 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 154 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 157 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 158 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 162 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 165 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 166 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 168 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 171 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 172 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 176 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 179 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 180 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 182 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 185 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 186 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 188 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 191 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 192 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 194 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 197 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 198 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 200 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 203 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 204 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 206 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 209 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 210 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 214 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 217 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 218 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 220 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 223 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 224 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 228 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 231 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 232 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 234 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 237 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 238 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 240 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 243 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 244 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 246 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 249 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 250 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 252 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 255 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 256 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 258 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 261 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 262 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 266 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 269 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 270 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 272 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 275 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 276 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 280 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 283 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 284 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 286 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 289 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 290 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 292 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 295 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 296 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 298 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 301 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 302 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 304 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 307 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 308 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 310 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 313 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 314 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 318 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 321 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 322 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 324 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 387 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 388 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 390 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 393 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 394 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 396 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 399 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 400 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 404 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 407 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 408 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 412 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 447 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 448 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dread(T *res, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 449 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 456 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 458 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 459 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 460 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 466 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 468 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 469 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dread(T *res, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 470 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
# 472 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 475 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 476 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 478 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 481 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 482 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 484 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 487 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 488 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 490 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 493 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 494 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 496 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 499 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 500 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 502 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 505 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 506 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 510 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 513 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 514 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 516 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 519 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 520 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 524 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 527 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 528 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 530 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 533 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 534 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 536 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 539 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 540 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 542 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 545 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 546 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 548 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 551 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 552 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 554 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 557 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 558 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 562 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 565 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 566 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 568 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 571 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 572 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 576 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 579 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 580 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 582 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 585 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 586 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 588 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 591 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 592 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 594 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 597 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 598 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 600 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 603 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 604 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 606 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 609 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 610 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 614 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 617 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 618 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 620 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 623 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 624 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 628 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 631 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 632 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 634 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 637 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 638 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 640 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 643 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 644 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 646 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 649 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 650 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 652 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 655 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 656 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 658 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 661 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 662 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 666 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 669 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 670 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 672 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 735 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 736 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 738 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 741 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 742 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 744 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 747 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 748 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 752 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 755 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 756 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 760 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 795 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 796 "/usr/local/cuda/bin/../include/surface_functions.h"
surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 797 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 804 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 806 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 807 "/usr/local/cuda/bin/../include/surface_functions.h"
surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 808 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 814 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 816 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 817 "/usr/local/cuda/bin/../include/surface_functions.h"
surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 818 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 820 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 823 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 824 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 826 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 829 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 830 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 832 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 835 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 836 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 838 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 841 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 842 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 844 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 847 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 848 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 850 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 853 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 854 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 858 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 861 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 862 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 864 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 867 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 868 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 872 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 875 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 876 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 878 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 881 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 882 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 884 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 887 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 888 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 890 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 893 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 894 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 896 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 899 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 900 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 902 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 905 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 906 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 910 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 913 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 914 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 916 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 919 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 920 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 924 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 927 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 928 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 930 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 933 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 934 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 936 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 939 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 940 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 942 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 945 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 946 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 948 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 951 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 952 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 954 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 957 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 958 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 962 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 965 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 966 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 968 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 971 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 972 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 976 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 979 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 980 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 982 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 985 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 986 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 988 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 991 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 992 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 994 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 997 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 998 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1000 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1003 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1004 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1006 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1009 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1010 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1014 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1017 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1018 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1020 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1083 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1084 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1086 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1089 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1090 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1092 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1095 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1096 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1100 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1103 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1104 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1108 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1143 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1144 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1145 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 1152 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1154 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 1155 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1156 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1162 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1164 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1165 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1166 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
# 1168 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1171 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1172 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1174 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1177 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1178 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1180 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1183 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1184 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1186 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1189 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1190 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1192 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1195 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1196 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1198 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1201 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1202 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1206 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1209 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1210 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1212 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1215 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1216 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1220 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1223 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1224 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1226 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1229 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1230 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1232 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1235 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1236 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1238 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1241 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1242 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1244 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1247 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1248 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1250 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1253 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1254 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1258 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1261 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1262 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1264 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1267 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1268 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1272 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1275 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1276 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1278 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1281 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1282 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1284 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1287 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1288 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1290 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1293 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1294 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1296 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1299 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1300 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1302 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1305 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1306 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1310 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1313 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1314 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1316 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1319 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1320 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1324 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1327 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1328 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1330 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1333 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1334 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1336 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1339 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1340 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1342 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1345 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1346 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1348 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1351 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1352 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1354 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1357 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1358 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1362 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1365 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1366 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1368 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1431 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1432 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1434 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1437 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1438 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1440 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1443 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1444 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1448 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1451 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1452 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1456 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1491 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1492 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1493 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 1500 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1502 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 1503 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1504 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1510 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1512 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1513 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1514 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1516 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1519 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1520 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1522 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1525 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1526 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1528 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1531 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1532 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1534 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1537 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1538 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1540 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1543 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1544 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1546 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1549 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1550 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1554 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1557 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1558 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1560 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1563 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1564 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1568 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1571 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1572 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1574 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1577 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1578 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1580 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1583 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1584 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1586 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1589 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1590 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1592 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1595 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1596 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1598 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1601 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1602 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1606 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1609 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1610 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1612 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1615 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1616 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1620 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1623 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1624 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1626 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1629 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1630 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1632 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1635 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1636 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1638 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1641 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1642 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1644 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1647 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1648 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1650 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1653 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1654 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1658 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1661 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1662 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1664 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1667 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1668 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1672 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1675 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1676 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1678 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1681 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1682 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1684 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1687 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1688 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1690 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1693 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1694 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1696 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1699 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1700 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1702 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1705 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1706 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1710 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1713 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1714 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1716 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1779 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1780 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1782 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1785 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1786 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1788 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1791 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1792 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1796 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1799 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1800 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1804 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1839 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1840 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1841 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 1848 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1850 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 1851 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1852 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1858 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1860 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1861 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1862 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1864 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1867 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1868 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1870 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1873 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1874 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1876 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1879 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1880 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1882 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1885 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1886 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1888 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1891 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1892 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1894 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1897 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1898 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1902 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1905 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1906 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1908 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1911 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1912 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1916 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1919 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1920 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1922 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1925 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1926 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1928 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1931 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1932 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1934 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1937 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1938 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1940 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1943 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1944 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1946 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1949 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1950 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1954 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1957 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1958 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1960 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1963 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1964 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1968 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1971 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1972 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1974 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1977 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1978 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1980 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1983 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1984 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1986 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1989 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1990 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1992 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1995 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1996 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1998 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2001 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2002 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2006 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2009 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2010 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2012 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2015 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2016 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2020 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2023 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2024 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2026 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2029 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2030 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2032 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2035 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2036 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2038 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2041 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2042 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2044 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2047 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2048 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2050 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2053 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2054 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2058 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2061 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2062 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2064 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2127 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2128 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2130 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2133 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2134 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2136 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2139 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2140 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2144 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2147 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2148 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2152 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2188 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2189 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2190 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 2197 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2199 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 2200 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2201 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2207 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2209 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2210 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2211 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2213 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2216 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2217 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2219 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2222 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2223 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2225 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2228 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2229 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2231 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2234 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2235 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2237 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2240 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2241 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2243 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2246 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2247 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2251 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2254 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2255 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2257 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2260 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2261 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2265 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2268 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2269 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2271 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2274 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2275 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2277 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2280 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2281 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2283 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2286 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2287 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2289 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2292 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2293 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2295 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2298 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2299 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2303 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2306 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2307 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2309 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2312 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2313 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2317 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2320 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2321 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2323 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2326 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2327 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2329 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2332 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2333 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2335 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2338 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2339 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2341 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2344 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2345 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2347 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2350 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2351 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2355 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2358 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2359 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2361 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2364 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2365 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2369 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2372 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2373 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2375 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2378 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2379 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2381 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2384 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2385 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2387 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2390 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2391 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2393 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2396 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2397 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2399 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2402 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2403 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2407 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2410 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2411 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2413 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2476 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2477 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2479 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2482 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2483 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2485 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2488 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2489 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2493 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2496 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2497 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2501 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2537 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2538 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dwrite(T val, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2539 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
# 2557 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2559 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2560 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dwrite(T val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2561 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2563 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2566 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2567 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2569 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2571 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(signed char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2572 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2574 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2576 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2577 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2579 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2581 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2582 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2584 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2586 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2587 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2589 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2591 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2592 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2594 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2596 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2597 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2599 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2601 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2602 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2604 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2606 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2607 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2609 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2611 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2612 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2614 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2616 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2617 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2619 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2621 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2622 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2624 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2626 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2627 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2629 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2631 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2632 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2634 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2636 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2637 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2639 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2641 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2642 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2644 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2646 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2647 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2649 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2651 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2652 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2654 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2656 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2657 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2659 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2661 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2662 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2664 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2666 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2667 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2669 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2671 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2672 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2674 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2676 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2677 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2679 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2681 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2682 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2684 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2686 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2687 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2689 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2691 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2692 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2694 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2696 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2697 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2699 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2701 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(longlong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2702 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2704 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2706 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ulonglong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2707 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2709 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2711 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(longlong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2712 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2714 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2716 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ulonglong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2717 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2719 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2765 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2766 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2768 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2770 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2771 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2773 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2775 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2776 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2778 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2780 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2781 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2783 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2819 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2820 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dwrite(T val, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2821 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 2839 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2841 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2842 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dwrite(T val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2843 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2845 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2848 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2849 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2851 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2853 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(signed char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2854 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2856 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2858 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2859 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2861 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2863 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2864 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2866 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2868 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2869 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2871 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2873 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2874 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2876 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2878 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2879 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2881 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2883 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2884 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2886 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2888 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2889 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2891 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2893 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2894 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2896 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2898 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2899 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2901 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2903 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2904 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2906 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2908 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2909 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2911 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2913 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2914 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2916 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2918 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2919 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2921 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2923 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2924 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2926 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2928 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2929 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2931 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2933 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2934 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2936 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2938 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2939 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2941 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2943 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2944 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2946 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2948 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2949 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2951 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2953 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2954 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2956 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2958 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2959 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2961 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2963 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2964 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2966 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2968 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2969 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2971 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2973 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2974 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2976 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2978 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2979 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2981 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2983 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(longlong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2984 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2986 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2988 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ulonglong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2989 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2991 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2993 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(longlong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2994 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2996 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2998 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ulonglong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2999 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3001 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3047 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3048 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3050 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3052 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3053 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3055 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3057 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3058 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3060 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3062 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3063 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3065 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3101 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3102 "/usr/local/cuda/bin/../include/surface_functions.h"
surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3103 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 3121 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3123 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3124 "/usr/local/cuda/bin/../include/surface_functions.h"
surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3125 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3127 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3130 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3131 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3133 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3135 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(signed char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3136 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3138 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3140 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3141 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3143 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3145 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3146 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3148 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3150 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uchar1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3151 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3153 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3155 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3156 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3158 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3160 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uchar2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3161 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3163 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3165 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3166 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3168 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3170 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uchar4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3171 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3173 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3175 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3176 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3178 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3180 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3181 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3183 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3185 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3186 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3188 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3190 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ushort1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3191 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3193 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3195 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3196 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3198 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3200 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ushort2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3201 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3203 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3205 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3206 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3208 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3210 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ushort4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3211 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3213 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3215 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3216 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3218 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3220 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3221 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3223 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3225 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3226 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3228 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3230 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uint1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3231 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3233 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3235 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3236 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3238 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3240 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uint2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3241 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3243 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3245 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3246 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3248 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3250 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uint4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3251 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3253 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3255 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3256 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3258 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3260 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3261 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3263 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3265 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(longlong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3266 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3268 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3270 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ulonglong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3271 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3273 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3275 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(longlong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3276 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3278 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3280 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ulonglong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3281 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3283 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3329 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3330 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3332 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3334 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3335 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3337 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3339 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3340 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3342 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3344 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3345 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3347 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3383 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3384 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3385 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 3403 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3405 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3406 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3407 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3409 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3412 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3413 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3415 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3417 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(signed char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3418 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3420 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3422 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3423 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3425 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3427 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3428 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3430 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3432 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uchar1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3433 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3435 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3437 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3438 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3440 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3442 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uchar2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3443 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3445 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3447 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3448 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3450 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3452 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uchar4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3453 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3455 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3457 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3458 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3460 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3462 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3463 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3465 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3467 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3468 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3470 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3472 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ushort1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3473 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3475 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3477 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3478 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3480 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3482 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ushort2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3483 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3485 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3487 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3488 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3490 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3492 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ushort4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3493 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3495 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3497 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3498 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3500 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3502 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3503 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3505 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3507 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3508 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3510 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3512 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uint1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3513 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3515 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3517 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3518 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3520 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3522 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uint2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3523 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3525 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3527 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3528 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3530 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3532 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uint4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3533 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3535 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3537 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3538 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3540 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3542 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3543 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3545 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3547 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(longlong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3548 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3550 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3552 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3553 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3555 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3557 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(longlong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3558 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3560 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3562 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3563 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3565 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3611 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3612 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3614 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3616 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3617 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3619 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3621 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3622 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3624 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3626 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3627 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3629 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3665 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3666 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3667 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 3685 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3687 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3688 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3689 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3691 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3694 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3695 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3697 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3699 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(signed char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3700 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3702 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3704 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3705 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3707 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3709 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3710 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3712 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3714 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uchar1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3715 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3717 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3719 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3720 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3722 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3724 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uchar2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3725 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3727 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3729 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3730 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3732 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3734 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uchar4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3735 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3737 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3739 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3740 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3742 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3744 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3745 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3747 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3749 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3750 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3752 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3754 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ushort1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3755 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3757 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3759 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3760 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3762 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3764 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ushort2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3765 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3767 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3769 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3770 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3772 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3774 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ushort4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3775 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3777 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3779 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3780 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3782 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3784 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3785 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3787 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3789 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3790 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3792 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3794 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uint1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3795 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3797 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3799 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3800 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3802 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3804 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uint2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3805 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3807 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3809 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3810 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3812 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3814 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uint4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3815 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3817 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3819 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3820 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3822 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3824 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3825 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3827 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3829 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(longlong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3830 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3832 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3834 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3835 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3837 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3839 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(longlong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3840 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3842 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3844 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3845 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3847 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3893 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3894 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3896 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3898 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3899 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3901 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3903 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3904 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3906 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3908 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3909 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3911 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3947 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3948 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3949 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 3967 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3969 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3970 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3971 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3973 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3976 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3977 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3979 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3981 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(signed char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3982 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3984 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3986 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3987 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3989 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3991 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3992 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3994 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3996 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uchar1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3997 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3999 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4001 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4002 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4004 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4006 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uchar2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4007 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4009 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4011 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4012 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4014 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4016 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uchar4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4017 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4019 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4021 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4022 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4024 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4026 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4027 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4029 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4031 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4032 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4034 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4036 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ushort1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4037 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4039 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4041 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4042 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4044 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4046 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ushort2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4047 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4049 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4051 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4052 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4054 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4056 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ushort4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4057 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4059 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4061 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4062 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4064 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4066 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4067 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4069 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4071 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4072 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4074 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4076 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uint1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4077 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4079 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4081 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4082 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4084 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4086 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uint2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4087 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4089 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4091 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4092 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4094 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4096 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uint4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4097 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4099 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4101 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4102 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4104 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4106 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4107 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4109 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4111 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(longlong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4112 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4114 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4116 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ulonglong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4117 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4119 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4121 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(longlong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4122 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4124 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4126 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ulonglong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4127 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4129 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4175 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4176 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4178 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4180 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4181 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4183 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4185 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4186 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4188 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4190 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4191 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4193 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4229 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 4230 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4231 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 4249 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4251 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 4252 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4253 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4255 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4258 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4259 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4261 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4263 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(signed char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4264 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4266 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4268 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4269 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4271 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4273 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4274 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4276 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4278 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4279 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4281 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4283 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4284 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4286 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4288 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4289 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4291 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4293 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4294 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4296 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4298 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4299 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4301 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4303 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4304 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4306 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4308 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4309 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4311 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4313 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4314 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4316 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4318 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4319 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4321 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4323 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4324 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4326 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4328 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4329 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4331 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4333 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4334 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4336 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4338 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4339 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4341 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4343 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4344 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4346 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4348 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4349 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4351 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4353 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4354 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4356 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4358 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uint1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4359 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4361 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4363 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4364 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4366 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4368 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uint2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4369 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4371 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4373 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4374 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4376 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4378 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uint4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4379 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4381 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4383 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4384 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4386 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4388 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4389 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4391 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4393 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4394 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4396 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4398 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4399 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4401 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4403 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4404 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4406 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4408 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4409 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4411 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4457 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4458 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4460 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4462 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4463 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4465 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4467 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4468 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4470 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4472 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4473 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4475 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 96 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex1Dfetch(texture< char, 1, cudaReadModeElementType> t, int x)
# 97 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 105 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 107 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType> t, int x)
# 108 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 112 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 114 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType> t, int x)
# 115 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 119 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 121 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType> t, int x)
# 122 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 126 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 128 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType> t, int x)
# 129 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 133 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 135 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType> t, int x)
# 136 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 140 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 142 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType> t, int x)
# 143 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 147 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 149 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType> t, int x)
# 150 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 154 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 156 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType> t, int x)
# 157 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 161 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 169 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex1Dfetch(texture< short, 1, cudaReadModeElementType> t, int x)
# 170 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 174 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 176 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType> t, int x)
# 177 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 181 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 183 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType> t, int x)
# 184 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 188 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 190 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType> t, int x)
# 191 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 195 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 197 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType> t, int x)
# 198 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 202 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 204 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType> t, int x)
# 205 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 209 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 211 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType> t, int x)
# 212 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 216 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 218 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType> t, int x)
# 219 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 223 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 231 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex1Dfetch(texture< int, 1, cudaReadModeElementType> t, int x)
# 232 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 236 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 238 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType> t, int x)
# 239 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 243 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 245 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType> t, int x)
# 246 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 250 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 252 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType> t, int x)
# 253 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 257 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 259 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType> t, int x)
# 260 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 264 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 266 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType> t, int x)
# 267 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 271 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 273 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType> t, int x)
# 274 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 278 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 280 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType> t, int x)
# 281 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 285 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 359 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< float, 1, cudaReadModeElementType> t, int x)
# 360 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 364 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 366 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType> t, int x)
# 367 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 371 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 373 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType> t, int x)
# 374 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 378 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 380 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType> t, int x)
# 381 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 385 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 393 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat> t, int x)
# 394 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 403 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 405 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat> t, int x)
# 406 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 411 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 413 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, int x)
# 414 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 419 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 421 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat> t, int x)
# 422 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 427 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 429 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, int x)
# 430 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 435 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 437 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat> t, int x)
# 438 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 443 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 445 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, int x)
# 446 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 451 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 453 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat> t, int x)
# 454 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 459 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 461 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, int x)
# 462 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 467 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 475 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat> t, int x)
# 476 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 481 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 483 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, int x)
# 484 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 489 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 491 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat> t, int x)
# 492 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 497 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 499 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, int x)
# 500 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 505 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 507 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat> t, int x)
# 508 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 513 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 515 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, int x)
# 516 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 521 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 523 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat> t, int x)
# 524 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 529 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 531 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, int x)
# 532 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 537 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 545 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex1D(texture< char, 1, cudaReadModeElementType> t, float x)
# 546 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 554 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 556 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex1D(texture< signed char, 1, cudaReadModeElementType> t, float x)
# 557 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 561 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 563 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType> t, float x)
# 564 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 568 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 570 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex1D(texture< char1, 1, cudaReadModeElementType> t, float x)
# 571 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 575 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 577 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType> t, float x)
# 578 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 582 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 584 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex1D(texture< char2, 1, cudaReadModeElementType> t, float x)
# 585 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 589 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 591 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType> t, float x)
# 592 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 596 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 598 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex1D(texture< char4, 1, cudaReadModeElementType> t, float x)
# 599 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 603 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 605 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType> t, float x)
# 606 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 610 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 618 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex1D(texture< short, 1, cudaReadModeElementType> t, float x)
# 619 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 623 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 625 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType> t, float x)
# 626 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 630 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 632 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex1D(texture< short1, 1, cudaReadModeElementType> t, float x)
# 633 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 637 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 639 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType> t, float x)
# 640 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 644 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 646 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex1D(texture< short2, 1, cudaReadModeElementType> t, float x)
# 647 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 651 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 653 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType> t, float x)
# 654 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 658 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 660 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex1D(texture< short4, 1, cudaReadModeElementType> t, float x)
# 661 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 665 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 667 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType> t, float x)
# 668 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 672 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 680 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex1D(texture< int, 1, cudaReadModeElementType> t, float x)
# 681 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 685 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 687 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType> t, float x)
# 688 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 692 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 694 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex1D(texture< int1, 1, cudaReadModeElementType> t, float x)
# 695 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 699 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 701 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType> t, float x)
# 702 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 706 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 708 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex1D(texture< int2, 1, cudaReadModeElementType> t, float x)
# 709 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 713 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 715 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType> t, float x)
# 716 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 720 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 722 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex1D(texture< int4, 1, cudaReadModeElementType> t, float x)
# 723 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 727 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 729 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType> t, float x)
# 730 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 734 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 814 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< float, 1, cudaReadModeElementType> t, float x)
# 815 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 819 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 821 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< float1, 1, cudaReadModeElementType> t, float x)
# 822 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 826 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 828 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< float2, 1, cudaReadModeElementType> t, float x)
# 829 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 833 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 835 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< float4, 1, cudaReadModeElementType> t, float x)
# 836 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 840 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 848 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat> t, float x)
# 849 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 858 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 860 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x)
# 861 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 866 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 868 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x)
# 869 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 874 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 876 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x)
# 877 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 882 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 884 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x)
# 885 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 890 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 892 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x)
# 893 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 898 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 900 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x)
# 901 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 906 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 908 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x)
# 909 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 914 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 916 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x)
# 917 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 922 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 930 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat> t, float x)
# 931 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 936 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 938 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x)
# 939 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 944 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 946 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x)
# 947 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 952 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 954 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x)
# 955 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 960 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 962 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x)
# 963 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 968 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 970 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x)
# 971 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 976 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 978 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x)
# 979 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 984 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 986 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x)
# 987 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 992 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1000 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex2D(texture< char, 2, cudaReadModeElementType> t, float x, float y)
# 1001 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1009 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1011 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex2D(texture< signed char, 2, cudaReadModeElementType> t, float x, float y)
# 1012 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1016 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1018 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y)
# 1019 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1023 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1025 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex2D(texture< char1, 2, cudaReadModeElementType> t, float x, float y)
# 1026 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1030 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1032 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y)
# 1033 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1037 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1039 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex2D(texture< char2, 2, cudaReadModeElementType> t, float x, float y)
# 1040 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1044 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1046 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y)
# 1047 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1051 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1053 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2D(texture< char4, 2, cudaReadModeElementType> t, float x, float y)
# 1054 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1058 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1060 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y)
# 1061 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1065 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1073 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex2D(texture< short, 2, cudaReadModeElementType> t, float x, float y)
# 1074 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1078 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1080 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y)
# 1081 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1085 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1087 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex2D(texture< short1, 2, cudaReadModeElementType> t, float x, float y)
# 1088 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1092 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1094 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y)
# 1095 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1099 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1101 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex2D(texture< short2, 2, cudaReadModeElementType> t, float x, float y)
# 1102 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1106 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1108 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y)
# 1109 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1113 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1115 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2D(texture< short4, 2, cudaReadModeElementType> t, float x, float y)
# 1116 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1120 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1122 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y)
# 1123 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1127 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1135 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex2D(texture< int, 2, cudaReadModeElementType> t, float x, float y)
# 1136 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1140 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1142 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y)
# 1143 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1147 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1149 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex2D(texture< int1, 2, cudaReadModeElementType> t, float x, float y)
# 1150 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1154 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1156 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType> t, float x, float y)
# 1157 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1161 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1163 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex2D(texture< int2, 2, cudaReadModeElementType> t, float x, float y)
# 1164 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1168 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1170 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType> t, float x, float y)
# 1171 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1175 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1177 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2D(texture< int4, 2, cudaReadModeElementType> t, float x, float y)
# 1178 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1182 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1184 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType> t, float x, float y)
# 1185 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1189 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1263 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< float, 2, cudaReadModeElementType> t, float x, float y)
# 1264 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1268 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1270 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< float1, 2, cudaReadModeElementType> t, float x, float y)
# 1271 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1275 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1277 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< float2, 2, cudaReadModeElementType> t, float x, float y)
# 1278 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1282 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1284 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< float4, 2, cudaReadModeElementType> t, float x, float y)
# 1285 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1289 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1297 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1298 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1307 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1309 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1310 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1315 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1317 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1318 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1323 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1325 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1326 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1331 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1333 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1334 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1339 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1341 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1342 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1347 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1349 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1350 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1355 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1357 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1358 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1363 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1365 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1366 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1371 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1379 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1380 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1385 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1387 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1388 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1393 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1395 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1396 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1401 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1403 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1404 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1409 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1411 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1412 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1417 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1419 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1420 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1425 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1427 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1428 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1433 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1435 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1436 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1441 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1449 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex1DLayered(texture< char, 241, cudaReadModeElementType> t, float x, int layer)
# 1450 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1458 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1460 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer)
# 1461 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1465 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1467 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer)
# 1468 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1472 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1474 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType> t, float x, int layer)
# 1475 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1479 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1481 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer)
# 1482 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1486 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1488 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType> t, float x, int layer)
# 1489 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1493 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1495 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer)
# 1496 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1500 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1502 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType> t, float x, int layer)
# 1503 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1507 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1509 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer)
# 1510 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1514 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1522 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex1DLayered(texture< short, 241, cudaReadModeElementType> t, float x, int layer)
# 1523 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1527 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1529 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer)
# 1530 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1534 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1536 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType> t, float x, int layer)
# 1537 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1541 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1543 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer)
# 1544 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1548 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1550 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType> t, float x, int layer)
# 1551 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1555 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1557 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer)
# 1558 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1562 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1564 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType> t, float x, int layer)
# 1565 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1569 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1571 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer)
# 1572 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1576 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1584 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex1DLayered(texture< int, 241, cudaReadModeElementType> t, float x, int layer)
# 1585 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1589 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1591 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer)
# 1592 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1596 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1598 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType> t, float x, int layer)
# 1599 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1603 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1605 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer)
# 1606 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1610 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1612 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType> t, float x, int layer)
# 1613 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1617 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1619 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer)
# 1620 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1624 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1626 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType> t, float x, int layer)
# 1627 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1631 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1633 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer)
# 1634 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1638 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1712 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< float, 241, cudaReadModeElementType> t, float x, int layer)
# 1713 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1717 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1719 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType> t, float x, int layer)
# 1720 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1724 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1726 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType> t, float x, int layer)
# 1727 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1731 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1733 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType> t, float x, int layer)
# 1734 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1738 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1746 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1747 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1756 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1758 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1759 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1764 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1766 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1767 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1772 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1774 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1775 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1780 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1782 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1783 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1788 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1790 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1791 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1796 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1798 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1799 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1804 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1806 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1807 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1812 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1814 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1815 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1820 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1828 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1829 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1834 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1836 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1837 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1842 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1844 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1845 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1850 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1852 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1853 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1858 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1860 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1861 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1866 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1868 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1869 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1874 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1876 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1877 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1882 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1884 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1885 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1890 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1898 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex2DLayered(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1899 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1907 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1909 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1910 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1914 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1916 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1917 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1921 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1923 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1924 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1928 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1930 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1931 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1935 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1937 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1938 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1942 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1944 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1945 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1949 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1951 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1952 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1956 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1958 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1959 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1963 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1971 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex2DLayered(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1972 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1976 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1978 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1979 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1983 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1985 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1986 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1990 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1992 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1993 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1997 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1999 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2000 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2004 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2006 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2007 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2011 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2013 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2014 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2018 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2020 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2021 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2025 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2033 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex2DLayered(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2034 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2038 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2040 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2041 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2045 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2047 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2048 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2052 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2054 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2055 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2059 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2061 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2062 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2066 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2068 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2069 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2073 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2075 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2076 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2080 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2082 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2083 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2087 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2161 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2162 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2166 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2168 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2169 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2173 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2175 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2176 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2180 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2182 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2183 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2187 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2195 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2196 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2205 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2207 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2208 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2213 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2215 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2216 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2221 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2223 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2224 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2229 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2231 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2232 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2237 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2239 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2240 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2245 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2247 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2248 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2253 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2255 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2256 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2261 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2263 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2264 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2269 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2277 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2278 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2283 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2285 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2286 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2291 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2293 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2294 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2299 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2301 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2302 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2307 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2309 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2310 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2315 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2317 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2318 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2323 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2325 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2326 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2331 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2333 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2334 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2339 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2347 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex3D(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2348 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2356 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2358 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex3D(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2359 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2363 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2365 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2366 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2370 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2372 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex3D(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2373 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2377 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2379 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2380 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2384 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2386 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex3D(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2387 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2391 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2393 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2394 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2398 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2400 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex3D(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2401 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2405 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2407 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2408 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2412 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2420 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex3D(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2421 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2425 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2427 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2428 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2432 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2434 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex3D(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2435 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2439 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2441 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2442 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2446 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2448 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex3D(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2449 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2453 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2455 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2456 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2460 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2462 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex3D(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2463 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2467 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2469 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2470 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2474 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2482 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex3D(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2483 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2487 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2489 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2490 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2494 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2496 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex3D(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2497 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2501 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2503 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2504 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2508 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2510 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex3D(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2511 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2515 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2517 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2518 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2522 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2524 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex3D(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2525 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2529 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2531 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2532 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2536 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2610 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2611 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2615 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2617 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2618 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2622 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2624 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2625 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2629 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2631 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2632 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2636 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2644 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2645 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2654 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2656 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2657 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2662 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2664 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2665 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2670 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2672 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2673 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2678 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2680 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2681 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2686 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2688 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2689 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2694 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2696 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2697 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2702 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2704 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2705 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2710 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2712 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2713 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2718 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2726 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2727 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2732 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2734 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2735 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2740 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2742 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2743 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2748 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2750 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2751 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2756 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2758 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2759 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2764 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2766 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2767 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2772 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2774 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2775 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2780 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2782 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2783 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2788 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2796 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char texCubemap(texture< char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2797 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2805 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2807 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2808 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2812 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2814 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2815 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2819 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2821 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 texCubemap(texture< char1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2822 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2826 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2828 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2829 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2833 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2835 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 texCubemap(texture< char2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2836 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2840 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2842 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2843 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2847 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2849 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 texCubemap(texture< char4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2850 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2854 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2856 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2857 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2861 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2869 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short texCubemap(texture< short, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2870 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2874 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2876 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2877 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2881 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2883 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 texCubemap(texture< short1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2884 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2888 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2890 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2891 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2895 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2897 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 texCubemap(texture< short2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2898 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2902 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2904 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2905 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2909 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2911 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 texCubemap(texture< short4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2912 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2916 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2918 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2919 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2923 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2931 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int texCubemap(texture< int, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2932 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2936 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2938 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2939 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2943 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2945 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 texCubemap(texture< int1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2946 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2950 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2952 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2953 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2957 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2959 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 texCubemap(texture< int2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2960 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2964 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2966 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2967 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2971 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2973 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 texCubemap(texture< int4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2974 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2978 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2980 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2981 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2985 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3059 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< float, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3060 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3064 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3066 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< float1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3067 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3071 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3073 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< float2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3074 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3078 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3080 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< float4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3081 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3085 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3093 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3094 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3103 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3105 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3106 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3111 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3113 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3114 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3119 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3121 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3122 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3127 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3129 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3130 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3135 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3137 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3138 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3143 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3145 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3146 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3151 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3153 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3154 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3159 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3161 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3162 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3167 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3175 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3176 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3181 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3183 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3184 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3189 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3191 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3192 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3197 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3199 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3200 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3205 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3207 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3208 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3213 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3215 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3216 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3221 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3223 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3224 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3229 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3231 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3232 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3237 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3245 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char texCubemapLayered(texture< char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3246 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3254 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3256 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3257 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3261 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3263 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3264 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3268 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3270 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3271 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3275 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3277 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3278 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3282 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3284 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3285 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3289 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3291 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3292 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3296 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3298 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3299 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3303 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3305 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3306 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3310 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3318 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short texCubemapLayered(texture< short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3319 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3323 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3325 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3326 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3330 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3332 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3333 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3337 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3339 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3340 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3344 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3346 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3347 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3351 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3353 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3354 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3358 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3360 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3361 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3365 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3367 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3368 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3372 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3380 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int texCubemapLayered(texture< int, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3381 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3385 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3387 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3388 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3392 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3394 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3395 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3399 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3401 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3402 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3406 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3408 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3409 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3413 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3415 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3416 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3420 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3422 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3423 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3427 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3429 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3430 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3434 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3508 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< float, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3509 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3513 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3515 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3516 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3520 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3522 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3523 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3527 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3529 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3530 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3534 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3542 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3543 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3552 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3554 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3555 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3560 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3562 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3563 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3568 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3570 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3571 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3576 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3578 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3579 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3584 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3586 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3587 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3592 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3594 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3595 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3600 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3602 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3603 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3608 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3610 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3611 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3616 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3624 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3625 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3630 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3632 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3633 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3638 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3640 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3641 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3646 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3648 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3649 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3654 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3656 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3657 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3662 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3664 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3665 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3670 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3672 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3673 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3678 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3680 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3681 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3686 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3780 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3781 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3783 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3785 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3786 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3788 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3790 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3791 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3793 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3795 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3796 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3798 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3800 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3801 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3803 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3805 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3806 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3808 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3810 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3811 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3813 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3815 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3816 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3818 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3820 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3821 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3823 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3825 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3826 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3828 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3830 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3831 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3833 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3835 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3836 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3838 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3840 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3841 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3843 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3845 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3846 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3848 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3850 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3851 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3853 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3855 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3856 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3858 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3860 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3861 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3863 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3865 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3866 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3868 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3870 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3871 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3873 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3875 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3876 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3878 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3880 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3881 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3883 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3885 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3886 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3888 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3890 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3891 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3893 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3895 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3896 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3898 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3900 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3901 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3903 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3905 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3906 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3908 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3910 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3911 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3913 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3915 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3916 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3918 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3920 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3921 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3923 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3925 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3926 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3928 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3930 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3931 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3933 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3935 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3936 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3938 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3940 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3941 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3943 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3945 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3946 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3948 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3950 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3951 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3953 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3955 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3956 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3958 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3967 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3968 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3970 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3972 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3973 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3975 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3977 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3978 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3980 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3982 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3983 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3985 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3987 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3988 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3990 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3992 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3993 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3995 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3997 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3998 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4000 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4002 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4003 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4005 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4007 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4008 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4010 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4012 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4013 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4015 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4017 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4018 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4020 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4022 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4023 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4025 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4027 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4028 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4030 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4032 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4033 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4035 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4037 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4038 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4040 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4042 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4043 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4045 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4047 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4048 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4050 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4052 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4053 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4055 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4057 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4058 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4060 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4062 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4063 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4065 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4067 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4068 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4070 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 66 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const uint3 threadIdx; }
# 67 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const uint3 blockIdx; }
# 68 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const dim3 blockDim; }
# 69 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const dim3 gridDim; }
# 70 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const int warpSize; }
# 120 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 121 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaSetupArgument(T
# 122 "/usr/local/cuda/bin/../include/cuda_runtime.h"
arg, size_t
# 123 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset)
# 125 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 126 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaSetupArgument((const void *)(&arg), sizeof(T), offset);
# 127 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 159 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaEventCreate(cudaEvent_t *
# 160 "/usr/local/cuda/bin/../include/cuda_runtime.h"
event, unsigned
# 161 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags)
# 163 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 164 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaEventCreateWithFlags(event, flags);
# 165 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 222 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMallocHost(void **
# 223 "/usr/local/cuda/bin/../include/cuda_runtime.h"
ptr, size_t
# 224 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, unsigned
# 225 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags)
# 227 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 228 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaHostAlloc(ptr, size, flags);
# 229 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 231 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 232 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaHostAlloc(T **
# 233 "/usr/local/cuda/bin/../include/cuda_runtime.h"
ptr, size_t
# 234 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, unsigned
# 235 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags)
# 237 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 238 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaHostAlloc((void **)((void *)ptr), size, flags);
# 239 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 241 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 242 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaHostGetDevicePointer(T **
# 243 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pDevice, void *
# 244 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pHost, unsigned
# 245 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags)
# 247 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 248 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 249 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 251 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 252 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMalloc(T **
# 253 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t
# 254 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size)
# 256 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 257 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMalloc((void **)((void *)devPtr), size);
# 258 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 260 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 261 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMallocHost(T **
# 262 "/usr/local/cuda/bin/../include/cuda_runtime.h"
ptr, size_t
# 263 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, unsigned
# 264 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags = (0))
# 266 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 267 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags);
# 268 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 270 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 271 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMallocPitch(T **
# 272 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t *
# 273 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pitch, size_t
# 274 "/usr/local/cuda/bin/../include/cuda_runtime.h"
width, size_t
# 275 "/usr/local/cuda/bin/../include/cuda_runtime.h"
height)
# 277 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 278 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 279 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 289 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyToSymbol(char *
# 290 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 291 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 292 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 293 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 294 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 296 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 297 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbol((const char *)symbol, src, count, offset, kind);
# 298 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 300 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 301 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyToSymbol(const T &
# 302 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 303 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 304 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 305 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 306 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 308 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 309 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbol((const char *)(&symbol), src, count, offset, kind);
# 310 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 312 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyToSymbolAsync(char *
# 313 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 314 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 315 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 316 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 317 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 318 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 320 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 321 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const char *)symbol, src, count, offset, kind, stream);
# 322 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 324 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 325 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
# 326 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 327 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 328 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 329 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 330 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 331 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 333 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 334 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const char *)(&symbol), src, count, offset, kind, stream);
# 335 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 343 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyFromSymbol(void *
# 344 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, char *
# 345 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 346 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 347 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 348 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 350 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 351 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const char *)symbol, count, offset, kind);
# 352 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 354 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 355 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyFromSymbol(void *
# 356 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, const T &
# 357 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 358 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 359 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 360 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 362 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 363 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const char *)(&symbol), count, offset, kind);
# 364 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 366 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyFromSymbolAsync(void *
# 367 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, char *
# 368 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 369 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 370 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 371 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 372 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 374 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 375 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const char *)symbol, count, offset, kind, stream);
# 376 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 378 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 379 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
# 380 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, const T &
# 381 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 382 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 383 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 384 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 385 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 387 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 388 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const char *)(&symbol), count, offset, kind, stream);
# 389 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 391 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaGetSymbolAddress(void **
# 392 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, char *
# 393 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 395 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 396 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const char *)symbol);
# 397 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 424 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 425 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaGetSymbolAddress(void **
# 426 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, const T &
# 427 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 429 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 430 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const char *)(&symbol));
# 431 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 439 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaGetSymbolSize(size_t *
# 440 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, char *
# 441 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 443 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 444 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolSize(size, (const char *)symbol);
# 445 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 472 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 473 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaGetSymbolSize(size_t *
# 474 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, const T &
# 475 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 477 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 478 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolSize(size, (const char *)(&symbol));
# 479 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 521 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 522 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture(size_t *
# 523 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 524 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 525 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 526 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc, size_t
# 527 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 529 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 530 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture(offset, &tex, devPtr, &desc, size);
# 531 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 566 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 567 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture(size_t *
# 568 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 569 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 570 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t
# 571 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 573 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 574 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size);
# 575 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 622 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 623 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 624 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 625 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 626 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 627 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc, size_t
# 628 "/usr/local/cuda/bin/../include/cuda_runtime.h"
width, size_t
# 629 "/usr/local/cuda/bin/../include/cuda_runtime.h"
height, size_t
# 630 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pitch)
# 632 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 633 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch);
# 634 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 680 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 681 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 682 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 683 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 684 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t
# 685 "/usr/local/cuda/bin/../include/cuda_runtime.h"
width, size_t
# 686 "/usr/local/cuda/bin/../include/cuda_runtime.h"
height, size_t
# 687 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pitch)
# 689 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 690 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &(tex.texture< T, dim, readMode> ::channelDesc), width, height, pitch);
# 691 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 722 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 723 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 724 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const cudaArray *
# 725 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 726 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc)
# 728 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 729 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTextureToArray(&tex, array, &desc);
# 730 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 760 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 761 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 762 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const cudaArray *
# 763 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array)
# 765 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 766 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 767 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 769 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err;
# 770 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 799 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 800 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode> &
# 801 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex)
# 803 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 804 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaUnbindTexture(&tex);
# 805 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 839 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 840 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaGetTextureAlignmentOffset(size_t *
# 841 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 842 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex)
# 844 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 845 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetTextureAlignmentOffset(offset, &tex);
# 846 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 900 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 901 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaFuncSetCacheConfig(T *
# 902 "/usr/local/cuda/bin/../include/cuda_runtime.h"
func, cudaFuncCache
# 903 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cacheConfig)
# 905 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 906 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaFuncSetCacheConfig((const char *)func, cacheConfig);
# 907 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 909 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 910 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaFuncSetSharedMemConfig(T *
# 911 "/usr/local/cuda/bin/../include/cuda_runtime.h"
func, cudaSharedMemConfig
# 912 "/usr/local/cuda/bin/../include/cuda_runtime.h"
config)
# 914 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 915 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaFuncSetSharedMemConfig((const char *)func, config);
# 916 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 953 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 954 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaLaunch(T *
# 955 "/usr/local/cuda/bin/../include/cuda_runtime.h"
entry)
# 957 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 958 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaLaunch((const char *)entry);
# 959 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 993 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 994 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaFuncGetAttributes(cudaFuncAttributes *
# 995 "/usr/local/cuda/bin/../include/cuda_runtime.h"
attr, T *
# 996 "/usr/local/cuda/bin/../include/cuda_runtime.h"
entry)
# 998 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 999 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaFuncGetAttributes(attr, (const char *)entry);
# 1000 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 1022 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim> inline cudaError_t
# 1023 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1024 "/usr/local/cuda/bin/../include/cuda_runtime.h"
surf, const cudaArray *
# 1025 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 1026 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc)
# 1028 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 1029 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindSurfaceToArray(&surf, array, &desc);
# 1030 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 1051 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim> inline cudaError_t
# 1052 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1053 "/usr/local/cuda/bin/../include/cuda_runtime.h"
surf, const cudaArray *
# 1054 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array)
# 1056 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 1057 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1058 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 1060 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err;
# 1061 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 157 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef unsigned long long CUdeviceptr; }
# 164 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef int CUdevice; }
# 165 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUctx_st *CUcontext; }
# 166 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUmod_st *CUmodule; }
# 167 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUfunc_st *CUfunction; }
# 168 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUarray_st *CUarray; }
# 169 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUtexref_st *CUtexref; }
# 170 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUsurfref_st *CUsurfref; }
# 171 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef CUevent_st *CUevent; }
# 172 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef CUstream_st *CUstream; }
# 173 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUgraphicsResource_st *CUgraphicsResource; }
# 177 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 175 "/usr/local/cuda/bin/../include/cuda.h"
struct CUuuid_st {
# 176 "/usr/local/cuda/bin/../include/cuda.h"
char bytes[16];
# 177 "/usr/local/cuda/bin/../include/cuda.h"
} CUuuid; }
# 189 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 187 "/usr/local/cuda/bin/../include/cuda.h"
struct CUipcEventHandle_st {
# 188 "/usr/local/cuda/bin/../include/cuda.h"
char reserved[64];
# 189 "/usr/local/cuda/bin/../include/cuda.h"
} CUipcEventHandle; }
# 193 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 191 "/usr/local/cuda/bin/../include/cuda.h"
struct CUipcMemHandle_st {
# 192 "/usr/local/cuda/bin/../include/cuda.h"
char reserved[64];
# 193 "/usr/local/cuda/bin/../include/cuda.h"
} CUipcMemHandle; }
# 197 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 195 "/usr/local/cuda/bin/../include/cuda.h"
enum CUipcMem_flags_enum {
# 196 "/usr/local/cuda/bin/../include/cuda.h"
CU_IPC_MEM_LAZY_ENABLE_PEER_ACCESS = 1
# 197 "/usr/local/cuda/bin/../include/cuda.h"
} CUipcMem_flags; }
# 216 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 204 "/usr/local/cuda/bin/../include/cuda.h"
enum CUctx_flags_enum {
# 205 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_AUTO,
# 206 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_SPIN,
# 207 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_YIELD,
# 208 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_BLOCKING_SYNC = 4,
# 209 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_BLOCKING_SYNC = 4,
# 212 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_MASK = 7,
# 213 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_MAP_HOST,
# 214 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_LMEM_RESIZE_TO_MAX = 16,
# 215 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_FLAGS_MASK = 31
# 216 "/usr/local/cuda/bin/../include/cuda.h"
} CUctx_flags; }
# 226 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 221 "/usr/local/cuda/bin/../include/cuda.h"
enum CUevent_flags_enum {
# 222 "/usr/local/cuda/bin/../include/cuda.h"
CU_EVENT_DEFAULT,
# 223 "/usr/local/cuda/bin/../include/cuda.h"
CU_EVENT_BLOCKING_SYNC,
# 224 "/usr/local/cuda/bin/../include/cuda.h"
CU_EVENT_DISABLE_TIMING,
# 225 "/usr/local/cuda/bin/../include/cuda.h"
CU_EVENT_INTERPROCESS = 4
# 226 "/usr/local/cuda/bin/../include/cuda.h"
} CUevent_flags; }
# 240 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 231 "/usr/local/cuda/bin/../include/cuda.h"
enum CUarray_format_enum {
# 232 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT8 = 1,
# 233 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT16,
# 234 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT32,
# 235 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_SIGNED_INT8 = 8,
# 236 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_SIGNED_INT16,
# 237 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_SIGNED_INT32,
# 238 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_HALF = 16,
# 239 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_FLOAT = 32
# 240 "/usr/local/cuda/bin/../include/cuda.h"
} CUarray_format; }
# 250 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 245 "/usr/local/cuda/bin/../include/cuda.h"
enum CUaddress_mode_enum {
# 246 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_WRAP,
# 247 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_CLAMP,
# 248 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_MIRROR,
# 249 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_BORDER
# 250 "/usr/local/cuda/bin/../include/cuda.h"
} CUaddress_mode; }
# 258 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 255 "/usr/local/cuda/bin/../include/cuda.h"
enum CUfilter_mode_enum {
# 256 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_FILTER_MODE_POINT,
# 257 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_FILTER_MODE_LINEAR
# 258 "/usr/local/cuda/bin/../include/cuda.h"
} CUfilter_mode; }
# 341 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 263 "/usr/local/cuda/bin/../include/cuda.h"
enum CUdevice_attribute_enum {
# 264 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1,
# 265 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X,
# 266 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y,
# 267 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z,
# 268 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X,
# 269 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y,
# 270 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z,
# 271 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK,
# 272 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8,
# 273 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY,
# 274 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_WARP_SIZE,
# 275 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_PITCH,
# 276 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK,
# 277 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12,
# 278 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_CLOCK_RATE,
# 279 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT,
# 280 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_GPU_OVERLAP,
# 281 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT,
# 282 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT,
# 283 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_INTEGRATED,
# 284 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY,
# 285 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_MODE,
# 286 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH,
# 287 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH,
# 288 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT,
# 289 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH,
# 290 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT,
# 291 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH,
# 292 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_WIDTH,
# 293 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_HEIGHT,
# 294 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_LAYERS,
# 295 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_WIDTH = 27,
# 296 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_HEIGHT,
# 297 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_NUMSLICES,
# 298 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT,
# 299 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS,
# 300 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_ECC_ENABLED,
# 301 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_BUS_ID,
# 302 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DEVICE_ID,
# 303 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_TCC_DRIVER,
# 304 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE,
# 305 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH,
# 306 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_L2_CACHE_SIZE,
# 307 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR,
# 308 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_ASYNC_ENGINE_COUNT,
# 309 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_UNIFIED_ADDRESSING,
# 310 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_WIDTH,
# 311 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_LAYERS,
# 312 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_TEX2D_GATHER,
# 313 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_WIDTH,
# 314 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_HEIGHT,
# 315 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH_ALTERNATE,
# 316 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT_ALTERNATE,
# 317 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH_ALTERNATE,
# 318 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DOMAIN_ID,
# 319 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_PITCH_ALIGNMENT,
# 320 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_WIDTH,
# 321 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_WIDTH,
# 322 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_LAYERS,
# 323 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_WIDTH,
# 324 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_WIDTH,
# 325 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_HEIGHT,
# 326 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_WIDTH,
# 327 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_HEIGHT,
# 328 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_DEPTH,
# 329 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_WIDTH,
# 330 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_LAYERS,
# 331 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_WIDTH,
# 332 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_HEIGHT,
# 333 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_LAYERS,
# 334 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_WIDTH,
# 335 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_WIDTH,
# 336 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_LAYERS,
# 337 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LINEAR_WIDTH,
# 338 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_WIDTH,
# 339 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_HEIGHT,
# 340 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_PITCH
# 341 "/usr/local/cuda/bin/../include/cuda.h"
} CUdevice_attribute; }
# 357 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 346 "/usr/local/cuda/bin/../include/cuda.h"
struct CUdevprop_st {
# 347 "/usr/local/cuda/bin/../include/cuda.h"
int maxThreadsPerBlock;
# 348 "/usr/local/cuda/bin/../include/cuda.h"
int maxThreadsDim[3];
# 349 "/usr/local/cuda/bin/../include/cuda.h"
int maxGridSize[3];
# 350 "/usr/local/cuda/bin/../include/cuda.h"
int sharedMemPerBlock;
# 351 "/usr/local/cuda/bin/../include/cuda.h"
int totalConstantMemory;
# 352 "/usr/local/cuda/bin/../include/cuda.h"
int SIMDWidth;
# 353 "/usr/local/cuda/bin/../include/cuda.h"
int memPitch;
# 354 "/usr/local/cuda/bin/../include/cuda.h"
int regsPerBlock;
# 355 "/usr/local/cuda/bin/../include/cuda.h"
int clockRate;
# 356 "/usr/local/cuda/bin/../include/cuda.h"
int textureAlign;
# 357 "/usr/local/cuda/bin/../include/cuda.h"
} CUdevprop; }
# 367 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 362 "/usr/local/cuda/bin/../include/cuda.h"
enum CUpointer_attribute_enum {
# 363 "/usr/local/cuda/bin/../include/cuda.h"
CU_POINTER_ATTRIBUTE_CONTEXT = 1,
# 364 "/usr/local/cuda/bin/../include/cuda.h"
CU_POINTER_ATTRIBUTE_MEMORY_TYPE,
# 365 "/usr/local/cuda/bin/../include/cuda.h"
CU_POINTER_ATTRIBUTE_DEVICE_POINTER,
# 366 "/usr/local/cuda/bin/../include/cuda.h"
CU_POINTER_ATTRIBUTE_HOST_POINTER
# 367 "/usr/local/cuda/bin/../include/cuda.h"
} CUpointer_attribute; }
# 422 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 372 "/usr/local/cuda/bin/../include/cuda.h"
enum CUfunction_attribute_enum {
# 378 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK,
# 385 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES,
# 391 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES,
# 396 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES,
# 401 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_NUM_REGS,
# 410 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_PTX_VERSION,
# 419 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_BINARY_VERSION,
# 421 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX
# 422 "/usr/local/cuda/bin/../include/cuda.h"
} CUfunction_attribute; }
# 432 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 427 "/usr/local/cuda/bin/../include/cuda.h"
enum CUfunc_cache_enum {
# 428 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_CACHE_PREFER_NONE,
# 429 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_CACHE_PREFER_SHARED,
# 430 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_CACHE_PREFER_L1,
# 431 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_CACHE_PREFER_EQUAL
# 432 "/usr/local/cuda/bin/../include/cuda.h"
} CUfunc_cache; }
# 441 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 437 "/usr/local/cuda/bin/../include/cuda.h"
enum CUsharedconfig_enum {
# 438 "/usr/local/cuda/bin/../include/cuda.h"
CU_SHARED_MEM_CONFIG_DEFAULT_BANK_SIZE,
# 439 "/usr/local/cuda/bin/../include/cuda.h"
CU_SHARED_MEM_CONFIG_FOUR_BYTE_BANK_SIZE,
# 440 "/usr/local/cuda/bin/../include/cuda.h"
CU_SHARED_MEM_CONFIG_EIGHT_BYTE_BANK_SIZE
# 441 "/usr/local/cuda/bin/../include/cuda.h"
} CUsharedconfig; }
# 451 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 446 "/usr/local/cuda/bin/../include/cuda.h"
enum CUmemorytype_enum {
# 447 "/usr/local/cuda/bin/../include/cuda.h"
CU_MEMORYTYPE_HOST = 1,
# 448 "/usr/local/cuda/bin/../include/cuda.h"
CU_MEMORYTYPE_DEVICE,
# 449 "/usr/local/cuda/bin/../include/cuda.h"
CU_MEMORYTYPE_ARRAY,
# 450 "/usr/local/cuda/bin/../include/cuda.h"
CU_MEMORYTYPE_UNIFIED
# 451 "/usr/local/cuda/bin/../include/cuda.h"
} CUmemorytype; }
# 461 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 456 "/usr/local/cuda/bin/../include/cuda.h"
enum CUcomputemode_enum {
# 457 "/usr/local/cuda/bin/../include/cuda.h"
CU_COMPUTEMODE_DEFAULT,
# 458 "/usr/local/cuda/bin/../include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE,
# 459 "/usr/local/cuda/bin/../include/cuda.h"
CU_COMPUTEMODE_PROHIBITED,
# 460 "/usr/local/cuda/bin/../include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE_PROCESS
# 461 "/usr/local/cuda/bin/../include/cuda.h"
} CUcomputemode; }
# 553 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 466 "/usr/local/cuda/bin/../include/cuda.h"
enum CUjit_option_enum {
# 472 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_MAX_REGISTERS,
# 485 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_THREADS_PER_BLOCK,
# 492 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_WALL_TIME,
# 500 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_INFO_LOG_BUFFER,
# 508 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES,
# 516 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER,
# 524 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES,
# 531 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_OPTIMIZATION_LEVEL,
# 538 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_TARGET_FROM_CUCONTEXT,
# 544 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_TARGET,
# 551 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_FALLBACK_STRATEGY
# 553 "/usr/local/cuda/bin/../include/cuda.h"
} CUjit_option; }
# 567 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 558 "/usr/local/cuda/bin/../include/cuda.h"
enum CUjit_target_enum {
# 560 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_10,
# 561 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_11,
# 562 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_12,
# 563 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_13,
# 564 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_20,
# 565 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_21,
# 566 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_30
# 567 "/usr/local/cuda/bin/../include/cuda.h"
} CUjit_target; }
# 578 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 572 "/usr/local/cuda/bin/../include/cuda.h"
enum CUjit_fallback_enum {
# 574 "/usr/local/cuda/bin/../include/cuda.h"
CU_PREFER_PTX,
# 576 "/usr/local/cuda/bin/../include/cuda.h"
CU_PREFER_BINARY
# 578 "/usr/local/cuda/bin/../include/cuda.h"
} CUjit_fallback; }
# 589 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 583 "/usr/local/cuda/bin/../include/cuda.h"
enum CUgraphicsRegisterFlags_enum {
# 584 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_NONE,
# 585 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_READ_ONLY,
# 586 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_WRITE_DISCARD,
# 587 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_SURFACE_LDST = 4,
# 588 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_TEXTURE_GATHER = 8
# 589 "/usr/local/cuda/bin/../include/cuda.h"
} CUgraphicsRegisterFlags; }
# 598 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 594 "/usr/local/cuda/bin/../include/cuda.h"
enum CUgraphicsMapResourceFlags_enum {
# 595 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE,
# 596 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY,
# 597 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD
# 598 "/usr/local/cuda/bin/../include/cuda.h"
} CUgraphicsMapResourceFlags; }
# 610 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 603 "/usr/local/cuda/bin/../include/cuda.h"
enum CUarray_cubemap_face_enum {
# 604 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_X,
# 605 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_X,
# 606 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Y,
# 607 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Y,
# 608 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Z,
# 609 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Z
# 610 "/usr/local/cuda/bin/../include/cuda.h"
} CUarray_cubemap_face; }
# 619 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 615 "/usr/local/cuda/bin/../include/cuda.h"
enum CUlimit_enum {
# 616 "/usr/local/cuda/bin/../include/cuda.h"
CU_LIMIT_STACK_SIZE,
# 617 "/usr/local/cuda/bin/../include/cuda.h"
CU_LIMIT_PRINTF_FIFO_SIZE,
# 618 "/usr/local/cuda/bin/../include/cuda.h"
CU_LIMIT_MALLOC_HEAP_SIZE
# 619 "/usr/local/cuda/bin/../include/cuda.h"
} CUlimit; }
# 928 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 624 "/usr/local/cuda/bin/../include/cuda.h"
enum cudaError_enum {
# 630 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_SUCCESS,
# 636 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_VALUE,
# 642 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_OUT_OF_MEMORY,
# 648 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_INITIALIZED,
# 653 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_DEINITIALIZED,
# 659 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_PROFILER_DISABLED,
# 664 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_PROFILER_NOT_INITIALIZED,
# 669 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STARTED,
# 674 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STOPPED,
# 679 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NO_DEVICE = 100,
# 685 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_DEVICE,
# 692 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_IMAGE = 200,
# 702 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_CONTEXT,
# 711 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_CURRENT,
# 716 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_MAP_FAILED = 205,
# 721 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_UNMAP_FAILED,
# 727 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ARRAY_IS_MAPPED,
# 732 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ALREADY_MAPPED,
# 740 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NO_BINARY_FOR_GPU,
# 745 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ALREADY_ACQUIRED,
# 750 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_MAPPED,
# 756 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_ARRAY,
# 762 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_POINTER,
# 768 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ECC_UNCORRECTABLE,
# 774 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_UNSUPPORTED_LIMIT,
# 781 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_IN_USE,
# 786 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_SOURCE = 300,
# 791 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_FILE_NOT_FOUND,
# 796 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND,
# 801 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED,
# 806 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_OPERATING_SYSTEM,
# 813 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_HANDLE = 400,
# 820 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_FOUND = 500,
# 829 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_READY = 600,
# 840 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_FAILED = 700,
# 851 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES,
# 862 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_TIMEOUT,
# 868 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING,
# 875 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED,
# 882 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_PEER_ACCESS_NOT_ENABLED,
# 888 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE = 708,
# 895 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_CONTEXT_IS_DESTROYED,
# 903 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ASSERT,
# 910 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_TOO_MANY_PEERS,
# 916 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED,
# 922 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED,
# 927 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_UNKNOWN = 999
# 928 "/usr/local/cuda/bin/../include/cuda.h"
} CUresult; }
# 990 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 969 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_MEMCPY2D_st {
# 970 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcXInBytes;
# 971 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcY;
# 973 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype srcMemoryType;
# 974 "/usr/local/cuda/bin/../include/cuda.h"
const void *srcHost;
# 975 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr srcDevice;
# 976 "/usr/local/cuda/bin/../include/cuda.h"
CUarray srcArray;
# 977 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcPitch;
# 979 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstXInBytes;
# 980 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstY;
# 982 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype dstMemoryType;
# 983 "/usr/local/cuda/bin/../include/cuda.h"
void *dstHost;
# 984 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr dstDevice;
# 985 "/usr/local/cuda/bin/../include/cuda.h"
CUarray dstArray;
# 986 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstPitch;
# 988 "/usr/local/cuda/bin/../include/cuda.h"
size_t WidthInBytes;
# 989 "/usr/local/cuda/bin/../include/cuda.h"
size_t Height;
# 990 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_MEMCPY2D; }
# 1023 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 995 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_MEMCPY3D_st {
# 996 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcXInBytes;
# 997 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcY;
# 998 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcZ;
# 999 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcLOD;
# 1000 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype srcMemoryType;
# 1001 "/usr/local/cuda/bin/../include/cuda.h"
const void *srcHost;
# 1002 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr srcDevice;
# 1003 "/usr/local/cuda/bin/../include/cuda.h"
CUarray srcArray;
# 1004 "/usr/local/cuda/bin/../include/cuda.h"
void *reserved0;
# 1005 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcPitch;
# 1006 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcHeight;
# 1008 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstXInBytes;
# 1009 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstY;
# 1010 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstZ;
# 1011 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstLOD;
# 1012 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype dstMemoryType;
# 1013 "/usr/local/cuda/bin/../include/cuda.h"
void *dstHost;
# 1014 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr dstDevice;
# 1015 "/usr/local/cuda/bin/../include/cuda.h"
CUarray dstArray;
# 1016 "/usr/local/cuda/bin/../include/cuda.h"
void *reserved1;
# 1017 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstPitch;
# 1018 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstHeight;
# 1020 "/usr/local/cuda/bin/../include/cuda.h"
size_t WidthInBytes;
# 1021 "/usr/local/cuda/bin/../include/cuda.h"
size_t Height;
# 1022 "/usr/local/cuda/bin/../include/cuda.h"
size_t Depth;
# 1023 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_MEMCPY3D; }
# 1056 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 1028 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_MEMCPY3D_PEER_st {
# 1029 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcXInBytes;
# 1030 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcY;
# 1031 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcZ;
# 1032 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcLOD;
# 1033 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype srcMemoryType;
# 1034 "/usr/local/cuda/bin/../include/cuda.h"
const void *srcHost;
# 1035 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr srcDevice;
# 1036 "/usr/local/cuda/bin/../include/cuda.h"
CUarray srcArray;
# 1037 "/usr/local/cuda/bin/../include/cuda.h"
CUcontext srcContext;
# 1038 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcPitch;
# 1039 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcHeight;
# 1041 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstXInBytes;
# 1042 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstY;
# 1043 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstZ;
# 1044 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstLOD;
# 1045 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype dstMemoryType;
# 1046 "/usr/local/cuda/bin/../include/cuda.h"
void *dstHost;
# 1047 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr dstDevice;
# 1048 "/usr/local/cuda/bin/../include/cuda.h"
CUarray dstArray;
# 1049 "/usr/local/cuda/bin/../include/cuda.h"
CUcontext dstContext;
# 1050 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstPitch;
# 1051 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstHeight;
# 1053 "/usr/local/cuda/bin/../include/cuda.h"
size_t WidthInBytes;
# 1054 "/usr/local/cuda/bin/../include/cuda.h"
size_t Height;
# 1055 "/usr/local/cuda/bin/../include/cuda.h"
size_t Depth;
# 1056 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_MEMCPY3D_PEER; }
# 1068 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 1061 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_ARRAY_DESCRIPTOR_st {
# 1063 "/usr/local/cuda/bin/../include/cuda.h"
size_t Width;
# 1064 "/usr/local/cuda/bin/../include/cuda.h"
size_t Height;
# 1066 "/usr/local/cuda/bin/../include/cuda.h"
CUarray_format Format;
# 1067 "/usr/local/cuda/bin/../include/cuda.h"
unsigned NumChannels;
# 1068 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_ARRAY_DESCRIPTOR; }
# 1082 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 1073 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_ARRAY3D_DESCRIPTOR_st {
# 1075 "/usr/local/cuda/bin/../include/cuda.h"
size_t Width;
# 1076 "/usr/local/cuda/bin/../include/cuda.h"
size_t Height;
# 1077 "/usr/local/cuda/bin/../include/cuda.h"
size_t Depth;
# 1079 "/usr/local/cuda/bin/../include/cuda.h"
CUarray_format Format;
# 1080 "/usr/local/cuda/bin/../include/cuda.h"
unsigned NumChannels;
# 1081 "/usr/local/cuda/bin/../include/cuda.h"
unsigned Flags;
# 1082 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_ARRAY3D_DESCRIPTOR; }
# 1209 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuInit(unsigned );
# 1236 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDriverGetVersion(int * );
# 1274 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGet(CUdevice * , int );
# 1300 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetCount(int * );
# 1329 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetName(char * , int , CUdevice );
# 1358 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceComputeCapability(int * , int * , CUdevice );
# 1386 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceTotalMem_v2(size_t * , CUdevice );
# 1446 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetProperties(CUdevprop * , CUdevice );
# 1611 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetAttribute(int * , CUdevice_attribute , CUdevice );
# 1711 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxCreate_v2(CUcontext * , unsigned , CUdevice );
# 1750 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxDestroy_v2(CUcontext );
# 1800 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxAttach(CUcontext * , unsigned );
# 1835 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxDetach(CUcontext );
# 1871 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxPushCurrent_v2(CUcontext );
# 1904 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxPopCurrent_v2(CUcontext * );
# 1930 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSetCurrent(CUcontext );
# 1949 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetCurrent(CUcontext * );
# 1978 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetDevice(CUdevice * );
# 2006 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSynchronize();
# 2067 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSetLimit(CUlimit , size_t );
# 2100 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetLimit(size_t * , CUlimit );
# 2142 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetCacheConfig(CUfunc_cache * );
# 2191 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSetCacheConfig(CUfunc_cache );
# 2232 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetSharedMemConfig(CUsharedconfig * );
# 2283 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSetSharedMemConfig(CUsharedconfig );
# 2320 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetApiVersion(CUcontext , unsigned * );
# 2369 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoad(CUmodule * , const char * );
# 2403 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoadData(CUmodule * , const void * );
# 2482 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoadDataEx(CUmodule * , const void * , unsigned , CUjit_option * , void ** );
# 2522 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoadFatBinary(CUmodule * , const void * );
# 2547 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleUnload(CUmodule );
# 2577 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetFunction(CUfunction * , CUmodule , const char * );
# 2611 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetGlobal_v2(CUdeviceptr * , size_t * , CUmodule , const char * );
# 2645 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetTexRef(CUtexref * , CUmodule , const char * );
# 2676 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetSurfRef(CUsurfref * , CUmodule , const char * );
# 2719 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemGetInfo_v2(size_t * , size_t * );
# 2752 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemAlloc_v2(CUdeviceptr * , size_t );
# 2813 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemAllocPitch_v2(CUdeviceptr * , size_t * , size_t , size_t , unsigned );
# 2842 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemFree_v2(CUdeviceptr );
# 2875 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemGetAddressRange_v2(CUdeviceptr * , size_t * , CUdeviceptr );
# 2921 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemAllocHost_v2(void ** , size_t );
# 2951 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemFreeHost(void * );
# 3033 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostAlloc(void ** , size_t , unsigned );
# 3071 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostGetDevicePointer_v2(CUdeviceptr * , void * , unsigned );
# 3096 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostGetFlags(unsigned * , void * );
# 3123 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetByPCIBusId(CUdevice * , char * );
# 3151 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetPCIBusId(char * , int , CUdevice );
# 3193 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuIpcGetEventHandle(CUipcEventHandle * , CUevent );
# 3229 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuIpcOpenEventHandle(CUevent * , CUipcEventHandle );
# 3266 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuIpcGetMemHandle(CUipcMemHandle * , CUdeviceptr );
# 3314 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuIpcOpenMemHandle(CUdeviceptr * , CUipcMemHandle , unsigned );
# 3345 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuIpcCloseMemHandle(CUdeviceptr );
# 3407 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostRegister(void * , size_t , unsigned );
# 3430 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostUnregister(void * );
# 3466 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy(CUdeviceptr , CUdeviceptr , size_t );
# 3499 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyPeer(CUdeviceptr , CUcontext , CUdeviceptr , CUcontext , size_t );
# 3535 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoD_v2(CUdeviceptr , const void * , size_t );
# 3568 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoH_v2(void * , CUdeviceptr , size_t );
# 3601 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoD_v2(CUdeviceptr , CUdeviceptr , size_t );
# 3635 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoA_v2(CUarray , size_t , CUdeviceptr , size_t );
# 3671 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoD_v2(CUdeviceptr , CUarray , size_t , size_t );
# 3705 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoA_v2(CUarray , size_t , const void * , size_t );
# 3739 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoH_v2(void * , CUarray , size_t , size_t );
# 3777 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoA_v2(CUarray , size_t , CUarray , size_t , size_t );
# 3937 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy2D_v2(const CUDA_MEMCPY2D * );
# 4095 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy2DUnaligned_v2(const CUDA_MEMCPY2D * );
# 4262 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy3D_v2(const CUDA_MEMCPY3D * );
# 4293 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER * );
# 4333 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAsync(CUdeviceptr , CUdeviceptr , size_t , CUstream );
# 4364 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyPeerAsync(CUdeviceptr , CUcontext , CUdeviceptr , CUcontext , size_t , CUstream );
# 4406 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoDAsync_v2(CUdeviceptr , const void * , size_t , CUstream );
# 4446 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoHAsync_v2(void * , CUdeviceptr , size_t , CUstream );
# 4483 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoDAsync_v2(CUdeviceptr , CUdeviceptr , size_t , CUstream );
# 4525 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoAAsync_v2(CUarray , size_t , const void * , size_t , CUstream );
# 4567 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoHAsync_v2(void * , CUarray , size_t , size_t , CUstream );
# 4738 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy2DAsync_v2(const CUDA_MEMCPY2D * , CUstream );
# 4913 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy3DAsync_v2(const CUDA_MEMCPY3D * , CUstream );
# 4938 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER * , CUstream );
# 4976 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD8_v2(CUdeviceptr , unsigned char , size_t );
# 5012 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD16_v2(CUdeviceptr , unsigned short , size_t );
# 5048 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD32_v2(CUdeviceptr , unsigned , size_t );
# 5089 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D8_v2(CUdeviceptr , size_t , unsigned char , size_t , size_t );
# 5131 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D16_v2(CUdeviceptr , size_t , unsigned short , size_t , size_t );
# 5173 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D32_v2(CUdeviceptr , size_t , unsigned , size_t , size_t );
# 5210 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD8Async(CUdeviceptr , unsigned char , size_t , CUstream );
# 5247 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD16Async(CUdeviceptr , unsigned short , size_t , CUstream );
# 5283 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD32Async(CUdeviceptr , unsigned , size_t , CUstream );
# 5325 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D8Async(CUdeviceptr , size_t , unsigned char , size_t , size_t , CUstream );
# 5368 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D16Async(CUdeviceptr , size_t , unsigned short , size_t , size_t , CUstream );
# 5411 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D32Async(CUdeviceptr , size_t , unsigned , size_t , size_t , CUstream );
# 5514 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArrayCreate_v2(CUarray * , const CUDA_ARRAY_DESCRIPTOR * );
# 5547 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArrayGetDescriptor_v2(CUDA_ARRAY_DESCRIPTOR * , CUarray );
# 5578 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArrayDestroy(CUarray );
# 5758 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArray3DCreate_v2(CUarray * , const CUDA_ARRAY3D_DESCRIPTOR * );
# 5794 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArray3DGetDescriptor_v2(CUDA_ARRAY3D_DESCRIPTOR * , CUarray );
# 6001 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuPointerGetAttribute(void * , CUpointer_attribute , CUdeviceptr );
# 6038 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamCreate(CUstream * , unsigned );
# 6080 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamWaitEvent(CUstream , CUevent , unsigned );
# 6104 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamQuery(CUstream );
# 6129 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamSynchronize(CUstream );
# 6157 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamDestroy_v2(CUstream );
# 6206 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventCreate(CUevent * , unsigned );
# 6244 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventRecord(CUevent , CUstream );
# 6275 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventQuery(CUevent );
# 6309 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventSynchronize(CUevent );
# 6338 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventDestroy_v2(CUevent );
# 6382 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventElapsedTime(float * , CUevent , CUevent );
# 6445 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncGetAttribute(int * , CUfunction_attribute , CUfunction );
# 6488 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncSetCacheConfig(CUfunction , CUfunc_cache );
# 6540 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncSetSharedMemConfig(CUfunction , CUsharedconfig );
# 6657 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuLaunchKernel(CUfunction , unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , CUstream , void ** , void ** );
# 6713 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncSetBlockShape(CUfunction , int , int , int );
# 6747 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncSetSharedSize(CUfunction , unsigned );
# 6779 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetSize(CUfunction , unsigned );
# 6812 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSeti(CUfunction , int , unsigned );
# 6845 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetf(CUfunction , int , float );
# 6880 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetv(CUfunction , int , void * , unsigned );
# 6917 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuLaunch(CUfunction );
# 6956 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuLaunchGrid(CUfunction , int , int );
# 7000 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuLaunchGridAsync(CUfunction , int , int , CUstream );
# 7025 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetTexRef(CUfunction , int , CUtexref );
# 7066 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetArray(CUtexref , CUarray , unsigned );
# 7110 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetAddress_v2(size_t * , CUtexref , CUdeviceptr , size_t );
# 7162 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetAddress2D_v3(CUtexref , const CUDA_ARRAY_DESCRIPTOR * , CUdeviceptr , size_t );
# 7191 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetFormat(CUtexref , CUarray_format , int );
# 7231 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetAddressMode(CUtexref , int , CUaddress_mode );
# 7264 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetFilterMode(CUtexref , CUfilter_mode );
# 7299 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetFlags(CUtexref , unsigned );
# 7325 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetAddress_v2(CUdeviceptr * , CUtexref );
# 7351 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetArray(CUarray * , CUtexref );
# 7377 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetAddressMode(CUaddress_mode * , CUtexref , int );
# 7401 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetFilterMode(CUfilter_mode * , CUtexref );
# 7427 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetFormat(CUarray_format * , int * , CUtexref );
# 7450 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetFlags(unsigned * , CUtexref );
# 7484 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefCreate(CUtexref * );
# 7504 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefDestroy(CUtexref );
# 7542 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuSurfRefSetArray(CUsurfref , CUarray , unsigned );
# 7563 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuSurfRefGetArray(CUarray * , CUsurfref );
# 7601 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceCanAccessPeer(int * , CUdevice , CUdevice );
# 7648 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxEnablePeerAccess(CUcontext , unsigned );
# 7673 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxDisablePeerAccess(CUcontext );
# 7714 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsUnregisterResource(CUgraphicsResource );
# 7752 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsSubResourceGetMappedArray(CUarray * , CUgraphicsResource , unsigned , unsigned );
# 7786 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsResourceGetMappedPointer_v2(CUdeviceptr * , size_t * , CUgraphicsResource );
# 7827 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsResourceSetMapFlags(CUgraphicsResource , unsigned );
# 7865 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsMapResources(unsigned , CUgraphicsResource * , CUstream );
# 7900 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsUnmapResources(unsigned , CUgraphicsResource * , CUstream );
# 7904 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGetExportTable(const void ** , const CUuuid * );
# 42 "/usr/include/c++/4.4/bits/stringfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template < typename _Alloc >
    class allocator;
# 47 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template< class _CharT> struct char_traits;
# 50 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template < typename _CharT, typename _Traits = char_traits < _CharT >,
           typename _Alloc = allocator < _CharT > >
    class basic_string;
# 54 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template<> struct char_traits< char> ;
# 56 "/usr/include/c++/4.4/bits/stringfwd.h" 3
typedef basic_string< char, char_traits< char> , allocator< char> > string;
# 59 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template<> struct char_traits< wchar_t> ;
# 61 "/usr/include/c++/4.4/bits/stringfwd.h" 3
typedef basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wstring;
# 75 "/usr/include/c++/4.4/bits/stringfwd.h" 3
}
# 45 "/usr/include/stdio.h" 3
struct _IO_FILE;
# 49 "/usr/include/stdio.h" 3
typedef _IO_FILE FILE;
# 65 "/usr/include/stdio.h" 3
typedef _IO_FILE __FILE;
# 40 "/usr/lib/gcc/x86_64-linux-gnu/4.4.3/include/stdarg.h" 3
typedef __builtin_va_list __gnuc_va_list;
# 352 "/usr/lib/gcc/x86_64-linux-gnu/4.4.3/include/stddef.h" 3
typedef unsigned wint_t;
# 95 "/usr/include/wchar.h" 3
typedef
# 84 "/usr/include/wchar.h" 3
struct {
# 85 "/usr/include/wchar.h" 3
int __count;
# 87 "/usr/include/wchar.h" 3
union {
# 89 "/usr/include/wchar.h" 3
unsigned __wch;
# 93 "/usr/include/wchar.h" 3
char __wchb[4];
# 94 "/usr/include/wchar.h" 3
} __value;
# 95 "/usr/include/wchar.h" 3
} __mbstate_t;
# 106 "/usr/include/wchar.h" 3
typedef __mbstate_t mbstate_t;
# 134 "/usr/include/wchar.h" 3
struct tm;
# 144 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcscpy(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw();
# 147 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcsncpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 152 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcscat(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw();
# 155 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcsncat(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 160 "/usr/include/wchar.h" 3
extern "C" int wcscmp(const wchar_t * , const wchar_t * ) throw()
# 161 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 163 "/usr/include/wchar.h" 3
extern "C" int wcsncmp(const wchar_t * , const wchar_t * , size_t ) throw()
# 164 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 169 "/usr/include/wchar.h" 3
extern "C" int wcscasecmp(const wchar_t * , const wchar_t * ) throw();
# 172 "/usr/include/wchar.h" 3
extern "C" int wcsncasecmp(const wchar_t * , const wchar_t * , size_t ) throw();
# 179 "/usr/include/wchar.h" 3
extern "C" int wcscasecmp_l(const wchar_t * , const wchar_t * , __locale_t ) throw();
# 182 "/usr/include/wchar.h" 3
extern "C" int wcsncasecmp_l(const wchar_t * , const wchar_t * , size_t , __locale_t ) throw();
# 189 "/usr/include/wchar.h" 3
extern "C" int wcscoll(const wchar_t * , const wchar_t * ) throw();
# 193 "/usr/include/wchar.h" 3
extern "C" size_t wcsxfrm(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 203 "/usr/include/wchar.h" 3
extern "C" int wcscoll_l(const wchar_t * , const wchar_t * , __locale_t ) throw();
# 209 "/usr/include/wchar.h" 3
extern "C" size_t wcsxfrm_l(wchar_t * , const wchar_t * , size_t , __locale_t ) throw();
# 213 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcsdup(const wchar_t * ) throw() __attribute((__malloc__));
# 219 "/usr/include/wchar.h" 3
wchar_t *wcschr(wchar_t * , wchar_t ) throw() __asm__("wcschr")
# 220 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 221 "/usr/include/wchar.h" 3
const wchar_t *wcschr(const wchar_t * , wchar_t ) throw() __asm__("wcschr")
# 222 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 229 "/usr/include/wchar.h" 3
wchar_t *wcsrchr(wchar_t * , wchar_t ) throw() __asm__("wcsrchr")
# 230 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 231 "/usr/include/wchar.h" 3
const wchar_t *wcsrchr(const wchar_t * , wchar_t ) throw() __asm__("wcsrchr")
# 232 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 242 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcschrnul(const wchar_t * , wchar_t ) throw()
# 243 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 249 "/usr/include/wchar.h" 3
extern "C" size_t wcscspn(const wchar_t * , const wchar_t * ) throw()
# 250 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 253 "/usr/include/wchar.h" 3
extern "C" size_t wcsspn(const wchar_t * , const wchar_t * ) throw()
# 254 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 257 "/usr/include/wchar.h" 3
wchar_t *wcspbrk(wchar_t * , const wchar_t * ) throw() __asm__("wcspbrk")
# 258 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 259 "/usr/include/wchar.h" 3
const wchar_t *wcspbrk(const wchar_t * , const wchar_t * ) throw() __asm__("wcspbrk")
# 261 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 268 "/usr/include/wchar.h" 3
wchar_t *wcsstr(wchar_t * , const wchar_t * ) throw() __asm__("wcsstr")
# 269 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 270 "/usr/include/wchar.h" 3
const wchar_t *wcsstr(const wchar_t * , const wchar_t * ) throw() __asm__("wcsstr")
# 272 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 279 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcstok(wchar_t *__restrict__ , const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 284 "/usr/include/wchar.h" 3
extern "C" size_t wcslen(const wchar_t * ) throw() __attribute((__pure__));
# 290 "/usr/include/wchar.h" 3
wchar_t *wcswcs(wchar_t * , const wchar_t * ) throw() __asm__("wcswcs")
# 291 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 292 "/usr/include/wchar.h" 3
const wchar_t *wcswcs(const wchar_t * , const wchar_t * ) throw() __asm__("wcswcs")
# 294 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 303 "/usr/include/wchar.h" 3
extern "C" size_t wcsnlen(const wchar_t * , size_t ) throw()
# 304 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 311 "/usr/include/wchar.h" 3
wchar_t *wmemchr(wchar_t * , wchar_t , size_t ) throw() __asm__("wmemchr")
# 312 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 313 "/usr/include/wchar.h" 3
const wchar_t *wmemchr(const wchar_t * , wchar_t , size_t ) throw() __asm__("wmemchr")
# 315 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 322 "/usr/include/wchar.h" 3
extern "C" int wmemcmp(const wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw()
# 324 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 327 "/usr/include/wchar.h" 3
extern "C" wchar_t *wmemcpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 332 "/usr/include/wchar.h" 3
extern "C" wchar_t *wmemmove(wchar_t * , const wchar_t * , size_t ) throw();
# 336 "/usr/include/wchar.h" 3
extern "C" wchar_t *wmemset(wchar_t * , wchar_t , size_t ) throw();
# 342 "/usr/include/wchar.h" 3
extern "C" wchar_t *wmempcpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 351 "/usr/include/wchar.h" 3
extern "C" wint_t btowc(int ) throw();
# 355 "/usr/include/wchar.h" 3
extern "C" int wctob(wint_t ) throw();
# 359 "/usr/include/wchar.h" 3
extern "C" int mbsinit(const mbstate_t * ) throw() __attribute((__pure__));
# 363 "/usr/include/wchar.h" 3
extern "C" size_t mbrtowc(wchar_t *__restrict__ , const char *__restrict__ , size_t , mbstate_t * ) throw();
# 368 "/usr/include/wchar.h" 3
extern "C" size_t wcrtomb(char *__restrict__ , wchar_t , mbstate_t *__restrict__ ) throw();
# 372 "/usr/include/wchar.h" 3
extern "C" size_t __mbrlen(const char *__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 374 "/usr/include/wchar.h" 3
extern "C" size_t mbrlen(const char *__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 406 "/usr/include/wchar.h" 3
extern "C" size_t mbsrtowcs(wchar_t *__restrict__ , const char **__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 412 "/usr/include/wchar.h" 3
extern "C" size_t wcsrtombs(char *__restrict__ , const wchar_t **__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 421 "/usr/include/wchar.h" 3
extern "C" size_t mbsnrtowcs(wchar_t *__restrict__ , const char **__restrict__ , size_t , size_t , mbstate_t *__restrict__ ) throw();
# 427 "/usr/include/wchar.h" 3
extern "C" size_t wcsnrtombs(char *__restrict__ , const wchar_t **__restrict__ , size_t , size_t , mbstate_t *__restrict__ ) throw();
# 437 "/usr/include/wchar.h" 3
extern "C" int wcwidth(wchar_t ) throw();
# 441 "/usr/include/wchar.h" 3
extern "C" int wcswidth(const wchar_t * , size_t ) throw();
# 448 "/usr/include/wchar.h" 3
extern "C" double wcstod(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 455 "/usr/include/wchar.h" 3
extern "C" float wcstof(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 457 "/usr/include/wchar.h" 3
extern "C" long double wcstold(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 466 "/usr/include/wchar.h" 3
extern "C" long wcstol(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 471 "/usr/include/wchar.h" 3
extern "C" unsigned long wcstoul(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 481 "/usr/include/wchar.h" 3
extern "C" long long wcstoll(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 488 "/usr/include/wchar.h" 3
extern "C" unsigned long long wcstoull(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 498 "/usr/include/wchar.h" 3
extern "C" long long wcstoq(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 505 "/usr/include/wchar.h" 3
extern "C" unsigned long long wcstouq(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 528 "/usr/include/wchar.h" 3
extern "C" long wcstol_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , __locale_t ) throw();
# 532 "/usr/include/wchar.h" 3
extern "C" unsigned long wcstoul_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , __locale_t ) throw();
# 537 "/usr/include/wchar.h" 3
extern "C" long long wcstoll_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , __locale_t ) throw();
# 542 "/usr/include/wchar.h" 3
extern "C" unsigned long long wcstoull_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , __locale_t ) throw();
# 547 "/usr/include/wchar.h" 3
extern "C" double wcstod_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , __locale_t ) throw();
# 551 "/usr/include/wchar.h" 3
extern "C" float wcstof_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , __locale_t ) throw();
# 555 "/usr/include/wchar.h" 3
extern "C" long double wcstold_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , __locale_t ) throw();
# 564 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcpcpy(wchar_t * , const wchar_t * ) throw();
# 568 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcpncpy(wchar_t * , const wchar_t * , size_t ) throw();
# 578 "/usr/include/wchar.h" 3
extern "C" __FILE *open_wmemstream(wchar_t ** , size_t * ) throw();
# 585 "/usr/include/wchar.h" 3
extern "C" int fwide(__FILE * , int ) throw();
# 592 "/usr/include/wchar.h" 3
extern "C" int fwprintf(__FILE *__restrict__ , const wchar_t *__restrict__ , ...);
# 599 "/usr/include/wchar.h" 3
extern "C" int wprintf(const wchar_t *__restrict__ , ...);
# 602 "/usr/include/wchar.h" 3
extern "C" int swprintf(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , ...) throw();
# 610 "/usr/include/wchar.h" 3
extern "C" int vfwprintf(__FILE *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list );
# 618 "/usr/include/wchar.h" 3
extern "C" int vwprintf(const wchar_t *__restrict__ , __gnuc_va_list );
# 623 "/usr/include/wchar.h" 3
extern "C" int vswprintf(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , __gnuc_va_list ) throw();
# 633 "/usr/include/wchar.h" 3
extern "C" int fwscanf(__FILE *__restrict__ , const wchar_t *__restrict__ , ...);
# 640 "/usr/include/wchar.h" 3
extern "C" int wscanf(const wchar_t *__restrict__ , ...);
# 643 "/usr/include/wchar.h" 3
extern "C" int swscanf(const wchar_t *__restrict__ , const wchar_t *__restrict__ , ...) throw();
# 687 "/usr/include/wchar.h" 3
extern "C" int vfwscanf(__FILE *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list );
# 695 "/usr/include/wchar.h" 3
extern "C" int vwscanf(const wchar_t *__restrict__ , __gnuc_va_list );
# 699 "/usr/include/wchar.h" 3
extern "C" int vswscanf(const wchar_t *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list ) throw();
# 743 "/usr/include/wchar.h" 3
extern "C" wint_t fgetwc(__FILE * );
# 744 "/usr/include/wchar.h" 3
extern "C" wint_t getwc(__FILE * );
# 750 "/usr/include/wchar.h" 3
extern "C" wint_t getwchar();
# 757 "/usr/include/wchar.h" 3
extern "C" wint_t fputwc(wchar_t , __FILE * );
# 758 "/usr/include/wchar.h" 3
extern "C" wint_t putwc(wchar_t , __FILE * );
# 764 "/usr/include/wchar.h" 3
extern "C" wint_t putwchar(wchar_t );
# 772 "/usr/include/wchar.h" 3
extern "C" wchar_t *fgetws(wchar_t *__restrict__ , int , __FILE *__restrict__ );
# 779 "/usr/include/wchar.h" 3
extern "C" int fputws(const wchar_t *__restrict__ , __FILE *__restrict__ );
# 787 "/usr/include/wchar.h" 3
extern "C" wint_t ungetwc(wint_t , __FILE * );
# 799 "/usr/include/wchar.h" 3
extern "C" wint_t getwc_unlocked(__FILE * );
# 800 "/usr/include/wchar.h" 3
extern "C" wint_t getwchar_unlocked();
# 808 "/usr/include/wchar.h" 3
extern "C" wint_t fgetwc_unlocked(__FILE * );
# 816 "/usr/include/wchar.h" 3
extern "C" wint_t fputwc_unlocked(wchar_t , __FILE * );
# 825 "/usr/include/wchar.h" 3
extern "C" wint_t putwc_unlocked(wchar_t , __FILE * );
# 826 "/usr/include/wchar.h" 3
extern "C" wint_t putwchar_unlocked(wchar_t );
# 835 "/usr/include/wchar.h" 3
extern "C" wchar_t *fgetws_unlocked(wchar_t *__restrict__ , int , __FILE *__restrict__ );
# 844 "/usr/include/wchar.h" 3
extern "C" int fputws_unlocked(const wchar_t *__restrict__ , __FILE *__restrict__ );
# 853 "/usr/include/wchar.h" 3
extern "C" size_t wcsftime(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , const tm *__restrict__ ) throw();
# 863 "/usr/include/wchar.h" 3
extern "C" size_t wcsftime_l(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , const tm *__restrict__ , __locale_t ) throw();
# 65 "/usr/include/c++/4.4/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 67 "/usr/include/c++/4.4/cwchar" 3
using ::mbstate_t;
# 69 "/usr/include/c++/4.4/cwchar" 3
}
# 139 "/usr/include/c++/4.4/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 141 "/usr/include/c++/4.4/cwchar" 3
using ::wint_t;
# 143 "/usr/include/c++/4.4/cwchar" 3
using ::btowc;
# 144 "/usr/include/c++/4.4/cwchar" 3
using ::fgetwc;
# 145 "/usr/include/c++/4.4/cwchar" 3
using ::fgetws;
# 146 "/usr/include/c++/4.4/cwchar" 3
using ::fputwc;
# 147 "/usr/include/c++/4.4/cwchar" 3
using ::fputws;
# 148 "/usr/include/c++/4.4/cwchar" 3
using ::fwide;
# 149 "/usr/include/c++/4.4/cwchar" 3
using ::fwprintf;
# 150 "/usr/include/c++/4.4/cwchar" 3
using ::fwscanf;
# 151 "/usr/include/c++/4.4/cwchar" 3
using ::getwc;
# 152 "/usr/include/c++/4.4/cwchar" 3
using ::getwchar;
# 153 "/usr/include/c++/4.4/cwchar" 3
using ::mbrlen;
# 154 "/usr/include/c++/4.4/cwchar" 3
using ::mbrtowc;
# 155 "/usr/include/c++/4.4/cwchar" 3
using ::mbsinit;
# 156 "/usr/include/c++/4.4/cwchar" 3
using ::mbsrtowcs;
# 157 "/usr/include/c++/4.4/cwchar" 3
using ::putwc;
# 158 "/usr/include/c++/4.4/cwchar" 3
using ::putwchar;
# 159 "/usr/include/c++/4.4/cwchar" 3
using ::swprintf;
# 160 "/usr/include/c++/4.4/cwchar" 3
using ::swscanf;
# 161 "/usr/include/c++/4.4/cwchar" 3
using ::ungetwc;
# 162 "/usr/include/c++/4.4/cwchar" 3
using ::vfwprintf;
# 164 "/usr/include/c++/4.4/cwchar" 3
using ::vfwscanf;
# 166 "/usr/include/c++/4.4/cwchar" 3
using ::vswprintf;
# 168 "/usr/include/c++/4.4/cwchar" 3
using ::vswscanf;
# 170 "/usr/include/c++/4.4/cwchar" 3
using ::vwprintf;
# 172 "/usr/include/c++/4.4/cwchar" 3
using ::vwscanf;
# 174 "/usr/include/c++/4.4/cwchar" 3
using ::wcrtomb;
# 175 "/usr/include/c++/4.4/cwchar" 3
using ::wcscat;
# 176 "/usr/include/c++/4.4/cwchar" 3
using ::wcscmp;
# 177 "/usr/include/c++/4.4/cwchar" 3
using ::wcscoll;
# 178 "/usr/include/c++/4.4/cwchar" 3
using ::wcscpy;
# 179 "/usr/include/c++/4.4/cwchar" 3
using ::wcscspn;
# 180 "/usr/include/c++/4.4/cwchar" 3
using ::wcsftime;
# 181 "/usr/include/c++/4.4/cwchar" 3
using ::wcslen;
# 182 "/usr/include/c++/4.4/cwchar" 3
using ::wcsncat;
# 183 "/usr/include/c++/4.4/cwchar" 3
using ::wcsncmp;
# 184 "/usr/include/c++/4.4/cwchar" 3
using ::wcsncpy;
# 185 "/usr/include/c++/4.4/cwchar" 3
using ::wcsrtombs;
# 186 "/usr/include/c++/4.4/cwchar" 3
using ::wcsspn;
# 187 "/usr/include/c++/4.4/cwchar" 3
using ::wcstod;
# 189 "/usr/include/c++/4.4/cwchar" 3
using ::wcstof;
# 191 "/usr/include/c++/4.4/cwchar" 3
using ::wcstok;
# 192 "/usr/include/c++/4.4/cwchar" 3
using ::wcstol;
# 193 "/usr/include/c++/4.4/cwchar" 3
using ::wcstoul;
# 194 "/usr/include/c++/4.4/cwchar" 3
using ::wcsxfrm;
# 195 "/usr/include/c++/4.4/cwchar" 3
using ::wctob;
# 196 "/usr/include/c++/4.4/cwchar" 3
using ::wmemcmp;
# 197 "/usr/include/c++/4.4/cwchar" 3
using ::wmemcpy;
# 198 "/usr/include/c++/4.4/cwchar" 3
using ::wmemmove;
# 199 "/usr/include/c++/4.4/cwchar" 3
using ::wmemset;
# 200 "/usr/include/c++/4.4/cwchar" 3
using ::wprintf;
# 201 "/usr/include/c++/4.4/cwchar" 3
using ::wscanf;
# 202 "/usr/include/c++/4.4/cwchar" 3
using ::wcschr;
# 203 "/usr/include/c++/4.4/cwchar" 3
using ::wcspbrk;
# 204 "/usr/include/c++/4.4/cwchar" 3
using ::wcsrchr;
# 205 "/usr/include/c++/4.4/cwchar" 3
using ::wcsstr;
# 206 "/usr/include/c++/4.4/cwchar" 3
using ::wmemchr;
# 230 "/usr/include/c++/4.4/cwchar" 3
}
# 238 "/usr/include/c++/4.4/cwchar" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 245 "/usr/include/c++/4.4/cwchar" 3
using ::wcstold;
# 254 "/usr/include/c++/4.4/cwchar" 3
using ::wcstoll;
# 255 "/usr/include/c++/4.4/cwchar" 3
using ::wcstoull;
# 258 "/usr/include/c++/4.4/cwchar" 3
}
# 260 "/usr/include/c++/4.4/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 262 "/usr/include/c++/4.4/cwchar" 3
using __gnu_cxx::wcstold;
# 263 "/usr/include/c++/4.4/cwchar" 3
using __gnu_cxx::wcstoll;
# 264 "/usr/include/c++/4.4/cwchar" 3
using __gnu_cxx::wcstoull;
# 266 "/usr/include/c++/4.4/cwchar" 3
}
# 70 "/usr/include/c++/4.4/bits/postypes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 88 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef long streamoff;
# 98 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef ptrdiff_t streamsize;
# 111 "/usr/include/c++/4.4/bits/postypes.h" 3
template < typename _StateT >
    class fpos
    {
    private :
      streamoff _M_off;
      _StateT _M_state;

    public :




      fpos ( )
      : _M_off ( 0 ), _M_state ( ) { }

      fpos ( streamoff __off )
      : _M_off ( __off ), _M_state ( ) { }


      operator streamoff ( ) const { return _M_off; }


      void
      state ( _StateT __st )
      { _M_state = __st; }


      _StateT
      state ( ) const
      { return _M_state; }





      fpos &
      operator += ( streamoff __off )
      {
 _M_off += __off;
 return * this;
      }





      fpos &
      operator -= ( streamoff __off )
      {
 _M_off -= __off;
 return * this;
      }







      fpos
      operator + ( streamoff __off ) const
      {
 fpos __pos ( * this );
 __pos += __off;
 return __pos;
      }







      fpos
      operator - ( streamoff __off ) const
      {
 fpos __pos ( * this );
 __pos -= __off;
 return __pos;
      }






      streamoff
      operator - ( const fpos & __other ) const
      { return _M_off - __other . _M_off; }
    };
# 214 "/usr/include/c++/4.4/bits/postypes.h" 3
template < typename _StateT >
    inline bool
    operator == ( const fpos < _StateT > & __lhs, const fpos < _StateT > & __rhs )
    { return streamoff ( __lhs ) == streamoff ( __rhs ); }
# 219 "/usr/include/c++/4.4/bits/postypes.h" 3
template < typename _StateT >
    inline bool
    operator != ( const fpos < _StateT > & __lhs, const fpos < _StateT > & __rhs )
    { return streamoff ( __lhs ) != streamoff ( __rhs ); }
# 228 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef fpos< __mbstate_t> streampos;
# 230 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef fpos< __mbstate_t> wstreampos;
# 239 "/usr/include/c++/4.4/bits/postypes.h" 3
}
# 44 "/usr/include/c++/4.4/iosfwd" 3
namespace std __attribute((__visibility__("default"))) {
# 46 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_ios;
# 49 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_streambuf;
# 52 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_istream;
# 55 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_ostream;
# 58 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_iostream;
# 61 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 62 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringbuf;
# 65 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 66 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_istringstream;
# 69 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 70 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_ostringstream;
# 73 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 74 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringstream;
# 77 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_filebuf;
# 80 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_ifstream;
# 83 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_ofstream;
# 86 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_fstream;
# 89 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class istreambuf_iterator;
# 92 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class ostreambuf_iterator;
# 97 "/usr/include/c++/4.4/iosfwd" 3
class ios_base;
# 127 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ios< char, char_traits< char> > ios;
# 128 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_streambuf< char, char_traits< char> > streambuf;
# 129 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istream< char, char_traits< char> > istream;
# 130 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostream< char, char_traits< char> > ostream;
# 131 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_iostream< char, char_traits< char> > iostream;
# 132 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringbuf< char, char_traits< char> , allocator< char> > stringbuf;
# 133 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istringstream< char, char_traits< char> , allocator< char> > istringstream;
# 134 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostringstream< char, char_traits< char> , allocator< char> > ostringstream;
# 135 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringstream< char, char_traits< char> , allocator< char> > stringstream;
# 136 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_filebuf< char, char_traits< char> > filebuf;
# 137 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ifstream< char, char_traits< char> > ifstream;
# 138 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ofstream< char, char_traits< char> > ofstream;
# 139 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_fstream< char, char_traits< char> > fstream;
# 142 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ios< wchar_t, char_traits< wchar_t> > wios;
# 143 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_streambuf< wchar_t, char_traits< wchar_t> > wstreambuf;
# 144 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istream< wchar_t, char_traits< wchar_t> > wistream;
# 145 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostream< wchar_t, char_traits< wchar_t> > wostream;
# 146 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_iostream< wchar_t, char_traits< wchar_t> > wiostream;
# 147 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringbuf< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wstringbuf;
# 148 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istringstream< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wistringstream;
# 149 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostringstream< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wostringstream;
# 150 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringstream< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wstringstream;
# 151 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_filebuf< wchar_t, char_traits< wchar_t> > wfilebuf;
# 152 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ifstream< wchar_t, char_traits< wchar_t> > wifstream;
# 153 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ofstream< wchar_t, char_traits< wchar_t> > wofstream;
# 154 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_fstream< wchar_t, char_traits< wchar_t> > wfstream;
# 158 "/usr/include/c++/4.4/iosfwd" 3
}
# 41 "/usr/include/c++/4.4/exception" 3
namespace std {
# 59 "/usr/include/c++/4.4/exception" 3
class exception {
# 62 "/usr/include/c++/4.4/exception" 3
public: exception() throw() { }
# 63 "/usr/include/c++/4.4/exception" 3
virtual ~exception() throw();
# 67 "/usr/include/c++/4.4/exception" 3
virtual const char *what() const throw();
# 68 "/usr/include/c++/4.4/exception" 3
};
# 72 "/usr/include/c++/4.4/exception" 3
class bad_exception : public exception {
# 75 "/usr/include/c++/4.4/exception" 3
public: bad_exception() throw() { }
# 79 "/usr/include/c++/4.4/exception" 3
virtual ~bad_exception() throw();
# 82 "/usr/include/c++/4.4/exception" 3
virtual const char *what() const throw();
# 83 "/usr/include/c++/4.4/exception" 3
};
# 86 "/usr/include/c++/4.4/exception" 3
typedef void (*terminate_handler)(void);
# 89 "/usr/include/c++/4.4/exception" 3
typedef void (*unexpected_handler)(void);
# 92 "/usr/include/c++/4.4/exception" 3
terminate_handler set_terminate(terminate_handler) throw();
# 96 "/usr/include/c++/4.4/exception" 3
void terminate() __attribute((__noreturn__));
# 99 "/usr/include/c++/4.4/exception" 3
unexpected_handler set_unexpected(unexpected_handler) throw();
# 103 "/usr/include/c++/4.4/exception" 3
void unexpected() __attribute((__noreturn__));
# 115 "/usr/include/c++/4.4/exception" 3
bool uncaught_exception() throw();
# 118 "/usr/include/c++/4.4/exception" 3
}
# 120 "/usr/include/c++/4.4/exception" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 138 "/usr/include/c++/4.4/exception" 3
void __verbose_terminate_handler();
# 140 "/usr/include/c++/4.4/exception" 3
}
# 39 "/usr/include/c++/4.4/bits/functexcept.h" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_exception() __attribute((__noreturn__));
# 47 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_alloc() __attribute((__noreturn__));
# 51 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_cast() __attribute((__noreturn__));
# 54 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_typeid() __attribute((__noreturn__));
# 58 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_logic_error(const char *) __attribute((__noreturn__));
# 61 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_domain_error(const char *) __attribute((__noreturn__));
# 64 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_invalid_argument(const char *) __attribute((__noreturn__));
# 67 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_length_error(const char *) __attribute((__noreturn__));
# 70 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_out_of_range(const char *) __attribute((__noreturn__));
# 73 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_runtime_error(const char *) __attribute((__noreturn__));
# 76 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_range_error(const char *) __attribute((__noreturn__));
# 79 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_overflow_error(const char *) __attribute((__noreturn__));
# 82 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_underflow_error(const char *) __attribute((__noreturn__));
# 86 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_ios_failure(const char *) __attribute((__noreturn__));
# 89 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_system_error(int) __attribute((__noreturn__));
# 91 "/usr/include/c++/4.4/bits/functexcept.h" 3
}
# 37 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value>
# 53 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
struct __numeric_traits_integer {
# 56 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const _Value __min = ((((_Value)(-1)) < 0) ? (((_Value)1) << ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0))) : ((_Value)0));
# 57 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const _Value __max = ((((_Value)(-1)) < 0) ? ((((((_Value)1) << (((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0)) - (1))) - 1) << 1) + 1) : (~((_Value)0)));
# 61 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const bool __is_signed = (((_Value)(-1)) < 0);
# 62 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __digits = ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0));
# 63 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
};
# 65 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 66 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__min;
# 68 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 69 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__max;
# 71 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const bool
# 72 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__is_signed;
# 74 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 75 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__digits;
# 97 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value>
# 98 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
struct __numeric_traits_floating {
# 101 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __max_digits10 = (2 + ((((std::__are_same< _Value, float> ::__value) ? 24 : ((std::__are_same< _Value, double> ::__value) ? 53 : 64)) * 3010) / 10000));
# 104 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const bool __is_signed = true;
# 105 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __digits10 = ((std::__are_same< _Value, float> ::__value) ? 6 : ((std::__are_same< _Value, double> ::__value) ? 15 : 18));
# 106 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __max_exponent10 = ((std::__are_same< _Value, float> ::__value) ? 38 : ((std::__are_same< _Value, double> ::__value) ? 308 : 4932));
# 107 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
};
# 109 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 110 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_digits10;
# 112 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const bool
# 113 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__is_signed;
# 115 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 116 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__digits10;
# 118 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 119 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_exponent10;
# 121 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value>
# 122 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
struct __numeric_traits : public __conditional_type< std::__is_integer< _Value> ::__value, __numeric_traits_integer< _Value> , __numeric_traits_floating< _Value> > ::__type {
# 126 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
};
# 128 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
}
# 66 "/usr/include/c++/4.4/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 74 "/usr/include/c++/4.4/bits/move.h" 3
template < typename _Tp >
    inline void
    swap ( _Tp & __a, _Tp & __b )
    {



      _Tp __tmp = ( __a );
      __a = ( __b );
      __b = ( __tmp );
    }
# 88 "/usr/include/c++/4.4/bits/move.h" 3
template < typename _Tp, size_t _Nm >
    inline void
    swap ( _Tp ( & __a ) [ _Nm ], _Tp ( & __b ) [ _Nm ] )
    {
      for ( size_t __n = 0; __n < _Nm; ++ __n )
 swap ( __a [ __n ], __b [ __n ] );
    }
# 96 "/usr/include/c++/4.4/bits/move.h" 3
}
# 63 "/usr/include/c++/4.4/bits/stl_pair.h" 3
namespace std __attribute((__visibility__("default"))) {
# 66 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    struct pair
    {
      typedef _T1 first_type;
      typedef _T2 second_type;

      _T1 first;
      _T2 second;





      pair ( )
      : first ( ), second ( ) { }


      pair ( const _T1 & __a, const _T2 & __b )
      : first ( __a ), second ( __b ) { }

      template < class _U1, class _U2 >
        pair ( const pair < _U1, _U2 > & __p )
 : first ( __p . first ),
   second ( __p . second ) { }

    };
# 144 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator == ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __x . first == __y . first && __x . second == __y . second; }
# 150 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator < ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __x . first < __y . first
      || ( ! ( __y . first < __x . first ) && __x . second < __y . second ); }
# 157 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator != ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __x == __y ); }
# 163 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator > ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __y < __x; }
# 169 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator <= ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __y < __x ); }
# 175 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator >= ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __x < __y ); }
# 213 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline pair < _T1, _T2 >
    make_pair ( _T1 __x, _T2 __y )
    { return pair < _T1, _T2 > ( __x, __y ); }
# 259 "/usr/include/c++/4.4/bits/stl_pair.h" 3
}
# 68 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
namespace std __attribute((__visibility__("default"))) {
# 79 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct input_iterator_tag { };
# 81 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct output_iterator_tag { };
# 83 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct forward_iterator_tag : public input_iterator_tag { };
# 86 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct bidirectional_iterator_tag : public forward_iterator_tag { };
# 89 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct random_access_iterator_tag : public bidirectional_iterator_tag { };
# 102 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Category, class _Tp, class _Distance = ptrdiff_t, class
# 103 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
_Pointer = _Tp *, class _Reference = _Tp &>
# 104 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator {
# 107 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Category iterator_category;
# 109 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 111 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Distance difference_type;
# 113 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Pointer pointer;
# 115 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Reference reference;
# 116 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 124 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 125 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator_traits {
# 127 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::iterator_category iterator_category;
# 128 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::value_type value_type;
# 129 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::difference_type difference_type;
# 130 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::pointer pointer;
# 131 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::reference reference;
# 132 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 134 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 135 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator_traits< _Tp *> {
# 137 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 138 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 139 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 140 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp *pointer;
# 141 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp &reference;
# 142 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 144 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 145 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator_traits< const _Tp *> {
# 147 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 148 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 149 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 150 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef const _Tp *pointer;
# 151 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef const _Tp &reference;
# 152 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 158 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template < typename _Iter >
    inline typename iterator_traits < _Iter > :: iterator_category
    __iterator_category ( const _Iter & )
    { return typename iterator_traits < _Iter > :: iterator_category ( ); }
# 165 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
}
# 66 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
namespace std __attribute((__visibility__("default"))) {
# 68 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator >
    inline typename iterator_traits < _InputIterator > :: difference_type
    __distance ( _InputIterator __first, _InputIterator __last,
               input_iterator_tag )
    {



      typename iterator_traits < _InputIterator > :: difference_type __n = 0;
      while ( __first != __last )
 {
   ++ __first;
   ++ __n;
 }
      return __n;
    }
# 85 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _RandomAccessIterator >
    inline typename iterator_traits < _RandomAccessIterator > :: difference_type
    __distance ( _RandomAccessIterator __first, _RandomAccessIterator __last,
               random_access_iterator_tag )
    {



      return __last - __first;
    }
# 108 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator >
    inline typename iterator_traits < _InputIterator > :: difference_type
    distance ( _InputIterator __first, _InputIterator __last )
    {

      return std :: __distance ( __first, __last,
        std :: __iterator_category ( __first ) );
    }
# 117 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator, typename _Distance >
    inline void
    __advance ( _InputIterator & __i, _Distance __n, input_iterator_tag )
    {


      while ( __n -- )
 ++ __i;
    }
# 127 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _BidirectionalIterator, typename _Distance >
    inline void
    __advance ( _BidirectionalIterator & __i, _Distance __n,
       bidirectional_iterator_tag )
    {



      if ( __n > 0 )
        while ( __n -- )
   ++ __i;
      else
        while ( __n ++ )
   -- __i;
    }
# 143 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _RandomAccessIterator, typename _Distance >
    inline void
    __advance ( _RandomAccessIterator & __i, _Distance __n,
              random_access_iterator_tag )
    {



      __i += __n;
    }
# 166 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator, typename _Distance >
    inline void
    advance ( _InputIterator & __i, _Distance __n )
    {

      typename iterator_traits < _InputIterator > :: difference_type __d = __n;
      std :: __advance ( __i, __d, std :: __iterator_category ( __i ) );
    }
# 195 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
}
# 68 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 89 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    class reverse_iterator
    : public iterator < typename iterator_traits < _Iterator > :: iterator_category,
        typename iterator_traits < _Iterator > :: value_type,
        typename iterator_traits < _Iterator > :: difference_type,
        typename iterator_traits < _Iterator > :: pointer,
                      typename iterator_traits < _Iterator > :: reference >
    {
    protected :
      _Iterator current;

    public :
      typedef _Iterator iterator_type;
      typedef typename iterator_traits < _Iterator > :: difference_type
              difference_type;
      typedef typename iterator_traits < _Iterator > :: reference reference;
      typedef typename iterator_traits < _Iterator > :: pointer pointer;

    public :






      reverse_iterator ( ) : current ( ) { }




      explicit
      reverse_iterator ( iterator_type __x ) : current ( __x ) { }




      reverse_iterator ( const reverse_iterator & __x )
      : current ( __x . current ) { }





      template < typename _Iter >
        reverse_iterator ( const reverse_iterator < _Iter > & __x )
 : current ( __x . base ( ) ) { }




      iterator_type
      base ( ) const
      { return current; }






      reference
      operator * ( ) const
      {
 _Iterator __tmp = current;
 return * -- __tmp;
      }






      pointer
      operator -> ( ) const
      { return & ( operator * ( ) ); }






      reverse_iterator &
      operator ++ ( )
      {
 -- current;
 return * this;
      }






      reverse_iterator
      operator ++ ( int )
      {
 reverse_iterator __tmp = * this;
 -- current;
 return __tmp;
      }






      reverse_iterator &
      operator -- ( )
      {
 ++ current;
 return * this;
      }






      reverse_iterator
      operator -- ( int )
      {
 reverse_iterator __tmp = * this;
 ++ current;
 return __tmp;
      }






      reverse_iterator
      operator + ( difference_type __n ) const
      { return reverse_iterator ( current - __n ); }






      reverse_iterator &
      operator += ( difference_type __n )
      {
 current -= __n;
 return * this;
      }






      reverse_iterator
      operator - ( difference_type __n ) const
      { return reverse_iterator ( current + __n ); }






      reverse_iterator &
      operator -= ( difference_type __n )
      {
 current += __n;
 return * this;
      }






      reference
      operator [ ] ( difference_type __n ) const
      { return * ( * this + __n ); }
    };
# 276 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator == ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return __x . base ( ) == __y . base ( ); }
# 282 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator < ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y . base ( ) < __x . base ( ); }
# 288 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator != ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __x == __y ); }
# 294 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator > ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y < __x; }
# 300 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator <= ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __y < __x ); }
# 306 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator >= ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __x < __y ); }
# 312 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline typename reverse_iterator < _Iterator > :: difference_type
    operator - ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y . base ( ) - __x . base ( ); }
# 318 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline reverse_iterator < _Iterator >
    operator + ( typename reverse_iterator < _Iterator > :: difference_type __n,
       const reverse_iterator < _Iterator > & __x )
    { return reverse_iterator < _Iterator > ( __x . base ( ) - __n ); }
# 326 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator == ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return __x . base ( ) == __y . base ( ); }
# 332 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator < ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )
    { return __y . base ( ) < __x . base ( ); }
# 338 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator != ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __x == __y ); }
# 344 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator > ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )
    { return __y < __x; }
# 350 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator <= ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __y < __x ); }
# 356 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator >= ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __x < __y ); }
# 362 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >







    inline typename reverse_iterator < _IteratorL > :: difference_type
    operator - ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )

    { return __y . base ( ) - __x . base ( ); }
# 388 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    class back_insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;

    public :

      typedef _Container container_type;


      explicit
      back_insert_iterator ( _Container & __x ) : container ( & __x ) { }

      back_insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 container -> push_back ( __value );
 return * this;
      }

      back_insert_iterator &
      operator * ( )
      { return * this; }


      back_insert_iterator &
      operator ++ ( )
      { return * this; }


      back_insert_iterator
      operator ++ ( int )
      { return * this; }
    };
# 457 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    inline back_insert_iterator < _Container >
    back_inserter ( _Container & __x )
    { return back_insert_iterator < _Container > ( __x ); }
# 472 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    class front_insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;

    public :

      typedef _Container container_type;


      explicit front_insert_iterator ( _Container & __x ) : container ( & __x ) { }

      front_insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 container -> push_front ( __value );
 return * this;
      }

      front_insert_iterator &
      operator * ( )
      { return * this; }


      front_insert_iterator &
      operator ++ ( )
      { return * this; }


      front_insert_iterator
      operator ++ ( int )
      { return * this; }
    };
# 540 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    inline front_insert_iterator < _Container >
    front_inserter ( _Container & __x )
    { return front_insert_iterator < _Container > ( __x ); }
# 559 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    class insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;
      typename _Container :: iterator iter;

    public :

      typedef _Container container_type;





      insert_iterator ( _Container & __x, typename _Container :: iterator __i )
      : container ( & __x ), iter ( __i ) { }

      insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 iter = container -> insert ( iter, __value );
 ++ iter;
 return * this;
      }

      insert_iterator &
      operator * ( )
      { return * this; }


      insert_iterator &
      operator ++ ( )
      { return * this; }


      insert_iterator &
      operator ++ ( int )
      { return * this; }
    };
# 646 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container, typename _Iterator >
    inline insert_iterator < _Container >
    inserter ( _Container & __x, _Iterator __i )
    {
      return insert_iterator < _Container > ( __x,
      typename _Container :: iterator ( __i ) );
    }
# 654 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
}
# 656 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 665 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
using std::iterator_traits;
# 666 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
using std::iterator;
# 667 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    class __normal_iterator
    {
    protected :
      _Iterator _M_current;

    public :
      typedef _Iterator iterator_type;
      typedef typename iterator_traits < _Iterator > :: iterator_category
                                                             iterator_category;
      typedef typename iterator_traits < _Iterator > :: value_type value_type;
      typedef typename iterator_traits < _Iterator > :: difference_type
                                                             difference_type;
      typedef typename iterator_traits < _Iterator > :: reference reference;
      typedef typename iterator_traits < _Iterator > :: pointer pointer;

      __normal_iterator ( ) : _M_current ( _Iterator ( ) ) { }

      explicit
      __normal_iterator ( const _Iterator & __i ) : _M_current ( __i ) { }


      template < typename _Iter >
        __normal_iterator ( const __normal_iterator < _Iter,
     typename __enable_if <
              ( std :: __are_same < _Iter, typename _Container :: pointer > :: __value ),
        _Container > :: __type > & __i )
        : _M_current ( __i . base ( ) ) { }


      reference
      operator * ( ) const
      { return * _M_current; }

      pointer
      operator -> ( ) const
      { return _M_current; }

      __normal_iterator &
      operator ++ ( )
      {
 ++ _M_current;
 return * this;
      }

      __normal_iterator
      operator ++ ( int )
      { return __normal_iterator ( _M_current ++ ); }


      __normal_iterator &
      operator -- ( )
      {
 -- _M_current;
 return * this;
      }

      __normal_iterator
      operator -- ( int )
      { return __normal_iterator ( _M_current -- ); }


      reference
      operator [ ] ( const difference_type & __n ) const
      { return _M_current [ __n ]; }

      __normal_iterator &
      operator += ( const difference_type & __n )
      { _M_current += __n; return * this; }

      __normal_iterator
      operator + ( const difference_type & __n ) const
      { return __normal_iterator ( _M_current + __n ); }

      __normal_iterator &
      operator -= ( const difference_type & __n )
      { _M_current -= __n; return * this; }

      __normal_iterator
      operator - ( const difference_type & __n ) const
      { return __normal_iterator ( _M_current - __n ); }

      const _Iterator &
      base ( ) const
      { return _M_current; }
    };
# 763 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator == ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) == __rhs . base ( ); }
# 769 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator == ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) == __rhs . base ( ); }
# 775 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator != ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) != __rhs . base ( ); }
# 781 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator != ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) != __rhs . base ( ); }
# 788 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator < ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) < __rhs . base ( ); }
# 794 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator < ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) < __rhs . base ( ); }
# 800 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator > ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) > __rhs . base ( ); }
# 806 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator > ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) > __rhs . base ( ); }
# 812 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator <= ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) <= __rhs . base ( ); }
# 818 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator <= ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) <= __rhs . base ( ); }
# 824 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator >= ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) >= __rhs . base ( ); }
# 830 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator >= ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) >= __rhs . base ( ); }
# 840 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >







    inline typename __normal_iterator < _IteratorL, _Container > :: difference_type
    operator - ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )

    { return __lhs . base ( ) - __rhs . base ( ); }
# 854 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline typename __normal_iterator < _Iterator, _Container > :: difference_type
    operator - ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) - __rhs . base ( ); }
# 860 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline __normal_iterator < _Iterator, _Container >
    operator + ( typename __normal_iterator < _Iterator, _Container > :: difference_type
       __n, const __normal_iterator < _Iterator, _Container > & __i )
    { return __normal_iterator < _Iterator, _Container > ( __i . base ( ) + __n ); }
# 866 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
}
# 47 "/usr/include/c++/4.4/debug/debug.h" 3
namespace std {
# 49 "/usr/include/c++/4.4/debug/debug.h" 3
namespace __debug { }
# 50 "/usr/include/c++/4.4/debug/debug.h" 3
}
# 55 "/usr/include/c++/4.4/debug/debug.h" 3
namespace __gnu_debug {
# 57 "/usr/include/c++/4.4/debug/debug.h" 3
using namespace std::__debug;
# 58 "/usr/include/c++/4.4/debug/debug.h" 3
}
# 74 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 79 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _BoolType>
# 80 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __iter_swap {
# 82 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
        static void
        iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
        {
          typedef typename iterator_traits < _ForwardIterator1 > :: value_type
            _ValueType1;
          _ValueType1 __tmp = ( * __a );
          * __a = ( * __b );
          * __b = ( __tmp );
 }
# 92 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 95 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __iter_swap< true> {
# 97 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
        static void
        iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
        {
          swap ( * __a, * __b );
        }
# 103 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 115 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
    inline void
    iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
    {
      typedef typename iterator_traits < _ForwardIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _ForwardIterator2 > :: value_type
 _ValueType2;
# 134 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
      typedef typename iterator_traits < _ForwardIterator1 > :: reference
 _ReferenceType1;
      typedef typename iterator_traits < _ForwardIterator2 > :: reference
 _ReferenceType2;
      std :: __iter_swap < __are_same < _ValueType1, _ValueType2 > :: __value
 && __are_same < _ValueType1 &, _ReferenceType1 > :: __value
 && __are_same < _ValueType2 &, _ReferenceType2 > :: __value > ::
 iter_swap ( __a, __b );
    }
# 156 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
    _ForwardIterator2
    swap_ranges ( _ForwardIterator1 __first1, _ForwardIterator1 __last1,
  _ForwardIterator2 __first2 )
    {





      ;

      for (; __first1 != __last1; ++ __first1, ++ __first2 )
 std :: iter_swap ( __first1, __first2 );
      return __first2;
    }
# 184 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
    inline const _Tp &
    min ( const _Tp & __a, const _Tp & __b )
    {



      if ( __b < __a )
 return __b;
      return __a;
    }
# 207 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
    inline const _Tp &
    max ( const _Tp & __a, const _Tp & __b )
    {



      if ( __a < __b )
 return __b;
      return __a;
    }
# 230 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp, typename _Compare >
    inline const _Tp &
    min ( const _Tp & __a, const _Tp & __b, _Compare __comp )
    {

      if ( __comp ( __b, __a ) )
 return __b;
      return __a;
    }
# 251 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp, typename _Compare >
    inline const _Tp &
    max ( const _Tp & __a, const _Tp & __b, _Compare __comp )
    {

      if ( __comp ( __a, __b ) )
 return __b;
      return __a;
    }
# 264 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator,
    bool _IsNormal = __is_normal_iterator < _Iterator > :: __value >
    struct __niter_base
    {
      static _Iterator
      __b ( _Iterator __it )
      { return __it; }
    };
# 273 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator >
    struct __niter_base < _Iterator, true >
    {
      static typename _Iterator :: iterator_type
      __b ( _Iterator __it )
      { return __it . base ( ); }
    };
# 282 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator,
    bool _IsMove = __is_move_iterator < _Iterator > :: __value >
    struct __miter_base
    {
      static _Iterator
      __b ( _Iterator __it )
      { return __it; }
    };
# 291 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator >
    struct __miter_base < _Iterator, true >
    {
      static typename _Iterator :: iterator_type
      __b ( _Iterator __it )
      { return __it . base ( ); }
    };
# 305 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool __T3, bool __T4, class >
# 306 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move {
# 308 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
        static _OI
        __copy_m ( _II __first, _II __last, _OI __result )
        {
   for (; __first != __last; ++ __result, ++ __first )
     * __result = * __first;
   return __result;
 }
# 316 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 334 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __copy_move< false, false, random_access_iterator_tag> {
# 336 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
        static _OI
        __copy_m ( _II __first, _II __last, _OI __result )
        {
   typedef typename iterator_traits < _II > :: difference_type _Distance;
   for ( _Distance __n = __last - __first; __n > 0; -- __n )
     {
       * __result = * __first;
       ++ __first;
       ++ __result;
     }
   return __result;
 }
# 349 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 371 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _IsMove>
# 372 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move< _IsMove, true, random_access_iterator_tag> {
# 374 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
        static _Tp *
        __copy_m ( const _Tp * __first, const _Tp * __last, _Tp * __result )
        {
   __builtin_memmove ( __result, __first,
       sizeof ( _Tp ) * ( __last - __first ) );
   return __result + ( __last - __first );
 }
# 382 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 384 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _II, typename _OI >
    inline _OI
    __copy_move_a ( _II __first, _II __last, _OI __result )
    {
      typedef typename iterator_traits < _II > :: value_type _ValueTypeI;
      typedef typename iterator_traits < _OI > :: value_type _ValueTypeO;
      typedef typename iterator_traits < _II > :: iterator_category _Category;
      const bool __simple = ( __is_pod ( _ValueTypeI )
                      && __is_pointer < _II > :: __value
                      && __is_pointer < _OI > :: __value
        && __are_same < _ValueTypeI, _ValueTypeO > :: __value );

      return std :: __copy_move < _IsMove, __simple,
                       _Category > :: __copy_m ( __first, __last, __result );
    }
# 402 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class _CharT> struct char_traits;
# 405 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class istreambuf_iterator;
# 408 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class ostreambuf_iterator;
# 411 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
      ostreambuf_iterator < _CharT, char_traits < _CharT > > > :: __type
    __copy_move_a2 ( _CharT *, _CharT *,
     ostreambuf_iterator < _CharT, char_traits < _CharT > > );
# 417 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
      ostreambuf_iterator < _CharT, char_traits < _CharT > > > :: __type
    __copy_move_a2 ( const _CharT *, const _CharT *,
     ostreambuf_iterator < _CharT, char_traits < _CharT > > );
# 423 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
        _CharT * > :: __type
    __copy_move_a2 ( istreambuf_iterator < _CharT, char_traits < _CharT > >,
     istreambuf_iterator < _CharT, char_traits < _CharT > >, _CharT * );
# 429 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _II, typename _OI >
    inline _OI
    __copy_move_a2 ( _II __first, _II __last, _OI __result )
    {
      return _OI ( std :: __copy_move_a < _IsMove >
   ( std :: __niter_base < _II > :: __b ( __first ),
    std :: __niter_base < _II > :: __b ( __last ),
    std :: __niter_base < _OI > :: __b ( __result ) ) );
    }
# 456 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
    inline _OI
    copy ( _II __first, _II __last, _OI __result )
    {




      ;

      return ( std :: __copy_move_a2 < __is_move_iterator < _II > :: __value >
       ( std :: __miter_base < _II > :: __b ( __first ),
        std :: __miter_base < _II > :: __b ( __last ), __result ) );
    }
# 509 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool __T5, bool __T6, class >
# 510 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move_backward {
# 512 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
        static _BI2
        __copy_move_b ( _BI1 __first, _BI1 __last, _BI2 __result )
        {
   while ( __first != __last )
     * -- __result = * -- __last;
   return __result;
 }
# 520 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 538 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __copy_move_backward< false, false, random_access_iterator_tag> {
# 540 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
        static _BI2
        __copy_move_b ( _BI1 __first, _BI1 __last, _BI2 __result )
        {
   typename iterator_traits < _BI1 > :: difference_type __n;
   for ( __n = __last - __first; __n > 0; -- __n )
     * -- __result = * -- __last;
   return __result;
 }
# 549 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 567 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _IsMove>
# 568 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move_backward< _IsMove, true, random_access_iterator_tag> {
# 570 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
        static _Tp *
        __copy_move_b ( const _Tp * __first, const _Tp * __last, _Tp * __result )
        {
   const ptrdiff_t _Num = __last - __first;
   __builtin_memmove ( __result - _Num, __first, sizeof ( _Tp ) * _Num );
   return __result - _Num;
 }
# 578 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 580 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _BI1, typename _BI2 >
    inline _BI2
    __copy_move_backward_a ( _BI1 __first, _BI1 __last, _BI2 __result )
    {
      typedef typename iterator_traits < _BI1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _BI2 > :: value_type _ValueType2;
      typedef typename iterator_traits < _BI1 > :: iterator_category _Category;
      const bool __simple = ( __is_pod ( _ValueType1 )
                      && __is_pointer < _BI1 > :: __value
                      && __is_pointer < _BI2 > :: __value
        && __are_same < _ValueType1, _ValueType2 > :: __value );

      return std :: __copy_move_backward < _IsMove, __simple,
                                _Category > :: __copy_move_b ( __first,
         __last,
         __result );
    }
# 598 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _BI1, typename _BI2 >
    inline _BI2
    __copy_move_backward_a2 ( _BI1 __first, _BI1 __last, _BI2 __result )
    {
      return _BI2 ( std :: __copy_move_backward_a < _IsMove >
    ( std :: __niter_base < _BI1 > :: __b ( __first ),
     std :: __niter_base < _BI1 > :: __b ( __last ),
     std :: __niter_base < _BI2 > :: __b ( __result ) ) );
    }
# 626 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
    inline _BI2
    copy_backward ( _BI1 __first, _BI1 __last, _BI2 __result )
    {






      ;

      return ( std :: __copy_move_backward_a2 < __is_move_iterator < _BI1 > :: __value >
       ( std :: __miter_base < _BI1 > :: __b ( __first ),
        std :: __miter_base < _BI1 > :: __b ( __last ), __result ) );
    }
# 684 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < ! __is_scalar < _Tp > :: __value, void > :: __type
    __fill_a ( _ForwardIterator __first, _ForwardIterator __last,
       const _Tp & __value )
    {
      for (; __first != __last; ++ __first )
 * __first = __value;
    }
# 694 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_scalar < _Tp > :: __value, void > :: __type
    __fill_a ( _ForwardIterator __first, _ForwardIterator __last,
      const _Tp & __value )
    {
      const _Tp __tmp = __value;
      for (; __first != __last; ++ __first )
 * __first = __tmp;
    }
# 706 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_byte < _Tp > :: __value, void > :: __type
    __fill_a ( _Tp * __first, _Tp * __last, const _Tp & __c )
    {
      const _Tp __tmp = __c;
      __builtin_memset ( __first, static_cast < unsigned char > ( __tmp ),
         __last - __first );
    }
# 728 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline void
    fill ( _ForwardIterator __first, _ForwardIterator __last, const _Tp & __value )
    {



      ;

      std :: __fill_a ( std :: __niter_base < _ForwardIterator > :: __b ( __first ),
      std :: __niter_base < _ForwardIterator > :: __b ( __last ), __value );
    }
# 741 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _OutputIterator, typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < ! __is_scalar < _Tp > :: __value, _OutputIterator > :: __type
    __fill_n_a ( _OutputIterator __first, _Size __n, const _Tp & __value )
    {
      for (; __n > 0; -- __n, ++ __first )
 * __first = __value;
      return __first;
    }
# 751 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _OutputIterator, typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_scalar < _Tp > :: __value, _OutputIterator > :: __type
    __fill_n_a ( _OutputIterator __first, _Size __n, const _Tp & __value )
    {
      const _Tp __tmp = __value;
      for (; __n > 0; -- __n, ++ __first )
 * __first = __tmp;
      return __first;
    }
# 762 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_byte < _Tp > :: __value, _Tp * > :: __type
    __fill_n_a ( _Tp * __first, _Size __n, const _Tp & __c )
    {
      std :: __fill_a ( __first, __first + __n, __c );
      return __first + __n;
    }
# 783 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _OI, typename _Size, typename _Tp >
    inline _OI
    fill_n ( _OI __first, _Size __n, const _Tp & __value )
    {



      return _OI ( std :: __fill_n_a ( std :: __niter_base < _OI > :: __b ( __first ),
     __n, __value ) );
    }
# 794 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _BoolType>
# 795 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __equal {
# 797 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static bool
        equal ( _II1 __first1, _II1 __last1, _II2 __first2 )
        {
   for (; __first1 != __last1; ++ __first1, ++ __first2 )
     if ( ! ( * __first1 == * __first2 ) )
       return false;
   return true;
 }
# 806 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 809 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __equal< true> {
# 811 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
        static bool
        equal ( const _Tp * __first1, const _Tp * __last1, const _Tp * __first2 )
        {
   return ! __builtin_memcmp ( __first1, __first2, sizeof ( _Tp )
       * ( __last1 - __first1 ) );
 }
# 818 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 820 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    __equal_aux ( _II1 __first1, _II1 __last1, _II2 __first2 )
    {
      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;
      const bool __simple = ( __is_integer < _ValueType1 > :: __value
                      && __is_pointer < _II1 > :: __value
                      && __is_pointer < _II2 > :: __value
        && __are_same < _ValueType1, _ValueType2 > :: __value );

      return std :: __equal < __simple > :: equal ( __first1, __last1, __first2 );
    }
# 835 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class , class >
# 836 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __lc_rai {
# 838 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static _II1
        __newlast1 ( _II1, _II1 __last1, _II2, _II2 )
        { return __last1; }
# 843 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II >
        static bool
        __cnd2 ( _II __first, _II __last )
        { return __first != __last; }
# 847 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 850 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __lc_rai< random_access_iterator_tag, random_access_iterator_tag> {
# 852 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _RAI1, typename _RAI2 >
        static _RAI1
        __newlast1 ( _RAI1 __first1, _RAI1 __last1,
     _RAI2 __first2, _RAI2 __last2 )
        {
   const typename iterator_traits < _RAI1 > :: difference_type
     __diff1 = __last1 - __first1;
   const typename iterator_traits < _RAI2 > :: difference_type
     __diff2 = __last2 - __first2;
   return __diff2 < __diff1 ? __first1 + __diff2 : __last1;
 }
# 864 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _RAI >
        static bool
        __cnd2 ( _RAI, _RAI )
        { return true; }
# 868 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 870 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _BoolType>
# 871 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __lexicographical_compare {
# 873 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static bool __lc ( _II1, _II1, _II2, _II2 );
# 875 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 877 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _BoolType >
    template < typename _II1, typename _II2 >
      bool
      __lexicographical_compare < _BoolType > ::
      __lc ( _II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2 )
      {
 typedef typename iterator_traits < _II1 > :: iterator_category _Category1;
 typedef typename iterator_traits < _II2 > :: iterator_category _Category2;
 typedef std :: __lc_rai < _Category1, _Category2 > __rai_type;

 __last1 = __rai_type :: __newlast1 ( __first1, __last1,
      __first2, __last2 );
 for (; __first1 != __last1 && __rai_type :: __cnd2 ( __first2, __last2 );
      ++ __first1, ++ __first2 )
   {
     if ( * __first1 < * __first2 )
       return true;
     if ( * __first2 < * __first1 )
       return false;
   }
 return __first1 == __last1 && __first2 != __last2;
      }
# 901 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __lexicographical_compare< true> {
# 903 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp, typename _Up >
        static bool
        __lc ( const _Tp * __first1, const _Tp * __last1,
      const _Up * __first2, const _Up * __last2 )
 {
   const size_t __len1 = __last1 - __first1;
   const size_t __len2 = __last2 - __first2;
   const int __result = __builtin_memcmp ( __first1, __first2,
      std :: min ( __len1, __len2 ) );
   return __result != 0 ? __result < 0 : __len1 < __len2;
 }
# 914 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 916 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    __lexicographical_compare_aux ( _II1 __first1, _II1 __last1,
      _II2 __first2, _II2 __last2 )
    {
      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;
      const bool __simple =
 ( __is_byte < _ValueType1 > :: __value && __is_byte < _ValueType2 > :: __value
  && ! __gnu_cxx :: __numeric_traits < _ValueType1 > :: __is_signed
  && ! __gnu_cxx :: __numeric_traits < _ValueType2 > :: __is_signed
  && __is_pointer < _II1 > :: __value
  && __is_pointer < _II2 > :: __value );

      return std :: __lexicographical_compare < __simple > :: __lc ( __first1, __last1,
           __first2, __last2 );
    }
# 934 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
}
# 936 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 950 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    equal ( _II1 __first1, _II1 __last1, _II2 __first2 )
    {






      ;

      return std :: __equal_aux ( std :: __niter_base < _II1 > :: __b ( __first1 ),
         std :: __niter_base < _II1 > :: __b ( __last1 ),
         std :: __niter_base < _II2 > :: __b ( __first2 ) );
    }
# 982 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _IIter1, typename _IIter2, typename _BinaryPredicate >
    inline bool
    equal ( _IIter1 __first1, _IIter1 __last1,
   _IIter2 __first2, _BinaryPredicate __binary_pred )
    {



      ;

      for (; __first1 != __last1; ++ __first1, ++ __first2 )
 if ( ! bool ( __binary_pred ( * __first1, * __first2 ) ) )
   return false;
      return true;
    }
# 1013 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    lexicographical_compare ( _II1 __first1, _II1 __last1,
       _II2 __first2, _II2 __last2 )
    {

      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;




      ;
      ;

      return std :: __lexicographical_compare_aux
 ( std :: __niter_base < _II1 > :: __b ( __first1 ),
  std :: __niter_base < _II1 > :: __b ( __last1 ),
  std :: __niter_base < _II2 > :: __b ( __first2 ),
  std :: __niter_base < _II2 > :: __b ( __last2 ) );
    }
# 1048 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2, typename _Compare >
    bool
    lexicographical_compare ( _II1 __first1, _II1 __last1,
       _II2 __first2, _II2 __last2, _Compare __comp )
    {
      typedef typename iterator_traits < _II1 > :: iterator_category _Category1;
      typedef typename iterator_traits < _II2 > :: iterator_category _Category2;
      typedef std :: __lc_rai < _Category1, _Category2 > __rai_type;




      ;
      ;

      __last1 = __rai_type :: __newlast1 ( __first1, __last1, __first2, __last2 );
      for (; __first1 != __last1 && __rai_type :: __cnd2 ( __first2, __last2 );
    ++ __first1, ++ __first2 )
 {
   if ( __comp ( * __first1, * __first2 ) )
     return true;
   if ( __comp ( * __first2, * __first1 ) )
     return false;
 }
      return __first1 == __last1 && __first2 != __last2;
    }
# 1088 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _InputIterator1, typename _InputIterator2 >
    pair < _InputIterator1, _InputIterator2 >
    mismatch ( _InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2 )
    {






      ;

      while ( __first1 != __last1 && * __first1 == * __first2 )
        {
   ++ __first1;
   ++ __first2;
        }
      return pair < _InputIterator1, _InputIterator2 > ( __first1, __first2 );
    }
# 1125 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _BinaryPredicate >
    pair < _InputIterator1, _InputIterator2 >
    mismatch ( _InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _BinaryPredicate __binary_pred )
    {



      ;

      while ( __first1 != __last1 && bool ( __binary_pred ( * __first1, * __first2 ) ) )
        {
   ++ __first1;
   ++ __first2;
        }
      return pair < _InputIterator1, _InputIterator2 > ( __first1, __first2 );
    }
# 1144 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
}
# 52 "/usr/include/c++/4.4/bits/char_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 64 "/usr/include/c++/4.4/bits/char_traits.h" 3
template< class _CharT>
# 65 "/usr/include/c++/4.4/bits/char_traits.h" 3
struct _Char_types {
# 67 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef unsigned long int_type;
# 68 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef std::streampos pos_type;
# 69 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef std::streamoff off_type;
# 70 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 71 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 89 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    struct char_traits
    {
      typedef _CharT char_type;
      typedef typename _Char_types < _CharT > :: int_type int_type;
      typedef typename _Char_types < _CharT > :: pos_type pos_type;
      typedef typename _Char_types < _CharT > :: off_type off_type;
      typedef typename _Char_types < _CharT > :: state_type state_type;

      static void
      assign ( char_type & __c1, const char_type & __c2 )
      { __c1 = __c2; }

      static bool
      eq ( const char_type & __c1, const char_type & __c2 )
      { return __c1 == __c2; }

      static bool
      lt ( const char_type & __c1, const char_type & __c2 )
      { return __c1 < __c2; }

      static int
      compare ( const char_type * __s1, const char_type * __s2, std :: size_t __n );

      static std :: size_t
      length ( const char_type * __s );

      static const char_type *
      find ( const char_type * __s, std :: size_t __n, const char_type & __a );

      static char_type *
      move ( char_type * __s1, const char_type * __s2, std :: size_t __n );

      static char_type *
      copy ( char_type * __s1, const char_type * __s2, std :: size_t __n );

      static char_type *
      assign ( char_type * __s, std :: size_t __n, char_type __a );

      static char_type
      to_char_type ( const int_type & __c )
      { return static_cast < char_type > ( __c ); }

      static int_type
      to_int_type ( const char_type & __c )
      { return static_cast < int_type > ( __c ); }

      static bool
      eq_int_type ( const int_type & __c1, const int_type & __c2 )
      { return __c1 == __c2; }

      static int_type
      eof ( )
      { return static_cast < int_type > ( ( - 1 ) ); }

      static int_type
      not_eof ( const int_type & __c )
      { return ! eq_int_type ( __c, eof ( ) ) ? __c : to_int_type ( char_type ( ) ); }
    };
# 149 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    int
    char_traits < _CharT > ::
    compare ( const char_type * __s1, const char_type * __s2, std :: size_t __n )
    {
      for ( std :: size_t __i = 0; __i < __n; ++ __i )
 if ( lt ( __s1 [ __i ], __s2 [ __i ] ) )
   return - 1;
 else if ( lt ( __s2 [ __i ], __s1 [ __i ] ) )
   return 1;
      return 0;
    }
# 162 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    std :: size_t
    char_traits < _CharT > ::
    length ( const char_type * __p )
    {
      std :: size_t __i = 0;
      while ( ! eq ( __p [ __i ], char_type ( ) ) )
        ++ __i;
      return __i;
    }
# 173 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    const typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    find ( const char_type * __s, std :: size_t __n, const char_type & __a )
    {
      for ( std :: size_t __i = 0; __i < __n; ++ __i )
        if ( eq ( __s [ __i ], __a ) )
          return __s + __i;
      return 0;
    }
# 184 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    move ( char_type * __s1, const char_type * __s2, std :: size_t __n )
    {
      return static_cast < _CharT * > ( __builtin_memmove ( __s1, __s2,
          __n * sizeof ( char_type ) ) );
    }
# 193 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    copy ( char_type * __s1, const char_type * __s2, std :: size_t __n )
    {

      std :: copy ( __s2, __s2 + __n, __s1 );
      return __s1;
    }
# 203 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    assign ( char_type * __s, std :: size_t __n, char_type __a )
    {

      std :: fill_n ( __s, __n, __a );
      return __s;
    }
# 213 "/usr/include/c++/4.4/bits/char_traits.h" 3
}
# 215 "/usr/include/c++/4.4/bits/char_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 230 "/usr/include/c++/4.4/bits/char_traits.h" 3
template< class _CharT>
# 231 "/usr/include/c++/4.4/bits/char_traits.h" 3
struct char_traits : public __gnu_cxx::char_traits< _CharT> {
# 232 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 237 "/usr/include/c++/4.4/bits/char_traits.h" 3
template<> struct char_traits< char> {
# 239 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef char char_type;
# 240 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef int int_type;
# 241 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef streampos pos_type;
# 242 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef streamoff off_type;
# 243 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 246 "/usr/include/c++/4.4/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 247 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ __c1 = __c2; }
# 250 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 251 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 254 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 255 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 258 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 259 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __builtin_memcmp(__s1, __s2, __n); }
# 262 "/usr/include/c++/4.4/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 263 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __builtin_strlen(__s); }
# 266 "/usr/include/c++/4.4/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 267 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< const char_type *>(__builtin_memchr(__s, __a, __n)); }
# 270 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 271 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memmove(__s1, __s2, __n)); }
# 274 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 275 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memcpy(__s1, __s2, __n)); }
# 278 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 279 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memset(__s, __a, __n)); }
# 282 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 283 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type>(__c); }
# 288 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 289 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< int_type>((static_cast< unsigned char>(__c))); }
# 292 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 293 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 296 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type eof()
# 297 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< int_type>((-1)); }
# 300 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 301 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return (__c == eof()) ? 0 : __c; }
# 302 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 308 "/usr/include/c++/4.4/bits/char_traits.h" 3
template<> struct char_traits< wchar_t> {
# 310 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef wchar_t char_type;
# 311 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef wint_t int_type;
# 312 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef streamoff off_type;
# 313 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef wstreampos pos_type;
# 314 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 317 "/usr/include/c++/4.4/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 318 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ __c1 = __c2; }
# 321 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 322 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 325 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 326 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 329 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 330 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemcmp(__s1, __s2, __n); }
# 333 "/usr/include/c++/4.4/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 334 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wcslen(__s); }
# 337 "/usr/include/c++/4.4/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 338 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemchr(__s, __a, __n); }
# 341 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 342 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemmove(__s1, __s2, __n); }
# 345 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 346 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemcpy(__s1, __s2, __n); }
# 349 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 350 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemset(__s, __a, __n); }
# 353 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 354 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return (char_type)__c; }
# 357 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 358 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return (int_type)__c; }
# 361 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 362 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 365 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type eof()
# 366 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< int_type>(4294967295U); }
# 369 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 370 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return eq_int_type(__c, eof()) ? (0) : __c; }
# 371 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 374 "/usr/include/c++/4.4/bits/char_traits.h" 3
}
# 28 "/usr/include/bits/locale.h" 3
enum {
# 29 "/usr/include/bits/locale.h" 3
__LC_CTYPE,
# 30 "/usr/include/bits/locale.h" 3
__LC_NUMERIC,
# 31 "/usr/include/bits/locale.h" 3
__LC_TIME,
# 32 "/usr/include/bits/locale.h" 3
__LC_COLLATE,
# 33 "/usr/include/bits/locale.h" 3
__LC_MONETARY,
# 34 "/usr/include/bits/locale.h" 3
__LC_MESSAGES,
# 35 "/usr/include/bits/locale.h" 3
__LC_ALL,
# 36 "/usr/include/bits/locale.h" 3
__LC_PAPER,
# 37 "/usr/include/bits/locale.h" 3
__LC_NAME,
# 38 "/usr/include/bits/locale.h" 3
__LC_ADDRESS,
# 39 "/usr/include/bits/locale.h" 3
__LC_TELEPHONE,
# 40 "/usr/include/bits/locale.h" 3
__LC_MEASUREMENT,
# 41 "/usr/include/bits/locale.h" 3
__LC_IDENTIFICATION
# 42 "/usr/include/bits/locale.h" 3
};
# 54 "/usr/include/locale.h" 3
extern "C" { struct lconv {
# 58 "/usr/include/locale.h" 3
char *decimal_point;
# 59 "/usr/include/locale.h" 3
char *thousands_sep;
# 65 "/usr/include/locale.h" 3
char *grouping;
# 71 "/usr/include/locale.h" 3
char *int_curr_symbol;
# 72 "/usr/include/locale.h" 3
char *currency_symbol;
# 73 "/usr/include/locale.h" 3
char *mon_decimal_point;
# 74 "/usr/include/locale.h" 3
char *mon_thousands_sep;
# 75 "/usr/include/locale.h" 3
char *mon_grouping;
# 76 "/usr/include/locale.h" 3
char *positive_sign;
# 77 "/usr/include/locale.h" 3
char *negative_sign;
# 78 "/usr/include/locale.h" 3
char int_frac_digits;
# 79 "/usr/include/locale.h" 3
char frac_digits;
# 81 "/usr/include/locale.h" 3
char p_cs_precedes;
# 83 "/usr/include/locale.h" 3
char p_sep_by_space;
# 85 "/usr/include/locale.h" 3
char n_cs_precedes;
# 87 "/usr/include/locale.h" 3
char n_sep_by_space;
# 94 "/usr/include/locale.h" 3
char p_sign_posn;
# 95 "/usr/include/locale.h" 3
char n_sign_posn;
# 98 "/usr/include/locale.h" 3
char int_p_cs_precedes;
# 100 "/usr/include/locale.h" 3
char int_p_sep_by_space;
# 102 "/usr/include/locale.h" 3
char int_n_cs_precedes;
# 104 "/usr/include/locale.h" 3
char int_n_sep_by_space;
# 111 "/usr/include/locale.h" 3
char int_p_sign_posn;
# 112 "/usr/include/locale.h" 3
char int_n_sign_posn;
# 121 "/usr/include/locale.h" 3
}; }
# 125 "/usr/include/locale.h" 3
extern "C" char *setlocale(int , const char * ) throw();
# 128 "/usr/include/locale.h" 3
extern "C" lconv *localeconv() throw();
# 152 "/usr/include/locale.h" 3
extern "C" __locale_t newlocale(int , const char * , __locale_t ) throw();
# 187 "/usr/include/locale.h" 3
extern "C" __locale_t duplocale(__locale_t ) throw();
# 191 "/usr/include/locale.h" 3
extern "C" void freelocale(__locale_t ) throw();
# 198 "/usr/include/locale.h" 3
extern "C" __locale_t uselocale(__locale_t ) throw();
# 53 "/usr/include/c++/4.4/clocale" 3
namespace std __attribute((__visibility__("default"))) {
# 55 "/usr/include/c++/4.4/clocale" 3
using ::lconv;
# 56 "/usr/include/c++/4.4/clocale" 3
using ::setlocale;
# 57 "/usr/include/c++/4.4/clocale" 3
using ::localeconv;
# 59 "/usr/include/c++/4.4/clocale" 3
}
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
extern "C" __typeof__(uselocale) __uselocale;
# 54 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
}
# 57 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
namespace std __attribute((__visibility__("default"))) {
# 59 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
typedef __locale_t __c_locale;
# 66 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
inline int __convert_from_v(const __c_locale &__cloc __attribute((__unused__)), char *
# 67 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__out, const int
# 68 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__size __attribute((__unused__)), const char *
# 69 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__fmt, ...)
# 70 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
{
# 72 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__c_locale __old = __gnu_cxx::__uselocale(__cloc);
# 85 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__builtin_va_list __args;
# 86 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__builtin_va_start(__args,__fmt);
# 89 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
# 94 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__builtin_va_end(__args);
# 97 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__gnu_cxx::__uselocale(__old);
# 105 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
return __ret;
# 106 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
}
# 108 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
}
# 49 "/usr/include/ctype.h" 3
enum {
# 50 "/usr/include/ctype.h" 3
_ISupper = 256,
# 51 "/usr/include/ctype.h" 3
_ISlower = 512,
# 52 "/usr/include/ctype.h" 3
_ISalpha = 1024,
# 53 "/usr/include/ctype.h" 3
_ISdigit = 2048,
# 54 "/usr/include/ctype.h" 3
_ISxdigit = 4096,
# 55 "/usr/include/ctype.h" 3
_ISspace = 8192,
# 56 "/usr/include/ctype.h" 3
_ISprint = 16384,
# 57 "/usr/include/ctype.h" 3
_ISgraph = 32768,
# 58 "/usr/include/ctype.h" 3
_ISblank = 1,
# 59 "/usr/include/ctype.h" 3
_IScntrl,
# 60 "/usr/include/ctype.h" 3
_ISpunct = 4,
# 61 "/usr/include/ctype.h" 3
_ISalnum = 8
# 62 "/usr/include/ctype.h" 3
};
# 81 "/usr/include/ctype.h" 3
extern "C" const unsigned short **__ctype_b_loc() throw()
# 82 "/usr/include/ctype.h" 3
 __attribute((const));
# 83 "/usr/include/ctype.h" 3
extern "C" const __int32_t **__ctype_tolower_loc() throw()
# 84 "/usr/include/ctype.h" 3
 __attribute((const));
# 85 "/usr/include/ctype.h" 3
extern "C" const __int32_t **__ctype_toupper_loc() throw()
# 86 "/usr/include/ctype.h" 3
 __attribute((const));
# 102 "/usr/include/ctype.h" 3
extern "C" int isalnum(int) throw();
# 103 "/usr/include/ctype.h" 3
extern "C" int isalpha(int) throw();
# 104 "/usr/include/ctype.h" 3
extern "C" int iscntrl(int) throw();
# 105 "/usr/include/ctype.h" 3
extern "C" int isdigit(int) throw();
# 106 "/usr/include/ctype.h" 3
extern "C" int islower(int) throw();
# 107 "/usr/include/ctype.h" 3
extern "C" int isgraph(int) throw();
# 108 "/usr/include/ctype.h" 3
extern "C" int isprint(int) throw();
# 109 "/usr/include/ctype.h" 3
extern "C" int ispunct(int) throw();
# 110 "/usr/include/ctype.h" 3
extern "C" int isspace(int) throw();
# 111 "/usr/include/ctype.h" 3
extern "C" int isupper(int) throw();
# 112 "/usr/include/ctype.h" 3
extern "C" int isxdigit(int) throw();
# 116 "/usr/include/ctype.h" 3
extern "C" int tolower(int ) throw();
# 119 "/usr/include/ctype.h" 3
extern "C" int toupper(int ) throw();
# 128 "/usr/include/ctype.h" 3
extern "C" int isblank(int) throw();
# 135 "/usr/include/ctype.h" 3
extern "C" int isctype(int , int ) throw();
# 142 "/usr/include/ctype.h" 3
extern "C" int isascii(int ) throw();
# 146 "/usr/include/ctype.h" 3
extern "C" int toascii(int ) throw();
# 150 "/usr/include/ctype.h" 3
extern "C" int _toupper(int) throw();
# 151 "/usr/include/ctype.h" 3
extern "C" int _tolower(int) throw();
# 247 "/usr/include/ctype.h" 3
extern "C" int isalnum_l(int, __locale_t) throw();
# 248 "/usr/include/ctype.h" 3
extern "C" int isalpha_l(int, __locale_t) throw();
# 249 "/usr/include/ctype.h" 3
extern "C" int iscntrl_l(int, __locale_t) throw();
# 250 "/usr/include/ctype.h" 3
extern "C" int isdigit_l(int, __locale_t) throw();
# 251 "/usr/include/ctype.h" 3
extern "C" int islower_l(int, __locale_t) throw();
# 252 "/usr/include/ctype.h" 3
extern "C" int isgraph_l(int, __locale_t) throw();
# 253 "/usr/include/ctype.h" 3
extern "C" int isprint_l(int, __locale_t) throw();
# 254 "/usr/include/ctype.h" 3
extern "C" int ispunct_l(int, __locale_t) throw();
# 255 "/usr/include/ctype.h" 3
extern "C" int isspace_l(int, __locale_t) throw();
# 256 "/usr/include/ctype.h" 3
extern "C" int isupper_l(int, __locale_t) throw();
# 257 "/usr/include/ctype.h" 3
extern "C" int isxdigit_l(int, __locale_t) throw();
# 259 "/usr/include/ctype.h" 3
extern "C" int isblank_l(int, __locale_t) throw();
# 263 "/usr/include/ctype.h" 3
extern "C" int __tolower_l(int , __locale_t ) throw();
# 264 "/usr/include/ctype.h" 3
extern "C" int tolower_l(int , __locale_t ) throw();
# 267 "/usr/include/ctype.h" 3
extern "C" int __toupper_l(int , __locale_t ) throw();
# 268 "/usr/include/ctype.h" 3
extern "C" int toupper_l(int , __locale_t ) throw();
# 64 "/usr/include/c++/4.4/cctype" 3
namespace std __attribute((__visibility__("default"))) {
# 66 "/usr/include/c++/4.4/cctype" 3
using ::isalnum;
# 67 "/usr/include/c++/4.4/cctype" 3
using ::isalpha;
# 68 "/usr/include/c++/4.4/cctype" 3
using ::iscntrl;
# 69 "/usr/include/c++/4.4/cctype" 3
using ::isdigit;
# 70 "/usr/include/c++/4.4/cctype" 3
using ::isgraph;
# 71 "/usr/include/c++/4.4/cctype" 3
using ::islower;
# 72 "/usr/include/c++/4.4/cctype" 3
using ::isprint;
# 73 "/usr/include/c++/4.4/cctype" 3
using ::ispunct;
# 74 "/usr/include/c++/4.4/cctype" 3
using ::isspace;
# 75 "/usr/include/c++/4.4/cctype" 3
using ::isupper;
# 76 "/usr/include/c++/4.4/cctype" 3
using ::isxdigit;
# 77 "/usr/include/c++/4.4/cctype" 3
using ::tolower;
# 78 "/usr/include/c++/4.4/cctype" 3
using ::toupper;
# 80 "/usr/include/c++/4.4/cctype" 3
}
# 46 "/usr/include/c++/4.4/bits/localefwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 49 "/usr/include/c++/4.4/bits/localefwd.h" 3
class locale;
# 51 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _Facet >
    bool
    has_facet ( const locale & ) throw ( );
# 55 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _Facet >
    const _Facet &
    use_facet ( const locale & );
# 60 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isspace ( _CharT, const locale & );
# 64 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isprint ( _CharT, const locale & );
# 68 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    iscntrl ( _CharT, const locale & );
# 72 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isupper ( _CharT, const locale & );
# 76 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    islower ( _CharT, const locale & );
# 80 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isalpha ( _CharT, const locale & );
# 84 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isdigit ( _CharT, const locale & );
# 88 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    ispunct ( _CharT, const locale & );
# 92 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isxdigit ( _CharT, const locale & );
# 96 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isalnum ( _CharT, const locale & );
# 100 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isgraph ( _CharT, const locale & );
# 104 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    _CharT
    toupper ( _CharT, const locale & );
# 108 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    _CharT
    tolower ( _CharT, const locale & );
# 113 "/usr/include/c++/4.4/bits/localefwd.h" 3
struct ctype_base;
# 114 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    class ctype;
# 116 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class ctype< char> ;
# 118 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class ctype< wchar_t> ;
# 120 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    class ctype_byname;
# 124 "/usr/include/c++/4.4/bits/localefwd.h" 3
class codecvt_base;
# 125 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class codecvt;
# 127 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class codecvt< char, char, __mbstate_t> ;
# 129 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class codecvt< wchar_t, char, __mbstate_t> ;
# 131 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class codecvt_byname;
# 136 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT, typename _InIter = istreambuf_iterator < _CharT > >
    class num_get;
# 138 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT, typename _OutIter = ostreambuf_iterator < _CharT > >
    class num_put;
# 141 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT > class numpunct;
# 142 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT > class numpunct_byname;
# 145 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    class collate;
# 147 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT > class
    collate_byname;
# 151 "/usr/include/c++/4.4/bits/localefwd.h" 3
class time_base;
# 152 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class time_get;
# 154 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class time_get_byname;
# 156 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class time_put;
# 158 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class time_put_byname;
# 162 "/usr/include/c++/4.4/bits/localefwd.h" 3
class money_base;
# 164 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class money_get;
# 166 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class money_put;
# 169 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct;
# 171 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct_byname;
# 175 "/usr/include/c++/4.4/bits/localefwd.h" 3
class messages_base;
# 176 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT> class messages;
# 178 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT> class messages_byname;
# 181 "/usr/include/c++/4.4/bits/localefwd.h" 3
}
# 71 "/usr/include/bits/sched.h" 3
struct sched_param {
# 73 "/usr/include/bits/sched.h" 3
int __sched_priority;
# 74 "/usr/include/bits/sched.h" 3
};
# 80 "/usr/include/bits/sched.h" 3
extern "C" int clone(int (* )(void * ), void * , int , void * , ...) throw();
# 84 "/usr/include/bits/sched.h" 3
extern "C" int unshare(int ) throw();
# 87 "/usr/include/bits/sched.h" 3
extern "C" int sched_getcpu() throw();
# 98 "/usr/include/bits/sched.h" 3
struct __sched_param {
# 100 "/usr/include/bits/sched.h" 3
int __sched_priority;
# 101 "/usr/include/bits/sched.h" 3
};
# 113 "/usr/include/bits/sched.h" 3
typedef unsigned long __cpu_mask;
# 123 "/usr/include/bits/sched.h" 3
typedef
# 121 "/usr/include/bits/sched.h" 3
struct {
# 122 "/usr/include/bits/sched.h" 3
__cpu_mask __bits[(1024) / ((8) * sizeof(__cpu_mask))];
# 123 "/usr/include/bits/sched.h" 3
} cpu_set_t;
# 198 "/usr/include/bits/sched.h" 3
extern "C" int __sched_cpucount(size_t , const cpu_set_t * ) throw();
# 200 "/usr/include/bits/sched.h" 3
extern "C" cpu_set_t *__sched_cpualloc(size_t ) throw();
# 201 "/usr/include/bits/sched.h" 3
extern "C" void __sched_cpufree(cpu_set_t * ) throw();
# 43 "/usr/include/sched.h" 3
extern "C" int sched_setparam(__pid_t , const sched_param * ) throw();
# 47 "/usr/include/sched.h" 3
extern "C" int sched_getparam(__pid_t , sched_param * ) throw();
# 50 "/usr/include/sched.h" 3
extern "C" int sched_setscheduler(__pid_t , int , const sched_param * ) throw();
# 54 "/usr/include/sched.h" 3
extern "C" int sched_getscheduler(__pid_t ) throw();
# 57 "/usr/include/sched.h" 3
extern "C" int sched_yield() throw();
# 60 "/usr/include/sched.h" 3
extern "C" int sched_get_priority_max(int ) throw();
# 63 "/usr/include/sched.h" 3
extern "C" int sched_get_priority_min(int ) throw();
# 66 "/usr/include/sched.h" 3
extern "C" int sched_rr_get_interval(__pid_t , timespec * ) throw();
# 110 "/usr/include/sched.h" 3
extern "C" int sched_setaffinity(__pid_t , size_t , const cpu_set_t * ) throw();
# 114 "/usr/include/sched.h" 3
extern "C" int sched_getaffinity(__pid_t , size_t , cpu_set_t * ) throw();
# 32 "/usr/include/bits/setjmp.h" 3
typedef long __jmp_buf[8];
# 37 "/usr/include/pthread.h" 3
enum {
# 38 "/usr/include/pthread.h" 3
PTHREAD_CREATE_JOINABLE,
# 40 "/usr/include/pthread.h" 3
PTHREAD_CREATE_DETACHED
# 42 "/usr/include/pthread.h" 3
};
# 47 "/usr/include/pthread.h" 3
enum {
# 48 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_TIMED_NP,
# 49 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE_NP,
# 50 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK_NP,
# 51 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ADAPTIVE_NP,
# 54 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_NORMAL = 0,
# 55 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE,
# 56 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK,
# 57 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_DEFAULT = 0,
# 61 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_FAST_NP = 0
# 63 "/usr/include/pthread.h" 3
};
# 69 "/usr/include/pthread.h" 3
enum {
# 70 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED,
# 71 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED_NP = 0,
# 72 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST,
# 73 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST_NP = 1
# 74 "/usr/include/pthread.h" 3
};
# 81 "/usr/include/pthread.h" 3
enum {
# 82 "/usr/include/pthread.h" 3
PTHREAD_PRIO_NONE,
# 83 "/usr/include/pthread.h" 3
PTHREAD_PRIO_INHERIT,
# 84 "/usr/include/pthread.h" 3
PTHREAD_PRIO_PROTECT
# 85 "/usr/include/pthread.h" 3
};
# 118 "/usr/include/pthread.h" 3
enum {
# 119 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_READER_NP,
# 120 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NP,
# 121 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
# 122 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_DEFAULT_NP = 0
# 123 "/usr/include/pthread.h" 3
};
# 150 "/usr/include/pthread.h" 3
enum {
# 151 "/usr/include/pthread.h" 3
PTHREAD_INHERIT_SCHED,
# 153 "/usr/include/pthread.h" 3
PTHREAD_EXPLICIT_SCHED
# 155 "/usr/include/pthread.h" 3
};
# 160 "/usr/include/pthread.h" 3
enum {
# 161 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_SYSTEM,
# 163 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_PROCESS
# 165 "/usr/include/pthread.h" 3
};
# 170 "/usr/include/pthread.h" 3
enum {
# 171 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_PRIVATE,
# 173 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_SHARED
# 175 "/usr/include/pthread.h" 3
};
# 184 "/usr/include/pthread.h" 3
struct _pthread_cleanup_buffer {
# 186 "/usr/include/pthread.h" 3
void (*__routine)(void *);
# 187 "/usr/include/pthread.h" 3
void *__arg;
# 188 "/usr/include/pthread.h" 3
int __canceltype;
# 189 "/usr/include/pthread.h" 3
_pthread_cleanup_buffer *__prev;
# 190 "/usr/include/pthread.h" 3
};
# 194 "/usr/include/pthread.h" 3
enum {
# 195 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ENABLE,
# 197 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DISABLE
# 199 "/usr/include/pthread.h" 3
};
# 201 "/usr/include/pthread.h" 3
enum {
# 202 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DEFERRED,
# 204 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ASYNCHRONOUS
# 206 "/usr/include/pthread.h" 3
};
# 227 "/usr/include/pthread.h" 3
extern "C" int pthread_create(pthread_t *__restrict__ , const pthread_attr_t *__restrict__ , void *(* )(void *), void *__restrict__ ) throw()
# 230 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 236 "/usr/include/pthread.h" 3
extern "C" void pthread_exit(void * ) __attribute((__noreturn__));
# 244 "/usr/include/pthread.h" 3
extern "C" int pthread_join(pthread_t , void ** );
# 249 "/usr/include/pthread.h" 3
extern "C" int pthread_tryjoin_np(pthread_t , void ** ) throw();
# 257 "/usr/include/pthread.h" 3
extern "C" int pthread_timedjoin_np(pthread_t , void ** , const timespec * );
# 265 "/usr/include/pthread.h" 3
extern "C" int pthread_detach(pthread_t ) throw();
# 269 "/usr/include/pthread.h" 3
extern "C" pthread_t pthread_self() throw() __attribute((const));
# 272 "/usr/include/pthread.h" 3
extern "C" int pthread_equal(pthread_t , pthread_t ) throw();
# 280 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_init(pthread_attr_t * ) throw() __attribute((__nonnull__(1)));
# 283 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_destroy(pthread_attr_t * ) throw()
# 284 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 287 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getdetachstate(const pthread_attr_t * , int * ) throw()
# 289 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 292 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setdetachstate(pthread_attr_t * , int ) throw()
# 294 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 298 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getguardsize(const pthread_attr_t * , size_t * ) throw()
# 300 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 303 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setguardsize(pthread_attr_t * , size_t ) throw()
# 305 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 309 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getschedparam(const pthread_attr_t *__restrict__ , sched_param *__restrict__ ) throw()
# 312 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 315 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setschedparam(pthread_attr_t *__restrict__ , const sched_param *__restrict__ ) throw()
# 317 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 320 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getschedpolicy(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 322 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 325 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setschedpolicy(pthread_attr_t * , int ) throw()
# 326 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 329 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getinheritsched(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 331 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 334 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setinheritsched(pthread_attr_t * , int ) throw()
# 336 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 340 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getscope(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 342 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 345 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setscope(pthread_attr_t * , int ) throw()
# 346 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 349 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstackaddr(const pthread_attr_t *__restrict__ , void **__restrict__ ) throw()
# 351 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__deprecated__));
# 357 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstackaddr(pthread_attr_t * , void * ) throw()
# 359 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1))) __attribute((__deprecated__));
# 362 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstacksize(const pthread_attr_t *__restrict__ , size_t *__restrict__ ) throw()
# 364 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 369 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstacksize(pthread_attr_t * , size_t ) throw()
# 371 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 375 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstack(const pthread_attr_t *__restrict__ , void **__restrict__ , size_t *__restrict__ ) throw()
# 378 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 383 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstack(pthread_attr_t * , void * , size_t ) throw()
# 384 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 390 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setaffinity_np(pthread_attr_t * , size_t , const cpu_set_t * ) throw()
# 393 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 397 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getaffinity_np(const pthread_attr_t * , size_t , cpu_set_t * ) throw()
# 400 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 406 "/usr/include/pthread.h" 3
extern "C" int pthread_getattr_np(pthread_t , pthread_attr_t * ) throw()
# 407 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 415 "/usr/include/pthread.h" 3
extern "C" int pthread_setschedparam(pthread_t , int , const sched_param * ) throw()
# 417 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 420 "/usr/include/pthread.h" 3
extern "C" int pthread_getschedparam(pthread_t , int *__restrict__ , sched_param *__restrict__ ) throw()
# 423 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2, 3)));
# 426 "/usr/include/pthread.h" 3
extern "C" int pthread_setschedprio(pthread_t , int ) throw();
# 432 "/usr/include/pthread.h" 3
extern "C" int pthread_getconcurrency() throw();
# 435 "/usr/include/pthread.h" 3
extern "C" int pthread_setconcurrency(int ) throw();
# 443 "/usr/include/pthread.h" 3
extern "C" int pthread_yield() throw();
# 448 "/usr/include/pthread.h" 3
extern "C" int pthread_setaffinity_np(pthread_t , size_t , const cpu_set_t * ) throw()
# 450 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 453 "/usr/include/pthread.h" 3
extern "C" int pthread_getaffinity_np(pthread_t , size_t , cpu_set_t * ) throw()
# 455 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 468 "/usr/include/pthread.h" 3
extern "C" int pthread_once(pthread_once_t * , void (* )(void))
# 469 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 480 "/usr/include/pthread.h" 3
extern "C" int pthread_setcancelstate(int , int * );
# 484 "/usr/include/pthread.h" 3
extern "C" int pthread_setcanceltype(int , int * );
# 487 "/usr/include/pthread.h" 3
extern "C" int pthread_cancel(pthread_t );
# 492 "/usr/include/pthread.h" 3
extern "C" void pthread_testcancel();
# 505 "/usr/include/pthread.h" 3
extern "C" { typedef
# 498 "/usr/include/pthread.h" 3
struct {
# 500 "/usr/include/pthread.h" 3
struct {
# 501 "/usr/include/pthread.h" 3
__jmp_buf __cancel_jmp_buf;
# 502 "/usr/include/pthread.h" 3
int __mask_was_saved;
# 503 "/usr/include/pthread.h" 3
} __cancel_jmp_buf[1];
# 504 "/usr/include/pthread.h" 3
void *__pad[4];
# 505 "/usr/include/pthread.h" 3
} __pthread_unwind_buf_t __attribute((__aligned__)); }
# 514 "/usr/include/pthread.h" 3
extern "C" { struct __pthread_cleanup_frame {
# 516 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 517 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 518 "/usr/include/pthread.h" 3
int __do_it;
# 519 "/usr/include/pthread.h" 3
int __cancel_type;
# 520 "/usr/include/pthread.h" 3
}; }
# 525 "/usr/include/pthread.h" 3
extern "C" { class __pthread_cleanup_class {
# 527 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 528 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 529 "/usr/include/pthread.h" 3
int __do_it;
# 530 "/usr/include/pthread.h" 3
int __cancel_type;
# 533 "/usr/include/pthread.h" 3
public: __pthread_cleanup_class(void (*__fct)(void *), void *__arg) : __cancel_routine(__fct), __cancel_arg(__arg), __do_it(1)
# 534 "/usr/include/pthread.h" 3
{ }
# 535 "/usr/include/pthread.h" 3
~__pthread_cleanup_class() { if (__do_it) { (__cancel_routine)(__cancel_arg); } }
# 536 "/usr/include/pthread.h" 3
void __setdoit(int __newval) { (__do_it) = __newval; }
# 537 "/usr/include/pthread.h" 3
void __defer() { pthread_setcanceltype(PTHREAD_CANCEL_DEFERRED, &(__cancel_type));
# 538 "/usr/include/pthread.h" 3
}
# 539 "/usr/include/pthread.h" 3
void __restore() const { pthread_setcanceltype(__cancel_type, 0); }
# 540 "/usr/include/pthread.h" 3
}; }
# 716 "/usr/include/pthread.h" 3
struct __jmp_buf_tag;
# 717 "/usr/include/pthread.h" 3
extern "C" int __sigsetjmp(__jmp_buf_tag * , int ) throw();
# 723 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_init(pthread_mutex_t * , const pthread_mutexattr_t * ) throw()
# 725 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 728 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_destroy(pthread_mutex_t * ) throw()
# 729 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 732 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_trylock(pthread_mutex_t * ) throw()
# 733 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 736 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_lock(pthread_mutex_t * ) throw()
# 737 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 741 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_timedlock(pthread_mutex_t *__restrict__ , const timespec *__restrict__ ) throw()
# 743 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 747 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_unlock(pthread_mutex_t * ) throw()
# 748 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 753 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_getprioceiling(const pthread_mutex_t *__restrict__ , int *__restrict__ ) throw()
# 756 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 760 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_setprioceiling(pthread_mutex_t *__restrict__ , int , int *__restrict__ ) throw()
# 763 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 769 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_consistent_np(pthread_mutex_t * ) throw()
# 770 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 772 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_consistent_np(pthread_mutex_t * ) throw()
# 773 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 782 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_init(pthread_mutexattr_t * ) throw()
# 783 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 786 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_destroy(pthread_mutexattr_t * ) throw()
# 787 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 790 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getpshared(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 793 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 796 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setpshared(pthread_mutexattr_t * , int ) throw()
# 798 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 802 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_gettype(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 804 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 809 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_settype(pthread_mutexattr_t * , int ) throw()
# 810 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 813 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 816 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 820 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setprotocol(pthread_mutexattr_t * , int ) throw()
# 822 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 825 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 828 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 831 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setprioceiling(pthread_mutexattr_t * , int ) throw()
# 833 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 838 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getrobust(const pthread_mutexattr_t * , int * ) throw()
# 840 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 842 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t * , int * ) throw()
# 844 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 848 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setrobust(pthread_mutexattr_t * , int ) throw()
# 850 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 852 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setrobust_np(pthread_mutexattr_t * , int ) throw()
# 854 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 864 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_init(pthread_rwlock_t *__restrict__ , const pthread_rwlockattr_t *__restrict__ ) throw()
# 866 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 869 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_destroy(pthread_rwlock_t * ) throw()
# 870 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 873 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_rdlock(pthread_rwlock_t * ) throw()
# 874 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 877 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_tryrdlock(pthread_rwlock_t * ) throw()
# 878 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 882 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_timedrdlock(pthread_rwlock_t *__restrict__ , const timespec *__restrict__ ) throw()
# 884 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 888 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_wrlock(pthread_rwlock_t * ) throw()
# 889 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 892 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_trywrlock(pthread_rwlock_t * ) throw()
# 893 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 897 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_timedwrlock(pthread_rwlock_t *__restrict__ , const timespec *__restrict__ ) throw()
# 899 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 903 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_unlock(pthread_rwlock_t * ) throw()
# 904 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 910 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_init(pthread_rwlockattr_t * ) throw()
# 911 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 914 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_destroy(pthread_rwlockattr_t * ) throw()
# 915 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 918 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *__restrict__ , int *__restrict__ ) throw()
# 921 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 924 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_setpshared(pthread_rwlockattr_t * , int ) throw()
# 926 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 929 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *__restrict__ , int *__restrict__ ) throw()
# 932 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 935 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t * , int ) throw()
# 936 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 944 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_init(pthread_cond_t *__restrict__ , const pthread_condattr_t *__restrict__ ) throw()
# 946 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 949 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_destroy(pthread_cond_t * ) throw()
# 950 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 953 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_signal(pthread_cond_t * ) throw()
# 954 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 957 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_broadcast(pthread_cond_t * ) throw()
# 958 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 965 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_wait(pthread_cond_t *__restrict__ , pthread_mutex_t *__restrict__ )
# 967 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 976 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_timedwait(pthread_cond_t *__restrict__ , pthread_mutex_t *__restrict__ , const timespec *__restrict__ )
# 979 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 984 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_init(pthread_condattr_t * ) throw()
# 985 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 988 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_destroy(pthread_condattr_t * ) throw()
# 989 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 992 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_getpshared(const pthread_condattr_t *__restrict__ , int *__restrict__ ) throw()
# 995 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 998 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_setpshared(pthread_condattr_t * , int ) throw()
# 999 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1003 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_getclock(const pthread_condattr_t *__restrict__ , __clockid_t *__restrict__ ) throw()
# 1006 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1009 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_setclock(pthread_condattr_t * , __clockid_t ) throw()
# 1011 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1020 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_init(pthread_spinlock_t * , int ) throw()
# 1021 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1024 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_destroy(pthread_spinlock_t * ) throw()
# 1025 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1028 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_lock(pthread_spinlock_t * ) throw()
# 1029 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1032 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_trylock(pthread_spinlock_t * ) throw()
# 1033 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1036 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_unlock(pthread_spinlock_t * ) throw()
# 1037 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1044 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_init(pthread_barrier_t *__restrict__ , const pthread_barrierattr_t *__restrict__ , unsigned ) throw()
# 1047 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1050 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_destroy(pthread_barrier_t * ) throw()
# 1051 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1054 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_wait(pthread_barrier_t * ) throw()
# 1055 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1059 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_init(pthread_barrierattr_t * ) throw()
# 1060 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1063 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_destroy(pthread_barrierattr_t * ) throw()
# 1064 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1067 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_getpshared(const pthread_barrierattr_t *__restrict__ , int *__restrict__ ) throw()
# 1070 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1073 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_setpshared(pthread_barrierattr_t * , int ) throw()
# 1075 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1087 "/usr/include/pthread.h" 3
extern "C" int pthread_key_create(pthread_key_t * , void (* )(void *)) throw()
# 1089 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1092 "/usr/include/pthread.h" 3
extern "C" int pthread_key_delete(pthread_key_t ) throw();
# 1095 "/usr/include/pthread.h" 3
extern "C" void *pthread_getspecific(pthread_key_t ) throw();
# 1098 "/usr/include/pthread.h" 3
extern "C" int pthread_setspecific(pthread_key_t , const void * ) throw();
# 1104 "/usr/include/pthread.h" 3
extern "C" int pthread_getcpuclockid(pthread_t , __clockid_t * ) throw()
# 1106 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 1121 "/usr/include/pthread.h" 3
extern "C" int pthread_atfork(void (* )(void), void (* )(void), void (* )(void)) throw();
# 268 "/usr/include/unistd.h" 3
extern "C" { typedef __intptr_t intptr_t; }
# 275 "/usr/include/unistd.h" 3
extern "C" { typedef __socklen_t socklen_t; }
# 288 "/usr/include/unistd.h" 3
extern "C" int access(const char * , int ) throw() __attribute((__nonnull__(1)));
# 293 "/usr/include/unistd.h" 3
extern "C" int euidaccess(const char * , int ) throw()
# 294 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 297 "/usr/include/unistd.h" 3
extern "C" int eaccess(const char * , int ) throw()
# 298 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 305 "/usr/include/unistd.h" 3
extern "C" int faccessat(int , const char * , int , int ) throw()
# 306 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 331 "/usr/include/unistd.h" 3
extern "C" __off_t lseek(int , __off_t , int ) throw();
# 342 "/usr/include/unistd.h" 3
extern "C" __off64_t lseek64(int , __off64_t , int ) throw();
# 350 "/usr/include/unistd.h" 3
extern "C" int close(int );
# 357 "/usr/include/unistd.h" 3
extern "C" ssize_t read(int , void * , size_t );
# 363 "/usr/include/unistd.h" 3
extern "C" ssize_t write(int , const void * , size_t );
# 373 "/usr/include/unistd.h" 3
extern "C" ssize_t pread(int , void * , size_t , __off_t );
# 381 "/usr/include/unistd.h" 3
extern "C" ssize_t pwrite(int , const void * , size_t , __off_t );
# 401 "/usr/include/unistd.h" 3
extern "C" ssize_t pread64(int , void * , size_t , __off64_t );
# 405 "/usr/include/unistd.h" 3
extern "C" ssize_t pwrite64(int , const void * , size_t , __off64_t );
# 414 "/usr/include/unistd.h" 3
extern "C" int pipe(int [2]) throw();
# 419 "/usr/include/unistd.h" 3
extern "C" int pipe2(int [2], int ) throw();
# 429 "/usr/include/unistd.h" 3
extern "C" unsigned alarm(unsigned ) throw();
# 441 "/usr/include/unistd.h" 3
extern "C" unsigned sleep(unsigned );
# 448 "/usr/include/unistd.h" 3
extern "C" __useconds_t ualarm(__useconds_t , __useconds_t ) throw();
# 456 "/usr/include/unistd.h" 3
extern "C" int usleep(__useconds_t );
# 465 "/usr/include/unistd.h" 3
extern "C" int pause();
# 469 "/usr/include/unistd.h" 3
extern "C" int chown(const char * , __uid_t , __gid_t ) throw()
# 470 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 474 "/usr/include/unistd.h" 3
extern "C" int fchown(int , __uid_t , __gid_t ) throw();
# 479 "/usr/include/unistd.h" 3
extern "C" int lchown(const char * , __uid_t , __gid_t ) throw()
# 480 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 487 "/usr/include/unistd.h" 3
extern "C" int fchownat(int , const char * , __uid_t , __gid_t , int ) throw()
# 489 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 493 "/usr/include/unistd.h" 3
extern "C" int chdir(const char * ) throw() __attribute((__nonnull__(1)));
# 497 "/usr/include/unistd.h" 3
extern "C" int fchdir(int ) throw();
# 507 "/usr/include/unistd.h" 3
extern "C" char *getcwd(char * , size_t ) throw();
# 513 "/usr/include/unistd.h" 3
extern "C" char *get_current_dir_name() throw();
# 520 "/usr/include/unistd.h" 3
extern "C" char *getwd(char * ) throw()
# 521 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__deprecated__));
# 526 "/usr/include/unistd.h" 3
extern "C" int dup(int ) throw();
# 529 "/usr/include/unistd.h" 3
extern "C" int dup2(int , int ) throw();
# 534 "/usr/include/unistd.h" 3
extern "C" int dup3(int , int , int ) throw();
# 538 "/usr/include/unistd.h" 3
extern "C" { extern char **__environ; }
# 540 "/usr/include/unistd.h" 3
extern "C" { extern char **environ; }
# 546 "/usr/include/unistd.h" 3
extern "C" int execve(const char * , char *const [], char *const []) throw()
# 547 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 552 "/usr/include/unistd.h" 3
extern "C" int fexecve(int , char *const [], char *const []) throw();
# 558 "/usr/include/unistd.h" 3
extern "C" int execv(const char * , char *const []) throw()
# 559 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 563 "/usr/include/unistd.h" 3
extern "C" int execle(const char * , const char * , ...) throw()
# 564 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 568 "/usr/include/unistd.h" 3
extern "C" int execl(const char * , const char * , ...) throw()
# 569 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 573 "/usr/include/unistd.h" 3
extern "C" int execvp(const char * , char *const []) throw()
# 574 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 579 "/usr/include/unistd.h" 3
extern "C" int execlp(const char * , const char * , ...) throw()
# 580 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 585 "/usr/include/unistd.h" 3
extern "C" int execvpe(const char * , char *const [], char *const []) throw()
# 587 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 593 "/usr/include/unistd.h" 3
extern "C" int nice(int ) throw();
# 598 "/usr/include/unistd.h" 3
extern "C" void _exit(int ) __attribute((__noreturn__));
# 27 "/usr/include/bits/confname.h" 3
enum {
# 28 "/usr/include/bits/confname.h" 3
_PC_LINK_MAX,
# 30 "/usr/include/bits/confname.h" 3
_PC_MAX_CANON,
# 32 "/usr/include/bits/confname.h" 3
_PC_MAX_INPUT,
# 34 "/usr/include/bits/confname.h" 3
_PC_NAME_MAX,
# 36 "/usr/include/bits/confname.h" 3
_PC_PATH_MAX,
# 38 "/usr/include/bits/confname.h" 3
_PC_PIPE_BUF,
# 40 "/usr/include/bits/confname.h" 3
_PC_CHOWN_RESTRICTED,
# 42 "/usr/include/bits/confname.h" 3
_PC_NO_TRUNC,
# 44 "/usr/include/bits/confname.h" 3
_PC_VDISABLE,
# 46 "/usr/include/bits/confname.h" 3
_PC_SYNC_IO,
# 48 "/usr/include/bits/confname.h" 3
_PC_ASYNC_IO,
# 50 "/usr/include/bits/confname.h" 3
_PC_PRIO_IO,
# 52 "/usr/include/bits/confname.h" 3
_PC_SOCK_MAXBUF,
# 54 "/usr/include/bits/confname.h" 3
_PC_FILESIZEBITS,
# 56 "/usr/include/bits/confname.h" 3
_PC_REC_INCR_XFER_SIZE,
# 58 "/usr/include/bits/confname.h" 3
_PC_REC_MAX_XFER_SIZE,
# 60 "/usr/include/bits/confname.h" 3
_PC_REC_MIN_XFER_SIZE,
# 62 "/usr/include/bits/confname.h" 3
_PC_REC_XFER_ALIGN,
# 64 "/usr/include/bits/confname.h" 3
_PC_ALLOC_SIZE_MIN,
# 66 "/usr/include/bits/confname.h" 3
_PC_SYMLINK_MAX,
# 68 "/usr/include/bits/confname.h" 3
_PC_2_SYMLINKS
# 70 "/usr/include/bits/confname.h" 3
};
# 74 "/usr/include/bits/confname.h" 3
enum {
# 75 "/usr/include/bits/confname.h" 3
_SC_ARG_MAX,
# 77 "/usr/include/bits/confname.h" 3
_SC_CHILD_MAX,
# 79 "/usr/include/bits/confname.h" 3
_SC_CLK_TCK,
# 81 "/usr/include/bits/confname.h" 3
_SC_NGROUPS_MAX,
# 83 "/usr/include/bits/confname.h" 3
_SC_OPEN_MAX,
# 85 "/usr/include/bits/confname.h" 3
_SC_STREAM_MAX,
# 87 "/usr/include/bits/confname.h" 3
_SC_TZNAME_MAX,
# 89 "/usr/include/bits/confname.h" 3
_SC_JOB_CONTROL,
# 91 "/usr/include/bits/confname.h" 3
_SC_SAVED_IDS,
# 93 "/usr/include/bits/confname.h" 3
_SC_REALTIME_SIGNALS,
# 95 "/usr/include/bits/confname.h" 3
_SC_PRIORITY_SCHEDULING,
# 97 "/usr/include/bits/confname.h" 3
_SC_TIMERS,
# 99 "/usr/include/bits/confname.h" 3
_SC_ASYNCHRONOUS_IO,
# 101 "/usr/include/bits/confname.h" 3
_SC_PRIORITIZED_IO,
# 103 "/usr/include/bits/confname.h" 3
_SC_SYNCHRONIZED_IO,
# 105 "/usr/include/bits/confname.h" 3
_SC_FSYNC,
# 107 "/usr/include/bits/confname.h" 3
_SC_MAPPED_FILES,
# 109 "/usr/include/bits/confname.h" 3
_SC_MEMLOCK,
# 111 "/usr/include/bits/confname.h" 3
_SC_MEMLOCK_RANGE,
# 113 "/usr/include/bits/confname.h" 3
_SC_MEMORY_PROTECTION,
# 115 "/usr/include/bits/confname.h" 3
_SC_MESSAGE_PASSING,
# 117 "/usr/include/bits/confname.h" 3
_SC_SEMAPHORES,
# 119 "/usr/include/bits/confname.h" 3
_SC_SHARED_MEMORY_OBJECTS,
# 121 "/usr/include/bits/confname.h" 3
_SC_AIO_LISTIO_MAX,
# 123 "/usr/include/bits/confname.h" 3
_SC_AIO_MAX,
# 125 "/usr/include/bits/confname.h" 3
_SC_AIO_PRIO_DELTA_MAX,
# 127 "/usr/include/bits/confname.h" 3
_SC_DELAYTIMER_MAX,
# 129 "/usr/include/bits/confname.h" 3
_SC_MQ_OPEN_MAX,
# 131 "/usr/include/bits/confname.h" 3
_SC_MQ_PRIO_MAX,
# 133 "/usr/include/bits/confname.h" 3
_SC_VERSION,
# 135 "/usr/include/bits/confname.h" 3
_SC_PAGESIZE,
# 138 "/usr/include/bits/confname.h" 3
_SC_RTSIG_MAX,
# 140 "/usr/include/bits/confname.h" 3
_SC_SEM_NSEMS_MAX,
# 142 "/usr/include/bits/confname.h" 3
_SC_SEM_VALUE_MAX,
# 144 "/usr/include/bits/confname.h" 3
_SC_SIGQUEUE_MAX,
# 146 "/usr/include/bits/confname.h" 3
_SC_TIMER_MAX,
# 151 "/usr/include/bits/confname.h" 3
_SC_BC_BASE_MAX,
# 153 "/usr/include/bits/confname.h" 3
_SC_BC_DIM_MAX,
# 155 "/usr/include/bits/confname.h" 3
_SC_BC_SCALE_MAX,
# 157 "/usr/include/bits/confname.h" 3
_SC_BC_STRING_MAX,
# 159 "/usr/include/bits/confname.h" 3
_SC_COLL_WEIGHTS_MAX,
# 161 "/usr/include/bits/confname.h" 3
_SC_EQUIV_CLASS_MAX,
# 163 "/usr/include/bits/confname.h" 3
_SC_EXPR_NEST_MAX,
# 165 "/usr/include/bits/confname.h" 3
_SC_LINE_MAX,
# 167 "/usr/include/bits/confname.h" 3
_SC_RE_DUP_MAX,
# 169 "/usr/include/bits/confname.h" 3
_SC_CHARCLASS_NAME_MAX,
# 172 "/usr/include/bits/confname.h" 3
_SC_2_VERSION,
# 174 "/usr/include/bits/confname.h" 3
_SC_2_C_BIND,
# 176 "/usr/include/bits/confname.h" 3
_SC_2_C_DEV,
# 178 "/usr/include/bits/confname.h" 3
_SC_2_FORT_DEV,
# 180 "/usr/include/bits/confname.h" 3
_SC_2_FORT_RUN,
# 182 "/usr/include/bits/confname.h" 3
_SC_2_SW_DEV,
# 184 "/usr/include/bits/confname.h" 3
_SC_2_LOCALEDEF,
# 187 "/usr/include/bits/confname.h" 3
_SC_PII,
# 189 "/usr/include/bits/confname.h" 3
_SC_PII_XTI,
# 191 "/usr/include/bits/confname.h" 3
_SC_PII_SOCKET,
# 193 "/usr/include/bits/confname.h" 3
_SC_PII_INTERNET,
# 195 "/usr/include/bits/confname.h" 3
_SC_PII_OSI,
# 197 "/usr/include/bits/confname.h" 3
_SC_POLL,
# 199 "/usr/include/bits/confname.h" 3
_SC_SELECT,
# 201 "/usr/include/bits/confname.h" 3
_SC_UIO_MAXIOV,
# 203 "/usr/include/bits/confname.h" 3
_SC_IOV_MAX = 60,
# 205 "/usr/include/bits/confname.h" 3
_SC_PII_INTERNET_STREAM,
# 207 "/usr/include/bits/confname.h" 3
_SC_PII_INTERNET_DGRAM,
# 209 "/usr/include/bits/confname.h" 3
_SC_PII_OSI_COTS,
# 211 "/usr/include/bits/confname.h" 3
_SC_PII_OSI_CLTS,
# 213 "/usr/include/bits/confname.h" 3
_SC_PII_OSI_M,
# 215 "/usr/include/bits/confname.h" 3
_SC_T_IOV_MAX,
# 219 "/usr/include/bits/confname.h" 3
_SC_THREADS,
# 221 "/usr/include/bits/confname.h" 3
_SC_THREAD_SAFE_FUNCTIONS,
# 223 "/usr/include/bits/confname.h" 3
_SC_GETGR_R_SIZE_MAX,
# 225 "/usr/include/bits/confname.h" 3
_SC_GETPW_R_SIZE_MAX,
# 227 "/usr/include/bits/confname.h" 3
_SC_LOGIN_NAME_MAX,
# 229 "/usr/include/bits/confname.h" 3
_SC_TTY_NAME_MAX,
# 231 "/usr/include/bits/confname.h" 3
_SC_THREAD_DESTRUCTOR_ITERATIONS,
# 233 "/usr/include/bits/confname.h" 3
_SC_THREAD_KEYS_MAX,
# 235 "/usr/include/bits/confname.h" 3
_SC_THREAD_STACK_MIN,
# 237 "/usr/include/bits/confname.h" 3
_SC_THREAD_THREADS_MAX,
# 239 "/usr/include/bits/confname.h" 3
_SC_THREAD_ATTR_STACKADDR,
# 241 "/usr/include/bits/confname.h" 3
_SC_THREAD_ATTR_STACKSIZE,
# 243 "/usr/include/bits/confname.h" 3
_SC_THREAD_PRIORITY_SCHEDULING,
# 245 "/usr/include/bits/confname.h" 3
_SC_THREAD_PRIO_INHERIT,
# 247 "/usr/include/bits/confname.h" 3
_SC_THREAD_PRIO_PROTECT,
# 249 "/usr/include/bits/confname.h" 3
_SC_THREAD_PROCESS_SHARED,
# 252 "/usr/include/bits/confname.h" 3
_SC_NPROCESSORS_CONF,
# 254 "/usr/include/bits/confname.h" 3
_SC_NPROCESSORS_ONLN,
# 256 "/usr/include/bits/confname.h" 3
_SC_PHYS_PAGES,
# 258 "/usr/include/bits/confname.h" 3
_SC_AVPHYS_PAGES,
# 260 "/usr/include/bits/confname.h" 3
_SC_ATEXIT_MAX,
# 262 "/usr/include/bits/confname.h" 3
_SC_PASS_MAX,
# 265 "/usr/include/bits/confname.h" 3
_SC_XOPEN_VERSION,
# 267 "/usr/include/bits/confname.h" 3
_SC_XOPEN_XCU_VERSION,
# 269 "/usr/include/bits/confname.h" 3
_SC_XOPEN_UNIX,
# 271 "/usr/include/bits/confname.h" 3
_SC_XOPEN_CRYPT,
# 273 "/usr/include/bits/confname.h" 3
_SC_XOPEN_ENH_I18N,
# 275 "/usr/include/bits/confname.h" 3
_SC_XOPEN_SHM,
# 278 "/usr/include/bits/confname.h" 3
_SC_2_CHAR_TERM,
# 280 "/usr/include/bits/confname.h" 3
_SC_2_C_VERSION,
# 282 "/usr/include/bits/confname.h" 3
_SC_2_UPE,
# 285 "/usr/include/bits/confname.h" 3
_SC_XOPEN_XPG2,
# 287 "/usr/include/bits/confname.h" 3
_SC_XOPEN_XPG3,
# 289 "/usr/include/bits/confname.h" 3
_SC_XOPEN_XPG4,
# 292 "/usr/include/bits/confname.h" 3
_SC_CHAR_BIT,
# 294 "/usr/include/bits/confname.h" 3
_SC_CHAR_MAX,
# 296 "/usr/include/bits/confname.h" 3
_SC_CHAR_MIN,
# 298 "/usr/include/bits/confname.h" 3
_SC_INT_MAX,
# 300 "/usr/include/bits/confname.h" 3
_SC_INT_MIN,
# 302 "/usr/include/bits/confname.h" 3
_SC_LONG_BIT,
# 304 "/usr/include/bits/confname.h" 3
_SC_WORD_BIT,
# 306 "/usr/include/bits/confname.h" 3
_SC_MB_LEN_MAX,
# 308 "/usr/include/bits/confname.h" 3
_SC_NZERO,
# 310 "/usr/include/bits/confname.h" 3
_SC_SSIZE_MAX,
# 312 "/usr/include/bits/confname.h" 3
_SC_SCHAR_MAX,
# 314 "/usr/include/bits/confname.h" 3
_SC_SCHAR_MIN,
# 316 "/usr/include/bits/confname.h" 3
_SC_SHRT_MAX,
# 318 "/usr/include/bits/confname.h" 3
_SC_SHRT_MIN,
# 320 "/usr/include/bits/confname.h" 3
_SC_UCHAR_MAX,
# 322 "/usr/include/bits/confname.h" 3
_SC_UINT_MAX,
# 324 "/usr/include/bits/confname.h" 3
_SC_ULONG_MAX,
# 326 "/usr/include/bits/confname.h" 3
_SC_USHRT_MAX,
# 329 "/usr/include/bits/confname.h" 3
_SC_NL_ARGMAX,
# 331 "/usr/include/bits/confname.h" 3
_SC_NL_LANGMAX,
# 333 "/usr/include/bits/confname.h" 3
_SC_NL_MSGMAX,
# 335 "/usr/include/bits/confname.h" 3
_SC_NL_NMAX,
# 337 "/usr/include/bits/confname.h" 3
_SC_NL_SETMAX,
# 339 "/usr/include/bits/confname.h" 3
_SC_NL_TEXTMAX,
# 342 "/usr/include/bits/confname.h" 3
_SC_XBS5_ILP32_OFF32,
# 344 "/usr/include/bits/confname.h" 3
_SC_XBS5_ILP32_OFFBIG,
# 346 "/usr/include/bits/confname.h" 3
_SC_XBS5_LP64_OFF64,
# 348 "/usr/include/bits/confname.h" 3
_SC_XBS5_LPBIG_OFFBIG,
# 351 "/usr/include/bits/confname.h" 3
_SC_XOPEN_LEGACY,
# 353 "/usr/include/bits/confname.h" 3
_SC_XOPEN_REALTIME,
# 355 "/usr/include/bits/confname.h" 3
_SC_XOPEN_REALTIME_THREADS,
# 358 "/usr/include/bits/confname.h" 3
_SC_ADVISORY_INFO,
# 360 "/usr/include/bits/confname.h" 3
_SC_BARRIERS,
# 362 "/usr/include/bits/confname.h" 3
_SC_BASE,
# 364 "/usr/include/bits/confname.h" 3
_SC_C_LANG_SUPPORT,
# 366 "/usr/include/bits/confname.h" 3
_SC_C_LANG_SUPPORT_R,
# 368 "/usr/include/bits/confname.h" 3
_SC_CLOCK_SELECTION,
# 370 "/usr/include/bits/confname.h" 3
_SC_CPUTIME,
# 372 "/usr/include/bits/confname.h" 3
_SC_THREAD_CPUTIME,
# 374 "/usr/include/bits/confname.h" 3
_SC_DEVICE_IO,
# 376 "/usr/include/bits/confname.h" 3
_SC_DEVICE_SPECIFIC,
# 378 "/usr/include/bits/confname.h" 3
_SC_DEVICE_SPECIFIC_R,
# 380 "/usr/include/bits/confname.h" 3
_SC_FD_MGMT,
# 382 "/usr/include/bits/confname.h" 3
_SC_FIFO,
# 384 "/usr/include/bits/confname.h" 3
_SC_PIPE,
# 386 "/usr/include/bits/confname.h" 3
_SC_FILE_ATTRIBUTES,
# 388 "/usr/include/bits/confname.h" 3
_SC_FILE_LOCKING,
# 390 "/usr/include/bits/confname.h" 3
_SC_FILE_SYSTEM,
# 392 "/usr/include/bits/confname.h" 3
_SC_MONOTONIC_CLOCK,
# 394 "/usr/include/bits/confname.h" 3
_SC_MULTI_PROCESS,
# 396 "/usr/include/bits/confname.h" 3
_SC_SINGLE_PROCESS,
# 398 "/usr/include/bits/confname.h" 3
_SC_NETWORKING,
# 400 "/usr/include/bits/confname.h" 3
_SC_READER_WRITER_LOCKS,
# 402 "/usr/include/bits/confname.h" 3
_SC_SPIN_LOCKS,
# 404 "/usr/include/bits/confname.h" 3
_SC_REGEXP,
# 406 "/usr/include/bits/confname.h" 3
_SC_REGEX_VERSION,
# 408 "/usr/include/bits/confname.h" 3
_SC_SHELL,
# 410 "/usr/include/bits/confname.h" 3
_SC_SIGNALS,
# 412 "/usr/include/bits/confname.h" 3
_SC_SPAWN,
# 414 "/usr/include/bits/confname.h" 3
_SC_SPORADIC_SERVER,
# 416 "/usr/include/bits/confname.h" 3
_SC_THREAD_SPORADIC_SERVER,
# 418 "/usr/include/bits/confname.h" 3
_SC_SYSTEM_DATABASE,
# 420 "/usr/include/bits/confname.h" 3
_SC_SYSTEM_DATABASE_R,
# 422 "/usr/include/bits/confname.h" 3
_SC_TIMEOUTS,
# 424 "/usr/include/bits/confname.h" 3
_SC_TYPED_MEMORY_OBJECTS,
# 426 "/usr/include/bits/confname.h" 3
_SC_USER_GROUPS,
# 428 "/usr/include/bits/confname.h" 3
_SC_USER_GROUPS_R,
# 430 "/usr/include/bits/confname.h" 3
_SC_2_PBS,
# 432 "/usr/include/bits/confname.h" 3
_SC_2_PBS_ACCOUNTING,
# 434 "/usr/include/bits/confname.h" 3
_SC_2_PBS_LOCATE,
# 436 "/usr/include/bits/confname.h" 3
_SC_2_PBS_MESSAGE,
# 438 "/usr/include/bits/confname.h" 3
_SC_2_PBS_TRACK,
# 440 "/usr/include/bits/confname.h" 3
_SC_SYMLOOP_MAX,
# 442 "/usr/include/bits/confname.h" 3
_SC_STREAMS,
# 444 "/usr/include/bits/confname.h" 3
_SC_2_PBS_CHECKPOINT,
# 447 "/usr/include/bits/confname.h" 3
_SC_V6_ILP32_OFF32,
# 449 "/usr/include/bits/confname.h" 3
_SC_V6_ILP32_OFFBIG,
# 451 "/usr/include/bits/confname.h" 3
_SC_V6_LP64_OFF64,
# 453 "/usr/include/bits/confname.h" 3
_SC_V6_LPBIG_OFFBIG,
# 456 "/usr/include/bits/confname.h" 3
_SC_HOST_NAME_MAX,
# 458 "/usr/include/bits/confname.h" 3
_SC_TRACE,
# 460 "/usr/include/bits/confname.h" 3
_SC_TRACE_EVENT_FILTER,
# 462 "/usr/include/bits/confname.h" 3
_SC_TRACE_INHERIT,
# 464 "/usr/include/bits/confname.h" 3
_SC_TRACE_LOG,
# 467 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_ICACHE_SIZE,
# 469 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_ICACHE_ASSOC,
# 471 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_ICACHE_LINESIZE,
# 473 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_DCACHE_SIZE,
# 475 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_DCACHE_ASSOC,
# 477 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_DCACHE_LINESIZE,
# 479 "/usr/include/bits/confname.h" 3
_SC_LEVEL2_CACHE_SIZE,
# 481 "/usr/include/bits/confname.h" 3
_SC_LEVEL2_CACHE_ASSOC,
# 483 "/usr/include/bits/confname.h" 3
_SC_LEVEL2_CACHE_LINESIZE,
# 485 "/usr/include/bits/confname.h" 3
_SC_LEVEL3_CACHE_SIZE,
# 487 "/usr/include/bits/confname.h" 3
_SC_LEVEL3_CACHE_ASSOC,
# 489 "/usr/include/bits/confname.h" 3
_SC_LEVEL3_CACHE_LINESIZE,
# 491 "/usr/include/bits/confname.h" 3
_SC_LEVEL4_CACHE_SIZE,
# 493 "/usr/include/bits/confname.h" 3
_SC_LEVEL4_CACHE_ASSOC,
# 495 "/usr/include/bits/confname.h" 3
_SC_LEVEL4_CACHE_LINESIZE,
# 499 "/usr/include/bits/confname.h" 3
_SC_IPV6 = 235,
# 501 "/usr/include/bits/confname.h" 3
_SC_RAW_SOCKETS,
# 504 "/usr/include/bits/confname.h" 3
_SC_V7_ILP32_OFF32,
# 506 "/usr/include/bits/confname.h" 3
_SC_V7_ILP32_OFFBIG,
# 508 "/usr/include/bits/confname.h" 3
_SC_V7_LP64_OFF64,
# 510 "/usr/include/bits/confname.h" 3
_SC_V7_LPBIG_OFFBIG,
# 513 "/usr/include/bits/confname.h" 3
_SC_SS_REPL_MAX,
# 516 "/usr/include/bits/confname.h" 3
_SC_TRACE_EVENT_NAME_MAX,
# 518 "/usr/include/bits/confname.h" 3
_SC_TRACE_NAME_MAX,
# 520 "/usr/include/bits/confname.h" 3
_SC_TRACE_SYS_MAX,
# 522 "/usr/include/bits/confname.h" 3
_SC_TRACE_USER_EVENT_MAX,
# 525 "/usr/include/bits/confname.h" 3
_SC_XOPEN_STREAMS,
# 528 "/usr/include/bits/confname.h" 3
_SC_THREAD_ROBUST_PRIO_INHERIT,
# 530 "/usr/include/bits/confname.h" 3
_SC_THREAD_ROBUST_PRIO_PROTECT
# 532 "/usr/include/bits/confname.h" 3
};
# 536 "/usr/include/bits/confname.h" 3
enum {
# 537 "/usr/include/bits/confname.h" 3
_CS_PATH,
# 540 "/usr/include/bits/confname.h" 3
_CS_V6_WIDTH_RESTRICTED_ENVS,
# 544 "/usr/include/bits/confname.h" 3
_CS_GNU_LIBC_VERSION,
# 546 "/usr/include/bits/confname.h" 3
_CS_GNU_LIBPTHREAD_VERSION,
# 549 "/usr/include/bits/confname.h" 3
_CS_V5_WIDTH_RESTRICTED_ENVS,
# 553 "/usr/include/bits/confname.h" 3
_CS_V7_WIDTH_RESTRICTED_ENVS,
# 557 "/usr/include/bits/confname.h" 3
_CS_LFS_CFLAGS = 1000,
# 559 "/usr/include/bits/confname.h" 3
_CS_LFS_LDFLAGS,
# 561 "/usr/include/bits/confname.h" 3
_CS_LFS_LIBS,
# 563 "/usr/include/bits/confname.h" 3
_CS_LFS_LINTFLAGS,
# 565 "/usr/include/bits/confname.h" 3
_CS_LFS64_CFLAGS,
# 567 "/usr/include/bits/confname.h" 3
_CS_LFS64_LDFLAGS,
# 569 "/usr/include/bits/confname.h" 3
_CS_LFS64_LIBS,
# 571 "/usr/include/bits/confname.h" 3
_CS_LFS64_LINTFLAGS,
# 574 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_CFLAGS = 1100,
# 576 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LDFLAGS,
# 578 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LIBS,
# 580 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LINTFLAGS,
# 582 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_CFLAGS,
# 584 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LDFLAGS,
# 586 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LIBS,
# 588 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
# 590 "/usr/include/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_CFLAGS,
# 592 "/usr/include/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LDFLAGS,
# 594 "/usr/include/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LIBS,
# 596 "/usr/include/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LINTFLAGS,
# 598 "/usr/include/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_CFLAGS,
# 600 "/usr/include/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
# 602 "/usr/include/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LIBS,
# 604 "/usr/include/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
# 607 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_CFLAGS,
# 609 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
# 611 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LIBS,
# 613 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
# 615 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
# 617 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
# 619 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LIBS,
# 621 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
# 623 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_CFLAGS,
# 625 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LDFLAGS,
# 627 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LIBS,
# 629 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
# 631 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
# 633 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
# 635 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
# 637 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
# 640 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_CFLAGS,
# 642 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
# 644 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LIBS,
# 646 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
# 648 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
# 650 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
# 652 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LIBS,
# 654 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
# 656 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_CFLAGS,
# 658 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LDFLAGS,
# 660 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LIBS,
# 662 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
# 664 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
# 666 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
# 668 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
# 670 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
# 672 "/usr/include/bits/confname.h" 3
};
# 607 "/usr/include/unistd.h" 3
extern "C" long pathconf(const char * , int ) throw()
# 608 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 611 "/usr/include/unistd.h" 3
extern "C" long fpathconf(int , int ) throw();
# 614 "/usr/include/unistd.h" 3
extern "C" long sysconf(int ) throw();
# 618 "/usr/include/unistd.h" 3
extern "C" size_t confstr(int , char * , size_t ) throw();
# 623 "/usr/include/unistd.h" 3
extern "C" __pid_t getpid() throw();
# 626 "/usr/include/unistd.h" 3
extern "C" __pid_t getppid() throw();
# 631 "/usr/include/unistd.h" 3
extern "C" __pid_t getpgrp() throw();
# 641 "/usr/include/unistd.h" 3
extern "C" __pid_t __getpgid(__pid_t ) throw();
# 643 "/usr/include/unistd.h" 3
extern "C" __pid_t getpgid(__pid_t ) throw();
# 650 "/usr/include/unistd.h" 3
extern "C" int setpgid(__pid_t , __pid_t ) throw();
# 667 "/usr/include/unistd.h" 3
extern "C" int setpgrp() throw();
# 684 "/usr/include/unistd.h" 3
extern "C" __pid_t setsid() throw();
# 688 "/usr/include/unistd.h" 3
extern "C" __pid_t getsid(__pid_t ) throw();
# 692 "/usr/include/unistd.h" 3
extern "C" __uid_t getuid() throw();
# 695 "/usr/include/unistd.h" 3
extern "C" __uid_t geteuid() throw();
# 698 "/usr/include/unistd.h" 3
extern "C" __gid_t getgid() throw();
# 701 "/usr/include/unistd.h" 3
extern "C" __gid_t getegid() throw();
# 706 "/usr/include/unistd.h" 3
extern "C" int getgroups(int , __gid_t []) throw();
# 710 "/usr/include/unistd.h" 3
extern "C" int group_member(__gid_t ) throw();
# 717 "/usr/include/unistd.h" 3
extern "C" int setuid(__uid_t ) throw();
# 722 "/usr/include/unistd.h" 3
extern "C" int setreuid(__uid_t , __uid_t ) throw();
# 727 "/usr/include/unistd.h" 3
extern "C" int seteuid(__uid_t ) throw();
# 734 "/usr/include/unistd.h" 3
extern "C" int setgid(__gid_t ) throw();
# 739 "/usr/include/unistd.h" 3
extern "C" int setregid(__gid_t , __gid_t ) throw();
# 744 "/usr/include/unistd.h" 3
extern "C" int setegid(__gid_t ) throw();
# 750 "/usr/include/unistd.h" 3
extern "C" int getresuid(__uid_t * , __uid_t * , __uid_t * ) throw();
# 755 "/usr/include/unistd.h" 3
extern "C" int getresgid(__gid_t * , __gid_t * , __gid_t * ) throw();
# 760 "/usr/include/unistd.h" 3
extern "C" int setresuid(__uid_t , __uid_t , __uid_t ) throw();
# 765 "/usr/include/unistd.h" 3
extern "C" int setresgid(__gid_t , __gid_t , __gid_t ) throw();
# 773 "/usr/include/unistd.h" 3
extern "C" __pid_t fork() throw();
# 780 "/usr/include/unistd.h" 3
extern "C" __pid_t vfork() throw();
# 786 "/usr/include/unistd.h" 3
extern "C" char *ttyname(int ) throw();
# 790 "/usr/include/unistd.h" 3
extern "C" int ttyname_r(int , char * , size_t ) throw()
# 791 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 795 "/usr/include/unistd.h" 3
extern "C" int isatty(int ) throw();
# 801 "/usr/include/unistd.h" 3
extern "C" int ttyslot() throw();
# 806 "/usr/include/unistd.h" 3
extern "C" int link(const char * , const char * ) throw()
# 807 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 812 "/usr/include/unistd.h" 3
extern "C" int linkat(int , const char * , int , const char * , int ) throw()
# 814 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2, 4)));
# 819 "/usr/include/unistd.h" 3
extern "C" int symlink(const char * , const char * ) throw()
# 820 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 825 "/usr/include/unistd.h" 3
extern "C" ssize_t readlink(const char *__restrict__ , char *__restrict__ , size_t ) throw()
# 827 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 832 "/usr/include/unistd.h" 3
extern "C" int symlinkat(const char * , int , const char * ) throw()
# 833 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 3)));
# 836 "/usr/include/unistd.h" 3
extern "C" ssize_t readlinkat(int , const char *__restrict__ , char *__restrict__ , size_t ) throw()
# 838 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2, 3)));
# 842 "/usr/include/unistd.h" 3
extern "C" int unlink(const char * ) throw() __attribute((__nonnull__(1)));
# 846 "/usr/include/unistd.h" 3
extern "C" int unlinkat(int , const char * , int ) throw()
# 847 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 851 "/usr/include/unistd.h" 3
extern "C" int rmdir(const char * ) throw() __attribute((__nonnull__(1)));
# 855 "/usr/include/unistd.h" 3
extern "C" __pid_t tcgetpgrp(int ) throw();
# 858 "/usr/include/unistd.h" 3
extern "C" int tcsetpgrp(int , __pid_t ) throw();
# 865 "/usr/include/unistd.h" 3
extern "C" char *getlogin();
# 873 "/usr/include/unistd.h" 3
extern "C" int getlogin_r(char * , size_t ) __attribute((__nonnull__(1)));
# 878 "/usr/include/unistd.h" 3
extern "C" int setlogin(const char * ) throw() __attribute((__nonnull__(1)));
# 59 "/usr/include/getopt.h" 3
extern "C" { extern char *optarg; }
# 73 "/usr/include/getopt.h" 3
extern "C" { extern int optind; }
# 78 "/usr/include/getopt.h" 3
extern "C" { extern int opterr; }
# 82 "/usr/include/getopt.h" 3
extern "C" { extern int optopt; }
# 152 "/usr/include/getopt.h" 3
extern "C" int getopt(int , char *const * , const char * ) throw();
# 895 "/usr/include/unistd.h" 3
extern "C" int gethostname(char * , size_t ) throw() __attribute((__nonnull__(1)));
# 902 "/usr/include/unistd.h" 3
extern "C" int sethostname(const char * , size_t ) throw()
# 903 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 907 "/usr/include/unistd.h" 3
extern "C" int sethostid(long ) throw();
# 913 "/usr/include/unistd.h" 3
extern "C" int getdomainname(char * , size_t ) throw()
# 914 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 915 "/usr/include/unistd.h" 3
extern "C" int setdomainname(const char * , size_t ) throw()
# 916 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 922 "/usr/include/unistd.h" 3
extern "C" int vhangup() throw();
# 925 "/usr/include/unistd.h" 3
extern "C" int revoke(const char * ) throw() __attribute((__nonnull__(1)));
# 933 "/usr/include/unistd.h" 3
extern "C" int profil(unsigned short * , size_t , size_t , unsigned ) throw()
# 935 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 941 "/usr/include/unistd.h" 3
extern "C" int acct(const char * ) throw();
# 945 "/usr/include/unistd.h" 3
extern "C" char *getusershell() throw();
# 946 "/usr/include/unistd.h" 3
extern "C" void endusershell() throw();
# 947 "/usr/include/unistd.h" 3
extern "C" void setusershell() throw();
# 953 "/usr/include/unistd.h" 3
extern "C" int daemon(int , int ) throw();
# 960 "/usr/include/unistd.h" 3
extern "C" int chroot(const char * ) throw() __attribute((__nonnull__(1)));
# 964 "/usr/include/unistd.h" 3
extern "C" char *getpass(const char * ) __attribute((__nonnull__(1)));
# 973 "/usr/include/unistd.h" 3
extern "C" int fsync(int );
# 980 "/usr/include/unistd.h" 3
extern "C" long gethostid();
# 983 "/usr/include/unistd.h" 3
extern "C" void sync() throw();
# 988 "/usr/include/unistd.h" 3
extern "C" int getpagesize() throw() __attribute((const));
# 993 "/usr/include/unistd.h" 3
extern "C" int getdtablesize() throw();
# 998 "/usr/include/unistd.h" 3
extern "C" int truncate(const char * , __off_t ) throw()
# 999 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 1010 "/usr/include/unistd.h" 3
extern "C" int truncate64(const char * , __off64_t ) throw()
# 1011 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 1020 "/usr/include/unistd.h" 3
extern "C" int ftruncate(int , __off_t ) throw();
# 1030 "/usr/include/unistd.h" 3
extern "C" int ftruncate64(int , __off64_t ) throw();
# 1040 "/usr/include/unistd.h" 3
extern "C" int brk(void * ) throw();
# 1046 "/usr/include/unistd.h" 3
extern "C" void *sbrk(intptr_t ) throw();
# 1061 "/usr/include/unistd.h" 3
extern "C" long syscall(long , ...) throw();
# 1084 "/usr/include/unistd.h" 3
extern "C" int lockf(int , int , __off_t );
# 1094 "/usr/include/unistd.h" 3
extern "C" int lockf64(int , int , __off64_t );
# 1115 "/usr/include/unistd.h" 3
extern "C" int fdatasync(int );
# 1123 "/usr/include/unistd.h" 3
extern "C" char *crypt(const char * , const char * ) throw()
# 1124 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 1128 "/usr/include/unistd.h" 3
extern "C" void encrypt(char * , int ) throw() __attribute((__nonnull__(1)));
# 1135 "/usr/include/unistd.h" 3
extern "C" void swab(const void *__restrict__ , void *__restrict__ , ssize_t ) throw()
# 1136 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 1144 "/usr/include/unistd.h" 3
extern "C" char *ctermid(char * ) throw();
# 44 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_t __gthread_t;
# 45 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_key_t __gthread_key_t;
# 46 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_once_t __gthread_once_t;
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_mutex_t;
# 48 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_recursive_mutex_t;
# 49 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_cond_t __gthread_cond_t;
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef timespec __gthread_time_t;
# 118 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_once) __gthrw_pthread_once __attribute((__weakref__("pthread_once")));
# 119 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_getspecific) __gthrw_pthread_getspecific __attribute((__weakref__("pthread_getspecific")));
# 120 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_setspecific) __gthrw_pthread_setspecific __attribute((__weakref__("pthread_setspecific")));
# 122 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_create) __gthrw_pthread_create __attribute((__weakref__("pthread_create")));
# 123 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_join) __gthrw_pthread_join __attribute((__weakref__("pthread_join")));
# 124 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_equal) __gthrw_pthread_equal __attribute((__weakref__("pthread_equal")));
# 125 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_self) __gthrw_pthread_self __attribute((__weakref__("pthread_self")));
# 126 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_detach) __gthrw_pthread_detach __attribute((__weakref__("pthread_detach")));
# 127 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cancel) __gthrw_pthread_cancel __attribute((__weakref__("pthread_cancel")));
# 128 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(sched_yield) __gthrw_sched_yield __attribute((__weakref__("sched_yield")));
# 130 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_lock) __gthrw_pthread_mutex_lock __attribute((__weakref__("pthread_mutex_lock")));
# 131 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_trylock) __gthrw_pthread_mutex_trylock __attribute((__weakref__("pthread_mutex_trylock")));
# 134 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock __attribute((__weakref__("pthread_mutex_timedlock")));
# 137 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_unlock) __gthrw_pthread_mutex_unlock __attribute((__weakref__("pthread_mutex_unlock")));
# 138 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_init) __gthrw_pthread_mutex_init __attribute((__weakref__("pthread_mutex_init")));
# 139 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_destroy) __gthrw_pthread_mutex_destroy __attribute((__weakref__("pthread_mutex_destroy")));
# 141 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_broadcast) __gthrw_pthread_cond_broadcast __attribute((__weakref__("pthread_cond_broadcast")));
# 142 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_signal) __gthrw_pthread_cond_signal __attribute((__weakref__("pthread_cond_signal")));
# 143 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_wait) __gthrw_pthread_cond_wait __attribute((__weakref__("pthread_cond_wait")));
# 144 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_timedwait) __gthrw_pthread_cond_timedwait __attribute((__weakref__("pthread_cond_timedwait")));
# 145 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_destroy) __gthrw_pthread_cond_destroy __attribute((__weakref__("pthread_cond_destroy")));
# 148 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_key_create) __gthrw_pthread_key_create __attribute((__weakref__("pthread_key_create")));
# 149 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_key_delete) __gthrw_pthread_key_delete __attribute((__weakref__("pthread_key_delete")));
# 150 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_init) __gthrw_pthread_mutexattr_init __attribute((__weakref__("pthread_mutexattr_init")));
# 151 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype __attribute((__weakref__("pthread_mutexattr_settype")));
# 152 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy __attribute((__weakref__("pthread_mutexattr_destroy")));
# 238 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_active_p()
# 239 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 240 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static void *const __gthread_active_ptr = __extension__ ((void *)(&__gthrw_pthread_cancel));
# 242 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_active_ptr != (0);
# 243 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 676 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *
# 677 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
__args)
# 678 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 679 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_create(__threadid, __null, __func, __args);
# 680 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 683 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr)
# 684 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 685 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_join(__threadid, __value_ptr);
# 686 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 689 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_detach(__gthread_t __threadid)
# 690 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 691 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_detach(__threadid);
# 692 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 695 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2)
# 696 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 697 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_equal(__t1, __t2);
# 698 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 701 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline __gthread_t __gthread_self()
# 702 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 703 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_self();
# 704 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 707 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_yield()
# 708 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 709 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_sched_yield();
# 710 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 713 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_once(__gthread_once_t *__once, void (*__func)(void))
# 714 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 715 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 716 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_once(__once, __func); } else {
# 718 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return -1; }
# 719 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 722 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *))
# 723 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 724 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_key_create(__key, __dtor);
# 725 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 728 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_key_delete(__gthread_key_t __key)
# 729 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 730 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_key_delete(__key);
# 731 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 734 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline void *__gthread_getspecific(__gthread_key_t __key)
# 735 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 736 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_getspecific(__key);
# 737 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 740 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr)
# 741 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 742 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_setspecific(__key, __ptr);
# 743 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 746 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex)
# 747 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 748 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 749 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_destroy(__mutex); } else {
# 751 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 752 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 755 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex)
# 756 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 757 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 758 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_lock(__mutex); } else {
# 760 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 761 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 764 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex)
# 765 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 766 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 767 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_trylock(__mutex); } else {
# 769 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 770 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 775 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *
# 776 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
__abs_timeout)
# 777 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 778 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 779 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_timedlock(__mutex, __abs_timeout); } else {
# 781 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 782 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 787 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex)
# 788 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 789 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 790 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_unlock(__mutex); } else {
# 792 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 793 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 819 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex)
# 820 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 821 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_mutex_lock(__mutex);
# 822 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 825 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex)
# 826 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 827 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_mutex_trylock(__mutex);
# 828 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 833 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *
# 834 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
__abs_timeout)
# 835 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 836 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_mutex_timedlock(__mutex, __abs_timeout);
# 837 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 842 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex)
# 843 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 844 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_mutex_unlock(__mutex);
# 845 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 848 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond)
# 849 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 850 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_broadcast(__cond);
# 851 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 854 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_signal(__gthread_cond_t *__cond)
# 855 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 856 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_signal(__cond);
# 857 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 860 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex)
# 861 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 862 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_wait(__cond, __mutex);
# 863 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 866 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *
# 867 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
__abs_timeout)
# 868 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 869 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_timedwait(__cond, __mutex, __abs_timeout);
# 870 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 873 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *
# 874 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
__mutex)
# 875 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 876 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_cond_wait(__cond, __mutex);
# 877 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 880 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_timedwait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *
# 881 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
__mutex, const __gthread_time_t *
# 882 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
__abs_timeout)
# 883 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 884 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_cond_timedwait(__cond, __mutex, __abs_timeout);
# 885 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 888 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_destroy(__gthread_cond_t *__cond)
# 889 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 890 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_destroy(__cond);
# 891 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 32 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/atomic_word.h" 3
typedef int _Atomic_word;
# 37 "/usr/include/c++/4.4/ext/atomicity.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val)
# 46 "/usr/include/c++/4.4/ext/atomicity.h" 3
{ return __sync_fetch_and_add_4(__mem, __val); }
# 49 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline void __atomic_add(volatile _Atomic_word *__mem, int __val)
# 50 "/usr/include/c++/4.4/ext/atomicity.h" 3
{ __sync_fetch_and_add_4(__mem, __val); }
# 62 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val)
# 63 "/usr/include/c++/4.4/ext/atomicity.h" 3
{
# 64 "/usr/include/c++/4.4/ext/atomicity.h" 3
_Atomic_word __result = (*__mem);
# 65 "/usr/include/c++/4.4/ext/atomicity.h" 3
(*__mem) += __val;
# 66 "/usr/include/c++/4.4/ext/atomicity.h" 3
return __result;
# 67 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 70 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline void __atomic_add_single(_Atomic_word *__mem, int __val)
# 71 "/usr/include/c++/4.4/ext/atomicity.h" 3
{ (*__mem) += __val; }
# 74 "/usr/include/c++/4.4/ext/atomicity.h" 3
__attribute((__unused__)) static inline _Atomic_word
# 75 "/usr/include/c++/4.4/ext/atomicity.h" 3
__exchange_and_add_dispatch(_Atomic_word *__mem, int __val)
# 76 "/usr/include/c++/4.4/ext/atomicity.h" 3
{
# 78 "/usr/include/c++/4.4/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 79 "/usr/include/c++/4.4/ext/atomicity.h" 3
return __exchange_and_add(__mem, __val); } else {
# 81 "/usr/include/c++/4.4/ext/atomicity.h" 3
return __exchange_and_add_single(__mem, __val); }
# 85 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 88 "/usr/include/c++/4.4/ext/atomicity.h" 3
__attribute((__unused__)) static inline void
# 89 "/usr/include/c++/4.4/ext/atomicity.h" 3
__atomic_add_dispatch(_Atomic_word *__mem, int __val)
# 90 "/usr/include/c++/4.4/ext/atomicity.h" 3
{
# 92 "/usr/include/c++/4.4/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 93 "/usr/include/c++/4.4/ext/atomicity.h" 3
__atomic_add(__mem, __val); } else {
# 95 "/usr/include/c++/4.4/ext/atomicity.h" 3
__atomic_add_single(__mem, __val); }
# 99 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 101 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 46 "/usr/include/c++/4.4/new" 3
namespace std {
# 54 "/usr/include/c++/4.4/new" 3
class bad_alloc : public exception {
# 57 "/usr/include/c++/4.4/new" 3
public: bad_alloc() throw() { }
# 61 "/usr/include/c++/4.4/new" 3
virtual ~bad_alloc() throw();
# 64 "/usr/include/c++/4.4/new" 3
virtual const char *what() const throw();
# 65 "/usr/include/c++/4.4/new" 3
};
# 67 "/usr/include/c++/4.4/new" 3
struct nothrow_t { };
# 69 "/usr/include/c++/4.4/new" 3
extern const nothrow_t nothrow;
# 73 "/usr/include/c++/4.4/new" 3
typedef void (*new_handler)(void);
# 77 "/usr/include/c++/4.4/new" 3
new_handler set_new_handler(new_handler) throw();
# 78 "/usr/include/c++/4.4/new" 3
}
# 91 "/usr/include/c++/4.4/new" 3
void *operator new(size_t) throw(std::bad_alloc);
# 92 "/usr/include/c++/4.4/new" 3
void *operator new[](size_t) throw(std::bad_alloc);
# 93 "/usr/include/c++/4.4/new" 3
void operator delete(void *) throw();
# 94 "/usr/include/c++/4.4/new" 3
void operator delete[](void *) throw();
# 95 "/usr/include/c++/4.4/new" 3
void *operator new(size_t, const std::nothrow_t &) throw();
# 96 "/usr/include/c++/4.4/new" 3
void *operator new[](size_t, const std::nothrow_t &) throw();
# 97 "/usr/include/c++/4.4/new" 3
void operator delete(void *, const std::nothrow_t &) throw();
# 98 "/usr/include/c++/4.4/new" 3
void operator delete[](void *, const std::nothrow_t &) throw();
# 101 "/usr/include/c++/4.4/new" 3
inline void *operator new(size_t, void *__p) throw() { return __p; }
# 102 "/usr/include/c++/4.4/new" 3
inline void *operator new[](size_t, void *__p) throw() { return __p; }
# 105 "/usr/include/c++/4.4/new" 3
inline void operator delete(void *, void *) throw() { }
# 106 "/usr/include/c++/4.4/new" 3
inline void operator delete[](void *, void *) throw() { }
# 37 "/usr/include/c++/4.4/ext/new_allocator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 39 "/usr/include/c++/4.4/ext/new_allocator.h" 3
using std::size_t;
# 40 "/usr/include/c++/4.4/ext/new_allocator.h" 3
using std::ptrdiff_t;
# 50 "/usr/include/c++/4.4/ext/new_allocator.h" 3
template < typename _Tp >
    class new_allocator
    {
    public :
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp * pointer;
      typedef const _Tp * const_pointer;
      typedef _Tp & reference;
      typedef const _Tp & const_reference;
      typedef _Tp value_type;

      template < typename _Tp1 >
        struct rebind
        { typedef new_allocator < _Tp1 > other; };

      new_allocator ( ) throw ( ) { }

      new_allocator ( const new_allocator & ) throw ( ) { }

      template < typename _Tp1 >
        new_allocator ( const new_allocator < _Tp1 > & ) throw ( ) { }

      ~ new_allocator ( ) throw ( ) { }

      pointer
      address ( reference __x ) const { return & __x; }

      const_pointer
      address ( const_reference __x ) const { return & __x; }



      pointer
      allocate ( size_type __n, const void * = 0 )
      {
 if ( __builtin_expect ( __n > this -> max_size ( ), false ) )
   std :: __throw_bad_alloc ( );

 return static_cast < _Tp * > ( :: operator new ( __n * sizeof ( _Tp ) ) );
      }


      void
      deallocate ( pointer __p, size_type )
      { :: operator delete ( __p ); }

      size_type
      max_size ( ) const throw ( )
      { return size_t ( - 1 ) / sizeof ( _Tp ); }



      void
      construct ( pointer __p, const _Tp & __val )
      { :: new ( ( void * ) __p ) _Tp ( __val ); }

      void
      destroy ( pointer __p ) { __p -> ~ _Tp ( ); }
    };
# 118 "/usr/include/c++/4.4/ext/new_allocator.h" 3
template < typename _Tp >
    inline bool
    operator == ( const new_allocator < _Tp > &, const new_allocator < _Tp > & )
    { return true; }
# 123 "/usr/include/c++/4.4/ext/new_allocator.h" 3
template < typename _Tp >
    inline bool
    operator != ( const new_allocator < _Tp > &, const new_allocator < _Tp > & )
    { return false; }
# 128 "/usr/include/c++/4.4/ext/new_allocator.h" 3
}
# 50 "/usr/include/c++/4.4/bits/allocator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 59 "/usr/include/c++/4.4/bits/allocator.h" 3
template< class _Tp> class allocator;
# 64 "/usr/include/c++/4.4/bits/allocator.h" 3
template<> class allocator< void> {
# 67 "/usr/include/c++/4.4/bits/allocator.h" 3
public: typedef size_t size_type;
# 68 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef ptrdiff_t difference_type;
# 69 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef void *pointer;
# 70 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef const void *const_pointer;
# 71 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef void value_type;
# 73 "/usr/include/c++/4.4/bits/allocator.h" 3
template< class _Tp1>
# 74 "/usr/include/c++/4.4/bits/allocator.h" 3
struct rebind {
# 75 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef std::allocator< _Tp1> other; };
# 76 "/usr/include/c++/4.4/bits/allocator.h" 3
};
# 85 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Tp >
    class allocator : public __gnu_cxx :: new_allocator < _Tp >
    {
   public :
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp * pointer;
      typedef const _Tp * const_pointer;
      typedef _Tp & reference;
      typedef const _Tp & const_reference;
      typedef _Tp value_type;

      template < typename _Tp1 >
        struct rebind
        { typedef allocator < _Tp1 > other; };

      allocator ( ) throw ( ) { }

      allocator ( const allocator & __a ) throw ( )
      : __gnu_cxx :: new_allocator < _Tp > ( __a ) { }

      template < typename _Tp1 >
        allocator ( const allocator < _Tp1 > & ) throw ( ) { }

      ~ allocator ( ) throw ( ) { }


    };
# 114 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _T1, typename _T2 >
    inline bool
    operator == ( const allocator < _T1 > &, const allocator < _T2 > & )
    { return true; }
# 119 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Tp >
    inline bool
    operator == ( const allocator < _Tp > &, const allocator < _Tp > & )
    { return true; }
# 124 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _T1, typename _T2 >
    inline bool
    operator != ( const allocator < _T1 > &, const allocator < _T2 > & )
    { return false; }
# 129 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Tp >
    inline bool
    operator != ( const allocator < _Tp > &, const allocator < _Tp > & )
    { return false; }
# 138 "/usr/include/c++/4.4/bits/allocator.h" 3
extern template class allocator< char> ;
# 139 "/usr/include/c++/4.4/bits/allocator.h" 3
extern template class allocator< wchar_t> ;
# 146 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc, bool = __is_empty ( _Alloc ) >
    struct __alloc_swap
    { static void _S_do_it ( _Alloc &, _Alloc & ) { } };
# 150 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc >
    struct __alloc_swap < _Alloc, false >
    {
      static void
      _S_do_it ( _Alloc & __one, _Alloc & __two )
      {

 if ( __one != __two )
   swap ( __one, __two );
      }
    };
# 163 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc, bool = __is_empty ( _Alloc ) >
    struct __alloc_neq
    {
      static bool
      _S_do_it ( const _Alloc &, const _Alloc & )
      { return false; }
    };
# 171 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc >
    struct __alloc_neq < _Alloc, false >
    {
      static bool
      _S_do_it ( const _Alloc & __one, const _Alloc & __two )
      { return __one != __two; }
    };
# 179 "/usr/include/c++/4.4/bits/allocator.h" 3
}
# 32 "/usr/include/c++/4.4/cxxabi-forced.h" 3
namespace __cxxabiv1 {
# 41 "/usr/include/c++/4.4/cxxabi-forced.h" 3
class __forced_unwind {
# 43 "/usr/include/c++/4.4/cxxabi-forced.h" 3
virtual ~__forced_unwind() throw();
# 44 "/usr/include/c++/4.4/cxxabi-forced.h" 3
virtual void __pure_dummy() = 0;
# 45 "/usr/include/c++/4.4/cxxabi-forced.h" 3
};
# 46 "/usr/include/c++/4.4/cxxabi-forced.h" 3
}
# 38 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
namespace std __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    inline void
    __ostream_write ( basic_ostream < _CharT, _Traits > & __out,
      const _CharT * __s, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      const streamsize __put = __out . rdbuf ( ) -> sputn ( __s, __n );
      if ( __put != __n )
 __out . setstate ( __ios_base :: badbit );
    }
# 53 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    inline void
    __ostream_fill ( basic_ostream < _CharT, _Traits > & __out, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      const _CharT __c = __out . fill ( );
      for (; __n > 0; -- __n )
 {
   const typename _Traits :: int_type __put = __out . rdbuf ( ) -> sputc ( __c );
   if ( _Traits :: eq_int_type ( __put, _Traits :: eof ( ) ) )
     {
       __out . setstate ( __ios_base :: badbit );
       break;
     }
 }
    }
# 72 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    __ostream_insert ( basic_ostream < _CharT, _Traits > & __out,
       const _CharT * __s, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      typename __ostream_type :: sentry __cerb ( __out );
      if ( __cerb )
 {
   try
     {
       const streamsize __w = __out . width ( );
       if ( __w > __n )
  {
    const bool __left = ( ( __out . flags ( )
     & __ios_base :: adjustfield )
           == __ios_base :: left );
    if ( ! __left )
      __ostream_fill ( __out, __w - __n );
    if ( __out . good ( ) )
      __ostream_write ( __out, __s, __n );
    if ( __left && __out . good ( ) )
      __ostream_fill ( __out, __w - __n );
  }
       else
  __ostream_write ( __out, __s, __n );
       __out . width ( 0 );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __out . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __out . _M_setstate ( __ios_base :: badbit ); }
 }
      return __out;
    }
# 117 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
extern template basic_ostream< char, char_traits< char> > &__ostream_insert(basic_ostream< char, char_traits< char> > & , const char * , streamsize );
# 120 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &__ostream_insert(basic_ostream< wchar_t, char_traits< wchar_t> > & , const wchar_t * , streamsize );
# 125 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
}
# 60 "/usr/include/c++/4.4/bits/stl_function.h" 3
namespace std __attribute((__visibility__("default"))) {
# 99 "/usr/include/c++/4.4/bits/stl_function.h" 3
template< class _Arg, class _Result>
# 100 "/usr/include/c++/4.4/bits/stl_function.h" 3
struct unary_function {
# 102 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Arg argument_type;
# 105 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Result result_type;
# 106 "/usr/include/c++/4.4/bits/stl_function.h" 3
};
# 111 "/usr/include/c++/4.4/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result>
# 112 "/usr/include/c++/4.4/bits/stl_function.h" 3
struct binary_function {
# 114 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Arg1 first_argument_type;
# 117 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Arg2 second_argument_type;
# 118 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Result result_type;
# 119 "/usr/include/c++/4.4/bits/stl_function.h" 3
};
# 134 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct plus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x + __y; }
    };
# 143 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct minus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x - __y; }
    };
# 152 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct multiplies : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x * __y; }
    };
# 161 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct divides : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x / __y; }
    };
# 170 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct modulus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x % __y; }
    };
# 179 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct negate : public unary_function < _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x ) const
      { return - __x; }
    };
# 198 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct equal_to : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x == __y; }
    };
# 207 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct not_equal_to : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x != __y; }
    };
# 216 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct greater : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x > __y; }
    };
# 225 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct less : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x < __y; }
    };
# 234 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct greater_equal : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x >= __y; }
    };
# 243 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct less_equal : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x <= __y; }
    };
# 262 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_and : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x && __y; }
    };
# 271 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_or : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x || __y; }
    };
# 280 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_not : public unary_function < _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x ) const
      { return ! __x; }
    };
# 291 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_and : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x & __y; }
    };
# 299 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_or : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x | __y; }
    };
# 307 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_xor : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x ^ __y; }
    };
# 345 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    class unary_negate
    : public unary_function < typename _Predicate :: argument_type, bool >
    {
    protected :
      _Predicate _M_pred;

    public :
      explicit
      unary_negate ( const _Predicate & __x ) : _M_pred ( __x ) { }

      bool
      operator ( ) ( const typename _Predicate :: argument_type & __x ) const
      { return ! _M_pred ( __x ); }
    };
# 362 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    inline unary_negate < _Predicate >
    not1 ( const _Predicate & __pred )
    { return unary_negate < _Predicate > ( __pred ); }
# 368 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    class binary_negate
    : public binary_function < typename _Predicate :: first_argument_type,
        typename _Predicate :: second_argument_type, bool >
    {
    protected :
      _Predicate _M_pred;

    public :
      explicit
      binary_negate ( const _Predicate & __x ) : _M_pred ( __x ) { }

      bool
      operator ( ) ( const typename _Predicate :: first_argument_type & __x,
   const typename _Predicate :: second_argument_type & __y ) const
      { return ! _M_pred ( __x, __y ); }
    };
# 387 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    inline binary_negate < _Predicate >
    not2 ( const _Predicate & __pred )
    { return binary_negate < _Predicate > ( __pred ); }
# 416 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg, typename _Result >
    class pointer_to_unary_function : public unary_function < _Arg, _Result >
    {
    protected :
      _Result ( * _M_ptr ) ( _Arg );

    public :
      pointer_to_unary_function ( ) { }

      explicit
      pointer_to_unary_function ( _Result ( * __x ) ( _Arg ) )
      : _M_ptr ( __x ) { }

      _Result
      operator ( ) ( _Arg __x ) const
      { return _M_ptr ( __x ); }
    };
# 435 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg, typename _Result >
    inline pointer_to_unary_function < _Arg, _Result >
    ptr_fun ( _Result ( * __x ) ( _Arg ) )
    { return pointer_to_unary_function < _Arg, _Result > ( __x ); }
# 441 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg1, typename _Arg2, typename _Result >
    class pointer_to_binary_function
    : public binary_function < _Arg1, _Arg2, _Result >
    {
    protected :
      _Result ( * _M_ptr ) ( _Arg1, _Arg2 );

    public :
      pointer_to_binary_function ( ) { }

      explicit
      pointer_to_binary_function ( _Result ( * __x ) ( _Arg1, _Arg2 ) )
      : _M_ptr ( __x ) { }

      _Result
      operator ( ) ( _Arg1 __x, _Arg2 __y ) const
      { return _M_ptr ( __x, __y ); }
    };
# 461 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg1, typename _Arg2, typename _Result >
    inline pointer_to_binary_function < _Arg1, _Arg2, _Result >
    ptr_fun ( _Result ( * __x ) ( _Arg1, _Arg2 ) )
    { return pointer_to_binary_function < _Arg1, _Arg2, _Result > ( __x ); }
# 467 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct _Identity : public unary_function < _Tp, _Tp >
    {
      _Tp &
      operator ( ) ( _Tp & __x ) const
      { return __x; }

      const _Tp &
      operator ( ) ( const _Tp & __x ) const
      { return __x; }
    };
# 479 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Pair >
    struct _Select1st : public unary_function < _Pair,
           typename _Pair :: first_type >
    {
      typename _Pair :: first_type &
      operator ( ) ( _Pair & __x ) const
      { return __x . first; }

      const typename _Pair :: first_type &
      operator ( ) ( const _Pair & __x ) const
      { return __x . first; }
    };
# 492 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Pair >
    struct _Select2nd : public unary_function < _Pair,
           typename _Pair :: second_type >
    {
      typename _Pair :: second_type &
      operator ( ) ( _Pair & __x ) const
      { return __x . second; }

      const typename _Pair :: second_type &
      operator ( ) ( const _Pair & __x ) const
      { return __x . second; }
    };
# 523 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class mem_fun_t : public unary_function < _Tp *, _Ret >
    {
    public :
      explicit
      mem_fun_t ( _Ret ( _Tp :: * __pf ) ( ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp * __p ) const
      { return ( __p ->* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( );
    };
# 541 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class const_mem_fun_t : public unary_function < const _Tp *, _Ret >
    {
    public :
      explicit
      const_mem_fun_t ( _Ret ( _Tp :: * __pf ) ( ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp * __p ) const
      { return ( __p ->* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( ) const;
    };
# 559 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class mem_fun_ref_t : public unary_function < _Tp, _Ret >
    {
    public :
      explicit
      mem_fun_ref_t ( _Ret ( _Tp :: * __pf ) ( ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp & __r ) const
      { return ( __r .* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( );
  };
# 577 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class const_mem_fun_ref_t : public unary_function < _Tp, _Ret >
    {
    public :
      explicit
      const_mem_fun_ref_t ( _Ret ( _Tp :: * __pf ) ( ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp & __r ) const
      { return ( __r .* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( ) const;
    };
# 595 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class mem_fun1_t : public binary_function < _Tp *, _Arg, _Ret >
    {
    public :
      explicit
      mem_fun1_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp * __p, _Arg __x ) const
      { return ( __p ->* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg );
    };
# 613 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class const_mem_fun1_t : public binary_function < const _Tp *, _Arg, _Ret >
    {
    public :
      explicit
      const_mem_fun1_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp * __p, _Arg __x ) const
      { return ( __p ->* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg ) const;
    };
# 631 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class mem_fun1_ref_t : public binary_function < _Tp, _Arg, _Ret >
    {
    public :
      explicit
      mem_fun1_ref_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp & __r, _Arg __x ) const
      { return ( __r .* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg );
    };
# 649 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class const_mem_fun1_ref_t : public binary_function < _Tp, _Arg, _Ret >
    {
    public :
      explicit
      const_mem_fun1_ref_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp & __r, _Arg __x ) const
      { return ( __r .* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg ) const;
    };
# 667 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline mem_fun_t < _Ret, _Tp >
    mem_fun ( _Ret ( _Tp :: * __f ) ( ) )
    { return mem_fun_t < _Ret, _Tp > ( __f ); }
# 672 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline const_mem_fun_t < _Ret, _Tp >
    mem_fun ( _Ret ( _Tp :: * __f ) ( ) const )
    { return const_mem_fun_t < _Ret, _Tp > ( __f ); }
# 677 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline mem_fun_ref_t < _Ret, _Tp >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( ) )
    { return mem_fun_ref_t < _Ret, _Tp > ( __f ); }
# 682 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline const_mem_fun_ref_t < _Ret, _Tp >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( ) const )
    { return const_mem_fun_ref_t < _Ret, _Tp > ( __f ); }
# 687 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline mem_fun1_t < _Ret, _Tp, _Arg >
    mem_fun ( _Ret ( _Tp :: * __f ) ( _Arg ) )
    { return mem_fun1_t < _Ret, _Tp, _Arg > ( __f ); }
# 692 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline const_mem_fun1_t < _Ret, _Tp, _Arg >
    mem_fun ( _Ret ( _Tp :: * __f ) ( _Arg ) const )
    { return const_mem_fun1_t < _Ret, _Tp, _Arg > ( __f ); }
# 697 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline mem_fun1_ref_t < _Ret, _Tp, _Arg >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( _Arg ) )
    { return mem_fun1_ref_t < _Ret, _Tp, _Arg > ( __f ); }
# 702 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline const_mem_fun1_ref_t < _Ret, _Tp, _Arg >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( _Arg ) const )
    { return const_mem_fun1_ref_t < _Ret, _Tp, _Arg > ( __f ); }
# 709 "/usr/include/c++/4.4/bits/stl_function.h" 3
}
# 60 "/usr/include/c++/4.4/backward/binders.h" 3
namespace std __attribute((__visibility__("default"))) {
# 96 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation >
    class binder1st
    : public unary_function < typename _Operation :: second_argument_type,
       typename _Operation :: result_type >
    {
    protected :
      _Operation op;
      typename _Operation :: first_argument_type value;

    public :
      binder1st ( const _Operation & __x,
  const typename _Operation :: first_argument_type & __y )
      : op ( __x ), value ( __y ) { }

      typename _Operation :: result_type
      operator ( ) ( const typename _Operation :: second_argument_type & __x ) const
      { return op ( value, __x ); }



      typename _Operation :: result_type
      operator ( ) ( typename _Operation :: second_argument_type & __x ) const
      { return op ( value, __x ); }
    };
# 122 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation, typename _Tp >
    inline binder1st < _Operation >
    bind1st ( const _Operation & __fn, const _Tp & __x )
    {
      typedef typename _Operation :: first_argument_type _Arg1_type;
      return binder1st < _Operation > ( __fn, _Arg1_type ( __x ) );
    }
# 131 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation >
    class binder2nd
    : public unary_function < typename _Operation :: first_argument_type,
       typename _Operation :: result_type >
    {
    protected :
      _Operation op;
      typename _Operation :: second_argument_type value;

    public :
      binder2nd ( const _Operation & __x,
  const typename _Operation :: second_argument_type & __y )
      : op ( __x ), value ( __y ) { }

      typename _Operation :: result_type
      operator ( ) ( const typename _Operation :: first_argument_type & __x ) const
      { return op ( __x, value ); }



      typename _Operation :: result_type
      operator ( ) ( typename _Operation :: first_argument_type & __x ) const
      { return op ( __x, value ); }
    };
# 157 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation, typename _Tp >
    inline binder2nd < _Operation >
    bind2nd ( const _Operation & __fn, const _Tp & __x )
    {
      typedef typename _Operation :: second_argument_type _Arg2_type;
      return binder2nd < _Operation > ( __fn, _Arg2_type ( __x ) );
    }
# 166 "/usr/include/c++/4.4/backward/binders.h" 3
}
# 45 "/usr/include/c++/4.4/bits/basic_string.h" 3
namespace std __attribute((__visibility__("default"))) {
# 103 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    class basic_string
    {
      typedef typename _Alloc :: template rebind < _CharT > :: other _CharT_alloc_type;


    public :
      typedef _Traits traits_type;
      typedef typename _Traits :: char_type value_type;
      typedef _Alloc allocator_type;
      typedef typename _CharT_alloc_type :: size_type size_type;
      typedef typename _CharT_alloc_type :: difference_type difference_type;
      typedef typename _CharT_alloc_type :: reference reference;
      typedef typename _CharT_alloc_type :: const_reference const_reference;
      typedef typename _CharT_alloc_type :: pointer pointer;
      typedef typename _CharT_alloc_type :: const_pointer const_pointer;
      typedef __gnu_cxx :: __normal_iterator < pointer, basic_string > iterator;
      typedef __gnu_cxx :: __normal_iterator < const_pointer, basic_string >
                                                            const_iterator;
      typedef std :: reverse_iterator < const_iterator > const_reverse_iterator;
      typedef std :: reverse_iterator < iterator > reverse_iterator;

    private :

      struct _Rep_base
      {
 size_type _M_length;
 size_type _M_capacity;
 _Atomic_word _M_refcount;
      };

      struct _Rep : _Rep_base
      {

 typedef typename _Alloc :: template rebind < char > :: other _Raw_bytes_alloc;

 static const size_type _S_max_size;
 static const _CharT _S_terminal;



        static size_type _S_empty_rep_storage [ ];

        static _Rep &
        _S_empty_rep ( )
        {



   void * __p = reinterpret_cast < void * > ( & _S_empty_rep_storage );
   return * reinterpret_cast < _Rep * > ( __p );
 }

        bool
 _M_is_leaked ( ) const
        { return this -> _M_refcount < 0; }

        bool
 _M_is_shared ( ) const
        { return this -> _M_refcount > 0; }

        void
 _M_set_leaked ( )
        { this -> _M_refcount = - 1; }

        void
 _M_set_sharable ( )
        { this -> _M_refcount = 0; }

 void
 _M_set_length_and_sharable ( size_type __n )
 {
   this -> _M_set_sharable ( );
   this -> _M_length = __n;
   traits_type :: assign ( this -> _M_refdata ( ) [ __n ], _S_terminal );


 }

 _CharT *
 _M_refdata ( ) throw ( )
 { return reinterpret_cast < _CharT * > ( this + 1 ); }

 _CharT *
 _M_grab ( const _Alloc & __alloc1, const _Alloc & __alloc2 )
 {
   return ( ! _M_is_leaked ( ) && __alloc1 == __alloc2 )
           ? _M_refcopy ( ) : _M_clone ( __alloc1 );
 }


 static _Rep *
 _S_create ( size_type, size_type, const _Alloc & );

 void
 _M_dispose ( const _Alloc & __a )
 {

   if ( __builtin_expect ( this != & _S_empty_rep ( ), false ) )

     if ( __gnu_cxx :: __exchange_and_add_dispatch ( & this -> _M_refcount,
             - 1 ) <= 0 )
       _M_destroy ( __a );
 }

 void
 _M_destroy ( const _Alloc & ) throw ( );

 _CharT *
 _M_refcopy ( ) throw ( )
 {

   if ( __builtin_expect ( this != & _S_empty_rep ( ), false ) )

            __gnu_cxx :: __atomic_add_dispatch ( & this -> _M_refcount, 1 );
   return _M_refdata ( );
 }

 _CharT *
 _M_clone ( const _Alloc &, size_type __res = 0 );
      };


      struct _Alloc_hider : _Alloc
      {
 _Alloc_hider ( _CharT * __dat, const _Alloc & __a )
 : _Alloc ( __a ), _M_p ( __dat ) { }

 _CharT * _M_p;
      };

    public :




      static const size_type npos = static_cast < size_type > ( - 1 );

    private :

      mutable _Alloc_hider _M_dataplus;

      _CharT *
      _M_data ( ) const
      { return _M_dataplus . _M_p; }

      _CharT *
      _M_data ( _CharT * __p )
      { return ( _M_dataplus . _M_p = __p ); }

      _Rep *
      _M_rep ( ) const
      { return & ( ( reinterpret_cast < _Rep * > ( _M_data ( ) ) ) [ - 1 ] ); }



      iterator
      _M_ibegin ( ) const
      { return iterator ( _M_data ( ) ); }

      iterator
      _M_iend ( ) const
      { return iterator ( _M_data ( ) + this -> size ( ) ); }

      void
      _M_leak ( )
      {
 if ( ! _M_rep ( ) -> _M_is_leaked ( ) )
   _M_leak_hard ( );
      }

      size_type
      _M_check ( size_type __pos, const char * __s ) const
      {
 if ( __pos > this -> size ( ) )
   __throw_out_of_range ( ( __s ) );
 return __pos;
      }

      void
      _M_check_length ( size_type __n1, size_type __n2, const char * __s ) const
      {
 if ( this -> max_size ( ) - ( this -> size ( ) - __n1 ) < __n2 )
   __throw_length_error ( ( __s ) );
      }


      size_type
      _M_limit ( size_type __pos, size_type __off ) const
      {
 const bool __testoff = __off < this -> size ( ) - __pos;
 return __testoff ? __off : this -> size ( ) - __pos;
      }


      bool
      _M_disjunct ( const _CharT * __s ) const
      {
 return ( less < const _CharT * > ( ) ( __s, _M_data ( ) )
  || less < const _CharT * > ( ) ( _M_data ( ) + this -> size ( ), __s ) );
      }



      static void
      _M_copy ( _CharT * __d, const _CharT * __s, size_type __n )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, * __s );
 else
   traits_type :: copy ( __d, __s, __n );
      }

      static void
      _M_move ( _CharT * __d, const _CharT * __s, size_type __n )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, * __s );
 else
   traits_type :: move ( __d, __s, __n );
      }

      static void
      _M_assign ( _CharT * __d, size_type __n, _CharT __c )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, __c );
 else
   traits_type :: assign ( __d, __n, __c );
      }



      template < class _Iterator >
        static void
        _S_copy_chars ( _CharT * __p, _Iterator __k1, _Iterator __k2 )
        {
   for (; __k1 != __k2; ++ __k1, ++ __p )
     traits_type :: assign ( * __p, * __k1 );
 }

      static void
      _S_copy_chars ( _CharT * __p, iterator __k1, iterator __k2 )
      { _S_copy_chars ( __p, __k1 . base ( ), __k2 . base ( ) ); }

      static void
      _S_copy_chars ( _CharT * __p, const_iterator __k1, const_iterator __k2 )
      { _S_copy_chars ( __p, __k1 . base ( ), __k2 . base ( ) ); }

      static void
      _S_copy_chars ( _CharT * __p, _CharT * __k1, _CharT * __k2 )
      { _M_copy ( __p, __k1, __k2 - __k1 ); }

      static void
      _S_copy_chars ( _CharT * __p, const _CharT * __k1, const _CharT * __k2 )
      { _M_copy ( __p, __k1, __k2 - __k1 ); }

      static int
      _S_compare ( size_type __n1, size_type __n2 )
      {
 const difference_type __d = difference_type ( __n1 - __n2 );

 if ( __d > __gnu_cxx :: __numeric_traits < int > :: __max )
   return __gnu_cxx :: __numeric_traits < int > :: __max;
 else if ( __d < __gnu_cxx :: __numeric_traits < int > :: __min )
   return __gnu_cxx :: __numeric_traits < int > :: __min;
 else
   return int ( __d );
      }

      void
      _M_mutate ( size_type __pos, size_type __len1, size_type __len2 );

      void
      _M_leak_hard ( );

      static _Rep &
      _S_empty_rep ( )
      { return _Rep :: _S_empty_rep ( ); }

    public :







      inline
      basic_string ( );




      explicit
      basic_string ( const _Alloc & __a );






      basic_string ( const basic_string & __str );






      basic_string ( const basic_string & __str, size_type __pos,
     size_type __n = npos );







      basic_string ( const basic_string & __str, size_type __pos,
     size_type __n, const _Alloc & __a );

      basic_string ( const _CharT * __s, size_type __n,
     const _Alloc & __a = _Alloc ( ) );





      basic_string ( const _CharT * __s, const _Alloc & __a = _Alloc ( ) );






      basic_string ( size_type __n, _CharT __c, const _Alloc & __a = _Alloc ( ) );

      template < class _InputIterator >
        basic_string ( _InputIterator __beg, _InputIterator __end,
       const _Alloc & __a = _Alloc ( ) );




      ~ basic_string ( )
      { _M_rep ( ) -> _M_dispose ( this -> get_allocator ( ) ); }





      basic_string &
      operator = ( const basic_string & __str )
      { return this -> assign ( __str ); }





      basic_string &
      operator = ( const _CharT * __s )
      { return this -> assign ( __s ); }

      basic_string &
      operator = ( _CharT __c )
      {
 this -> assign ( 1, __c );
 return * this;
      }

      iterator
      begin ( )
      {
 _M_leak ( );
 return iterator ( _M_data ( ) );
      }





      const_iterator
      begin ( ) const
      { return const_iterator ( _M_data ( ) ); }





      iterator
      end ( )
      {
 _M_leak ( );
 return iterator ( _M_data ( ) + this -> size ( ) );
      }





      const_iterator
      end ( ) const
      { return const_iterator ( _M_data ( ) + this -> size ( ) ); }






      reverse_iterator
      rbegin ( )
      { return reverse_iterator ( this -> end ( ) ); }






      const_reverse_iterator
      rbegin ( ) const
      { return const_reverse_iterator ( this -> end ( ) ); }






      reverse_iterator
      rend ( )
      { return reverse_iterator ( this -> begin ( ) ); }






      const_reverse_iterator
      rend ( ) const
      { return const_reverse_iterator ( this -> begin ( ) ); }

    public :



      size_type
      size ( ) const
      { return _M_rep ( ) -> _M_length; }



      size_type
      length ( ) const
      { return _M_rep ( ) -> _M_length; }


      size_type
      max_size ( ) const
      { return _Rep :: _S_max_size; }

      void
      resize ( size_type __n, _CharT __c );

      void
      resize ( size_type __n )
      { this -> resize ( __n, _CharT ( ) ); }





      size_type
      capacity ( ) const
      { return _M_rep ( ) -> _M_capacity; }

      void
      reserve ( size_type __res_arg = 0 );




      void
      clear ( )
      { _M_mutate ( 0, this -> size ( ), 0 ); }




      bool
      empty ( ) const
      { return this -> size ( ) == 0; }

      const_reference
      operator [ ] ( size_type __pos ) const
      {
 ;
 return _M_data ( ) [ __pos ];
      }

      reference
      operator [ ] ( size_type __pos )
      {

 ;

 ;
 _M_leak ( );
 return _M_data ( ) [ __pos ];
      }

      const_reference
      at ( size_type __n ) const
      {
 if ( __n >= this -> size ( ) )
   __throw_out_of_range ( ( "basic_string::at" ) );
 return _M_data ( ) [ __n ];
      }

      reference
      at ( size_type __n )
      {
 if ( __n >= size ( ) )
   __throw_out_of_range ( ( "basic_string::at" ) );
 _M_leak ( );
 return _M_data ( ) [ __n ];
      }







      basic_string &
      operator += ( const basic_string & __str )
      { return this -> append ( __str ); }






      basic_string &
      operator += ( const _CharT * __s )
      { return this -> append ( __s ); }






      basic_string &
      operator += ( _CharT __c )
      {
 this -> push_back ( __c );
 return * this;
      }

      basic_string &
      append ( const basic_string & __str );

      basic_string &
      append ( const basic_string & __str, size_type __pos, size_type __n );







      basic_string &
      append ( const _CharT * __s, size_type __n );






      basic_string &
      append ( const _CharT * __s )
      {
 ;
 return this -> append ( __s, traits_type :: length ( __s ) );
      }

      basic_string &
      append ( size_type __n, _CharT __c );

      template < class _InputIterator >
        basic_string &
        append ( _InputIterator __first, _InputIterator __last )
        { return this -> replace ( _M_iend ( ), _M_iend ( ), __first, __last ); }





      void
      push_back ( _CharT __c )
      {
 const size_type __len = 1 + this -> size ( );
 if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
   this -> reserve ( __len );
 traits_type :: assign ( _M_data ( ) [ this -> size ( ) ], __c );
 _M_rep ( ) -> _M_set_length_and_sharable ( __len );
      }






      basic_string &
      assign ( const basic_string & __str );

      basic_string &
      assign ( const basic_string & __str, size_type __pos, size_type __n )
      { return this -> assign ( __str . _M_data ( )
       + __str . _M_check ( __pos, "basic_string::assign" ),
       __str . _M_limit ( __pos, __n ) ); }

      basic_string &
      assign ( const _CharT * __s, size_type __n );

      basic_string &
      assign ( const _CharT * __s )
      {
 ;
 return this -> assign ( __s, traits_type :: length ( __s ) );
      }

      basic_string &
      assign ( size_type __n, _CharT __c )
      { return _M_replace_aux ( size_type ( 0 ), this -> size ( ), __n, __c ); }

      template < class _InputIterator >
        basic_string &
        assign ( _InputIterator __first, _InputIterator __last )
        { return this -> replace ( _M_ibegin ( ), _M_iend ( ), __first, __last ); }

      void
      insert ( iterator __p, size_type __n, _CharT __c )
      { this -> replace ( __p, __p, __n, __c ); }

      template < class _InputIterator >
        void
        insert ( iterator __p, _InputIterator __beg, _InputIterator __end )
        { this -> replace ( __p, __p, __beg, __end ); }

      basic_string &
      insert ( size_type __pos1, const basic_string & __str )
      { return this -> insert ( __pos1, __str, size_type ( 0 ), __str . size ( ) ); }

      basic_string &
      insert ( size_type __pos1, const basic_string & __str,
      size_type __pos2, size_type __n )
      { return this -> insert ( __pos1, __str . _M_data ( )
       + __str . _M_check ( __pos2, "basic_string::insert" ),
       __str . _M_limit ( __pos2, __n ) ); }

      basic_string &
      insert ( size_type __pos, const _CharT * __s, size_type __n );

      basic_string &
      insert ( size_type __pos, const _CharT * __s )
      {
 ;
 return this -> insert ( __pos, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      insert ( size_type __pos, size_type __n, _CharT __c )
      { return _M_replace_aux ( _M_check ( __pos, "basic_string::insert" ),
         size_type ( 0 ), __n, __c ); }

      iterator
      insert ( iterator __p, _CharT __c )
      {
 ;
 const size_type __pos = __p - _M_ibegin ( );
 _M_replace_aux ( __pos, size_type ( 0 ), size_type ( 1 ), __c );
 _M_rep ( ) -> _M_set_leaked ( );
 return iterator ( _M_data ( ) + __pos );
      }

      basic_string &
      erase ( size_type __pos = 0, size_type __n = npos )
      {
 _M_mutate ( _M_check ( __pos, "basic_string::erase" ),
    _M_limit ( __pos, __n ), size_type ( 0 ) );
 return * this;
      }

      iterator
      erase ( iterator __position )
      {
 ;

 const size_type __pos = __position - _M_ibegin ( );
 _M_mutate ( __pos, size_type ( 1 ), size_type ( 0 ) );
 _M_rep ( ) -> _M_set_leaked ( );
 return iterator ( _M_data ( ) + __pos );
      }

      iterator
      erase ( iterator __first, iterator __last )
      {
 ;

        const size_type __pos = __first - _M_ibegin ( );
 _M_mutate ( __pos, __last - __first, size_type ( 0 ) );
 _M_rep ( ) -> _M_set_leaked ( );
 return iterator ( _M_data ( ) + __pos );
      }

      basic_string &
      replace ( size_type __pos, size_type __n, const basic_string & __str )
      { return this -> replace ( __pos, __n, __str . _M_data ( ), __str . size ( ) ); }

      basic_string &
      replace ( size_type __pos1, size_type __n1, const basic_string & __str,
       size_type __pos2, size_type __n2 )
      { return this -> replace ( __pos1, __n1, __str . _M_data ( )
        + __str . _M_check ( __pos2, "basic_string::replace" ),
        __str . _M_limit ( __pos2, __n2 ) ); }

      basic_string &
      replace ( size_type __pos, size_type __n1, const _CharT * __s,
       size_type __n2 );

      basic_string &
      replace ( size_type __pos, size_type __n1, const _CharT * __s )
      {
 ;
 return this -> replace ( __pos, __n1, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      replace ( size_type __pos, size_type __n1, size_type __n2, _CharT __c )
      { return _M_replace_aux ( _M_check ( __pos, "basic_string::replace" ),
         _M_limit ( __pos, __n1 ), __n2, __c ); }

      basic_string &
      replace ( iterator __i1, iterator __i2, const basic_string & __str )
      { return this -> replace ( __i1, __i2, __str . _M_data ( ), __str . size ( ) ); }

      basic_string &
      replace ( iterator __i1, iterator __i2, const _CharT * __s, size_type __n )
      {
 ;

 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1, __s, __n );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, const _CharT * __s )
      {
 ;
 return this -> replace ( __i1, __i2, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, size_type __n, _CharT __c )
      {
 ;

 return _M_replace_aux ( __i1 - _M_ibegin ( ), __i2 - __i1, __n, __c );
      }

      template < class _InputIterator >
        basic_string &
        replace ( iterator __i1, iterator __i2,
  _InputIterator __k1, _InputIterator __k2 )
        {
   ;

   ;
   typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
   return _M_replace_dispatch ( __i1, __i2, __k1, __k2, _Integral ( ) );
 }



      basic_string &
      replace ( iterator __i1, iterator __i2, _CharT * __k1, _CharT * __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1, __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2,
       const _CharT * __k1, const _CharT * __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1, __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, iterator __k1, iterator __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1 . base ( ), __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2,
       const_iterator __k1, const_iterator __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1 . base ( ), __k2 - __k1 );
      }

    private :
      template < class _Integer >
 basic_string &
 _M_replace_dispatch ( iterator __i1, iterator __i2, _Integer __n,
       _Integer __val, __true_type )
        { return _M_replace_aux ( __i1 - _M_ibegin ( ), __i2 - __i1, __n, __val ); }

      template < class _InputIterator >
 basic_string &
 _M_replace_dispatch ( iterator __i1, iterator __i2, _InputIterator __k1,
       _InputIterator __k2, __false_type );

      basic_string &
      _M_replace_aux ( size_type __pos1, size_type __n1, size_type __n2,
       _CharT __c );

      basic_string &
      _M_replace_safe ( size_type __pos1, size_type __n1, const _CharT * __s,
        size_type __n2 );



      template < class _InIterator >
        static _CharT *
        _S_construct_aux ( _InIterator __beg, _InIterator __end,
    const _Alloc & __a, __false_type )
 {
          typedef typename iterator_traits < _InIterator > :: iterator_category _Tag;
          return _S_construct ( __beg, __end, __a, _Tag ( ) );
 }



      template < class _Integer >
        static _CharT *
        _S_construct_aux ( _Integer __beg, _Integer __end,
    const _Alloc & __a, __true_type )
        { return _S_construct ( static_cast < size_type > ( __beg ), __end, __a ); }

      template < class _InIterator >
        static _CharT *
        _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a )
 {
   typedef typename std :: __is_integer < _InIterator > :: __type _Integral;
   return _S_construct_aux ( __beg, __end, __a, _Integral ( ) );
        }


      template < class _InIterator >
        static _CharT *
         _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
        input_iterator_tag );



      template < class _FwdIterator >
        static _CharT *
        _S_construct ( _FwdIterator __beg, _FwdIterator __end, const _Alloc & __a,
       forward_iterator_tag );

      static _CharT *
      _S_construct ( size_type __req, _CharT __c, const _Alloc & __a );

    public :

      size_type
      copy ( _CharT * __s, size_type __n, size_type __pos = 0 ) const;

      void
      swap ( basic_string & __s );

      const _CharT *
      c_str ( ) const
      { return _M_data ( ); }







      const _CharT *
      data ( ) const
      { return _M_data ( ); }




      allocator_type
      get_allocator ( ) const
      { return _M_dataplus; }

      size_type
      find ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find ( _CharT __c, size_type __pos = 0 ) const;

      size_type
      rfind ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> rfind ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      rfind ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      rfind ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> rfind ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      rfind ( _CharT __c, size_type __pos = npos ) const;

      size_type
      find_first_of ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find_first_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_first_of ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find_first_of ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find_first_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_first_of ( _CharT __c, size_type __pos = 0 ) const
      { return this -> find ( __c, __pos ); }

      size_type
      find_last_of ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> find_last_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_last_of ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find_last_of ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> find_last_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_last_of ( _CharT __c, size_type __pos = npos ) const
      { return this -> rfind ( __c, __pos ); }

      size_type
      find_first_not_of ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find_first_not_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_first_not_of ( const _CharT * __s, size_type __pos,
   size_type __n ) const;

      size_type
      find_first_not_of ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find_first_not_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_first_not_of ( _CharT __c, size_type __pos = 0 ) const;

      size_type
      find_last_not_of ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> find_last_not_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_last_not_of ( const _CharT * __s, size_type __pos,
         size_type __n ) const;

      size_type
      find_last_not_of ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> find_last_not_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_last_not_of ( _CharT __c, size_type __pos = npos ) const;

      basic_string
      substr ( size_type __pos = 0, size_type __n = npos ) const
      { return basic_string ( * this,
       _M_check ( __pos, "basic_string::substr" ), __n ); }

      int
      compare ( const basic_string & __str ) const
      {
 const size_type __size = this -> size ( );
 const size_type __osize = __str . size ( );
 const size_type __len = std :: min ( __size, __osize );

 int __r = traits_type :: compare ( _M_data ( ), __str . data ( ), __len );
 if ( ! __r )
   __r = _S_compare ( __size, __osize );
 return __r;
      }

      int
      compare ( size_type __pos, size_type __n, const basic_string & __str ) const;

      int
      compare ( size_type __pos1, size_type __n1, const basic_string & __str,
       size_type __pos2, size_type __n2 ) const;

      int
      compare ( const _CharT * __s ) const;

      int
      compare ( size_type __pos, size_type __n1, const _CharT * __s ) const;

      int
      compare ( size_type __pos, size_type __n1, const _CharT * __s,
       size_type __n2 ) const;
  };
# 2146 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( )

    : _M_dataplus ( _S_empty_rep ( ) . _M_refdata ( ), _Alloc ( ) ) { }
# 2162 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      basic_string < _CharT, _Traits, _Alloc > __str ( __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 2178 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs );
# 2189 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( _CharT __lhs, const basic_string < _CharT, _Traits, _Alloc > & __rhs );
# 2199 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
      const _CharT * __rhs )
    {
      basic_string < _CharT, _Traits, _Alloc > __str ( __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 2215 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs, _CharT __rhs )
    {
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      __string_type __str ( __lhs );
      __str . append ( __size_type ( 1 ), __rhs );
      return __str;
    }
# 2233 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) == 0; }
# 2239 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT >
    inline
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value, bool > :: __type
    operator == ( const basic_string < _CharT > & __lhs,
        const basic_string < _CharT > & __rhs )
    { return ( __lhs . size ( ) == __rhs . size ( )
       && ! std :: char_traits < _CharT > :: compare ( __lhs . data ( ), __rhs . data ( ),
          __lhs . size ( ) ) ); }
# 2254 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) == 0; }
# 2266 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) == 0; }
# 2279 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return ! ( __lhs == __rhs ); }
# 2291 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return ! ( __lhs == __rhs ); }
# 2303 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return ! ( __lhs == __rhs ); }
# 2316 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) < 0; }
# 2328 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) < 0; }
# 2340 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) > 0; }
# 2353 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) > 0; }
# 2365 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) > 0; }
# 2377 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) < 0; }
# 2390 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) <= 0; }
# 2402 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) <= 0; }
# 2414 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) >= 0; }
# 2427 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) >= 0; }
# 2439 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) >= 0; }
# 2451 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const _CharT * __lhs,
      const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) <= 0; }
# 2464 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline void
    swap ( basic_string < _CharT, _Traits, _Alloc > & __lhs,
  basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { __lhs . swap ( __rhs ); }
# 2481 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __is,
        basic_string < _CharT, _Traits, _Alloc > & __str );
# 2488 "/usr/include/c++/4.4/bits/basic_string.h" 3
template<> basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & );
# 2499 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __os,
        const basic_string < _CharT, _Traits, _Alloc > & __str )
    {


      return __ostream_insert ( __os, __str . data ( ), __str . size ( ) );
    }
# 2522 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __is,
     basic_string < _CharT, _Traits, _Alloc > & __str, _CharT __delim );
# 2539 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __is,
     basic_string < _CharT, _Traits, _Alloc > & __str )
    { return getline ( __is, __str, __is . widen ( '\n' ) ); }
# 2547 "/usr/include/c++/4.4/bits/basic_string.h" 3
template<> basic_istream< char, char_traits< char> > &getline(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & , char );
# 2553 "/usr/include/c++/4.4/bits/basic_string.h" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &getline(basic_istream< wchar_t, char_traits< wchar_t> > & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & , wchar_t );
# 2557 "/usr/include/c++/4.4/bits/basic_string.h" 3
}
# 46 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 51 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_max_size = ((((npos - sizeof(typename ::std::basic_string< _CharT, _Traits, _Alloc> ::_Rep_base)) / sizeof(_CharT)) - 1) / 4);
# 53 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const _CharT
# 56 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_terminal = (_CharT());
# 58 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 60 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::npos;
# 64 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 66 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_empty_rep_storage[];
# 74 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InIterator >
      _CharT *
      basic_string < _CharT, _Traits, _Alloc > ::
      _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
     input_iterator_tag )
      {

 if ( __beg == __end && __a == _Alloc ( ) )
   return _S_empty_rep ( ) . _M_refdata ( );


 _CharT __buf [ 128 ];
 size_type __len = 0;
 while ( __beg != __end && __len < sizeof ( __buf ) / sizeof ( _CharT ) )
   {
     __buf [ __len ++ ] = * __beg;
     ++ __beg;
   }
 _Rep * __r = _Rep :: _S_create ( __len, size_type ( 0 ), __a );
 _M_copy ( __r -> _M_refdata ( ), __buf, __len );
 try
   {
     while ( __beg != __end )
       {
  if ( __len == __r -> _M_capacity )
    {

      _Rep * __another = _Rep :: _S_create ( __len + 1, __len, __a );
      _M_copy ( __another -> _M_refdata ( ), __r -> _M_refdata ( ), __len );
      __r -> _M_destroy ( __a );
      __r = __another;
    }
  __r -> _M_refdata ( ) [ __len ++ ] = * __beg;
  ++ __beg;
       }
   }
 catch ( ... )
   {
     __r -> _M_destroy ( __a );
     throw;
   }
 __r -> _M_set_length_and_sharable ( __len );
 return __r -> _M_refdata ( );
      }
# 120 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InIterator >
      _CharT *
      basic_string < _CharT, _Traits, _Alloc > ::
      _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
     forward_iterator_tag )
      {

 if ( __beg == __end && __a == _Alloc ( ) )
   return _S_empty_rep ( ) . _M_refdata ( );


 if ( __builtin_expect ( __gnu_cxx :: __is_null_pointer ( __beg )
        && __beg != __end, 0 ) )
   __throw_logic_error ( ( "basic_string::_S_construct NULL not valid" ) );

 const size_type __dnew = static_cast < size_type > ( std :: distance ( __beg,
              __end ) );

 _Rep * __r = _Rep :: _S_create ( __dnew, size_type ( 0 ), __a );
 try
   { _S_copy_chars ( __r -> _M_refdata ( ), __beg, __end ); }
 catch ( ... )
   {
     __r -> _M_destroy ( __a );
     throw;
   }
 __r -> _M_set_length_and_sharable ( __dnew );
 return __r -> _M_refdata ( );
      }
# 151 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    _CharT *
    basic_string < _CharT, _Traits, _Alloc > ::
    _S_construct ( size_type __n, _CharT __c, const _Alloc & __a )
    {

      if ( __n == 0 && __a == _Alloc ( ) )
 return _S_empty_rep ( ) . _M_refdata ( );


      _Rep * __r = _Rep :: _S_create ( __n, size_type ( 0 ), __a );
      if ( __n )
 _M_assign ( __r -> _M_refdata ( ), __n, __c );

      __r -> _M_set_length_and_sharable ( __n );
      return __r -> _M_refdata ( );
    }
# 169 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str )
    : _M_dataplus ( __str . _M_rep ( ) -> _M_grab ( _Alloc ( __str . get_allocator ( ) ),
       __str . get_allocator ( ) ),
    __str . get_allocator ( ) )
    { }
# 177 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _Alloc & __a )
    : _M_dataplus ( _S_construct ( size_type ( ), _CharT ( ), __a ), __a )
    { }
# 183 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str, size_type __pos, size_type __n )
    : _M_dataplus ( _S_construct ( __str . _M_data ( )
          + __str . _M_check ( __pos,
      "basic_string::basic_string" ),
          __str . _M_data ( ) + __str . _M_limit ( __pos, __n )
          + __pos, _Alloc ( ) ), _Alloc ( ) )
    { }
# 193 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str, size_type __pos,
   size_type __n, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __str . _M_data ( )
          + __str . _M_check ( __pos,
      "basic_string::basic_string" ),
          __str . _M_data ( ) + __str . _M_limit ( __pos, __n )
          + __pos, __a ), __a )
    { }
# 205 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _CharT * __s, size_type __n, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __s, __s + __n, __a ), __a )
    { }
# 212 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _CharT * __s, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __s, __s ? __s + traits_type :: length ( __s ) :
          __s + npos, __a ), __a )
    { }
# 219 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( size_type __n, _CharT __c, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __n, __c, __a ), __a )
    { }
# 226 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InputIterator >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( _InputIterator __beg, _InputIterator __end, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __beg, __end, __a ), __a )
    { }
# 241 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    assign ( const basic_string & __str )
    {
      if ( _M_rep ( ) != __str . _M_rep ( ) )
 {

   const allocator_type __a = this -> get_allocator ( );
   _CharT * __tmp = __str . _M_rep ( ) -> _M_grab ( __a, __str . get_allocator ( ) );
   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __tmp );
 }
      return * this;
    }
# 257 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    assign ( const _CharT * __s, size_type __n )
    {
      ;
      _M_check_length ( this -> size ( ), __n, "basic_string::assign" );
      if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
 return _M_replace_safe ( size_type ( 0 ), this -> size ( ), __s, __n );
      else
 {

   const size_type __pos = __s - _M_data ( );
   if ( __pos >= __n )
     _M_copy ( _M_data ( ), __s, __n );
   else if ( __pos )
     _M_move ( _M_data ( ), __s, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __n );
   return * this;
 }
     }
# 279 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( size_type __n, _CharT __c )
    {
      if ( __n )
 {
   _M_check_length ( size_type ( 0 ), __n, "basic_string::append" );
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_assign ( _M_data ( ) + this -> size ( ), __n, __c );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 296 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const _CharT * __s, size_type __n )
    {
      ;
      if ( __n )
 {
   _M_check_length ( size_type ( 0 ), __n, "basic_string::append" );
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     {
       if ( _M_disjunct ( __s ) )
  this -> reserve ( __len );
       else
  {
    const size_type __off = __s - _M_data ( );
    this -> reserve ( __len );
    __s = _M_data ( ) + __off;
  }
     }
   _M_copy ( _M_data ( ) + this -> size ( ), __s, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 323 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const basic_string & __str )
    {
      const size_type __size = __str . size ( );
      if ( __size )
 {
   const size_type __len = __size + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_copy ( _M_data ( ) + this -> size ( ), __str . _M_data ( ), __size );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 340 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const basic_string & __str, size_type __pos, size_type __n )
    {
      __str . _M_check ( __pos, "basic_string::append" );
      __n = __str . _M_limit ( __pos, __n );
      if ( __n )
 {
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_copy ( _M_data ( ) + this -> size ( ), __str . _M_data ( ) + __pos, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 358 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
     basic_string < _CharT, _Traits, _Alloc > &
     basic_string < _CharT, _Traits, _Alloc > ::
     insert ( size_type __pos, const _CharT * __s, size_type __n )
     {
       ;
       _M_check ( __pos, "basic_string::insert" );
       _M_check_length ( size_type ( 0 ), __n, "basic_string::insert" );
       if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
         return _M_replace_safe ( __pos, size_type ( 0 ), __s, __n );
       else
         {

           const size_type __off = __s - _M_data ( );
           _M_mutate ( __pos, 0, __n );
           __s = _M_data ( ) + __off;
           _CharT * __p = _M_data ( ) + __pos;
           if ( __s + __n <= __p )
             _M_copy ( __p, __s, __n );
           else if ( __s >= __p )
             _M_copy ( __p, __s + __n, __n );
           else
             {
        const size_type __nleft = __p - __s;
               _M_copy ( __p, __s, __nleft );
               _M_copy ( __p + __nleft, __p + __n, __n - __nleft );
             }
           return * this;
         }
     }
# 389 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
     basic_string < _CharT, _Traits, _Alloc > &
     basic_string < _CharT, _Traits, _Alloc > ::
     replace ( size_type __pos, size_type __n1, const _CharT * __s,
      size_type __n2 )
     {
       ;
       _M_check ( __pos, "basic_string::replace" );
       __n1 = _M_limit ( __pos, __n1 );
       _M_check_length ( __n1, __n2, "basic_string::replace" );
       bool __left;
       if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
         return _M_replace_safe ( __pos, __n1, __s, __n2 );
       else if ( ( __left = __s + __n2 <= _M_data ( ) + __pos )
  || _M_data ( ) + __pos + __n1 <= __s )
  {

    size_type __off = __s - _M_data ( );
    __left ? __off : ( __off += __n2 - __n1 );
    _M_mutate ( __pos, __n1, __n2 );
    _M_copy ( _M_data ( ) + __pos, _M_data ( ) + __off, __n2 );
    return * this;
  }
       else
  {

    const basic_string __tmp ( __s, __n2 );
    return _M_replace_safe ( __pos, __n1, __tmp . _M_data ( ), __n2 );
  }
     }
# 420 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _M_destroy ( const _Alloc & __a ) throw ( )
    {
      const size_type __size = sizeof ( _Rep_base ) +
                        ( this -> _M_capacity + 1 ) * sizeof ( _CharT );
      _Raw_bytes_alloc ( __a ) . deallocate ( reinterpret_cast < char * > ( this ), __size );
    }
# 430 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_leak_hard ( )
    {

      if ( _M_rep ( ) == & _S_empty_rep ( ) )
 return;

      if ( _M_rep ( ) -> _M_is_shared ( ) )
 _M_mutate ( 0, 0, 0 );
      _M_rep ( ) -> _M_set_leaked ( );
    }
# 444 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_mutate ( size_type __pos, size_type __len1, size_type __len2 )
    {
      const size_type __old_size = this -> size ( );
      const size_type __new_size = __old_size + __len2 - __len1;
      const size_type __how_much = __old_size - __pos - __len1;

      if ( __new_size > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
 {

   const allocator_type __a = get_allocator ( );
   _Rep * __r = _Rep :: _S_create ( __new_size, this -> capacity ( ), __a );

   if ( __pos )
     _M_copy ( __r -> _M_refdata ( ), _M_data ( ), __pos );
   if ( __how_much )
     _M_copy ( __r -> _M_refdata ( ) + __pos + __len2,
      _M_data ( ) + __pos + __len1, __how_much );

   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __r -> _M_refdata ( ) );
 }
      else if ( __how_much && __len1 != __len2 )
 {

   _M_move ( _M_data ( ) + __pos + __len2,
    _M_data ( ) + __pos + __len1, __how_much );
 }
      _M_rep ( ) -> _M_set_length_and_sharable ( __new_size );
    }
# 477 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    reserve ( size_type __res )
    {
      if ( __res != this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
        {

   if ( __res < this -> size ( ) )
     __res = this -> size ( );
   const allocator_type __a = get_allocator ( );
   _CharT * __tmp = _M_rep ( ) -> _M_clone ( __a, __res - this -> size ( ) );
   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __tmp );
        }
    }
# 494 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    swap ( basic_string & __s )
    {
      if ( _M_rep ( ) -> _M_is_leaked ( ) )
 _M_rep ( ) -> _M_set_sharable ( );
      if ( __s . _M_rep ( ) -> _M_is_leaked ( ) )
 __s . _M_rep ( ) -> _M_set_sharable ( );
      if ( this -> get_allocator ( ) == __s . get_allocator ( ) )
 {
   _CharT * __tmp = _M_data ( );
   _M_data ( __s . _M_data ( ) );
   __s . _M_data ( __tmp );
 }

      else
 {
   const basic_string __tmp1 ( _M_ibegin ( ), _M_iend ( ),
        __s . get_allocator ( ) );
   const basic_string __tmp2 ( __s . _M_ibegin ( ), __s . _M_iend ( ),
        this -> get_allocator ( ) );
   * this = __tmp2;
   __s = __tmp1;
 }
    }
# 521 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: _Rep *
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _S_create ( size_type __capacity, size_type __old_capacity,
       const _Alloc & __alloc )
    {


      if ( __capacity > _S_max_size )
 __throw_length_error ( ( "basic_string::_S_create" ) );

      const size_type __pagesize = 4096;
      const size_type __malloc_header_size = 4 * sizeof ( void * );







      if ( __capacity > __old_capacity && __capacity < 2 * __old_capacity )
 __capacity = 2 * __old_capacity;




      size_type __size = ( __capacity + 1 ) * sizeof ( _CharT ) + sizeof ( _Rep );

      const size_type __adj_size = __size + __malloc_header_size;
      if ( __adj_size > __pagesize && __capacity > __old_capacity )
 {
   const size_type __extra = __pagesize - __adj_size % __pagesize;
   __capacity += __extra / sizeof ( _CharT );

   if ( __capacity > _S_max_size )
     __capacity = _S_max_size;
   __size = ( __capacity + 1 ) * sizeof ( _CharT ) + sizeof ( _Rep );
 }



      void * __place = _Raw_bytes_alloc ( __alloc ) . allocate ( __size );
      _Rep * __p = new ( __place ) _Rep;
      __p -> _M_capacity = __capacity;







      __p -> _M_set_sharable ( );
      return __p;
    }
# 599 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    _CharT *
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _M_clone ( const _Alloc & __alloc, size_type __res )
    {

      const size_type __requested_cap = this -> _M_length + __res;
      _Rep * __r = _Rep :: _S_create ( __requested_cap, this -> _M_capacity,
      __alloc );
      if ( this -> _M_length )
 _M_copy ( __r -> _M_refdata ( ), _M_refdata ( ), this -> _M_length );

      __r -> _M_set_length_and_sharable ( this -> _M_length );
      return __r -> _M_refdata ( );
    }
# 615 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    resize ( size_type __n, _CharT __c )
    {
      const size_type __size = this -> size ( );
      _M_check_length ( __size, __n, "basic_string::resize" );
      if ( __size < __n )
 this -> append ( __n - __size, __c );
      else if ( __n < __size )
 this -> erase ( __n );

    }
# 629 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InputIterator >
      basic_string < _CharT, _Traits, _Alloc > &
      basic_string < _CharT, _Traits, _Alloc > ::
      _M_replace_dispatch ( iterator __i1, iterator __i2, _InputIterator __k1,
     _InputIterator __k2, __false_type )
      {
 const basic_string __s ( __k1, __k2 );
 const size_type __n1 = __i2 - __i1;
 _M_check_length ( __n1, __s . size ( ), "basic_string::_M_replace_dispatch" );
 return _M_replace_safe ( __i1 - _M_ibegin ( ), __n1, __s . _M_data ( ),
          __s . size ( ) );
      }
# 643 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_replace_aux ( size_type __pos1, size_type __n1, size_type __n2,
     _CharT __c )
    {
      _M_check_length ( __n1, __n2, "basic_string::_M_replace_aux" );
      _M_mutate ( __pos1, __n1, __n2 );
      if ( __n2 )
 _M_assign ( _M_data ( ) + __pos1, __n2, __c );
      return * this;
    }
# 656 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_replace_safe ( size_type __pos1, size_type __n1, const _CharT * __s,
      size_type __n2 )
    {
      _M_mutate ( __pos1, __n1, __n2 );
      if ( __n2 )
 _M_copy ( _M_data ( ) + __pos1, __s, __n2 );
      return * this;
    }
# 668 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      ;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      const __size_type __len = _Traits :: length ( __lhs );
      __string_type __str;
      __str . reserve ( __len + __rhs . size ( ) );
      __str . append ( __lhs, __len );
      __str . append ( __rhs );
      return __str;
    }
# 684 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( _CharT __lhs, const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      __string_type __str;
      const __size_type __len = __rhs . size ( );
      __str . reserve ( __len + 1 );
      __str . append ( __size_type ( 1 ), __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 698 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    copy ( _CharT * __s, size_type __n, size_type __pos ) const
    {
      _M_check ( __pos, "basic_string::copy" );
      __n = _M_limit ( __pos, __n );
      ;
      if ( __n )
 _M_copy ( __s, _M_data ( ) + __pos, __n );

      return __n;
    }
# 712 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      const size_type __size = this -> size ( );
      const _CharT * __data = _M_data ( );

      if ( __n == 0 )
 return __pos <= __size ? __pos : npos;

      if ( __n <= __size )
 {
   for (; __pos <= __size - __n; ++ __pos )
     if ( traits_type :: eq ( __data [ __pos ], __s [ 0 ] )
  && traits_type :: compare ( __data + __pos + 1,
     __s + 1, __n - 1 ) == 0 )
       return __pos;
 }
      return npos;
    }
# 735 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find ( _CharT __c, size_type __pos ) const
    {
      size_type __ret = npos;
      const size_type __size = this -> size ( );
      if ( __pos < __size )
 {
   const _CharT * __data = _M_data ( );
   const size_type __n = __size - __pos;
   const _CharT * __p = traits_type :: find ( __data + __pos, __n, __c );
   if ( __p )
     __ret = __p - __data;
 }
      return __ret;
    }
# 753 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    rfind ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      const size_type __size = this -> size ( );
      if ( __n <= __size )
 {
   __pos = std :: min ( size_type ( __size - __n ), __pos );
   const _CharT * __data = _M_data ( );
   do
     {
       if ( traits_type :: compare ( __data + __pos, __s, __n ) == 0 )
  return __pos;
     }
   while ( __pos -- > 0 );
 }
      return npos;
    }
# 774 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    rfind ( _CharT __c, size_type __pos ) const
    {
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   for ( ++ __size; __size -- > 0; )
     if ( traits_type :: eq ( _M_data ( ) [ __size ], __c ) )
       return __size;
 }
      return npos;
    }
# 791 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      for (; __n && __pos < this -> size ( ); ++ __pos )
 {
   const _CharT * __p = traits_type :: find ( __s, __n, _M_data ( ) [ __pos ] );
   if ( __p )
     return __pos;
 }
      return npos;
    }
# 806 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      size_type __size = this -> size ( );
      if ( __size && __n )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( traits_type :: find ( __s, __n, _M_data ( ) [ __size ] ) )
  return __size;
     }
   while ( __size -- != 0 );
 }
      return npos;
    }
# 827 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_not_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      for (; __pos < this -> size ( ); ++ __pos )
 if ( ! traits_type :: find ( __s, __n, _M_data ( ) [ __pos ] ) )
   return __pos;
      return npos;
    }
# 839 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_not_of ( _CharT __c, size_type __pos ) const
    {
      for (; __pos < this -> size ( ); ++ __pos )
 if ( ! traits_type :: eq ( _M_data ( ) [ __pos ], __c ) )
   return __pos;
      return npos;
    }
# 850 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_not_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( ! traits_type :: find ( __s, __n, _M_data ( ) [ __size ] ) )
  return __size;
     }
   while ( __size -- );
 }
      return npos;
    }
# 871 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_not_of ( _CharT __c, size_type __pos ) const
    {
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( ! traits_type :: eq ( _M_data ( ) [ __size ], __c ) )
  return __size;
     }
   while ( __size -- );
 }
      return npos;
    }
# 891 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n, const basic_string & __str ) const
    {
      _M_check ( __pos, "basic_string::compare" );
      __n = _M_limit ( __pos, __n );
      const size_type __osize = __str . size ( );
      const size_type __len = std :: min ( __n, __osize );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __str . data ( ), __len );
      if ( ! __r )
 __r = _S_compare ( __n, __osize );
      return __r;
    }
# 906 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos1, size_type __n1, const basic_string & __str,
     size_type __pos2, size_type __n2 ) const
    {
      _M_check ( __pos1, "basic_string::compare" );
      __str . _M_check ( __pos2, "basic_string::compare" );
      __n1 = _M_limit ( __pos1, __n1 );
      __n2 = __str . _M_limit ( __pos2, __n2 );
      const size_type __len = std :: min ( __n1, __n2 );
      int __r = traits_type :: compare ( _M_data ( ) + __pos1,
         __str . data ( ) + __pos2, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __n2 );
      return __r;
    }
# 924 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( const _CharT * __s ) const
    {
      ;
      const size_type __size = this -> size ( );
      const size_type __osize = traits_type :: length ( __s );
      const size_type __len = std :: min ( __size, __osize );
      int __r = traits_type :: compare ( _M_data ( ), __s, __len );
      if ( ! __r )
 __r = _S_compare ( __size, __osize );
      return __r;
    }
# 939 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n1, const _CharT * __s ) const
    {
      ;
      _M_check ( __pos, "basic_string::compare" );
      __n1 = _M_limit ( __pos, __n1 );
      const size_type __osize = traits_type :: length ( __s );
      const size_type __len = std :: min ( __n1, __osize );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __s, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __osize );
      return __r;
    }
# 955 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n1, const _CharT * __s,
     size_type __n2 ) const
    {
      ;
      _M_check ( __pos, "basic_string::compare" );
      __n1 = _M_limit ( __pos, __n1 );
      const size_type __len = std :: min ( __n1, __n2 );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __s, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __n2 );
      return __r;
    }
# 972 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in,
        basic_string < _CharT, _Traits, _Alloc > & __str )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __istream_type :: ios_base __ios_base;
      typedef typename __istream_type :: int_type __int_type;
      typedef typename __string_type :: size_type __size_type;
      typedef ctype < _CharT > __ctype_type;
      typedef typename __ctype_type :: ctype_base __ctype_base;

      __size_type __extracted = 0;
      typename __ios_base :: iostate __err = __ios_base :: goodbit;
      typename __istream_type :: sentry __cerb ( __in, false );
      if ( __cerb )
 {
   try
     {

       __str . erase ( );
       _CharT __buf [ 128 ];
       __size_type __len = 0;
       const streamsize __w = __in . width ( );
       const __size_type __n = __w > 0 ? static_cast < __size_type > ( __w )
                                : __str . max_size ( );
       const __ctype_type & __ct = use_facet < __ctype_type > ( __in . getloc ( ) );
       const __int_type __eof = _Traits :: eof ( );
       __int_type __c = __in . rdbuf ( ) -> sgetc ( );

       while ( __extracted < __n
       && ! _Traits :: eq_int_type ( __c, __eof )
       && ! __ct . is ( __ctype_base :: space,
     _Traits :: to_char_type ( __c ) ) )
  {
    if ( __len == sizeof ( __buf ) / sizeof ( _CharT ) )
      {
        __str . append ( __buf, sizeof ( __buf ) / sizeof ( _CharT ) );
        __len = 0;
      }
    __buf [ __len ++ ] = _Traits :: to_char_type ( __c );
    ++ __extracted;
    __c = __in . rdbuf ( ) -> snextc ( );
  }
       __str . append ( __buf, __len );

       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __err |= __ios_base :: eofbit;
       __in . width ( 0 );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     {



       __in . _M_setstate ( __ios_base :: badbit );
     }
 }

      if ( ! __extracted )
 __err |= __ios_base :: failbit;
      if ( __err )
 __in . setstate ( __err );
      return __in;
    }
# 1044 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __in,
     basic_string < _CharT, _Traits, _Alloc > & __str, _CharT __delim )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __istream_type :: ios_base __ios_base;
      typedef typename __istream_type :: int_type __int_type;
      typedef typename __string_type :: size_type __size_type;

      __size_type __extracted = 0;
      const __size_type __n = __str . max_size ( );
      typename __ios_base :: iostate __err = __ios_base :: goodbit;
      typename __istream_type :: sentry __cerb ( __in, true );
      if ( __cerb )
 {
   try
     {
       __str . erase ( );
       const __int_type __idelim = _Traits :: to_int_type ( __delim );
       const __int_type __eof = _Traits :: eof ( );
       __int_type __c = __in . rdbuf ( ) -> sgetc ( );

       while ( __extracted < __n
       && ! _Traits :: eq_int_type ( __c, __eof )
       && ! _Traits :: eq_int_type ( __c, __idelim ) )
  {
    __str += _Traits :: to_char_type ( __c );
    ++ __extracted;
    __c = __in . rdbuf ( ) -> snextc ( );
  }

       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __err |= __ios_base :: eofbit;
       else if ( _Traits :: eq_int_type ( __c, __idelim ) )
  {
    ++ __extracted;
    __in . rdbuf ( ) -> sbumpc ( );
  }
       else
  __err |= __ios_base :: failbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     {



       __in . _M_setstate ( __ios_base :: badbit );
     }
 }
      if ( ! __extracted )
 __err |= __ios_base :: failbit;
      if ( __err )
 __in . setstate ( __err );
      return __in;
    }
# 1111 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template class basic_string< char, char_traits< char> , allocator< char> > ;
# 1112 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & );
# 1115 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const basic_string< char, char_traits< char> , allocator< char> > & );
# 1118 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< char, char_traits< char> > &getline(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & , char );
# 1121 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< char, char_traits< char> > &getline(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & );
# 1126 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template class basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > ;
# 1127 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1130 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , const basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1133 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &getline(basic_istream< wchar_t, char_traits< wchar_t> > & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & , wchar_t );
# 1136 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &getline(basic_istream< wchar_t, char_traits< wchar_t> > & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1142 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
}
# 45 "/usr/include/c++/4.4/bits/locale_classes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 61 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale {
# 66 "/usr/include/c++/4.4/bits/locale_classes.h" 3
public: typedef int category;
# 69 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class facet;
# 70 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class id;
# 71 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class _Impl;
# 73 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class facet;
# 74 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class _Impl;
# 76 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 80 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 84 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Cache> friend struct __use_cache;
# 97 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category none = 0;
# 98 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category ctype = (1L << 0);
# 99 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category numeric = (1L << 1);
# 100 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category collate = (1L << 2);
# 101 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category time = (1L << 3);
# 102 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category monetary = (1L << 4);
# 103 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category messages = (1L << 5);
# 104 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category all = (((((ctype | numeric) | collate) | time) | monetary) | messages);
# 116 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale() throw();
# 125 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale(const locale & ) throw();
# 136 "/usr/include/c++/4.4/bits/locale_classes.h" 3
explicit locale(const char * );
# 150 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale(const locale & , const char * , category );
# 163 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale(const locale & , const locale & , category );
# 175 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Facet >
      locale ( const locale & __other, _Facet * __f );
# 179 "/usr/include/c++/4.4/bits/locale_classes.h" 3
~locale() throw();
# 190 "/usr/include/c++/4.4/bits/locale_classes.h" 3
const locale &operator=(const locale & ) throw();
# 204 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Facet >
      locale
      combine ( const locale & __other ) const;
# 214 "/usr/include/c++/4.4/bits/locale_classes.h" 3
string name() const;
# 224 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool operator==(const locale & ) const throw();
# 233 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool operator!=(const locale &__other) const throw()
# 234 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ return !this->operator==(__other); }
# 251 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Char, typename _Traits, typename _Alloc >
      bool
      operator ( ) ( const basic_string < _Char, _Traits, _Alloc > & __s1,
   const basic_string < _Char, _Traits, _Alloc > & __s2 ) const;
# 268 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static locale global(const locale &);
# 274 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale &classic();
# 278 "/usr/include/c++/4.4/bits/locale_classes.h" 3
private: _Impl *_M_impl;
# 281 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static _Impl *_S_classic;
# 284 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static _Impl *_S_global;
# 290 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const char *const *const _S_categories;
# 302 "/usr/include/c++/4.4/bits/locale_classes.h" 3
enum { _S_categories_size = 12};
# 305 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __gthread_once_t _S_once;
# 309 "/usr/include/c++/4.4/bits/locale_classes.h" 3
explicit locale(_Impl *) throw();
# 312 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_initialize();
# 315 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_initialize_once();
# 318 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static category _S_normalize_category(category);
# 321 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_coalesce(const locale & , const locale & , category );
# 322 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 335 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale::facet {
# 338 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale;
# 339 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale::_Impl;
# 341 "/usr/include/c++/4.4/bits/locale_classes.h" 3
mutable _Atomic_word _M_refcount;
# 344 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __c_locale _S_c_locale;
# 347 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const char _S_c_name[2];
# 350 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __gthread_once_t _S_once;
# 354 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_initialize_once();
# 367 "/usr/include/c++/4.4/bits/locale_classes.h" 3
protected: explicit facet(size_t __refs = (0)) throw() : _M_refcount(((__refs) ? 1 : 0))
# 368 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ }
# 372 "/usr/include/c++/4.4/bits/locale_classes.h" 3
virtual ~facet();
# 375 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_create_c_locale(__c_locale & , const char * , __c_locale = 0);
# 379 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __c_locale _S_clone_c_locale(__c_locale & );
# 382 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_destroy_c_locale(__c_locale & );
# 387 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __c_locale _S_get_c_locale();
# 390 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const char *_S_get_c_name();
# 394 "/usr/include/c++/4.4/bits/locale_classes.h" 3
private: void _M_add_reference() const throw()
# 395 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 398 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_remove_reference() const throw()
# 399 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 400 "/usr/include/c++/4.4/bits/locale_classes.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1) == 1)
# 401 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 402 "/usr/include/c++/4.4/bits/locale_classes.h" 3
try
# 403 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ delete this; }
# 404 "/usr/include/c++/4.4/bits/locale_classes.h" 3
catch (...)
# 405 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ }
# 406 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 407 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 409 "/usr/include/c++/4.4/bits/locale_classes.h" 3
facet(const locale::facet &);
# 412 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale::facet &operator=(const locale::facet &);
# 413 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 426 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale::id {
# 429 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale;
# 430 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale::_Impl;
# 432 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 436 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 443 "/usr/include/c++/4.4/bits/locale_classes.h" 3
mutable size_t _M_index;
# 446 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static _Atomic_word _S_refcount;
# 449 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void operator=(const locale::id &);
# 451 "/usr/include/c++/4.4/bits/locale_classes.h" 3
id(const locale::id &);
# 457 "/usr/include/c++/4.4/bits/locale_classes.h" 3
public: id() { }
# 460 "/usr/include/c++/4.4/bits/locale_classes.h" 3
size_t _M_id() const;
# 461 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 465 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale::_Impl {
# 469 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale;
# 470 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale::facet;
# 472 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 476 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 480 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Cache> friend struct __use_cache;
# 485 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Atomic_word _M_refcount;
# 486 "/usr/include/c++/4.4/bits/locale_classes.h" 3
const locale::facet **_M_facets;
# 487 "/usr/include/c++/4.4/bits/locale_classes.h" 3
size_t _M_facets_size;
# 488 "/usr/include/c++/4.4/bits/locale_classes.h" 3
const locale::facet **_M_caches;
# 489 "/usr/include/c++/4.4/bits/locale_classes.h" 3
char **_M_names;
# 490 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_ctype[];
# 491 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_numeric[];
# 492 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_collate[];
# 493 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_time[];
# 494 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_monetary[];
# 495 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_messages[];
# 496 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const *const _S_facet_categories[];
# 499 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_add_reference() throw()
# 500 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 503 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_remove_reference() throw()
# 504 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 505 "/usr/include/c++/4.4/bits/locale_classes.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1) == 1)
# 506 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 507 "/usr/include/c++/4.4/bits/locale_classes.h" 3
try
# 508 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ delete this; }
# 509 "/usr/include/c++/4.4/bits/locale_classes.h" 3
catch (...)
# 510 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ }
# 511 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 512 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 514 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(const locale::_Impl &, size_t);
# 515 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(const char *, size_t);
# 516 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(size_t) throw();
# 518 "/usr/include/c++/4.4/bits/locale_classes.h" 3
~_Impl() throw();
# 520 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(const locale::_Impl &);
# 523 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void operator=(const locale::_Impl &);
# 526 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool _M_check_same_name()
# 527 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 528 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool __ret = true;
# 529 "/usr/include/c++/4.4/bits/locale_classes.h" 3
if ((_M_names)[1]) {
# 531 "/usr/include/c++/4.4/bits/locale_classes.h" 3
for (size_t __i = (0); __ret && (__i < ((_S_categories_size) - 1)); ++__i) {
# 532 "/usr/include/c++/4.4/bits/locale_classes.h" 3
__ret = (__builtin_strcmp((_M_names)[__i], (_M_names)[__i + (1)]) == 0); } }
# 533 "/usr/include/c++/4.4/bits/locale_classes.h" 3
return __ret;
# 534 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 537 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_replace_categories(const locale::_Impl *, locale::category);
# 540 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_replace_category(const locale::_Impl *, const locale::id *const *);
# 543 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_replace_facet(const locale::_Impl *, const locale::id *);
# 546 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_install_facet(const locale::id *, const locale::facet *);
# 548 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Facet >
      void
      _M_init_facet ( _Facet * __facet )
      { _M_install_facet ( & _Facet :: id, __facet ); }
# 554 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_install_cache(const locale::facet *, size_t);
# 555 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 569 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> bool has_facet(const locale & ) throw();
# 586 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> const _Facet &use_facet(const locale & );
# 603 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _CharT >
    class collate : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;


    protected :


      __c_locale _M_c_locale_collate;

    public :

      static locale :: id id;

      explicit
      collate ( size_t __refs = 0 )
      : facet ( __refs ), _M_c_locale_collate ( _S_get_c_locale ( ) )
      { }

      explicit
      collate ( __c_locale __cloc, size_t __refs = 0 )
      : facet ( __refs ), _M_c_locale_collate ( _S_clone_c_locale ( __cloc ) )
      { }

      int
      compare ( const _CharT * __lo1, const _CharT * __hi1,
       const _CharT * __lo2, const _CharT * __hi2 ) const
      { return this -> do_compare ( __lo1, __hi1, __lo2, __hi2 ); }

      string_type
      transform ( const _CharT * __lo, const _CharT * __hi ) const
      { return this -> do_transform ( __lo, __hi ); }

      long
      hash ( const _CharT * __lo, const _CharT * __hi ) const
      { return this -> do_hash ( __lo, __hi ); }


      int
      _M_compare ( const _CharT *, const _CharT * ) const;

      size_t
      _M_transform ( _CharT *, const _CharT *, size_t ) const;

  protected :

      virtual
      ~ collate ( )
      { _S_destroy_c_locale ( _M_c_locale_collate ); }

      virtual int
      do_compare ( const _CharT * __lo1, const _CharT * __hi1,
   const _CharT * __lo2, const _CharT * __hi2 ) const;

      virtual string_type
      do_transform ( const _CharT * __lo, const _CharT * __hi ) const;

      virtual long
      do_hash ( const _CharT * __lo, const _CharT * __hi ) const;
    };
# 756 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _CharT> locale::id
# 757 "/usr/include/c++/4.4/bits/locale_classes.h" 3
collate< _CharT> ::id;
# 762 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> int collate< char> ::_M_compare(const char *, const char *) const;
# 766 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> size_t collate< char> ::_M_transform(char *, const char *, size_t) const;
# 771 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> int collate< wchar_t> ::_M_compare(const wchar_t *, const wchar_t *) const;
# 775 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> size_t collate< wchar_t> ::_M_transform(wchar_t *, const wchar_t *, size_t) const;
# 779 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _CharT >
    class collate_byname : public collate < _CharT >
    {
    public :


      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;


      explicit
      collate_byname ( const char * __s, size_t __refs = 0 )
      : collate < _CharT > ( __refs )
      {
 if ( __builtin_strcmp ( __s, "C" ) != 0
     && __builtin_strcmp ( __s, "POSIX" ) != 0 )
   {
     this -> _S_destroy_c_locale ( this -> _M_c_locale_collate );
     this -> _S_create_c_locale ( this -> _M_c_locale_collate, __s );
   }
      }

    protected :
      virtual
      ~ collate_byname ( ) { }
    };
# 806 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 39 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    locale ::
    locale ( const locale & __other, _Facet * __f )
    {
      _M_impl = new _Impl ( * __other . _M_impl, 1 );

      try
 { _M_impl -> _M_install_facet ( & _Facet :: id, __f ); }
      catch ( ... )
 {
   _M_impl -> _M_remove_reference ( );
   throw;
 }
      delete [ ] _M_impl -> _M_names [ 0 ];
      _M_impl -> _M_names [ 0 ] = 0;
    }
# 58 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    locale
    locale ::
    combine ( const locale & __other ) const
    {
      _Impl * __tmp = new _Impl ( * _M_impl, 1 );
      try
 {
   __tmp -> _M_replace_facet ( __other . _M_impl, & _Facet :: id );
 }
      catch ( ... )
 {
   __tmp -> _M_remove_reference ( );
   throw;
 }
      return locale ( __tmp );
    }
# 76 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    bool
    locale ::
    operator ( ) ( const basic_string < _CharT, _Traits, _Alloc > & __s1,
        const basic_string < _CharT, _Traits, _Alloc > & __s2 ) const
    {
      typedef std :: collate < _CharT > __collate_type;
      const __collate_type & __collate = use_facet < __collate_type > ( * this );
      return ( __collate . compare ( __s1 . data ( ), __s1 . data ( ) + __s1 . length ( ),
    __s2 . data ( ), __s2 . data ( ) + __s2 . length ( ) ) < 0 );
    }
# 89 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    bool
    has_facet ( const locale & __loc ) throw ( )
    {
      const size_t __i = _Facet :: id . _M_id ( );
      const locale :: facet * * __facets = __loc . _M_impl -> _M_facets;
      return ( __i < __loc . _M_impl -> _M_facets_size

       && dynamic_cast < const _Facet * > ( __facets [ __i ] ) );



    }
# 103 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    const _Facet &
    use_facet ( const locale & __loc )
    {
      const size_t __i = _Facet :: id . _M_id ( );
      const locale :: facet * * __facets = __loc . _M_impl -> _M_facets;
      if ( __i >= __loc . _M_impl -> _M_facets_size || ! __facets [ __i ] )
        __throw_bad_cast ( );

      return dynamic_cast < const _Facet & > ( * __facets [ __i ] );



    }
# 120 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    int
    collate < _CharT > :: _M_compare ( const _CharT *, const _CharT * ) const
    { return 0; }
# 126 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    size_t
    collate < _CharT > :: _M_transform ( _CharT *, const _CharT *, size_t ) const
    { return 0; }
# 131 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    int
    collate < _CharT > ::
    do_compare ( const _CharT * __lo1, const _CharT * __hi1,
        const _CharT * __lo2, const _CharT * __hi2 ) const
    {


      const string_type __one ( __lo1, __hi1 );
      const string_type __two ( __lo2, __hi2 );

      const _CharT * __p = __one . c_str ( );
      const _CharT * __pend = __one . data ( ) + __one . length ( );
      const _CharT * __q = __two . c_str ( );
      const _CharT * __qend = __two . data ( ) + __two . length ( );




      for (;; )
 {
   const int __res = _M_compare ( __p, __q );
   if ( __res )
     return __res;

   __p += char_traits < _CharT > :: length ( __p );
   __q += char_traits < _CharT > :: length ( __q );
   if ( __p == __pend && __q == __qend )
     return 0;
   else if ( __p == __pend )
     return - 1;
   else if ( __q == __qend )
     return 1;

   __p ++;
   __q ++;
 }
    }
# 170 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    typename collate < _CharT > :: string_type
    collate < _CharT > ::
    do_transform ( const _CharT * __lo, const _CharT * __hi ) const
    {
      string_type __ret;


      const string_type __str ( __lo, __hi );

      const _CharT * __p = __str . c_str ( );
      const _CharT * __pend = __str . data ( ) + __str . length ( );

      size_t __len = ( __hi - __lo ) * 2;

      _CharT * __c = new _CharT [ __len ];

      try
 {



   for (;; )
     {

       size_t __res = _M_transform ( __c, __p, __len );


       if ( __res >= __len )
  {
    __len = __res + 1;
    delete [ ] __c, __c = 0;
    __c = new _CharT [ __len ];
    __res = _M_transform ( __c, __p, __len );
  }

       __ret . append ( __c, __res );
       __p += char_traits < _CharT > :: length ( __p );
       if ( __p == __pend )
  break;

       __p ++;
       __ret . push_back ( _CharT ( ) );
     }
 }
      catch ( ... )
 {
   delete [ ] __c;
   throw;
 }

      delete [ ] __c;

      return __ret;
    }
# 226 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    long
    collate < _CharT > ::
    do_hash ( const _CharT * __lo, const _CharT * __hi ) const
    {
      unsigned long __val = 0;
      for (; __lo < __hi; ++ __lo )
 __val =
   * __lo + ( ( __val << 7 )
     | ( __val >> ( __gnu_cxx :: __numeric_traits < unsigned long > ::
    __digits - 7 ) ) );
      return static_cast < long > ( __val );
    }
# 244 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate< char> ;
# 245 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate_byname< char> ;
# 247 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template const collate< char> &use_facet< collate< char> > (const locale &);
# 251 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template bool has_facet< collate< char> > (const locale &) throw();
# 256 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate< wchar_t> ;
# 257 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate_byname< wchar_t> ;
# 259 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template const collate< wchar_t> &use_facet< collate< wchar_t> > (const locale &);
# 263 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template bool has_facet< collate< wchar_t> > (const locale &) throw();
# 269 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
}
# 54 "/usr/include/c++/4.4/bits/ios_base.h" 3
namespace std __attribute((__visibility__("default"))) {
# 60 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Fmtflags {
# 62 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_boolalpha = 1,
# 63 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_dec,
# 64 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_fixed = 4,
# 65 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_hex = 8,
# 66 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_internal = 16,
# 67 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_left = 32,
# 68 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_oct = 64,
# 69 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_right = 128,
# 70 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_scientific = 256,
# 71 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_showbase = 512,
# 72 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_showpoint = 1024,
# 73 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_showpos = 2048,
# 74 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_skipws = 4096,
# 75 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_unitbuf = 8192,
# 76 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_uppercase = 16384,
# 77 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_adjustfield = 176,
# 78 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_basefield = 74,
# 79 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_floatfield = 260,
# 80 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_fmtflags_end = 65536
# 81 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 84 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 85 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 88 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 89 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 92 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 93 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 96 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags &operator|=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 97 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a | __b); }
# 100 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags &operator&=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 101 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a & __b); }
# 104 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags &operator^=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 105 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a ^ __b); }
# 108 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator~(_Ios_Fmtflags __a)
# 109 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)(~(static_cast< int>(__a))); }
# 112 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Openmode {
# 114 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_app = 1,
# 115 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ate,
# 116 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_bin = 4,
# 117 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_in = 8,
# 118 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_out = 16,
# 119 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_trunc = 32,
# 120 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_openmode_end = 65536
# 121 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 124 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator&(_Ios_Openmode __a, _Ios_Openmode __b)
# 125 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 128 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator|(_Ios_Openmode __a, _Ios_Openmode __b)
# 129 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 132 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator^(_Ios_Openmode __a, _Ios_Openmode __b)
# 133 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 136 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode &operator|=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 137 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a | __b); }
# 140 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode &operator&=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 141 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a & __b); }
# 144 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode &operator^=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 145 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a ^ __b); }
# 148 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator~(_Ios_Openmode __a)
# 149 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)(~(static_cast< int>(__a))); }
# 152 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Iostate {
# 154 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_goodbit,
# 155 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_badbit,
# 156 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_eofbit,
# 157 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_failbit = 4,
# 158 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_iostate_end = 65536
# 159 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 162 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator&(_Ios_Iostate __a, _Ios_Iostate __b)
# 163 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 166 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator|(_Ios_Iostate __a, _Ios_Iostate __b)
# 167 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 170 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator^(_Ios_Iostate __a, _Ios_Iostate __b)
# 171 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 174 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate &operator|=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 175 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a | __b); }
# 178 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate &operator&=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 179 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a & __b); }
# 182 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate &operator^=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 183 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a ^ __b); }
# 186 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator~(_Ios_Iostate __a)
# 187 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)(~(static_cast< int>(__a))); }
# 189 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Seekdir {
# 191 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_beg,
# 192 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_cur,
# 193 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_end,
# 194 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_seekdir_end = 65536
# 195 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 207 "/usr/include/c++/4.4/bits/ios_base.h" 3
class ios_base {
# 217 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: class failure : public exception {
# 223 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: explicit failure(const string & ) throw();
# 228 "/usr/include/c++/4.4/bits/ios_base.h" 3
virtual ~failure() throw();
# 231 "/usr/include/c++/4.4/bits/ios_base.h" 3
virtual const char *what() const throw();
# 234 "/usr/include/c++/4.4/bits/ios_base.h" 3
private: string _M_msg;
# 235 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 263 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Fmtflags fmtflags;
# 266 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags boolalpha = ((fmtflags)1);
# 269 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags dec = ((fmtflags)2);
# 272 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags fixed = ((fmtflags)4);
# 275 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags hex = ((fmtflags)8);
# 280 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags internal = ((fmtflags)16);
# 284 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags left = ((fmtflags)32);
# 287 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags oct = ((fmtflags)64);
# 291 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags right = ((fmtflags)128);
# 294 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags scientific = ((fmtflags)256);
# 298 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags showbase = ((fmtflags)512);
# 302 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags showpoint = ((fmtflags)1024);
# 305 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags showpos = ((fmtflags)2048);
# 308 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags skipws = ((fmtflags)4096);
# 311 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags unitbuf = ((fmtflags)8192);
# 315 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags uppercase = ((fmtflags)16384);
# 318 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags adjustfield = ((fmtflags)176);
# 321 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags basefield = ((fmtflags)74);
# 324 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags floatfield = ((fmtflags)260);
# 338 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Iostate iostate;
# 342 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate badbit = ((iostate)1);
# 345 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate eofbit = ((iostate)2);
# 350 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate failbit = ((iostate)4);
# 353 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate goodbit = ((iostate)0);
# 369 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Openmode openmode;
# 372 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode app = ((openmode)1);
# 375 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode ate = ((openmode)2);
# 380 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode binary = ((openmode)4);
# 383 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode in = ((openmode)8);
# 386 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode out = ((openmode)16);
# 389 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode trunc = ((openmode)32);
# 401 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Seekdir seekdir;
# 404 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const seekdir beg = ((seekdir)0);
# 407 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const seekdir cur = ((seekdir)1);
# 410 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const seekdir end = ((seekdir)2);
# 413 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef int io_state;
# 414 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef int open_mode;
# 415 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef int seek_dir;
# 417 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef std::streampos streampos;
# 418 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef std::streamoff streamoff;
# 427 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum event {
# 429 "/usr/include/c++/4.4/bits/ios_base.h" 3
erase_event,
# 430 "/usr/include/c++/4.4/bits/ios_base.h" 3
imbue_event,
# 431 "/usr/include/c++/4.4/bits/ios_base.h" 3
copyfmt_event
# 432 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 444 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef void (*event_callback)(event, ios_base &, int);
# 457 "/usr/include/c++/4.4/bits/ios_base.h" 3
void register_callback(event_callback , int );
# 464 "/usr/include/c++/4.4/bits/ios_base.h" 3
protected: streamsize _M_precision;
# 465 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize _M_width;
# 466 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags _M_flags;
# 467 "/usr/include/c++/4.4/bits/ios_base.h" 3
iostate _M_exception;
# 468 "/usr/include/c++/4.4/bits/ios_base.h" 3
iostate _M_streambuf_state;
# 473 "/usr/include/c++/4.4/bits/ios_base.h" 3
struct _Callback_list {
# 476 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Callback_list *_M_next;
# 477 "/usr/include/c++/4.4/bits/ios_base.h" 3
event_callback _M_fn;
# 478 "/usr/include/c++/4.4/bits/ios_base.h" 3
int _M_index;
# 479 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Atomic_word _M_refcount;
# 481 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Callback_list(event_callback __fn, int __index, _Callback_list *
# 482 "/usr/include/c++/4.4/bits/ios_base.h" 3
__cb) : _M_next(__cb), _M_fn(__fn), _M_index(__index), _M_refcount(0)
# 483 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ }
# 486 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_add_reference() { __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 490 "/usr/include/c++/4.4/bits/ios_base.h" 3
int _M_remove_reference()
# 491 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1); }
# 492 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 494 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Callback_list *_M_callbacks;
# 497 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_call_callbacks(event ) throw();
# 500 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_dispose_callbacks();
# 503 "/usr/include/c++/4.4/bits/ios_base.h" 3
struct _Words {
# 505 "/usr/include/c++/4.4/bits/ios_base.h" 3
void *_M_pword;
# 506 "/usr/include/c++/4.4/bits/ios_base.h" 3
long _M_iword;
# 507 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words() : _M_pword((0)), _M_iword((0)) { }
# 508 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 511 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words _M_word_zero;
# 515 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum { _S_local_word_size = 8};
# 516 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words _M_local_word[_S_local_word_size];
# 519 "/usr/include/c++/4.4/bits/ios_base.h" 3
int _M_word_size;
# 520 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words *_M_word;
# 523 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words &_M_grow_words(int , bool );
# 526 "/usr/include/c++/4.4/bits/ios_base.h" 3
locale _M_ios_locale;
# 529 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_init();
# 537 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: class Init {
# 539 "/usr/include/c++/4.4/bits/ios_base.h" 3
friend class ios_base;
# 541 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: Init();
# 542 "/usr/include/c++/4.4/bits/ios_base.h" 3
~Init();
# 545 "/usr/include/c++/4.4/bits/ios_base.h" 3
private: static _Atomic_word _S_refcount;
# 546 "/usr/include/c++/4.4/bits/ios_base.h" 3
static bool _S_synced_with_stdio;
# 547 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 555 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags flags() const
# 556 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_flags; }
# 566 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags flags(fmtflags __fmtfl)
# 567 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 568 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags __old = (_M_flags);
# 569 "/usr/include/c++/4.4/bits/ios_base.h" 3
(_M_flags) = __fmtfl;
# 570 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 571 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 582 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags setf(fmtflags __fmtfl)
# 583 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 584 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags __old = (_M_flags);
# 585 "/usr/include/c++/4.4/bits/ios_base.h" 3
((_M_flags) |= __fmtfl);
# 586 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 587 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 599 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags setf(fmtflags __fmtfl, fmtflags __mask)
# 600 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 601 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags __old = (_M_flags);
# 602 "/usr/include/c++/4.4/bits/ios_base.h" 3
((_M_flags) &= ((~__mask)));
# 603 "/usr/include/c++/4.4/bits/ios_base.h" 3
((_M_flags) |= ((__fmtfl & __mask)));
# 604 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 605 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 614 "/usr/include/c++/4.4/bits/ios_base.h" 3
void unsetf(fmtflags __mask)
# 615 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ ((_M_flags) &= ((~__mask))); }
# 625 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize precision() const
# 626 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_precision; }
# 634 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize precision(streamsize __prec)
# 635 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 636 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize __old = (_M_precision);
# 637 "/usr/include/c++/4.4/bits/ios_base.h" 3
(_M_precision) = __prec;
# 638 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 639 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 648 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize width() const
# 649 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_width; }
# 657 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize width(streamsize __wide)
# 658 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 659 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize __old = (_M_width);
# 660 "/usr/include/c++/4.4/bits/ios_base.h" 3
(_M_width) = __wide;
# 661 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 662 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 676 "/usr/include/c++/4.4/bits/ios_base.h" 3
static bool sync_with_stdio(bool = true);
# 688 "/usr/include/c++/4.4/bits/ios_base.h" 3
locale imbue(const locale & );
# 699 "/usr/include/c++/4.4/bits/ios_base.h" 3
locale getloc() const
# 700 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_ios_locale; }
# 710 "/usr/include/c++/4.4/bits/ios_base.h" 3
const locale &_M_getloc() const
# 711 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_ios_locale; }
# 729 "/usr/include/c++/4.4/bits/ios_base.h" 3
static int xalloc() throw();
# 745 "/usr/include/c++/4.4/bits/ios_base.h" 3
long &iword(int __ix)
# 746 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 747 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words &__word = ((__ix < (_M_word_size)) ? ((_M_word)[__ix]) : this->_M_grow_words(__ix, true));
# 749 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __word._M_iword;
# 750 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 766 "/usr/include/c++/4.4/bits/ios_base.h" 3
void *&pword(int __ix)
# 767 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 768 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words &__word = ((__ix < (_M_word_size)) ? ((_M_word)[__ix]) : this->_M_grow_words(__ix, false));
# 770 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __word._M_pword;
# 771 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 782 "/usr/include/c++/4.4/bits/ios_base.h" 3
virtual ~ios_base();
# 785 "/usr/include/c++/4.4/bits/ios_base.h" 3
protected: ios_base();
# 790 "/usr/include/c++/4.4/bits/ios_base.h" 3
private: ios_base(const ios_base &);
# 793 "/usr/include/c++/4.4/bits/ios_base.h" 3
ios_base &operator=(const ios_base &);
# 794 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 799 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &boolalpha(ios_base &__base)
# 800 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 801 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::boolalpha);
# 802 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 803 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 807 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noboolalpha(ios_base &__base)
# 808 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 809 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::boolalpha);
# 810 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 811 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 815 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &showbase(ios_base &__base)
# 816 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 817 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::showbase);
# 818 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 819 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 823 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noshowbase(ios_base &__base)
# 824 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 825 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::showbase);
# 826 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 827 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 831 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &showpoint(ios_base &__base)
# 832 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 833 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::showpoint);
# 834 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 835 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 839 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noshowpoint(ios_base &__base)
# 840 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 841 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::showpoint);
# 842 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 843 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 847 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &showpos(ios_base &__base)
# 848 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 849 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::showpos);
# 850 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 851 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 855 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noshowpos(ios_base &__base)
# 856 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 857 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::showpos);
# 858 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 859 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 863 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &skipws(ios_base &__base)
# 864 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 865 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::skipws);
# 866 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 867 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 871 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noskipws(ios_base &__base)
# 872 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 873 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::skipws);
# 874 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 875 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 879 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &uppercase(ios_base &__base)
# 880 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 881 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::uppercase);
# 882 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 883 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 887 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &nouppercase(ios_base &__base)
# 888 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 889 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::uppercase);
# 890 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 891 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 895 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &unitbuf(ios_base &__base)
# 896 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 897 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::unitbuf);
# 898 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 899 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 903 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &nounitbuf(ios_base &__base)
# 904 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 905 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::unitbuf);
# 906 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 907 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 912 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &internal(ios_base &__base)
# 913 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 914 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::internal, ios_base::adjustfield);
# 915 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 916 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 920 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &left(ios_base &__base)
# 921 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 922 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::left, ios_base::adjustfield);
# 923 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 924 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 928 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &right(ios_base &__base)
# 929 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 930 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::right, ios_base::adjustfield);
# 931 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 932 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 937 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &dec(ios_base &__base)
# 938 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 939 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::dec, ios_base::basefield);
# 940 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 941 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 945 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &hex(ios_base &__base)
# 946 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 947 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::hex, ios_base::basefield);
# 948 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 949 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 953 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &oct(ios_base &__base)
# 954 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 955 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::oct, ios_base::basefield);
# 956 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 957 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 962 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &fixed(ios_base &__base)
# 963 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 964 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::fixed, ios_base::floatfield);
# 965 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 966 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 970 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &scientific(ios_base &__base)
# 971 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 972 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::scientific, ios_base::floatfield);
# 973 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 974 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 976 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 46 "/usr/include/c++/4.4/streambuf" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/4.4/streambuf" 3
template < typename _CharT, typename _Traits >
    streamsize
    __copy_streambufs_eof ( basic_streambuf < _CharT, _Traits > *,
     basic_streambuf < _CharT, _Traits > *, bool & );
# 113 "/usr/include/c++/4.4/streambuf" 3
template < typename _CharT, typename _Traits >
    class basic_streambuf
    {
    public :






      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;




      typedef basic_streambuf < char_type, traits_type > __streambuf_type;


      friend class basic_ios < char_type, traits_type >;
      friend class basic_istream < char_type, traits_type >;
      friend class basic_ostream < char_type, traits_type >;
      friend class istreambuf_iterator < char_type, traits_type >;
      friend class ostreambuf_iterator < char_type, traits_type >;

      friend streamsize
      __copy_streambufs_eof < > ( __streambuf_type *, __streambuf_type *, bool & );

      template < bool _IsMove, typename _CharT2 >
        friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
            _CharT2 * > :: __type
        __copy_move_a2 ( istreambuf_iterator < _CharT2 >,
         istreambuf_iterator < _CharT2 >, _CharT2 * );

      template < typename _CharT2 >
        friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
      istreambuf_iterator < _CharT2 > > :: __type
        find ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      const _CharT2 & );

      template < typename _CharT2, typename _Traits2 >
        friend basic_istream < _CharT2, _Traits2 > &
        operator >> ( basic_istream < _CharT2, _Traits2 > &, _CharT2 * );

      template < typename _CharT2, typename _Traits2, typename _Alloc >
        friend basic_istream < _CharT2, _Traits2 > &
        operator >> ( basic_istream < _CharT2, _Traits2 > &,
     basic_string < _CharT2, _Traits2, _Alloc > & );

      template < typename _CharT2, typename _Traits2, typename _Alloc >
        friend basic_istream < _CharT2, _Traits2 > &
        getline ( basic_istream < _CharT2, _Traits2 > &,
  basic_string < _CharT2, _Traits2, _Alloc > &, _CharT2 );

    protected :

      char_type * _M_in_beg;
      char_type * _M_in_cur;
      char_type * _M_in_end;
      char_type * _M_out_beg;
      char_type * _M_out_cur;
      char_type * _M_out_end;


      locale _M_buf_locale;

  public :

      virtual
      ~ basic_streambuf ( )
      { }

      locale
      pubimbue ( const locale & __loc )
      {
 locale __tmp ( this -> getloc ( ) );
 this -> imbue ( __loc );
 _M_buf_locale = __loc;
 return __tmp;
      }

      locale
      getloc ( ) const
      { return _M_buf_locale; }

      __streambuf_type *
      pubsetbuf ( char_type * __s, streamsize __n )
      { return this -> setbuf ( __s, __n ); }

      pos_type
      pubseekoff ( off_type __off, ios_base :: seekdir __way,
   ios_base :: openmode __mode = ios_base :: in | ios_base :: out )
      { return this -> seekoff ( __off, __way, __mode ); }

      pos_type
      pubseekpos ( pos_type __sp,
   ios_base :: openmode __mode = ios_base :: in | ios_base :: out )
      { return this -> seekpos ( __sp, __mode ); }

      int
      pubsync ( ) { return this -> sync ( ); }

      streamsize
      in_avail ( )
      {
 const streamsize __ret = this -> egptr ( ) - this -> gptr ( );
 return __ret ? __ret : this -> showmanyc ( );
      }

      int_type
      snextc ( )
      {
 int_type __ret = traits_type :: eof ( );
 if ( __builtin_expect ( ! traits_type :: eq_int_type ( this -> sbumpc ( ),
             __ret ), true ) )
   __ret = this -> sgetc ( );
 return __ret;
      }

      int_type
      sbumpc ( )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> gptr ( ) < this -> egptr ( ), true ) )
   {
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
     this -> gbump ( 1 );
   }
 else
   __ret = this -> uflow ( );
 return __ret;
      }

      int_type
      sgetc ( )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> gptr ( ) < this -> egptr ( ), true ) )
   __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
 else
   __ret = this -> underflow ( );
 return __ret;
      }

      streamsize
      sgetn ( char_type * __s, streamsize __n )
      { return this -> xsgetn ( __s, __n ); }

      int_type
      sputbackc ( char_type __c )
      {
 int_type __ret;
 const bool __testpos = this -> eback ( ) < this -> gptr ( );
 if ( __builtin_expect ( ! __testpos ||
        ! traits_type :: eq ( __c, this -> gptr ( ) [ - 1 ] ), false ) )
   __ret = this -> pbackfail ( traits_type :: to_int_type ( __c ) );
 else
   {
     this -> gbump ( - 1 );
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
   }
 return __ret;
      }

      int_type
      sungetc ( )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> eback ( ) < this -> gptr ( ), true ) )
   {
     this -> gbump ( - 1 );
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
   }
 else
   __ret = this -> pbackfail ( );
 return __ret;
      }

      int_type
      sputc ( char_type __c )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> pptr ( ) < this -> epptr ( ), true ) )
   {
     * this -> pptr ( ) = __c;
     this -> pbump ( 1 );
     __ret = traits_type :: to_int_type ( __c );
   }
 else
   __ret = this -> overflow ( traits_type :: to_int_type ( __c ) );
 return __ret;
      }

      streamsize
      sputn ( const char_type * __s, streamsize __n )
      { return this -> xsputn ( __s, __n ); }

    protected :

      basic_streambuf ( )
      : _M_in_beg ( 0 ), _M_in_cur ( 0 ), _M_in_end ( 0 ),
      _M_out_beg ( 0 ), _M_out_cur ( 0 ), _M_out_end ( 0 ),
      _M_buf_locale ( locale ( ) )
      { }

      char_type *
      eback ( ) const { return _M_in_beg; }

      char_type *
      gptr ( ) const { return _M_in_cur; }

      char_type *
      egptr ( ) const { return _M_in_end; }

      void
      gbump ( int __n ) { _M_in_cur += __n; }

      void
      setg ( char_type * __gbeg, char_type * __gnext, char_type * __gend )
      {
 _M_in_beg = __gbeg;
 _M_in_cur = __gnext;
 _M_in_end = __gend;
      }

      char_type *
      pbase ( ) const { return _M_out_beg; }

      char_type *
      pptr ( ) const { return _M_out_cur; }

      char_type *
      epptr ( ) const { return _M_out_end; }

      void
      pbump ( int __n ) { _M_out_cur += __n; }

      void
      setp ( char_type * __pbeg, char_type * __pend )
      {
 _M_out_beg = _M_out_cur = __pbeg;
 _M_out_end = __pend;
      }

      virtual void
      imbue ( const locale & )
      { }

      virtual basic_streambuf < char_type, _Traits > *
      setbuf ( char_type *, streamsize )
      { return this; }

      virtual pos_type
      seekoff ( off_type, ios_base :: seekdir,
       ios_base :: openmode = ios_base :: in | ios_base :: out )
      { return pos_type ( off_type ( - 1 ) ); }

      virtual pos_type
      seekpos ( pos_type,
       ios_base :: openmode = ios_base :: in | ios_base :: out )
      { return pos_type ( off_type ( - 1 ) ); }

      virtual int
      sync ( ) { return 0; }

      virtual streamsize
      showmanyc ( ) { return 0; }

      virtual streamsize
      xsgetn ( char_type * __s, streamsize __n );

      virtual int_type
      underflow ( )
      { return traits_type :: eof ( ); }

      virtual int_type
      uflow ( )
      {
 int_type __ret = traits_type :: eof ( );
 const bool __testeof = traits_type :: eq_int_type ( this -> underflow ( ),
       __ret );
 if ( ! __testeof )
   {
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
     this -> gbump ( 1 );
   }
 return __ret;
      }

      virtual int_type
      pbackfail ( int_type = traits_type :: eof ( ) )
      { return traits_type :: eof ( ); }

      virtual streamsize
      xsputn ( const char_type * __s, streamsize __n );

      virtual int_type
      overflow ( int_type = traits_type :: eof ( ) )
      { return traits_type :: eof ( ); }



    public :

      void
      stossc ( )
      {
 if ( this -> gptr ( ) < this -> egptr ( ) )
   this -> gbump ( 1 );
 else
   this -> uflow ( );
      }


    private :


      basic_streambuf ( const __streambuf_type & __sb )
      : _M_in_beg ( __sb . _M_in_beg ), _M_in_cur ( __sb . _M_in_cur ),
      _M_in_end ( __sb . _M_in_end ), _M_out_beg ( __sb . _M_out_beg ),
      _M_out_cur ( __sb . _M_out_cur ), _M_out_end ( __sb . _M_out_cur ),
      _M_buf_locale ( __sb . _M_buf_locale )
      { }

      __streambuf_type &
      operator = ( const __streambuf_type & ) { return * this; };
    };
# 784 "/usr/include/c++/4.4/streambuf" 3
template<> streamsize __copy_streambufs_eof(basic_streambuf< char, char_traits< char> > * , basic_streambuf< char, char_traits< char> > * , bool & );
# 789 "/usr/include/c++/4.4/streambuf" 3
template<> streamsize __copy_streambufs_eof(basic_streambuf< wchar_t, char_traits< wchar_t> > * , basic_streambuf< wchar_t, char_traits< wchar_t> > * , bool & );
# 793 "/usr/include/c++/4.4/streambuf" 3
}
# 40 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_streambuf < _CharT, _Traits > ::
    xsgetn ( char_type * __s, streamsize __n )
    {
      streamsize __ret = 0;
      while ( __ret < __n )
 {
   const streamsize __buf_len = this -> egptr ( ) - this -> gptr ( );
   if ( __buf_len )
     {
       const streamsize __remaining = __n - __ret;
       const streamsize __len = std :: min ( __buf_len, __remaining );
       traits_type :: copy ( __s, this -> gptr ( ), __len );
       __ret += __len;
       __s += __len;
       this -> gbump ( __len );
     }

   if ( __ret < __n )
     {
       const int_type __c = this -> uflow ( );
       if ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
  {
    traits_type :: assign ( * __s ++, traits_type :: to_char_type ( __c ) );
    ++ __ret;
  }
       else
  break;
     }
 }
      return __ret;
    }
# 76 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_streambuf < _CharT, _Traits > ::
    xsputn ( const char_type * __s, streamsize __n )
    {
      streamsize __ret = 0;
      while ( __ret < __n )
 {
   const streamsize __buf_len = this -> epptr ( ) - this -> pptr ( );
   if ( __buf_len )
     {
       const streamsize __remaining = __n - __ret;
       const streamsize __len = std :: min ( __buf_len, __remaining );
       traits_type :: copy ( this -> pptr ( ), __s, __len );
       __ret += __len;
       __s += __len;
       this -> pbump ( __len );
     }

   if ( __ret < __n )
     {
       int_type __c = this -> overflow ( traits_type :: to_int_type ( * __s ) );
       if ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
  {
    ++ __ret;
    ++ __s;
  }
       else
  break;
     }
 }
      return __ret;
    }
# 113 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    __copy_streambufs_eof ( basic_streambuf < _CharT, _Traits > * __sbin,
     basic_streambuf < _CharT, _Traits > * __sbout,
     bool & __ineof )
    {
      streamsize __ret = 0;
      __ineof = true;
      typename _Traits :: int_type __c = __sbin -> sgetc ( );
      while ( ! _Traits :: eq_int_type ( __c, _Traits :: eof ( ) ) )
 {
   __c = __sbout -> sputc ( _Traits :: to_char_type ( __c ) );
   if ( _Traits :: eq_int_type ( __c, _Traits :: eof ( ) ) )
     {
       __ineof = false;
       break;
     }
   ++ __ret;
   __c = __sbin -> snextc ( );
 }
      return __ret;
    }
# 136 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    inline streamsize
    __copy_streambufs ( basic_streambuf < _CharT, _Traits > * __sbin,
        basic_streambuf < _CharT, _Traits > * __sbout )
    {
      bool __ineof;
      return __copy_streambufs_eof ( __sbin, __sbout, __ineof );
    }
# 149 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template class basic_streambuf< char, char_traits< char> > ;
# 150 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs(basic_streambuf< char, char_traits< char> > * , basic_streambuf< char, char_traits< char> > * );
# 154 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs_eof< char, char_traits< char> > (basic_streambuf< char, char_traits< char> > *, basic_streambuf< char, char_traits< char> > *, bool &);
# 160 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template class basic_streambuf< wchar_t, char_traits< wchar_t> > ;
# 161 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs(basic_streambuf< wchar_t, char_traits< wchar_t> > * , basic_streambuf< wchar_t, char_traits< wchar_t> > * );
# 165 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs_eof< wchar_t, char_traits< wchar_t> > (basic_streambuf< wchar_t, char_traits< wchar_t> > *, basic_streambuf< wchar_t, char_traits< wchar_t> > *, bool &);
# 172 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
}
# 53 "/usr/include/wctype.h" 3
typedef unsigned long wctype_t;
# 73 "/usr/include/wctype.h" 3
enum {
# 74 "/usr/include/wctype.h" 3
__ISwupper,
# 75 "/usr/include/wctype.h" 3
__ISwlower,
# 76 "/usr/include/wctype.h" 3
__ISwalpha,
# 77 "/usr/include/wctype.h" 3
__ISwdigit,
# 78 "/usr/include/wctype.h" 3
__ISwxdigit,
# 79 "/usr/include/wctype.h" 3
__ISwspace,
# 80 "/usr/include/wctype.h" 3
__ISwprint,
# 81 "/usr/include/wctype.h" 3
__ISwgraph,
# 82 "/usr/include/wctype.h" 3
__ISwblank,
# 83 "/usr/include/wctype.h" 3
__ISwcntrl,
# 84 "/usr/include/wctype.h" 3
__ISwpunct,
# 85 "/usr/include/wctype.h" 3
__ISwalnum,
# 87 "/usr/include/wctype.h" 3
_ISwupper = 16777216,
# 88 "/usr/include/wctype.h" 3
_ISwlower = 33554432,
# 89 "/usr/include/wctype.h" 3
_ISwalpha = 67108864,
# 90 "/usr/include/wctype.h" 3
_ISwdigit = 134217728,
# 91 "/usr/include/wctype.h" 3
_ISwxdigit = 268435456,
# 92 "/usr/include/wctype.h" 3
_ISwspace = 536870912,
# 93 "/usr/include/wctype.h" 3
_ISwprint = 1073741824,
# 94 "/usr/include/wctype.h" 3
_ISwgraph = (-2147483647-1),
# 95 "/usr/include/wctype.h" 3
_ISwblank = 65536,
# 96 "/usr/include/wctype.h" 3
_ISwcntrl = 131072,
# 97 "/usr/include/wctype.h" 3
_ISwpunct = 262144,
# 98 "/usr/include/wctype.h" 3
_ISwalnum = 524288
# 99 "/usr/include/wctype.h" 3
};
# 112 "/usr/include/wctype.h" 3
extern "C" int iswalnum(wint_t ) throw();
# 118 "/usr/include/wctype.h" 3
extern "C" int iswalpha(wint_t ) throw();
# 121 "/usr/include/wctype.h" 3
extern "C" int iswcntrl(wint_t ) throw();
# 125 "/usr/include/wctype.h" 3
extern "C" int iswdigit(wint_t ) throw();
# 129 "/usr/include/wctype.h" 3
extern "C" int iswgraph(wint_t ) throw();
# 134 "/usr/include/wctype.h" 3
extern "C" int iswlower(wint_t ) throw();
# 137 "/usr/include/wctype.h" 3
extern "C" int iswprint(wint_t ) throw();
# 142 "/usr/include/wctype.h" 3
extern "C" int iswpunct(wint_t ) throw();
# 147 "/usr/include/wctype.h" 3
extern "C" int iswspace(wint_t ) throw();
# 152 "/usr/include/wctype.h" 3
extern "C" int iswupper(wint_t ) throw();
# 157 "/usr/include/wctype.h" 3
extern "C" int iswxdigit(wint_t ) throw();
# 163 "/usr/include/wctype.h" 3
extern "C" int iswblank(wint_t ) throw();
# 172 "/usr/include/wctype.h" 3
extern "C" wctype_t wctype(const char * ) throw();
# 176 "/usr/include/wctype.h" 3
extern "C" int iswctype(wint_t , wctype_t ) throw();
# 187 "/usr/include/wctype.h" 3
extern "C" { typedef const __int32_t *wctrans_t; }
# 195 "/usr/include/wctype.h" 3
extern "C" wint_t towlower(wint_t ) throw();
# 198 "/usr/include/wctype.h" 3
extern "C" wint_t towupper(wint_t ) throw();
# 219 "/usr/include/wctype.h" 3
extern "C" wctrans_t wctrans(const char * ) throw();
# 222 "/usr/include/wctype.h" 3
extern "C" wint_t towctrans(wint_t , wctrans_t ) throw();
# 231 "/usr/include/wctype.h" 3
extern "C" int iswalnum_l(wint_t , __locale_t ) throw();
# 237 "/usr/include/wctype.h" 3
extern "C" int iswalpha_l(wint_t , __locale_t ) throw();
# 240 "/usr/include/wctype.h" 3
extern "C" int iswcntrl_l(wint_t , __locale_t ) throw();
# 244 "/usr/include/wctype.h" 3
extern "C" int iswdigit_l(wint_t , __locale_t ) throw();
# 248 "/usr/include/wctype.h" 3
extern "C" int iswgraph_l(wint_t , __locale_t ) throw();
# 253 "/usr/include/wctype.h" 3
extern "C" int iswlower_l(wint_t , __locale_t ) throw();
# 256 "/usr/include/wctype.h" 3
extern "C" int iswprint_l(wint_t , __locale_t ) throw();
# 261 "/usr/include/wctype.h" 3
extern "C" int iswpunct_l(wint_t , __locale_t ) throw();
# 266 "/usr/include/wctype.h" 3
extern "C" int iswspace_l(wint_t , __locale_t ) throw();
# 271 "/usr/include/wctype.h" 3
extern "C" int iswupper_l(wint_t , __locale_t ) throw();
# 276 "/usr/include/wctype.h" 3
extern "C" int iswxdigit_l(wint_t , __locale_t ) throw();
# 281 "/usr/include/wctype.h" 3
extern "C" int iswblank_l(wint_t , __locale_t ) throw();
# 285 "/usr/include/wctype.h" 3
extern "C" wctype_t wctype_l(const char * , __locale_t ) throw();
# 290 "/usr/include/wctype.h" 3
extern "C" int iswctype_l(wint_t , wctype_t , __locale_t ) throw();
# 299 "/usr/include/wctype.h" 3
extern "C" wint_t towlower_l(wint_t , __locale_t ) throw();
# 302 "/usr/include/wctype.h" 3
extern "C" wint_t towupper_l(wint_t , __locale_t ) throw();
# 306 "/usr/include/wctype.h" 3
extern "C" wctrans_t wctrans_l(const char * , __locale_t ) throw();
# 310 "/usr/include/wctype.h" 3
extern "C" wint_t towctrans_l(wint_t , wctrans_t , __locale_t ) throw();
# 76 "/usr/include/c++/4.4/cwctype" 3
namespace std __attribute((__visibility__("default"))) {
# 78 "/usr/include/c++/4.4/cwctype" 3
using ::wctrans_t;
# 79 "/usr/include/c++/4.4/cwctype" 3
using ::wctype_t;
# 82 "/usr/include/c++/4.4/cwctype" 3
using ::iswalnum;
# 83 "/usr/include/c++/4.4/cwctype" 3
using ::iswalpha;
# 85 "/usr/include/c++/4.4/cwctype" 3
using ::iswblank;
# 87 "/usr/include/c++/4.4/cwctype" 3
using ::iswcntrl;
# 88 "/usr/include/c++/4.4/cwctype" 3
using ::iswctype;
# 89 "/usr/include/c++/4.4/cwctype" 3
using ::iswdigit;
# 90 "/usr/include/c++/4.4/cwctype" 3
using ::iswgraph;
# 91 "/usr/include/c++/4.4/cwctype" 3
using ::iswlower;
# 92 "/usr/include/c++/4.4/cwctype" 3
using ::iswprint;
# 93 "/usr/include/c++/4.4/cwctype" 3
using ::iswpunct;
# 94 "/usr/include/c++/4.4/cwctype" 3
using ::iswspace;
# 95 "/usr/include/c++/4.4/cwctype" 3
using ::iswupper;
# 96 "/usr/include/c++/4.4/cwctype" 3
using ::iswxdigit;
# 97 "/usr/include/c++/4.4/cwctype" 3
using ::towctrans;
# 98 "/usr/include/c++/4.4/cwctype" 3
using ::towlower;
# 99 "/usr/include/c++/4.4/cwctype" 3
using ::towupper;
# 100 "/usr/include/c++/4.4/cwctype" 3
using ::wctrans;
# 101 "/usr/include/c++/4.4/cwctype" 3
using ::wctype;
# 103 "/usr/include/c++/4.4/cwctype" 3
}
# 37 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
namespace std __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
struct ctype_base {
# 43 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
typedef const int *__to_type;
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
typedef unsigned short mask;
# 48 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask upper = (_ISupper);
# 49 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask lower = (_ISlower);
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask alpha = (_ISalpha);
# 51 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask digit = (_ISdigit);
# 52 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask xdigit = (_ISxdigit);
# 53 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask space = (_ISspace);
# 54 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask print = (_ISprint);
# 55 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask graph = (((_ISalpha) | (_ISdigit)) | (_ISpunct));
# 56 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask cntrl = (_IScntrl);
# 57 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask punct = (_ISpunct);
# 58 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask alnum = ((_ISalpha) | (_ISdigit));
# 59 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
};
# 61 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
}
# 40 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    class istreambuf_iterator
    : public iterator < input_iterator_tag, _CharT, typename _Traits :: off_type,
        _CharT *, _CharT & >
    {
    public :



      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename _Traits :: int_type int_type;
      typedef basic_streambuf < _CharT, _Traits > streambuf_type;
      typedef basic_istream < _CharT, _Traits > istream_type;


      template < typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
                      ostreambuf_iterator < _CharT2 > > :: __type
 copy ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      ostreambuf_iterator < _CharT2 > );

      template < bool _IsMove, typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
            _CharT2 * > :: __type
 __copy_move_a2 ( istreambuf_iterator < _CharT2 >,
         istreambuf_iterator < _CharT2 >, _CharT2 * );

      template < typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
               istreambuf_iterator < _CharT2 > > :: __type
 find ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      const _CharT2 & );

    private :







      mutable streambuf_type * _M_sbuf;
      mutable int_type _M_c;

    public :

      istreambuf_iterator ( ) throw ( )
      : _M_sbuf ( 0 ), _M_c ( traits_type :: eof ( ) ) { }


      istreambuf_iterator ( istream_type & __s ) throw ( )
      : _M_sbuf ( __s . rdbuf ( ) ), _M_c ( traits_type :: eof ( ) ) { }


      istreambuf_iterator ( streambuf_type * __s ) throw ( )
      : _M_sbuf ( __s ), _M_c ( traits_type :: eof ( ) ) { }




      char_type
      operator * ( ) const
      {







 return traits_type :: to_char_type ( _M_get ( ) );
      }


      istreambuf_iterator &
      operator ++ ( )
      {
 ;


 if ( _M_sbuf )
   {
     _M_sbuf -> sbumpc ( );
     _M_c = traits_type :: eof ( );
   }
 return * this;
      }


      istreambuf_iterator
      operator ++ ( int )
      {
 ;



 istreambuf_iterator __old = * this;
 if ( _M_sbuf )
   {
     __old . _M_c = _M_sbuf -> sbumpc ( );
     _M_c = traits_type :: eof ( );
   }
 return __old;
      }





      bool
      equal ( const istreambuf_iterator & __b ) const
      { return _M_at_eof ( ) == __b . _M_at_eof ( ); }

    private :
      int_type
      _M_get ( ) const
      {
 const int_type __eof = traits_type :: eof ( );
 int_type __ret = __eof;
 if ( _M_sbuf )
   {
     if ( ! traits_type :: eq_int_type ( _M_c, __eof ) )
       __ret = _M_c;
     else if ( ! traits_type :: eq_int_type ( ( __ret = _M_sbuf -> sgetc ( ) ),
            __eof ) )
       _M_c = __ret;
     else
       _M_sbuf = 0;
   }
 return __ret;
      }

      bool
      _M_at_eof ( ) const
      {
 const int_type __eof = traits_type :: eof ( );
 return traits_type :: eq_int_type ( _M_get ( ), __eof );
      }
    };
# 185 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    inline bool
    operator == ( const istreambuf_iterator < _CharT, _Traits > & __a,
        const istreambuf_iterator < _CharT, _Traits > & __b )
    { return __a . equal ( __b ); }
# 191 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    inline bool
    operator != ( const istreambuf_iterator < _CharT, _Traits > & __a,
        const istreambuf_iterator < _CharT, _Traits > & __b )
    { return ! __a . equal ( __b ); }
# 198 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    class ostreambuf_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    public :



      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef basic_streambuf < _CharT, _Traits > streambuf_type;
      typedef basic_ostream < _CharT, _Traits > ostream_type;


      template < typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
                      ostreambuf_iterator < _CharT2 > > :: __type
 copy ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      ostreambuf_iterator < _CharT2 > );

    private :
      streambuf_type * _M_sbuf;
      bool _M_failed;

    public :

      ostreambuf_iterator ( ostream_type & __s ) throw ( )
      : _M_sbuf ( __s . rdbuf ( ) ), _M_failed ( ! _M_sbuf ) { }


      ostreambuf_iterator ( streambuf_type * __s ) throw ( )
      : _M_sbuf ( __s ), _M_failed ( ! _M_sbuf ) { }


      ostreambuf_iterator &
      operator = ( _CharT __c )
      {
 if ( ! _M_failed &&
     _Traits :: eq_int_type ( _M_sbuf -> sputc ( __c ), _Traits :: eof ( ) ) )
   _M_failed = true;
 return * this;
      }


      ostreambuf_iterator &
      operator * ( )
      { return * this; }


      ostreambuf_iterator &
      operator ++ ( int )
      { return * this; }


      ostreambuf_iterator &
      operator ++ ( )
      { return * this; }


      bool
      failed ( ) const throw ( )
      { return _M_failed; }

      ostreambuf_iterator &
      _M_put ( const _CharT * __ws, streamsize __len )
      {
 if ( __builtin_expect ( ! _M_failed, true )
     && __builtin_expect ( this -> _M_sbuf -> sputn ( __ws, __len ) != __len,
    false ) )
   _M_failed = true;
 return * this;
      }
    };
# 273 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
                           ostreambuf_iterator < _CharT > > :: __type
    copy ( istreambuf_iterator < _CharT > __first,
  istreambuf_iterator < _CharT > __last,
  ostreambuf_iterator < _CharT > __result )
    {
      if ( __first . _M_sbuf && ! __last . _M_sbuf && ! __result . _M_failed )
 {
   bool __ineof;
   __copy_streambufs_eof ( __first . _M_sbuf, __result . _M_sbuf, __ineof );
   if ( ! __ineof )
     __result . _M_failed = true;
 }
      return __result;
    }
# 290 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
            ostreambuf_iterator < _CharT > > :: __type
    __copy_move_a2 ( _CharT * __first, _CharT * __last,
     ostreambuf_iterator < _CharT > __result )
    {
      const streamsize __num = __last - __first;
      if ( __num > 0 )
 __result . _M_put ( __first, __num );
      return __result;
    }
# 302 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
        ostreambuf_iterator < _CharT > > :: __type
    __copy_move_a2 ( const _CharT * __first, const _CharT * __last,
     ostreambuf_iterator < _CharT > __result )
    {
      const streamsize __num = __last - __first;
      if ( __num > 0 )
 __result . _M_put ( __first, __num );
      return __result;
    }
# 314 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
            _CharT * > :: __type
    __copy_move_a2 ( istreambuf_iterator < _CharT > __first,
     istreambuf_iterator < _CharT > __last, _CharT * __result )
    {
      typedef istreambuf_iterator < _CharT > __is_iterator_type;
      typedef typename __is_iterator_type :: traits_type traits_type;
      typedef typename __is_iterator_type :: streambuf_type streambuf_type;
      typedef typename traits_type :: int_type int_type;

      if ( __first . _M_sbuf && ! __last . _M_sbuf )
 {
   streambuf_type * __sb = __first . _M_sbuf;
   int_type __c = __sb -> sgetc ( );
   while ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
     {
       const streamsize __n = __sb -> egptr ( ) - __sb -> gptr ( );
       if ( __n > 1 )
  {
    traits_type :: copy ( __result, __sb -> gptr ( ), __n );
    __sb -> gbump ( __n );
    __result += __n;
    __c = __sb -> underflow ( );
  }
       else
  {
    * __result ++ = traits_type :: to_char_type ( __c );
    __c = __sb -> snextc ( );
  }
     }
 }
      return __result;
    }
# 349 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
          istreambuf_iterator < _CharT > > :: __type
    find ( istreambuf_iterator < _CharT > __first,
  istreambuf_iterator < _CharT > __last, const _CharT & __val )
    {
      typedef istreambuf_iterator < _CharT > __is_iterator_type;
      typedef typename __is_iterator_type :: traits_type traits_type;
      typedef typename __is_iterator_type :: streambuf_type streambuf_type;
      typedef typename traits_type :: int_type int_type;

      if ( __first . _M_sbuf && ! __last . _M_sbuf )
 {
   const int_type __ival = traits_type :: to_int_type ( __val );
   streambuf_type * __sb = __first . _M_sbuf;
   int_type __c = __sb -> sgetc ( );
   while ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) )
   && ! traits_type :: eq_int_type ( __c, __ival ) )
     {
       streamsize __n = __sb -> egptr ( ) - __sb -> gptr ( );
       if ( __n > 1 )
  {
    const _CharT * __p = traits_type :: find ( __sb -> gptr ( ),
       __n, __val );
    if ( __p )
      __n = __p - __sb -> gptr ( );
    __sb -> gbump ( __n );
    __c = __sb -> sgetc ( );
  }
       else
  __c = __sb -> snextc ( );
     }

   if ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
     __first . _M_c = __c;
   else
     __first . _M_sbuf = 0;
 }
      return __first;
    }
# 390 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
}
# 52 "/usr/include/c++/4.4/bits/locale_facets.h" 3
namespace std __attribute((__visibility__("default"))) {
# 64 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _Tv> void __convert_to_v(const char * , _Tv & , ios_base::iostate & , const __c_locale & );
# 72 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &);
# 77 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &);
# 82 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &);
# 87 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT, class _Traits>
# 88 "/usr/include/c++/4.4/bits/locale_facets.h" 3
struct __pad {
# 91 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static void _S_pad(ios_base & , _CharT , _CharT * , const _CharT * , streamsize , streamsize );
# 93 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 100 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    _CharT *
    __add_grouping ( _CharT * __s, _CharT __sep,
     const char * __gbeg, size_t __gsize,
     const _CharT * __first, const _CharT * __last );
# 109 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline
    ostreambuf_iterator < _CharT >
    __write ( ostreambuf_iterator < _CharT > __s, const _CharT * __ws, int __len )
    {
      __s . _M_put ( __ws, __len );
      return __s;
    }
# 119 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT, typename _OutIter >
    inline
    _OutIter
    __write ( _OutIter __s, const _CharT * __ws, int __len )
    {
      for ( int __j = 0; __j < __len; __j ++, ++ __s )
 * __s = __ws [ __j ];
      return __s;
    }
# 143 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class __ctype_abstract_base : public locale :: facet, public ctype_base
    {
    public :


      typedef _CharT char_type;

      bool
      is ( mask __m, char_type __c ) const
      { return this -> do_is ( __m, __c ); }

      const char_type *
      is ( const char_type * __lo, const char_type * __hi, mask * __vec ) const
      { return this -> do_is ( __lo, __hi, __vec ); }

      const char_type *
      scan_is ( mask __m, const char_type * __lo, const char_type * __hi ) const
      { return this -> do_scan_is ( __m, __lo, __hi ); }

      const char_type *
      scan_not ( mask __m, const char_type * __lo, const char_type * __hi ) const
      { return this -> do_scan_not ( __m, __lo, __hi ); }

      char_type
      toupper ( char_type __c ) const
      { return this -> do_toupper ( __c ); }

      const char_type *
      toupper ( char_type * __lo, const char_type * __hi ) const
      { return this -> do_toupper ( __lo, __hi ); }

      char_type
      tolower ( char_type __c ) const
      { return this -> do_tolower ( __c ); }

      const char_type *
      tolower ( char_type * __lo, const char_type * __hi ) const
      { return this -> do_tolower ( __lo, __hi ); }

      char_type
      widen ( char __c ) const
      { return this -> do_widen ( __c ); }

      const char *
      widen ( const char * __lo, const char * __hi, char_type * __to ) const
      { return this -> do_widen ( __lo, __hi, __to ); }

      char
      narrow ( char_type __c, char __dfault ) const
      { return this -> do_narrow ( __c, __dfault ); }

      const char_type *
      narrow ( const char_type * __lo, const char_type * __hi,
       char __dfault, char * __to ) const
      { return this -> do_narrow ( __lo, __hi, __dfault, __to ); }

    protected :
      explicit
      __ctype_abstract_base ( size_t __refs = 0 ) : facet ( __refs ) { }

      virtual
      ~ __ctype_abstract_base ( ) { }

      virtual bool
      do_is ( mask __m, char_type __c ) const = 0;

      virtual const char_type *
      do_is ( const char_type * __lo, const char_type * __hi,
     mask * __vec ) const = 0;

      virtual const char_type *
      do_scan_is ( mask __m, const char_type * __lo,
   const char_type * __hi ) const = 0;

      virtual const char_type *
      do_scan_not ( mask __m, const char_type * __lo,
    const char_type * __hi ) const = 0;

      virtual char_type
      do_toupper ( char_type ) const = 0;

      virtual const char_type *
      do_toupper ( char_type * __lo, const char_type * __hi ) const = 0;

      virtual char_type
      do_tolower ( char_type ) const = 0;

      virtual const char_type *
      do_tolower ( char_type * __lo, const char_type * __hi ) const = 0;

      virtual char_type
      do_widen ( char ) const = 0;

      virtual const char *
      do_widen ( const char * __lo, const char * __hi,
        char_type * __dest ) const = 0;

      virtual char
      do_narrow ( char_type, char __dfault ) const = 0;

      virtual const char_type *
      do_narrow ( const char_type * __lo, const char_type * __hi,
  char __dfault, char * __dest ) const = 0;
    };
# 604 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class ctype : public __ctype_abstract_base < _CharT >
    {
    public :

      typedef _CharT char_type;
      typedef typename __ctype_abstract_base < _CharT > :: mask mask;


      static locale :: id id;

      explicit
      ctype ( size_t __refs = 0 ) : __ctype_abstract_base < _CharT > ( __refs ) { }

   protected :
      virtual
      ~ ctype ( );

      virtual bool
      do_is ( mask __m, char_type __c ) const;

      virtual const char_type *
      do_is ( const char_type * __lo, const char_type * __hi, mask * __vec ) const;

      virtual const char_type *
      do_scan_is ( mask __m, const char_type * __lo, const char_type * __hi ) const;

      virtual const char_type *
      do_scan_not ( mask __m, const char_type * __lo,
    const char_type * __hi ) const;

      virtual char_type
      do_toupper ( char_type __c ) const;

      virtual const char_type *
      do_toupper ( char_type * __lo, const char_type * __hi ) const;

      virtual char_type
      do_tolower ( char_type __c ) const;

      virtual const char_type *
      do_tolower ( char_type * __lo, const char_type * __hi ) const;

      virtual char_type
      do_widen ( char __c ) const;

      virtual const char *
      do_widen ( const char * __lo, const char * __hi, char_type * __dest ) const;

      virtual char
      do_narrow ( char_type, char __dfault ) const;

      virtual const char_type *
      do_narrow ( const char_type * __lo, const char_type * __hi,
  char __dfault, char * __dest ) const;
    };
# 661 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT> locale::id
# 662 "/usr/include/c++/4.4/bits/locale_facets.h" 3
ctype< _CharT> ::id;
# 674 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype< char> : public locale::facet, public ctype_base {
# 679 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: typedef char char_type;
# 683 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: __c_locale _M_c_locale_ctype;
# 684 "/usr/include/c++/4.4/bits/locale_facets.h" 3
bool _M_del;
# 685 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__to_type _M_toupper;
# 686 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__to_type _M_tolower;
# 687 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const mask *_M_table;
# 688 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_widen_ok;
# 689 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_widen[1 + (static_cast< unsigned char>((-1)))];
# 690 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_narrow[1 + (static_cast< unsigned char>((-1)))];
# 691 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_narrow_ok;
# 696 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: static locale::id id;
# 698 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const size_t table_size = (1 + (static_cast< unsigned char>((-1))));
# 711 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(const mask * = 0, bool = false, size_t = (0));
# 724 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(__c_locale , const mask * = 0, bool = false, size_t = (0));
# 737 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline bool is(mask , char ) const;
# 752 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline const char *is(const char * , const char * , mask * ) const;
# 766 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline const char *scan_is(mask , const char * , const char * ) const;
# 780 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline const char *scan_not(mask , const char * , const char * ) const;
# 795 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char_type toupper(char_type __c) const
# 796 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_toupper(__c); }
# 812 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char_type *toupper(char_type *__lo, const char_type *__hi) const
# 813 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_toupper(__lo, __hi); }
# 828 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char_type tolower(char_type __c) const
# 829 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_tolower(__c); }
# 845 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char_type *tolower(char_type *__lo, const char_type *__hi) const
# 846 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_tolower(__lo, __hi); }
# 865 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char_type widen(char __c) const
# 866 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 867 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (_M_widen_ok) {
# 868 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return (_M_widen)[static_cast< unsigned char>(__c)]; }
# 869 "/usr/include/c++/4.4/bits/locale_facets.h" 3
this->_M_widen_init();
# 870 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return this->do_widen(__c);
# 871 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 892 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char *widen(const char *__lo, const char *__hi, char_type *__to) const
# 893 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 894 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if ((_M_widen_ok) == 1)
# 895 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 896 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 897 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 898 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 899 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (!(_M_widen_ok)) {
# 900 "/usr/include/c++/4.4/bits/locale_facets.h" 3
this->_M_widen_init(); }
# 901 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return this->do_widen(__lo, __hi, __to);
# 902 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 923 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char narrow(char_type __c, char __dfault) const
# 924 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 925 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if ((_M_narrow)[static_cast< unsigned char>(__c)]) {
# 926 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return (_M_narrow)[static_cast< unsigned char>(__c)]; }
# 927 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char __t = this->do_narrow(__c, __dfault);
# 928 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (__t != __dfault) {
# 929 "/usr/include/c++/4.4/bits/locale_facets.h" 3
((_M_narrow)[static_cast< unsigned char>(__c)]) = __t; }
# 930 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __t;
# 931 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 956 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char_type *narrow(const char_type *__lo, const char_type *__hi, char
# 957 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__dfault, char *__to) const
# 958 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 959 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (__builtin_expect((_M_narrow_ok) == 1, true))
# 960 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 961 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 962 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 963 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 964 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (!(_M_narrow_ok)) {
# 965 "/usr/include/c++/4.4/bits/locale_facets.h" 3
this->_M_narrow_init(); }
# 966 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return this->do_narrow(__lo, __hi, __dfault, __to);
# 967 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 974 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const mask *table() const throw()
# 975 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return _M_table; }
# 979 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const mask *classic_table() throw();
# 989 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: virtual ~ctype();
# 1005 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type) const;
# 1022 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * , const char_type * ) const;
# 1038 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type) const;
# 1055 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * , const char_type * ) const;
# 1075 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const
# 1076 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return __c; }
# 1098 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const
# 1099 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 1100 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__dest, __lo, __hi - __lo);
# 1101 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 1102 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 1124 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char do_narrow(char_type __c, char) const
# 1125 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return __c; }
# 1150 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *
# 1151 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__dest) const
# 1152 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 1153 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__dest, __lo, __hi - __lo);
# 1154 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 1155 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 1158 "/usr/include/c++/4.4/bits/locale_facets.h" 3
private: void _M_narrow_init() const;
# 1159 "/usr/include/c++/4.4/bits/locale_facets.h" 3
void _M_widen_init() const;
# 1160 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1175 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype< wchar_t> : public __ctype_abstract_base< wchar_t> {
# 1180 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: typedef wchar_t char_type;
# 1181 "/usr/include/c++/4.4/bits/locale_facets.h" 3
typedef wctype_t __wmask_type;
# 1184 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: __c_locale _M_c_locale_ctype;
# 1187 "/usr/include/c++/4.4/bits/locale_facets.h" 3
bool _M_narrow_ok;
# 1188 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char _M_narrow[128];
# 1189 "/usr/include/c++/4.4/bits/locale_facets.h" 3
wint_t _M_widen[1 + (static_cast< unsigned char>((-1)))];
# 1192 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mask _M_bit[16];
# 1193 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__wmask_type _M_wmask[16];
# 1198 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: static locale::id id;
# 1208 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(size_t = (0));
# 1219 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(__c_locale , size_t = (0));
# 1223 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: __wmask_type _M_convert_to_wmask(const mask ) const;
# 1227 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual ~ctype();
# 1243 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual bool do_is(mask , char_type ) const;
# 1262 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_is(const char_type * , const char_type * , mask * ) const;
# 1280 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_scan_is(mask , const char_type * , const char_type * ) const;
# 1298 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_scan_not(mask , const char_type * , const char_type * ) const;
# 1315 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type) const;
# 1332 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * , const char_type * ) const;
# 1348 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type) const;
# 1365 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * , const char_type * ) const;
# 1385 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_widen(char) const;
# 1407 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char *do_widen(const char * , const char * , char_type * ) const;
# 1430 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char do_narrow(char_type, char ) const;
# 1456 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type * , const char_type * , char , char * ) const;
# 1461 "/usr/include/c++/4.4/bits/locale_facets.h" 3
void _M_initialize_ctype();
# 1462 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1466 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class ctype_byname : public ctype < _CharT >
    {
    public :
      typedef typename ctype < _CharT > :: mask mask;

      explicit
      ctype_byname ( const char * __s, size_t __refs = 0 );

    protected :
      virtual
      ~ ctype_byname ( ) { };
    };
# 1482 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype_byname< char> : public ctype< char> {
# 1486 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: explicit ctype_byname(const char * , size_t = (0));
# 1490 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: virtual ~ctype_byname();
# 1491 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1495 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype_byname< wchar_t> : public ctype< wchar_t> {
# 1499 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: explicit ctype_byname(const char * , size_t = (0));
# 1503 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: virtual ~ctype_byname();
# 1504 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1507 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 37 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
inline bool ctype< char> ::is(mask __m, char __c) const
# 42 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
{ return ((_M_table)[static_cast< unsigned char>(__c)]) & __m; }
# 46 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
inline const char *ctype< char> ::is(const char *__low, const char *__high, mask *__vec) const
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
{
# 48 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
while (__low < __high) {
# 49 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
(*(__vec++)) = ((_M_table)[static_cast< unsigned char>((*(__low++)))]); }
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
return __high;
# 51 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
}
# 55 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
inline const char *ctype< char> ::scan_is(mask __m, const char *__low, const char *__high) const
# 56 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
{
# 57 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
while ((__low < __high) && (!(((_M_table)[static_cast< unsigned char>((*__low))]) & __m))) {
# 59 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
++__low; }
# 60 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
return __low;
# 61 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
}
# 65 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
inline const char *ctype< char> ::scan_not(mask __m, const char *__low, const char *__high) const
# 66 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
{
# 67 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
while ((__low < __high) && ((((_M_table)[static_cast< unsigned char>((*__low))]) & __m) != 0)) {
# 69 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
++__low; }
# 70 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
return __low;
# 71 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
}
# 73 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
}
# 1512 "/usr/include/c++/4.4/bits/locale_facets.h" 3
namespace std __attribute((__visibility__("default"))) {
# 1515 "/usr/include/c++/4.4/bits/locale_facets.h" 3
class __num_base {
# 1521 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: enum {
# 1522 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ominus,
# 1523 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oplus,
# 1524 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ox,
# 1525 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oX,
# 1526 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_odigits,
# 1527 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_odigits_end = 20,
# 1528 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oudigits = 20,
# 1529 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oudigits_end = 36,
# 1530 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oe = 18,
# 1531 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oE = 34,
# 1532 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oend = 36
# 1533 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1540 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const char *_S_atoms_out;
# 1544 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const char *_S_atoms_in;
# 1547 "/usr/include/c++/4.4/bits/locale_facets.h" 3
enum {
# 1548 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iminus,
# 1549 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iplus,
# 1550 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ix,
# 1551 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iX,
# 1552 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_izero,
# 1553 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ie = 18,
# 1554 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iE = 24,
# 1555 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iend = 26
# 1556 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1561 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static void _S_format_float(const ios_base & , char * , char );
# 1562 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1564 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    struct __numpunct_cache : public locale :: facet
    {
      const char * _M_grouping;
      size_t _M_grouping_size;
      bool _M_use_grouping;
      const _CharT * _M_truename;
      size_t _M_truename_size;
      const _CharT * _M_falsename;
      size_t _M_falsename_size;
      _CharT _M_decimal_point;
      _CharT _M_thousands_sep;





      _CharT _M_atoms_out [ __num_base :: _S_oend ];





      _CharT _M_atoms_in [ __num_base :: _S_iend ];

      bool _M_allocated;

      __numpunct_cache ( size_t __refs = 0 ) : facet ( __refs ),
      _M_grouping ( __null ), _M_grouping_size ( 0 ), _M_use_grouping ( false ),
      _M_truename ( __null ), _M_truename_size ( 0 ), _M_falsename ( __null ),
      _M_falsename_size ( 0 ), _M_decimal_point ( _CharT ( ) ),
      _M_thousands_sep ( _CharT ( ) ), _M_allocated ( false )
      { }

      ~ __numpunct_cache ( );

      void
      _M_cache ( const locale & __loc );

    private :
      __numpunct_cache &
      operator = ( const __numpunct_cache & );

      explicit
      __numpunct_cache ( const __numpunct_cache & );
    };
# 1611 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    __numpunct_cache < _CharT > :: ~ __numpunct_cache ( )
    {
      if ( _M_allocated )
 {
   delete [ ] _M_grouping;
   delete [ ] _M_truename;
   delete [ ] _M_falsename;
 }
    }
# 1635 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class numpunct : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;

      typedef __numpunct_cache < _CharT > __cache_type;

    protected :
      __cache_type * _M_data;

    public :

      static locale :: id id;






      explicit
      numpunct ( size_t __refs = 0 ) : facet ( __refs ), _M_data ( __null )
      { _M_initialize_numpunct ( ); }

      explicit
      numpunct ( __cache_type * __cache, size_t __refs = 0 )
      : facet ( __refs ), _M_data ( __cache )
      { _M_initialize_numpunct ( ); }

      explicit
      numpunct ( __c_locale __cloc, size_t __refs = 0 )
      : facet ( __refs ), _M_data ( __null )
      { _M_initialize_numpunct ( __cloc ); }

      char_type
      decimal_point ( ) const
      { return this -> do_decimal_point ( ); }

      char_type
      thousands_sep ( ) const
      { return this -> do_thousands_sep ( ); }

      string
      grouping ( ) const
      { return this -> do_grouping ( ); }

      string_type
      truename ( ) const
      { return this -> do_truename ( ); }

      string_type
      falsename ( ) const
      { return this -> do_falsename ( ); }

    protected :

      virtual
      ~ numpunct ( );

      virtual char_type
      do_decimal_point ( ) const
      { return _M_data -> _M_decimal_point; }

      virtual char_type
      do_thousands_sep ( ) const
      { return _M_data -> _M_thousands_sep; }

      virtual string
      do_grouping ( ) const
      { return _M_data -> _M_grouping; }

      virtual string_type
      do_truename ( ) const
      { return _M_data -> _M_truename; }

      virtual string_type
      do_falsename ( ) const
      { return _M_data -> _M_falsename; }


      void
      _M_initialize_numpunct ( __c_locale __cloc = __null );
    };
# 1847 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT> locale::id
# 1848 "/usr/include/c++/4.4/bits/locale_facets.h" 3
numpunct< _CharT> ::id;
# 1851 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> numpunct< char> ::~numpunct();
# 1855 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void numpunct< char> ::_M_initialize_numpunct(__c_locale );
# 1859 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> numpunct< wchar_t> ::~numpunct();
# 1863 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void numpunct< wchar_t> ::_M_initialize_numpunct(__c_locale );
# 1867 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class numpunct_byname : public numpunct < _CharT >
    {
    public :
      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;

      explicit
      numpunct_byname ( const char * __s, size_t __refs = 0 )
      : numpunct < _CharT > ( __refs )
      {
 if ( __builtin_strcmp ( __s, "C" ) != 0
     && __builtin_strcmp ( __s, "POSIX" ) != 0 )
   {
     __c_locale __tmp;
     this -> _S_create_c_locale ( __tmp, __s );
     this -> _M_initialize_numpunct ( __tmp );
     this -> _S_destroy_c_locale ( __tmp );
   }
      }

    protected :
      virtual
      ~ numpunct_byname ( ) { }
    };
# 1907 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT, typename _InIter >
    class num_get : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef _InIter iter_type;



      static locale :: id id;

      explicit
      num_get ( size_t __refs = 0 ) : facet ( __refs ) { }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, bool & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned short & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned int & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }


      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, long long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned long long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, float & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, double & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, long double & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, void * & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

    protected :

      virtual ~ num_get ( ) { }

      iter_type
      _M_extract_float ( iter_type, iter_type, ios_base &, ios_base :: iostate &,
         string & ) const;

      template < typename _ValueT >
        iter_type
        _M_extract_int ( iter_type, iter_type, ios_base &, ios_base :: iostate &,
         _ValueT & ) const;

      template < typename _CharT2 >
      typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value, int > :: __type
        _M_find ( const _CharT2 *, size_t __len, _CharT2 __c ) const
        {
   int __ret = - 1;
   if ( __len <= 10 )
     {
       if ( __c >= _CharT2 ( '0' ) && __c < _CharT2 ( _CharT2 ( '0' ) + __len ) )
  __ret = __c - _CharT2 ( '0' );
     }
   else
     {
       if ( __c >= _CharT2 ( '0' ) && __c <= _CharT2 ( '9' ) )
  __ret = __c - _CharT2 ( '0' );
       else if ( __c >= _CharT2 ( 'a' ) && __c <= _CharT2 ( 'f' ) )
  __ret = 10 + ( __c - _CharT2 ( 'a' ) );
       else if ( __c >= _CharT2 ( 'A' ) && __c <= _CharT2 ( 'F' ) )
  __ret = 10 + ( __c - _CharT2 ( 'A' ) );
     }
   return __ret;
 }

      template < typename _CharT2 >
      typename __gnu_cxx :: __enable_if < ! __is_char < _CharT2 > :: __value,
          int > :: __type
        _M_find ( const _CharT2 * __zero, size_t __len, _CharT2 __c ) const
        {
   int __ret = - 1;
   const char_type * __q = char_traits < _CharT2 > :: find ( __zero, __len, __c );
   if ( __q )
     {
       __ret = __q - __zero;
       if ( __ret > 15 )
  __ret -= 6;
     }
   return __ret;
 }

      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate &, bool & ) const;

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned short & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned int & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }


      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, long long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned long long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }


      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      float & ) const;

      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      double & ) const;







      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      long double & ) const;


      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      void * & ) const;

    };
# 2229 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT, class _InIter> locale::id
# 2230 "/usr/include/c++/4.4/bits/locale_facets.h" 3
num_get< _CharT, _InIter> ::id;
# 2244 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT, typename _OutIter >
    class num_put : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef _OutIter iter_type;



      static locale :: id id;

      explicit
      num_put ( size_t __refs = 0 ) : facet ( __refs ) { }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, bool __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   unsigned long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }


      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, long long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   unsigned long long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, double __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   long double __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   const void * __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

    protected :
      template < typename _ValueT >
        iter_type
        _M_insert_float ( iter_type, ios_base & __io, char_type __fill,
   char __mod, _ValueT __v ) const;

      void
      _M_group_float ( const char * __grouping, size_t __grouping_size,
       char_type __sep, const char_type * __p, char_type * __new,
       char_type * __cs, int & __len ) const;

      template < typename _ValueT >
        iter_type
        _M_insert_int ( iter_type, ios_base & __io, char_type __fill,
        _ValueT __v ) const;

      void
      _M_group_int ( const char * __grouping, size_t __grouping_size,
     char_type __sep, ios_base & __io, char_type * __new,
     char_type * __cs, int & __len ) const;

      void
      _M_pad ( char_type __fill, streamsize __w, ios_base & __io,
      char_type * __new, const char_type * __cs, int & __len ) const;


      virtual
      ~ num_put ( ) { };

      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, bool __v ) const;

      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill, long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }

      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill,
      unsigned long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }


      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill,
      long long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }

      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill,
      unsigned long long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }


      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, double __v ) const;






      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, long double __v ) const;


      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, const void * __v ) const;







    };
# 2508 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT, class _OutIter> locale::id
# 2509 "/usr/include/c++/4.4/bits/locale_facets.h" 3
num_put< _CharT, _OutIter> ::id;
# 2519 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isspace ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: space, __c ); }
# 2525 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isprint ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: print, __c ); }
# 2531 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    iscntrl ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: cntrl, __c ); }
# 2537 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isupper ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: upper, __c ); }
# 2543 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    islower ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: lower, __c ); }
# 2549 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isalpha ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: alpha, __c ); }
# 2555 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isdigit ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: digit, __c ); }
# 2561 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    ispunct ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: punct, __c ); }
# 2567 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isxdigit ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: xdigit, __c ); }
# 2573 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isalnum ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: alnum, __c ); }
# 2579 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isgraph ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: graph, __c ); }
# 2585 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline _CharT
    toupper ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . toupper ( __c ); }
# 2591 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline _CharT
    tolower ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . tolower ( __c ); }
# 2596 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 37 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template< class _Facet>
# 42 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
struct __use_cache {
# 45 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
const _Facet *operator()(const locale & ) const;
# 46 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
};
# 49 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT >
    struct __use_cache < __numpunct_cache < _CharT > >
    {
      const __numpunct_cache < _CharT > *
      operator ( ) ( const locale & __loc ) const
      {
 const size_t __i = numpunct < _CharT > :: id . _M_id ( );
 const locale :: facet * * __caches = __loc . _M_impl -> _M_caches;
 if ( ! __caches [ __i ] )
   {
     __numpunct_cache < _CharT > * __tmp = __null;
     try
       {
  __tmp = new __numpunct_cache < _CharT >;
  __tmp -> _M_cache ( __loc );
       }
     catch ( ... )
       {
  delete __tmp;
  throw;
       }
     __loc . _M_impl -> _M_install_cache ( __tmp, __i );
   }
 return static_cast < const __numpunct_cache < _CharT > * > ( __caches [ __i ] );
      }
    };
# 76 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT >
    void
    __numpunct_cache < _CharT > :: _M_cache ( const locale & __loc )
    {
      _M_allocated = true;

      const numpunct < _CharT > & __np = use_facet < numpunct < _CharT > > ( __loc );

      _M_grouping_size = __np . grouping ( ) . size ( );
      char * __grouping = new char [ _M_grouping_size ];
      __np . grouping ( ) . copy ( __grouping, _M_grouping_size );
      _M_grouping = __grouping;
      _M_use_grouping = ( _M_grouping_size
    && static_cast < signed char > ( _M_grouping [ 0 ] ) > 0
    && ( _M_grouping [ 0 ]
        != __gnu_cxx :: __numeric_traits < char > :: __max ) );

      _M_truename_size = __np . truename ( ) . size ( );
      _CharT * __truename = new _CharT [ _M_truename_size ];
      __np . truename ( ) . copy ( __truename, _M_truename_size );
      _M_truename = __truename;

      _M_falsename_size = __np . falsename ( ) . size ( );
      _CharT * __falsename = new _CharT [ _M_falsename_size ];
      __np . falsename ( ) . copy ( __falsename, _M_falsename_size );
      _M_falsename = __falsename;

      _M_decimal_point = __np . decimal_point ( );
      _M_thousands_sep = __np . thousands_sep ( );

      const ctype < _CharT > & __ct = use_facet < ctype < _CharT > > ( __loc );
      __ct . widen ( __num_base :: _S_atoms_out,
   __num_base :: _S_atoms_out + __num_base :: _S_oend, _M_atoms_out );
      __ct . widen ( __num_base :: _S_atoms_in,
   __num_base :: _S_atoms_in + __num_base :: _S_iend, _M_atoms_in );
    }
# 122 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
bool __verify_grouping(const char * , size_t , const string & );
# 127 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    _M_extract_float ( _InIter __beg, _InIter __end, ios_base & __io,
       ios_base :: iostate & __err, string & __xtrc ) const
    {
      typedef char_traits < _CharT > __traits_type;
      typedef __numpunct_cache < _CharT > __cache_type;
      __use_cache < __cache_type > __uc;
      const locale & __loc = __io . _M_getloc ( );
      const __cache_type * __lc = __uc ( __loc );
      const _CharT * __lit = __lc -> _M_atoms_in;
      char_type __c = char_type ( );


      bool __testeof = __beg == __end;


      if ( ! __testeof )
 {
   __c = * __beg;
   const bool __plus = __c == __lit [ __num_base :: _S_iplus ];
   if ( ( __plus || __c == __lit [ __num_base :: _S_iminus ] )
       && ! ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
       && ! ( __c == __lc -> _M_decimal_point ) )
     {
       __xtrc += __plus ? '+' : '-';
       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }
 }


      bool __found_mantissa = false;
      int __sep_pos = 0;
      while ( ! __testeof )
 {
   if ( ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
       || __c == __lc -> _M_decimal_point )
     break;
   else if ( __c == __lit [ __num_base :: _S_izero ] )
     {
       if ( ! __found_mantissa )
  {
    __xtrc += '0';
    __found_mantissa = true;
  }
       ++ __sep_pos;

       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }
   else
     break;
 }


      bool __found_dec = false;
      bool __found_sci = false;
      string __found_grouping;
      if ( __lc -> _M_use_grouping )
 __found_grouping . reserve ( 32 );
      const char_type * __lit_zero = __lit + __num_base :: _S_izero;

      if ( ! __lc -> _M_allocated )

 while ( ! __testeof )
   {
     const int __digit = _M_find ( __lit_zero, 10, __c );
     if ( __digit != - 1 )
       {
  __xtrc += '0' + __digit;
  __found_mantissa = true;
       }
     else if ( __c == __lc -> _M_decimal_point
       && ! __found_dec && ! __found_sci )
       {
  __xtrc += '.';
  __found_dec = true;
       }
     else if ( ( __c == __lit [ __num_base :: _S_ie ]
        || __c == __lit [ __num_base :: _S_iE ] )
       && ! __found_sci && __found_mantissa )
       {

  __xtrc += 'e';
  __found_sci = true;


  if ( ++ __beg != __end )
    {
      __c = * __beg;
      const bool __plus = __c == __lit [ __num_base :: _S_iplus ];
      if ( __plus || __c == __lit [ __num_base :: _S_iminus ] )
        __xtrc += __plus ? '+' : '-';
      else
        continue;
    }
  else
    {
      __testeof = true;
      break;
    }
       }
     else
       break;

     if ( ++ __beg != __end )
       __c = * __beg;
     else
       __testeof = true;
   }
      else
 while ( ! __testeof )
   {


     if ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
       {
  if ( ! __found_dec && ! __found_sci )
    {


      if ( __sep_pos )
        {
   __found_grouping += static_cast < char > ( __sep_pos );
   __sep_pos = 0;
        }
      else
        {


   __xtrc . clear ( );
   break;
        }
    }
  else
    break;
       }
     else if ( __c == __lc -> _M_decimal_point )
       {
  if ( ! __found_dec && ! __found_sci )
    {



      if ( __found_grouping . size ( ) )
        __found_grouping += static_cast < char > ( __sep_pos );
      __xtrc += '.';
      __found_dec = true;
    }
  else
    break;
       }
     else
       {
  const char_type * __q =
    __traits_type :: find ( __lit_zero, 10, __c );
  if ( __q )
    {
      __xtrc += '0' + ( __q - __lit_zero );
      __found_mantissa = true;
      ++ __sep_pos;
    }
  else if ( ( __c == __lit [ __num_base :: _S_ie ]
     || __c == __lit [ __num_base :: _S_iE ] )
    && ! __found_sci && __found_mantissa )
    {

      if ( __found_grouping . size ( ) && ! __found_dec )
        __found_grouping += static_cast < char > ( __sep_pos );
      __xtrc += 'e';
      __found_sci = true;


      if ( ++ __beg != __end )
        {
   __c = * __beg;
   const bool __plus = __c == __lit [ __num_base :: _S_iplus ];
   if ( ( __plus || __c == __lit [ __num_base :: _S_iminus ] )
       && ! ( __lc -> _M_use_grouping
     && __c == __lc -> _M_thousands_sep )
       && ! ( __c == __lc -> _M_decimal_point ) )
        __xtrc += __plus ? '+' : '-';
   else
     continue;
        }
      else
        {
   __testeof = true;
   break;
        }
    }
  else
    break;
       }

     if ( ++ __beg != __end )
       __c = * __beg;
     else
       __testeof = true;
   }



      if ( __found_grouping . size ( ) )
        {

   if ( ! __found_dec && ! __found_sci )
     __found_grouping += static_cast < char > ( __sep_pos );

          if ( ! std :: __verify_grouping ( __lc -> _M_grouping,
          __lc -> _M_grouping_size,
          __found_grouping ) )
     __err = ios_base :: failbit;
        }

      return __beg;
    }
# 351 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    template < typename _ValueT >
      _InIter
      num_get < _CharT, _InIter > ::
      _M_extract_int ( _InIter __beg, _InIter __end, ios_base & __io,
       ios_base :: iostate & __err, _ValueT & __v ) const
      {
        typedef char_traits < _CharT > __traits_type;
 using __gnu_cxx :: __add_unsigned;
 typedef typename __add_unsigned < _ValueT > :: __type __unsigned_type;
 typedef __numpunct_cache < _CharT > __cache_type;
 __use_cache < __cache_type > __uc;
 const locale & __loc = __io . _M_getloc ( );
 const __cache_type * __lc = __uc ( __loc );
 const _CharT * __lit = __lc -> _M_atoms_in;
 char_type __c = char_type ( );


 const ios_base :: fmtflags __basefield = __io . flags ( )
                                        & ios_base :: basefield;
 const bool __oct = __basefield == ios_base :: oct;
 int __base = __oct ? 8 : ( __basefield == ios_base :: hex ? 16 : 10 );


 bool __testeof = __beg == __end;


 bool __negative = false;
 if ( ! __testeof )
   {
     __c = * __beg;
     __negative = __c == __lit [ __num_base :: _S_iminus ];
     if ( ( __negative || __c == __lit [ __num_base :: _S_iplus ] )
  && ! ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
  && ! ( __c == __lc -> _M_decimal_point ) )
       {
  if ( ++ __beg != __end )
    __c = * __beg;
  else
    __testeof = true;
       }
   }



 bool __found_zero = false;
 int __sep_pos = 0;
 while ( ! __testeof )
   {
     if ( ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
  || __c == __lc -> _M_decimal_point )
       break;
     else if ( __c == __lit [ __num_base :: _S_izero ]
       && ( ! __found_zero || __base == 10 ) )
       {
  __found_zero = true;
  ++ __sep_pos;
  if ( __basefield == 0 )
    __base = 8;
  if ( __base == 8 )
    __sep_pos = 0;
       }
     else if ( __found_zero
       && ( __c == __lit [ __num_base :: _S_ix ]
    || __c == __lit [ __num_base :: _S_iX ] ) )
       {
  if ( __basefield == 0 )
    __base = 16;
  if ( __base == 16 )
    {
      __found_zero = false;
      __sep_pos = 0;
    }
  else
    break;
       }
     else
       break;

     if ( ++ __beg != __end )
       {
  __c = * __beg;
  if ( ! __found_zero )
    break;
       }
     else
       __testeof = true;
   }



 const size_t __len = ( __base == 16 ? __num_base :: _S_iend
         - __num_base :: _S_izero : __base );


 string __found_grouping;
 if ( __lc -> _M_use_grouping )
   __found_grouping . reserve ( 32 );
 bool __testfail = false;
 bool __testoverflow = false;
 const __unsigned_type __max =
   ( __negative && __gnu_cxx :: __numeric_traits < _ValueT > :: __is_signed )
   ? - __gnu_cxx :: __numeric_traits < _ValueT > :: __min
   : __gnu_cxx :: __numeric_traits < _ValueT > :: __max;
 const __unsigned_type __smax = __max / __base;
 __unsigned_type __result = 0;
 int __digit = 0;
 const char_type * __lit_zero = __lit + __num_base :: _S_izero;

 if ( ! __lc -> _M_allocated )

   while ( ! __testeof )
     {
       __digit = _M_find ( __lit_zero, __len, __c );
       if ( __digit == - 1 )
  break;

       if ( __result > __smax )
  __testoverflow = true;
       else
  {
    __result *= __base;
    __testoverflow |= __result > __max - __digit;
    __result += __digit;
    ++ __sep_pos;
  }

       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }
 else
   while ( ! __testeof )
     {


       if ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
  {


    if ( __sep_pos )
      {
        __found_grouping += static_cast < char > ( __sep_pos );
        __sep_pos = 0;
      }
    else
      {
        __testfail = true;
        break;
      }
  }
       else if ( __c == __lc -> _M_decimal_point )
  break;
       else
  {
    const char_type * __q =
      __traits_type :: find ( __lit_zero, __len, __c );
    if ( ! __q )
      break;

    __digit = __q - __lit_zero;
    if ( __digit > 15 )
      __digit -= 6;
    if ( __result > __smax )
      __testoverflow = true;
    else
      {
        __result *= __base;
        __testoverflow |= __result > __max - __digit;
        __result += __digit;
        ++ __sep_pos;
      }
  }

       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }



 if ( __found_grouping . size ( ) )
   {

     __found_grouping += static_cast < char > ( __sep_pos );

     if ( ! std :: __verify_grouping ( __lc -> _M_grouping,
     __lc -> _M_grouping_size,
     __found_grouping ) )
       __err = ios_base :: failbit;
   }



 if ( ( ! __sep_pos && ! __found_zero && ! __found_grouping . size ( ) )
     || __testfail )
   {
     __v = 0;
     __err = ios_base :: failbit;
   }
 else if ( __testoverflow )
   {
     if ( __negative
  && __gnu_cxx :: __numeric_traits < _ValueT > :: __is_signed )
       __v = __gnu_cxx :: __numeric_traits < _ValueT > :: __min;
     else
       __v = __gnu_cxx :: __numeric_traits < _ValueT > :: __max;
     __err = ios_base :: failbit;
   }
 else
   __v = __negative ? - __result : __result;

 if ( __testeof )
   __err |= ios_base :: eofbit;
 return __beg;
      }
# 572 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, bool & __v ) const
    {
      if ( ! ( __io . flags ( ) & ios_base :: boolalpha ) )
        {



   long __l = - 1;
          __beg = _M_extract_int ( __beg, __end, __io, __err, __l );
   if ( __l == 0 || __l == 1 )
     __v = bool ( __l );
   else
     {


       __v = true;
       __err = ios_base :: failbit;
       if ( __beg == __end )
  __err |= ios_base :: eofbit;
     }
        }
      else
        {

   typedef __numpunct_cache < _CharT > __cache_type;
   __use_cache < __cache_type > __uc;
   const locale & __loc = __io . _M_getloc ( );
   const __cache_type * __lc = __uc ( __loc );

   bool __testf = true;
   bool __testt = true;
   bool __donef = __lc -> _M_falsename_size == 0;
   bool __donet = __lc -> _M_truename_size == 0;
   bool __testeof = false;
   size_t __n = 0;
   while ( ! __donef || ! __donet )
     {
       if ( __beg == __end )
  {
    __testeof = true;
    break;
  }

       const char_type __c = * __beg;

       if ( ! __donef )
  __testf = __c == __lc -> _M_falsename [ __n ];

       if ( ! __testf && __donet )
  break;

       if ( ! __donet )
  __testt = __c == __lc -> _M_truename [ __n ];

       if ( ! __testt && __donef )
  break;

       if ( ! __testt && ! __testf )
  break;

       ++ __n;
       ++ __beg;

       __donef = ! __testf || __n >= __lc -> _M_falsename_size;
       __donet = ! __testt || __n >= __lc -> _M_truename_size;
     }
   if ( __testf && __n == __lc -> _M_falsename_size && __n )
     {
       __v = false;
       if ( __testt && __n == __lc -> _M_truename_size )
  __err = ios_base :: failbit;
       else
  __err = __testeof ? ios_base :: eofbit : ios_base :: goodbit;
     }
   else if ( __testt && __n == __lc -> _M_truename_size && __n )
     {
       __v = true;
       __err = __testeof ? ios_base :: eofbit : ios_base :: goodbit;
     }
   else
     {


       __v = false;
       __err = ios_base :: failbit;
       if ( __testeof )
  __err |= ios_base :: eofbit;
     }
 }
      return __beg;
    }
# 668 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
    ios_base :: iostate & __err, float & __v ) const
    {
      string __xtrc;
      __xtrc . reserve ( 32 );
      __beg = _M_extract_float ( __beg, __end, __io, __err, __xtrc );
      std :: __convert_to_v ( __xtrc . c_str ( ), __v, __err, _S_get_c_locale ( ) );
      if ( __beg == __end )
 __err |= ios_base :: eofbit;
      return __beg;
    }
# 683 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, double & __v ) const
    {
      string __xtrc;
      __xtrc . reserve ( 32 );
      __beg = _M_extract_float ( __beg, __end, __io, __err, __xtrc );
      std :: __convert_to_v ( __xtrc . c_str ( ), __v, __err, _S_get_c_locale ( ) );
      if ( __beg == __end )
 __err |= ios_base :: eofbit;
      return __beg;
    }
# 715 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, long double & __v ) const
    {
      string __xtrc;
      __xtrc . reserve ( 32 );
      __beg = _M_extract_float ( __beg, __end, __io, __err, __xtrc );
      std :: __convert_to_v ( __xtrc . c_str ( ), __v, __err, _S_get_c_locale ( ) );
      if ( __beg == __end )
 __err |= ios_base :: eofbit;
      return __beg;
    }
# 730 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, void * & __v ) const
    {

      typedef ios_base :: fmtflags fmtflags;
      const fmtflags __fmt = __io . flags ( );
      __io . flags ( ( __fmt & ~ ios_base :: basefield ) | ios_base :: hex );

      typedef __gnu_cxx :: __conditional_type < ( sizeof ( void * )
          <= sizeof ( unsigned long ) ),
 unsigned long, unsigned long long > :: __type _UIntPtrType;

      _UIntPtrType __ul;
      __beg = _M_extract_int ( __beg, __end, __io, __err, __ul );


      __io . flags ( __fmt );

      __v = reinterpret_cast < void * > ( __ul );
      return __beg;
    }
# 757 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    void
    num_put < _CharT, _OutIter > ::
    _M_pad ( _CharT __fill, streamsize __w, ios_base & __io,
    _CharT * __new, const _CharT * __cs, int & __len ) const
    {


      __pad < _CharT, char_traits < _CharT > > :: _S_pad ( __io, __fill, __new,
        __cs, __w, __len );
      __len = static_cast < int > ( __w );
    }
# 772 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _ValueT >
    int
    __int_to_char ( _CharT * __bufend, _ValueT __v, const _CharT * __lit,
    ios_base :: fmtflags __flags, bool __dec )
    {
      _CharT * __buf = __bufend;
      if ( __builtin_expect ( __dec, true ) )
 {

   do
     {
       * -- __buf = __lit [ ( __v % 10 ) + __num_base :: _S_odigits ];
       __v /= 10;
     }
   while ( __v != 0 );
 }
      else if ( ( __flags & ios_base :: basefield ) == ios_base :: oct )
 {

   do
     {
       * -- __buf = __lit [ ( __v & 7 ) + __num_base :: _S_odigits ];
       __v >>= 3;
     }
   while ( __v != 0 );
 }
      else
 {

   const bool __uppercase = __flags & ios_base :: uppercase;
   const int __case_offset = __uppercase ? __num_base :: _S_oudigits
                                         : __num_base :: _S_odigits;
   do
     {
       * -- __buf = __lit [ ( __v & 15 ) + __case_offset ];
       __v >>= 4;
     }
   while ( __v != 0 );
 }
      return __bufend - __buf;
    }
# 816 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    void
    num_put < _CharT, _OutIter > ::
    _M_group_int ( const char * __grouping, size_t __grouping_size, _CharT __sep,
   ios_base &, _CharT * __new, _CharT * __cs, int & __len ) const
    {
      _CharT * __p = std :: __add_grouping ( __new, __sep, __grouping,
     __grouping_size, __cs, __cs + __len );
      __len = __p - __new;
    }
# 827 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    template < typename _ValueT >
      _OutIter
      num_put < _CharT, _OutIter > ::
      _M_insert_int ( _OutIter __s, ios_base & __io, _CharT __fill,
      _ValueT __v ) const
      {
 using __gnu_cxx :: __add_unsigned;
 typedef typename __add_unsigned < _ValueT > :: __type __unsigned_type;
 typedef __numpunct_cache < _CharT > __cache_type;
 __use_cache < __cache_type > __uc;
 const locale & __loc = __io . _M_getloc ( );
 const __cache_type * __lc = __uc ( __loc );
 const _CharT * __lit = __lc -> _M_atoms_out;
 const ios_base :: fmtflags __flags = __io . flags ( );


 const int __ilen = 5 * sizeof ( _ValueT );
 _CharT * __cs = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
            * __ilen ) );



 const ios_base :: fmtflags __basefield = __flags & ios_base :: basefield;
 const bool __dec = ( __basefield != ios_base :: oct
       && __basefield != ios_base :: hex );
 const __unsigned_type __u = ( ( __v > 0 || ! __dec )
         ? __unsigned_type ( __v )
         : - __unsigned_type ( __v ) );
  int __len = __int_to_char ( __cs + __ilen, __u, __lit, __flags, __dec );
 __cs += __ilen - __len;


 if ( __lc -> _M_use_grouping )
   {


     _CharT * __cs2 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * ( __len + 1 )
          * 2 ) );
     _M_group_int ( __lc -> _M_grouping, __lc -> _M_grouping_size,
    __lc -> _M_thousands_sep, __io, __cs2 + 2, __cs, __len );
     __cs = __cs2 + 2;
   }


 if ( __builtin_expect ( __dec, true ) )
   {

     if ( __v >= 0 )
       {
  if ( bool ( __flags & ios_base :: showpos )
      && __gnu_cxx :: __numeric_traits < _ValueT > :: __is_signed )
    * -- __cs = __lit [ __num_base :: _S_oplus ], ++ __len;
       }
     else
       * -- __cs = __lit [ __num_base :: _S_ominus ], ++ __len;
   }
 else if ( bool ( __flags & ios_base :: showbase ) && __v )
   {
     if ( __basefield == ios_base :: oct )
       * -- __cs = __lit [ __num_base :: _S_odigits ], ++ __len;
     else
       {

  const bool __uppercase = __flags & ios_base :: uppercase;
  * -- __cs = __lit [ __num_base :: _S_ox + __uppercase ];

  * -- __cs = __lit [ __num_base :: _S_odigits ];
  __len += 2;
       }
   }


 const streamsize __w = __io . width ( );
 if ( __w > static_cast < streamsize > ( __len ) )
   {
     _CharT * __cs3 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * __w ) );
     _M_pad ( __fill, __w, __io, __cs3, __cs, __len );
     __cs = __cs3;
   }
 __io . width ( 0 );



 return std :: __write ( __s, __cs, __len );
      }
# 916 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    void
    num_put < _CharT, _OutIter > ::
    _M_group_float ( const char * __grouping, size_t __grouping_size,
     _CharT __sep, const _CharT * __p, _CharT * __new,
     _CharT * __cs, int & __len ) const
    {



      const int __declen = __p ? __p - __cs : __len;
      _CharT * __p2 = std :: __add_grouping ( __new, __sep, __grouping,
      __grouping_size,
      __cs, __cs + __declen );


      int __newlen = __p2 - __new;
      if ( __p )
 {
   char_traits < _CharT > :: copy ( __p2, __p, __len - __declen );
   __newlen += __len - __declen;
 }
      __len = __newlen;
    }
# 951 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    template < typename _ValueT >
      _OutIter
      num_put < _CharT, _OutIter > ::
      _M_insert_float ( _OutIter __s, ios_base & __io, _CharT __fill, char __mod,
         _ValueT __v ) const
      {
 typedef __numpunct_cache < _CharT > __cache_type;
 __use_cache < __cache_type > __uc;
 const locale & __loc = __io . _M_getloc ( );
 const __cache_type * __lc = __uc ( __loc );


 const streamsize __prec = __io . precision ( ) < 0 ? 6 : __io . precision ( );

 const int __max_digits =
   __gnu_cxx :: __numeric_traits < _ValueT > :: __digits10;


 int __len;

 char __fbuf [ 16 ];
 __num_base :: _S_format_float ( __io, __fbuf, __mod );




 int __cs_size = __max_digits * 3;
 char * __cs = static_cast < char * > ( __builtin_alloca ( __cs_size ) );
 __len = std :: __convert_from_v ( _S_get_c_locale ( ), __cs, __cs_size,
          __fbuf, __prec, __v );


 if ( __len >= __cs_size )
   {
     __cs_size = __len + 1;
     __cs = static_cast < char * > ( __builtin_alloca ( __cs_size ) );
     __len = std :: __convert_from_v ( _S_get_c_locale ( ), __cs, __cs_size,
       __fbuf, __prec, __v );
   }

 const ctype < _CharT > & __ctype = use_facet < ctype < _CharT > > ( __loc );

 _CharT * __ws = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
            * __len ) );
 __ctype . widen ( __cs, __cs + __len, __ws );


 _CharT * __wp = 0;
 const char * __p = char_traits < char > :: find ( __cs, __len, '.' );
 if ( __p )
   {
     __wp = __ws + ( __p - __cs );
     * __wp = __lc -> _M_decimal_point;
   }




 if ( __lc -> _M_use_grouping
     && ( __wp || __len < 3 || ( __cs [ 1 ] <= '9' && __cs [ 2 ] <= '9'
          && __cs [ 1 ] >= '0' && __cs [ 2 ] >= '0' ) ) )
   {


     _CharT * __ws2 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * __len * 2 ) );

     streamsize __off = 0;
     if ( __cs [ 0 ] == '-' || __cs [ 0 ] == '+' )
       {
  __off = 1;
  __ws2 [ 0 ] = __ws [ 0 ];
  __len -= 1;
       }

     _M_group_float ( __lc -> _M_grouping, __lc -> _M_grouping_size,
      __lc -> _M_thousands_sep, __wp, __ws2 + __off,
      __ws + __off, __len );
     __len += __off;

     __ws = __ws2;
   }


 const streamsize __w = __io . width ( );
 if ( __w > static_cast < streamsize > ( __len ) )
   {
     _CharT * __ws3 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * __w ) );
     _M_pad ( __fill, __w, __io, __ws3, __ws, __len );
     __ws = __ws3;
   }
 __io . width ( 0 );



 return std :: __write ( __s, __ws, __len );
      }
# 1071 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill, bool __v ) const
    {
      const ios_base :: fmtflags __flags = __io . flags ( );
      if ( ( __flags & ios_base :: boolalpha ) == 0 )
        {
          const long __l = __v;
          __s = _M_insert_int ( __s, __io, __fill, __l );
        }
      else
        {
   typedef __numpunct_cache < _CharT > __cache_type;
   __use_cache < __cache_type > __uc;
   const locale & __loc = __io . _M_getloc ( );
   const __cache_type * __lc = __uc ( __loc );

   const _CharT * __name = __v ? __lc -> _M_truename
                              : __lc -> _M_falsename;
   int __len = __v ? __lc -> _M_truename_size
                   : __lc -> _M_falsename_size;

   const streamsize __w = __io . width ( );
   if ( __w > static_cast < streamsize > ( __len ) )
     {
       const streamsize __plen = __w - __len;
       _CharT * __ps
  = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
       * __plen ) );

       char_traits < _CharT > :: assign ( __ps, __plen, __fill );
       __io . width ( 0 );

       if ( ( __flags & ios_base :: adjustfield ) == ios_base :: left )
  {
    __s = std :: __write ( __s, __name, __len );
    __s = std :: __write ( __s, __ps, __plen );
  }
       else
  {
    __s = std :: __write ( __s, __ps, __plen );
    __s = std :: __write ( __s, __name, __len );
  }
       return __s;
     }
   __io . width ( 0 );
   __s = std :: __write ( __s, __name, __len );
 }
      return __s;
    }
# 1123 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill, double __v ) const
    { return _M_insert_float ( __s, __io, __fill, char ( ), __v ); }
# 1137 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill,
    long double __v ) const
    { return _M_insert_float ( __s, __io, __fill, 'L', __v ); }
# 1144 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill,
           const void * __v ) const
    {
      const ios_base :: fmtflags __flags = __io . flags ( );
      const ios_base :: fmtflags __fmt = ~ ( ios_base :: basefield
      | ios_base :: uppercase );
      __io . flags ( ( __flags & __fmt ) | ( ios_base :: hex | ios_base :: showbase ) );

      typedef __gnu_cxx :: __conditional_type < ( sizeof ( const void * )
          <= sizeof ( unsigned long ) ),
 unsigned long, unsigned long long > :: __type _UIntPtrType;

      __s = _M_insert_int ( __s, __io, __fill,
     reinterpret_cast < _UIntPtrType > ( __v ) );
      __io . flags ( __flags );
      return __s;
    }
# 1174 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _Traits >
    void
    __pad < _CharT, _Traits > :: _S_pad ( ios_base & __io, _CharT __fill,
       _CharT * __news, const _CharT * __olds,
       streamsize __newlen, streamsize __oldlen )
    {
      const size_t __plen = static_cast < size_t > ( __newlen - __oldlen );
      const ios_base :: fmtflags __adjust = __io . flags ( ) & ios_base :: adjustfield;


      if ( __adjust == ios_base :: left )
 {
   _Traits :: copy ( __news, __olds, __oldlen );
   _Traits :: assign ( __news + __oldlen, __plen, __fill );
   return;
 }

      size_t __mod = 0;
      if ( __adjust == ios_base :: internal )
 {



          const locale & __loc = __io . _M_getloc ( );
   const ctype < _CharT > & __ctype = use_facet < ctype < _CharT > > ( __loc );

   if ( __ctype . widen ( '-' ) == __olds [ 0 ]
       || __ctype . widen ( '+' ) == __olds [ 0 ] )
     {
       __news [ 0 ] = __olds [ 0 ];
       __mod = 1;
       ++ __news;
     }
   else if ( __ctype . widen ( '0' ) == __olds [ 0 ]
     && __oldlen > 1
     && ( __ctype . widen ( 'x' ) == __olds [ 1 ]
         || __ctype . widen ( 'X' ) == __olds [ 1 ] ) )
     {
       __news [ 0 ] = __olds [ 0 ];
       __news [ 1 ] = __olds [ 1 ];
       __mod = 2;
       __news += 2;
     }

 }
      _Traits :: assign ( __news, __plen, __fill );
      _Traits :: copy ( __news + __plen, __olds + __mod, __oldlen - __mod );
    }
# 1223 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT >
    _CharT *
    __add_grouping ( _CharT * __s, _CharT __sep,
     const char * __gbeg, size_t __gsize,
     const _CharT * __first, const _CharT * __last )
    {
      size_t __idx = 0;
      size_t __ctr = 0;

      while ( __last - __first > __gbeg [ __idx ]
      && static_cast < signed char > ( __gbeg [ __idx ] ) > 0
      && __gbeg [ __idx ] != __gnu_cxx :: __numeric_traits < char > :: __max )
 {
   __last -= __gbeg [ __idx ];
   __idx < __gsize - 1 ? ++ __idx : ++ __ctr;
 }

      while ( __first != __last )
 * __s ++ = * __first ++;

      while ( __ctr -- )
 {
   * __s ++ = __sep;
   for ( char __i = __gbeg [ __idx ]; __i > 0; -- __i )
     * __s ++ = * __first ++;
 }

      while ( __idx -- )
 {
   * __s ++ = __sep;
   for ( char __i = __gbeg [ __idx ]; __i > 0; -- __i )
     * __s ++ = * __first ++;
 }

      return __s;
    }
# 1264 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct< char> ;
# 1265 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct_byname< char> ;
# 1266 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_get< char, istreambuf_iterator< char, char_traits< char> > > ;
# 1267 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_put< char, ostreambuf_iterator< char, char_traits< char> > > ;
# 1270 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const ctype< char> &use_facet< ctype< char> > (const locale &);
# 1274 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const numpunct< char> &use_facet< numpunct< char> > (const locale &);
# 1278 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_put< char, ostreambuf_iterator< char, char_traits< char> > > &use_facet< num_put< char, ostreambuf_iterator< char, char_traits< char> > > > (const locale &);
# 1282 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_get< char, istreambuf_iterator< char, char_traits< char> > > &use_facet< num_get< char, istreambuf_iterator< char, char_traits< char> > > > (const locale &);
# 1286 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< ctype< char> > (const locale &) throw();
# 1290 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< numpunct< char> > (const locale &) throw();
# 1294 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_put< char, ostreambuf_iterator< char, char_traits< char> > > > (const locale &) throw();
# 1298 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_get< char, istreambuf_iterator< char, char_traits< char> > > > (const locale &) throw();
# 1303 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct< wchar_t> ;
# 1304 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct_byname< wchar_t> ;
# 1305 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > ;
# 1306 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > ;
# 1309 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const ctype< wchar_t> &use_facet< ctype< wchar_t> > (const locale &);
# 1313 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const numpunct< wchar_t> &use_facet< numpunct< wchar_t> > (const locale &);
# 1317 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > &use_facet< num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &);
# 1321 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > &use_facet< num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &);
# 1325 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< ctype< wchar_t> > (const locale &) throw();
# 1329 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< numpunct< wchar_t> > (const locale &) throw();
# 1333 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &) throw();
# 1337 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &) throw();
# 1343 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
}
# 42 "/usr/include/c++/4.4/bits/basic_ios.h" 3
namespace std __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/4.4/bits/basic_ios.h" 3
template < typename _Facet >
    inline const _Facet &
    __check_facet ( const _Facet * __f )
    {
      if ( ! __f )
 __throw_bad_cast ( );
      return * __f;
    }
# 61 "/usr/include/c++/4.4/bits/basic_ios.h" 3
template < typename _CharT, typename _Traits >
    class basic_ios : public ios_base
    {
    public :






      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;






      typedef ctype < _CharT > __ctype_type;
      typedef num_put < _CharT, ostreambuf_iterator < _CharT, _Traits > >
           __num_put_type;
      typedef num_get < _CharT, istreambuf_iterator < _CharT, _Traits > >
           __num_get_type;



    protected :
      basic_ostream < _CharT, _Traits > * _M_tie;
      mutable char_type _M_fill;
      mutable bool _M_fill_init;
      basic_streambuf < _CharT, _Traits > * _M_streambuf;


      const __ctype_type * _M_ctype;

      const __num_put_type * _M_num_put;

      const __num_get_type * _M_num_get;

    public :







      operator void * ( ) const
      { return this -> fail ( ) ? 0 : const_cast < basic_ios * > ( this ); }

      bool
      operator ! ( ) const
      { return this -> fail ( ); }

      iostate
      rdstate ( ) const
      { return _M_streambuf_state; }

      void
      clear ( iostate __state = goodbit );







      void
      setstate ( iostate __state )
      { this -> clear ( this -> rdstate ( ) | __state ); }




      void
      _M_setstate ( iostate __state )
      {


 _M_streambuf_state |= __state;
 if ( this -> exceptions ( ) & __state )
   throw;
      }







      bool
      good ( ) const
      { return this -> rdstate ( ) == 0; }







      bool
      eof ( ) const
      { return ( this -> rdstate ( ) & eofbit ) != 0; }

      bool
      fail ( ) const
      { return ( this -> rdstate ( ) & ( badbit | failbit ) ) != 0; }







      bool
      bad ( ) const
      { return ( this -> rdstate ( ) & badbit ) != 0; }

      iostate
      exceptions ( ) const
      { return _M_exception; }

      void
      exceptions ( iostate __except )
      {
        _M_exception = __except;
        this -> clear ( _M_streambuf_state );
      }







      explicit
      basic_ios ( basic_streambuf < _CharT, _Traits > * __sb )
      : ios_base ( ), _M_tie ( 0 ), _M_fill ( ), _M_fill_init ( false ), _M_streambuf ( 0 ),
 _M_ctype ( 0 ), _M_num_put ( 0 ), _M_num_get ( 0 )
      { this -> init ( __sb ); }







      virtual
      ~ basic_ios ( ) { }

      basic_ostream < _CharT, _Traits > *
      tie ( ) const
      { return _M_tie; }

      basic_ostream < _CharT, _Traits > *
      tie ( basic_ostream < _CharT, _Traits > * __tiestr )
      {
        basic_ostream < _CharT, _Traits > * __old = _M_tie;
        _M_tie = __tiestr;
        return __old;
      }







      basic_streambuf < _CharT, _Traits > *
      rdbuf ( ) const
      { return _M_streambuf; }

      basic_streambuf < _CharT, _Traits > *
      rdbuf ( basic_streambuf < _CharT, _Traits > * __sb );

      basic_ios &
      copyfmt ( const basic_ios & __rhs );







      char_type
      fill ( ) const
      {
 if ( ! _M_fill_init )
   {
     _M_fill = this -> widen ( ' ' );
     _M_fill_init = true;
   }
 return _M_fill;
      }

      char_type
      fill ( char_type __ch )
      {
 char_type __old = this -> fill ( );
 _M_fill = __ch;
 return __old;
      }

      locale
      imbue ( const locale & __loc );

      char
      narrow ( char_type __c, char __dfault ) const
      { return __check_facet ( _M_ctype ) . narrow ( __c, __dfault ); }

      char_type
      widen ( char __c ) const
      { return __check_facet ( _M_ctype ) . widen ( __c ); }

    protected :







      basic_ios ( )
      : ios_base ( ), _M_tie ( 0 ), _M_fill ( char_type ( ) ), _M_fill_init ( false ),
 _M_streambuf ( 0 ), _M_ctype ( 0 ), _M_num_put ( 0 ), _M_num_get ( 0 )
      { }







      void
      init ( basic_streambuf < _CharT, _Traits > * __sb );

      void
      _M_cache_locale ( const locale & __loc );
    };
# 468 "/usr/include/c++/4.4/bits/basic_ios.h" 3
}
# 36 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 38 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_ios < _CharT, _Traits > :: clear ( iostate __state )
    {
      if ( this -> rdbuf ( ) )
 _M_streambuf_state = __state;
      else
   _M_streambuf_state = __state | badbit;
      if ( this -> exceptions ( ) & this -> rdstate ( ) )
 __throw_ios_failure ( ( "basic_ios::clear" ) );
    }
# 50 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    basic_streambuf < _CharT, _Traits > *
    basic_ios < _CharT, _Traits > :: rdbuf ( basic_streambuf < _CharT, _Traits > * __sb )
    {
      basic_streambuf < _CharT, _Traits > * __old = _M_streambuf;
      _M_streambuf = __sb;
      this -> clear ( );
      return __old;
    }
# 60 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ios < _CharT, _Traits > &
    basic_ios < _CharT, _Traits > :: copyfmt ( const basic_ios & __rhs )
    {


      if ( this != & __rhs )
 {




   _Words * __words = ( __rhs . _M_word_size <= _S_local_word_size ) ?
                      _M_local_word : new _Words [ __rhs . _M_word_size ];


   _Callback_list * __cb = __rhs . _M_callbacks;
   if ( __cb )
     __cb -> _M_add_reference ( );
   _M_call_callbacks ( erase_event );
   if ( _M_word != _M_local_word )
     {
       delete [ ] _M_word;
       _M_word = 0;
     }
   _M_dispose_callbacks ( );


   _M_callbacks = __cb;
   for ( int __i = 0; __i < __rhs . _M_word_size; ++ __i )
     __words [ __i ] = __rhs . _M_word [ __i ];
   _M_word = __words;
   _M_word_size = __rhs . _M_word_size;

   this -> flags ( __rhs . flags ( ) );
   this -> width ( __rhs . width ( ) );
   this -> precision ( __rhs . precision ( ) );
   this -> tie ( __rhs . tie ( ) );
   this -> fill ( __rhs . fill ( ) );
   _M_ios_locale = __rhs . getloc ( );
   _M_cache_locale ( _M_ios_locale );

   _M_call_callbacks ( copyfmt_event );


   this -> exceptions ( __rhs . exceptions ( ) );
 }
      return * this;
    }
# 111 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    locale
    basic_ios < _CharT, _Traits > :: imbue ( const locale & __loc )
    {
      locale __old ( this -> getloc ( ) );
      ios_base :: imbue ( __loc );
      _M_cache_locale ( __loc );
      if ( this -> rdbuf ( ) != 0 )
 this -> rdbuf ( ) -> pubimbue ( __loc );
      return __old;
    }
# 123 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_ios < _CharT, _Traits > :: init ( basic_streambuf < _CharT, _Traits > * __sb )
    {

      ios_base :: _M_init ( );


      _M_cache_locale ( _M_ios_locale );

      _M_fill = _CharT ( );
      _M_fill_init = false;

      _M_tie = 0;
      _M_exception = goodbit;
      _M_streambuf = __sb;
      _M_streambuf_state = __sb ? goodbit : badbit;
    }
# 154 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_ios < _CharT, _Traits > :: _M_cache_locale ( const locale & __loc )
    {
      if ( __builtin_expect ( has_facet < __ctype_type > ( __loc ), true ) )
 _M_ctype = & use_facet < __ctype_type > ( __loc );
      else
 _M_ctype = 0;

      if ( __builtin_expect ( has_facet < __num_put_type > ( __loc ), true ) )
 _M_num_put = & use_facet < __num_put_type > ( __loc );
      else
 _M_num_put = 0;

      if ( __builtin_expect ( has_facet < __num_get_type > ( __loc ), true ) )
 _M_num_get = & use_facet < __num_get_type > ( __loc );
      else
 _M_num_get = 0;
    }
# 178 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
extern template class basic_ios< char, char_traits< char> > ;
# 181 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
extern template class basic_ios< wchar_t, char_traits< wchar_t> > ;
# 185 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
}
# 43 "/usr/include/c++/4.4/ostream" 3
namespace std __attribute((__visibility__("default"))) {
# 54 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    class basic_ostream : virtual public basic_ios < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;


      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef basic_ios < _CharT, _Traits > __ios_type;
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef num_put < _CharT, ostreambuf_iterator < _CharT, _Traits > >
             __num_put_type;
      typedef ctype < _CharT > __ctype_type;

      explicit
      basic_ostream ( __streambuf_type * __sb )
      { this -> init ( __sb ); }






      virtual
      ~ basic_ostream ( ) { }


      class sentry;
      friend class sentry;

      __ostream_type &
      operator << ( __ostream_type & ( * __pf ) ( __ostream_type & ) )
      {



 return __pf ( * this );
      }

      __ostream_type &
      operator << ( __ios_type & ( * __pf ) ( __ios_type & ) )
      {



 __pf ( * this );
 return * this;
      }

      __ostream_type &
      operator << ( ios_base & ( * __pf ) ( ios_base & ) )
      {



 __pf ( * this );
 return * this;
      }

      __ostream_type &
      operator << ( long __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( unsigned long __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( bool __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( short __n );

      __ostream_type &
      operator << ( unsigned short __n )
      {


 return _M_insert ( static_cast < unsigned long > ( __n ) );
      }

      __ostream_type &
      operator << ( int __n );

      __ostream_type &
      operator << ( unsigned int __n )
      {


 return _M_insert ( static_cast < unsigned long > ( __n ) );
      }


      __ostream_type &
      operator << ( long long __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( unsigned long long __n )
      { return _M_insert ( __n ); }


      __ostream_type &
      operator << ( double __f )
      { return _M_insert ( __f ); }

      __ostream_type &
      operator << ( float __f )
      {


 return _M_insert ( static_cast < double > ( __f ) );
      }

      __ostream_type &
      operator << ( long double __f )
      { return _M_insert ( __f ); }

      __ostream_type &
      operator << ( const void * __p )
      { return _M_insert ( __p ); }

      __ostream_type &
      operator << ( __streambuf_type * __sb );

      __ostream_type &
      put ( char_type __c );


      void
      _M_write ( const char_type * __s, streamsize __n )
      {
 const streamsize __put = this -> rdbuf ( ) -> sputn ( __s, __n );
 if ( __put != __n )
   this -> setstate ( ios_base :: badbit );
      }

      __ostream_type &
      write ( const char_type * __s, streamsize __n );

      __ostream_type &
      flush ( );

      pos_type
      tellp ( );

      __ostream_type &
      seekp ( pos_type );

       __ostream_type &
      seekp ( off_type, ios_base :: seekdir );

    protected :
      basic_ostream ( )
      { this -> init ( 0 ); }

      template < typename _ValueT >
        __ostream_type &
        _M_insert ( _ValueT __v );
    };
# 376 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    class basic_ostream < _CharT, _Traits > :: sentry
    {

      bool _M_ok;
      basic_ostream < _CharT, _Traits > & _M_os;

    public :

      explicit
      sentry ( basic_ostream < _CharT, _Traits > & __os );

      ~ sentry ( )
      {

 if ( bool ( _M_os . flags ( ) & ios_base :: unitbuf ) && ! uncaught_exception ( ) )
   {

     if ( _M_os . rdbuf ( ) && _M_os . rdbuf ( ) -> pubsync ( ) == - 1 )
       _M_os . setstate ( ios_base :: badbit );
   }
      }

      operator bool ( ) const
      { return _M_ok; }
    };
# 444 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, _CharT __c )
    { return __ostream_insert ( __out, & __c, 1 ); }
# 449 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, char __c )
    { return ( __out << __out . widen ( __c ) ); }
# 455 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, char __c )
    { return __ostream_insert ( __out, & __c, 1 ); }
# 461 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, signed char __c )
    { return ( __out << static_cast < char > ( __c ) ); }
# 466 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, unsigned char __c )
    { return ( __out << static_cast < char > ( __c ) ); }
# 486 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, const _CharT * __s )
    {
      if ( ! __s )
 __out . setstate ( ios_base :: badbit );
      else
 __ostream_insert ( __out, __s,
    static_cast < streamsize > ( _Traits :: length ( __s ) ) );
      return __out;
    }
# 498 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, const char * __s );
# 503 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, const char * __s )
    {
      if ( ! __s )
 __out . setstate ( ios_base :: badbit );
      else
 __ostream_insert ( __out, __s,
    static_cast < streamsize > ( _Traits :: length ( __s ) ) );
      return __out;
    }
# 516 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, const signed char * __s )
    { return ( __out << reinterpret_cast < const char * > ( __s ) ); }
# 521 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, const unsigned char * __s )
    { return ( __out << reinterpret_cast < const char * > ( __s ) ); }
# 536 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    endl ( basic_ostream < _CharT, _Traits > & __os )
    { return flush ( __os . put ( __os . widen ( '\n' ) ) ); }
# 547 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    ends ( basic_ostream < _CharT, _Traits > & __os )
    { return __os . put ( _CharT ( ) ); }
# 557 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    flush ( basic_ostream < _CharT, _Traits > & __os )
    { return __os . flush ( ); }
# 562 "/usr/include/c++/4.4/ostream" 3
}
# 43 "/usr/include/c++/4.4/bits/ostream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > :: sentry ::
    sentry ( basic_ostream < _CharT, _Traits > & __os )
    : _M_ok ( false ), _M_os ( __os )
    {

      if ( __os . tie ( ) && __os . good ( ) )
 __os . tie ( ) -> flush ( );

      if ( __os . good ( ) )
 _M_ok = true;
      else
 __os . setstate ( ios_base :: failbit );
    }
# 60 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    template < typename _ValueT >
      basic_ostream < _CharT, _Traits > &
      basic_ostream < _CharT, _Traits > ::
      _M_insert ( _ValueT __v )
      {
 sentry __cerb ( * this );
 if ( __cerb )
   {
     ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
     try
       {
  const __num_put_type & __np = __check_facet ( this -> _M_num_put );
  if ( __np . put ( * this, * this, this -> fill ( ), __v ) . failed ( ) )
    __err |= ios_base :: badbit;
       }
     catch ( __cxxabiv1 :: __forced_unwind & )
       {
  this -> _M_setstate ( ios_base :: badbit );
  throw;
       }
     catch ( ... )
       { this -> _M_setstate ( ios_base :: badbit ); }
     if ( __err )
       this -> setstate ( __err );
   }
 return * this;
      }
# 89 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    operator << ( short __n )
    {


      const ios_base :: fmtflags __fmt = this -> flags ( ) & ios_base :: basefield;
      if ( __fmt == ios_base :: oct || __fmt == ios_base :: hex )
 return _M_insert ( static_cast < long > ( static_cast < unsigned short > ( __n ) ) );
      else
 return _M_insert ( static_cast < long > ( __n ) );
    }
# 103 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    operator << ( int __n )
    {


      const ios_base :: fmtflags __fmt = this -> flags ( ) & ios_base :: basefield;
      if ( __fmt == ios_base :: oct || __fmt == ios_base :: hex )
 return _M_insert ( static_cast < long > ( static_cast < unsigned int > ( __n ) ) );
      else
 return _M_insert ( static_cast < long > ( __n ) );
    }
# 117 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    operator << ( __streambuf_type * __sbin )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this );
      if ( __cerb && __sbin )
 {
   try
     {
       if ( ! __copy_streambufs ( __sbin, this -> rdbuf ( ) ) )
  __err |= ios_base :: failbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: failbit ); }
 }
      else if ( ! __sbin )
 __err |= ios_base :: badbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 146 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    put ( char_type __c )
    {






      sentry __cerb ( * this );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __put = this -> rdbuf ( ) -> sputc ( __c );
       if ( traits_type :: eq_int_type ( __put, traits_type :: eof ( ) ) )
  __err |= ios_base :: badbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 180 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    write ( const _CharT * __s, streamsize __n )
    {







      sentry __cerb ( * this );
      if ( __cerb )
 {
   try
     { _M_write ( __s, __n ); }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      return * this;
    }
# 208 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    flush ( )
    {



      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( this -> rdbuf ( ) && this -> rdbuf ( ) -> pubsync ( ) == - 1 )
     __err |= ios_base :: badbit;
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 234 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_ostream < _CharT, _Traits > :: pos_type
    basic_ostream < _CharT, _Traits > ::
    tellp ( )
    {
      pos_type __ret = pos_type ( - 1 );
      try
 {
   if ( ! this -> fail ( ) )
     __ret = this -> rdbuf ( ) -> pubseekoff ( 0, ios_base :: cur, ios_base :: out );
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      return __ret;
    }
# 255 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    seekp ( pos_type __pos )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {


       const pos_type __p = this -> rdbuf ( ) -> pubseekpos ( __pos,
            ios_base :: out );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 287 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    seekp ( off_type __off, ios_base :: seekdir __dir )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {


       const pos_type __p = this -> rdbuf ( ) -> pubseekoff ( __off, __dir,
            ios_base :: out );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 319 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, const char * __s )
    {
      if ( ! __s )
 __out . setstate ( ios_base :: badbit );
      else
 {


   const size_t __clen = char_traits < char > :: length ( __s );
   try
     {
       struct __ptr_guard
       {
  _CharT * __p;
  __ptr_guard ( _CharT * __ip ) : __p ( __ip ) { }
  ~ __ptr_guard ( ) { delete [ ] __p; }
  _CharT * __get ( ) { return __p; }
       } __pg ( new _CharT [ __clen ] );

       _CharT * __ws = __pg . __get ( );
       for ( size_t __i = 0; __i < __clen; ++ __i )
  __ws [ __i ] = __out . widen ( __s [ __i ] );
       __ostream_insert ( __out, __ws, __clen );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __out . _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __out . _M_setstate ( ios_base :: badbit ); }
 }
      return __out;
    }
# 360 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template class basic_ostream< char, char_traits< char> > ;
# 361 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &endl(basic_ostream< char, char_traits< char> > & );
# 362 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &ends(basic_ostream< char, char_traits< char> > & );
# 363 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &flush(basic_ostream< char, char_traits< char> > & );
# 364 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , char );
# 365 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , unsigned char );
# 366 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , signed char );
# 367 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const char * );
# 368 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const unsigned char * );
# 369 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const signed char * );
# 371 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long );
# 372 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(unsigned long );
# 373 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(bool );
# 375 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long long );
# 376 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(unsigned long long );
# 378 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(double );
# 379 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long double );
# 380 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(const void * );
# 383 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template class basic_ostream< wchar_t, char_traits< wchar_t> > ;
# 384 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &endl(basic_ostream< wchar_t, char_traits< wchar_t> > & );
# 385 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &ends(basic_ostream< wchar_t, char_traits< wchar_t> > & );
# 386 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &flush(basic_ostream< wchar_t, char_traits< wchar_t> > & );
# 387 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , wchar_t );
# 388 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , char );
# 389 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , const wchar_t * );
# 390 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , const char * );
# 392 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long );
# 393 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(unsigned long );
# 394 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(bool );
# 396 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long long );
# 397 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(unsigned long long );
# 399 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(double );
# 400 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long double );
# 401 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(const void * );
# 405 "/usr/include/c++/4.4/bits/ostream.tcc" 3
}
# 43 "/usr/include/c++/4.4/istream" 3
namespace std __attribute((__visibility__("default"))) {
# 54 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    class basic_istream : virtual public basic_ios < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;


      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef basic_ios < _CharT, _Traits > __ios_type;
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef num_get < _CharT, istreambuf_iterator < _CharT, _Traits > >
        __num_get_type;
      typedef ctype < _CharT > __ctype_type;

    protected :





      streamsize _M_gcount;

    public :

      explicit
      basic_istream ( __streambuf_type * __sb )
      : _M_gcount ( streamsize ( 0 ) )
      { this -> init ( __sb ); }






      virtual
      ~ basic_istream ( )
      { _M_gcount = streamsize ( 0 ); }


      class sentry;
      friend class sentry;

      __istream_type &
      operator >> ( __istream_type & ( * __pf ) ( __istream_type & ) )
      { return __pf ( * this ); }

      __istream_type &
      operator >> ( __ios_type & ( * __pf ) ( __ios_type & ) )
      {
 __pf ( * this );
 return * this;
      }

      __istream_type &
      operator >> ( ios_base & ( * __pf ) ( ios_base & ) )
      {
 __pf ( * this );
 return * this;
      }

      __istream_type &
      operator >> ( bool & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( short & __n );

      __istream_type &
      operator >> ( unsigned short & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( int & __n );

      __istream_type &
      operator >> ( unsigned int & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( long & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( unsigned long & __n )
      { return _M_extract ( __n ); }


      __istream_type &
      operator >> ( long long & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( unsigned long long & __n )
      { return _M_extract ( __n ); }


      __istream_type &
      operator >> ( float & __f )
      { return _M_extract ( __f ); }

      __istream_type &
      operator >> ( double & __f )
      { return _M_extract ( __f ); }

      __istream_type &
      operator >> ( long double & __f )
      { return _M_extract ( __f ); }

      __istream_type &
      operator >> ( void * & __p )
      { return _M_extract ( __p ); }

      __istream_type &
      operator >> ( __streambuf_type * __sb );

      streamsize
      gcount ( ) const
      { return _M_gcount; }

      int_type
      get ( );

      __istream_type &
      get ( char_type & __c );

      __istream_type &
      get ( char_type * __s, streamsize __n, char_type __delim );

      __istream_type &
      get ( char_type * __s, streamsize __n )
      { return this -> get ( __s, __n, this -> widen ( '\n' ) ); }

      __istream_type &
      get ( __streambuf_type & __sb, char_type __delim );

      __istream_type &
      get ( __streambuf_type & __sb )
      { return this -> get ( __sb, this -> widen ( '\n' ) ); }

      __istream_type &
      getline ( char_type * __s, streamsize __n, char_type __delim );

      __istream_type &
      getline ( char_type * __s, streamsize __n )
      { return this -> getline ( __s, __n, this -> widen ( '\n' ) ); }

      __istream_type &
      ignore ( );

      __istream_type &
      ignore ( streamsize __n );

      __istream_type &
      ignore ( streamsize __n, int_type __delim );

      int_type
      peek ( );

      __istream_type &
      read ( char_type * __s, streamsize __n );

      streamsize
      readsome ( char_type * __s, streamsize __n );

      __istream_type &
      putback ( char_type __c );

      __istream_type &
      unget ( );

      int
      sync ( );

      pos_type
      tellg ( );

      __istream_type &
      seekg ( pos_type );

      __istream_type &
      seekg ( off_type, ios_base :: seekdir );


    protected :
      basic_istream ( )
      : _M_gcount ( streamsize ( 0 ) )
      { this -> init ( 0 ); }

      template < typename _ValueT >
        __istream_type &
        _M_extract ( _ValueT & __v );
    };
# 594 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::getline(char_type * , streamsize , char_type );
# 599 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::ignore(streamsize );
# 604 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::ignore(streamsize , int_type );
# 610 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::getline(char_type * , streamsize , char_type );
# 615 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::ignore(streamsize );
# 620 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::ignore(streamsize , int_type );
# 631 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    class basic_istream < _CharT, _Traits > :: sentry
    {
    public :

      typedef _Traits traits_type;
      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef typename __istream_type :: __ctype_type __ctype_type;
      typedef typename _Traits :: int_type __int_type;

      explicit
      sentry ( basic_istream < _CharT, _Traits > & __is, bool __noskipws = false );

      operator bool ( ) const
      { return _M_ok; }

    private :
      bool _M_ok;
    };
# 693 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in, _CharT & __c );
# 697 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, unsigned char & __c )
    { return ( __in >> reinterpret_cast < char & > ( __c ) ); }
# 702 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, signed char & __c )
    { return ( __in >> reinterpret_cast < char & > ( __c ) ); }
# 734 "/usr/include/c++/4.4/istream" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &operator>>(basic_istream< _CharT, _Traits> & , _CharT * );
# 741 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , char * );
# 743 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, unsigned char * __s )
    { return ( __in >> reinterpret_cast < char * > ( __s ) ); }
# 748 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, signed char * __s )
    { return ( __in >> reinterpret_cast < char * > ( __s ) ); }
# 762 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    class basic_iostream
    : public basic_istream < _CharT, _Traits >,
      public basic_ostream < _CharT, _Traits >
    {
    public :



      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;


      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_ostream < _CharT, _Traits > __ostream_type;







      explicit
      basic_iostream ( basic_streambuf < _CharT, _Traits > * __sb )
      : __istream_type ( __sb ), __ostream_type ( __sb ) { }




      virtual
      ~ basic_iostream ( ) { }

    protected :
      basic_iostream ( )
      : __istream_type ( ), __ostream_type ( ) { }
    };
# 823 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    ws ( basic_istream < _CharT, _Traits > & __is );
# 827 "/usr/include/c++/4.4/istream" 3
}
# 43 "/usr/include/c++/4.4/bits/istream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > :: sentry ::
    sentry ( basic_istream < _CharT, _Traits > & __in, bool __noskip ) : _M_ok ( false )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      if ( __in . good ( ) )
 {
   if ( __in . tie ( ) )
     __in . tie ( ) -> flush ( );
   if ( ! __noskip && bool ( __in . flags ( ) & ios_base :: skipws ) )
     {
       const __int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = __in . rdbuf ( );
       __int_type __c = __sb -> sgetc ( );

       const __ctype_type & __ct = __check_facet ( __in . _M_ctype );
       while ( ! traits_type :: eq_int_type ( __c, __eof )
       && __ct . is ( ctype_base :: space,
    traits_type :: to_char_type ( __c ) ) )
  __c = __sb -> snextc ( );




       if ( traits_type :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;
     }
 }

      if ( __in . good ( ) && __err == ios_base :: goodbit )
 _M_ok = true;
      else
 {
   __err |= ios_base :: failbit;
   __in . setstate ( __err );
 }
    }
# 83 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    template < typename _ValueT >
      basic_istream < _CharT, _Traits > &
      basic_istream < _CharT, _Traits > ::
      _M_extract ( _ValueT & __v )
      {
 sentry __cerb ( * this, false );
 if ( __cerb )
   {
     ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
     try
       {
  const __num_get_type & __ng = __check_facet ( this -> _M_num_get );
  __ng . get ( * this, 0, * this, __err, __v );
       }
     catch ( __cxxabiv1 :: __forced_unwind & )
       {
  this -> _M_setstate ( ios_base :: badbit );
  throw;
       }
     catch ( ... )
       { this -> _M_setstate ( ios_base :: badbit ); }
     if ( __err )
       this -> setstate ( __err );
   }
 return * this;
      }
# 111 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    operator >> ( short & __n )
    {


      long __l;
      _M_extract ( __l );
      if ( ! this -> fail ( ) )
 {
   if ( __gnu_cxx :: __numeric_traits < short > :: __min <= __l
       && __l <= __gnu_cxx :: __numeric_traits < short > :: __max )
     __n = short ( __l );
   else
     this -> setstate ( ios_base :: failbit );
 }
      return * this;
    }
# 131 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    operator >> ( int & __n )
    {


      long __l;
      _M_extract ( __l );
      if ( ! this -> fail ( ) )
 {
   if ( __gnu_cxx :: __numeric_traits < int > :: __min <= __l
       && __l <= __gnu_cxx :: __numeric_traits < int > :: __max )
     __n = int ( __l );
   else
     this -> setstate ( ios_base :: failbit );
 }
      return * this;
    }
# 151 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    operator >> ( __streambuf_type * __sbout )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, false );
      if ( __cerb && __sbout )
 {
   try
     {
       bool __ineof;
       if ( ! __copy_streambufs_eof ( this -> rdbuf ( ), __sbout, __ineof ) )
  __err |= ios_base :: failbit;
       if ( __ineof )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: failbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: failbit ); }
 }
      else if ( ! __sbout )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 183 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_istream < _CharT, _Traits > :: int_type
    basic_istream < _CharT, _Traits > ::
    get ( void )
    {
      const int_type __eof = traits_type :: eof ( );
      int_type __c = __eof;
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       __c = this -> rdbuf ( ) -> sbumpc ( );

       if ( ! traits_type :: eq_int_type ( __c, __eof ) )
  _M_gcount = 1;
       else
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return __c;
    }
# 219 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    get ( char_type & __c )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       const int_type __cb = this -> rdbuf ( ) -> sbumpc ( );

       if ( ! traits_type :: eq_int_type ( __cb, traits_type :: eof ( ) ) )
  {
    _M_gcount = 1;
    __c = traits_type :: to_char_type ( __cb );
  }
       else
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 256 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    get ( char_type * __s, streamsize __n, char_type __delim )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       const int_type __idelim = traits_type :: to_int_type ( __delim );
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );
       int_type __c = __sb -> sgetc ( );

       while ( _M_gcount + 1 < __n
       && ! traits_type :: eq_int_type ( __c, __eof )
       && ! traits_type :: eq_int_type ( __c, __idelim ) )
  {
    * __s ++ = traits_type :: to_char_type ( __c );
    ++ _M_gcount;
    __c = __sb -> snextc ( );
  }
       if ( traits_type :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }


      if ( __n > 0 )
 * __s = char_type ( );
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 303 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    get ( __streambuf_type & __sb, char_type __delim )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       const int_type __idelim = traits_type :: to_int_type ( __delim );
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __this_sb = this -> rdbuf ( );
       int_type __c = __this_sb -> sgetc ( );
       char_type __c2 = traits_type :: to_char_type ( __c );

       while ( ! traits_type :: eq_int_type ( __c, __eof )
       && ! traits_type :: eq_int_type ( __c, __idelim )
       && ! traits_type :: eq_int_type ( __sb . sputc ( __c2 ), __eof ) )
  {
    ++ _M_gcount;
    __c = __this_sb -> snextc ( );
    __c2 = traits_type :: to_char_type ( __c );
  }
       if ( traits_type :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 347 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    getline ( char_type * __s, streamsize __n, char_type __delim )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
        {
          try
            {
              const int_type __idelim = traits_type :: to_int_type ( __delim );
              const int_type __eof = traits_type :: eof ( );
              __streambuf_type * __sb = this -> rdbuf ( );
              int_type __c = __sb -> sgetc ( );

              while ( _M_gcount + 1 < __n
                     && ! traits_type :: eq_int_type ( __c, __eof )
                     && ! traits_type :: eq_int_type ( __c, __idelim ) )
                {
                  * __s ++ = traits_type :: to_char_type ( __c );
                  __c = __sb -> snextc ( );
                  ++ _M_gcount;
                }
              if ( traits_type :: eq_int_type ( __c, __eof ) )
                __err |= ios_base :: eofbit;
              else
                {
                  if ( traits_type :: eq_int_type ( __c, __idelim ) )
                    {
                      __sb -> sbumpc ( );
                      ++ _M_gcount;
                    }
                  else
                    __err |= ios_base :: failbit;
                }
            }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
          catch ( ... )
            { this -> _M_setstate ( ios_base :: badbit ); }
        }


      if ( __n > 0 )
 * __s = char_type ( );
      if ( ! _M_gcount )
        __err |= ios_base :: failbit;
      if ( __err )
        this -> setstate ( __err );
      return * this;
    }
# 407 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    ignore ( void )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );

       if ( traits_type :: eq_int_type ( __sb -> sbumpc ( ), __eof ) )
  __err |= ios_base :: eofbit;
       else
  _M_gcount = 1;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 440 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    ignore ( streamsize __n )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb && __n > 0 )
        {
          ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
          try
            {
              const int_type __eof = traits_type :: eof ( );
              __streambuf_type * __sb = this -> rdbuf ( );
              int_type __c = __sb -> sgetc ( );

       bool __large_ignore = false;
       while ( true )
  {
    while ( _M_gcount < __n
    && ! traits_type :: eq_int_type ( __c, __eof ) )
      {
        ++ _M_gcount;
        __c = __sb -> snextc ( );
      }
    if ( __n == __gnu_cxx :: __numeric_traits < streamsize > :: __max
        && ! traits_type :: eq_int_type ( __c, __eof ) )
      {
        _M_gcount =
   __gnu_cxx :: __numeric_traits < streamsize > :: __min;
        __large_ignore = true;
      }
    else
      break;
  }

       if ( __large_ignore )
  _M_gcount = __gnu_cxx :: __numeric_traits < streamsize > :: __max;

       if ( traits_type :: eq_int_type ( __c, __eof ) )
                __err |= ios_base :: eofbit;
            }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
          catch ( ... )
            { this -> _M_setstate ( ios_base :: badbit ); }
          if ( __err )
            this -> setstate ( __err );
        }
      return * this;
    }
# 502 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    ignore ( streamsize __n, int_type __delim )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb && __n > 0 )
        {
          ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
          try
            {
              const int_type __eof = traits_type :: eof ( );
              __streambuf_type * __sb = this -> rdbuf ( );
              int_type __c = __sb -> sgetc ( );


       bool __large_ignore = false;
       while ( true )
  {
    while ( _M_gcount < __n
    && ! traits_type :: eq_int_type ( __c, __eof )
    && ! traits_type :: eq_int_type ( __c, __delim ) )
      {
        ++ _M_gcount;
        __c = __sb -> snextc ( );
      }
    if ( __n == __gnu_cxx :: __numeric_traits < streamsize > :: __max
        && ! traits_type :: eq_int_type ( __c, __eof )
        && ! traits_type :: eq_int_type ( __c, __delim ) )
      {
        _M_gcount =
   __gnu_cxx :: __numeric_traits < streamsize > :: __min;
        __large_ignore = true;
      }
    else
      break;
  }

       if ( __large_ignore )
  _M_gcount = __gnu_cxx :: __numeric_traits < streamsize > :: __max;

              if ( traits_type :: eq_int_type ( __c, __eof ) )
                __err |= ios_base :: eofbit;
       else if ( traits_type :: eq_int_type ( __c, __delim ) )
  {
    if ( _M_gcount
        < __gnu_cxx :: __numeric_traits < streamsize > :: __max )
      ++ _M_gcount;
    __sb -> sbumpc ( );
  }
            }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
          catch ( ... )
            { this -> _M_setstate ( ios_base :: badbit ); }
          if ( __err )
            this -> setstate ( __err );
        }
      return * this;
    }
# 567 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_istream < _CharT, _Traits > :: int_type
    basic_istream < _CharT, _Traits > ::
    peek ( void )
    {
      int_type __c = traits_type :: eof ( );
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       __c = this -> rdbuf ( ) -> sgetc ( );
       if ( traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return __c;
    }
# 597 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    read ( char_type * __s, streamsize __n )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       _M_gcount = this -> rdbuf ( ) -> sgetn ( __s, __n );
       if ( _M_gcount != __n )
  __err |= ( ios_base :: eofbit | ios_base :: failbit );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 626 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_istream < _CharT, _Traits > ::
    readsome ( char_type * __s, streamsize __n )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {

       const streamsize __num = this -> rdbuf ( ) -> in_avail ( );
       if ( __num > 0 )
  _M_gcount = this -> rdbuf ( ) -> sgetn ( __s, std :: min ( __num, __n ) );
       else if ( __num == - 1 )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return _M_gcount;
    }
# 658 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    putback ( char_type __c )
    {


      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );
       if ( ! __sb
    || traits_type :: eq_int_type ( __sb -> sputbackc ( __c ), __eof ) )
  __err |= ios_base :: badbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 691 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    unget ( void )
    {


      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );
       if ( ! __sb
    || traits_type :: eq_int_type ( __sb -> sungetc ( ), __eof ) )
  __err |= ios_base :: badbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 724 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    int
    basic_istream < _CharT, _Traits > ::
    sync ( void )
    {


      int __ret = - 1;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       __streambuf_type * __sb = this -> rdbuf ( );
       if ( __sb )
  {
    if ( __sb -> pubsync ( ) == - 1 )
      __err |= ios_base :: badbit;
    else
      __ret = 0;
  }
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return __ret;
    }
# 760 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_istream < _CharT, _Traits > :: pos_type
    basic_istream < _CharT, _Traits > ::
    tellg ( void )
    {


      pos_type __ret = pos_type ( - 1 );
      try
 {
   if ( ! this -> fail ( ) )
     __ret = this -> rdbuf ( ) -> pubseekoff ( 0, ios_base :: cur,
           ios_base :: in );
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      return __ret;
    }
# 784 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    seekg ( pos_type __pos )
    {


      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {

       const pos_type __p = this -> rdbuf ( ) -> pubseekpos ( __pos,
            ios_base :: in );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 817 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    seekg ( off_type __off, ios_base :: seekdir __dir )
    {


      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {

       const pos_type __p = this -> rdbuf ( ) -> pubseekoff ( __off, __dir,
            ios_base :: in );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 851 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in, _CharT & __c )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef typename __istream_type :: int_type __int_type;

      typename __istream_type :: sentry __cerb ( __in, false );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const __int_type __cb = __in . rdbuf ( ) -> sbumpc ( );
       if ( ! _Traits :: eq_int_type ( __cb, _Traits :: eof ( ) ) )
  __c = _Traits :: to_char_type ( __cb );
       else
  __err |= ( ios_base :: eofbit | ios_base :: failbit );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __in . _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     __in . setstate ( __err );
 }
      return __in;
    }
# 883 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in, _CharT * __s )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef typename _Traits :: int_type int_type;
      typedef _CharT char_type;
      typedef ctype < _CharT > __ctype_type;

      streamsize __extracted = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      typename __istream_type :: sentry __cerb ( __in, false );
      if ( __cerb )
 {
   try
     {

       streamsize __num = __in . width ( );
       if ( __num <= 0 )
  __num = __gnu_cxx :: __numeric_traits < streamsize > :: __max;

       const __ctype_type & __ct = use_facet < __ctype_type > ( __in . getloc ( ) );

       const int_type __eof = _Traits :: eof ( );
       __streambuf_type * __sb = __in . rdbuf ( );
       int_type __c = __sb -> sgetc ( );

       while ( __extracted < __num - 1
       && ! _Traits :: eq_int_type ( __c, __eof )
       && ! __ct . is ( ctype_base :: space,
     _Traits :: to_char_type ( __c ) ) )
  {
    * __s ++ = _Traits :: to_char_type ( __c );
    ++ __extracted;
    __c = __sb -> snextc ( );
  }
       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;



       * __s = char_type ( );
       __in . width ( 0 );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __in . _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! __extracted )
 __err |= ios_base :: failbit;
      if ( __err )
 __in . setstate ( __err );
      return __in;
    }
# 944 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    ws ( basic_istream < _CharT, _Traits > & __in )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef typename __istream_type :: int_type __int_type;
      typedef ctype < _CharT > __ctype_type;

      const __ctype_type & __ct = use_facet < __ctype_type > ( __in . getloc ( ) );
      const __int_type __eof = _Traits :: eof ( );
      __streambuf_type * __sb = __in . rdbuf ( );
      __int_type __c = __sb -> sgetc ( );

      while ( ! _Traits :: eq_int_type ( __c, __eof )
      && __ct . is ( ctype_base :: space, _Traits :: to_char_type ( __c ) ) )
 __c = __sb -> snextc ( );

       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __in . setstate ( ios_base :: eofbit );
      return __in;
    }
# 971 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_istream< char, char_traits< char> > ;
# 972 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &ws(basic_istream< char, char_traits< char> > & );
# 973 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , char & );
# 974 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > &, char *);
# 975 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , unsigned char & );
# 976 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , signed char & );
# 977 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , unsigned char * );
# 978 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , signed char * );
# 980 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned short & );
# 981 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned & );
# 982 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long & );
# 983 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned long & );
# 984 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(bool & );
# 986 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long long & );
# 987 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned long long & );
# 989 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(float & );
# 990 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(double & );
# 991 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long double & );
# 992 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(void *& );
# 994 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_iostream< char, char_traits< char> > ;
# 997 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_istream< wchar_t, char_traits< wchar_t> > ;
# 998 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &ws(basic_istream< wchar_t, char_traits< wchar_t> > & );
# 999 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > & , wchar_t & );
# 1000 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > &, wchar_t *);
# 1002 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned short & );
# 1003 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned & );
# 1004 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long & );
# 1005 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned long & );
# 1006 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(bool & );
# 1008 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long long & );
# 1009 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned long long & );
# 1011 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(float & );
# 1012 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(double & );
# 1013 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long double & );
# 1014 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(void *& );
# 1016 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_iostream< wchar_t, char_traits< wchar_t> > ;
# 1020 "/usr/include/c++/4.4/bits/istream.tcc" 3
}
# 43 "/usr/include/c++/4.4/iostream" 3
namespace std __attribute((__visibility__("default"))) {
# 58 "/usr/include/c++/4.4/iostream" 3
extern istream cin;
# 59 "/usr/include/c++/4.4/iostream" 3
extern ostream cout;
# 60 "/usr/include/c++/4.4/iostream" 3
extern ostream cerr;
# 61 "/usr/include/c++/4.4/iostream" 3
extern ostream clog;
# 64 "/usr/include/c++/4.4/iostream" 3
extern wistream wcin;
# 65 "/usr/include/c++/4.4/iostream" 3
extern wostream wcout;
# 66 "/usr/include/c++/4.4/iostream" 3
extern wostream wcerr;
# 67 "/usr/include/c++/4.4/iostream" 3
extern wostream wclog;
# 72 "/usr/include/c++/4.4/iostream" 3
static ios_base::Init __ioinit;
# 74 "/usr/include/c++/4.4/iostream" 3
}
# 42 "/usr/include/c++/4.4/bits/codecvt.h" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/bits/codecvt.h" 3
class codecvt_base {
# 48 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: enum result {
# 50 "/usr/include/c++/4.4/bits/codecvt.h" 3
ok,
# 51 "/usr/include/c++/4.4/bits/codecvt.h" 3
partial,
# 52 "/usr/include/c++/4.4/bits/codecvt.h" 3
error,
# 53 "/usr/include/c++/4.4/bits/codecvt.h" 3
noconv
# 54 "/usr/include/c++/4.4/bits/codecvt.h" 3
};
# 55 "/usr/include/c++/4.4/bits/codecvt.h" 3
};
# 66 "/usr/include/c++/4.4/bits/codecvt.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class __codecvt_abstract_base
    : public locale :: facet, public codecvt_base
    {
    public :

      typedef codecvt_base :: result result;
      typedef _InternT intern_type;
      typedef _ExternT extern_type;
      typedef _StateT state_type;

      result
      out ( state_type & __state, const intern_type * __from,
   const intern_type * __from_end, const intern_type * & __from_next,
   extern_type * __to, extern_type * __to_end,
   extern_type * & __to_next ) const
      {
 return this -> do_out ( __state, __from, __from_end, __from_next,
       __to, __to_end, __to_next );
      }

      result
      unshift ( state_type & __state, extern_type * __to, extern_type * __to_end,
       extern_type * & __to_next ) const
      { return this -> do_unshift ( __state, __to, __to_end, __to_next ); }

      result
      in ( state_type & __state, const extern_type * __from,
  const extern_type * __from_end, const extern_type * & __from_next,
  intern_type * __to, intern_type * __to_end,
  intern_type * & __to_next ) const
      {
 return this -> do_in ( __state, __from, __from_end, __from_next,
      __to, __to_end, __to_next );
      }

      int
      encoding ( ) const throw ( )
      { return this -> do_encoding ( ); }

      bool
      always_noconv ( ) const throw ( )
      { return this -> do_always_noconv ( ); }

      int
      length ( state_type & __state, const extern_type * __from,
      const extern_type * __end, size_t __max ) const
      { return this -> do_length ( __state, __from, __end, __max ); }

      int
      max_length ( ) const throw ( )
      { return this -> do_max_length ( ); }

    protected :
      explicit
      __codecvt_abstract_base ( size_t __refs = 0 ) : locale :: facet ( __refs ) { }

      virtual
      ~ __codecvt_abstract_base ( ) { }

      virtual result
      do_out ( state_type & __state, const intern_type * __from,
      const intern_type * __from_end, const intern_type * & __from_next,
      extern_type * __to, extern_type * __to_end,
      extern_type * & __to_next ) const = 0;

      virtual result
      do_unshift ( state_type & __state, extern_type * __to,
   extern_type * __to_end, extern_type * & __to_next ) const = 0;

      virtual result
      do_in ( state_type & __state, const extern_type * __from,
     const extern_type * __from_end, const extern_type * & __from_next,
     intern_type * __to, intern_type * __to_end,
     intern_type * & __to_next ) const = 0;

      virtual int
      do_encoding ( ) const throw ( ) = 0;

      virtual bool
      do_always_noconv ( ) const throw ( ) = 0;

      virtual int
      do_length ( state_type &, const extern_type * __from,
  const extern_type * __end, size_t __max ) const = 0;

      virtual int
      do_max_length ( ) const throw ( ) = 0;
    };
# 267 "/usr/include/c++/4.4/bits/codecvt.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class codecvt
    : public __codecvt_abstract_base < _InternT, _ExternT, _StateT >
    {
    public :

      typedef codecvt_base :: result result;
      typedef _InternT intern_type;
      typedef _ExternT extern_type;
      typedef _StateT state_type;

    protected :
      __c_locale _M_c_locale_codecvt;

    public :
      static locale :: id id;

      explicit
      codecvt ( size_t __refs = 0 )
      : __codecvt_abstract_base < _InternT, _ExternT, _StateT > ( __refs ) { }

      explicit
      codecvt ( __c_locale __cloc, size_t __refs = 0 );

    protected :
      virtual
      ~ codecvt ( ) { }

      virtual result
      do_out ( state_type & __state, const intern_type * __from,
      const intern_type * __from_end, const intern_type * & __from_next,
      extern_type * __to, extern_type * __to_end,
      extern_type * & __to_next ) const;

      virtual result
      do_unshift ( state_type & __state, extern_type * __to,
   extern_type * __to_end, extern_type * & __to_next ) const;

      virtual result
      do_in ( state_type & __state, const extern_type * __from,
     const extern_type * __from_end, const extern_type * & __from_next,
     intern_type * __to, intern_type * __to_end,
     intern_type * & __to_next ) const;

      virtual int
      do_encoding ( ) const throw ( );

      virtual bool
      do_always_noconv ( ) const throw ( );

      virtual int
      do_length ( state_type &, const extern_type * __from,
  const extern_type * __end, size_t __max ) const;

      virtual int
      do_max_length ( ) const throw ( );
    };
# 325 "/usr/include/c++/4.4/bits/codecvt.h" 3
template< class _InternT, class _ExternT, class _StateT> locale::id
# 326 "/usr/include/c++/4.4/bits/codecvt.h" 3
codecvt< _InternT, _ExternT, _StateT> ::id;
# 330 "/usr/include/c++/4.4/bits/codecvt.h" 3
template<> class codecvt< char, char, __mbstate_t> : public __codecvt_abstract_base< char, char, __mbstate_t> {
# 335 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: typedef char intern_type;
# 336 "/usr/include/c++/4.4/bits/codecvt.h" 3
typedef char extern_type;
# 337 "/usr/include/c++/4.4/bits/codecvt.h" 3
typedef mbstate_t state_type;
# 340 "/usr/include/c++/4.4/bits/codecvt.h" 3
protected: __c_locale _M_c_locale_codecvt;
# 343 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: static locale::id id;
# 346 "/usr/include/c++/4.4/bits/codecvt.h" 3
explicit codecvt(size_t = (0));
# 349 "/usr/include/c++/4.4/bits/codecvt.h" 3
explicit codecvt(__c_locale , size_t = (0));
# 353 "/usr/include/c++/4.4/bits/codecvt.h" 3
protected: virtual ~codecvt();
# 356 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_out(state_type & , const intern_type * , const intern_type * , const intern_type *& , extern_type * , extern_type * , extern_type *& ) const;
# 362 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_unshift(state_type & , extern_type * , extern_type * , extern_type *& ) const;
# 366 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_in(state_type & , const extern_type * , const extern_type * , const extern_type *& , intern_type * , intern_type * , intern_type *& ) const;
# 372 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_encoding() const throw();
# 375 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual bool do_always_noconv() const throw();
# 378 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_length(state_type &, const extern_type * , const extern_type * , size_t ) const;
# 382 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_max_length() const throw();
# 383 "/usr/include/c++/4.4/bits/codecvt.h" 3
};
# 388 "/usr/include/c++/4.4/bits/codecvt.h" 3
template<> class codecvt< wchar_t, char, __mbstate_t> : public __codecvt_abstract_base< wchar_t, char, __mbstate_t> {
# 393 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: typedef wchar_t intern_type;
# 394 "/usr/include/c++/4.4/bits/codecvt.h" 3
typedef char extern_type;
# 395 "/usr/include/c++/4.4/bits/codecvt.h" 3
typedef mbstate_t state_type;
# 398 "/usr/include/c++/4.4/bits/codecvt.h" 3
protected: __c_locale _M_c_locale_codecvt;
# 401 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: static locale::id id;
# 404 "/usr/include/c++/4.4/bits/codecvt.h" 3
explicit codecvt(size_t = (0));
# 407 "/usr/include/c++/4.4/bits/codecvt.h" 3
explicit codecvt(__c_locale , size_t = (0));
# 411 "/usr/include/c++/4.4/bits/codecvt.h" 3
protected: virtual ~codecvt();
# 414 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_out(state_type & , const intern_type * , const intern_type * , const intern_type *& , extern_type * , extern_type * , extern_type *& ) const;
# 420 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_unshift(state_type & , extern_type * , extern_type * , extern_type *& ) const;
# 425 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_in(state_type & , const extern_type * , const extern_type * , const extern_type *& , intern_type * , intern_type * , intern_type *& ) const;
# 432 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_encoding() const throw();
# 435 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual bool do_always_noconv() const throw();
# 438 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_length(state_type &, const extern_type * , const extern_type * , size_t ) const;
# 442 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_max_length() const throw();
# 443 "/usr/include/c++/4.4/bits/codecvt.h" 3
};
# 447 "/usr/include/c++/4.4/bits/codecvt.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class codecvt_byname : public codecvt < _InternT, _ExternT, _StateT >
    {
    public :
      explicit
      codecvt_byname ( const char * __s, size_t __refs = 0 )
      : codecvt < _InternT, _ExternT, _StateT > ( __refs )
      {
 if ( __builtin_strcmp ( __s, "C" ) != 0
     && __builtin_strcmp ( __s, "POSIX" ) != 0 )
   {
     this -> _S_destroy_c_locale ( this -> _M_c_locale_codecvt );
     this -> _S_create_c_locale ( this -> _M_c_locale_codecvt, __s );
   }
      }

    protected :
      virtual
      ~ codecvt_byname ( ) { }
    };
# 472 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template class codecvt_byname< char, char, __mbstate_t> ;
# 474 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template const codecvt< char, char, __mbstate_t> &use_facet< codecvt< char, char, __mbstate_t> > (const locale &);
# 478 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template bool has_facet< codecvt< char, char, __mbstate_t> > (const locale &) throw();
# 483 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template class codecvt_byname< wchar_t, char, __mbstate_t> ;
# 485 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template const codecvt< wchar_t, char, __mbstate_t> &use_facet< codecvt< wchar_t, char, __mbstate_t> > (const locale &);
# 489 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template bool has_facet< codecvt< wchar_t, char, __mbstate_t> > (const locale &) throw();
# 495 "/usr/include/c++/4.4/bits/codecvt.h" 3
}
# 26 "/usr/include/_G_config.h" 3
extern "C" { typedef
# 23 "/usr/include/_G_config.h" 3
struct {
# 24 "/usr/include/_G_config.h" 3
__off_t __pos;
# 25 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 26 "/usr/include/_G_config.h" 3
} _G_fpos_t; }
# 31 "/usr/include/_G_config.h" 3
extern "C" { typedef
# 28 "/usr/include/_G_config.h" 3
struct {
# 29 "/usr/include/_G_config.h" 3
__off64_t __pos;
# 30 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 31 "/usr/include/_G_config.h" 3
} _G_fpos64_t; }
# 53 "/usr/include/_G_config.h" 3
extern "C" { typedef short _G_int16_t __attribute((__mode__(__HI__))); }
# 54 "/usr/include/_G_config.h" 3
extern "C" { typedef int _G_int32_t __attribute((__mode__(__SI__))); }
# 55 "/usr/include/_G_config.h" 3
extern "C" { typedef unsigned short _G_uint16_t __attribute((__mode__(__HI__))); }
# 56 "/usr/include/_G_config.h" 3
extern "C" { typedef unsigned _G_uint32_t __attribute((__mode__(__SI__))); }
# 170 "/usr/include/libio.h" 3
struct _IO_jump_t; struct _IO_FILE;
# 180 "/usr/include/libio.h" 3
extern "C" { typedef void _IO_lock_t; }
# 186 "/usr/include/libio.h" 3
extern "C" { struct _IO_marker {
# 187 "/usr/include/libio.h" 3
_IO_marker *_next;
# 188 "/usr/include/libio.h" 3
_IO_FILE *_sbuf;
# 192 "/usr/include/libio.h" 3
int _pos;
# 203 "/usr/include/libio.h" 3
}; }
# 206 "/usr/include/libio.h" 3
enum __codecvt_result {
# 208 "/usr/include/libio.h" 3
__codecvt_ok,
# 209 "/usr/include/libio.h" 3
__codecvt_partial,
# 210 "/usr/include/libio.h" 3
__codecvt_error,
# 211 "/usr/include/libio.h" 3
__codecvt_noconv
# 212 "/usr/include/libio.h" 3
};
# 271 "/usr/include/libio.h" 3
extern "C" { struct _IO_FILE {
# 272 "/usr/include/libio.h" 3
int _flags;
# 277 "/usr/include/libio.h" 3
char *_IO_read_ptr;
# 278 "/usr/include/libio.h" 3
char *_IO_read_end;
# 279 "/usr/include/libio.h" 3
char *_IO_read_base;
# 280 "/usr/include/libio.h" 3
char *_IO_write_base;
# 281 "/usr/include/libio.h" 3
char *_IO_write_ptr;
# 282 "/usr/include/libio.h" 3
char *_IO_write_end;
# 283 "/usr/include/libio.h" 3
char *_IO_buf_base;
# 284 "/usr/include/libio.h" 3
char *_IO_buf_end;
# 286 "/usr/include/libio.h" 3
char *_IO_save_base;
# 287 "/usr/include/libio.h" 3
char *_IO_backup_base;
# 288 "/usr/include/libio.h" 3
char *_IO_save_end;
# 290 "/usr/include/libio.h" 3
_IO_marker *_markers;
# 292 "/usr/include/libio.h" 3
_IO_FILE *_chain;
# 294 "/usr/include/libio.h" 3
int _fileno;
# 298 "/usr/include/libio.h" 3
int _flags2;
# 300 "/usr/include/libio.h" 3
__off_t _old_offset;
# 304 "/usr/include/libio.h" 3
unsigned short _cur_column;
# 305 "/usr/include/libio.h" 3
signed char _vtable_offset;
# 306 "/usr/include/libio.h" 3
char _shortbuf[1];
# 310 "/usr/include/libio.h" 3
_IO_lock_t *_lock;
# 319 "/usr/include/libio.h" 3
__off64_t _offset;
# 328 "/usr/include/libio.h" 3
void *__pad1;
# 329 "/usr/include/libio.h" 3
void *__pad2;
# 330 "/usr/include/libio.h" 3
void *__pad3;
# 331 "/usr/include/libio.h" 3
void *__pad4;
# 332 "/usr/include/libio.h" 3
size_t __pad5;
# 334 "/usr/include/libio.h" 3
int _mode;
# 336 "/usr/include/libio.h" 3
char _unused2[(((15) * sizeof(int)) - ((4) * sizeof(void *))) - sizeof(size_t)];
# 338 "/usr/include/libio.h" 3
}; }
# 344 "/usr/include/libio.h" 3
struct _IO_FILE_plus;
# 346 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stdin_; }
# 347 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stdout_; }
# 348 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stderr_; }
# 364 "/usr/include/libio.h" 3
extern "C" { typedef __ssize_t __io_read_fn(void * , char * , size_t ); }
# 372 "/usr/include/libio.h" 3
extern "C" { typedef __ssize_t __io_write_fn(void * , const char * , size_t ); }
# 381 "/usr/include/libio.h" 3
extern "C" { typedef int __io_seek_fn(void * , __off64_t * , int ); }
# 384 "/usr/include/libio.h" 3
extern "C" { typedef int __io_close_fn(void * ); }
# 389 "/usr/include/libio.h" 3
extern "C" { typedef __io_read_fn cookie_read_function_t; }
# 390 "/usr/include/libio.h" 3
extern "C" { typedef __io_write_fn cookie_write_function_t; }
# 391 "/usr/include/libio.h" 3
extern "C" { typedef __io_seek_fn cookie_seek_function_t; }
# 392 "/usr/include/libio.h" 3
extern "C" { typedef __io_close_fn cookie_close_function_t; }
# 401 "/usr/include/libio.h" 3
extern "C" { typedef
# 396 "/usr/include/libio.h" 3
struct {
# 397 "/usr/include/libio.h" 3
__io_read_fn *read;
# 398 "/usr/include/libio.h" 3
__io_write_fn *write;
# 399 "/usr/include/libio.h" 3
__io_seek_fn *seek;
# 400 "/usr/include/libio.h" 3
__io_close_fn *close;
# 401 "/usr/include/libio.h" 3
} _IO_cookie_io_functions_t; }
# 402 "/usr/include/libio.h" 3
extern "C" { typedef _IO_cookie_io_functions_t cookie_io_functions_t; }
# 404 "/usr/include/libio.h" 3
struct _IO_cookie_file;
# 407 "/usr/include/libio.h" 3
extern "C" void _IO_cookie_init(_IO_cookie_file * , int , void * , _IO_cookie_io_functions_t );
# 416 "/usr/include/libio.h" 3
extern "C" int __underflow(_IO_FILE *);
# 417 "/usr/include/libio.h" 3
extern "C" int __uflow(_IO_FILE *);
# 418 "/usr/include/libio.h" 3
extern "C" int __overflow(_IO_FILE *, int);
# 460 "/usr/include/libio.h" 3
extern "C" int _IO_getc(_IO_FILE * );
# 461 "/usr/include/libio.h" 3
extern "C" int _IO_putc(int , _IO_FILE * );
# 462 "/usr/include/libio.h" 3
extern "C" int _IO_feof(_IO_FILE * ) throw();
# 463 "/usr/include/libio.h" 3
extern "C" int _IO_ferror(_IO_FILE * ) throw();
# 465 "/usr/include/libio.h" 3
extern "C" int _IO_peekc_locked(_IO_FILE * );
# 471 "/usr/include/libio.h" 3
extern "C" void _IO_flockfile(_IO_FILE *) throw();
# 472 "/usr/include/libio.h" 3
extern "C" void _IO_funlockfile(_IO_FILE *) throw();
# 473 "/usr/include/libio.h" 3
extern "C" int _IO_ftrylockfile(_IO_FILE *) throw();
# 490 "/usr/include/libio.h" 3
extern "C" int _IO_vfscanf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list, int *__restrict__);
# 492 "/usr/include/libio.h" 3
extern "C" int _IO_vfprintf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list);
# 494 "/usr/include/libio.h" 3
extern "C" __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
# 495 "/usr/include/libio.h" 3
extern "C" size_t _IO_sgetn(_IO_FILE *, void *, size_t);
# 497 "/usr/include/libio.h" 3
extern "C" __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
# 498 "/usr/include/libio.h" 3
extern "C" __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
# 500 "/usr/include/libio.h" 3
extern "C" void _IO_free_backup_area(_IO_FILE *) throw();
# 80 "/usr/include/stdio.h" 3
extern "C" { typedef __gnuc_va_list va_list; }
# 91 "/usr/include/stdio.h" 3
extern "C" { typedef _G_fpos_t fpos_t; }
# 97 "/usr/include/stdio.h" 3
extern "C" { typedef _G_fpos64_t fpos64_t; }
# 145 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stdin; }
# 146 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stdout; }
# 147 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stderr; }
# 155 "/usr/include/stdio.h" 3
extern "C" int remove(const char * ) throw();
# 157 "/usr/include/stdio.h" 3
extern "C" int rename(const char * , const char * ) throw();
# 162 "/usr/include/stdio.h" 3
extern "C" int renameat(int , const char * , int , const char * ) throw();
# 172 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile();
# 182 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile64();
# 186 "/usr/include/stdio.h" 3
extern "C" char *tmpnam(char * ) throw();
# 192 "/usr/include/stdio.h" 3
extern "C" char *tmpnam_r(char * ) throw();
# 204 "/usr/include/stdio.h" 3
extern "C" char *tempnam(const char * , const char * ) throw()
# 205 "/usr/include/stdio.h" 3
 __attribute((__malloc__));
# 214 "/usr/include/stdio.h" 3
extern "C" int fclose(FILE * );
# 219 "/usr/include/stdio.h" 3
extern "C" int fflush(FILE * );
# 229 "/usr/include/stdio.h" 3
extern "C" int fflush_unlocked(FILE * );
# 239 "/usr/include/stdio.h" 3
extern "C" int fcloseall();
# 249 "/usr/include/stdio.h" 3
extern "C" FILE *fopen(const char *__restrict__ , const char *__restrict__ );
# 255 "/usr/include/stdio.h" 3
extern "C" FILE *freopen(const char *__restrict__ , const char *__restrict__ , FILE *__restrict__ );
# 274 "/usr/include/stdio.h" 3
extern "C" FILE *fopen64(const char *__restrict__ , const char *__restrict__ );
# 276 "/usr/include/stdio.h" 3
extern "C" FILE *freopen64(const char *__restrict__ , const char *__restrict__ , FILE *__restrict__ );
# 283 "/usr/include/stdio.h" 3
extern "C" FILE *fdopen(int , const char * ) throw();
# 289 "/usr/include/stdio.h" 3
extern "C" FILE *fopencookie(void *__restrict__ , const char *__restrict__ , _IO_cookie_io_functions_t ) throw();
# 296 "/usr/include/stdio.h" 3
extern "C" FILE *fmemopen(void * , size_t , const char * ) throw();
# 302 "/usr/include/stdio.h" 3
extern "C" FILE *open_memstream(char ** , size_t * ) throw();
# 309 "/usr/include/stdio.h" 3
extern "C" void setbuf(FILE *__restrict__ , char *__restrict__ ) throw();
# 313 "/usr/include/stdio.h" 3
extern "C" int setvbuf(FILE *__restrict__ , char *__restrict__ , int , size_t ) throw();
# 320 "/usr/include/stdio.h" 3
extern "C" void setbuffer(FILE *__restrict__ , char *__restrict__ , size_t ) throw();
# 324 "/usr/include/stdio.h" 3
extern "C" void setlinebuf(FILE * ) throw();
# 333 "/usr/include/stdio.h" 3
extern "C" int fprintf(FILE *__restrict__ , const char *__restrict__ , ...);
# 339 "/usr/include/stdio.h" 3
extern "C" int printf(const char *__restrict__ , ...);
# 341 "/usr/include/stdio.h" 3
extern "C" int sprintf(char *__restrict__ , const char *__restrict__ , ...) throw();
# 348 "/usr/include/stdio.h" 3
extern "C" int vfprintf(FILE *__restrict__ , const char *__restrict__ , __gnuc_va_list );
# 354 "/usr/include/stdio.h" 3
extern "C" int vprintf(const char *__restrict__ , __gnuc_va_list );
# 356 "/usr/include/stdio.h" 3
extern "C" int vsprintf(char *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw();
# 363 "/usr/include/stdio.h" 3
extern "C" int snprintf(char *__restrict__ , size_t , const char *__restrict__ , ...) throw()
# 365 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 367 "/usr/include/stdio.h" 3
extern "C" int vsnprintf(char *__restrict__ , size_t , const char *__restrict__ , __gnuc_va_list ) throw()
# 369 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 376 "/usr/include/stdio.h" 3
extern "C" int vasprintf(char **__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 378 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 379 "/usr/include/stdio.h" 3
extern "C" int __asprintf(char **__restrict__ , const char *__restrict__ , ...) throw()
# 381 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 382 "/usr/include/stdio.h" 3
extern "C" int asprintf(char **__restrict__ , const char *__restrict__ , ...) throw()
# 384 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 394 "/usr/include/stdio.h" 3
extern "C" int vdprintf(int , const char *__restrict__ , __gnuc_va_list )
# 396 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 397 "/usr/include/stdio.h" 3
extern "C" int dprintf(int , const char *__restrict__ , ...)
# 398 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 407 "/usr/include/stdio.h" 3
extern "C" int fscanf(FILE *__restrict__ , const char *__restrict__ , ...);
# 413 "/usr/include/stdio.h" 3
extern "C" int scanf(const char *__restrict__ , ...);
# 415 "/usr/include/stdio.h" 3
extern "C" int sscanf(const char *__restrict__ , const char *__restrict__ , ...) throw();
# 453 "/usr/include/stdio.h" 3
extern "C" int vfscanf(FILE *__restrict__ , const char *__restrict__ , __gnuc_va_list )
# 455 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 461 "/usr/include/stdio.h" 3
extern "C" int vscanf(const char *__restrict__ , __gnuc_va_list )
# 462 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 1, 0)));
# 465 "/usr/include/stdio.h" 3
extern "C" int vsscanf(const char *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 467 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 513 "/usr/include/stdio.h" 3
extern "C" int fgetc(FILE * );
# 514 "/usr/include/stdio.h" 3
extern "C" int getc(FILE * );
# 520 "/usr/include/stdio.h" 3
extern "C" int getchar();
# 532 "/usr/include/stdio.h" 3
extern "C" int getc_unlocked(FILE * );
# 533 "/usr/include/stdio.h" 3
extern "C" int getchar_unlocked();
# 543 "/usr/include/stdio.h" 3
extern "C" int fgetc_unlocked(FILE * );
# 555 "/usr/include/stdio.h" 3
extern "C" int fputc(int , FILE * );
# 556 "/usr/include/stdio.h" 3
extern "C" int putc(int , FILE * );
# 562 "/usr/include/stdio.h" 3
extern "C" int putchar(int );
# 576 "/usr/include/stdio.h" 3
extern "C" int fputc_unlocked(int , FILE * );
# 584 "/usr/include/stdio.h" 3
extern "C" int putc_unlocked(int , FILE * );
# 585 "/usr/include/stdio.h" 3
extern "C" int putchar_unlocked(int );
# 592 "/usr/include/stdio.h" 3
extern "C" int getw(FILE * );
# 595 "/usr/include/stdio.h" 3
extern "C" int putw(int , FILE * );
# 604 "/usr/include/stdio.h" 3
extern "C" char *fgets(char *__restrict__ , int , FILE *__restrict__ );
# 612 "/usr/include/stdio.h" 3
extern "C" char *gets(char * );
# 622 "/usr/include/stdio.h" 3
extern "C" char *fgets_unlocked(char *__restrict__ , int , FILE *__restrict__ );
# 638 "/usr/include/stdio.h" 3
extern "C" __ssize_t __getdelim(char **__restrict__ , size_t *__restrict__ , int , FILE *__restrict__ );
# 641 "/usr/include/stdio.h" 3
extern "C" __ssize_t getdelim(char **__restrict__ , size_t *__restrict__ , int , FILE *__restrict__ );
# 651 "/usr/include/stdio.h" 3
extern "C" __ssize_t getline(char **__restrict__ , size_t *__restrict__ , FILE *__restrict__ );
# 662 "/usr/include/stdio.h" 3
extern "C" int fputs(const char *__restrict__ , FILE *__restrict__ );
# 668 "/usr/include/stdio.h" 3
extern "C" int puts(const char * );
# 675 "/usr/include/stdio.h" 3
extern "C" int ungetc(int , FILE * );
# 682 "/usr/include/stdio.h" 3
extern "C" size_t fread(void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 688 "/usr/include/stdio.h" 3
extern "C" size_t fwrite(const void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 699 "/usr/include/stdio.h" 3
extern "C" int fputs_unlocked(const char *__restrict__ , FILE *__restrict__ );
# 710 "/usr/include/stdio.h" 3
extern "C" size_t fread_unlocked(void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 712 "/usr/include/stdio.h" 3
extern "C" size_t fwrite_unlocked(const void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 722 "/usr/include/stdio.h" 3
extern "C" int fseek(FILE * , long , int );
# 727 "/usr/include/stdio.h" 3
extern "C" long ftell(FILE * );
# 732 "/usr/include/stdio.h" 3
extern "C" void rewind(FILE * );
# 746 "/usr/include/stdio.h" 3
extern "C" int fseeko(FILE * , __off_t , int );
# 751 "/usr/include/stdio.h" 3
extern "C" __off_t ftello(FILE * );
# 771 "/usr/include/stdio.h" 3
extern "C" int fgetpos(FILE *__restrict__ , fpos_t *__restrict__ );
# 776 "/usr/include/stdio.h" 3
extern "C" int fsetpos(FILE * , const fpos_t * );
# 791 "/usr/include/stdio.h" 3
extern "C" int fseeko64(FILE * , __off64_t , int );
# 792 "/usr/include/stdio.h" 3
extern "C" __off64_t ftello64(FILE * );
# 793 "/usr/include/stdio.h" 3
extern "C" int fgetpos64(FILE *__restrict__ , fpos64_t *__restrict__ );
# 794 "/usr/include/stdio.h" 3
extern "C" int fsetpos64(FILE * , const fpos64_t * );
# 799 "/usr/include/stdio.h" 3
extern "C" void clearerr(FILE * ) throw();
# 801 "/usr/include/stdio.h" 3
extern "C" int feof(FILE * ) throw();
# 803 "/usr/include/stdio.h" 3
extern "C" int ferror(FILE * ) throw();
# 808 "/usr/include/stdio.h" 3
extern "C" void clearerr_unlocked(FILE * ) throw();
# 809 "/usr/include/stdio.h" 3
extern "C" int feof_unlocked(FILE * ) throw();
# 810 "/usr/include/stdio.h" 3
extern "C" int ferror_unlocked(FILE * ) throw();
# 819 "/usr/include/stdio.h" 3
extern "C" void perror(const char * );
# 27 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern int sys_nerr; }
# 28 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern const char *const sys_errlist[]; }
# 31 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern int _sys_nerr; }
# 32 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern const char *const _sys_errlist[]; }
# 831 "/usr/include/stdio.h" 3
extern "C" int fileno(FILE * ) throw();
# 836 "/usr/include/stdio.h" 3
extern "C" int fileno_unlocked(FILE * ) throw();
# 846 "/usr/include/stdio.h" 3
extern "C" FILE *popen(const char * , const char * );
# 852 "/usr/include/stdio.h" 3
extern "C" int pclose(FILE * );
# 858 "/usr/include/stdio.h" 3
extern "C" char *ctermid(char * ) throw();
# 864 "/usr/include/stdio.h" 3
extern "C" char *cuserid(char * );
# 869 "/usr/include/stdio.h" 3
struct obstack;
# 872 "/usr/include/stdio.h" 3
extern "C" int obstack_printf(obstack *__restrict__ , const char *__restrict__ , ...) throw()
# 874 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 875 "/usr/include/stdio.h" 3
extern "C" int obstack_vprintf(obstack *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 878 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 886 "/usr/include/stdio.h" 3
extern "C" void flockfile(FILE * ) throw();
# 890 "/usr/include/stdio.h" 3
extern "C" int ftrylockfile(FILE * ) throw();
# 893 "/usr/include/stdio.h" 3
extern "C" void funlockfile(FILE * ) throw();
# 93 "/usr/include/c++/4.4/cstdio" 3
namespace std __attribute((__visibility__("default"))) {
# 95 "/usr/include/c++/4.4/cstdio" 3
using ::FILE;
# 96 "/usr/include/c++/4.4/cstdio" 3
using ::fpos_t;
# 98 "/usr/include/c++/4.4/cstdio" 3
using ::clearerr;
# 99 "/usr/include/c++/4.4/cstdio" 3
using ::fclose;
# 100 "/usr/include/c++/4.4/cstdio" 3
using ::feof;
# 101 "/usr/include/c++/4.4/cstdio" 3
using ::ferror;
# 102 "/usr/include/c++/4.4/cstdio" 3
using ::fflush;
# 103 "/usr/include/c++/4.4/cstdio" 3
using ::fgetc;
# 104 "/usr/include/c++/4.4/cstdio" 3
using ::fgetpos;
# 105 "/usr/include/c++/4.4/cstdio" 3
using ::fgets;
# 106 "/usr/include/c++/4.4/cstdio" 3
using ::fopen;
# 107 "/usr/include/c++/4.4/cstdio" 3
using ::fprintf;
# 108 "/usr/include/c++/4.4/cstdio" 3
using ::fputc;
# 109 "/usr/include/c++/4.4/cstdio" 3
using ::fputs;
# 110 "/usr/include/c++/4.4/cstdio" 3
using ::fread;
# 111 "/usr/include/c++/4.4/cstdio" 3
using ::freopen;
# 112 "/usr/include/c++/4.4/cstdio" 3
using ::fscanf;
# 113 "/usr/include/c++/4.4/cstdio" 3
using ::fseek;
# 114 "/usr/include/c++/4.4/cstdio" 3
using ::fsetpos;
# 115 "/usr/include/c++/4.4/cstdio" 3
using ::ftell;
# 116 "/usr/include/c++/4.4/cstdio" 3
using ::fwrite;
# 117 "/usr/include/c++/4.4/cstdio" 3
using ::getc;
# 118 "/usr/include/c++/4.4/cstdio" 3
using ::getchar;
# 119 "/usr/include/c++/4.4/cstdio" 3
using ::gets;
# 120 "/usr/include/c++/4.4/cstdio" 3
using ::perror;
# 121 "/usr/include/c++/4.4/cstdio" 3
using ::printf;
# 122 "/usr/include/c++/4.4/cstdio" 3
using ::putc;
# 123 "/usr/include/c++/4.4/cstdio" 3
using ::putchar;
# 124 "/usr/include/c++/4.4/cstdio" 3
using ::puts;
# 125 "/usr/include/c++/4.4/cstdio" 3
using ::remove;
# 126 "/usr/include/c++/4.4/cstdio" 3
using ::rename;
# 127 "/usr/include/c++/4.4/cstdio" 3
using ::rewind;
# 128 "/usr/include/c++/4.4/cstdio" 3
using ::scanf;
# 129 "/usr/include/c++/4.4/cstdio" 3
using ::setbuf;
# 130 "/usr/include/c++/4.4/cstdio" 3
using ::setvbuf;
# 131 "/usr/include/c++/4.4/cstdio" 3
using ::sprintf;
# 132 "/usr/include/c++/4.4/cstdio" 3
using ::sscanf;
# 133 "/usr/include/c++/4.4/cstdio" 3
using ::tmpfile;
# 134 "/usr/include/c++/4.4/cstdio" 3
using ::tmpnam;
# 135 "/usr/include/c++/4.4/cstdio" 3
using ::ungetc;
# 136 "/usr/include/c++/4.4/cstdio" 3
using ::vfprintf;
# 137 "/usr/include/c++/4.4/cstdio" 3
using ::vprintf;
# 138 "/usr/include/c++/4.4/cstdio" 3
using ::vsprintf;
# 140 "/usr/include/c++/4.4/cstdio" 3
}
# 150 "/usr/include/c++/4.4/cstdio" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 165 "/usr/include/c++/4.4/cstdio" 3
using ::snprintf;
# 166 "/usr/include/c++/4.4/cstdio" 3
using ::vfscanf;
# 167 "/usr/include/c++/4.4/cstdio" 3
using ::vscanf;
# 168 "/usr/include/c++/4.4/cstdio" 3
using ::vsnprintf;
# 169 "/usr/include/c++/4.4/cstdio" 3
using ::vsscanf;
# 172 "/usr/include/c++/4.4/cstdio" 3
}
# 174 "/usr/include/c++/4.4/cstdio" 3
namespace std __attribute((__visibility__("default"))) {
# 176 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::snprintf;
# 177 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::vfscanf;
# 178 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::vscanf;
# 179 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::vsnprintf;
# 180 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::vsscanf;
# 182 "/usr/include/c++/4.4/cstdio" 3
}
# 40 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++io.h" 3
namespace std __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++io.h" 3
typedef __gthread_mutex_t __c_lock;
# 45 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++io.h" 3
typedef FILE __c_file;
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++io.h" 3
}
# 44 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
namespace std __attribute((__visibility__("default"))) {
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
template< class _CharT> class __basic_file;
# 52 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
template<> class __basic_file< char> {
# 55 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
__c_file *_M_cfile;
# 58 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
bool _M_cfile_created;
# 61 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
public: __basic_file(__c_lock * = 0);
# 64 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
std::__basic_file< char> *open(const char * , ios_base::openmode , int = 436);
# 67 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
std::__basic_file< char> *sys_open(__c_file * , ios_base::openmode);
# 70 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
std::__basic_file< char> *sys_open(int , ios_base::openmode );
# 73 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
std::__basic_file< char> *close();
# 76 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
bool is_open() const;
# 79 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
int fd();
# 82 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
__c_file *file();
# 84 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
~__basic_file();
# 87 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
streamsize xsputn(const char * , streamsize );
# 90 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
streamsize xsputn_2(const char * , streamsize , const char * , streamsize );
# 94 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
streamsize xsgetn(char * , streamsize );
# 97 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
streamoff seekoff(streamoff , ios_base::seekdir );
# 100 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
int sync();
# 103 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
streamsize showmanyc();
# 104 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
};
# 106 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
}
# 49 "/usr/include/c++/4.4/fstream" 3
namespace std __attribute((__visibility__("default"))) {
# 66 "/usr/include/c++/4.4/fstream" 3
template < typename _CharT, typename _Traits >
    class basic_filebuf : public basic_streambuf < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;

      typedef basic_streambuf < char_type, traits_type > __streambuf_type;
      typedef basic_filebuf < char_type, traits_type > __filebuf_type;
      typedef __basic_file < char > __file_type;
      typedef typename traits_type :: state_type __state_type;
      typedef codecvt < char_type, char, __state_type > __codecvt_type;

      friend class ios_base;

    protected :


      __c_lock _M_lock;


      __file_type _M_file;


      ios_base :: openmode _M_mode;


      __state_type _M_state_beg;




      __state_type _M_state_cur;



      __state_type _M_state_last;


      char_type * _M_buf;






      size_t _M_buf_size;


      bool _M_buf_allocated;

      bool _M_reading;
      bool _M_writing;







      char_type _M_pback;
      char_type * _M_pback_cur_save;
      char_type * _M_pback_end_save;
      bool _M_pback_init;



      const __codecvt_type * _M_codecvt;






      char * _M_ext_buf;




      streamsize _M_ext_buf_size;






      const char * _M_ext_next;
      char * _M_ext_end;






      void
      _M_create_pback ( )
      {
 if ( ! _M_pback_init )
   {
     _M_pback_cur_save = this -> gptr ( );
     _M_pback_end_save = this -> egptr ( );
     this -> setg ( & _M_pback, & _M_pback, & _M_pback + 1 );
     _M_pback_init = true;
   }
      }






      void
      _M_destroy_pback ( ) throw ( )
      {
 if ( _M_pback_init )
   {

     _M_pback_cur_save += this -> gptr ( ) != this -> eback ( );
     this -> setg ( _M_buf, _M_pback_cur_save, _M_pback_end_save );
     _M_pback_init = false;
   }
      }

    public :







      basic_filebuf ( );




      virtual
      ~ basic_filebuf ( )
      { this -> close ( ); }





      bool
      is_open ( ) const throw ( )
      { return _M_file . is_open ( ); }

      __filebuf_type *
      open ( const char * __s, ios_base :: openmode __mode );

      __filebuf_type *
      close ( );

    protected :
      void
      _M_allocate_internal_buffer ( );

      void
      _M_destroy_internal_buffer ( ) throw ( );


      virtual streamsize
      showmanyc ( );






      virtual int_type
      underflow ( );

      virtual int_type
      pbackfail ( int_type __c = _Traits :: eof ( ) );

      virtual int_type
      overflow ( int_type __c = _Traits :: eof ( ) );



      bool
      _M_convert_to_external ( char_type *, streamsize );

      virtual __streambuf_type *
      setbuf ( char_type * __s, streamsize __n );

      virtual pos_type
      seekoff ( off_type __off, ios_base :: seekdir __way,
       ios_base :: openmode __mode = ios_base :: in | ios_base :: out );

      virtual pos_type
      seekpos ( pos_type __pos,
       ios_base :: openmode __mode = ios_base :: in | ios_base :: out );


      pos_type
      _M_seek ( off_type __off, ios_base :: seekdir __way, __state_type __state );

      virtual int
      sync ( );

      virtual void
      imbue ( const locale & __loc );

      virtual streamsize
      xsgetn ( char_type * __s, streamsize __n );

      virtual streamsize
      xsputn ( const char_type * __s, streamsize __n );


      bool
      _M_terminate_output ( );

      void
      _M_set_buffer ( streamsize __off )
      {
  const bool __testin = _M_mode & ios_base :: in;
  const bool __testout = _M_mode & ios_base :: out;

 if ( __testin && __off > 0 )
   this -> setg ( _M_buf, _M_buf, _M_buf + __off );
 else
   this -> setg ( _M_buf, _M_buf, _M_buf );

 if ( __testout && __off == 0 && _M_buf_size > 1 )
   this -> setp ( _M_buf, _M_buf + _M_buf_size - 1 );
 else
   this -> setp ( __null, __null );
      }
    };
# 413 "/usr/include/c++/4.4/fstream" 3
template < typename _CharT, typename _Traits >
    class basic_ifstream : public basic_istream < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;


      typedef basic_filebuf < char_type, traits_type > __filebuf_type;
      typedef basic_istream < char_type, traits_type > __istream_type;

    private :
      __filebuf_type _M_filebuf;

    public :

      basic_ifstream ( ) : __istream_type ( ), _M_filebuf ( )
      { this -> init ( & _M_filebuf ); }

      explicit
      basic_ifstream ( const char * __s, ios_base :: openmode __mode = ios_base :: in )
      : __istream_type ( ), _M_filebuf ( )
      {
 this -> init ( & _M_filebuf );
 this -> open ( __s, __mode );
      }

      ~ basic_ifstream ( )
      { }

      __filebuf_type *
      rdbuf ( ) const
      { return const_cast < __filebuf_type * > ( & _M_filebuf ); }





      bool
      is_open ( )
      { return _M_filebuf . is_open ( ); }



      bool
      is_open ( ) const
      { return _M_filebuf . is_open ( ); }

      void
      open ( const char * __s, ios_base :: openmode __mode = ios_base :: in )
      {
 if ( ! _M_filebuf . open ( __s, __mode | ios_base :: in ) )
   this -> setstate ( ios_base :: failbit );
 else


   this -> clear ( );
      }

      void
      close ( )
      {
 if ( ! _M_filebuf . close ( ) )
   this -> setstate ( ios_base :: failbit );
      }
    };
# 581 "/usr/include/c++/4.4/fstream" 3
template < typename _CharT, typename _Traits >
    class basic_ofstream : public basic_ostream < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;


      typedef basic_filebuf < char_type, traits_type > __filebuf_type;
      typedef basic_ostream < char_type, traits_type > __ostream_type;

    private :
      __filebuf_type _M_filebuf;

    public :

      basic_ofstream ( ) : __ostream_type ( ), _M_filebuf ( )
      { this -> init ( & _M_filebuf ); }

      explicit
      basic_ofstream ( const char * __s,
       ios_base :: openmode __mode = ios_base :: out | ios_base :: trunc )
      : __ostream_type ( ), _M_filebuf ( )
      {
 this -> init ( & _M_filebuf );
 this -> open ( __s, __mode );
      }

      ~ basic_ofstream ( )
      { }

      __filebuf_type *
      rdbuf ( ) const
      { return const_cast < __filebuf_type * > ( & _M_filebuf ); }





      bool
      is_open ( )
      { return _M_filebuf . is_open ( ); }



      bool
      is_open ( ) const
      { return _M_filebuf . is_open ( ); }

      void
      open ( const char * __s,
    ios_base :: openmode __mode = ios_base :: out | ios_base :: trunc )
      {
 if ( ! _M_filebuf . open ( __s, __mode | ios_base :: out ) )
   this -> setstate ( ios_base :: failbit );
 else


   this -> clear ( );
      }

      void
      close ( )
      {
 if ( ! _M_filebuf . close ( ) )
   this -> setstate ( ios_base :: failbit );
      }
    };
# 754 "/usr/include/c++/4.4/fstream" 3
template < typename _CharT, typename _Traits >
    class basic_fstream : public basic_iostream < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;


      typedef basic_filebuf < char_type, traits_type > __filebuf_type;
      typedef basic_ios < char_type, traits_type > __ios_type;
      typedef basic_iostream < char_type, traits_type > __iostream_type;

    private :
      __filebuf_type _M_filebuf;

    public :

      basic_fstream ( )
      : __iostream_type ( ), _M_filebuf ( )
      { this -> init ( & _M_filebuf ); }

      explicit
      basic_fstream ( const char * __s,
      ios_base :: openmode __mode = ios_base :: in | ios_base :: out )
      : __iostream_type ( __null ), _M_filebuf ( )
      {
 this -> init ( & _M_filebuf );
 this -> open ( __s, __mode );
      }

      ~ basic_fstream ( )
      { }

      __filebuf_type *
      rdbuf ( ) const
      { return const_cast < __filebuf_type * > ( & _M_filebuf ); }





      bool
      is_open ( )
      { return _M_filebuf . is_open ( ); }



      bool
      is_open ( ) const
      { return _M_filebuf . is_open ( ); }

      void
      open ( const char * __s,
    ios_base :: openmode __mode = ios_base :: in | ios_base :: out )
      {
 if ( ! _M_filebuf . open ( __s, __mode ) )
   this -> setstate ( ios_base :: failbit );
 else


   this -> clear ( );
      }

      void
      close ( )
      {
 if ( ! _M_filebuf . close ( ) )
   this -> setstate ( ios_base :: failbit );
      }
    };
# 912 "/usr/include/c++/4.4/fstream" 3
}
# 43 "/usr/include/c++/4.4/bits/fstream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_filebuf < _CharT, _Traits > ::
    _M_allocate_internal_buffer ( )
    {


      if ( ! _M_buf_allocated && ! _M_buf )
 {
   _M_buf = new char_type [ _M_buf_size ];
   _M_buf_allocated = true;
 }
    }
# 59 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_filebuf < _CharT, _Traits > ::
    _M_destroy_internal_buffer ( ) throw ( )
    {
      if ( _M_buf_allocated )
 {
   delete [ ] _M_buf;
   _M_buf = __null;
   _M_buf_allocated = false;
 }
      delete [ ] _M_ext_buf;
      _M_ext_buf = __null;
      _M_ext_buf_size = 0;
      _M_ext_next = __null;
      _M_ext_end = __null;
    }
# 77 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_filebuf < _CharT, _Traits > ::
    basic_filebuf ( ) : __streambuf_type ( ), _M_lock ( ), _M_file ( & _M_lock ),
    _M_mode ( ios_base :: openmode ( 0 ) ), _M_state_beg ( ), _M_state_cur ( ),
    _M_state_last ( ), _M_buf ( __null ), _M_buf_size ( 8192 ),
    _M_buf_allocated ( false ), _M_reading ( false ), _M_writing ( false ), _M_pback ( ),
    _M_pback_cur_save ( 0 ), _M_pback_end_save ( 0 ), _M_pback_init ( false ),
    _M_codecvt ( 0 ), _M_ext_buf ( 0 ), _M_ext_buf_size ( 0 ), _M_ext_next ( 0 ),
    _M_ext_end ( 0 )
    {
      if ( has_facet < __codecvt_type > ( this -> _M_buf_locale ) )
 _M_codecvt = & use_facet < __codecvt_type > ( this -> _M_buf_locale );
    }
# 91 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: __filebuf_type *
    basic_filebuf < _CharT, _Traits > ::
    open ( const char * __s, ios_base :: openmode __mode )
    {
      __filebuf_type * __ret = __null;
      if ( ! this -> is_open ( ) )
 {
   _M_file . open ( __s, __mode );
   if ( this -> is_open ( ) )
     {
       _M_allocate_internal_buffer ( );
       _M_mode = __mode;


       _M_reading = false;
       _M_writing = false;
       _M_set_buffer ( - 1 );


       _M_state_last = _M_state_cur = _M_state_beg;


       if ( ( __mode & ios_base :: ate )
    && this -> seekoff ( 0, ios_base :: end, __mode )
    == pos_type ( off_type ( - 1 ) ) )
  this -> close ( );
       else
  __ret = this;
     }
 }
      return __ret;
    }
# 125 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: __filebuf_type *
    basic_filebuf < _CharT, _Traits > ::
    close ( )
    {
      if ( ! this -> is_open ( ) )
 return __null;

      bool __testfail = false;
      {

 struct __close_sentry
 {
   basic_filebuf * __fb;
   __close_sentry ( basic_filebuf * __fbi ) : __fb ( __fbi ) { }
   ~ __close_sentry ( )
   {
     __fb -> _M_mode = ios_base :: openmode ( 0 );
     __fb -> _M_pback_init = false;
     __fb -> _M_destroy_internal_buffer ( );
     __fb -> _M_reading = false;
     __fb -> _M_writing = false;
     __fb -> _M_set_buffer ( - 1 );
     __fb -> _M_state_last = __fb -> _M_state_cur = __fb -> _M_state_beg;
   }
 } __cs ( this );

 try
   {
     if ( ! _M_terminate_output ( ) )
       __testfail = true;
   }
 catch ( __cxxabiv1 :: __forced_unwind & )
   {
     _M_file . close ( );
     throw;
   }
 catch ( ... )
   { __testfail = true; }
      }

      if ( ! _M_file . close ( ) )
 __testfail = true;

      if ( __testfail )
 return __null;
      else
 return this;
    }
# 175 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_filebuf < _CharT, _Traits > ::
    showmanyc ( )
    {
      streamsize __ret = - 1;
      const bool __testin = _M_mode & ios_base :: in;
      if ( __testin && this -> is_open ( ) )
 {


   __ret = this -> egptr ( ) - this -> gptr ( );







   if ( __check_facet ( _M_codecvt ) . encoding ( ) >= 0 )

     __ret += _M_file . showmanyc ( ) / _M_codecvt -> max_length ( );
 }
      return __ret;
    }
# 201 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: int_type
    basic_filebuf < _CharT, _Traits > ::
    underflow ( )
    {
      int_type __ret = traits_type :: eof ( );
      const bool __testin = _M_mode & ios_base :: in;
      if ( __testin && ! _M_writing )
 {



   _M_destroy_pback ( );

   if ( this -> gptr ( ) < this -> egptr ( ) )
     return traits_type :: to_int_type ( * this -> gptr ( ) );


   const size_t __buflen = _M_buf_size > 1 ? _M_buf_size - 1 : 1;


   bool __got_eof = false;

   streamsize __ilen = 0;
   codecvt_base :: result __r = codecvt_base :: ok;
   if ( __check_facet ( _M_codecvt ) . always_noconv ( ) )
     {
       __ilen = _M_file . xsgetn ( reinterpret_cast < char * > ( this -> eback ( ) ),
          __buflen );
       if ( __ilen == 0 )
  __got_eof = true;
     }
   else
     {


       const int __enc = _M_codecvt -> encoding ( );
       streamsize __blen;
       streamsize __rlen;
       if ( __enc > 0 )
  __blen = __rlen = __buflen * __enc;
       else
  {
    __blen = __buflen + _M_codecvt -> max_length ( ) - 1;
    __rlen = __buflen;
  }
       const streamsize __remainder = _M_ext_end - _M_ext_next;
       __rlen = __rlen > __remainder ? __rlen - __remainder : 0;



       if ( _M_reading && this -> egptr ( ) == this -> eback ( ) && __remainder )
  __rlen = 0;



       if ( _M_ext_buf_size < __blen )
  {
    char * __buf = new char [ __blen ];
    if ( __remainder )
      __builtin_memcpy ( __buf, _M_ext_next, __remainder );

    delete [ ] _M_ext_buf;
    _M_ext_buf = __buf;
    _M_ext_buf_size = __blen;
  }
       else if ( __remainder )
  __builtin_memmove ( _M_ext_buf, _M_ext_next, __remainder );

       _M_ext_next = _M_ext_buf;
       _M_ext_end = _M_ext_buf + __remainder;
       _M_state_last = _M_state_cur;

       do
  {
    if ( __rlen > 0 )
      {



        if ( _M_ext_end - _M_ext_buf + __rlen > _M_ext_buf_size )
   {
     __throw_ios_failure ( ( "basic_filebuf::underflow codecvt::max_length() is not valid" ) );


   }
        streamsize __elen = _M_file . xsgetn ( _M_ext_end, __rlen );
        if ( __elen == 0 )
   __got_eof = true;
        else if ( __elen == - 1 )
   break;
        _M_ext_end += __elen;
      }

    char_type * __iend = this -> eback ( );
    if ( _M_ext_next < _M_ext_end )
      __r = _M_codecvt -> in ( _M_state_cur, _M_ext_next,
      _M_ext_end, _M_ext_next,
      this -> eback ( ),
      this -> eback ( ) + __buflen, __iend );
    if ( __r == codecvt_base :: noconv )
      {
        size_t __avail = _M_ext_end - _M_ext_buf;
        __ilen = std :: min ( __avail, __buflen );
        traits_type :: copy ( this -> eback ( ),
     reinterpret_cast < char_type * >
     ( _M_ext_buf ), __ilen );
        _M_ext_next = _M_ext_buf + __ilen;
      }
    else
      __ilen = __iend - this -> eback ( );




    if ( __r == codecvt_base :: error )
      break;

    __rlen = 1;
  }
       while ( __ilen == 0 && ! __got_eof );
     }

   if ( __ilen > 0 )
     {
       _M_set_buffer ( __ilen );
       _M_reading = true;
       __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
     }
   else if ( __got_eof )
     {



       _M_set_buffer ( - 1 );
       _M_reading = false;


       if ( __r == codecvt_base :: partial )
  __throw_ios_failure ( ( "basic_filebuf::underflow incomplete character in file" ) );

     }
   else if ( __r == codecvt_base :: error )
     __throw_ios_failure ( ( "basic_filebuf::underflow invalid byte sequence in file" ) );

   else
     __throw_ios_failure ( ( "basic_filebuf::underflow error reading the file" ) );

 }
      return __ret;
    }
# 353 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: int_type
    basic_filebuf < _CharT, _Traits > ::
    pbackfail ( int_type __i )
    {
      int_type __ret = traits_type :: eof ( );
      const bool __testin = _M_mode & ios_base :: in;
      if ( __testin && ! _M_writing )
 {


   const bool __testpb = _M_pback_init;
   const bool __testeof = traits_type :: eq_int_type ( __i, __ret );
   int_type __tmp;
   if ( this -> eback ( ) < this -> gptr ( ) )
     {
       this -> gbump ( - 1 );
       __tmp = traits_type :: to_int_type ( * this -> gptr ( ) );
     }
   else if ( this -> seekoff ( - 1, ios_base :: cur ) != pos_type ( off_type ( - 1 ) ) )
     {
       __tmp = this -> underflow ( );
       if ( traits_type :: eq_int_type ( __tmp, __ret ) )
  return __ret;
     }
   else
     {





       return __ret;
     }



   if ( ! __testeof && traits_type :: eq_int_type ( __i, __tmp ) )
     __ret = __i;
   else if ( __testeof )
     __ret = traits_type :: not_eof ( __i );
   else if ( ! __testpb )
     {
       _M_create_pback ( );
       _M_reading = true;
       * this -> gptr ( ) = traits_type :: to_char_type ( __i );
       __ret = __i;
     }
 }
      return __ret;
    }
# 405 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: int_type
    basic_filebuf < _CharT, _Traits > ::
    overflow ( int_type __c )
    {
      int_type __ret = traits_type :: eof ( );
      const bool __testeof = traits_type :: eq_int_type ( __c, __ret );
      const bool __testout = _M_mode & ios_base :: out;
      if ( __testout && ! _M_reading )
 {
   if ( this -> pbase ( ) < this -> pptr ( ) )
     {

       if ( ! __testeof )
  {
    * this -> pptr ( ) = traits_type :: to_char_type ( __c );
    this -> pbump ( 1 );
  }



       if ( _M_convert_to_external ( this -> pbase ( ),
      this -> pptr ( ) - this -> pbase ( ) ) )
  {
    _M_set_buffer ( 0 );
    __ret = traits_type :: not_eof ( __c );
  }
     }
   else if ( _M_buf_size > 1 )
     {



       _M_set_buffer ( 0 );
       _M_writing = true;
       if ( ! __testeof )
  {
    * this -> pptr ( ) = traits_type :: to_char_type ( __c );
    this -> pbump ( 1 );
  }
       __ret = traits_type :: not_eof ( __c );
     }
   else
     {

       char_type __conv = traits_type :: to_char_type ( __c );
       if ( __testeof || _M_convert_to_external ( & __conv, 1 ) )
  {
    _M_writing = true;
    __ret = traits_type :: not_eof ( __c );
  }
     }
 }
      return __ret;
    }
# 461 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    bool
    basic_filebuf < _CharT, _Traits > ::
    _M_convert_to_external ( _CharT * __ibuf, streamsize __ilen )
    {

      streamsize __elen;
      streamsize __plen;
      if ( __check_facet ( _M_codecvt ) . always_noconv ( ) )
 {
   __elen = _M_file . xsputn ( reinterpret_cast < char * > ( __ibuf ), __ilen );
   __plen = __ilen;
 }
      else
 {


   streamsize __blen = __ilen * _M_codecvt -> max_length ( );
   char * __buf = static_cast < char * > ( __builtin_alloca ( __blen ) );

   char * __bend;
   const char_type * __iend;
   codecvt_base :: result __r;
   __r = _M_codecvt -> out ( _M_state_cur, __ibuf, __ibuf + __ilen,
    __iend, __buf, __buf + __blen, __bend );

   if ( __r == codecvt_base :: ok || __r == codecvt_base :: partial )
     __blen = __bend - __buf;
   else if ( __r == codecvt_base :: noconv )
     {

       __buf = reinterpret_cast < char * > ( __ibuf );
       __blen = __ilen;
     }
   else
     __throw_ios_failure ( ( "basic_filebuf::_M_convert_to_external conversion error" ) );


   __elen = _M_file . xsputn ( __buf, __blen );
   __plen = __blen;


   if ( __r == codecvt_base :: partial && __elen == __plen )
     {
       const char_type * __iresume = __iend;
       streamsize __rlen = this -> pptr ( ) - __iend;
       __r = _M_codecvt -> out ( _M_state_cur, __iresume,
        __iresume + __rlen, __iend, __buf,
        __buf + __blen, __bend );
       if ( __r != codecvt_base :: error )
  {
    __rlen = __bend - __buf;
    __elen = _M_file . xsputn ( __buf, __rlen );
    __plen = __rlen;
  }
       else
  __throw_ios_failure ( ( "basic_filebuf::_M_convert_to_external conversion error" ) );

     }
 }
      return __elen == __plen;
    }
# 524 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
     streamsize
     basic_filebuf < _CharT, _Traits > ::
     xsgetn ( _CharT * __s, streamsize __n )
     {

       streamsize __ret = 0;
       if ( _M_pback_init )
  {
    if ( __n > 0 && this -> gptr ( ) == this -> eback ( ) )
      {
        * __s ++ = * this -> gptr ( );
        this -> gbump ( 1 );
        __ret = 1;
        -- __n;
      }
    _M_destroy_pback ( );
  }




       const bool __testin = _M_mode & ios_base :: in;
       const streamsize __buflen = _M_buf_size > 1 ? _M_buf_size - 1 : 1;

       if ( __n > __buflen && __check_facet ( _M_codecvt ) . always_noconv ( )
    && __testin && ! _M_writing )
  {

    const streamsize __avail = this -> egptr ( ) - this -> gptr ( );
    if ( __avail != 0 )
      {
        if ( __avail == 1 )
   * __s = * this -> gptr ( );
        else
   traits_type :: copy ( __s, this -> gptr ( ), __avail );
        __s += __avail;
        this -> gbump ( __avail );
        __ret += __avail;
        __n -= __avail;
      }



    streamsize __len;
    for (;; )
      {
        __len = _M_file . xsgetn ( reinterpret_cast < char * > ( __s ),
          __n );
        if ( __len == - 1 )
   __throw_ios_failure ( ( "basic_filebuf::xsgetn error reading the file" ) );

        if ( __len == 0 )
   break;

        __n -= __len;
        __ret += __len;
        if ( __n == 0 )
   break;

        __s += __len;
      }

    if ( __n == 0 )
      {
        _M_set_buffer ( 0 );
        _M_reading = true;
      }
    else if ( __len == 0 )
      {



        _M_set_buffer ( - 1 );
        _M_reading = false;
      }
  }
       else
  __ret += __streambuf_type :: xsgetn ( __s, __n );

       return __ret;
     }
# 607 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
     streamsize
     basic_filebuf < _CharT, _Traits > ::
     xsputn ( const _CharT * __s, streamsize __n )
     {



       streamsize __ret = 0;
       const bool __testout = _M_mode & ios_base :: out;
       if ( __check_facet ( _M_codecvt ) . always_noconv ( )
    && __testout && ! _M_reading )
 {

   const streamsize __chunk = 1UL << 10;
   streamsize __bufavail = this -> epptr ( ) - this -> pptr ( );


   if ( ! _M_writing && _M_buf_size > 1 )
     __bufavail = _M_buf_size - 1;

   const streamsize __limit = std :: min ( __chunk, __bufavail );
   if ( __n >= __limit )
     {
       const streamsize __buffill = this -> pptr ( ) - this -> pbase ( );
       const char * __buf = reinterpret_cast < const char * > ( this -> pbase ( ) );
       __ret = _M_file . xsputn_2 ( __buf, __buffill,
           reinterpret_cast < const char * > ( __s ),
           __n );
       if ( __ret == __buffill + __n )
  {
    _M_set_buffer ( 0 );
    _M_writing = true;
  }
       if ( __ret > __buffill )
  __ret -= __buffill;
       else
  __ret = 0;
     }
   else
     __ret = __streambuf_type :: xsputn ( __s, __n );
 }
       else
  __ret = __streambuf_type :: xsputn ( __s, __n );
       return __ret;
    }
# 654 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: __streambuf_type *
    basic_filebuf < _CharT, _Traits > ::
    setbuf ( char_type * __s, streamsize __n )
    {
      if ( ! this -> is_open ( ) )
 {
   if ( __s == 0 && __n == 0 )
     _M_buf_size = 1;
   else if ( __s && __n > 0 )
     {

       _M_buf = __s;
       _M_buf_size = __n;
     }
 }
      return this;
    }
# 683 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: pos_type
    basic_filebuf < _CharT, _Traits > ::
    seekoff ( off_type __off, ios_base :: seekdir __way, ios_base :: openmode )
    {
      int __width = 0;
      if ( _M_codecvt )
 __width = _M_codecvt -> encoding ( );
      if ( __width < 0 )
 __width = 0;

      pos_type __ret = pos_type ( off_type ( - 1 ) );
      const bool __testfail = __off != 0 && __width <= 0;
      if ( this -> is_open ( ) && ! __testfail )
 {

   _M_destroy_pback ( );






   __state_type __state = _M_state_beg;
   off_type __computed_off = __off * __width;
   if ( _M_reading && __way == ios_base :: cur )
     {
       if ( _M_codecvt -> always_noconv ( ) )
  __computed_off += this -> gptr ( ) - this -> egptr ( );
       else
  {



    const int __gptr_off =
      _M_codecvt -> length ( _M_state_last, _M_ext_buf, _M_ext_next,
           this -> gptr ( ) - this -> eback ( ) );
    __computed_off += _M_ext_buf + __gptr_off - _M_ext_end;



    __state = _M_state_last;
  }
     }
   __ret = _M_seek ( __computed_off, __way, __state );
 }
      return __ret;
    }
# 736 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: pos_type
    basic_filebuf < _CharT, _Traits > ::
    seekpos ( pos_type __pos, ios_base :: openmode )
    {
      pos_type __ret = pos_type ( off_type ( - 1 ) );
      if ( this -> is_open ( ) )
 {

   _M_destroy_pback ( );
   __ret = _M_seek ( off_type ( __pos ), ios_base :: beg, __pos . state ( ) );
 }
      return __ret;
    }
# 751 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: pos_type
    basic_filebuf < _CharT, _Traits > ::
    _M_seek ( off_type __off, ios_base :: seekdir __way, __state_type __state )
    {
      pos_type __ret = pos_type ( off_type ( - 1 ) );
      if ( _M_terminate_output ( ) )
 {

   __ret = pos_type ( _M_file . seekoff ( __off, __way ) );
   if ( __ret != pos_type ( off_type ( - 1 ) ) )
     {
       _M_reading = false;
       _M_writing = false;
       _M_ext_next = _M_ext_end = _M_ext_buf;
       _M_set_buffer ( - 1 );
       _M_state_cur = __state;
       __ret . state ( _M_state_cur );
     }
 }
      return __ret;
    }
# 774 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    bool
    basic_filebuf < _CharT, _Traits > ::
    _M_terminate_output ( )
    {

      bool __testvalid = true;
      if ( this -> pbase ( ) < this -> pptr ( ) )
 {
   const int_type __tmp = this -> overflow ( );
   if ( traits_type :: eq_int_type ( __tmp, traits_type :: eof ( ) ) )
     __testvalid = false;
 }


      if ( _M_writing && ! __check_facet ( _M_codecvt ) . always_noconv ( )
   && __testvalid )
 {



   const size_t __blen = 128;
   char __buf [ __blen ];
   codecvt_base :: result __r;
   streamsize __ilen = 0;

   do
     {
       char * __next;
       __r = _M_codecvt -> unshift ( _M_state_cur, __buf,
     __buf + __blen, __next );
       if ( __r == codecvt_base :: error )
  __testvalid = false;
       else if ( __r == codecvt_base :: ok ||
         __r == codecvt_base :: partial )
  {
    __ilen = __next - __buf;
    if ( __ilen > 0 )
      {
        const streamsize __elen = _M_file . xsputn ( __buf, __ilen );
        if ( __elen != __ilen )
   __testvalid = false;
      }
  }
     }
   while ( __r == codecvt_base :: partial && __ilen > 0 && __testvalid );

   if ( __testvalid )
     {




       const int_type __tmp = this -> overflow ( );
       if ( traits_type :: eq_int_type ( __tmp, traits_type :: eof ( ) ) )
  __testvalid = false;
     }
 }
      return __testvalid;
    }
# 835 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    int
    basic_filebuf < _CharT, _Traits > ::
    sync ( )
    {


      int __ret = 0;
      if ( this -> pbase ( ) < this -> pptr ( ) )
 {
   const int_type __tmp = this -> overflow ( );
   if ( traits_type :: eq_int_type ( __tmp, traits_type :: eof ( ) ) )
     __ret = - 1;
 }
      return __ret;
    }
# 852 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_filebuf < _CharT, _Traits > ::
    imbue ( const locale & __loc )
    {
      bool __testvalid = true;

      const __codecvt_type * _M_codecvt_tmp = 0;
      if ( __builtin_expect ( has_facet < __codecvt_type > ( __loc ), true ) )
 _M_codecvt_tmp = & use_facet < __codecvt_type > ( __loc );

      if ( this -> is_open ( ) )
 {

   if ( ( _M_reading || _M_writing )
       && __check_facet ( _M_codecvt ) . encoding ( ) == - 1 )
     __testvalid = false;
   else
     {
       if ( _M_reading )
  {
    if ( __check_facet ( _M_codecvt ) . always_noconv ( ) )
      {
        if ( _M_codecvt_tmp
     && ! __check_facet ( _M_codecvt_tmp ) . always_noconv ( ) )
   __testvalid = this -> seekoff ( 0, ios_base :: cur, _M_mode )
                 != pos_type ( off_type ( - 1 ) );
      }
    else
      {

        _M_ext_next = _M_ext_buf
   + _M_codecvt -> length ( _M_state_last, _M_ext_buf, _M_ext_next,
          this -> gptr ( ) - this -> eback ( ) );
        const streamsize __remainder = _M_ext_end - _M_ext_next;
        if ( __remainder )
   __builtin_memmove ( _M_ext_buf, _M_ext_next, __remainder );

        _M_ext_next = _M_ext_buf;
        _M_ext_end = _M_ext_buf + __remainder;
        _M_set_buffer ( - 1 );
        _M_state_last = _M_state_cur = _M_state_beg;
      }
  }
       else if ( _M_writing && ( __testvalid = _M_terminate_output ( ) ) )
  _M_set_buffer ( - 1 );
     }
 }

      if ( __testvalid )
 _M_codecvt = _M_codecvt_tmp;
      else
 _M_codecvt = 0;
    }
# 911 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_filebuf< char, char_traits< char> > ;
# 912 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_ifstream< char, char_traits< char> > ;
# 913 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_ofstream< char, char_traits< char> > ;
# 914 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_fstream< char, char_traits< char> > ;
# 917 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_filebuf< wchar_t, char_traits< wchar_t> > ;
# 918 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_ifstream< wchar_t, char_traits< wchar_t> > ;
# 919 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_ofstream< wchar_t, char_traits< wchar_t> > ;
# 920 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_fstream< wchar_t, char_traits< wchar_t> > ;
# 924 "/usr/include/c++/4.4/bits/fstream.tcc" 3
}
# 7 "txInterpTest.cu"
using namespace std;
# 57 "/usr/include/sys/time.h" 3
extern "C" { struct timezone {
# 59 "/usr/include/sys/time.h" 3
int tz_minuteswest;
# 60 "/usr/include/sys/time.h" 3
int tz_dsttime;
# 61 "/usr/include/sys/time.h" 3
}; }
# 63 "/usr/include/sys/time.h" 3
extern "C" { typedef struct timezone *__restrict__ __timezone_ptr_t; }
# 73 "/usr/include/sys/time.h" 3
extern "C" int gettimeofday(timeval *__restrict__ , __timezone_ptr_t ) throw()
# 74 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 79 "/usr/include/sys/time.h" 3
extern "C" int settimeofday(const timeval * , const struct timezone * ) throw()
# 81 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 87 "/usr/include/sys/time.h" 3
extern "C" int adjtime(const timeval * , timeval * ) throw();
# 93 "/usr/include/sys/time.h" 3
enum __itimer_which {
# 96 "/usr/include/sys/time.h" 3
ITIMER_REAL,
# 99 "/usr/include/sys/time.h" 3
ITIMER_VIRTUAL,
# 103 "/usr/include/sys/time.h" 3
ITIMER_PROF
# 105 "/usr/include/sys/time.h" 3
};
# 109 "/usr/include/sys/time.h" 3
extern "C" { struct itimerval {
# 112 "/usr/include/sys/time.h" 3
timeval it_interval;
# 114 "/usr/include/sys/time.h" 3
timeval it_value;
# 115 "/usr/include/sys/time.h" 3
}; }
# 122 "/usr/include/sys/time.h" 3
extern "C" { typedef int __itimer_which_t; }
# 127 "/usr/include/sys/time.h" 3
extern "C" int getitimer(__itimer_which_t , itimerval * ) throw();
# 133 "/usr/include/sys/time.h" 3
extern "C" int setitimer(__itimer_which_t , const itimerval *__restrict__ , itimerval *__restrict__ ) throw();
# 140 "/usr/include/sys/time.h" 3
extern "C" int utimes(const char * , const timeval [2]) throw()
# 141 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 145 "/usr/include/sys/time.h" 3
extern "C" int lutimes(const char * , const timeval [2]) throw()
# 146 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 149 "/usr/include/sys/time.h" 3
extern "C" int futimes(int , const timeval [2]) throw();
# 156 "/usr/include/sys/time.h" 3
extern "C" int futimesat(int , const char * , const timeval [2]) throw();
# 64 "txInterpTest.cu"
__attribute__((unused)) inline int ImageFcn(float x, float y) {int volatile ___ = 1;(void)x;(void)y;
# 78 "txInterpTest.cu"
exit(___);}
# 80 "txInterpTest.cu"
__attribute__((unused)) inline int ImageFcn(int x, int y) {int volatile ___ = 1;(void)x;(void)y;
# 96 "txInterpTest.cu"
exit(___);}
# 98 "txInterpTest.cu"
__attribute__((unused)) inline float PoisProf(float x) {int volatile ___ = 1;(void)x;
# 103 "txInterpTest.cu"
exit(___);}
# 107 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f0A;
# 108 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f1A;
# 109 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f2A;
# 110 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f3A;
# 111 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f4A;
# 112 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f5A;
# 113 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f6A;
# 114 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f7A;
# 115 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f8A;
# 117 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f0B;
# 118 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f1B;
# 119 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f2B;
# 120 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f3B;
# 121 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f4B;
# 122 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f5B;
# 123 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f6B;
# 124 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f7B;
# 125 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f8B;
# 127 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f0C;
# 128 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f1C;
# 129 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f2C;
# 130 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f3C;
# 131 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f4C;
# 132 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f5C;
# 133 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f6C;
# 134 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f7C;
# 135 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f8C;
# 137 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f0D;
# 138 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f1D;
# 139 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f2D;
# 140 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f3D;
# 141 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f4D;
# 142 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f5D;
# 143 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f6D;
# 144 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f7D;
# 145 "txInterpTest.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f8D;
# 149 "txInterpTest.cu"
int timeval_subtract(double *result, timeval *x, timeval *y)
# 150 "txInterpTest.cu"
{
# 151 "txInterpTest.cu"
timeval result0;
# 154 "txInterpTest.cu"
if ((x->tv_usec) < (y->tv_usec)) {
# 155 "txInterpTest.cu"
int nsec = ((((y->tv_usec) - (x->tv_usec)) / (1000000)) + (1));
# 156 "txInterpTest.cu"
(y->tv_usec) -= (1000000 * nsec);
# 157 "txInterpTest.cu"
(y->tv_sec) += nsec;
# 158 "txInterpTest.cu"
}
# 159 "txInterpTest.cu"
if (((x->tv_usec) - (y->tv_usec)) > (1000000)) {
# 160 "txInterpTest.cu"
int nsec = (((y->tv_usec) - (x->tv_usec)) / (1000000));
# 161 "txInterpTest.cu"
(y->tv_usec) += (1000000 * nsec);
# 162 "txInterpTest.cu"
(y->tv_sec) -= nsec;
# 163 "txInterpTest.cu"
}
# 167 "txInterpTest.cu"
(result0.tv_sec) = ((x->tv_sec) - (y->tv_sec));
# 168 "txInterpTest.cu"
(result0.tv_usec) = ((x->tv_usec) - (y->tv_usec));
# 169 "txInterpTest.cu"
(*result) = ((((double)(result0.tv_usec)) / (1000000.0)) + ((double)(result0.tv_sec)));
# 172 "txInterpTest.cu"
return (x->tv_sec) < (y->tv_sec);
# 173 "txInterpTest.cu"
}
# 175 "txInterpTest.cu"
__attribute__((unused)) inline void bgk_collide(float &f0, float &f1, float &f2, float &
# 176 "txInterpTest.cu"
f3, float &f4, float &f5, float &
# 177 "txInterpTest.cu"
f6, float &f7, float &f8, float omega)
# 178 "txInterpTest.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)omega;
# 193 "txInterpTest.cu"
exit(___);}
# 195 "txInterpTest.cu"
__attribute__((unused)) void mrt_collide(float &f0, float &f1, float &f2, float &
# 196 "txInterpTest.cu"
f3, float &f4, float &f5, float &
# 197 "txInterpTest.cu"
f6, float &f7, float &f8, float omega)
# 198 "txInterpTest.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)omega;
# 241 "txInterpTest.cu"
exit(___);}
# 243 "txInterpTest.cu"
__attribute__((unused)) void NeumannEast(float &f0, float &f1, float &f2, float &
# 244 "txInterpTest.cu"
f3, float &f4, float &f5, float &
# 245 "txInterpTest.cu"
f6, float &f7, float &f8, int y)
# 246 "txInterpTest.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)y;
# 265 "txInterpTest.cu"
exit(___);}
# 266 "txInterpTest.cu"
__attribute__((unused)) void DirichletWest(float &f0, float &f1, float &f2, float &
# 267 "txInterpTest.cu"
f3, float &f4, float &f5, float &
# 268 "txInterpTest.cu"
f6, float &f7, float &f8, int y)
# 269 "txInterpTest.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)y;
# 286 "txInterpTest.cu"
exit(___);}
# 291 "txInterpTest.cu"
__attribute__((unused)) void boundaries(float &f0, float &f1, float &f2, float &
# 292 "txInterpTest.cu"
f3, float &f4, float &f5, float &
# 293 "txInterpTest.cu"
f6, float &f7, float &f8, int
# 294 "txInterpTest.cu"
y, int im)
# 295 "txInterpTest.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)y;(void)im;
# 316 "txInterpTest.cu"
exit(___);}
# 319 "txInterpTest.cu"
__attribute__((unused)) void boundaries_force(float &f0, float &f1, float &f2, float &
# 320 "txInterpTest.cu"
f3, float &f4, float &f5, float &
# 321 "txInterpTest.cu"
f6, float &f7, float &f8, int
# 322 "txInterpTest.cu"
y, int im)
# 323 "txInterpTest.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)y;(void)im;
# 344 "txInterpTest.cu"
exit(___);}
# 347 "txInterpTest.cu"
__attribute__((unused)) inline int f_mem(int f_num, int x, int y, size_t pitch)
# 348 "txInterpTest.cu"
{int volatile ___ = 1;(void)f_num;(void)x;(void)y;(void)pitch;
# 351 "txInterpTest.cu"
exit(___);}
# 353 "txInterpTest.cu"
__attribute__((unused)) inline int f_memLR(int f_num, int x, int y, size_t pitch)
# 354 "txInterpTest.cu"
{int volatile ___ = 1;(void)f_num;(void)x;(void)y;(void)pitch;
# 357 "txInterpTest.cu"
exit(___);}
# 359 "txInterpTest.cu"
__attribute__((unused)) int dmin(int a, int b)
# 360 "txInterpTest.cu"
{int volatile ___ = 1;(void)a;(void)b;
# 363 "txInterpTest.cu"
exit(___);}
# 364 "txInterpTest.cu"
__attribute__((unused)) int dmax(int a)
# 365 "txInterpTest.cu"
{int volatile ___ = 1;(void)a;
# 368 "txInterpTest.cu"
exit(___);}
# 370 "txInterpTest.cu"
void simple_copy(float *fA, float *fB, int *
# 371 "txInterpTest.cu"
image, float omega, size_t pitch) ;
# 381 "txInterpTest.cu"
void ExtractFromC_d(float *fout, size_t
# 382 "txInterpTest.cu"
pitch, float SF) ;
# 449 "txInterpTest.cu"
void LR_d_hybABCD_force(float *fin, float *fout, float
# 450 "txInterpTest.cu"
omega, size_t pitch, float *FX, float *FY, int t) ;
# 543 "txInterpTest.cu"
void LR_d_hybBACD_force(float *fin, float *fout, float
# 544 "txInterpTest.cu"
omega, size_t pitch, float *FX, float *FY, int t) ;
# 638 "txInterpTest.cu"
void LR_d_hybABCD(float *fin, float *fout, float
# 639 "txInterpTest.cu"
omega, size_t pitch) ;
# 693 "txInterpTest.cu"
void LR_d_hybABCD2(float *fin, float *fout, float
# 694 "txInterpTest.cu"
omega, size_t pitch, int n) ;
# 751 "txInterpTest.cu"
void LR_d_hybABDC2(float *fin, float *fout, float
# 752 "txInterpTest.cu"
omega, size_t pitch, float SF, int n) ;
# 805 "txInterpTest.cu"
void LR_d_ABDC2(float *fin, float *fout, float
# 806 "txInterpTest.cu"
omega, size_t pitch, float SF) ;
# 860 "txInterpTest.cu"
void LR_d_ABDC_Interp(float *fin, float *fout, float
# 861 "txInterpTest.cu"
omega, size_t pitch, float SF) ;
# 943 "txInterpTest.cu"
void LR_d_hybABDC_Interp(float *fin, float *fout, float
# 944 "txInterpTest.cu"
omega, size_t pitch, float SF) ;
# 1025 "txInterpTest.cu"
void LR_d_hybBACD(float *fin, float *fout, float
# 1026 "txInterpTest.cu"
omega, size_t pitch) ;
# 1077 "txInterpTest.cu"
void LR_d_hybBACD2(float *fin, float *fout, float
# 1078 "txInterpTest.cu"
omega, size_t pitch, int n) ;
# 1129 "txInterpTest.cu"
void LR_d_BACD2(float *fin, float *fout, float
# 1130 "txInterpTest.cu"
omega, size_t pitch) ;
# 1182 "txInterpTest.cu"
void LR_d_hybBADC(float *fin, float *fout, float
# 1183 "txInterpTest.cu"
omega, size_t pitch, float SF) ;
# 1235 "txInterpTest.cu"
void LR_d_hybBADC2(float *fin, float *fout, float
# 1236 "txInterpTest.cu"
omega, size_t pitch, float SF, int n) ;
# 1288 "txInterpTest.cu"
void LR_d_BADC2(float *fin, float *fout, float
# 1289 "txInterpTest.cu"
omega, size_t pitch, float SF) ;
# 1342 "txInterpTest.cu"
void LR_d_hybBADC_Interp(float *fin, float *fout, float
# 1343 "txInterpTest.cu"
omega, size_t pitch, float SF) ;
# 1423 "txInterpTest.cu"
void LR_d_ABCD(float *fin, float *fout, float
# 1424 "txInterpTest.cu"
omega, size_t pitch) ;
# 1474 "txInterpTest.cu"
void LR_d_ABCD2(float *fin, float *fout, float
# 1475 "txInterpTest.cu"
omega, size_t pitch) ;
# 1526 "txInterpTest.cu"
void LR_d_ABDC(float *fin, float *fout, float
# 1527 "txInterpTest.cu"
omega, size_t pitch, float SF) ;
# 1624 "txInterpTest.cu"
void LR_d_BACD(float *fin, float *fout, float
# 1625 "txInterpTest.cu"
omega, size_t pitch) ;
# 1676 "txInterpTest.cu"
void LR_d_BADC_Interp(float *fin, float *fout, float
# 1677 "txInterpTest.cu"
omega, size_t pitch, float SF) ;
# 1774 "txInterpTest.cu"
void mrt_d_single(float *fA, float *fB, float
# 1775 "txInterpTest.cu"
omega, size_t pitch) ;
# 1839 "txInterpTest.cu"
void mrt_d_single_force(float *fA, float *fB, float
# 1840 "txInterpTest.cu"
omega, size_t pitch, float *FX, float *FY, int t) ;
# 1936 "txInterpTest.cu"
void mrt_d_hybAB_force(float *fin, float *fout, float
# 1937 "txInterpTest.cu"
omega, size_t pitch, float *FX, float *FY, int t) ;
# 2054 "txInterpTest.cu"
void mrt_d_hybBA_force(float *fin, float *fout, float
# 2055 "txInterpTest.cu"
omega, size_t pitch, float *FX, float *FY, int t) ;
# 2172 "txInterpTest.cu"
void mrt_d_hybAB(float *fin, float *fout, float
# 2173 "txInterpTest.cu"
omega, size_t pitch) ;
# 2245 "txInterpTest.cu"
void mrt_d_hybBA(float *fin, float *fout, float
# 2246 "txInterpTest.cu"
omega, size_t pitch) ;
# 2316 "txInterpTest.cu"
void mrt_d_textAB(float *fin, float *fout, float
# 2317 "txInterpTest.cu"
omega, size_t pitch) ;
# 2371 "txInterpTest.cu"
void mrt_d_textBA(float *fin, float *fout, float
# 2372 "txInterpTest.cu"
omega, size_t pitch) ;
# 2428 "txInterpTest.cu"
void mrt_d_LR(float *fA, float *fB, float
# 2429 "txInterpTest.cu"
omega, size_t pitch, float SF) ;
# 2493 "txInterpTest.cu"
void initialize_single(float *f, size_t pitch) ;
# 2518 "txInterpTest.cu"
void initialize_LR(float *f, size_t pitch) ;
# 2542 "txInterpTest.cu"
int main(int argc, char *argv[])
# 2543 "txInterpTest.cu"
{
# 2547 "txInterpTest.cu"
std::ofstream output;
# 2548 "txInterpTest.cu"
std::ofstream output2;
# 2549 "txInterpTest.cu"
std::string FileName = "test";
# 2550 "txInterpTest.cu"
output.open((FileName + (".dat")).c_str());
# 2551 "txInterpTest.cu"
output2.open((FileName + (".force")).c_str());
# 2553 "txInterpTest.cu"
size_t memsize, memsize2;
# 2554 "txInterpTest.cu"
size_t pitch = (0);
# 2555 "txInterpTest.cu"
size_t pitch2 = (0);
# 2556 "txInterpTest.cu"
int i, n, nBlocks, nBlocks2, n2;
# 2557 "txInterpTest.cu"
float omega, CharLength, omega2;
# 2559 "txInterpTest.cu"
if (abs((0.25F) - ((1.0F) / (4))) > (0.001000000047F)) {
# 2560 "txInterpTest.cu"
(((cout << ("LRLEVEL and LRFACTOR don\'t match! Exiting..."))) << (std::endl));
# 2561 "txInterpTest.cu"
return 0;
# 2562 "txInterpTest.cu"
}
# 2564 "txInterpTest.cu"
CharLength = ((8.0F) * (2.0F));
# 2566 "txInterpTest.cu"
omega = ((1.0F) / (((3.0F) * (((0.07999999821F) * CharLength) / (100.0F))) + (0.5F)));
# 2567 "txInterpTest.cu"
omega2 = ((2.0F) / ((1.0F) + ((2.0F) * (((2.0F) / omega) - (1.0F)))));
# 2568 "txInterpTest.cu"
if ((0.25F) == (0.25F)) {
# 2569 "txInterpTest.cu"
omega2 = ((2.0F) / ((1.0F) + ((2.0F) * (((2.0F) / omega2) - (1.0F)))));
# 2570 "txInterpTest.cu"
} else {
# 2571 "txInterpTest.cu"
if ((0.25F) == (0.125F)) {
# 2572 "txInterpTest.cu"
omega2 = ((2.0F) / ((1.0F) + ((2.0F) * (((2.0F) / omega2) - (1.0F)))));
# 2573 "txInterpTest.cu"
omega2 = ((2.0F) / ((1.0F) + ((2.0F) * (((2.0F) / omega2) - (1.0F)))));
# 2574 "txInterpTest.cu"
} else {
# 2575 "txInterpTest.cu"
if (((0.25F)) == (0.0625)) {
# 2576 "txInterpTest.cu"
omega2 = ((2.0F) / ((1.0F) + ((2.0F) * (((2.0F) / omega2) - (1.0F)))));
# 2577 "txInterpTest.cu"
omega2 = ((2.0F) / ((1.0F) + ((2.0F) * (((2.0F) / omega2) - (1.0F)))));
# 2578 "txInterpTest.cu"
omega2 = ((2.0F) / ((1.0F) + ((2.0F) * (((2.0F) / omega2) - (1.0F)))));
# 2579 "txInterpTest.cu"
} } }
# 2580 "txInterpTest.cu"
float SF_cf = ((omega * ((1.0F) - omega2)) / ((((1.0F) - omega) * omega2) / (0.25F)));
# 2581 "txInterpTest.cu"
float SF_fc = ((1.0F) / SF_cf);
# 2586 "txInterpTest.cu"
(((((cout << ("omega:  "))) << omega)) << (std::endl));
# 2587 "txInterpTest.cu"
(((((cout << ("omega2: "))) << omega2)) << (std::endl));
# 2588 "txInterpTest.cu"
(((((((((cout << ("blocksize: "))) << (128))) << ("x"))) << (1))) << (std::endl));
# 2589 "txInterpTest.cu"
(((((((((cout << ("grid: "))) << (1024))) << ("x"))) << (768))) << (std::endl));
# 2590 "txInterpTest.cu"
(((((((((cout << ("LRblocksize: "))) << (64))) << ("x"))) << (1))) << (std::endl));
# 2591 "txInterpTest.cu"
(((((((((cout << ("LRgrid: "))) << (768))) << ("x"))) << (512))) << (std::endl));
# 2592 "txInterpTest.cu"
(((((cout << ("TMAX: "))) << (1000))) << (std::endl));
# 2593 "txInterpTest.cu"
(((((cout << ("Method: "))) << ("SINGLE"))) << (std::endl));
# 2594 "txInterpTest.cu"
(((((cout << ("Model: "))) << ("BGK"))) << (std::endl));
# 2596 "txInterpTest.cu"
nBlocks = ((((1024 + 128) - 1) / 128) * ((768 / 1) + (768 % 1)));
# 2597 "txInterpTest.cu"
nBlocks2 = (((768 / 64) + (768 % 64)) * ((512 / 1) + (512 % 1)));
# 2598 "txInterpTest.cu"
int B = (128 * 1);
# 2599 "txInterpTest.cu"
int B2 = (64 * 1);
# 2600 "txInterpTest.cu"
n = (nBlocks * B);
# 2601 "txInterpTest.cu"
n2 = (nBlocks2 * B2);
# 2602 "txInterpTest.cu"
(((((cout << ("nBlocks:"))) << nBlocks)) << (std::endl));
# 2604 "txInterpTest.cu"
dim3 threads(128, 1);
# 2606 "txInterpTest.cu"
dim3 grid(((1024 + 128) - 1) / 128, (768 / 1) + (768 % 1));
# 2608 "txInterpTest.cu"
dim3 threads2(64, 1);
# 2610 "txInterpTest.cu"
dim3 grid2((768 / 64) + (768 % 64), (512 / 1) + (512 % 1));
# 2612 "txInterpTest.cu"
memsize = (n * sizeof(float));
# 2614 "txInterpTest.cu"
memsize2 = (n2 * sizeof(float));
# 2620 "txInterpTest.cu"
float *fA_h, *fA_d, *fB_d, *fC_h, *fC_d, *fD_d;
# 2621 "txInterpTest.cu"
float *FX_h, *FY_h, *FX_d, *FY_d;
# 2622 "txInterpTest.cu"
fA_h = ((float *)malloc(memsize * (9)));
# 2623 "txInterpTest.cu"
fC_h = ((float *)malloc(memsize2 * (9)));
# 2624 "txInterpTest.cu"
FX_h = ((float *)malloc((1000) * sizeof(float)));
# 2625 "txInterpTest.cu"
FY_h = ((float *)malloc((1000) * sizeof(float)));
# 2626 "txInterpTest.cu"
cudaMallocPitch((void **)(&fA_d), &pitch, (1024) * sizeof(float), 768 * 9);
# 2627 "txInterpTest.cu"
cudaMallocPitch((void **)(&fB_d), &pitch, (1024) * sizeof(float), 768 * 9);
# 2632 "txInterpTest.cu"
if (("YES") == ("YES")) {
# 2633 "txInterpTest.cu"
cudaMallocPitch((void **)(&fC_d), &pitch2, (768) * sizeof(float), 512 * 9);
# 2634 "txInterpTest.cu"
cudaMallocPitch((void **)(&fD_d), &pitch2, (768) * sizeof(float), 512 * 9);
# 2635 "txInterpTest.cu"
}
# 2637 "txInterpTest.cu"
cudaMalloc((void **)(&FX_d), (1000) * sizeof(float));
# 2638 "txInterpTest.cu"
cudaMalloc((void **)(&FY_d), (1000) * sizeof(float));
# 2642 "txInterpTest.cu"
(((((((cout << pitch)) << (", "))) << pitch2)) << (std::endl));
# 2644 "txInterpTest.cu"
size_t pitch_elements = (pitch / sizeof(float));
# 2645 "txInterpTest.cu"
size_t pitch_elements2 = (pitch2 / sizeof(float));
# 2647 "txInterpTest.cu"
cudaChannelFormatDesc desc = cudaCreateChannelDesc< float> ();
# 2648 "txInterpTest.cu"
for (i = 0; i < (n * 9); i++) {
# 2649 "txInterpTest.cu"
(fA_h[i]) = i; }
# 2650 "txInterpTest.cu"
for (i = 0; i < (n2 * 9); i++) {
# 2651 "txInterpTest.cu"
(fC_h[i]) = (0); }
# 2652 "txInterpTest.cu"
for (i = 0; i < 1000; i++) {
# 2653 "txInterpTest.cu"
(FX_h[i]) = (0.0F);
# 2654 "txInterpTest.cu"
(FY_h[i]) = (0.0F);
# 2655 "txInterpTest.cu"
}
# 2656 "txInterpTest.cu"
cudaMemcpy(FX_d, FX_h, (1000) * sizeof(float), cudaMemcpyHostToDevice);
# 2657 "txInterpTest.cu"
cudaMemcpy(FY_d, FY_h, (1000) * sizeof(float), cudaMemcpyHostToDevice);
# 2673 "txInterpTest.cu"
if (true)
# 2674 "txInterpTest.cu"
{
# 2675 "txInterpTest.cu"
(texRef_f0B.normalized) = (false);
# 2676 "txInterpTest.cu"
(texRef_f1B.normalized) = (false);
# 2677 "txInterpTest.cu"
(texRef_f2B.normalized) = (false);
# 2678 "txInterpTest.cu"
(texRef_f3B.normalized) = (false);
# 2679 "txInterpTest.cu"
(texRef_f4B.normalized) = (false);
# 2680 "txInterpTest.cu"
(texRef_f5B.normalized) = (false);
# 2681 "txInterpTest.cu"
(texRef_f6B.normalized) = (false);
# 2682 "txInterpTest.cu"
(texRef_f7B.normalized) = (false);
# 2683 "txInterpTest.cu"
(texRef_f8B.normalized) = (false);
# 2685 "txInterpTest.cu"
(texRef_f0B.filterMode) = cudaFilterModeLinear;
# 2686 "txInterpTest.cu"
(texRef_f1B.filterMode) = cudaFilterModeLinear;
# 2687 "txInterpTest.cu"
(texRef_f2B.filterMode) = cudaFilterModeLinear;
# 2688 "txInterpTest.cu"
(texRef_f3B.filterMode) = cudaFilterModeLinear;
# 2689 "txInterpTest.cu"
(texRef_f4B.filterMode) = cudaFilterModeLinear;
# 2690 "txInterpTest.cu"
(texRef_f5B.filterMode) = cudaFilterModeLinear;
# 2691 "txInterpTest.cu"
(texRef_f6B.filterMode) = cudaFilterModeLinear;
# 2692 "txInterpTest.cu"
(texRef_f7B.filterMode) = cudaFilterModeLinear;
# 2693 "txInterpTest.cu"
(texRef_f8B.filterMode) = cudaFilterModeLinear;
# 2694 "txInterpTest.cu"
(texRef_f0A.normalized) = (false);
# 2695 "txInterpTest.cu"
(texRef_f1A.normalized) = (false);
# 2696 "txInterpTest.cu"
(texRef_f2A.normalized) = (false);
# 2697 "txInterpTest.cu"
(texRef_f3A.normalized) = (false);
# 2698 "txInterpTest.cu"
(texRef_f4A.normalized) = (false);
# 2699 "txInterpTest.cu"
(texRef_f5A.normalized) = (false);
# 2700 "txInterpTest.cu"
(texRef_f6A.normalized) = (false);
# 2701 "txInterpTest.cu"
(texRef_f7A.normalized) = (false);
# 2702 "txInterpTest.cu"
(texRef_f8A.normalized) = (false);
# 2703 "txInterpTest.cu"
(texRef_f0A.filterMode) = cudaFilterModeLinear;
# 2704 "txInterpTest.cu"
(texRef_f1A.filterMode) = cudaFilterModeLinear;
# 2705 "txInterpTest.cu"
(texRef_f2A.filterMode) = cudaFilterModeLinear;
# 2706 "txInterpTest.cu"
(texRef_f3A.filterMode) = cudaFilterModeLinear;
# 2707 "txInterpTest.cu"
(texRef_f4A.filterMode) = cudaFilterModeLinear;
# 2708 "txInterpTest.cu"
(texRef_f5A.filterMode) = cudaFilterModeLinear;
# 2709 "txInterpTest.cu"
(texRef_f6A.filterMode) = cudaFilterModeLinear;
# 2710 "txInterpTest.cu"
(texRef_f7A.filterMode) = cudaFilterModeLinear;
# 2711 "txInterpTest.cu"
(texRef_f8A.filterMode) = cudaFilterModeLinear;
# 2713 "txInterpTest.cu"
(texRef_f0C.normalized) = (false);
# 2714 "txInterpTest.cu"
(texRef_f1C.normalized) = (false);
# 2715 "txInterpTest.cu"
(texRef_f2C.normalized) = (false);
# 2716 "txInterpTest.cu"
(texRef_f3C.normalized) = (false);
# 2717 "txInterpTest.cu"
(texRef_f4C.normalized) = (false);
# 2718 "txInterpTest.cu"
(texRef_f5C.normalized) = (false);
# 2719 "txInterpTest.cu"
(texRef_f6C.normalized) = (false);
# 2720 "txInterpTest.cu"
(texRef_f7C.normalized) = (false);
# 2721 "txInterpTest.cu"
(texRef_f8C.normalized) = (false);
# 2723 "txInterpTest.cu"
(texRef_f0C.filterMode) = cudaFilterModeLinear;
# 2724 "txInterpTest.cu"
(texRef_f1C.filterMode) = cudaFilterModeLinear;
# 2725 "txInterpTest.cu"
(texRef_f2C.filterMode) = cudaFilterModeLinear;
# 2726 "txInterpTest.cu"
(texRef_f3C.filterMode) = cudaFilterModeLinear;
# 2727 "txInterpTest.cu"
(texRef_f4C.filterMode) = cudaFilterModeLinear;
# 2728 "txInterpTest.cu"
(texRef_f5C.filterMode) = cudaFilterModeLinear;
# 2729 "txInterpTest.cu"
(texRef_f6C.filterMode) = cudaFilterModeLinear;
# 2730 "txInterpTest.cu"
(texRef_f7C.filterMode) = cudaFilterModeLinear;
# 2731 "txInterpTest.cu"
(texRef_f8C.filterMode) = cudaFilterModeLinear;
# 2733 "txInterpTest.cu"
(texRef_f0D.normalized) = (false);
# 2734 "txInterpTest.cu"
(texRef_f1D.normalized) = (false);
# 2735 "txInterpTest.cu"
(texRef_f2D.normalized) = (false);
# 2736 "txInterpTest.cu"
(texRef_f3D.normalized) = (false);
# 2737 "txInterpTest.cu"
(texRef_f4D.normalized) = (false);
# 2738 "txInterpTest.cu"
(texRef_f5D.normalized) = (false);
# 2739 "txInterpTest.cu"
(texRef_f6D.normalized) = (false);
# 2740 "txInterpTest.cu"
(texRef_f7D.normalized) = (false);
# 2741 "txInterpTest.cu"
(texRef_f8D.normalized) = (false);
# 2743 "txInterpTest.cu"
(texRef_f0D.filterMode) = cudaFilterModeLinear;
# 2744 "txInterpTest.cu"
(texRef_f1D.filterMode) = cudaFilterModeLinear;
# 2745 "txInterpTest.cu"
(texRef_f2D.filterMode) = cudaFilterModeLinear;
# 2746 "txInterpTest.cu"
(texRef_f3D.filterMode) = cudaFilterModeLinear;
# 2747 "txInterpTest.cu"
(texRef_f4D.filterMode) = cudaFilterModeLinear;
# 2748 "txInterpTest.cu"
(texRef_f5D.filterMode) = cudaFilterModeLinear;
# 2749 "txInterpTest.cu"
(texRef_f6D.filterMode) = cudaFilterModeLinear;
# 2750 "txInterpTest.cu"
(texRef_f7D.filterMode) = cudaFilterModeLinear;
# 2751 "txInterpTest.cu"
(texRef_f8D.filterMode) = cudaFilterModeLinear;
# 2753 "txInterpTest.cu"
for (int i = 0; i < 2; i++) {
# 2754 "txInterpTest.cu"
((texRef_f0A.addressMode)[i]) = cudaAddressModeClamp;
# 2755 "txInterpTest.cu"
((texRef_f1A.addressMode)[i]) = cudaAddressModeClamp;
# 2756 "txInterpTest.cu"
((texRef_f2A.addressMode)[i]) = cudaAddressModeClamp;
# 2757 "txInterpTest.cu"
((texRef_f3A.addressMode)[i]) = cudaAddressModeClamp;
# 2758 "txInterpTest.cu"
((texRef_f4A.addressMode)[i]) = cudaAddressModeClamp;
# 2759 "txInterpTest.cu"
((texRef_f5A.addressMode)[i]) = cudaAddressModeClamp;
# 2760 "txInterpTest.cu"
((texRef_f6A.addressMode)[i]) = cudaAddressModeClamp;
# 2761 "txInterpTest.cu"
((texRef_f7A.addressMode)[i]) = cudaAddressModeClamp;
# 2762 "txInterpTest.cu"
((texRef_f8A.addressMode)[i]) = cudaAddressModeClamp;
# 2764 "txInterpTest.cu"
((texRef_f0B.addressMode)[i]) = cudaAddressModeClamp;
# 2765 "txInterpTest.cu"
((texRef_f1B.addressMode)[i]) = cudaAddressModeClamp;
# 2766 "txInterpTest.cu"
((texRef_f2B.addressMode)[i]) = cudaAddressModeClamp;
# 2767 "txInterpTest.cu"
((texRef_f3B.addressMode)[i]) = cudaAddressModeClamp;
# 2768 "txInterpTest.cu"
((texRef_f4B.addressMode)[i]) = cudaAddressModeClamp;
# 2769 "txInterpTest.cu"
((texRef_f5B.addressMode)[i]) = cudaAddressModeClamp;
# 2770 "txInterpTest.cu"
((texRef_f6B.addressMode)[i]) = cudaAddressModeClamp;
# 2771 "txInterpTest.cu"
((texRef_f7B.addressMode)[i]) = cudaAddressModeClamp;
# 2772 "txInterpTest.cu"
((texRef_f8B.addressMode)[i]) = cudaAddressModeClamp;
# 2773 "txInterpTest.cu"
}
# 2774 "txInterpTest.cu"
}
# 2776 "txInterpTest.cu"
cudaMemcpy2D(fA_d, pitch, fA_h, (1024) * sizeof(float), (1024) * sizeof(float), 768 * 9, cudaMemcpyHostToDevice);
# 2777 "txInterpTest.cu"
cudaMemcpy2D(fB_d, pitch, fA_h, (1024) * sizeof(float), (1024) * sizeof(float), 768 * 9, cudaMemcpyHostToDevice);
# 2778 "txInterpTest.cu"
if (("YES") == ("YES")) {
# 2779 "txInterpTest.cu"
cudaMemcpy2D(fC_d, pitch2, fC_h, (768) * sizeof(float), (768) * sizeof(float), 512 * 9, cudaMemcpyHostToDevice);
# 2780 "txInterpTest.cu"
cudaMemcpy2D(fD_d, pitch2, fC_h, (768) * sizeof(float), (768) * sizeof(float), 512 * 9, cudaMemcpyHostToDevice);
# 2781 "txInterpTest.cu"
}
# 2782 "txInterpTest.cu"
for (i = 0; i < (n * 9); i++) {
# 2783 "txInterpTest.cu"
(fA_h[i]) = (0); }
# 2784 "txInterpTest.cu"
for (i = 0; i < (n2 * 9); i++) {
# 2785 "txInterpTest.cu"
(fC_h[i]) = (0); }
# 2788 "txInterpTest.cu"
if (true)
# 2789 "txInterpTest.cu"
{
# 2790 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f0A, fA_d, &desc, 1024, 768, pitch);
# 2791 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f1A, fA_d + (pitch_elements * (768)), &desc, 1024, 768, pitch);
# 2792 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f2A, fA_d + ((pitch_elements * (768)) * (2)), &desc, 1024, 768, pitch);
# 2793 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f3A, fA_d + ((pitch_elements * (768)) * (3)), &desc, 1024, 768, pitch);
# 2794 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f4A, fA_d + ((pitch_elements * (768)) * (4)), &desc, 1024, 768, pitch);
# 2795 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f5A, fA_d + ((pitch_elements * (768)) * (5)), &desc, 1024, 768, pitch);
# 2796 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f6A, fA_d + ((pitch_elements * (768)) * (6)), &desc, 1024, 768, pitch);
# 2797 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f7A, fA_d + ((pitch_elements * (768)) * (7)), &desc, 1024, 768, pitch);
# 2798 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f8A, fA_d + ((pitch_elements * (768)) * (8)), &desc, 1024, 768, pitch);
# 2800 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f0B, fB_d, &desc, 1024, 768, pitch);
# 2801 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f1B, fB_d + (pitch_elements * (768)), &desc, 1024, 768, pitch);
# 2802 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f2B, fB_d + ((pitch_elements * (768)) * (2)), &desc, 1024, 768, pitch);
# 2803 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f3B, fB_d + ((pitch_elements * (768)) * (3)), &desc, 1024, 768, pitch);
# 2804 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f4B, fB_d + ((pitch_elements * (768)) * (4)), &desc, 1024, 768, pitch);
# 2805 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f5B, fB_d + ((pitch_elements * (768)) * (5)), &desc, 1024, 768, pitch);
# 2806 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f6B, fB_d + ((pitch_elements * (768)) * (6)), &desc, 1024, 768, pitch);
# 2807 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f7B, fB_d + ((pitch_elements * (768)) * (7)), &desc, 1024, 768, pitch);
# 2808 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f8B, fB_d + ((pitch_elements * (768)) * (8)), &desc, 1024, 768, pitch);
# 2810 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f0C, fC_d, &desc, 768, 512, pitch2);
# 2811 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f1C, fC_d + (pitch_elements2 * (512)), &desc, 768, 512, pitch2);
# 2812 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f2C, fC_d + ((pitch_elements2 * (512)) * (2)), &desc, 768, 512, pitch2);
# 2813 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f3C, fC_d + ((pitch_elements2 * (512)) * (3)), &desc, 768, 512, pitch2);
# 2814 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f4C, fC_d + ((pitch_elements2 * (512)) * (4)), &desc, 768, 512, pitch2);
# 2815 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f5C, fC_d + ((pitch_elements2 * (512)) * (5)), &desc, 768, 512, pitch2);
# 2816 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f6C, fC_d + ((pitch_elements2 * (512)) * (6)), &desc, 768, 512, pitch2);
# 2817 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f7C, fC_d + ((pitch_elements2 * (512)) * (7)), &desc, 768, 512, pitch2);
# 2818 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f8C, fC_d + ((pitch_elements2 * (512)) * (8)), &desc, 768, 512, pitch2);
# 2820 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f0D, fD_d, &desc, 768, 512, pitch2);
# 2821 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f1D, fD_d + (pitch_elements2 * (512)), &desc, 768, 512, pitch2);
# 2822 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f2D, fD_d + ((pitch_elements2 * (512)) * (2)), &desc, 768, 512, pitch2);
# 2823 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f3D, fD_d + ((pitch_elements2 * (512)) * (3)), &desc, 768, 512, pitch2);
# 2824 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f4D, fD_d + ((pitch_elements2 * (512)) * (4)), &desc, 768, 512, pitch2);
# 2825 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f5D, fD_d + ((pitch_elements2 * (512)) * (5)), &desc, 768, 512, pitch2);
# 2826 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f6D, fD_d + ((pitch_elements2 * (512)) * (6)), &desc, 768, 512, pitch2);
# 2827 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f7D, fD_d + ((pitch_elements2 * (512)) * (7)), &desc, 768, 512, pitch2);
# 2828 "txInterpTest.cu"
cudaBindTexture2D(0, &texRef_f8D, fD_d + ((pitch_elements2 * (512)) * (8)), &desc, 768, 512, pitch2);
# 2829 "txInterpTest.cu"
}
# 2833 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : initialize_single(fA_d, pitch_elements);
# 2834 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : initialize_single(fB_d, pitch_elements);
# 2836 "txInterpTest.cu"
if (("YES") == ("YES")) {
# 2837 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : initialize_LR(fC_d, pitch_elements2);
# 2838 "txInterpTest.cu"
}
# 2840 "txInterpTest.cu"
cudaFuncSetCacheConfig(mrt_d_single, cudaFuncCachePreferL1);
# 2842 "txInterpTest.cu"
timeval tdr0, tdr1;
# 2843 "txInterpTest.cu"
double restime;
# 2844 "txInterpTest.cu"
cudaDeviceSynchronize();
# 2845 "txInterpTest.cu"
gettimeofday(&tdr0, __null);
# 2846 "txInterpTest.cu"
for (int t = 0; t < 1000; t = (t + 2)) {
# 2847 "txInterpTest.cu"
if (("YES") == ("YES")) {
# 2848 "txInterpTest.cu"
if (("SINGLE") == ("SINGLE")) {
# 2849 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_single(fA_d, fB_d, omega, pitch_elements); } else {
# 2850 "txInterpTest.cu"
if (("SINGLE") == ("HYB")) {
# 2851 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_hybAB(fA_d, fB_d, omega, pitch_elements); } else {
# 2852 "txInterpTest.cu"
if (("SINGLE") == ("TEXT")) {
# 2853 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_textAB(fA_d, fB_d, omega, pitch_elements); } } }
# 2855 "txInterpTest.cu"
if (("SINGLE") == ("SINGLE")) {
# 2856 "txInterpTest.cu"
if ((0.25F) == (0.5F)) {
# 2857 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_ABCD(fC_d, fD_d, omega2, pitch_elements2);
# 2858 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_ABDC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 2859 "txInterpTest.cu"
} else {
# 2860 "txInterpTest.cu"
if ((0.25F) == (0.25F)) {
# 2861 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_ABCD(fC_d, fD_d, omega2, pitch_elements2);
# 2862 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_ABDC2(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 2863 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_ABCD2(fC_d, fD_d, omega2, pitch_elements2);
# 2864 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_ABDC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 2865 "txInterpTest.cu"
} }
# 2866 "txInterpTest.cu"
} else {
# 2867 "txInterpTest.cu"
if (("SINGLE") == ("HYB")) {
# 2868 "txInterpTest.cu"
if ((0.25F) == (0.5F)) {
# 2869 "txInterpTest.cu"
if (t >= 10000000000L) {
# 2870 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD_force(fC_d, fD_d, omega2, pitch_elements2, FX_d, FY_d, t); } else {
# 2872 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD(fC_d, fD_d, omega2, pitch_elements2); }
# 2873 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABDC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 2874 "txInterpTest.cu"
} else {
# 2875 "txInterpTest.cu"
if ((0.25F) == (0.25F)) {
# 2876 "txInterpTest.cu"
if (t >= 10000000000L) {
# 2877 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD_force(fC_d, fD_d, omega2, pitch_elements2, FX_d, FY_d, t); } else {
# 2879 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD(fC_d, fD_d, omega2, pitch_elements2); }
# 2880 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABDC2(fD_d, fC_d, omega2, pitch_elements2, SF_cf, 2);
# 2882 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD2(fC_d, fD_d, omega2, pitch_elements2, 3);
# 2883 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABDC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 2884 "txInterpTest.cu"
} else {
# 2885 "txInterpTest.cu"
if ((0.25F) == (0.125F)) {
# 2886 "txInterpTest.cu"
if (t >= 10000000000L) {
# 2887 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD_force(fC_d, fD_d, omega2, pitch_elements2, FX_d, FY_d, t); } else {
# 2889 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD(fC_d, fD_d, omega2, pitch_elements2); }
# 2890 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABDC2(fD_d, fC_d, omega2, pitch_elements2, SF_cf, 2);
# 2892 "txInterpTest.cu"
for (int k = 0; k < 2; k++) {
# 2893 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD2(fC_d, fD_d, omega2, pitch_elements2, 3 + k);
# 2894 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABDC2(fD_d, fC_d, omega2, pitch_elements2, SF_cf, 4 + k);
# 2895 "txInterpTest.cu"
}
# 2897 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD2(fC_d, fD_d, omega2, pitch_elements2, 7);
# 2898 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABDC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 2899 "txInterpTest.cu"
} else {
# 2900 "txInterpTest.cu"
if ((0.25F) == (0.0625F)) {
# 2901 "txInterpTest.cu"
if (t >= 10000000000L) {
# 2902 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD_force(fC_d, fD_d, omega2, pitch_elements2, FX_d, FY_d, t); } else {
# 2904 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD(fC_d, fD_d, omega2, pitch_elements2); }
# 2905 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABDC2(fD_d, fC_d, omega2, pitch_elements2, SF_cf, 2);
# 2907 "txInterpTest.cu"
for (int k = 0; k < 6; k++) {
# 2908 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD2(fC_d, fD_d, omega2, pitch_elements2, 3 + k);
# 2909 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABDC2(fD_d, fC_d, omega2, pitch_elements2, SF_cf, 4 + k);
# 2910 "txInterpTest.cu"
}
# 2912 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD2(fC_d, fD_d, omega2, pitch_elements2, 15);
# 2913 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABDC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 2914 "txInterpTest.cu"
} } } }
# 2915 "txInterpTest.cu"
} }
# 2917 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : ExtractFromC_d(fB_d, pitch_elements, SF_fc);
# 2920 "txInterpTest.cu"
if (("SINGLE") == ("SINGLE")) {
# 2921 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_single(fB_d, fA_d, omega, pitch_elements); } else {
# 2922 "txInterpTest.cu"
if (("SINGLE") == ("HYB")) {
# 2923 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_hybBA(fB_d, fA_d, omega, pitch_elements); } else {
# 2924 "txInterpTest.cu"
if (("SINGLE") == ("TEXT")) {
# 2925 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_textBA(fB_d, fA_d, omega, pitch_elements); } } }
# 2928 "txInterpTest.cu"
if (("SINGLE") == ("SINGLE")) {
# 2929 "txInterpTest.cu"
if ((0.25F) == (0.5F)) {
# 2930 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_BACD(fC_d, fD_d, omega2, pitch_elements2);
# 2931 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_BADC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 2932 "txInterpTest.cu"
} else {
# 2933 "txInterpTest.cu"
if ((0.25F) == (0.25F)) {
# 2934 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_BACD(fC_d, fD_d, omega2, pitch_elements2);
# 2935 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_BADC2(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 2936 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_BACD2(fC_d, fD_d, omega2, pitch_elements2);
# 2937 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_BADC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 2938 "txInterpTest.cu"
} }
# 2939 "txInterpTest.cu"
} else {
# 2940 "txInterpTest.cu"
if (("SINGLE") == ("HYB")) {
# 2941 "txInterpTest.cu"
if ((0.25F) == (0.5F)) {
# 2942 "txInterpTest.cu"
if (t >= 10000000000L) {
# 2943 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBACD_force(fC_d, fD_d, omega2, pitch_elements2, FX_d, FY_d, t + 1); } else {
# 2945 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBACD(fC_d, fD_d, omega2, pitch_elements2); }
# 2946 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBADC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 2947 "txInterpTest.cu"
} else {
# 2948 "txInterpTest.cu"
if ((0.25F) == (0.25F)) {
# 2949 "txInterpTest.cu"
if (t >= 10000000000L) {
# 2950 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBACD_force(fC_d, fD_d, omega2, pitch_elements2, FX_d, FY_d, t + 1); } else {
# 2952 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBACD(fC_d, fD_d, omega2, pitch_elements2); }
# 2953 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBADC2(fD_d, fC_d, omega2, pitch_elements2, SF_cf, 2);
# 2955 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBACD2(fC_d, fD_d, omega2, pitch_elements2, 3);
# 2956 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBADC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 2957 "txInterpTest.cu"
} else {
# 2958 "txInterpTest.cu"
if ((0.25F) == (0.125F)) {
# 2959 "txInterpTest.cu"
if (t >= 10000000000L) {
# 2960 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBACD_force(fC_d, fD_d, omega2, pitch_elements2, FX_d, FY_d, t + 1); } else {
# 2962 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBACD(fC_d, fD_d, omega2, pitch_elements2); }
# 2963 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBADC2(fD_d, fC_d, omega2, pitch_elements2, SF_cf, 2);
# 2965 "txInterpTest.cu"
for (int k = 0; k < 2; k++) {
# 2966 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBACD2(fC_d, fD_d, omega2, pitch_elements2, 3 + k);
# 2967 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBADC2(fD_d, fC_d, omega2, pitch_elements2, SF_cf, 4 + k);
# 2968 "txInterpTest.cu"
}
# 2970 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBACD2(fC_d, fD_d, omega2, pitch_elements2, 7);
# 2971 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBADC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 2972 "txInterpTest.cu"
} else {
# 2973 "txInterpTest.cu"
if ((0.25F) == (0.0625F)) {
# 2974 "txInterpTest.cu"
if (t >= 10000000000L) {
# 2975 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBACD_force(fC_d, fD_d, omega2, pitch_elements2, FX_d, FY_d, t + 1); } else {
# 2977 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBACD(fC_d, fD_d, omega2, pitch_elements2); }
# 2978 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBADC2(fD_d, fC_d, omega2, pitch_elements2, SF_cf, 2);
# 2980 "txInterpTest.cu"
for (int k = 0; k < 6; k++) {
# 2981 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBACD2(fC_d, fD_d, omega2, pitch_elements2, 3 + k);
# 2982 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBADC2(fD_d, fC_d, omega2, pitch_elements2, SF_cf, 4 + k);
# 2983 "txInterpTest.cu"
}
# 2985 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBACD2(fC_d, fD_d, omega2, pitch_elements2, 15);
# 2986 "txInterpTest.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBADC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 2987 "txInterpTest.cu"
} } } }
# 2988 "txInterpTest.cu"
} }
# 2990 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : ExtractFromC_d(fA_d, pitch_elements, SF_fc);
# 2991 "txInterpTest.cu"
} else
# 2992 "txInterpTest.cu"
{
# 2993 "txInterpTest.cu"
if (("SINGLE") == ("SINGLE")) {
# 2994 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_single(fA_d, fB_d, omega, pitch_elements);
# 2995 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_single(fB_d, fA_d, omega, pitch_elements);
# 2996 "txInterpTest.cu"
} else {
# 2998 "txInterpTest.cu"
if (("SINGLE") == ("SINGLEF")) {
# 2999 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_single_force(fA_d, fB_d, omega, pitch_elements, FX_d, FY_d, t);
# 3000 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_single_force(fB_d, fA_d, omega, pitch_elements, FX_d, FY_d, t + 1);
# 3001 "txInterpTest.cu"
} else {
# 3003 "txInterpTest.cu"
if (("SINGLE") == ("HYB")) {
# 3004 "txInterpTest.cu"
if (t >= 10000000000L) {
# 3005 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_hybAB_force(fA_d, fB_d, omega, pitch_elements, FX_d, FY_d, t);
# 3006 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_hybBA_force(fB_d, fA_d, omega, pitch_elements, FX_d, FY_d, t + 1);
# 3007 "txInterpTest.cu"
} else
# 3008 "txInterpTest.cu"
{
# 3009 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_hybAB(fA_d, fB_d, omega, pitch_elements);
# 3010 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_hybBA(fB_d, fA_d, omega, pitch_elements);
# 3011 "txInterpTest.cu"
}
# 3012 "txInterpTest.cu"
} else {
# 3014 "txInterpTest.cu"
if (("SINGLE") == ("TEXT")) {
# 3015 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_textAB(fA_d, fB_d, omega, pitch_elements);
# 3016 "txInterpTest.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_textBA(fB_d, fA_d, omega, pitch_elements);
# 3017 "txInterpTest.cu"
} } } }
# 3018 "txInterpTest.cu"
}
# 3028 "txInterpTest.cu"
if (((t % 1000) == 0) && (t > 0)) { (((((cout << ("finished "))) << t)) << (" timesteps\n")); }
# 3029 "txInterpTest.cu"
}
# 3030 "txInterpTest.cu"
cudaDeviceSynchronize();
# 3032 "txInterpTest.cu"
gettimeofday(&tdr1, __null);
# 3033 "txInterpTest.cu"
timeval_subtract(&restime, &tdr1, &tdr0);
# 3034 "txInterpTest.cu"
int Nodes;
# 3035 "txInterpTest.cu"
if (("YES") == ("YES")) {
# 3036 "txInterpTest.cu"
Nodes = ((1024 * 768) + ((768 * 512) / (0.25F)));
# 3037 "txInterpTest.cu"
} else
# 3038 "txInterpTest.cu"
{
# 3039 "txInterpTest.cu"
Nodes = (1024 * 768);
# 3040 "txInterpTest.cu"
}
# 3041 "txInterpTest.cu"
(((((((((((cout << ("Time taken for main kernel: "))) << restime)) << (" ("))) << (((double)(Nodes * ((double)((1000) / (1000000.0F))))) / restime))) << ("MLUPS)"))) << (std::endl));
# 3044 "txInterpTest.cu"
(((((((((((((((cout << (1024))) << (","))) << (768))) << (","))) << (1000))) << (","))) << restime)) << (std::endl));
# 3046 "txInterpTest.cu"
if (true) {
# 3047 "txInterpTest.cu"
cudaUnbindTexture(texRef_f0A);
# 3048 "txInterpTest.cu"
cudaUnbindTexture(texRef_f1A);
# 3049 "txInterpTest.cu"
cudaUnbindTexture(texRef_f2A);
# 3050 "txInterpTest.cu"
cudaUnbindTexture(texRef_f3A);
# 3051 "txInterpTest.cu"
cudaUnbindTexture(texRef_f4A);
# 3052 "txInterpTest.cu"
cudaUnbindTexture(texRef_f5A);
# 3053 "txInterpTest.cu"
cudaUnbindTexture(texRef_f6A);
# 3054 "txInterpTest.cu"
cudaUnbindTexture(texRef_f7A);
# 3055 "txInterpTest.cu"
cudaUnbindTexture(texRef_f8A);
# 3057 "txInterpTest.cu"
cudaUnbindTexture(texRef_f0B);
# 3058 "txInterpTest.cu"
cudaUnbindTexture(texRef_f1B);
# 3059 "txInterpTest.cu"
cudaUnbindTexture(texRef_f2B);
# 3060 "txInterpTest.cu"
cudaUnbindTexture(texRef_f3B);
# 3061 "txInterpTest.cu"
cudaUnbindTexture(texRef_f4B);
# 3062 "txInterpTest.cu"
cudaUnbindTexture(texRef_f5B);
# 3063 "txInterpTest.cu"
cudaUnbindTexture(texRef_f6B);
# 3064 "txInterpTest.cu"
cudaUnbindTexture(texRef_f7B);
# 3065 "txInterpTest.cu"
cudaUnbindTexture(texRef_f8B);
# 3067 "txInterpTest.cu"
cudaUnbindTexture(texRef_f0C);
# 3068 "txInterpTest.cu"
cudaUnbindTexture(texRef_f1C);
# 3069 "txInterpTest.cu"
cudaUnbindTexture(texRef_f2C);
# 3070 "txInterpTest.cu"
cudaUnbindTexture(texRef_f3C);
# 3071 "txInterpTest.cu"
cudaUnbindTexture(texRef_f4C);
# 3072 "txInterpTest.cu"
cudaUnbindTexture(texRef_f5C);
# 3073 "txInterpTest.cu"
cudaUnbindTexture(texRef_f6C);
# 3074 "txInterpTest.cu"
cudaUnbindTexture(texRef_f7C);
# 3075 "txInterpTest.cu"
cudaUnbindTexture(texRef_f8C);
# 3077 "txInterpTest.cu"
cudaUnbindTexture(texRef_f0D);
# 3078 "txInterpTest.cu"
cudaUnbindTexture(texRef_f1D);
# 3079 "txInterpTest.cu"
cudaUnbindTexture(texRef_f2D);
# 3080 "txInterpTest.cu"
cudaUnbindTexture(texRef_f3D);
# 3081 "txInterpTest.cu"
cudaUnbindTexture(texRef_f4D);
# 3082 "txInterpTest.cu"
cudaUnbindTexture(texRef_f5D);
# 3083 "txInterpTest.cu"
cudaUnbindTexture(texRef_f6D);
# 3084 "txInterpTest.cu"
cudaUnbindTexture(texRef_f7D);
# 3085 "txInterpTest.cu"
cudaUnbindTexture(texRef_f8D);
# 3086 "txInterpTest.cu"
}
# 3088 "txInterpTest.cu"
cudaMemcpy2D(fA_h, (1024) * sizeof(float), fA_d, pitch, (1024) * sizeof(float), 768 * 9, cudaMemcpyDeviceToHost);
# 3089 "txInterpTest.cu"
if (("YES") == ("YES")) {
# 3090 "txInterpTest.cu"
cudaMemcpy2D(fC_h, (768) * sizeof(float), fC_d, pitch2, (768) * sizeof(float), 512 * 9, cudaMemcpyDeviceToHost);
# 3091 "txInterpTest.cu"
}
# 3092 "txInterpTest.cu"
cudaMemcpy(FX_h, FX_d, (1000) * sizeof(float), cudaMemcpyDeviceToHost);
# 3093 "txInterpTest.cu"
cudaMemcpy(FY_h, FY_d, (1000) * sizeof(float), cudaMemcpyDeviceToHost);
# 3095 "txInterpTest.cu"
(output << ("VARIABLES = \"X\",\"Y\",\"u\",\"v\",\"rho\"\n"));
# 3096 "txInterpTest.cu"
(((((((((output << ("ZONE F=POINT, I="))) << (1024))) << (", J="))) << (768))) << ("\n"));
# 3098 "txInterpTest.cu"
int row = 0;
# 3099 "txInterpTest.cu"
int col = 0;
# 3100 "txInterpTest.cu"
i = 0;
# 3101 "txInterpTest.cu"
float rho, u, v;
# 3102 "txInterpTest.cu"
int j;
# 3104 "txInterpTest.cu"
for (row = 0; row < 768; row++) {
# 3105 "txInterpTest.cu"
for (col = 0; col < 1024; col++) {
# 3106 "txInterpTest.cu"
i = ((row * 1024) + col);
# 3107 "txInterpTest.cu"
rho = (fA_h[i]);
# 3108 "txInterpTest.cu"
for (j = 1; j < 9; j++) {
# 3109 "txInterpTest.cu"
rho += (fA_h[i + ((1024 * 768) * j)]); }
# 3110 "txInterpTest.cu"
u = ((((((fA_h[i + ((1024 * 768) * 1)]) - (fA_h[i + ((1024 * 768) * 3)])) + (fA_h[i + ((1024 * 768) * 5)])) - (fA_h[i + ((1024 * 768) * 6)])) - (fA_h[i + ((1024 * 768) * 7)])) + (fA_h[i + ((1024 * 768) * 8)]));
# 3112 "txInterpTest.cu"
v = ((((((fA_h[i + ((1024 * 768) * 2)]) - (fA_h[i + ((1024 * 768) * 4)])) + (fA_h[i + ((1024 * 768) * 5)])) + (fA_h[i + ((1024 * 768) * 6)])) - (fA_h[i + ((1024 * 768) * 7)])) - (fA_h[i + ((1024 * 768) * 8)]));
# 3113 "txInterpTest.cu"
(((((((((((((((((((output << col)) << (", "))) << row)) << (", "))) << u)) << (","))) << v)) << (","))) << rho)) << (std::endl));
# 3114 "txInterpTest.cu"
}
# 3115 "txInterpTest.cu"
}
# 3117 "txInterpTest.cu"
if (("YES") == ("YES")) {
# 3118 "txInterpTest.cu"
(((output << (std::endl))) << ("VARIABLES = \"X\",\"Y\",\"u\",\"v\",\"rho\"\n"));
# 3120 "txInterpTest.cu"
(((((((((output << ("ZONE F=POINT, I="))) << (768))) << (", J="))) << (512))) << ("\n"));
# 3124 "txInterpTest.cu"
for (row = 0; row < (512 - 0); row++) {
# 3125 "txInterpTest.cu"
for (col = 0; col < (768 - 0); col++) {
# 3126 "txInterpTest.cu"
i = ((row * 768) + col);
# 3127 "txInterpTest.cu"
rho = (fC_h[i]);
# 3128 "txInterpTest.cu"
for (j = 1; j < 9; j++) {
# 3129 "txInterpTest.cu"
rho += (fC_h[i + ((768 * 512) * j)]); }
# 3130 "txInterpTest.cu"
u = ((((((fC_h[i + ((768 * 512) * 1)]) - (fC_h[i + ((768 * 512) * 3)])) + (fC_h[i + ((768 * 512) * 5)])) - (fC_h[i + ((768 * 512) * 6)])) - (fC_h[i + ((768 * 512) * 7)])) + (fC_h[i + ((768 * 512) * 8)]));
# 3132 "txInterpTest.cu"
v = ((((((fC_h[i + ((768 * 512) * 2)]) - (fC_h[i + ((768 * 512) * 4)])) + (fC_h[i + ((768 * 512) * 5)])) + (fC_h[i + ((768 * 512) * 6)])) - (fC_h[i + ((768 * 512) * 7)])) - (fC_h[i + ((768 * 512) * 8)]));
# 3133 "txInterpTest.cu"
(((((((((((((((((((output << ((415.625) + ((0.25F) * col)))) << (", "))) << ((319.625) + ((0.25F) * row)))) << (", "))) << u)) << (","))) << v)) << (","))) << rho)) << (std::endl));
# 3134 "txInterpTest.cu"
}
# 3135 "txInterpTest.cu"
}
# 3136 "txInterpTest.cu"
}
# 3138 "txInterpTest.cu"
output.close();
# 3141 "txInterpTest.cu"
for (int t = 0; t < 1000; t++) {
# 3142 "txInterpTest.cu"
(((((((((((output2 << t)) << (", "))) << ((FX_h[t]) / (((((0.5F) * (0.07999999821F)) * (0.07999999821F)) * (8.0F)) * (2.0F))))) << (", "))) << ((FY_h[t]) / (((((0.5F) * (0.07999999821F)) * (0.07999999821F)) * (8.0F)) * (2.0F))))) << (std::endl));
# 3143 "txInterpTest.cu"
}
# 3144 "txInterpTest.cu"
output2.close();
# 3150 "txInterpTest.cu"
cudaFree(fA_d);
# 3151 "txInterpTest.cu"
cudaFree(fB_d);
# 3152 "txInterpTest.cu"
cudaFree(fC_d);
# 3153 "txInterpTest.cu"
cudaFree(fD_d);
# 3154 "txInterpTest.cu"
cudaFree(FX_d);
# 3155 "txInterpTest.cu"
cudaFree(FY_d);
# 3156 "txInterpTest.cu"
return 0;
# 3158 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
# 1 "txInterpTest.cudafe1.stub.c"
# 1 "txInterpTest.cudafe1.stub.c" 1 3
# 1 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 1 3
# 74 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 3
template <typename T>
static inline void *__cudaAddressOf(T &val)
{
    return (void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val))));
}
# 103 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 3
extern "C" {

extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);



extern int atexit(void(*)(void)) throw();







}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

# 1 "/usr/local/cuda/bin/../include/common_functions.h" 1 3
# 159 "/usr/local/cuda/bin/../include/common_functions.h" 3
# 1 "/usr/local/cuda/bin/../include/math_functions.h" 1 3
# 2935 "/usr/local/cuda/bin/../include/math_functions.h" 3
# 1 "/usr/local/cuda/bin/../include/math_constants.h" 1 3
# 2936 "/usr/local/cuda/bin/../include/math_functions.h" 2 3
# 5550 "/usr/local/cuda/bin/../include/math_functions.h" 3
# 1 "/usr/local/cuda/bin/../include/crt/func_macro.h" 1 3
# 5551 "/usr/local/cuda/bin/../include/math_functions.h" 2 3
# 7292 "/usr/local/cuda/bin/../include/math_functions.h" 3
inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  }
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a);
  if (x < 32.0) {
# 7577 "/usr/local/cuda/bin/../include/math_functions.h" 3
    t1 = x - 4.0;
    t2 = x + 4.0;
    t2 = t1 / t2;

    t1 = - 3.5602694826817400E-010;
    t1 = t1 * t2 - 9.7239122591447274E-009;
    t1 = t1 * t2 - 8.9350224851649119E-009;
    t1 = t1 * t2 + 1.0404430921625484E-007;
    t1 = t1 * t2 + 5.8806698585341259E-008;
    t1 = t1 * t2 - 8.2147414929116908E-007;
    t1 = t1 * t2 + 3.0956409853306241E-007;
    t1 = t1 * t2 + 5.7087871844325649E-006;
    t1 = t1 * t2 - 1.1231787437600085E-005;
    t1 = t1 * t2 - 2.4399558857200190E-005;
    t1 = t1 * t2 + 1.5062557169571788E-004;
    t1 = t1 * t2 - 1.9925637684786154E-004;
    t1 = t1 * t2 - 7.5777429182785833E-004;
    t1 = t1 * t2 + 5.0319698792599572E-003;
    t1 = t1 * t2 - 1.6197733895953217E-002;
    t1 = t1 * t2 + 3.7167515553018733E-002;
    t1 = t1 * t2 - 6.6330365827532434E-002;
    t1 = t1 * t2 + 9.3732834997115544E-002;
    t1 = t1 * t2 - 1.0103906603555676E-001;
    t1 = t1 * t2 + 6.8097054254735140E-002;
    t1 = t1 * t2 + 1.5379652102605428E-002;
    t1 = t1 * t2 - 1.3962111684056291E-001;
    t1 = t1 * t2 + 1.2329951186255526E+000;

    t2 = 2.0 * x + 1.0;
    t1 = t1 / t2;
  } else {

    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 = -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {

    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

inline float cospif(float a)
{
  return (float)cospi((double)a);
}

inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}







inline int min(int a, int b)
{
  return a < b ? a : b;
}

inline unsigned int umin(unsigned int a, unsigned int b)
{
  return a < b ? a : b;
}

inline long long int llmin(long long int a, long long int b)
{
  return a < b ? a : b;
}

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b)
{
  return a < b ? a : b;
}

inline int max(int a, int b)
{
  return a > b ? a : b;
}

inline unsigned int umax(unsigned int a, unsigned int b)
{
  return a > b ? a : b;
}

inline long long int llmax(long long int a, long long int b)
{
  return a > b ? a : b;
}

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b)
{
  return a > b ? a : b;
}
# 7730 "/usr/local/cuda/bin/../include/math_functions.h" 3
# 1 "/usr/local/cuda/bin/../include/math_functions_dbl_ptx3.h" 1 3
# 7731 "/usr/local/cuda/bin/../include/math_functions.h" 2 3
# 160 "/usr/local/cuda/bin/../include/common_functions.h" 2 3
# 176 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 2 3







#pragma pack()
# 2 "txInterpTest.cudafe1.stub.c" 2 3
# 1 "txInterpTest.fatbin.c" 1 3


asm(
".section .nv_fatbin, \"a\"\n"
".align 8\n"
"fatbinData:\n"
".quad 0x00100001ba55ed50,0x00000000000893fe,0x0000004801000002,0x000000000001d540\n"
".quad 0x0000000000000000,0x0000001400010004,0x0000000f00000038,0x0000000000000015\n"
".quad 0x0000000000000000,0x707265746e497874,0x0075632e74736554,0x33010102464c457f\n"
".quad 0x0000000000000004,0x0000000100be0002,0x0000000000000000,0x000000000001cc48\n"
".quad 0x0000000000000040,0x0038004000140514,0x0001008e00400029,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000300000001\n"
".quad 0x0000000000000000,0x0000000000000000,0x00000000000023c0,0x0000000000001365\n"
".quad 0x0000000000000000,0x0000000000000004,0x0000000000000000,0x000000030000000b\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000003725,0x0000000000000504\n"
".quad 0x0000000000000000,0x0000000000000001,0x0000000000000000,0x0000000200000013\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000003c29,0x0000000000001440\n"
".quad 0x0000009100000002,0x0000000000000001,0x0000000000000018,0x0000000100000865\n"
".quad 0x0000000000000006,0x0000000000000000,0x0000000000005069,0x00000000000000b8\n"
".quad 0x0700004900000003,0x0000000000000004,0x0000000000000000,0x0000000100000ce5\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000005121,0x0000000000000048\n"
".quad 0x0000000400000000,0x0000000000000004,0x0000000000000000,0x0000000100000883\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000005169,0x0000000000000064\n"
".quad 0x0000000400000000,0x0000000000000001,0x0000000000000000,0x000000010000082c\n"
".quad 0x0000000000000006,0x0000000000000000,0x00000000000051cd,0x0000000000000240\n"
".quad 0x1400004700000003,0x0000000000000004,0x0000000000000000,0x0000000100000971\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000540d,0x0000000000000030\n"
".quad 0x0000000700000000,0x0000000000000004,0x0000000000000000,0x0000000100000847\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000543d,0x000000000000003c\n"
".quad 0x0000000700000000,0x0000000000000001,0x0000000000000000,0x00000001000007df\n"
".quad 0x0000000000000006,0x0000000000000000,0x0000000000005479,0x0000000000000df8\n"
".quad 0x2b00004500000003,0x0000000000000004,0x0000000000000000,0x0000000100000e5e\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000006271,0x0000000000000044\n"
".quad 0x0000000a00000000,0x0000000000000004,0x0000000000000000,0x0000000100000e30\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000062b5,0x0000000000000010\n"
".quad 0x0000000a00000000,0x0000000000000004,0x0000000000000000,0x0000000100000804\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000062c5,0x0000000000000120\n"
".quad 0x0000000a00000000,0x0000000000000001,0x0000000000000000,0x000000010000078e\n"
".quad 0x0000000000100006,0x0000000000000000,0x00000000000063e5,0x0000000000000ce8\n"
".quad 0x1b00004300000003,0x0000000000000004,0x0000000000000000,0x0000000100001058\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000070cd,0x0000000000000054\n"
".quad 0x0000000e00000000,0x0000000000000004,0x0000000000000000,0x0000000100001028\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000007121,0x000000000000001c\n"
".quad 0x0000000e00000000,0x0000000000000004,0x0000000000000000,0x00000001000007b5\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000713d,0x00000000000000d4\n"
".quad 0x0000000e00000000,0x0000000000000001,0x0000000000000000,0x0000000800000ffc\n"
".quad 0x0000000000000003,0x0000000000000000,0x0000000000007211,0x0000000000000404\n"
".quad 0x0000000e00000000,0x0000000000000004,0x0000000000000000,0x0000000100000747\n"
".quad 0x0000000000000006,0x0000000000000000,0x0000000000007211,0x0000000000000ec0\n"
".quad 0x2b00004100000003,0x0000000000000004,0x0000000000000000,0x0000000100000a0a\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000080d1,0x0000000000000044\n"
".quad 0x0000001300000000,0x0000000000000004,0x0000000000000000,0x00000001000009df\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000008115,0x0000000000000010\n"
".quad 0x0000001300000000,0x0000000000000004,0x0000000000000000,0x0000000100000769\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000008125,0x00000000000000d8\n"
".quad 0x0000001300000000,0x0000000000000001,0x0000000000000000,0x0000000100000712\n"
".quad 0x0000000000000006,0x0000000000000000,0x00000000000081fd,0x0000000000000998\n"
".quad 0x2000003f00000003,0x0000000000000004,0x0000000000000000,0x0000000100000950\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000008b95,0x0000000000000040\n"
".quad 0x0000001700000000,0x0000000000000004,0x0000000000000000,0x000000010000092e\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000008bd5,0x0000000000000010\n"
".quad 0x0000001700000000,0x0000000000000004,0x0000000000000000,0x000000010000072b\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000008be5,0x000000000000005c\n"
".quad 0x0000001700000000,0x0000000000000001,0x0000000000000000,0x00000001000006d5\n"
".quad 0x0000000000000006,0x0000000000000000,0x0000000000008c41,0x0000000000000900\n"
".quad 0x2000003d00000003,0x0000000000000004,0x0000000000000000,0x0000000100001190\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000009541,0x0000000000000040\n"
".quad 0x0000001b00000000,0x0000000000000004,0x0000000000000000,0x000000010000116a\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000009581,0x0000000000000010\n"
".quad 0x0000001b00000000,0x0000000000000004,0x0000000000000000,0x00000001000006f2\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000009591,0x00000000000000a4\n"
".quad 0x0000001b00000000,0x0000000000000001,0x0000000000000000,0x0000000100000698\n"
".quad 0x0000000000000006,0x0000000000000000,0x0000000000009635,0x0000000000000ab0\n"
".quad 0x1e00003b00000003,0x0000000000000004,0x0000000000000000,0x00000001000009ba\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000a0e5,0x0000000000000040\n"
".quad 0x0000001f00000000,0x0000000000000004,0x0000000000000000,0x0000000100000994\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000a125,0x0000000000000048\n"
".quad 0x0000001f00000000,0x0000000000000004,0x0000000000000000,0x00000001000006b5\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000a16d,0x00000000000000bc\n"
".quad 0x0000001f00000000,0x0000000000000001,0x0000000000000000,0x000000010000065f\n"
".quad 0x0000000000000006,0x0000000000000000,0x000000000000a229,0x0000000000000998\n"
".quad 0x2000003900000003,0x0000000000000004,0x0000000000000000,0x0000000100001320\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000abc1,0x0000000000000040\n"
".quad 0x0000002300000000,0x0000000000000004,0x0000000000000000,0x00000001000012fc\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000ac01,0x0000000000000010\n"
".quad 0x0000002300000000,0x0000000000000004,0x0000000000000000,0x000000010000067a\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000ac11,0x000000000000005c\n"
".quad 0x0000002300000000,0x0000000000000001,0x0000000000000000,0x0000000100000622\n"
".quad 0x0000000000000006,0x0000000000000000,0x000000000000ac6d,0x0000000000000c18\n"
".quad 0x2100003700000003,0x0000000000000004,0x0000000000000000,0x0000000100000e0b\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000b885,0x0000000000000040\n"
".quad 0x0000002700000000,0x0000000000000004,0x0000000000000000,0x0000000100000de5\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000b8c5,0x0000000000000050\n"
".quad 0x0000002700000000,0x0000000000000004,0x0000000000000000,0x000000010000063f\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000b915,0x000000000000005c\n"
".quad 0x0000002700000000,0x0000000000000001,0x0000000000000000,0x00000001000005df\n"
".quad 0x0000000000000006,0x0000000000000000,0x000000000000b971,0x0000000000000920\n"
".quad 0x2000003500000003,0x0000000000000004,0x0000000000000000,0x0000000100001142\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000c291,0x0000000000000048\n"
".quad 0x0000002b00000000,0x0000000000000004,0x0000000000000000,0x0000000100001119\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000c2d9,0x0000000000000010\n"
".quad 0x0000002b00000000,0x0000000000000004,0x0000000000000000,0x00000001000005ff\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000c2e9,0x00000000000000c4\n"
".quad 0x0000002b00000000,0x0000000000000001,0x0000000000000000,0x00000001000005aa\n"
".quad 0x0000000000000006,0x0000000000000000,0x000000000000c3ad,0x0000000000000bc0\n"
".quad 0x2000003300000003,0x0000000000000004,0x0000000000000000,0x000000010000090d\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000cf6d,0x0000000000000044\n"
".quad 0x0000002f00000000,0x0000000000000004,0x0000000000000000,0x00000001000008eb\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000cfb1,0x0000000000000018\n"
".quad 0x0000002f00000000,0x0000000000000004,0x0000000000000000,0x00000001000005c3\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000cfc9,0x000000000000006c\n"
".quad 0x0000002f00000000,0x0000000000000001,0x0000000000000000,0x0000000100000567\n"
".quad 0x0000000000000006,0x0000000000000000,0x000000000000d035,0x0000000000000920\n"
".quad 0x2000003100000003,0x0000000000000004,0x0000000000000000,0x0000000100000fd4\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000d955,0x0000000000000048\n"
".quad 0x0000003300000000,0x0000000000000004,0x0000000000000000,0x0000000100000fab\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000d99d,0x0000000000000010\n"
".quad 0x0000003300000000,0x0000000000000004,0x0000000000000000,0x0000000100000587\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000d9ad,0x00000000000000c4\n"
".quad 0x0000003300000000,0x0000000000000001,0x0000000000000000,0x000000010000052e\n"
".quad 0x0000000000000006,0x0000000000000000,0x000000000000da71,0x0000000000000998\n"
".quad 0x2000002f00000003,0x0000000000000004,0x0000000000000000,0x00000001000008c8\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000e409,0x0000000000000040\n"
".quad 0x0000003700000000,0x0000000000000004,0x0000000000000000,0x00000001000008a4\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000e449,0x0000000000000010\n"
".quad 0x0000003700000000,0x0000000000000004,0x0000000000000000,0x0000000100000549\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000e459,0x000000000000005c\n"
".quad 0x0000003700000000,0x0000000000000001,0x0000000000000000,0x00000001000004db\n"
".quad 0x0000000000100006,0x0000000000000000,0x000000000000e4b5,0x0000000000000a58\n"
".quad 0x1c00002d00000003,0x0000000000000004,0x0000000000000000,0x0000000100000bc0\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000ef0d,0x0000000000000054\n"
".quad 0x0000003b00000000,0x0000000000000004,0x0000000000000000,0x0000000100000b8f\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000ef61,0x0000000000000010\n"
".quad 0x0000003b00000000,0x0000000000000004,0x0000000000000000,0x0000000100000503\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000ef71,0x00000000000000d4\n"
".quad 0x0000003b00000000,0x0000000000000001,0x0000000000000000,0x0000000800000b62\n"
".quad 0x0000000000000003,0x0000000000000000,0x000000000000f045,0x0000000000000404\n"
".quad 0x0000003b00000000,0x0000000000000004,0x0000000000000000,0x00000001000004a0\n"
".quad 0x0000000000000006,0x0000000000000000,0x000000000000f045,0x0000000000000b80\n"
".quad 0x1e00002b00000003,0x0000000000000004,0x0000000000000000,0x00000001000010f5\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000fbc5,0x0000000000000040\n"
".quad 0x0000004000000000,0x0000000000000004,0x0000000000000000,0x00000001000010d0\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000fc05,0x0000000000000050\n"
".quad 0x0000004000000000,0x0000000000000004,0x0000000000000000,0x00000001000004bc\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000000fc55,0x00000000000000a4\n"
".quad 0x0000004000000000,0x0000000000000001,0x0000000000000000,0x0000000100000463\n"
".quad 0x0000000000000006,0x0000000000000000,0x000000000000fcf9,0x0000000000000900\n"
".quad 0x2000002900000003,0x0000000000000004,0x0000000000000000,0x000000010000126d\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000105f9,0x0000000000000040\n"
".quad 0x0000004400000000,0x0000000000000004,0x0000000000000000,0x0000000100001247\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000010639,0x0000000000000010\n"
".quad 0x0000004400000000,0x0000000000000004,0x0000000000000000,0x0000000100000480\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000010649,0x00000000000000a4\n"
".quad 0x0000004400000000,0x0000000000000001,0x0000000000000000,0x000000010000041c\n"
".quad 0x0000000000000006,0x0000000000000000,0x00000000000106ed,0x0000000000000ec0\n"
".quad 0x2b00002700000003,0x0000000000000004,0x0000000000000000,0x0000000100000b38\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000115ad,0x0000000000000044\n"
".quad 0x0000004800000000,0x0000000000000004,0x0000000000000000,0x0000000100000b0d\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000115f1,0x0000000000000010\n"
".quad 0x0000004800000000,0x0000000000000004,0x0000000000000000,0x000000010000043e\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000011601,0x00000000000000d8\n"
".quad 0x0000004800000000,0x0000000000000001,0x0000000000000000,0x00000001000003db\n"
".quad 0x0000000000000006,0x0000000000000000,0x00000000000116d9,0x0000000000000920\n"
".quad 0x2000002500000003,0x0000000000000004,0x0000000000000000,0x0000000100000cbe\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000011ff9,0x0000000000000044\n"
".quad 0x0000004c00000000,0x0000000000000004,0x0000000000000000,0x0000000100000c96\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001203d,0x0000000000000010\n"
".quad 0x0000004c00000000,0x0000000000000004,0x0000000000000000,0x00000001000003fa\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001204d,0x00000000000000b4\n"
".quad 0x0000004c00000000,0x0000000000000001,0x0000000000000000,0x000000010000039e\n"
".quad 0x0000000000000006,0x0000000000000000,0x0000000000012101,0x0000000000000ab0\n"
".quad 0x1e00002300000003,0x0000000000000004,0x0000000000000000,0x0000000100000ae8\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000012bb1,0x0000000000000040\n"
".quad 0x0000005000000000,0x0000000000000004,0x0000000000000000,0x0000000100000ac2\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000012bf1,0x0000000000000048\n"
".quad 0x0000005000000000,0x0000000000000004,0x0000000000000000,0x00000001000003bb\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000012c39,0x00000000000000bc\n"
".quad 0x0000005000000000,0x0000000000000001,0x0000000000000000,0x000000010000035f\n"
".quad 0x0000000000000006,0x0000000000000000,0x0000000000012cf5,0x0000000000000908\n"
".quad 0x2000002100000003,0x0000000000000004,0x0000000000000000,0x0000000100000f85\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000135fd,0x0000000000000044\n"
".quad 0x0000005400000000,0x0000000000000004,0x0000000000000000,0x0000000100000f5e\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000013641,0x0000000000000010\n"
".quad 0x0000005400000000,0x0000000000000004,0x0000000000000000,0x000000010000037d\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000013651,0x00000000000000b4\n"
".quad 0x0000005400000000,0x0000000000000001,0x0000000000000000,0x000000010000032a\n"
".quad 0x0000000000000006,0x0000000000000000,0x0000000000013705,0x0000000000000998\n"
".quad 0x2000001f00000003,0x0000000000000004,0x0000000000000000,0x00000001000012db\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001409d,0x0000000000000040\n"
".quad 0x0000005800000000,0x0000000000000004,0x0000000000000000,0x00000001000012b9\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000140dd,0x0000000000000010\n"
".quad 0x0000005800000000,0x0000000000000004,0x0000000000000000,0x0000000100000343\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000140ed,0x000000000000005c\n"
".quad 0x0000005800000000,0x0000000000000001,0x0000000000000000,0x00000001000002ed\n"
".quad 0x0000000000000006,0x0000000000000000,0x0000000000014149,0x0000000000000bf8\n"
".quad 0x1c00001b00000003,0x0000000000000004,0x0000000000000000,0x0000000100000c71\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000014d41,0x0000000000000034\n"
".quad 0x0000005c00000000,0x0000000000000004,0x0000000000000000,0x0000000100000c4b\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000014d75,0x0000000000000020\n"
".quad 0x0000005c00000000,0x0000000000000004,0x0000000000000000,0x000000010000030a\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000014d95,0x00000000000000b8\n"
".quad 0x0000005c00000000,0x0000000000000001,0x0000000000000000,0x000000010000029c\n"
".quad 0x0000000000100006,0x0000000000000000,0x0000000000014e4d,0x0000000000000ce8\n"
".quad 0x1b00001900000003,0x0000000000000004,0x0000000000000000,0x0000000100000db6\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000015b35,0x0000000000000054\n"
".quad 0x0000006000000000,0x0000000000000004,0x0000000000000000,0x0000000100000d86\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000015b89,0x000000000000001c\n"
".quad 0x0000006000000000,0x0000000000000004,0x0000000000000000,0x00000001000002c3\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000015ba5,0x00000000000000d4\n"
".quad 0x0000006000000000,0x0000000000000001,0x0000000000000000,0x0000000800000d5a\n"
".quad 0x0000000000000003,0x0000000000000000,0x0000000000015c79,0x0000000000000404\n"
".quad 0x0000006000000000,0x0000000000000004,0x0000000000000000,0x000000010000024f\n"
".quad 0x0000000000000006,0x0000000000000000,0x0000000000015c79,0x0000000000000df8\n"
".quad 0x2b00001700000003,0x0000000000000004,0x0000000000000000,0x0000000100000c1e\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000016a71,0x0000000000000044\n"
".quad 0x0000006500000000,0x0000000000000004,0x0000000000000000,0x0000000100000bf0\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000016ab5,0x0000000000000010\n"
".quad 0x0000006500000000,0x0000000000000004,0x0000000000000000,0x0000000100000274\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000016ac5,0x0000000000000120\n"
".quad 0x0000006500000000,0x0000000000000001,0x0000000000000000,0x00000001000001fc\n"
".quad 0x0000000000100006,0x0000000000000000,0x0000000000016be5,0x0000000000000e40\n"
".quad 0x1d00001500000003,0x0000000000000004,0x0000000000000000,0x0000000100000f2e\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000017a25,0x0000000000000054\n"
".quad 0x0000006900000000,0x0000000000000004,0x0000000000000000,0x0000000100000efd\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000017a79,0x000000000000001c\n"
".quad 0x0000006900000000,0x0000000000000004,0x0000000000000000,0x0000000100000224\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000017a95,0x000000000000008c\n"
".quad 0x0000006900000000,0x0000000000000001,0x0000000000000000,0x0000000800000ed0\n"
".quad 0x0000000000000003,0x0000000000000000,0x0000000000017b21,0x0000000000000404\n"
".quad 0x0000006900000000,0x0000000000000004,0x0000000000000000,0x00000001000001c1\n"
".quad 0x0000000000000006,0x0000000000000000,0x0000000000017b21,0x0000000000000998\n"
".quad 0x2000001300000003,0x0000000000000004,0x0000000000000000,0x00000001000010ac\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000184b9,0x0000000000000044\n"
".quad 0x0000006e00000000,0x0000000000000004,0x0000000000000000,0x0000000100001087\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000184fd,0x0000000000000010\n"
".quad 0x0000006e00000000,0x0000000000000004,0x0000000000000000,0x00000001000001dd\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001850d,0x000000000000006c\n"
".quad 0x0000006e00000000,0x0000000000000001,0x0000000000000000,0x0000000100000180\n"
".quad 0x0000000000000006,0x0000000000000000,0x0000000000018579,0x0000000000000240\n"
".quad 0x1400001100000003,0x0000000000000004,0x0000000000000000,0x0000000100001292\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000187b9,0x0000000000000030\n"
".quad 0x0000007200000000,0x0000000000000004,0x0000000000000000,0x000000010000019f\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000187e9,0x000000000000003c\n"
".quad 0x0000007200000000,0x0000000000000001,0x0000000000000000,0x0000000100000145\n"
".quad 0x0000000000000006,0x0000000000000000,0x0000000000018825,0x0000000000000998\n"
".quad 0x2000000f00000003,0x0000000000000004,0x0000000000000000,0x0000000100001223\n"
".quad 0x0000000000000002,0x0000000000000000,0x00000000000191bd,0x0000000000000044\n"
".quad 0x0000007500000000,0x0000000000000004,0x0000000000000000,0x00000001000011fe\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000019201,0x0000000000000010\n"
".quad 0x0000007500000000,0x0000000000000004,0x0000000000000000,0x0000000100000161\n"
".quad 0x0000000000000002,0x0000000000000000,0x0000000000019211,0x000000000000006c\n"
".quad 0x0000007500000000,0x0000000000000001,0x0000000000000000,0x000000010000010e\n"
".quad 0x0000000000000006,0x0000000000000000,0x000000000001927d,0x0000000000001010\n"
".quad 0x2b00000d00000003,0x0000000000000004,0x0000000000000000,0x0000000100000eae\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001a28d,0x0000000000000044\n"
".quad 0x0000007900000000,0x0000000000000004,0x0000000000000000,0x0000000100000e8b\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001a2d1,0x0000000000000010\n"
".quad 0x0000007900000000,0x0000000000000004,0x0000000000000000,0x0000000100000128\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001a2e1,0x00000000000000d8\n"
".quad 0x0000007900000000,0x0000000000000001,0x0000000000000000,0x00000001000000bb\n"
".quad 0x0000000000100006,0x0000000000000000,0x000000000001a3b9,0x0000000000000a58\n"
".quad 0x1c00000b00000003,0x0000000000000004,0x0000000000000000,0x0000000100000a92\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001ae11,0x0000000000000054\n"
".quad 0x0000007d00000000,0x0000000000000004,0x0000000000000000,0x0000000100000a61\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001ae65,0x0000000000000010\n"
".quad 0x0000007d00000000,0x0000000000000004,0x0000000000000000,0x00000001000000e3\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001ae75,0x00000000000000d4\n"
".quad 0x0000007d00000000,0x0000000000000001,0x0000000000000000,0x0000000800000a34\n"
".quad 0x0000000000000003,0x0000000000000000,0x000000000001af49,0x0000000000000404\n"
".quad 0x0000007d00000000,0x0000000000000004,0x0000000000000000,0x0000000100000080\n"
".quad 0x0000000000000006,0x0000000000000000,0x000000000001af49,0x0000000000000b50\n"
".quad 0x1e00000900000003,0x0000000000000004,0x0000000000000000,0x00000001000011da\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001ba99,0x0000000000000040\n"
".quad 0x0000008200000000,0x0000000000000004,0x0000000000000000,0x00000001000011b5\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001bad9,0x0000000000000050\n"
".quad 0x0000008200000000,0x0000000000000004,0x0000000000000000,0x000000010000009c\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001bb29,0x00000000000000a4\n"
".quad 0x0000008200000000,0x0000000000000001,0x0000000000000000,0x0000000100000036\n"
".quad 0x0000000000000006,0x0000000000000000,0x000000000001bbcd,0x0000000000000920\n"
".quad 0x2000000600000003,0x0000000000000004,0x0000000000000000,0x0000000100000d33\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001c4ed,0x0000000000000044\n"
".quad 0x0000008600000000,0x0000000000000004,0x0000000000000000,0x0000000100000d0b\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001c531,0x0000000000000010\n"
".quad 0x0000008600000000,0x0000000000000004,0x0000000000000000,0x0000000100000055\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001c541,0x00000000000000b4\n"
".quad 0x0000008600000000,0x0000000000000001,0x0000000000000000,0x0000000100001343\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001c5f5,0x0000000000000010\n"
".quad 0x0000000000000000,0x0000000000000008,0x0000000000000000,0x0000000900001352\n"
".quad 0x0000000000000000,0x0000000000000000,0x000000000001c605,0x0000000000000020\n"
".quad 0x0000008a00000003,0x0000000000000004,0x0000000000000010,0x000000010000001b\n"
".quad 0x0000000000000003,0x0000000000000000,0x000000000001c625,0x0000000000000008\n"
".quad 0x0000000000000000,0x0000000000000004,0x0000000000000000,0x0000000100000077\n"
".quad 0x0000000000000002,0x0000000000000000,0x000000000001c62d,0x0000000000000618\n"
".quad 0x0000000000000000,0x0000000000000001,0x0000000000000000,0x7472747368732e00\n"
".quad 0x747274732e006261,0x746d79732e006261,0x672e766e2e006261,0x6e692e6c61626f6c\n"
".quad 0x672e766e2e007469,0x742e006c61626f6c,0x33315a5f2e747865,0x6279685f645f524c\n"
".quad 0x5366503244434142,0x766e2e00696d665f,0x5a5f2e6f666e692e,0x685f645f524c3331\n"
".quad 0x5032444341426279,0x2e00696d665f5366,0x006f666e692e766e,0x5a5f2e747865742e\n"
".quad 0x5f645f74726d3131,0x5366504142627968,0x2e766e2e006d665f,0x315a5f2e6f666e69\n"
".quad 0x685f645f74726d31,0x5f53665041426279,0x747865742e006d66,0x5f524c38315a5f2e\n"
".quad 0x4341426279685f64,0x506563726f665f44,0x535f536d665f5366,0x692e766e2e00695f\n"
".quad 0x38315a5f2e6f666e,0x6279685f645f524c,0x726f665f44434142,0x6d665f5366506563\n"
".quad 0x742e00695f535f53,0x4c395a5f2e747865,0x434442415f645f52,0x00666d665f536650\n"
".quad 0x6f666e692e766e2e,0x645f524c395a5f2e,0x536650434442415f,0x65742e00666d665f\n"
".quad 0x4c30315a5f2e7478,0x434441425f645f52,0x666d665f53665032,0x666e692e766e2e00\n"
".quad 0x524c30315a5f2e6f,0x32434441425f645f,0x00666d665f536650,0x5a5f2e747865742e\n"
".quad 0x616974696e693731,0x6e69735f657a696c,0x2e006d6650656c67,0x2e6f666e692e766e\n"
".quad 0x74696e6937315a5f,0x735f657a696c6169,0x6d6650656c676e69,0x5f2e747865742e00\n"
".quad 0x5f645f524c30315a,0x5366503243444241,0x766e2e00666d665f,0x5a5f2e6f666e692e\n"
".quad 0x415f645f524c3031,0x5f53665032434442,0x7865742e00666d66,0x726d38315a5f2e74\n"
".quad 0x676e69735f645f74,0x6563726f665f656c,0x5f536d665f536650,0x2e766e2e00695f53\n"
".quad 0x315a5f2e6f666e69,0x735f645f74726d38,0x6f665f656c676e69,0x665f536650656372\n"
".quad 0x2e00695f535f536d,0x315a5f2e74786574,0x79685f645f524c39,0x6e495f4344424162\n"
".quad 0x5f53665070726574,0x2e766e2e00666d66,0x315a5f2e6f666e69,0x79685f645f524c39\n"
".quad 0x6e495f4344424162,0x5f53665070726574,0x7865742e00666d66,0x726d37315a5f2e74\n"
".quad 0x426279685f645f74,0x506563726f665f41,0x535f536d665f5366,0x692e766e2e00695f\n"
".quad 0x37315a5f2e6f666e,0x79685f645f74726d,0x63726f665f414262,0x536d665f53665065\n"
".quad 0x65742e00695f535f,0x4534315a5f2e7478,0x7246746361727478,0x6d6650645f436d6f\n"
".quad 0x6e692e766e2e0066,0x4534315a5f2e6f66,0x7246746361727478,0x6d6650645f436d6f\n"
".quad 0x2e747865742e0066,0x5f645f524c395a5f,0x5f53665044434241,0x692e766e2e006d66\n"
".quad 0x4c395a5f2e6f666e,0x444342415f645f52,0x2e006d665f536650,0x315a5f2e74786574\n"
".quad 0x79685f645f524c32,0x5366504344414262,0x766e2e00666d665f,0x5a5f2e6f666e692e\n"
".quad 0x685f645f524c3231,0x6650434441426279,0x742e00666d665f53,0x32315a5f2e747865\n"
".quad 0x65745f645f74726d,0x5f53665041427478,0x692e766e2e006d66,0x32315a5f2e6f666e\n"
".quad 0x65745f645f74726d,0x5f53665041427478,0x747865742e006d66,0x5f524c33315a5f2e\n"
".quad 0x4342416279685f64,0x6d665f5366503244,0x6e692e766e2e0069,0x4c33315a5f2e6f66\n"
".quad 0x416279685f645f52,0x5f53665032444342,0x7865742e00696d66,0x524c36315a5f2e74\n"
".quad 0x5f434441425f645f,0x6650707265746e49,0x6e2e00666d665f53,0x5f2e6f666e692e76\n"
".quad 0x5f645f524c36315a,0x746e495f43444142,0x665f536650707265,0x747865742e00666d\n"
".quad 0x5f524c32315a5f2e,0x4341426279685f64,0x006d665f53665044,0x6f666e692e766e2e\n"
".quad 0x5f524c32315a5f2e,0x4341426279685f64,0x006d665f53665044,0x5a5f2e747865742e\n"
".quad 0x5f645f74726d3131,0x5366504241627968,0x2e766e2e006d665f,0x315a5f2e6f666e69\n"
".quad 0x685f645f74726d31,0x5f53665042416279,0x747865742e006d66,0x5f524c38315a5f2e\n"
".quad 0x4342416279685f64,0x506563726f665f44,0x535f536d665f5366,0x692e766e2e00695f\n"
".quad 0x38315a5f2e6f666e,0x6279685f645f524c,0x726f665f44434241,0x6d665f5366506563\n"
".quad 0x742e00695f535f53,0x30315a5f2e747865,0x4342415f645f524c,0x6d665f5366503244\n"
".quad 0x666e692e766e2e00,0x524c30315a5f2e6f,0x32444342415f645f,0x2e006d665f536650\n"
".quad 0x315a5f2e74786574,0x79685f645f524c33,0x6650324344414262,0x2e0069666d665f53\n"
".quad 0x2e6f666e692e766e,0x645f524c33315a5f,0x434441426279685f,0x666d665f53665032\n"
".quad 0x2e747865742e0069,0x645f74726d385a5f,0x665f536650524c5f,0x692e766e2e00666d\n"
".quad 0x6d385a5f2e6f666e,0x50524c5f645f7472,0x2e00666d665f5366,0x315a5f2e74786574\n"
".quad 0x79685f645f524c33,0x6650324344424162,0x2e0069666d665f53,0x2e6f666e692e766e\n"
".quad 0x645f524c33315a5f,0x434442416279685f,0x666d665f53665032,0x2e747865742e0069\n"
".quad 0x5f74726d32315a5f,0x656c676e69735f64,0x2e006d665f536650,0x2e6f666e692e766e\n"
".quad 0x5f74726d32315a5f,0x656c676e69735f64,0x2e006d665f536650,0x315a5f2e74786574\n"
".quad 0x41425f645f524c30,0x665f536650324443,0x6e692e766e2e006d,0x4c30315a5f2e6f66\n"
".quad 0x444341425f645f52,0x006d665f53665032,0x5a5f2e747865742e,0x5f645f74726d3231\n"
".quad 0x6650424174786574,0x766e2e006d665f53,0x5a5f2e6f666e692e,0x5f645f74726d3231\n"
".quad 0x6650424174786574,0x65742e006d665f53,0x4c32315a5f2e7478,0x416279685f645f52\n"
".quad 0x665f536650444342,0x6e692e766e2e006d,0x4c32315a5f2e6f66,0x416279685f645f52\n"
".quad 0x665f536650444342,0x2e747865742e006d,0x5f645f524c395a5f,0x5f53665044434142\n"
".quad 0x692e766e2e006d66,0x4c395a5f2e6f666e,0x444341425f645f52,0x2e006d665f536650\n"
".quad 0x315a5f2e74786574,0x42415f645f524c36,0x7265746e495f4344,0x666d665f53665070\n"
".quad 0x666e692e766e2e00,0x524c36315a5f2e6f,0x5f434442415f645f,0x6650707265746e49\n"
".quad 0x742e00666d665f53,0x37315a5f2e747865,0x79685f645f74726d,0x63726f665f424162\n"
".quad 0x536d665f53665065,0x766e2e00695f535f,0x5a5f2e6f666e692e,0x5f645f74726d3731\n"
".quad 0x6f665f4241627968,0x665f536650656372,0x2e00695f535f536d,0x315a5f2e74786574\n"
".quad 0x79685f645f524c39,0x6e495f4344414262,0x5f53665070726574,0x2e766e2e00666d66\n"
".quad 0x315a5f2e6f666e69,0x79685f645f524c39,0x6e495f4344414262,0x5f53665070726574\n"
".quad 0x7865742e00666d66,0x6e6933315a5f2e74,0x657a696c61697469,0x2e006d6650524c5f\n"
".quad 0x2e6f666e692e766e,0x74696e6933315a5f,0x4c5f657a696c6169,0x65742e006d665052\n"
".quad 0x7331315a5f2e7478,0x6f635f656c706d69,0x69505f5366507970,0x692e766e2e006d66\n"
".quad 0x31315a5f2e6f666e,0x635f656c706d6973,0x505f53665079706f,0x2e766e2e006d6669\n"
".quad 0x746e6174736e6f63,0x4c30315a5f2e3631,0x444342415f645f52,0x006d665f53665032\n"
".quad 0x736e6f632e766e2e,0x5a5f2e30746e6174,0x415f645f524c3031,0x5f53665032444342\n"
".quad 0x632e766e2e006d66,0x31746e6174736e6f,0x74726d385a5f2e36,0x536650524c5f645f\n"
".quad 0x766e2e00666d665f,0x6e6174736e6f632e,0x726d385a5f2e3074,0x6650524c5f645f74\n"
".quad 0x6e2e00666d665f53,0x6174736e6f632e76,0x395a5f2e3631746e,0x4341425f645f524c\n"
".quad 0x006d665f53665044,0x736e6f632e766e2e,0x5a5f2e30746e6174,0x41425f645f524c39\n"
".quad 0x6d665f5366504443,0x6e6f632e766e2e00,0x5f2e30746e617473,0x6974696e6933315a\n"
".quad 0x524c5f657a696c61,0x2e766e2e006d6650,0x746e6174736e6f63,0x6d32315a5f2e3631\n"
".quad 0x7865745f645f7472,0x665f536650424174,0x6f632e766e2e006d,0x2e30746e6174736e\n"
".quad 0x5f74726d32315a5f,0x4241747865745f64,0x2e006d665f536650,0x74736e6f632e766e\n"
".quad 0x5a5f2e3631746e61,0x415f645f524c3631,0x65746e495f434442,0x6d665f5366507072\n"
".quad 0x6f632e766e2e0066,0x2e30746e6174736e,0x645f524c36315a5f,0x6e495f434442415f\n"
".quad 0x5f53665070726574,0x2e766e2e00666d66,0x5f2e646572616873,0x5f645f524c38315a\n"
".quad 0x5f44434142627968,0x5366506563726f66,0x695f535f536d665f,0x6e6f632e766e2e00\n"
".quad 0x2e3631746e617473,0x645f524c38315a5f,0x444341426279685f,0x66506563726f665f\n"
".quad 0x5f535f536d665f53,0x6f632e766e2e0069,0x2e30746e6174736e,0x645f524c38315a5f\n"
".quad 0x444341426279685f,0x66506563726f665f,0x5f535f536d665f53,0x6f632e766e2e0069\n"
".quad 0x3631746e6174736e,0x74726d32315a5f2e,0x42747865745f645f,0x006d665f53665041\n"
".quad 0x736e6f632e766e2e,0x5a5f2e30746e6174,0x5f645f74726d3231,0x6650414274786574\n"
".quad 0x766e2e006d665f53,0x6e6174736e6f632e,0x36315a5f2e363174,0x4441425f645f524c\n"
".quad 0x707265746e495f43,0x00666d665f536650,0x736e6f632e766e2e,0x5a5f2e30746e6174\n"
".quad 0x425f645f524c3631,0x65746e495f434441,0x6d665f5366507072,0x68732e766e2e0066\n"
".quad 0x315a5f2e64657261,0x79685f645f524c38,0x6f665f4443424162,0x665f536650656372\n"
".quad 0x2e00695f535f536d,0x74736e6f632e766e,0x5a5f2e3631746e61,0x685f645f524c3831\n"
".quad 0x665f444342416279,0x5f5366506563726f,0x00695f535f536d66,0x736e6f632e766e2e\n"
".quad 0x5a5f2e30746e6174,0x685f645f524c3831,0x665f444342416279,0x5f5366506563726f\n"
".quad 0x00695f535f536d66,0x736e6f632e766e2e,0x5f2e3631746e6174,0x5f645f524c39315a\n"
".quad 0x5f43444241627968,0x6650707265746e49,0x6e2e00666d665f53,0x6174736e6f632e76\n"
".quad 0x39315a5f2e30746e,0x6279685f645f524c,0x746e495f43444241,0x665f536650707265\n"
".quad 0x632e766e2e00666d,0x31746e6174736e6f,0x784534315a5f2e36,0x6f72467463617274\n"
".quad 0x666d6650645f436d,0x6e6f632e766e2e00,0x5f2e30746e617473,0x617274784534315a\n"
".quad 0x5f436d6f72467463,0x6e2e00666d665064,0x6174736e6f632e76,0x315a5f2e3631746e\n"
".quad 0x79685f645f524c33,0x6650324443424162,0x6e2e00696d665f53,0x6174736e6f632e76\n"
".quad 0x33315a5f2e30746e,0x6279685f645f524c,0x5366503244434241,0x766e2e00696d665f\n"
".quad 0x6e6174736e6f632e,0x7331315a5f2e3074,0x6f635f656c706d69,0x69505f5366507970\n"
".quad 0x632e766e2e006d66,0x31746e6174736e6f,0x524c33315a5f2e36,0x41426279685f645f\n"
".quad 0x665f536650324443,0x632e766e2e00696d,0x30746e6174736e6f,0x5f524c33315a5f2e\n"
".quad 0x4341426279685f64,0x6d665f5366503244,0x68732e766e2e0069,0x315a5f2e64657261\n"
".quad 0x685f645f74726d37,0x726f665f41426279,0x6d665f5366506563,0x6e2e00695f535f53\n"
".quad 0x6174736e6f632e76,0x315a5f2e3631746e,0x685f645f74726d37,0x726f665f41426279\n"
".quad 0x6d665f5366506563,0x6e2e00695f535f53,0x6174736e6f632e76,0x37315a5f2e30746e\n"
".quad 0x79685f645f74726d,0x63726f665f414262,0x536d665f53665065,0x766e2e00695f535f\n"
".quad 0x6e6174736e6f632e,0x32315a5f2e363174,0x69735f645f74726d,0x5f536650656c676e\n"
".quad 0x632e766e2e006d66,0x30746e6174736e6f,0x74726d32315a5f2e,0x6c676e69735f645f\n"
".quad 0x006d665f53665065,0x736e6f632e766e2e,0x5f2e3631746e6174,0x5f645f524c39315a\n"
".quad 0x5f43444142627968,0x6650707265746e49,0x6e2e00666d665f53,0x6174736e6f632e76\n"
".quad 0x39315a5f2e30746e,0x6279685f645f524c,0x746e495f43444142,0x665f536650707265\n"
".quad 0x632e766e2e00666d,0x31746e6174736e6f,0x5f524c395a5f2e36,0x6650434442415f64\n"
".quad 0x6e2e00666d665f53,0x6174736e6f632e76,0x4c395a5f2e30746e,0x434442415f645f52\n"
".quad 0x00666d665f536650,0x726168732e766e2e,0x6d38315a5f2e6465,0x6e69735f645f7472\n"
".quad 0x63726f665f656c67,0x536d665f53665065,0x766e2e00695f535f,0x6e6174736e6f632e\n"
".quad 0x38315a5f2e363174,0x69735f645f74726d,0x726f665f656c676e,0x6d665f5366506563\n"
".quad 0x6e2e00695f535f53,0x6174736e6f632e76,0x38315a5f2e30746e,0x69735f645f74726d\n"
".quad 0x726f665f656c676e,0x6d665f5366506563,0x6e2e00695f535f53,0x6174736e6f632e76\n"
".quad 0x315a5f2e3631746e,0x79685f645f524c32,0x5366504344414262,0x766e2e00666d665f\n"
".quad 0x6e6174736e6f632e,0x4c32315a5f2e3074,0x426279685f645f52,0x665f536650434441\n"
".quad 0x632e766e2e00666d,0x31746e6174736e6f,0x524c33315a5f2e36,0x41426279685f645f\n"
".quad 0x665f536650324344,0x2e766e2e0069666d,0x746e6174736e6f63,0x524c33315a5f2e30\n"
".quad 0x41426279685f645f,0x665f536650324344,0x2e766e2e0069666d,0x5f2e646572616873\n"
".quad 0x645f74726d37315a,0x665f42416279685f,0x5f5366506563726f,0x00695f535f536d66\n"
".quad 0x736e6f632e766e2e,0x5f2e3631746e6174,0x645f74726d37315a,0x665f42416279685f\n"
".quad 0x5f5366506563726f,0x00695f535f536d66,0x736e6f632e766e2e,0x5a5f2e30746e6174\n"
".quad 0x5f645f74726d3731,0x6f665f4241627968,0x665f536650656372,0x2e00695f535f536d\n"
".quad 0x74736e6f632e766e,0x5a5f2e3631746e61,0x415f645f524c3031,0x5f53665032434442\n"
".quad 0x2e766e2e00666d66,0x746e6174736e6f63,0x524c30315a5f2e30,0x32434442415f645f\n"
".quad 0x00666d665f536650,0x736e6f632e766e2e,0x5f2e3631746e6174,0x645f74726d31315a\n"
".quad 0x665042416279685f,0x766e2e006d665f53,0x6e6174736e6f632e,0x6d31315a5f2e3074\n"
".quad 0x6279685f645f7472,0x6d665f5366504241,0x6e6f632e766e2e00,0x2e3631746e617473\n"
".quad 0x645f524c33315a5f,0x434442416279685f,0x666d665f53665032,0x6f632e766e2e0069\n"
".quad 0x2e30746e6174736e,0x645f524c33315a5f,0x434442416279685f,0x666d665f53665032\n"
".quad 0x6f632e766e2e0069,0x3631746e6174736e,0x5f524c32315a5f2e,0x4342416279685f64\n"
".quad 0x006d665f53665044,0x736e6f632e766e2e,0x5a5f2e30746e6174,0x685f645f524c3231\n"
".quad 0x6650444342416279,0x766e2e006d665f53,0x6e6174736e6f632e,0x31315a5f2e363174\n"
".quad 0x79685f645f74726d,0x665f536650414262,0x6f632e766e2e006d,0x2e30746e6174736e\n"
".quad 0x5f74726d31315a5f,0x5041426279685f64,0x6e2e006d665f5366,0x6174736e6f632e76\n"
".quad 0x315a5f2e3631746e,0x41425f645f524c30,0x665f536650324344,0x632e766e2e00666d\n"
".quad 0x30746e6174736e6f,0x5f524c30315a5f2e,0x5032434441425f64,0x2e00666d665f5366\n"
".quad 0x74736e6f632e766e,0x5a5f2e3631746e61,0x685f645f524c3231,0x6650444341426279\n"
".quad 0x766e2e006d665f53,0x6e6174736e6f632e,0x4c32315a5f2e3074,0x426279685f645f52\n"
".quad 0x665f536650444341,0x6f632e766e2e006d,0x2e30746e6174736e,0x74696e6937315a5f\n"
".quad 0x735f657a696c6169,0x6d6650656c676e69,0x6e6f632e766e2e00,0x2e3631746e617473\n"
".quad 0x5f645f524c395a5f,0x5f53665044434241,0x632e766e2e006d66,0x30746e6174736e6f\n"
".quad 0x645f524c395a5f2e,0x536650444342415f,0x2e766e2e006d665f,0x746e6174736e6f63\n"
".quad 0x4c30315a5f2e3631,0x444341425f645f52,0x006d665f53665032,0x736e6f632e766e2e\n"
".quad 0x5a5f2e30746e6174,0x425f645f524c3031,0x5f53665032444341,0x632e766e2e006d66\n"
".quad 0x31746e6174736e6f,0x6e2e6c65722e0034,0x6174736e6f632e76,0x5a5f00003431746e\n"
".quad 0x685f645f524c3331,0x5032444341426279,0x5f00696d665f5366,0x645f74726d31315a\n"
".quad 0x665041426279685f,0x315a5f006d665f53,0x79685f645f524c38,0x6f665f4443414262\n"
".quad 0x665f536650656372,0x5f00695f535f536d,0x415f645f524c395a,0x665f536650434442\n"
".quad 0x4c30315a5f00666d,0x434441425f645f52,0x666d665f53665032,0x696e6937315a5f00\n"
".quad 0x5f657a696c616974,0x6650656c676e6973,0x524c30315a5f006d,0x32434442415f645f\n"
".quad 0x00666d665f536650,0x5f74726d38315a5f,0x656c676e69735f64,0x66506563726f665f\n"
".quad 0x5f535f536d665f53,0x524c39315a5f0069,0x42416279685f645f,0x7265746e495f4344\n"
".quad 0x666d665f53665070,0x74726d37315a5f00,0x41426279685f645f,0x66506563726f665f\n"
".quad 0x5f535f536d665f53,0x784534315a5f0069,0x6f72467463617274,0x666d6650645f436d\n"
".quad 0x5f616475635f5f00,0x7669645f30326d73,0x635f5f003436665f,0x30326d735f616475\n"
".quad 0x3436665f7669645f,0x746170776f6c735f,0x5f524c395a5f0068,0x6650444342415f64\n"
".quad 0x315a5f006d665f53,0x79685f645f524c32,0x5366504344414262,0x315a5f00666d665f\n"
".quad 0x745f645f74726d32,0x5366504142747865,0x33315a5f006d665f,0x6279685f645f524c\n"
".quad 0x5366503244434241,0x315a5f00696d665f,0x41425f645f524c36,0x7265746e495f4344\n"
".quad 0x666d665f53665070,0x5f524c32315a5f00,0x4341426279685f64,0x006d665f53665044\n"
".quad 0x5f74726d31315a5f,0x5042416279685f64,0x5a5f006d665f5366,0x685f645f524c3831\n"
".quad 0x665f444342416279,0x5f5366506563726f,0x00695f535f536d66,0x645f524c30315a5f\n"
".quad 0x665032444342415f,0x315a5f006d665f53,0x79685f645f524c33,0x6650324344414262\n"
".quad 0x5f0069666d665f53,0x5f645f74726d385a,0x6d665f536650524c,0x524c33315a5f0066\n"
".quad 0x42416279685f645f,0x665f536650324344,0x32315a5f0069666d,0x69735f645f74726d\n"
".quad 0x5f536650656c676e,0x4c30315a5f006d66,0x444341425f645f52,0x006d665f53665032\n"
".quad 0x5f74726d32315a5f,0x4241747865745f64,0x5f006d665f536650,0x5f645f524c32315a\n"
".quad 0x5044434241627968,0x5a5f006d665f5366,0x41425f645f524c39,0x6d665f5366504443\n"
".quad 0x5f524c36315a5f00,0x495f434442415f64,0x536650707265746e,0x315a5f00666d665f\n"
".quad 0x685f645f74726d37,0x726f665f42416279,0x6d665f5366506563,0x5a5f00695f535f53\n"
".quad 0x685f645f524c3931,0x495f434441426279,0x536650707265746e,0x315a5f00666d665f\n"
".quad 0x6c616974696e6933,0x6650524c5f657a69,0x697331315a5f006d,0x706f635f656c706d\n"
".quad 0x6669505f53665079,0x666552786574006d,0x786574004130665f,0x004131665f666552\n"
".quad 0x665f666552786574,0x6552786574004132,0x6574004133665f66,0x4134665f66655278\n"
".quad 0x5f66655278657400,0x5278657400413566,0x74004136665f6665,0x37665f6665527865\n"
".quad 0x6665527865740041,0x786574004138665f,0x004230665f666552,0x665f666552786574\n"
".quad 0x6552786574004231,0x6574004232665f66,0x4233665f66655278,0x5f66655278657400\n"
".quad 0x5278657400423466,0x74004235665f6665,0x36665f6665527865,0x6665527865740042\n"
".quad 0x786574004237665f,0x004238665f666552,0x665f666552786574,0x6552786574004330\n"
".quad 0x6574004331665f66,0x4332665f66655278,0x5f66655278657400,0x5278657400433366\n"
".quad 0x74004334665f6665,0x35665f6665527865,0x6665527865740043,0x786574004336665f\n"
".quad 0x004337665f666552,0x665f666552786574,0x6552786574004338,0x6574004430665f66\n"
".quad 0x4431665f66655278,0x5f66655278657400,0x5278657400443266,0x74004433665f6665\n"
".quad 0x34665f6665527865,0x6665527865740044,0x786574004435665f,0x004436665f666552\n"
".quad 0x665f666552786574,0x6552786574004437,0x7324004438665f66,0x3172747324007274\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0100030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0200030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0300030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x8c00030000000000,0x0000000000000000,0x0000000000000000,0x0000030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x8600030000000000,0x0000000000000000\n"
".quad 0x0000000000092000,0x8900030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x8d00030000000000,0x0000000000000000,0x0000000000000000,0x8200030000000000\n"
".quad 0x0000000000000000,0x00000000000b5000,0x8500030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x7d00030000000000,0x0000000000000000,0x00000000000a5800\n"
".quad 0x8000030000000000,0x0000000000000000,0x0000000000000000,0x7900030000000000\n"
".quad 0x0000000000000000,0x0000000000101000,0x7c00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x7500030000000000,0x0000000000000000,0x0000000000099800\n"
".quad 0x7800030000000000,0x0000000000000000,0x0000000000000000,0x7200030000000000\n"
".quad 0x0000000000000000,0x0000000000024000,0x7400030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x6e00030000000000,0x0000000000000000,0x0000000000099800\n"
".quad 0x7100030000000000,0x0000000000000000,0x0000000000000000,0x6900030000000000\n"
".quad 0x0000000000000000,0x00000000000e4000,0x6c00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x6500030000000000,0x0000000000000000,0x00000000000df800\n"
".quad 0x6800030000000000,0x0000000000000000,0x0000000000000000,0x6000030000000000\n"
".quad 0x0000000000000000,0x00000000000ce800,0x6300030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x5c00030000000000,0x0000000000000000,0x00000000000bf800\n"
".quad 0x5f00030000000000,0x0000000000000000,0x0000000000000000,0x5c00020000012400\n"
".quad 0x000000000006a000,0x0000000000013000,0x5c00020000013800,0x000000000007d000\n"
".quad 0x0000000000042800,0x5800030000000000,0x0000000000000000,0x0000000000099800\n"
".quad 0x5b00030000000000,0x0000000000000000,0x0000000000000000,0x5400030000000000\n"
".quad 0x0000000000000000,0x0000000000090800,0x5700030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x5000030000000000,0x0000000000000000,0x00000000000ab000\n"
".quad 0x5300030000000000,0x0000000000000000,0x0000000000000000,0x4c00030000000000\n"
".quad 0x0000000000000000,0x0000000000092000,0x4f00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x4800030000000000,0x0000000000000000,0x00000000000ec000\n"
".quad 0x4b00030000000000,0x0000000000000000,0x0000000000000000,0x4400030000000000\n"
".quad 0x0000000000000000,0x0000000000090000,0x4700030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x4000030000000000,0x0000000000000000,0x00000000000b8000\n"
".quad 0x4300030000000000,0x0000000000000000,0x0000000000000000,0x3b00030000000000\n"
".quad 0x0000000000000000,0x00000000000a5800,0x3e00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x3700030000000000,0x0000000000000000,0x0000000000099800\n"
".quad 0x3a00030000000000,0x0000000000000000,0x0000000000000000,0x3300030000000000\n"
".quad 0x0000000000000000,0x0000000000092000,0x3600030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x2f00030000000000,0x0000000000000000,0x00000000000bc000\n"
".quad 0x3200030000000000,0x0000000000000000,0x0000000000000000,0x2b00030000000000\n"
".quad 0x0000000000000000,0x0000000000092000,0x2e00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x2700030000000000,0x0000000000000000,0x00000000000c1800\n"
".quad 0x2a00030000000000,0x0000000000000000,0x0000000000000000,0x2300030000000000\n"
".quad 0x0000000000000000,0x0000000000099800,0x2600030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x1f00030000000000,0x0000000000000000,0x00000000000ab000\n"
".quad 0x2200030000000000,0x0000000000000000,0x0000000000000000,0x1b00030000000000\n"
".quad 0x0000000000000000,0x0000000000090000,0x1e00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x1700030000000000,0x0000000000000000,0x0000000000099800\n"
".quad 0x1a00030000000000,0x0000000000000000,0x0000000000000000,0x1300030000000000\n"
".quad 0x0000000000000000,0x00000000000ec000,0x1600030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0e00030000000000,0x0000000000000000,0x00000000000ce800\n"
".quad 0x1100030000000000,0x0000000000000000,0x0000000000000000,0x0a00030000000000\n"
".quad 0x0000000000000000,0x00000000000df800,0x0d00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0700030000000000,0x0000000000000000,0x0000000000024000\n"
".quad 0x0900030000000000,0x0000000000000000,0x0000000000000000,0x0400030000000000\n"
".quad 0x0000000000000000,0x000000000000b800,0x0600030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x3900030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x3800030000000000,0x0000000000000000,0x0000000000000000,0x3100030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x3000030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x1900030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x1800030000000000,0x0000000000000000,0x0000000000000000,0x0800030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x2100030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x2000030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x1500030000000000,0x0000000000000000,0x0000000000000000,0x1400030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x8100030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x7f00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x7e00030000000000,0x0000000000000000,0x0000000000000000,0x5200030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x5100030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x4a00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x4900030000000000,0x0000000000000000,0x0000000000000000,0x3f00030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x3d00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x3c00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x6700030000000000,0x0000000000000000,0x0000000000000000,0x6600030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x5e00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x5d00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x4e00030000000000,0x0000000000000000,0x0000000000000000,0x4d00030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0500030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x8800030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x8700030000000000,0x0000000000000000,0x0000000000000000,0x6400030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x6200030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x6100030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x2900030000000000,0x0000000000000000,0x0000000000000000,0x2800030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0c00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0b00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x7b00030000000000,0x0000000000000000,0x0000000000000000,0x7a00030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x6d00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x6b00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x6a00030000000000,0x0000000000000000,0x0000000000000000,0x5600030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x5500030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x3500030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x3400030000000000,0x0000000000000000,0x0000000000000000,0x1200030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x1000030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0f00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x7000030000000000,0x0000000000000000,0x0000000000000000,0x6f00030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x4200030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x4100030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x2d00030000000000,0x0000000000000000,0x0000000000000000,0x2c00030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x1d00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x1c00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x8400030000000000,0x0000000000000000,0x0000000000000000,0x8300030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x7700030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x7600030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x4600030000000000,0x0000000000000000,0x0000000000000000,0x4500030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x7300030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x5a00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x5900030000000000,0x0000000000000000,0x0000000000000000,0x2500030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x2400030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x8a00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x8b00030000000000,0x0000000000000000,0x0000000000000000,0x8610120000000100\n"
".quad 0x0000000000000000,0x0000000000092000,0x8210120000001a00,0x0000000000000000\n"
".quad 0x00000000000b5000,0x7d10120000003000,0x0000000000000000,0x00000000000a5800\n"
".quad 0x7910120000005200,0x0000000000000000,0x0000000000101000,0x7510120000006600\n"
".quad 0x0000000000000000,0x0000000000099800,0x7210120000007c00,0x0000000000000000\n"
".quad 0x0000000000024000,0x6e10120000009500,0x0000000000000000,0x0000000000099800\n"
".quad 0x691012000000ab00,0x0000000000000000,0x00000000000e4000,0x651012000000cd00\n"
".quad 0x0000000000000000,0x00000000000df800,0x601012000000ec00,0x0000000000000000\n"
".quad 0x00000000000ce800,0x5c10120000010d00,0x0000000000000000,0x000000000006a000\n"
".quad 0x5810120000015500,0x0000000000000000,0x0000000000099800,0x5410120000016800\n"
".quad 0x0000000000000000,0x0000000000090800,0x5010120000018000,0x0000000000000000\n"
".quad 0x00000000000ab000,0x4c10120000019700,0x0000000000000000,0x0000000000092000\n"
".quad 0x481012000001b000,0x0000000000000000,0x00000000000ec000,0x441012000001cc00\n"
".quad 0x0000000000000000,0x0000000000090000,0x401012000001e300,0x0000000000000000\n"
".quad 0x00000000000b8000,0x3b1012000001f900,0x0000000000000000,0x00000000000a5800\n"
".quad 0x3710120000021b00,0x0000000000000000,0x0000000000099800,0x3310120000023000\n"
".quad 0x0000000000000000,0x0000000000092000,0x2f10120000024a00,0x0000000000000000\n"
".quad 0x00000000000bc000,0x2b10120000025d00,0x0000000000000000,0x0000000000092000\n"
".quad 0x2710120000027700,0x0000000000000000,0x00000000000c1800,0x2310120000028e00\n"
".quad 0x0000000000000000,0x0000000000099800,0x1f1012000002a300,0x0000000000000000\n"
".quad 0x00000000000ab000,0x1b1012000002ba00,0x0000000000000000,0x0000000000090000\n"
".quad 0x171012000002d100,0x0000000000000000,0x0000000000099800,0x131012000002e400\n"
".quad 0x0000000000000000,0x00000000000ec000,0x0e10120000030000,0x0000000000000000\n"
".quad 0x00000000000ce800,0x0a10120000032100,0x0000000000000000,0x00000000000df800\n"
".quad 0x0710120000034000,0x0000000000000000,0x0000000000024000,0x0410120000035500\n"
".quad 0x0000000000000000,0x000000000000b800,0x00001a0000036d00,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a0000037800,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000038300,0x0000000000000000,0x0000000000000000,0x00001a0000038e00\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000039900,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a000003a400,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a000003af00,0x0000000000000000,0x0000000000000000,0x00001a000003ba00\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a000003c500,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a000003d000,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a000003db00,0x0000000000000000,0x0000000000000000,0x00001a000003e600\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a000003f100,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a000003fc00,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000040700,0x0000000000000000,0x0000000000000000,0x00001a0000041200\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000041d00,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a0000042800,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000043300,0x0000000000000000,0x0000000000000000,0x00001a0000043e00\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000044900,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a0000045400,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000045f00,0x0000000000000000,0x0000000000000000,0x00001a0000046a00\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000047500,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a0000048000,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000048b00,0x0000000000000000,0x0000000000000000,0x00001a0000049600\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a000004a100,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a000004ac00,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a000004b700,0x0000000000000000,0x0000000000000000,0x00001a000004c200\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a000004cd00,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a000004d800,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a000004e300,0x0000000000000000,0x0000000000000000,0x00001a000004ee00\n"
".quad 0x0000000000000000,0x0000000000000000,0x8c0011000004f900,0x0000000000000000\n"
".quad 0x0000000000000400,0x8c0011000004fe00,0x0000000000000400,0x0000000000000400\n"
".quad 0x00440400005de400,0x0000009800dc0428,0x00000088011c042c,0x0000009c001c042c\n"
".quad 0x0000008c009c042c,0x00000094015c042c,0x00000084019c042c,0x0840003030dca32c\n"
".quad 0x04400040001ca320,0x0c400020509ca320,0x00000010019de220,0x06c00c00001ca318\n"
".quad 0x04400100009c0320,0x00c00080201c2320,0x00c0007820dc0358,0x0d800080211c0358\n"
".quad 0x0000000c00dc4320,0x00400090315c4340,0x0d8000a0209c0348,0x00000000401c8520\n"
".quad 0x004000b030dc4384,0x00000000201c8548,0x00000000001de794,0x0000000000000080\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x080a040000040100,0x2800200000006600,0x0c17040028190300,0x2000040000000000\n"
".quad 0x0c17040021f00000,0x1800030000000000,0x0c17040011f00000,0x1000020000000000\n"
".quad 0x0c17040021f00000,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x005de40021f00000,0x001c042800440400,0x009c042c00000098,0x00dc042c00000088\n"
".quad 0x011c042c00000094,0x001ca32c00000084,0x309ca32004400030,0x01dc232008400020\n"
".quad 0x21dc23188ec00800,0x009c031880c00c00,0x00a1e720044000a0,0x20c0234000000780\n"
".quad 0x2140035800c00080,0x01c1e45800c00078,0x04c1e42800400080,0x0281e228004000a0\n"
".quad 0xf0000018fe000000,0x30c043307e0000ff,0x2080034000000014,0x0101e4200fc00010\n"
".quad 0x32400328004000b0,0x0142005800c00055,0x30c0433014cff000,0x4481634800400090\n"
".quad 0x3380034000000024,0x5100022005c02001,0x0181e230fb8e38e4,0xf1c0001901000000\n"
".quad 0x33c0433014d01003,0x2100854800000048,0x3400039400000000,0x02c1e2201dc02001\n"
".quad 0x6200001a00000000,0xf1c0003014e00000,0xf18000300e0000ff,0xf440433014f01003\n"
".quad 0xb200004800000048,0x0102003010e00000,0x328003300ecff000,0xf140002021c02001\n"
".quad 0x018200300c0000ff,0x41c0023010cff000,0x12c04330f78e38e4,0x3200034800000049\n"
".quad 0xe1c0852015c02001,0x3080049400000000,0x01c0851000000019,0xb240439400000001\n"
".quad 0x3180034800000048,0x0301e22011c02001,0x0341e21871ee3470,0x01420018fe71c71c\n"
".quad 0x91c043300acff000,0x2080014800000048,0x3380035000000030,0x500002200dc02001\n"
".quad 0x31000430f78e38e4,0xa400041000000011,0x73c0431000000009,0x3080034800000048\n"
".quad 0x410001201dc02001,0xa000855000000030,0xf0c0439400000000,0x3300034800000048\n"
".quad 0xa140042005c02001,0x8000851000000011,0x3340439400000000,0x6140854800000048\n"
".quad 0xe140859400000000,0x2400859400000000,0xc140859400000000,0x001de79400000000\n"
".quad 0x0000008000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x080a040000000000,0x1000200000005100\n"
".quad 0x0c17040010190300,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x080d040021f00000,0x0000010001000c00,0x00440400005de400,0x0000009800dc0428\n"
".quad 0x00000088011c042c,0x00000094001c042c,0x00000084009c042c,0x08400030365ca32c\n"
".quad 0xfa000000019de220,0x04400020059ca318,0x8ec0001191dc2320,0x00c00801951c0318\n"
".quad 0x00fffff1611c0348,0x0000005920de0448,0x00c04001915c0318,0x20c00bdc41dc0348\n"
".quad 0x00000065269e041a,0x2c4000e1411c0318,0x00c0100194dc0320,0x0c800004375c0048\n"
".quad 0x2c4000e050dc0330,0x004000a0009de420,0x0c800015a71c0028,0x00c00080415c2330\n"
".quad 0x00c0007841dc0358,0x2c4000e1319c0358,0x00c01801949c0320,0x05c00010411c0348\n"
".quad 0x0000001c515c4320,0x00c0008061dc2340,0x00c00078625c0358,0x2c4000e1221c0358\n"
".quad 0x00c0200195dc0320,0x004000b0515c4348,0x05c00010619c0348,0x0000002471dc4320\n"
".quad 0x00c00080825c2340,0x00c0007882dc0358,0x2c4000e1729c0358,0x00c02801955c0320\n"
".quad 0x004000b071dc4348,0x05c00010821c0348,0x0000002c925c4320,0x00c00080a2dc2340\n"
".quad 0x00c00078a35c0358,0x2c4000e1531c0358,0x00c03001961c0320,0x004000b0925c4348\n"
".quad 0x05c00010a29c0348,0x00000034b2dc4320,0x00c00080c35c2340,0x00c00078c3dc0358\n"
".quad 0x2c4000e1839c0358,0x00c03801901c0320,0x004000b0b2dc4348,0x05c00010c31c0348\n"
".quad 0x0000003cd35c4320,0x00c00080e3dc2340,0x00c00078e45c0358,0x2c4000e0041c0358\n"
".quad 0x004000b0d35c4320,0x05c00010e39c0348,0x00000044f3dc4320,0x00c0008107dc2340\n"
".quad 0x00c00079081c0358,0x004000b0f3dc4358,0x00f0eff1c45c0048,0x05c00011041c0350\n"
".quad 0x00000081f81c4320,0x00f0fff1d79c0040,0x00c00080385c2350,0x00c00078389c0358\n"
".quad 0x0000004517dc0058,0x004000b2045c4358,0x05c00010309c0348,0x0000008a10dc4320\n"
".quad 0x3e000079e79c0040,0x20c007ed93dc2330,0x2c4000e196dc031a,0x004000b030dc4320\n"
".quad 0x8ed0a001e1dc0048,0x00001e000005e720,0x00fffffd611c0340,0x00cfc001a1dc0048\n"
".quad 0x00000011211e0450,0x0000001c025de418,0x00cfc000421c0028,0x00c00005611c0350\n"
".quad 0x104000fc871c8648,0x00000011211e0480,0x00fffffd915c0318,0x00cfc000419c0048\n"
".quad 0x104101fc669c8650,0x00000015215e0480,0x00cfc000515c0018,0x00000014025de450\n"
".quad 0x104202fc839c8628,0x00c0000591dc0380,0x0000001d21de0448,0x00cfc000725c0018\n"
".quad 0x104505fc83dc8650,0x0000002401dde480,0x104404fc681c8628,0x00000018011de480\n"
".quad 0x104303fc479c8628,0x00c00ffd911c0380,0x00c00081b19c2348,0x00c00079b1dc0358\n"
".quad 0x0040008002dde458,0x00c02005915c0328,0x2c4000e0411c0348,0x0000001c61dc4320\n"
".quad 0x17c00011b19c0340,0x2c4000e0521c0320,0x00c00080415c2320,0x00c00078425c0358\n"
".quad 0x0040009071dc4358,0x17c00010411c0348,0x00000024515c4320,0x00c00080825c2340\n"
".quad 0x00c00078829c0358,0x00400090515c4358,0x17c00010821c0348,0x00000028925c4320\n"
".quad 0x0000000067dc8540,0x0000000046dc8584,0x00400090925c4384,0x00000000875c8548\n"
".quad 0x000012600001e784,0x00000071f19c0040,0x00000069c11d0050,0x00000075b15d0050\n"
".quad 0x0000006c619c0050,0x00000038411c0050,0x00000038515c0050,0x00000068619c0050\n"
".quad 0x00000078411d0050,0x00000078515c0050,0x00000074619c0050,0x00000079329c0450\n"
".quad 0x00000080411d0010,0x00000038619c0050,0x00000080515d0050,0x00000081341c0450\n"
".quad 0x00000078679c0010,0x0000003c491c0050,0x0000003c589d0050,0x00000081e81c0050\n"
".quad 0x0000003d331c0450,0x0000008a419d0010,0x0000003e08dc0050,0x0000008a415f0050\n"
".quad 0x0000008a21dc0050,0x00d0240063dc0058,0x46d01000699c0058,0x00000092211d0030\n"
".quad 0x00d02400581c0050,0x46d01000585c0058,0x0e000092479c0030,0x4c000018f99c0030\n"
".quad 0x0000008a495c0030,0x00d0240041dc0050,0x46d01000419c0058,0x42000016081c0030\n"
".quad 0x4ccff001e15e0030,0x00d0240253dc0030,0x46d01002599c0058,0x0c000010785c0030\n"
".quad 0x40cff001e81e0030,0x71ee3470021de230,0xfe71c71c025de218,0x00000015311c0418\n"
".quad 0x4c000094f95c0010,0x42cff001e99e0030,0x00000039319c0430,0x00000081381c0410\n"
".quad 0x18000020439e0110,0x004000c1311c0420,0x20000022081e0110,0x4acff001e95e0020\n"
".quad 0x18000038439e0130,0x00000099331c0420,0x00000095399c0410,0x2c4000e19a1c0310\n"
".quad 0x20000080441e0120,0x00d02402495c0020,0x46d01002465c0058,0x46d01002481e0030\n"
".quad 0x14000020c31e0130,0x32000092565c0020,0x0c000022621e0130,0x40000092581c0020\n"
".quad 0x00d02402299c0030,0x46d01002285c0058,0x46d01002291e0030,0x2c4000e13a5c0330\n"
".quad 0x4200008a685c0020,0x4800008a695c0030,0x00c00082889c2330,0x00c0007a891c0358\n"
".quad 0x46cff001e8de0058,0x2c4000e129dc0330,0x0000009224dc4320,0x004000a0089de440\n"
".quad 0x2c4000e1799c0328,0x3e40002635dc0020,0x45c00012849c0330,0x2c4000e158dc0320\n"
".quad 0x2c4000e1451c0320,0x004000b134dc4320,0x3e4000c1755e0048,0x2c4000e1891c0330\n"
".quad 0x00c0008145dc2320,0x00000001255c8558,0x00c00079461c0394,0x2c4000e0001c0358\n"
".quad 0x45c00011451c0320,0x00000061759c4320,0x00c0008294dc2340,0x00c0007a95dc0358\n"
".quad 0x004000b1655c4358,0x45c00012949c0348,0x0000005d34dc4320,0x00c0008275dc2340\n"
".quad 0x00c0007a761c0358,0x004000b134dc4358,0x45c00012759c0348,0x0000006175dc4320\n"
".quad 0x32cff001e65e0040,0x40cff001e7de0030,0x42cff001e9de0030,0x4acff001e95e0030\n"
".quad 0x00c000826a1c2330,0x00c0007a679c0358,0x004000b175dc4358,0x38400035965e0048\n"
".quad 0x45c00012661c0330,0x0000007a879c4320,0x00c00082381c2340,0x00c0007a385c0358\n"
".quad 0x384000c1971e0058,0x004000b1e65c4330,0x34400035f7de0048,0x45c00012379c0330\n"
".quad 0x00000086081c4320,0x00c00082485c2340,0x00c0007a48dc0358,0x344000c1f69e0058\n"
".quad 0x004000b207dc4330,0x45c00012481c0348,0x0000008e185c4320,0x00c0008008dc2340\n"
".quad 0x00c00078091c0358,0x004000b2185c4358,0x45c00010089c0348,0x36400036701e0020\n"
".quad 0x0000009238dc4330,0x14000030429e0140,0x3a400036591e0020,0x0c000020411e0130\n"
".quad 0x364000c006de0020,0x3a4000c2401e0030,0x00000001471c8530,0x0000000126dc8594\n"
".quad 0x00000011a11c0494,0x00000029a19c0410,0x00000001669c8510,0x004000b238dc4394\n"
".quad 0x00000041a1dc0448,0x00000001801c8510,0x00000039a21c0494,0x00000001e11c8510\n"
".quad 0x00000002019c8594,0x0000000221dc8594,0x00000000221c8594,0x00001580001de794\n"
".quad 0x2c4000e1411c0340,0x004000a0001de420,0x2c4000e1315c0328,0x00c0008041dc2320\n"
".quad 0x00c00078421c0358,0x01c00010429c0358,0x00c00078525c0320,0x00000020711c4358\n"
".quad 0x00c0008051dc2340,0x2c4000e1219c0358,0x004000b042dc4320,0x01c00010521c0348\n"
".quad 0x00000024711c4320,0x00c00080615c2340,0x00c0007861dc0358,0x2c4000e1735c0358\n"
".quad 0x004000b0425c4320,0x01c00010619c0348,0x0000001c511c4320,0x00c00080d15c2340\n"
".quad 0x00c00078d4dc0358,0x2c4000e1531c0358,0x004000b041dc4320,0x01c00010d11c0348\n"
".quad 0x0000004c515c4320,0x00c00080c35c2340,0x00c00078c4dc0358,0x2c4000e1849c0358\n"
".quad 0x004000b0515c4320,0x01c00010c31c0348,0x0000004cd35c4320,0x00c0008124dc2340\n"
".quad 0x00c00079251c0358,0x004000b0d35c4358,0x01c00011249c0348,0x00000051301c4320\n"
".quad 0x00000000a69c8540,0x00000000875c8594,0x004000b004dc4394,0x00000000671c8548\n"
".quad 0x0000000046dc8594,0x00000000c81c8594,0x0000000123dc8594,0x00000001039c8594\n"
".quad 0x00000000279c8594,0x00000fc0001de794,0x00cfc001d49c0040,0x00cfc001c4dc0050\n"
".quad 0x104606fd29dc8650,0x104707fd261c8680,0x104808fd289c8680,0x104909fd281c8680\n"
".quad 0x104a0afd28dc8680,0x104b0bfd25dc8680,0x104c0cfd279c8680,0x104d0dfd27dc8680\n"
".quad 0x104e0efd249c8680,0x00000062701c0080,0x00400100069de450,0x2c4000e1965c0328\n"
".quad 0x00000088051c0020,0x00c00079959c0350,0x00000081801d0058,0x00000081451c0050\n"
".quad 0x0000008e24dd0050,0x0000008d451c0050,0x0000005c001c0050,0x0000005d34dc0050\n"
".quad 0x0000005d451c0050,0x00000078001d0050,0x0000007934dc0050,0x00000079451c0050\n"
".quad 0x00400101ea9c0050,0x0000007c001d0058,0x0000007d34dd0050,0x00000048085c0050\n"
".quad 0x00000049391d0050,0x0000007d401c0050,0x00400101271c0050,0x0000009214dd0058\n"
".quad 0x00000048099c0050,0x00000092401c0050,0x00d02401351c0058,0x4cd01001355c0058\n"
".quad 0x00000086195c0030,0x00000071371c0430,0x2a00004d401c0010,0x71ee3470051de230\n"
".quad 0xfe71c71c055de218,0x00cff00254de0018,0x00cfe001a01e0030,0x000000921a1f0050\n"
".quad 0x0000004d369c0450,0x00000001349c0410,0x00400101f7dc0010,0x00000051a69c0158\n"
".quad 0x38000069271c0150,0x00d02402869c0020,0x4cd0100286dc0058,0x00000071a71c0430\n"
".quad 0x360000a1a69c0010,0x0000007d3a1c0430,0x0000008647dd0010,0x34cff002569e0050\n"
".quad 0x00000069369c0430,0x00000051a69c0110,0x50000069269c0150,0x00d02401fa1c0020\n"
".quad 0x4cd01001fa5c0058,0x00000069a6dc0430,0x5200007e8a5c0010,0x52cff00257de0030\n"
".quad 0x0000007d3a1c0430,0x00000052879c0110,0x000000a93a1c0450,0x50000079279c0110\n"
".quad 0x000000921a1c0020,0x00000079a69c0450,0x00d02402875c0010,0x4cd010028a5c0058\n"
".quad 0x520000a1da5c0030,0x52cff002575e0030,0x000000753a1c0430,0x4ccff002575e0010\n"
".quad 0x00000052851c0130,0x004000a00a1de450,0x00c000819a5c2328,0xfb8e38e5d75c0258\n"
".quad 0x51c000119a1c0330,0x0000005a959c4320,0x00000074075c0040,0x00d02402165c0058\n"
".quad 0x4cd010021a5c0058,0x3a400102775c0030,0x5200008599dc0030,0x004000b16a5c4330\n"
".quad 0x00400101759c0048,0x4ecff002579e0058,0x00000002875c8530,0x4cd0100249dc0094\n"
".quad 0xf78e38e5e79c0230,0x00000059359c0430,0x0000007807dc0010,0x00d02402479c0058\n"
".quad 0x2c000051249c0158,0x3e400101861c0020,0x4cd0100217de0030,0x4cd01002499e0030\n"
".quad 0x4e000091e75c0030,0x3e00008597dc0030,0x4c000091e79c0030,0x3acff002565e0030\n"
".quad 0x3ecff002575e0030,0x3ccff002579e0030,0xf78e38e5965c0230,0xf78e38e5d75c0230\n"
".quad 0xf78e38e5e79c0230,0x00000064065c0030,0x00000074075c0058,0x00000078079c0058\n"
".quad 0x32400102201c0058,0x3a400102051c0030,0x3c400102355c0030,0x00000000461c8530\n"
".quad 0x00000049a49c0494,0x00000000601c8510,0x00000000851c8594,0x00000000a55c8594\n"
".quad 0x00000000c49c8594,0x00000000e69c8594,0x0000000106dc8594,0x00000000271c8594\n"
".quad 0x00000000001de794,0x0000000000000080,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0xcfd0000000000000,0xe38e39439fd00043,0x0802043de38e39be\n"
".quad 0x000004000000d400,0x0000b60008020400,0x0802040000000a00,0x000003000000d300\n"
".quad 0x0000b50008020400,0x0802040000000900,0x000002000000d200,0x0000b40008020400\n"
".quad 0x0802040000000800,0x000007000000b300,0x0000d00008020400,0x0802040000000100\n"
".quad 0x000006000000b200,0x0000ce0008020400,0x0802040000000000,0x00000e000000ba00\n"
".quad 0x0000b90008020400,0x0802040000000d00,0x00000c000000b800,0x0000d50008020400\n"
".quad 0x0802040000000500,0x00000b000000b700,0x00006f00080a0400,0x2419030024002000\n"
".quad 0x000000000c170400,0x11f0000020000400,0x000000000c170400,0x21f0000018000300\n"
".quad 0x000000000c170400,0x11f0000010000200,0x000000000c170400,0x21f0000008000100\n"
".quad 0x000000000c170400,0x21f0000000000000,0x02001800080d0400,0x005de40000000200\n"
".quad 0x001c042800440400,0x009c042c00000094,0x00dc042c00000084,0x011c042c00000098\n"
".quad 0x049ca32c00000088,0xffdc852004400020,0x34dca3c900001003,0x021de42008400030\n"
".quad 0x301c0328000000fc,0x0fdc0320244000e1,0xffdc04207e000004,0x31dc2350ee0000ff\n"
".quad 0x209c031a0ec00501,0x21dc034800fff97d,0x31dc231880c002f8,0x21dc231880c006fd\n"
".quad 0x0001e71a20c00ffd,0x309c038000000000,0x20dc034800fffffd,0x211e044800fffffd\n"
".quad 0x209e041800000009,0x415c00180000000d,0x219c005000cfc000,0x209c035000cfc000\n"
".quad 0x01dde44800c00005,0x63dc862800000014,0x209e0480104202fc,0x211c001800000009\n"
".quad 0x431c865000cfc000,0x225e0480104303fc,0x90dc00180000004d,0x01dde45000cfc000\n"
".quad 0x645c86280000000c,0x315c0380104000fc,0x215e044800c00005,0x51dc001800000015\n"
".quad 0x665c865000cfc000,0x015de480104505fc,0x435c86280000001c,0x009de480104404fc\n"
".quad 0x241c862800000010,0x015c2380104101fc,0x019c035800c00080,0x30dc035800c00078\n"
".quad 0x009de44800c017fd,0x515c432800400080,0x30dc034000000018,0x311c0320244000e0\n"
".quad 0x019c034800c03005,0x329c232005c00010,0x32dc035800c00080,0x401c035800c00078\n"
".quad 0x51dc4320244000e0,0x311c034800400090,0xa0dc432005c00010,0x029c23400000002c\n"
".quad 0x02dc035800c00080,0x315c435800c00078,0x009c034800400090,0xa01c432005c00010\n"
".quad 0x229e04400000002c,0x661c851800000049,0x00dc438400000000,0xa1dc004800400090\n"
".quad 0x439c85208e400004,0x201c858400000000,0x0000078400000000,0x0001e760000002c0\n"
".quad 0x209e034000000280,0x209e044800c01001,0x21dc001800000009,0x0001e7208e400014\n"
".quad 0x309e0340000001e0,0x209e044800c00c01,0x21dc001800000009,0x0001e7208e400014\n"
".quad 0x91dc004000000140,0x0001e7208e400004,0x90dc0040000000e0,0xa09c005000f0eff0\n"
".quad 0x30dc005000f0fff0,0x209c00580000000c,0x21dc003006000008,0x0021f4208ed0a000\n"
".quad 0x021df24000000000,0x021df21800000028,0x021df21800000030,0x021df2180000002c\n"
".quad 0x021df21800000008,0x309c03180000000c,0x015de44800c06001,0x81dc2328004000a0\n"
".quad 0x209c03190ec00004,0x00000720244000e0,0x20dc236000002780,0x211c035800c00080\n"
".quad 0x209c035800c00078,0x30dc43200bc00010,0x30dc434000000010,0x0001e748004000b0\n"
".quad 0x81dc234000000040,0x0001e71a8ec00028,0x81dc234000000b00,0x0081e7190ec00028\n"
".quad 0x01200440000000a0,0x4122032c00000084,0x4fe0856000c00008,0x4fe085c900000000\n"
".quad 0x00a1e7c900000800,0x11400040000002e0,0x0240005000000045,0xe200005000000000\n"
".quad 0xf180005000000038,0x014000500000003c,0x824100300af00001,0x91c0005000000024\n"
".quad 0x5140005000000065,0x9280005000000018,0xc200005000000018,0x5180005000000030\n"
".quad 0xa1c100500000001c,0xd24000500000001c,0x0140045000000034,0x6181002c00000084\n"
".quad 0x71c0005000000020,0x0101e25000000020,0x5142031800000004,0x6181006000c00008\n"
".quad 0x71c1005000000024,0xf100855000000024,0x518085c900001003,0x51c085c900000000\n"
".quad 0x311c03c900000800,0x315c034800c00c01,0x31dc034800c01801,0x419c034800c02401\n"
".quad 0x511c0320244000e0,0x755c0320244000e0,0x615c2320244000e0,0x61dc035800c00080\n"
".quad 0x059de45800c00078,0x321c0328004000a0,0x429c234800c03001,0x42dc035800c00080\n"
".quad 0x525c235800c00078,0x51dc435800c00081,0x551c03400000001c,0x619c035800c00079\n"
".quad 0xa15c43202dc00010,0x821c03400000002c,0x329c0320244000e0,0x951c434800c03c01\n"
".quad 0x71dc434000000050,0x825c2348004000b0,0x82dc035800c00080,0xa29c035800c00078\n"
".quad 0x641c8520244000e0,0x411c039400000000,0x925c43202dc00010,0xa2dc23400000002c\n"
".quad 0xa5dc035800c00080,0x515c435800c00078,0x519c0348004000b0,0xb2dc43202dc00011\n"
".quad 0x35dc03400000005c,0x41dc434800c04801,0x821c0348004000b1,0x741c03202dc00010\n"
".quad 0x34dc0320244000e1,0x925c434800c05401,0x051c2348004000b0,0x055c035800c00081\n"
".quad 0xa29c035800c00079,0x349c03202dc00010,0x455c4320244000e1,0xb2dc434000000055\n"
".quad 0x051c0348004000b0,0x241c23202dc00011,0x24dc035800c00081,0x555c435800c00079\n"
".quad 0x249c0348004000b1,0x041c43202dc00011,0x401c85400000004d,0x645c859400000000\n"
".quad 0x04dc439400000000,0x839c8548004000b1,0xa35c859400000000,0x465c859400000000\n"
".quad 0x23dc859400000001,0x231c959400000001,0x009c049400000000,0x81dc232c00000084\n"
".quad 0x000007190ec00008,0x209e0360000005c0,0x2fdc856000c00008,0x2fdc85c900000000\n"
".quad 0x0001e7c900000800,0x81dc234000000240,0x0021f4190ec0000c,0x31dc234000000000\n"
".quad 0x000007190e0000fd,0x0001e760000000e0,0x31dc234000000080,0x0021f4190ec00bfd\n"
".quad 0x035de44000000000,0x001df42800000030,0x031de42800000038,0x039df42800000034\n"
".quad 0xe09d002800000000,0x011de25000000000,0x20de0018f68f5c28,0x209c00301acfc000\n"
".quad 0x445c003018cfc000,0x43dc003020400024,0x465c103006400034,0x31dc233004400034\n"
".quad 0x000007190e0000fd,0x0001e760000000e0,0x31dc234000000080,0x0021f4190ec00bfd\n"
".quad 0x065de44000000000,0x001df4280000003c,0x03dde42800000038,0x039df42800000064\n"
".quad 0x809c002800000000,0x10dc005000000039,0xf11c005000000045,0x209c00500000003c\n"
".quad 0x209c005000000000,0x90dc00500000000c,0x209c005000000065,0xe11d005000000010\n"
".quad 0x209c005000000000,0x40dc00500000000c,0x411e00301ecfc000,0x209c003032cfc000\n"
".quad 0x235e005000efe000,0x231e003006400034,0x241c103008400034,0x81dc233022400044\n"
".quad 0x000007190ec0002c,0x0001e76000000120,0x81dc2340000000a0,0x0021f4190ec00030\n"
".quad 0x031de44000000000,0x03dde42800000034,0x039df42800000064,0x035de42800000000\n"
".quad 0x065de42800000030,0x001df4280000003c,0x809c002800000038,0xe0dd005000000045\n"
".quad 0x029de25000000000,0x211c001871ee3470,0x109d005000000038,0x30dc005000000041\n"
".quad 0x411c00500000003c,0x209c005000000040,0x30dc00500000003c,0x411c005000000030\n"
".quad 0x209d005000000000,0x30dd005000000030,0x411c005000000034,0x209d00500000003c\n"
".quad 0x355d005000000034,0x411c005000000064,0x251c005000000030,0x02dde25000000064\n"
".quad 0x409c0018fe71c71c,0x40dd005000000034,0x25dc005000000055,0x509c005000000064\n"
".quad 0x311c005800000055,0x315c005800d02400,0x459c00302ed01000,0x409c003004000051\n"
".quad 0x311c04300a00000c,0x465f001000000065,0x609e005000000055,0x309c043004cff001\n"
".quad 0x219e011000000009,0x309c042008000028,0x221e0110004000c1,0x911c002008000018\n"
".quad 0x915c005800d02401,0x411c00302ed01001,0xa65c04300a000064,0x619e001000000021\n"
".quad 0x311c043008cff001,0x535d001000000035,0x319c045000000051,0x619e011000000019\n"
".quad 0x219e012008000028,0xd11c002008000018,0xd15c005800d02400,0xa19c04302ed01000\n"
".quad 0x415c001000000019,0x635e00300a000034,0x311c04300acff001,0x331c041000000031\n"
".quad 0xc31e011000000035,0x211e012008000028,0x431c002008000030,0xa11c045000000055\n"
".quad 0xc21c001000000011,0xc25c005800d02400,0x825c00302ed01000,0x631e003012000030\n"
".quad 0x321c043012cff001,0x43dc00100000003d,0x331c04302ed01001,0xc29e011000000031\n"
".quad 0x331c032010000028,0x209e0120244000e1,0x621e002010000028,0xc25c23302ecff001\n"
".quad 0xc2dc035800c00080,0x821c005800c00078,0x029de43030400054,0x925c4328004000a0\n"
".quad 0x42dc00400000002c,0x835e005800d02401,0xc21c0330304000c0,0x331c032015c00010\n"
".quad 0xb3dc004800c00c01,0x925c43301e000050,0xc31c0348004000b0,0x63de0020244000e0\n"
".quad 0x835c85301ecff001,0xc61c239400000000,0xc69c035800c00080,0xf3de005800c00078\n"
".quad 0xc21c033022400064,0x825c432015c00010,0xf35e004000000069,0x531c0030224000c0\n"
".quad 0x545c005800d02401,0x33dc03302ed01001,0x925c434800c01801,0xc45c0048004000b0\n"
".quad 0xf3dc033022000054,0x835c8520244000e0,0x645e009400000000,0xf61c233022cff001\n"
".quad 0xf69c035800c00080,0x125e005800c00078,0xf21c03301c400065,0x845c432015c00010\n"
".quad 0x939e004000000069,0x335c03301c4000c0,0x125c434800c02401,0x33dc0348004000b1\n"
".quad 0xd61c034800c03001,0x839c8520244000e0,0xf35c039400000000,0x845c2320244000e0\n"
".quad 0xa09c045800c00081,0x339c031000000009,0xd3dc234800c03c01,0xd69c035800c00080\n"
".quad 0x421e005800c00078,0xe39c03302ed01001,0x825c0320244000e0,0xf69c435800c00079\n"
".quad 0xb21c004000000068,0xe2dc233010000050,0xe3dc035800c00080,0x125c435800c00078\n"
".quad 0x345c034000000025,0xb3dc434800c04801,0x52de00400000003c,0x145c03302ed01001\n"
".quad 0x621e0020244000e1,0xc2dc003010cff001,0x131c233016000054,0x15dc035800c00081\n"
".quad 0x62de005800c00079,0xc5dc433016cff001,0x831e00400000005c,0x821c033020400064\n"
".quad 0xb2de002015c00011,0xc51e003000400064,0x925c4330204000c0,0xd31c0348004000b0\n"
".quad 0x341c032015c00010,0x34dc034800c05401,0xa35c434800c06001,0xe39c0348004000b1\n"
".quad 0x055c032015c00010,0x361c0320244000e1,0xf3dc4320244000e1,0x141c0348004000b0\n"
".quad 0x559c232015c00011,0x569c035800c00081,0x745c435800c00079,0x549c0348004000b1\n"
".quad 0x64dc432015c00011,0x855c234000000069,0x859c035800c00081,0x34dc435800c00079\n"
".quad 0xb01e0048004000b1,0x829c0330004000c0,0x559c432015c00011,0x851c854000000059\n"
".quad 0xc01c859400000000,0x62dc439400000000,0xe09c8548004000b1,0x011c859400000000\n"
".quad 0x219c859400000001,0xa65c959400000001,0xffdc049400000000,0x001de750ee0000ff\n"
".quad 0x0000008000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x8ccccd3dcccccd00\n"
".quad 0x2aaaab3f2aaaab3f,0xe38e39bf2aaaab3e,0x0802043de38e39be,0x000001000000b500\n"
".quad 0x0000b30008020400,0x0802040000000000,0x000005000000ba00,0x0000b90008020400\n"
".quad 0x0802040000000400,0x000003000000b800,0x0000b70008020400,0x080a040000000200\n"
".quad 0x3400200000007b00,0x0c17040034190300,0x3000060000000000,0x0c17040011f00000\n"
".quad 0x2800050000000000,0x0c17040021f00000,0x2000040000000000,0x0c17040021f00000\n"
".quad 0x1800030000000000,0x0c17040021f00000,0x1000020000000000,0x0c17040011f00000\n"
".quad 0x0800010000000000,0x0c17040021f00000,0x0000000000000000,0x080d040021f00000\n"
".quad 0x000007000a007800,0x00440400005de400,0x0000009800dc0428,0x00000088011c042c\n"
".quad 0x00000094001c042c,0x00000084009c042c,0x08400030365ca32c,0xfa00000001dde220\n"
".quad 0x04400020059ca318,0x00000065211e0420,0x00c00801951c0318,0x8ec0001191dc2348\n"
".quad 0x0000005920de0418,0x00fffff1615c0318,0x0e800014471c0048,0x00c04001919c0330\n"
".quad 0x2c4000e1411c0348,0x00c0100194dc0320,0x0e80000436dc0048,0x20c00bdc51dc0330\n"
".quad 0x004000a0009de41a,0x2c4000e060dc0328,0x00c00080415c2320,0x00c0007841dc0358\n"
".quad 0x2c4000e1319c0358,0x00c01801949c0320,0x05c00010411c0348,0x0000001c515c4320\n"
".quad 0x00c0008061dc2340,0x00c00078625c0358,0x2c4000e1221c0358,0x00c0200195dc0320\n"
".quad 0x004000b0515c4348,0x05c00010619c0348,0x0000002471dc4320,0x00c00080825c2340\n"
".quad 0x00c0007882dc0358,0x2c4000e1729c0358,0x00c02801955c0320,0x004000b071dc4348\n"
".quad 0x05c00010821c0348,0x0000002c925c4320,0x00c00080a2dc2340,0x00c00078a35c0358\n"
".quad 0x2c4000e1531c0358,0x00c03001961c0320,0x004000b0925c4348,0x05c00010a29c0348\n"
".quad 0x00000034b2dc4320,0x00c00080c35c2340,0x00c00078c3dc0358,0x2c4000e1839c0358\n"
".quad 0x00c03801901c0320,0x004000b0b2dc4348,0x05c00010c31c0348,0x0000003cd35c4320\n"
".quad 0x00c00080e3dc2340,0x00c00078e45c0358,0x2c4000e0041c0358,0x004000b0d35c4320\n"
".quad 0x05c00010e39c0348,0x00000044f3dc4320,0x00c00081079c2340,0x00c0007907dc0358\n"
".quad 0x004000b0f3dc4358,0x00f0eff1c45c0048,0x05c00011041c0350,0x0000007de7dc4320\n"
".quad 0x00f0fff1b75c0040,0x00c00080381c2350,0x00c00078385c0358,0x00000045179c0058\n"
".quad 0x004000b1f45c4358,0x05c00010309c0348,0x0000008600dc4320,0x3c000075d75c0040\n"
".quad 0x20c007ed93dc2330,0x2c4000e1969c031a,0x004000b030dc4320,0x8ed0a001d1dc0048\n"
".quad 0x000021200005e720,0x00c00081a29c2340,0x00c00079a35c0358,0x00c00005615c0358\n"
".quad 0x00c02ffd919c0348,0x00c0380592dc0348,0x0040008006dde448,0x00000034a3dc4328\n"
".quad 0x00fffffd611c0340,0x00c04005931c0348,0x0a4000e0635c0348,0x00c00ffd91dc0320\n"
".quad 0x00c027fd925c0348,0x0a4000e0b19c0348,0x37c00011a29c0320,0x0a4000e1215c0320\n"
".quad 0x084000e0c69c0320,0x00c02005921c0320,0x084000e0971c0348,0x084000e1431c0320\n"
".quad 0x2c4000e0739c0320,0x00c00080511c2320,0x00c0007851dc0358,0x2c4000e0875c0358\n"
".quad 0x00400090f2dc4320,0x37c00010521c0348,0x0000001c411c4320,0x00c00080d15c2340\n"
".quad 0x00c00078d1dc0358,0x00400090425c4358,0x37c00010d11c0348,0x0000001c515c4320\n"
".quad 0x00c0008061dc2340,0x00c00078635c0358,0x00400090515c4358,0x37c00010619c0348\n"
".quad 0x0000003471dc4320,0x00c00080c35c2340,0x00c00078c3dc0358,0x0040009071dc4358\n"
".quad 0x37c00010c31c0348,0x0000003cd35c4320,0x00c00080e3dc2340,0x00c00078e79c0358\n"
".quad 0x00400090d35c4358,0x37c00010e39c0348,0x00000078f3dc4320,0x00c00081d79c2340\n"
".quad 0x00c00079d7dc0358,0x00400090f3dc4358,0x37c00011d81c0348,0x0000007de75c4320\n"
".quad 0x00c00081c79c2340,0x00c00079c7dc0358,0x00400091d85c4358,0x37c00011c89c0348\n"
".quad 0x0000007de71c4320,0x00c00081a75c2340,0x00c00079a79c0358,0x00400091c8dc4358\n"
".quad 0x37c00011a91c0348,0x00000079d69c4320,0x00000000411c8540,0x00000000a7dc8584\n"
".quad 0x00400091a95c4384,0x00000000869c8548,0x00000000619c8584,0x00000000c71c8584\n"
".quad 0x00000000e6dc8584,0x00000002075c8584,0x00000002299c8584,0x00000002415c8584\n"
".quad 0x000012600001e784,0x00000071f2dc0040,0x00000069c1dd0050,0x00000075b29d0050\n"
".quad 0x0000006cb2dc0050,0x0000009871dc0050,0x00000098a29c0050,0x00000068b2dc0050\n"
".quad 0x0000001071dd0050,0x00000010a29c0050,0x00000074b2dc0050,0x0000001871dd0050\n"
".quad 0x00000018a29d0050,0x00000098b39c0050,0x00000019341c0450,0x00000014791c0010\n"
".quad 0x00000010e39c0050,0x00000014a89d0050,0x00000011329c0450,0x00000018e19c0010\n"
".quad 0x0000008a43dd0050,0x0000008a41df0050,0x0000001468dc0050,0x0000008a279c0050\n"
".quad 0x00d02400f19c0058,0x46d01000f95c0058,0x00000092211d0030,0x00d02400781c0050\n"
".quad 0x46d01000785c0058,0x3c000092479c0030,0x4a00003c695c0030,0x00000015331c0430\n"
".quad 0x00d02400415c0010,0x46d01000419c0058,0x4200001e081c0030,0x0000008a439c0030\n"
".quad 0x4acff001e1de0050,0x0c000010585c0030,0x00d02400e3dc0030,0x46d01000e95c0058\n"
".quad 0x0000001d311c0430,0x40cff001e81e0010,0x71ee3470021de230,0xfe71c71c025de218\n"
".quad 0x00000099319c0418,0x42cff001e99e0010,0x4a000038f95c0030,0x00000081381c0430\n"
".quad 0x18000020439e0110,0x004000c1311c0420,0x20000022081e0110,0x4acff001e95e0020\n"
".quad 0x18000038439e0130,0x00000099331c0420,0x00000095399c0410,0x2c4000e19a1c0310\n"
".quad 0x20000080441e0120,0x00d02402495c0020,0x46d01002465c0058,0x46d01002481e0030\n"
".quad 0x14000020c31e0130,0x32000092565c0020,0x0c000022621e0130,0x40000092581c0020\n"
".quad 0x00d02402299c0030,0x46d01002285c0058,0x46d01002291e0030,0x2c4000e13a5c0330\n"
".quad 0x4200008a685c0020,0x4800008a695c0030,0x00c00082889c2330,0x00c0007a891c0358\n"
".quad 0x46cff001e8de0058,0x2c4000e129dc0330,0x0000009224dc4320,0x004000a0089de440\n"
".quad 0x2c4000e1799c0328,0x3e40002635dc0020,0x45c00012849c0330,0x2c4000e158dc0320\n"
".quad 0x2c4000e1451c0320,0x004000b134dc4320,0x3e4000c1755e0048,0x2c4000e1891c0330\n"
".quad 0x00c0008145dc2320,0x00000001255c8558,0x00c00079461c0394,0x2c4000e0001c0358\n"
".quad 0x45c00011451c0320,0x00000061759c4320,0x00c0008294dc2340,0x00c0007a95dc0358\n"
".quad 0x004000b1655c4358,0x45c00012949c0348,0x0000005d34dc4320,0x00c0008275dc2340\n"
".quad 0x00c0007a761c0358,0x004000b134dc4358,0x45c00012759c0348,0x0000006175dc4320\n"
".quad 0x32cff001e65e0040,0x40cff001e7de0030,0x42cff001e9de0030,0x4acff001e95e0030\n"
".quad 0x00c000826a1c2330,0x00c0007a679c0358,0x004000b175dc4358,0x38400035965e0048\n"
".quad 0x45c00012661c0330,0x0000007a879c4320,0x00c00082381c2340,0x00c0007a385c0358\n"
".quad 0x384000c1971e0058,0x004000b1e65c4330,0x34400035f7de0048,0x45c00012379c0330\n"
".quad 0x00000086081c4320,0x00c00082485c2340,0x00c0007a48dc0358,0x344000c1f69e0058\n"
".quad 0x004000b207dc4330,0x45c00012481c0348,0x0000008e185c4320,0x00c0008008dc2340\n"
".quad 0x00c00078091c0358,0x004000b2185c4358,0x45c00010089c0348,0x36400036701e0020\n"
".quad 0x0000009238dc4330,0x14000030429e0140,0x3a400036591e0020,0x0c000020411e0130\n"
".quad 0x364000c006de0020,0x3a4000c2401e0030,0x00000001471c8530,0x0000000126dc8594\n"
".quad 0x00000011a11c0494,0x00000029a19c0410,0x00000001669c8510,0x004000b238dc4394\n"
".quad 0x00000041a1dc0448,0x00000001801c8510,0x00000039a21c0494,0x00000001e11c8510\n"
".quad 0x00000002019c8594,0x0000000221dc8594,0x00000000221c8594,0x00001580001de794\n"
".quad 0x2c4000e1421c0340,0x004000a0001de420,0x2c4000e1325c0328,0x00c0008082dc2320\n"
".quad 0x00c00078831c0358,0x01c00010839c0358,0x00c00078935c0320,0x00000030b21c4358\n"
".quad 0x00c0008092dc2340,0x2c4000e1229c0358,0x004000b083dc4320,0x01c00010931c0348\n"
".quad 0x00000034b21c4320,0x00c00080a25c2340,0x00c00078a2dc0358,0x2c4000e1749c0358\n"
".quad 0x004000b0835c4320,0x01c00010a29c0348,0x0000002c921c4320,0x00c00081225c2340\n"
".quad 0x00c0007924dc0358,0x2c4000e151dc0358,0x004000b082dc4320,0x01c00011221c0348\n"
".quad 0x0000004c925c4320,0x00c0008074dc2340,0x00c00078755c0358,0x004000b0925c4358\n"
".quad 0x2c4000e1851c0348,0x01c00010749c0320,0x0000005531dc4320,0x00c00081455c2340\n"
".quad 0x00c00079459c0358,0x004000b074dc4358,0x01c00011451c0348,0x00000059501c4320\n"
".quad 0x00000000e69c8540,0x00000000c75c8594,0x004000b0055c4394,0x00000000a71c8548\n"
".quad 0x0000000086dc8594,0x00000001219c8594,0x00000001415c8594,0x00000001099c8594\n"
".quad 0x00000000211c8594,0x00000fc0001de794,0x00cfc001b49c0040,0x00cfc001c4dc0050\n"
".quad 0x104000fd29dc8650,0x104101fd261c8680,0x104202fd289c8680,0x104303fd281c8680\n"
".quad 0x104404fd28dc8680,0x104505fd25dc8680,0x104606fd279c8680,0x104707fd27dc8680\n"
".quad 0x104808fd249c8680,0x00000062701c0080,0x00400100069de450,0x2c4000e1965c0328\n"
".quad 0x00000088051c0020,0x00c00079959c0350,0x00000081801d0058,0x00000081451c0050\n"
".quad 0x0000008e24dd0050,0x0000008d451c0050,0x0000005c001c0050,0x0000005d34dc0050\n"
".quad 0x0000005d451c0050,0x00000078001d0050,0x0000007934dc0050,0x00000079451c0050\n"
".quad 0x00400101ea9c0050,0x0000007c001d0058,0x0000007d34dd0050,0x00000048085c0050\n"
".quad 0x00000049391d0050,0x0000007d401c0050,0x00400101271c0050,0x0000009214dd0058\n"
".quad 0x00000048099c0050,0x00000092401c0050,0x00d02401351c0058,0x4cd01001355c0058\n"
".quad 0x00000086195c0030,0x00000071371c0430,0x2a00004d401c0010,0x71ee3470051de230\n"
".quad 0xfe71c71c055de218,0x00cff00254de0018,0x00cfe001a01e0030,0x000000921a1f0050\n"
".quad 0x0000004d369c0450,0x00000001349c0410,0x00400101f7dc0010,0x00000051a69c0158\n"
".quad 0x38000069271c0150,0x00d02402869c0020,0x4cd0100286dc0058,0x00000071a71c0430\n"
".quad 0x360000a1a69c0010,0x0000007d3a1c0430,0x0000008647dd0010,0x34cff002569e0050\n"
".quad 0x00000069369c0430,0x00000051a69c0110,0x50000069269c0150,0x00d02401fa1c0020\n"
".quad 0x4cd01001fa5c0058,0x00000069a6dc0430,0x5200007e8a5c0010,0x52cff00257de0030\n"
".quad 0x0000007d3a1c0430,0x00000052879c0110,0x000000a93a1c0450,0x50000079279c0110\n"
".quad 0x000000921a1c0020,0x00000079a69c0450,0x00d02402875c0010,0x4cd010028a5c0058\n"
".quad 0x520000a1da5c0030,0x52cff002575e0030,0x000000753a1c0430,0x4ccff002575e0010\n"
".quad 0x00000052851c0130,0x004000a00a1de450,0x00c000819a5c2328,0xfb8e38e5d75c0258\n"
".quad 0x51c000119a1c0330,0x0000005a959c4320,0x00000074075c0040,0x00d02402165c0058\n"
".quad 0x4cd010021a5c0058,0x3a400102775c0030,0x5200008599dc0030,0x004000b16a5c4330\n"
".quad 0x00400101759c0048,0x4ecff002579e0058,0x00000002875c8530,0x4cd0100249dc0094\n"
".quad 0xf78e38e5e79c0230,0x00000059359c0430,0x0000007807dc0010,0x00d02402479c0058\n"
".quad 0x2c000051249c0158,0x3e400101861c0020,0x4cd0100217de0030,0x4cd01002499e0030\n"
".quad 0x4e000091e75c0030,0x3e00008597dc0030,0x4c000091e79c0030,0x3acff002565e0030\n"
".quad 0x3ecff002575e0030,0x3ccff002579e0030,0xf78e38e5965c0230,0xf78e38e5d75c0230\n"
".quad 0xf78e38e5e79c0230,0x00000064065c0030,0x00000074075c0058,0x00000078079c0058\n"
".quad 0x32400102201c0058,0x3a400102051c0030,0x3c400102355c0030,0x00000000461c8530\n"
".quad 0x00000049a49c0494,0x00000000601c8510,0x00000000851c8594,0x00000000a55c8594\n"
".quad 0x00000000c49c8594,0x00000000e69c8594,0x0000000106dc8594,0x00000000271c8594\n"
".quad 0x00000000001de794,0x0000000000000080,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0xcfd0000000000000,0xe38e39439fd00043,0x0802043de38e39be\n"
".quad 0x000005000000c000,0x0000bf0008020400,0x0802040000000400,0x000003000000be00\n"
".quad 0x0000bd0008020400,0x0802040000000200,0x000001000000bc00,0x0000bb0008020400\n"
".quad 0x0802040000000000,0x000008000000c300,0x0000c20008020400,0x0802040000000700\n"
".quad 0x000006000000c100,0x00005500080a0400,0x2419030024002000,0x000000000c170400\n"
".quad 0x11f0000020000400,0x000000000c170400,0x21f0000018000300,0x000000000c170400\n"
".quad 0x11f0000010000200,0x000000000c170400,0x21f0000008000100,0x000000000c170400\n"
".quad 0x21f0000000000000,0x02001800080d0400,0x005de40000000200,0x001c042800440400\n"
".quad 0x009c042c00000094,0x00dc042c00000084,0x011c042c00000098,0x049ca32c00000088\n"
".quad 0x061de22004400020,0x351ca31800000010,0x209c032008400030,0x201c034800c00005\n"
".quad 0x411c034800fffffd,0x41dc034800c02ffd,0x44dc034800c03805,0x419c034800c01801\n"
".quad 0x40dc0320244000e1,0x415c034800c027fd,0x425c0320044000e0,0x421c034800c00801\n"
".quad 0x711c034800c04005,0x429c0320044000e0,0x42dc034800c00ffd,0x31dc034800c02005\n"
".quad 0x631c2320044000e1,0x635c035800c00080,0x309c035800c00078,0x821c0320004000e0\n"
".quad 0x90dc0320004000e0,0x639c0320004000e0,0xa55c032031800080,0xb01c0320244000e0\n"
".quad 0xc19c4320244000e0,0x729c234000000034,0x72dc035800c00080,0x63dc435800c00078\n"
".quad 0x731c034800400090,0xa19c432031800080,0x51dc23400000002c,0x52dc035800c00080\n"
".quad 0x635c435800c00078,0x529c034800400090,0x715c432031800080,0x41dc23400000002c\n"
".quad 0x441c035800c00080,0x52dc435800c00078,0x419c034800400090,0x711c432031800080\n"
".quad 0x315c234000000040,0x341c035800c00080,0x41dc435800c00078,0x311c034800400090\n"
".quad 0x50dc432031800080,0x241c234000000040,0x245c035800c00080,0x315c435800c00078\n"
".quad 0x209c034800400090,0x00dc432031800080,0x845c234000000045,0x859c035800c00080\n"
".quad 0x30dc435800c00078,0x841c034800400090,0x145c432031800080,0x521c234000000059\n"
".quad 0x559c035800c00081,0x145c435800c00079,0x569c034800400091,0x821c432031800081\n"
".quad 0x475c854000000058,0x265c858400000000,0x86dc438400000000,0xe21c854800400090\n"
".quad 0x055c238400000000,0x059c035800c00080,0x079c035800c00078,0x639c852031800080\n"
".quad 0x501c438400000000,0x015de24000000059,0x20de0418fa000000,0x411c031800000051\n"
".quad 0x455c034800c04001,0x209e044800c03801,0x30dc001800000049,0x419c03300a800014\n"
".quad 0x511c0320244000e0,0x209c0020244000e1,0x30dc00300a800004,0x415c235000f0eff0\n"
".quad 0x41dc035800c00080,0xa29c855800c00078,0x07dc438400000000,0x209c004800400090\n"
".quad 0x30dc005000f0fff0,0x411c03580000000c,0x515c4320318000a0,0x62dc23400000001c\n"
".quad 0x61dc035800c00080,0x20dc005800c00078,0x515c433006000008,0x609c0348004000b0\n"
".quad 0xb19c4320318000a0,0x31dc00400000001c,0xc01c85208ed0a000,0x03dc858400000000\n"
".quad 0xa5dc858400000001,0xe59c858400000001,0x60dc438400000001,0x0081e748004000b0\n"
".quad 0x81200040000012e0,0x7161005000000074,0x3320045000000059,0x41a000100000003d\n"
".quad 0xd12100500000005c,0x5160005000000001,0x61a0005000000064,0x4120005000000000\n"
".quad 0x5160005000000064,0x61a0005000000028,0x4121005000000058,0x5161005000000028\n"
".quad 0x61a0005000000038,0x4121005000000064,0x56e1005000000038,0x61a000500000003c\n"
".quad 0x46a0005000000028,0x612000500000003c,0xa161005000000038,0xa2e300500000006d\n"
".quad 0x472000500000006d,0xb12000500000003c,0x51a000580000006d,0x51e0005800d02400\n"
".quad 0xa620003038d01000,0x6120003008000069,0x01a1e2300e000014,0x01e1e21871ee3470\n"
".quad 0x81220018fe71c71c,0x3120043008cff001,0x4422011000000011,0x3120042018000018\n"
".quad 0x44220110004000c1,0xb320002018000040,0xb360005800d02400,0xa420043038d01000\n"
".quad 0xc2e0001000000041,0x332004301a00002c,0x82e2001000000039,0x33a0043016cff001\n"
".quad 0xb2e100100000002d,0xe3a2015000000069,0x43a2012018000018,0xb320002018000038\n"
".quad 0xb360005800d02400,0xa3a0043038d01000,0xc2e0001000000039,0x832200301a00002c\n"
".quad 0x32a0043016cff001,0x3320041000000029,0xc322011000000031,0x4322012014000018\n"
".quad 0xa2a0002014000030,0xa3e004500000006d,0xa2e0001000000031,0xa7a0005800d02400\n"
".quad 0xb7a0003038d01000,0x32a004303c000028,0x87a2001000000065,0x37a004303ccff001\n"
".quad 0xe1a2011000000079,0xb7a2002014000019,0x42a2013038d01001,0xa120002014000018\n"
".quad 0xa160005800d02401,0xa1e2003038d01001,0xa2a0043038d01001,0x41a0001000000029\n"
".quad 0x46a000300a000068,0xb16000300e000068,0xb1e0005800d02401,0x4120033038d01001\n"
".quad 0x86a20020244000e1,0x5660003034cff001,0x56e000300e00006c,0x416023303c00006c\n"
".quad 0x41e0035800c00080,0x8662005800c00078,0x86e2003032cff001,0x5160433036cff001\n"
".quad 0x81e200400000001c,0x0721e43038cff001,0x94620028004000a0,0x71e000302e400035\n"
".quad 0x4120033010400024,0xa322002039c00010,0x7222003000400035,0x51604330104000c0\n"
".quad 0x91e00348004000b0,0x42600320244000e0,0x4220854800c01001,0x77a0239400000000\n"
".quad 0x77e0035800c00080,0x9260035800c00078,0x81220020244000e0,0xe16043300ccff001\n"
".quad 0x922023400000007d,0x97a0035800c00080,0x4122005800c00078,0x31a003303a400034\n"
".quad 0x84e04320244000e1,0x4222004000000078,0x676023303a4000c0,0x67a0035800c00080\n"
".quad 0x7120035800c00078,0xb362002039c00010,0xd1e043302c400035,0x5160434000000079\n"
".quad 0x47600348004000b0,0x61a0034800c02001,0x4220852039c00010,0xd760039400000000\n"
".quad 0x47a00320244000e1,0x71e0434800c02801,0xd7e02348004000b0,0xd120035800c00081\n"
".quad 0x9220035800c00079,0xe7a0032039c00010,0xf1604320244000e1,0x3260434000000011\n"
".quad 0xd1200348004000b1,0xe4e0232039c00011,0xe760035800c00081,0x4520035800c00079\n"
".quad 0x5160434800c03001,0x34e04348004000b0,0x4760034000000075,0x55200320244000e1\n"
".quad 0xe4a00320244000e1,0x1462002039c00011,0x456023302e4000c1,0x47a0035800c00081\n"
".quad 0x34e0435800c00079,0x45200348004000b1,0x5560432039c00011,0xd7a0234000000079\n"
".quad 0xc022005800c00081,0x55604330004000c0,0xd7200348004000b1,0xd760032039c00011\n"
".quad 0xd322005800c00079,0x846085302c4000c0,0xe760439400000000,0x6020854000000075\n"
".quad 0x4320859400000000,0xd760439400000000,0x22a08548004000b1,0xc3e0859400000001\n"
".quad 0x43a0859400000001,0x2420859400000001,0x00a1e79400000000,0x9180034000000620\n"
".quad 0x41c00320244000e0,0x4240034800c01001,0x4340034800c02001,0x7300034800c02801\n"
".quad 0x94000320244000e0,0x02c1e420244000e0,0x61c02328004000a0,0x6240035800c00080\n"
".quad 0x3200035800c00078,0xd4c00320244000e1,0x61800320244000e0,0x71c0432017c00010\n"
".quad 0x4440034000000024,0x8240234800c03001,0x8340035800c00080,0x71c0435800c00078\n"
".quad 0x15000348004000b0,0x82000320244000e1,0x9240432017c00010,0xc340234000000034\n"
".quad 0xc440035800c00080,0x9240435800c00078,0xc3000348004000b0,0xd340432017c00010\n"
".quad 0x0440234000000044,0x0480035800c00081,0xd340435800c00079,0x04000348004000b0\n"
".quad 0x1440432017c00011,0x3540234000000049,0x3600035800c00081,0x1440435800c00079\n"
".quad 0x34800348004000b1,0x54c0432017c00011,0x4540234000000061,0x4600035800c00081\n"
".quad 0x34c0435800c00079,0x45000348004000b1,0x52c0432017c00011,0x6000854000000061\n"
".quad 0xc580859400000000,0xb540439400000000,0x87408548004000b0,0x05c0859400000000\n"
".quad 0x2380859400000001,0x43c0859400000001,0x4640859400000001,0x2280859400000000\n"
".quad 0x001de79400000000,0x0000008000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0xcfd0000000000000,0xe38e39439fd00043,0x080a043de38e39be\n"
".quad 0x2000200000005000,0x0c17040020190300,0x1800030000000000,0x0c17040021f00000\n"
".quad 0x1000020000000000,0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000\n"
".quad 0x0000000000000000,0x080d040021f00000,0x0000010001000c00,0x00440400005de400\n"
".quad 0x0000009800dc0428,0x00000088011c042c,0x00000094001c042c,0x00000084009c042c\n"
".quad 0x08400030351ca32c,0xfa000000011de220,0x04400020049ca318,0x00000051201e0420\n"
".quad 0x8ec0000541dc2318,0x00000049209e0418,0x0880001400dc0018,0x08800004209c0030\n"
".quad 0x00f0eff030dc0030,0x00fffffd211c0350,0x00f0fff0209c0048,0x0000000c30dc0050\n"
".quad 0x20c00bf441dc0358,0x0600000820dc001a,0x20c007f943dc2330,0x244000e1409c031a\n"
".quad 0x8ed0a00031dc0020,0x000000000005e720,0x0000001120de0480,0x00cfc00001dc0018\n"
".quad 0x00c00005201c0350,0x00cfc000311c0048,0x0000001c015de450,0x104000fc421c8628\n"
".quad 0x00000001201e0480,0x00fffffd40dc0318,0x00cfc000019c0048,0x104101fc601c8650\n"
".quad 0x0000000d20de0480,0x00cfc00032dc0018,0x0000002c015de450,0x104202fc425c8628\n"
".quad 0x00c0000540dc0380,0x0000000d20de0448,0x00cfc000315c0018,0x104505fc479c8650\n"
".quad 0x0000001401dde480,0x104404fc669c8628,0x00000018029de480,0x104303fca59c8628\n"
".quad 0x00c00080215c2380,0x00c00078219c0358,0x00c00ffd40dc0358,0x00000010029de248\n"
".quad 0x00000018515c4318,0x244000e030dc0340,0x00c02005411c0320,0x15800080219c0348\n"
".quad 0x00c0008032dc2320,0x00c00078331c0358,0x244000e0409c0358,0x0040009051dc4320\n"
".quad 0x15800080311c0348,0x00000030b0dc4320,0x00c0008022dc2340,0x00c00078231c0358\n"
".quad 0x00400090315c4358,0x15800080209c0348,0x00000030b0dc4320,0x00000000461c8540\n"
".quad 0x00c03801455c0384,0x0040009030dc4348,0x0000000064dc8548,0x244000e1511c0384\n"
".quad 0x00000000265c8520,0x00c00078415c0384,0x00c04001409c0358,0x00c0008040dc2348\n"
".quad 0x158000a0411c0358,0x244000e0209c0320,0x0000001430dc4320,0x00c00080219c2340\n"
".quad 0x00c0007821dc0358,0x004000b0315c4358,0x158000a0209c0348,0x0000001c60dc4320\n"
".quad 0x004000b030dc4340,0x000013200081e748,0x0000002131200040,0x0000006581610050\n"
".quad 0x0000007932a00450,0x0000006041a00010,0x0000000081210050,0x0000002451600050\n"
".quad 0x0000000061a00050,0x0000002441200050,0x0000005851600050,0x0000006461a00050\n"
".quad 0x0000005841210050,0x0000006851610050,0x0000002461a00050,0x0000006841210050\n"
".quad 0x0000007856e10050,0x0000005861a00050,0x0000007847200050,0x0000006861200050\n"
".quad 0x0000006dc1610050,0x0000006dc3a30050,0x0000007847600050,0x0000006db1200050\n"
".quad 0x00d0240051a00058,0x3ad0100051e00058,0x08000071c5e00030,0x0e00001461200030\n"
".quad 0x71ee347001a1e230,0xfe71c71c01e1e218,0x08cff00171220018,0x0000001131200430\n"
".quad 0x1400001843220110,0x004000c131200420,0x1400003044220110,0x00d02400e2a00020\n"
".quad 0x3ad01000e2e00058,0x00000041a4600430,0x16000038a2a00010,0x14cff00173220030\n"
".quad 0x0000006932a00430,0x00000071b6a10010,0x0000003133200450,0x14000018c3220110\n"
".quad 0x1400003043a20120,0x00d02401a2a00020,0x3ad01001a2e00058,0x00000039a3a00430\n"
".quad 0x16000068a2a00010,0x14cff00173220030,0x0000005932a00430,0x0000003133200410\n"
".quad 0x14000018c3220110,0x1400003043220120,0x0000006dc2a00020,0x00000031a3200450\n"
".quad 0x00d02400a2e00010,0x3ad01000a5a00058,0x2c000028b2a00030,0x14cff00175a20030\n"
".quad 0x0000002532a00430,0x3ad01001b2620010,0x0000005937a00430,0x004000a005a1e410\n"
".quad 0x14000019e1a20128,0x1400001842a20120,0x00d02401c1200020,0x3ad01001c1600058\n"
".quad 0x3ad01001c1e20030,0x00000029a2a00430,0x0a00007041a00010,0x0e00007047200030\n"
".quad 0x00d02401b1600030,0x3ad01001b1e00058,0x244000e141200330,0x0ccff00171a20020\n"
".quad 0x0e00006c56a00030,0x1200006c56e00030,0x00c0008041602330,0x00c0007841e00358\n"
".quad 0x2dc0001041200358,0x38cff00177220020,0x0000001c51e04330,0x3acff00171620040\n"
".quad 0x34cff00176a20030,0x36cff00176e20030,0x2640002451600030,0x00400035c5e20030\n"
".quad 0x32400035b4220030,0x264000c052620030,0x004000b071604330,0x00c0080141e00348\n"
".quad 0x00c0100144e00348,0x0000000042608548,0x244000e071e00394,0x004000c170220020\n"
".quad 0x30400035a5e20030,0x1040003461220030,0x00c0008077602330,0x00c0007871600358\n"
".quad 0x244000e131a00358,0x104000c042220020,0x00000015d1604330,0x2dc0001071200340\n"
".quad 0x00c0008062602320,0x00c0007864e00358,0x004000b051604358,0x00c0180141e00348\n"
".quad 0x0000004c92604348,0x00c0200144e00340,0x0000000042208548,0x244000e071e00394\n"
".quad 0x244000e134e00320,0x304000c176220020,0x2dc0001062200330,0x00c0008131602320\n"
".quad 0x00c0007931a00358,0x00c0008077602358,0x00c0007877a00358,0x0000001851604358\n"
".quad 0x004000b092604340,0x2dc0001071a00348,0x00c0280141e00320,0x00000079d1204348\n"
".quad 0x00c0300145200340,0x244000e077a00348,0x004000b041e04320,0x2dc0001131200348\n"
".quad 0x00c00081e4e02320,0x00c00079e7600358,0x004000b051604358,0x324000c104220048\n"
".quad 0x0000007534e04330,0x244000e147600340,0x244000e155200320,0x2dc00011e4a00320\n"
".quad 0x0000000086208520,0x00c0008145602394,0x00c0007947a00358,0x004000b134e04358\n"
".quad 0x2dc0001145200348,0x0000007955604320,0x00c00081d7a02340,0x0000000060208558\n"
".quad 0x004000b155604394,0x2dc00011d5a00348,0x00c00079d7600320,0x0000000044208558\n"
".quad 0x0000000122a08594,0x00000075e7604394,0x004000b1d5e04340,0x0000000163208548\n"
".quad 0x0000000143a08594,0x0000000024608594,0x0000066000a1e794,0x00c0080141800340\n"
".quad 0x00c0100141c00348,0x00c0200143000348,0x244000e061800348,0x00c0180142800320\n"
".quad 0x244000e072c00348,0x244000e0c3800320,0x00c0008061c02320,0x00c0007863000358\n"
".quad 0x004000a004c1e458,0x244000e0a2800328,0x00c00080b3402320,0x00c00078b3c00358\n"
".quad 0x0000003071c04358,0x00c00080a4002340,0x00c00078a3000358,0x27c0001061800358\n"
".quad 0x0000003cd3404320,0x00c00080e3c02340,0x00c00078e4400358,0x0000003104004358\n"
".quad 0x004000b071c04340,0x27c00010b3000348,0x00000044f3c04320,0x00c0280144400340\n"
".quad 0x004000b0d3404348,0x27c00010a2800348,0x244000e114400320,0x00c0300145000320\n"
".quad 0x004000b102c04348,0x27c00010e3800348,0x00c0008115402320,0x00c0007915c00358\n"
".quad 0x244000e144800358,0x004000b0f3c04320,0x0000005d55004348,0x27c0001114000340\n"
".quad 0x00c0008125402320,0x00c0007925c00358,0x004000b144404358,0x27c0001124800348\n"
".quad 0x0000005d54c04320,0x0000000060008540,0x00000000c6408594,0x004000b134c04394\n"
".quad 0x00000000a2008548,0x00000000e6008594,0x0000000106808594,0x0000000127808594\n"
".quad 0x0000000042408594,0x0000000025808594,0x00000000001de794,0x0000000000000080\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x9fd00043cfd00000\n"
".quad 0xe38e39bee38e3943,0x0000ca000802043d,0x0802040000000300,0x000002000000c900\n"
".quad 0x0000c70008020400,0x0802040000000100,0x000000000000c500,0x0000cc0008020400\n"
".quad 0x0802040000000500,0x000004000000cb00,0x00008300080a0400,0x2019030020002000\n"
".quad 0x000000000c170400,0x21f0000018000300,0x000000000c170400,0x11f0000010000200\n"
".quad 0x000000000c170400,0x21f0000008000100,0x000000000c170400,0x21f0000000000000\n"
".quad 0x02001800080d0400,0x005de40000000200,0x00dc042800440400,0x011c042c00000098\n"
".quad 0x001c042c00000088,0x009c042c00000094,0x355ca32c00000084,0x051ca32008400030\n"
".quad 0x501c032004400020,0x221e044800fffffd,0x201e041800000051,0x819c001800000001\n"
".quad 0x015c005000cfc000,0x501c035000cfc000,0x011de44800c00005,0x441c862800000018\n"
".quad 0x201e0480104000fc,0x01dc001800000001,0x645c865000cfc000,0x401c0380104101fc\n"
".quad 0x00dde44800fffffd,0x201e042800000014,0x019c001800000001,0x401c035000cfc000\n"
".quad 0x009de44800c00005,0x239c862800000018,0x201e0480104404fc,0x011c001800000001\n"
".quad 0x431c865000cfc000,0x225e0480104505fc,0x90dc001800000055,0x249c865000cfc000\n"
".quad 0x62dc8680104202fc,0x015de480104707fc,0x429c86280000001c,0x009de480104606fc\n"
".quad 0x201c862800000010,0x509c0380104303fc,0x015de420284000e1,0x81dc002800400080\n"
".quad 0x20dc23208e4000b4,0x211c035800c00080,0x209c035800c00078,0x000007200bc00010\n"
".quad 0x30dc436000000340,0x011de44000000010,0x30dc4328000000fc,0x24dc854800400090\n"
".quad 0x0001e78400000000,0x409e034000000280,0x209e044800c01001,0x21dc001800000009\n"
".quad 0x0001e7208e4000c4,0x509e0340000001e0,0x209e044800c00c01,0x21dc001800000009\n"
".quad 0x0001e7208e4000c4,0x91dc004000000140,0x0001e7208e4000b4,0x90dc0040000000e0\n"
".quad 0x809c005000f0eff0,0x30dc005000f0fff0,0x209c00580000000c,0x21dc003006000008\n"
".quad 0x0021f4208ed0a000,0x011df24000000000,0x011df21800000028,0x011df21800000030\n"
".quad 0x011df2180000002c,0x011df21800000008,0x569c03180000000c,0x40dc034800c05401\n"
".quad 0x56dc034800fffffc,0xa09c034800c06001,0x319c0320284000e1,0x021de4080ec00028\n"
".quad 0x20dc2328004000a0,0x215c035800c00080,0xb11c035800c00078,0x61de0320284000e1\n"
".quad 0x209c036000c00008,0x30dc432011c00010,0x415c234000000014,0x419c035800c00080\n"
".quad 0x71dc865800c00078,0x30dc431400400000,0x411c0348004000b0,0x515c432011c00010\n"
".quad 0x515c434000000018,0x701de748004000b0,0x519c034803fff4e0,0x51dc034800c00c01\n"
".quad 0x525c034800c01801,0x53dc034800c02401,0x619c034800c03001,0x721c0320284000e0\n"
".quad 0x959c0320284000e0,0xf61c0320284000e0,0x61dc2320284000e0,0x625c035800c00080\n"
".quad 0x035de45800c00078,0x83dc2328004000a0,0x84dc035800c00080,0x71dc435800c00078\n"
".quad 0x619c034000000024,0xf25c43201bc00010,0x65dc23400000004c,0x63dc035800c00081\n"
".quad 0x71dc435800c00079,0x821c0348004000b0,0x75dc43201bc00010,0x53dc03400000003d\n"
".quad 0x84dc234800c03c01,0x865c035800c00081,0x925c435800c00079,0xf3dc0348004000b0\n"
".quad 0x659c0320284000e0,0x34dc43201bc00011,0x569c034000000065,0xf55c234800c04801\n"
".quad 0xf65c035800c00080,0x75dc435800c00078,0x861c0348004000b1,0x56dc43201bc00011\n"
".quad 0xa51c034000000065,0x365c4320284000e1,0xf69c0348004000b1,0x43dc23201bc00010\n"
".quad 0x44dc035800c00081,0xb6dc435800c00079,0x451c0348004000b1,0xf35c43201bc00011\n"
".quad 0x601c85400000004c,0x845c859400000000,0xd55c439400000000,0x649c8548004000b0\n"
".quad 0x841c859400000001,0xa29c859400000001,0x42dc859400000001,0x239c859400000001\n"
".quad 0x431c859400000000,0x001de79400000000,0x001de74000001900,0x51dc234000000520\n"
".quad 0x000007190e0000fd,0x0001e760000000e0,0x51dc234000000080,0x0021f4190ec00bfd\n"
".quad 0x029de44000000000,0x045df42800000030,0x031de42800000040,0x041df42800000028\n"
".quad 0x009d002800000044,0x011de25000000045,0x20de0018f68f5c28,0x209c003014cfc000\n"
".quad 0x449c003018cfc000,0x439c0030004000d4,0x42dc0030064000e4,0x001de730044000e4\n"
".quad 0x51dc234000000300,0x000007190e0000fd,0x0001e760000000e0,0x51dc234000000080\n"
".quad 0x0021f4190ec00bfd,0x02dde44000000000,0x045df42800000038,0x039de42800000040\n"
".quad 0x041df4280000002c,0x301c002800000044,0x209c005000000041,0xe0dc005000000049\n"
".quad 0x001c005000000038,0x001c005000000044,0xb09c005000000008,0x001c00500000002c\n"
".quad 0x00dd00500000000c,0x001c005000000045,0x309c005000000008,0x30de00301ccfc000\n"
".quad 0x001c003016cfc000,0x029e005000efe000,0x031e0030044000e4,0x001c0030064000e4\n"
".quad 0x309c0030244000f4,0x00dd005000000049,0x021de25000000045,0x211c001871ee3470\n"
".quad 0x209d005000000040,0x30dc005000000001,0x411c005000000038,0x209c005000000000\n"
".quad 0x30dc005000000038,0x411c005000000030,0x209d005000000044,0x30dd005000000030\n"
".quad 0x411c005000000028,0x209d005000000038,0x35dd005000000028,0x411c00500000002c\n"
".quad 0x259c005000000030,0x025de2500000002c,0x409c0018fe71c71c,0x60dd005000000028\n"
".quad 0x735d00500000005d,0x265c005000000059,0x709c00500000002c,0x311c00580000005d\n"
".quad 0x315c005800d02400,0x661c003032d01000,0x409c003004000059,0x311c04300a00000c\n"
".quad 0x62df00100000002d,0x809e00500000005d,0x309c043004cff001,0x219e011000000009\n"
".quad 0x309c042008000020,0x219e0110004000c1,0xb11c002008000018,0xb15c005800d02400\n"
".quad 0xa19c043032d01000,0x411c001000000019,0x329c04300a00002c,0x811e001000000029\n"
".quad 0x311c043008cff001,0x411e011000000011,0x211e012014000020,0xd29c002014000010\n"
".quad 0xd2dc005800d02400,0xa11c043032d01000,0xa29c001000000011,0x835e003016000034\n"
".quad 0x329c043014cff001,0x331c041000000031,0xc31e011000000035,0x231e012014000020\n"
".quad 0x629c002014000030,0xa31c04500000005d,0xa2dc001000000031,0xa3dc005800d02400\n"
".quad 0xb3dc003032d01000,0x329c04301e000028,0x83de001000000039,0x339c04301ecff001\n"
".quad 0xe21e01100000003d,0x739e002014000020,0x209e013032d01001,0x621c002014000020\n"
".quad 0x625c005800d02401,0x629e003032d01001,0xa09c043032d01001,0x82dc001000000009\n"
".quad 0x871c003012000058,0x725c003014000058,0x729c005800d02401,0x521c033032d01001\n"
".quad 0x059de420284000e1,0x929c0028004000a0,0x95dc00301400005c,0x825c23301c00005c\n"
".quad 0x839c035800c00080,0x821c035800c00078,0x829e00202dc00010,0x925c433014cff001\n"
".quad 0x839e004000000038,0x865e003032cff001,0x925c433016cff001,0xe39c0048004000b0\n"
".quad 0x81de003026400104,0x85de003038cff001,0xe4de00302ecff001,0x539c0330264000c0\n"
".quad 0x715e004800c00c01,0x84dc853000400114,0xe3dc039400000000,0x539c0320284000e0\n"
".quad 0x71de004800c01801,0xf2dc233022400115,0xf25c035800c00080,0x921e005800c00078\n"
".quad 0xe39c033024400115,0xb25c4320284000e0,0x84de004000000024,0xe2dc2330244000c0\n"
".quad 0xe49c035800c00080,0xf21c035800c00078,0x501e00202dc00010,0xb49c4330004000c0\n"
".quad 0x925c434000000048,0x52dc0348004000b0,0x715e004800c02401,0x84dc8530224000c0\n"
".quad 0xb65c039400000000,0x52dc0320284000e0,0x93dc234800c03001,0x925c035800c00081\n"
".quad 0xa21e005800c00079,0xb29c033020400114,0xf3dc4320284000e0,0x841e004000000024\n"
".quad 0xa21c2330204000c0,0xa25c035800c00080,0x54dc035800c00078,0x82dc434800c04801\n"
".quad 0xe21c034000000024,0x539c03202dc00010,0x225c434800c03c01,0xe39c0348004000b1\n"
".quad 0xa49c0320284000e0,0x841c8520284000e1,0xe75c239400000000,0xe21c035800c00080\n"
".quad 0x341c035800c00078,0x225c2320284000e1,0xd69c435800c00081,0x24dc034000000021\n"
".quad 0xb21c035800c00079,0x249c0320284000e1,0x925c43202dc00011,0x84dc23400000004c\n"
".quad 0x855c035800c00080,0x355c435800c00078,0x94dc434000000055,0x851c0348004000b0\n"
".quad 0x555c43202dc00010,0x921c0348004000b1,0x065c23202dc00011,0xf25c435800c00081\n"
".quad 0xa29c0348004000b0,0x801c85202dc00010,0xb2dc439400000000,0xe39c0348004000b0\n"
".quad 0xa15c85202dc00010,0xa3dc439400000000,0x059c0348004000b1,0x041c03202dc00011\n"
".quad 0xe09c855800c00079,0x941c439400000000,0x05dc434000000041,0x631c8548004000b1\n"
".quad 0x211c859400000001,0x419c859400000001,0x001de79400000001,0x0000008000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0002c80000000000\n"
".quad 0x000470000004f800,0x0004680000046800,0x0004680000046800,0x0004680000046800\n"
".quad 0x000468000002c800,0x8ccccd3dcccccd00,0x2aaaab3f2aaaab3f,0xe38e39bf2aaaab3e\n"
".quad 0x0802043de38e39be,0x000001000000b600,0x0000b50008020400,0x0802040000000300\n"
".quad 0x000000000000b400,0x0000b30008020400,0x0802040000000200,0x000007000000ba00\n"
".quad 0x0000b90008020400,0x0802040000000600,0x000005000000b800,0x0000b70008020400\n"
".quad 0x080a040000000400,0x2000200000005300,0x0c17040020190300,0x1800030000000000\n"
".quad 0x0c17040021f00000,0x1000020000000000,0x0c17040011f00000,0x0800010000000000\n"
".quad 0x0c17040021f00000,0x0000000000000000,0x080d040021f00000,0x0000050006004800\n"
".quad 0x00440400005de400,0x00000094001c0428,0x00000084009c042c,0x0000009800dc042c\n"
".quad 0x00000088011c042c,0x04400020049ca32c,0x00000010061de220,0x08400030351ca318\n"
".quad 0x00c00005209c0320,0x00fffffd201c0348,0x00c02ffd411c0348,0x00c03805421c0348\n"
".quad 0x00c04005431c0348,0x00c0180144dc0348,0x244000e1419c0348,0x044000e0415c0320\n"
".quad 0x00c027fd40dc0320,0x044000e0811c0348,0x00c00801425c0320,0x004000e0c21c0348\n"
".quad 0x00c00ffd41dc0320,0x00c0200542dc0348,0x044000e1329c0348,0x00c00080631c2320\n"
".quad 0x00c00078635c0358,0x004000e0309c0358,0x004000e090dc0320,0x31800080639c0320\n"
".quad 0x244000e0755c0320,0x244000e0b01c0320,0x00000034c19c4320,0x00c00080a1dc2340\n"
".quad 0x00c00078a2dc0358,0x0040009063dc4358,0x31800080a31c0348,0x0000002c719c4320\n"
".quad 0x00c0008051dc2340,0x00c0007852dc0358,0x00400090635c4358,0x31800080529c0348\n"
".quad 0x0000002c715c4320,0x00c0008041dc2340,0x00c00078441c0358,0x0040009052dc4358\n"
".quad 0x31800080419c0348,0x00000040711c4320,0x00c00080315c2340,0x00c00078341c0358\n"
".quad 0x0040009041dc4358,0x31800080311c0348,0x0000004050dc4320,0x00c00080241c2340\n"
".quad 0x00c00078245c0358,0x00400090315c4358,0x31800080209c0348,0x0000004500dc4320\n"
".quad 0x00c00080845c2340,0x00c00078859c0358,0x0040009030dc4358,0x31800080841c0348\n"
".quad 0x00000059145c4320,0x00c00081521c2340,0x00c00079559c0358,0x00400091145c4358\n"
".quad 0x31800081569c0348,0x00000058821c4320,0x00000000475c8540,0x00000000265c8584\n"
".quad 0x0040009086dc4384,0x00000000e21c8548,0x00c00080055c2384,0x00c00078059c0358\n"
".quad 0x31800080079c0358,0x00000000639c8520,0x00000059501c4384,0xfa000000015de240\n"
".quad 0x0000005120de0418,0x00c04001411c0318,0x00c03801455c0348,0x00000049209e0448\n"
".quad 0x0a80001430dc0018,0x244000e0419c0330,0x244000e1511c0320,0x0a800004209c0020\n"
".quad 0x00f0eff030dc0030,0x00c00080415c2350,0x00c0007841dc0358,0x00000000a29c8558\n"
".quad 0x0040009007dc4384,0x00f0fff0209c0048,0x0000000c30dc0050,0x318000a0411c0358\n"
".quad 0x0000001c515c4320,0x00c0008062dc2340,0x00c0007861dc0358,0x0600000820dc0058\n"
".quad 0x004000b0515c4330,0x318000a0609c0348,0x0000001cb19c4320,0x8ed0a00031dc0040\n"
".quad 0x00000000c01c8520,0x0000000103dc8584,0x00000001a5dc8584,0x00000001e59c8584\n"
".quad 0x004000b060dc4384,0x000012e00081e748,0x0000007481200040,0x0000005971610050\n"
".quad 0x0000003d33200450,0x0000005c41a00010,0x00000001d1210050,0x0000006451600050\n"
".quad 0x0000000061a00050,0x0000006441200050,0x0000002851600050,0x0000005861a00050\n"
".quad 0x0000002841210050,0x0000003851610050,0x0000006461a00050,0x0000003841210050\n"
".quad 0x0000003c56e10050,0x0000002861a00050,0x0000003c46a00050,0x0000003861200050\n"
".quad 0x0000006da1610050,0x0000006da2e30050,0x0000003c47200050,0x0000006db1200050\n"
".quad 0x00d0240051a00058,0x38d0100051e00058,0x08000069a6200030,0x0e00001461200030\n"
".quad 0x71ee347001a1e230,0xfe71c71c01e1e218,0x08cff00181220018,0x0000001131200430\n"
".quad 0x1800001844220110,0x004000c131200420,0x1800004044220110,0x00d02400b3200020\n"
".quad 0x38d01000b3600058,0x00000041a4200430,0x1a00002cc2e00010,0x0000003933200430\n"
".quad 0x16cff00182e20010,0x0000002d33a00430,0x00000069b2e10010,0x18000018e3a20150\n"
".quad 0x1800003843a20120,0x00d02400b3200020,0x38d01000b3600058,0x00000039a3a00430\n"
".quad 0x1a00002cc2e00010,0x16cff00183220030,0x0000002932a00430,0x0000003133200410\n"
".quad 0x14000018c3220110,0x1400003043220120,0x0000006da2a00020,0x00000031a3e00450\n"
".quad 0x00d02400a2e00010,0x38d01000a7a00058,0x3c000028b7a00030,0x0000006532a00430\n"
".quad 0x3ccff00187a20010,0x0000007937a00430,0x14000019e1a20110,0x38d01001b7a20020\n"
".quad 0x1400001842a20130,0x00d02401a1200020,0x38d01001a1600058,0x38d01001a1e20030\n"
".quad 0x00000029a2a00430,0x0a00006841a00010,0x0e00006846a00030,0x00d02401b1600030\n"
".quad 0x38d01001b1e00058,0x244000e141200330,0x34cff00186a20020,0x0e00006c56600030\n"
".quad 0x3c00006c56e00030,0x00c0008041602330,0x00c0007841e00358,0x32cff00186620058\n"
".quad 0x36cff00186e20030,0x0000001c51604330,0x38cff00181e20040,0x004000a00721e430\n"
".quad 0x2e40003594620028,0x1040002471e00030,0x39c0001041200330,0x00400035a3220020\n"
".quad 0x104000c072220030,0x004000b051604330,0x244000e091e00348,0x00c0100142600320\n"
".quad 0x0000000042208548,0x00c0008077a02394,0x00c0007877e00358,0x244000e092600358\n"
".quad 0x0ccff00181220020,0x0000007de1604330,0x00c0008092202340,0x00c0007897a00358\n"
".quad 0x3a40003441220058,0x244000e131a00330,0x0000007884e04320,0x3a4000c042220040\n"
".quad 0x00c0008067602330,0x00c0007867a00358,0x39c0001071200358,0x2c400035b3620020\n"
".quad 0x00000079d1e04330,0x004000b051604340,0x00c0200147600348,0x39c0001061a00348\n"
".quad 0x0000000042208520,0x244000e1d7600394,0x00c0280147a00320,0x004000b071e04348\n"
".quad 0x00c00081d7e02348,0x00c00079d1200358,0x39c0001092200358,0x244000e1e7a00320\n"
".quad 0x00000011f1604320,0x004000b132604340,0x39c00011d1200348,0x00c00081e4e02320\n"
".quad 0x00c00079e7600358,0x00c0300145200358,0x004000b051604348,0x0000007534e04348\n"
".quad 0x244000e147600340,0x244000e155200320,0x39c00011e4a00320,0x2e4000c114620020\n"
".quad 0x00c0008145602330,0x00c0007947a00358,0x004000b134e04358,0x39c0001145200348\n"
".quad 0x0000007955604320,0x00c00081d7a02340,0x004000c0c0220058,0x004000b155604330\n"
".quad 0x39c00011d7200348,0x00c00079d7600320,0x2c4000c0d3220058,0x0000000084608530\n"
".quad 0x00000075e7604394,0x0000000060208540,0x0000000043208594,0x004000b1d7604394\n"
".quad 0x0000000122a08548,0x00000001c3e08594,0x0000000143a08594,0x0000000024208594\n"
".quad 0x0000062000a1e794,0x244000e091800340,0x00c0100141c00320,0x00c0200142400348\n"
".quad 0x00c0280143400348,0x244000e073000348,0x244000e094000320,0x004000a002c1e420\n"
".quad 0x00c0008061c02328,0x00c0007862400358,0x244000e132000358,0x244000e0d4c00320\n"
".quad 0x17c0001061800320,0x0000002471c04320,0x00c0300144400340,0x00c0008082402348\n"
".quad 0x00c0007883400358,0x004000b071c04358,0x244000e115000348,0x17c0001082000320\n"
".quad 0x0000003492404320,0x00c00080c3402340,0x00c00078c4400358,0x004000b092404358\n"
".quad 0x17c00010c3000348,0x00000044d3404320,0x00c0008104402340,0x00c0007904800358\n"
".quad 0x004000b0d3404358,0x17c0001104000348,0x0000004914404320,0x00c0008135402340\n"
".quad 0x00c0007936000358,0x004000b114404358,0x17c0001134800348,0x0000006154c04320\n"
".quad 0x00c0008145402340,0x00c0007946000358,0x004000b134c04358,0x17c0001145000348\n"
".quad 0x0000006152c04320,0x0000000060008540,0x00000000c5808594,0x004000b0b5404394\n"
".quad 0x0000000087408548,0x0000000105c08594,0x0000000123808594,0x0000000143c08594\n"
".quad 0x0000000046408594,0x0000000022808594,0x00000000001de794,0x0000000000000080\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x9fd00043cfd00000\n"
".quad 0xe38e39bee38e3943,0x00008e00080a043d,0x2019030020002000,0x000000000c170400\n"
".quad 0x21f0000018000300,0x000000000c170400,0x11f0000010000200,0x000000000c170400\n"
".quad 0x21f0000008000100,0x000000000c170400,0x21f0000000000000,0x01000c00080d0400\n"
".quad 0x005de40000000100,0x001c042800440400,0x009c042c00000094,0x0000072c00000084\n"
".quad 0x049ca360000003e0,0x001c042004400020,0x009c042c00000098,0x20de042c00000088\n"
".quad 0x065ca31800000049,0x31dc002004400030,0x911c03208e4000d4,0x0001e720244000e1\n"
".quad 0x201e0340000002c0,0x201e044800c01001,0x01dc001800000001,0x0001e7208e4000e4\n"
".quad 0x901e034000000220,0x201e044800c00c01,0x01dc001800000001,0x0001e7208e4000e4\n"
".quad 0x201e044000000180,0x01dc001800000065,0x0001e7208e4000d4,0x009c004000000100\n"
".quad 0x301c005000f0eff0,0x209c005000f0fff0,0x001c005800000008,0x01dc003004000000\n"
".quad 0x0001e7208ed0a000,0x04ddf44000000020,0x04ddf228000000fc,0x04ddf21800000028\n"
".quad 0x04ddf21800000030,0x04ddf2180000002c,0x04ddf21800000008,0x41dc23180000000c\n"
".quad 0x429c035800c00080,0x001de45800c00078,0x20dc032800400080,0x909c034800c00005\n"
".quad 0x919c034800c047fd,0x72dc434800c05405,0x97dc034000000028,0x429c034800c02401\n"
".quad 0x915c032001c00010,0x211c034800c017fd,0x925c0320064000e0,0x609c034800c03005\n"
".quad 0xf19c0320064000e0,0x51dc0320064000e1,0x915c0320244000e0,0x625c2320244000e0\n"
".quad 0x631c035800c00080,0xb2dc435800c00078,0x261c034800400090,0x921c034800fffffd\n"
".quad 0x651c034800c03bfd,0x919c432001c00010,0x725c234000000030,0x731c035800c00080\n"
".quad 0x821c035800c00078,0x655c4320304000e0,0x739c034800400090,0x919c432001c00010\n"
".quad 0x81dc234000000030,0x825c035800c00080,0x63dc435800c00078,0x841c034800400090\n"
".quad 0x719c432001c00010,0x41dc234000000024,0x425c035800c00080,0x645c435800c00078\n"
".quad 0x421c034800400090,0x979c032001c00010,0x711c434800c00c01,0x51dc234000000024\n"
".quad 0x531c035800c00080,0xe0dc035800c00078,0x425c4320304000e1,0x519c034800400090\n"
".quad 0x711c432001c00010,0x315c234000000030,0x331c035800c00080,0x41dc435800c00078\n"
".quad 0x311c034800400090,0x50dc432001c00010,0x231c234000000030,0x235c035800c00080\n"
".quad 0x315c435800c00078,0x209c034800400090,0xc01c432001c00010,0xa35c854000000034\n"
".quad 0x91dc238400000000,0x00dc43190ec00bfd,0xe01c854800400090,0x82dc858400000000\n"
".quad 0x459c858400000000,0x029c858400000001,0x65dc858400000001,0x431c858400000000\n"
".quad 0x239c858400000000,0x921c038400000000,0x0081e74800c00005,0x80a0034000000120\n"
".quad 0x0161e44800c06000,0x20a0032800400080,0x20e02320304000e0,0x2120035800c00080\n"
".quad 0x20a0035800c00078,0x30e043200bc00010,0x30e0434000000010,0x23e0854800400090\n"
".quad 0x969c038400000000,0x30dc034800c05401,0x94dc034800fffffd,0xa09c034800c06001\n"
".quad 0x319c0320244000e1,0x021de4080ec00030,0x20dc2328004000a0,0x215c035800c00080\n"
".quad 0x311c035800c00078,0x61de0320244000e1,0x209c036000c00008,0x30dc432011c00010\n"
".quad 0x415c234000000014,0x419c035800c00080,0x71dc865800c00078,0x30dc431400400000\n"
".quad 0x411c0348004000b0,0x515c432011c00010,0x515c434000000018,0x701de748004000b0\n"
".quad 0xe19c034803ffef80,0x91dc0320244000e1,0x925c034800c01801,0x655c234800c03001\n"
".quad 0x661c035800c00080,0xf21c035800c00078,0x741c0320244000e1,0x951c0320244000e0\n"
".quad 0x945c034800c03c01,0x035de44800c04801,0x94dc0328004000a0,0x51dc4320244000e0\n"
".quad 0x825c234000000061,0x865c035800c00080,0x055c235800c00078,0x061c035800c00081\n"
".quad 0x619c035800c00079,0x925c43201bc00010,0x555c434000000064,0x365c234000000061\n"
".quad 0x361c035800c00081,0x451c035800c00079,0x71dc4320244000e1,0x821c0348004000b0\n"
".quad 0x961c43201bc00010,0x465c234000000061,0x469c035800c00081,0x925c435800c00079\n"
".quad 0x041c0348004000b0,0x965c43201bc00011,0x169c034000000069,0x545c4320244000e1\n"
".quad 0x349c0348004000b1,0xa55c23201bc00011,0xa6dc035800c00081,0x84dc435800c00079\n"
".quad 0x451c0348004000b1,0x56dc43201bc00011,0x659c85400000006d,0x955c439400000000\n"
".quad 0xa61c0348004000b1,0x05dc85201bc00011,0x831c859400000001,0xb65c439400000000\n"
".quad 0x201c8548004000b1,0x439c859400000001,0x83dc859400000001,0x229c859400000001\n"
".quad 0x42dc859400000000,0x001de79400000000,0x001de74000001980,0x02dde440000005e0\n"
".quad 0x029de42800000038,0x001de4280000003c,0x001de7280000005c,0x039de44000000560\n"
".quad 0x03dde4280000002c,0x05dde42800000028,0x001de72800000000,0x93dc2340000004e0\n"
".quad 0x000007190e0000fd,0x0005e760000000c0,0x0021f44000000060,0x039de44000000000\n"
".quad 0x05ddf4280000002c,0x02dde42800000000,0x001df42800000038,0x009d00280000005c\n"
".quad 0x011de2500000005c,0x20de0018f68f5c28,0x209c00301ccfc000,0x431c003016cfc000\n"
".quad 0x429c00302c4000f4,0x43dc003006400104,0x001de73004400104,0x93dc2340000002e0\n"
".quad 0x000007190e0000fd,0x0005e760000000c0,0x0021f44000000060,0x03dde44000000000\n"
".quad 0x05ddf42800000028,0x029de42800000000,0x001df4280000003c,0xd09c00280000005c\n"
".quad 0xc0dc005000000000,0xa11c005000000030,0x209c005000000028,0x209c00500000005c\n"
".quad 0xf0dc00500000000c,0x209c00500000003c,0x011d005000000010,0x209c00500000005c\n"
".quad 0x40dc00500000000c,0x411e003014cfc000,0x209c00301ecfc000,0x239e005000efe000\n"
".quad 0x22de003006400104,0x259c003008400104,0xd09c003018400114,0x00dd005000000030\n"
".quad 0x021de2500000005c,0x211c001871ee3470,0xc09d005000000000,0x30dc005000000058\n"
".quad 0x411c005000000028,0x209c005000000058,0x30dc005000000028,0x411c00500000002c\n"
".quad 0x209d00500000005c,0x30dd00500000002c,0x411c005000000038,0x209d005000000028\n"
".quad 0x371d005000000038,0x411c00500000003c,0x26dc00500000002c,0x025de2500000003c\n"
".quad 0x409c0018fe71c71c,0xb0dd005000000038,0x275c005000000071,0xc09c00500000003c\n"
".quad 0x311c005800000071,0x315c005800d02400,0xb61c00303ad01000,0x409c00300400006d\n"
".quad 0x311c04300a00000c,0xb3df00100000003d,0x809e005000000071,0x309c043004cff001\n"
".quad 0x219e011000000009,0x309c042008000020,0x251e0110004000c1,0xf11c002008000018\n"
".quad 0xf15c005800d02400,0x319c04303ad01000,0xc39d001000000039,0x411c00500000006d\n"
".quad 0xa51c04300a00003c,0x811e001000000051,0x311c043008cff001,0x411e011000000011\n"
".quad 0x241e01200c000020,0xe11c00200c000010,0xe15c005800d02400,0x319c04303ad01000\n"
".quad 0xa45c04100000002d,0x411c001000000041,0x811e00300a000038,0x311c043008cff001\n"
".quad 0x411e011000000011,0x239e01200c000020,0xb11c00200c000010,0xa3dc045000000071\n"
".quad 0x415c001000000039,0x419c005800d02400,0x511c00303ad01000,0x319c04300c000010\n"
".quad 0x811e001000000029,0x311c043008cff001,0x411e011000000011,0x229e01200c000020\n"
".quad 0xb09c00200c000010,0xb0dc005800d02401,0xb15e00303ad01001,0xc19e00303ad01001\n"
".quad 0x211c00303ad01001,0x281c00300600006c,0xc0dc00300a00006c,0xc15c005800d02401\n"
".quad 0x909c03303ad01001,0x881e0020244000e1,0x36dc003040cff001,0x371c00300a000070\n"
".quad 0x20dc23300c000070,0x215c035800c00080,0xe19c035800c00078,0x86de0020244000e1\n"
".quad 0x30dc433036cff001,0x815e004000000014,0x075de4303acff001,0x621c2328004000a0\n"
".quad 0x515c005800c00080,0x209c03301a400124,0x625c03203bc00010,0x51de005800c00078\n"
".quad 0x30dc43301a4000c0,0x915c0348004000b0,0x871e004800c01801,0x21dc853038cff001\n"
".quad 0x515c039400000000,0xb55e0020244000e0,0xc41e003000400135,0x809e00302e400135\n"
".quad 0x80dc433008cff001,0x51dc234000000024,0x521c035800c00080,0x209e005800c00078\n"
".quad 0xf11c033018400134,0x735c4320244000e1,0x21de004000000020,0x409c2330184000c0\n"
".quad 0x421c035800c00080,0x931c035800c00078,0x061e004800c03c01,0x225c43302c400136\n"
".quad 0x609c034000000020,0x919c03203bc00010,0x965c034800c03001,0x30dc434800c04801\n"
".quad 0x421c0348004000b0,0xc11c03203bc00010,0x21dc8520244000e0,0x619c039400000000\n"
".quad 0x925c4320244000e0,0x531c0348004000b0,0x409c23203bc00010,0x40dc035800c00080\n"
".quad 0x679c235800c00078,0x67dc035800c00080,0x215c435800c00078,0xa09c03400000000c\n"
".quad 0xd35c4320244000e1,0xe1dc4348004000b0,0x619c03400000007d,0x20dc23203bc00010\n"
".quad 0x269c035800c00080,0x71dc435800c00078,0x209c0348004000b0,0x30dc43203bc00010\n"
".quad 0x965c034000000068,0x349c0320244000e1,0x30dc4320244000e1,0x411c0348004000b0\n"
".quad 0x24dc23203bc00010,0x269c035800c00081,0x515c435800c00079,0x249c0348004000b0\n"
".quad 0x34dc43203bc00011,0x501e004000000069,0x859e0030004000c1,0x34dc43302c4000c1\n"
".quad 0x969c0348004000b1,0x975c23203bc00011,0x965c035800c00081,0x039e005800c00079\n"
".quad 0xc01c85302e4000c1,0xd65c439400000000,0xa29c044000000065,0x859c851000000029\n"
".quad 0x96dc439400000000,0x639c8548004000b1,0x429c859400000000,0xa3dc859400000000\n"
".quad 0x245c859400000001,0x251c859400000000,0x001de79400000001,0x0000008000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0004200000000000\n"
".quad 0x0005f80000067800,0x0005b0000005b000,0x0005b0000005b000,0x0005b0000005b000\n"
".quad 0x0005d80000042000,0x0005b0000005b800,0x8ccccd3dcccccd00,0x2aaaab3f2aaaab3f\n"
".quad 0xe38e39bf2aaaab3e,0x080a043de38e39be,0x2000200000006d00,0x0c17040020190300\n"
".quad 0x1800030000000000,0x0c17040021f00000,0x1000020000000000,0x0c17040011f00000\n"
".quad 0x0800010000000000,0x0c17040021f00000,0x0000000000000000,0x080d040021f00000\n"
".quad 0x0000050006004800,0x00440400005de400,0x0000009800dc0428,0x00000088011c042c\n"
".quad 0x00000094001c042c,0x00000084009c042c,0x00400110015de42c,0x08400030351ca328\n"
".quad 0x04400020049ca320,0xfa000000019de220,0x00c00bfc511e0318,0x00000051201e0448\n"
".quad 0x00000049209e0418,0x0e00001121dc2318,0x0c80001400dc001a,0x0c800004209c0030\n"
".quad 0xa040011121dc2330,0x00f0eff030dc0018,0x00c007fc515e0350,0x00f0fff0209c0048\n"
".quad 0x0000000c30dc0050,0xa040011141dc2358,0x0600000820dc0018,0x2000001543dc2330\n"
".quad 0x244000e1409c031a,0x8ed0a00031dc0020,0x000000000005e720,0x00fffffd20dc0380\n"
".quad 0x00cfc00001dc0048,0x00c00005201c0350,0x0000000d20de0448,0x0000001c015de418\n"
".quad 0x00cfc000311c0028,0x104000fc421c8650,0x00000001201e0480,0x00fffffd40dc0318\n"
".quad 0x00cfc000019c0048,0x104101fc601c8650,0x0000000d20de0480,0x00cfc00032dc0018\n"
".quad 0x0000002c015de450,0x104202fc425c8628,0x00c0000540dc0380,0x0000000d20de0448\n"
".quad 0x00cfc000315c0018,0x104505fc479c8650,0x0000001401dde480,0x104404fc669c8628\n"
".quad 0x00000018029de480,0x104303fca59c8628,0x00c00080215c2380,0x00c00078219c0358\n"
".quad 0x00c00ffd40dc0358,0x00000010029de248,0x00000018515c4318,0x244000e030dc0340\n"
".quad 0x00c02005411c0320,0x15800080219c0348,0x00c0008032dc2320,0x00c00078331c0358\n"
".quad 0x244000e0409c0358,0x0040009051dc4320,0x15800080311c0348,0x00000030b0dc4320\n"
".quad 0x00c0008022dc2340,0x00c00078231c0358,0x00400090315c4358,0x15800080209c0348\n"
".quad 0x00000030b0dc4320,0x00000000461c8540,0x00c03801455c0384,0x0040009030dc4348\n"
".quad 0x0000000064dc8548,0x244000e1511c0384,0x00000000265c8520,0x00c00078415c0384\n"
".quad 0x00c04001409c0358,0x00c0008040dc2348,0x158000a0411c0358,0x244000e0209c0320\n"
".quad 0x0000001430dc4320,0x00c00080219c2340,0x00c0007821dc0358,0x004000b0315c4358\n"
".quad 0x158000a0209c0348,0x0000001c60dc4320,0x004000b030dc4340,0x000013200081e748\n"
".quad 0x0000002131200040,0x0000006581610050,0x0000007932a00450,0x0000006041a00010\n"
".quad 0x0000000081210050,0x0000002451600050,0x0000000061a00050,0x0000002441200050\n"
".quad 0x0000005851600050,0x0000006461a00050,0x0000005841210050,0x0000006851610050\n"
".quad 0x0000002461a00050,0x0000006841210050,0x0000007856e10050,0x0000005861a00050\n"
".quad 0x0000007847200050,0x0000006861200050,0x0000006dc1610050,0x0000006dc3a30050\n"
".quad 0x0000007847600050,0x0000006db1200050,0x00d0240051a00058,0x3ad0100051e00058\n"
".quad 0x08000071c5e00030,0x0e00001461200030,0x71ee347001a1e230,0xfe71c71c01e1e218\n"
".quad 0x08cff00171220018,0x0000001131200430,0x1400001843220110,0x004000c131200420\n"
".quad 0x1400003044220110,0x00d02400e2a00020,0x3ad01000e2e00058,0x00000041a4600430\n"
".quad 0x16000038a2a00010,0x14cff00173220030,0x0000006932a00430,0x00000071b6a10010\n"
".quad 0x0000003133200450,0x14000018c3220110,0x1400003043a20120,0x00d02401a2a00020\n"
".quad 0x3ad01001a2e00058,0x00000039a3a00430,0x16000068a2a00010,0x14cff00173220030\n"
".quad 0x0000005932a00430,0x0000003133200410,0x14000018c3220110,0x1400003043220120\n"
".quad 0x0000006dc2a00020,0x00000031a3200450,0x00d02400a2e00010,0x3ad01000a5a00058\n"
".quad 0x2c000028b2a00030,0x14cff00175a20030,0x0000002532a00430,0x3ad01001b2620010\n"
".quad 0x0000005937a00430,0x004000a005a1e410,0x14000019e1a20128,0x1400001842a20120\n"
".quad 0x00d02401c1200020,0x3ad01001c1600058,0x3ad01001c1e20030,0x00000029a2a00430\n"
".quad 0x0a00007041a00010,0x0e00007047200030,0x00d02401b1600030,0x3ad01001b1e00058\n"
".quad 0x244000e141200330,0x0ccff00171a20020,0x0e00006c56a00030,0x1200006c56e00030\n"
".quad 0x00c0008041602330,0x00c0007841e00358,0x2dc0001041200358,0x38cff00177220020\n"
".quad 0x0000001c51e04330,0x3acff00171620040,0x34cff00176a20030,0x36cff00176e20030\n"
".quad 0x2640002451600030,0x00400035c5e20030,0x32400035b4220030,0x264000c052620030\n"
".quad 0x004000b071604330,0x00c0080141e00348,0x00c0100144e00348,0x0000000042608548\n"
".quad 0x244000e071e00394,0x004000c170220020,0x30400035a5e20030,0x1040003461220030\n"
".quad 0x00c0008077602330,0x00c0007871600358,0x244000e131a00358,0x104000c042220020\n"
".quad 0x00000015d1604330,0x2dc0001071200340,0x00c0008062602320,0x00c0007864e00358\n"
".quad 0x004000b051604358,0x00c0180141e00348,0x0000004c92604348,0x00c0200144e00340\n"
".quad 0x0000000042208548,0x244000e071e00394,0x244000e134e00320,0x304000c176220020\n"
".quad 0x2dc0001062200330,0x00c0008131602320,0x00c0007931a00358,0x00c0008077602358\n"
".quad 0x00c0007877a00358,0x0000001851604358,0x004000b092604340,0x2dc0001071a00348\n"
".quad 0x00c0280141e00320,0x00000079d1204348,0x00c0300145200340,0x244000e077a00348\n"
".quad 0x004000b041e04320,0x2dc0001131200348,0x00c00081e4e02320,0x00c00079e7600358\n"
".quad 0x004000b051604358,0x324000c104220048,0x0000007534e04330,0x244000e147600340\n"
".quad 0x244000e155200320,0x2dc00011e4a00320,0x0000000086208520,0x00c0008145602394\n"
".quad 0x00c0007947a00358,0x004000b134e04358,0x2dc0001145200348,0x0000007955604320\n"
".quad 0x00c00081d7a02340,0x0000000060208558,0x004000b155604394,0x2dc00011d5a00348\n"
".quad 0x00c00079d7600320,0x0000000044208558,0x0000000122a08594,0x00000075e7604394\n"
".quad 0x004000b1d5e04340,0x0000000163208548,0x0000000143a08594,0x0000000024608594\n"
".quad 0x0000066000a1e794,0x00c0080141800340,0x00c0100141c00348,0x00c0200143000348\n"
".quad 0x244000e061800348,0x00c0180142800320,0x244000e072c00348,0x244000e0c3800320\n"
".quad 0x00c0008061c02320,0x00c0007863000358,0x004000a004c1e458,0x244000e0a2800328\n"
".quad 0x00c00080b3402320,0x00c00078b3c00358,0x0000003071c04358,0x00c00080a4002340\n"
".quad 0x00c00078a3000358,0x27c0001061800358,0x0000003cd3404320,0x00c00080e3c02340\n"
".quad 0x00c00078e4400358,0x0000003104004358,0x004000b071c04340,0x27c00010b3000348\n"
".quad 0x00000044f3c04320,0x00c0280144400340,0x004000b0d3404348,0x27c00010a2800348\n"
".quad 0x244000e114400320,0x00c0300145000320,0x004000b102c04348,0x27c00010e3800348\n"
".quad 0x00c0008115402320,0x00c0007915c00358,0x244000e144800358,0x004000b0f3c04320\n"
".quad 0x0000005d55004348,0x27c0001114000340,0x00c0008125402320,0x00c0007925c00358\n"
".quad 0x004000b144404358,0x27c0001124800348,0x0000005d54c04320,0x0000000060008540\n"
".quad 0x00000000c6408594,0x004000b134c04394,0x00000000a2008548,0x00000000e6008594\n"
".quad 0x0000000106808594,0x0000000127808594,0x0000000042408594,0x0000000025808594\n"
".quad 0x00000000001de794,0x0000000000000080,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x9fd00043cfd00000,0xe38e39bee38e3943\n"
".quad 0x0000d4000802043d,0x0802040000000400,0x000003000000d300,0x0000d20008020400\n"
".quad 0x0802040000000200,0x000001000000d000,0x0000ce0008020400,0x0802040000000000\n"
".quad 0x000005000000d500,0x00008100080a0400,0x2819030028002000,0x000000000c170400\n"
".quad 0x11f0000024000500,0x000000000c170400,0x11f0000020000400,0x000000000c170400\n"
".quad 0x21f0000018000300,0x000000000c170400,0x11f0000010000200,0x000000000c170400\n"
".quad 0x21f0000008000100,0x000000000c170400,0x21f0000000000000,0x02001800080d0400\n"
".quad 0x005de40000000200,0x001c042800440400,0x009c042c00000094,0x0000072c00000084\n"
".quad 0x051ca360000003e0,0x001c042004400020,0x009c042c00000098,0x20de042c00000088\n"
".quad 0x031ca31800000051,0x31dc002004400030,0xc09c03208e400004,0x0001e720284000e0\n"
".quad 0x401e0340000002c0,0x201e044800c01001,0x01dc001800000001,0x0001e7208e400014\n"
".quad 0xc01e034000000220,0x201e044800c00c00,0x01dc001800000001,0x0001e7208e400014\n"
".quad 0x201e044000000180,0x01dc001800000031,0x0001e7208e400004,0x011c004000000100\n"
".quad 0x301c005000f0eff0,0x40dc005000f0fff0,0x001c005800000010,0x01dc003006000000\n"
".quad 0x0001e7208ed0a000,0x061df44000000020,0x061df228000000fc,0x061df21800000028\n"
".quad 0x061df21800000030,0x061df2180000002c,0x061df21800000008,0x215c23180000000c\n"
".quad 0x225c035800c00080,0x029de45800c00078,0x44dc032800400080,0xc2dc034800fffffd\n"
".quad 0xc39c034800fffffc,0xc0dc034800c00004,0x525c434800c017fc,0x209c034000000024\n"
".quad 0x33dc232015c00010,0xb15c031a0efffffd,0xb35c034800c03c00,0xe1dc234800c04800\n"
".quad 0xe5dc03188ec00c00,0xe2dc034800c05400,0xc1dc034800c06000,0x339c034800c03004\n"
".quad 0x455c0320284000e0,0x90dc434800c00005,0x0645e44800400090,0x0665e4280000004c\n"
".quad 0x729c0328000000fc,0x55dc2320284000e0,0x21dc85188ec01001,0x515c038400000000\n"
".quad 0x041de420324000e0,0xe6dc232800400080,0xe65c035800c00080,0x03c9e45800c00078\n"
".quad 0x03e9e22800000054,0x0569e21800000ffc,0xe39c031800000ffc,0xb09c432021c00010\n"
".quad 0x001de44000000065,0xa65c232800400080,0xa6dc035800c00080,0xc49c035800c00078\n"
".quad 0x0249e44800c02400,0x0269e22800000054,0xb59c041800000ffc,0x04e5e42000c06bfc\n"
".quad 0xd35c0328000000fc,0xc19c03201e4000e0,0x02c5e44800c00c00,0x02e5e4280000004c\n"
".quad 0x23dc4328000000fc,0x70dc034800400090,0xa29c03202a4000e1,0x95dc432001c00010\n"
".quad 0x011de4400000006d,0x64dc032800400080,0x255c0320264000e1,0x609c0320124000e1\n"
".quad 0x525c2320164000e0,0x559c035800c00080,0x72dc435800c00078,0x511c034800400091\n"
".quad 0x915c432009c00010,0x021de44000000058,0x325c232800400080,0x359c035800c00080\n"
".quad 0x515c435800c00078,0x321c034800400090,0x925c432011c00010,0x045de44000000058\n"
".quad 0x20dc232800400080,0x259c035800c00080,0x925c435800c00078,0x209c034800400090\n"
".quad 0x30dc432023c00010,0x545c234000000058,0x559c035800c00081,0x30dc435800c00079\n"
".quad 0x541c034800400090,0x145c432021c00011,0xd55c234000000059,0xd59c035800c00080\n"
".quad 0x145c435800c00078,0xd71c034800400091,0x501c432001c00010,0x069de24000000059\n"
".quad 0x335c231800000010,0x355c035800c00081,0x075c435800c00079,0x379c034800400090\n"
".quad 0xd35c432035800081,0x24dc854000000054,0x465c858400000000,0xd7dc438400000000\n"
".quad 0xc35c034800400090,0xc55c034800c05400,0x821c854800c06000,0xd09c038400000000\n"
".quad 0x511c0320284000e0,0xa5dc8520284000e1,0x20dc238400000000,0x215c035800c00080\n"
".quad 0x209c035800c00078,0x425c0320358000a0,0x30dc435800c00078,0x415c234000000014\n"
".quad 0x81dc235800c00080,0x30dc43190ec00005,0x411c0348004000b0,0x515c4320358000a0\n"
".quad 0xe01c854000000024,0x059c858400000000,0xc29c858400000001,0xe2dc858400000001\n"
".quad 0x515c438400000001,0x0001e748004000b0,0x81dc234000000040,0x0001e71a8ec00029\n"
".quad 0x619c034000000640,0xc1dc0320284000e0,0x235c034800c01800,0xc41c0320284000e1\n"
".quad 0xc45c034800c03000,0xc3dc034800c03c00,0x631c234800c04800,0x655c035800c00080\n"
".quad 0x025de45800c00078,0x739c0328004000a0,0xd61c2320284000e0,0xd69c035800c00080\n"
".quad 0x041c035800c00078,0x149c0320284000e1,0xc1dc4320284000e1,0x619c034000000054\n"
".quad 0xe31c232013c00010,0xe45c035800c00080,0x861c435800c00078,0x055c234000000069\n"
".quad 0x069c035800c00081,0xc45c435800c00079,0x71dc434000000044,0xd31c0348004000b0\n"
".quad 0x555c432013c00010,0x269c234000000069,0x26dc035800c00081,0x835c435800c00079\n"
".quad 0xe39c0348004000b1,0xa61c432013c00010,0xf69c03400000006d,0x13dc4320284000e0\n"
".quad 0x041c0348004000b1,0xa6dc232013c00011,0xa71c035800c00081,0x545c435800c00079\n"
".quad 0x251c0348004000b1,0xb49c432013c00011,0x659c854000000071,0x855c439400000000\n"
".quad 0xa69c0348004000b1,0xe5dc852013c00011,0xc4dc859400000000,0x26dc439400000000\n"
".quad 0x001c8548004000b1,0x421c859400000001,0xa2dc859400000001,0x265c859400000001\n"
".quad 0x429c859400000000,0x001de79400000000,0x81dc234000001620,0x000007190ec0000d\n"
".quad 0x0021f46000000260,0xc1dc234000000000,0x000007190e0000fc,0x0001e760000000e0\n"
".quad 0xc1dc234000000080,0x0021f4190ec00bfc,0x021de44000000000,0x05ddf42800000028\n"
".quad 0x029de42800000000,0x001df42800000020,0x009d00280000005c,0x015de2500000005c\n"
".quad 0xf4dc0018f68f5c28,0x20de00302c400027,0x211c003010cfc000,0x509c003014cfc000\n"
".quad 0x50de003006cfc000,0xf65c003008cfc000,0xf2dc103004400037,0x709c003006400037\n"
".quad 0x00dd00500000004c,0x339c04500000005c,0x211c00100000002d,0x309d005000000000\n"
".quad 0x30dc005000000059,0x411c005000000064,0x209c005000000058,0x30dc005000000064\n"
".quad 0x411c005000000028,0x209d00500000005c,0x30dd005000000028,0x411c005000000020\n"
".quad 0x209d005000000064,0x375d005000000020,0x411c00500000002c,0x269c005000000028\n"
".quad 0x409c00500000002c,0xa0dd005000000020,0xa25f005000000075,0x271c005000000075\n"
".quad 0xd09c00500000002c,0x311c005800000075,0x315c005800d02400,0xa61c003038d01000\n"
".quad 0x92dc003004000069,0x409c005800d02400,0x011de2300a00000c,0x015de21871ee3470\n"
".quad 0x809e0018fe71c71c,0x309c043004cff001,0x241e011000000009,0x309c04201c000010\n"
".quad 0x241e0110004000c1,0x939c00201c000040,0xa41c043038d01000,0xb25c001000000041\n"
".quad 0x82de00301c000024,0x321c043012cff001,0x339c041000000021,0xd2dd00100000002d\n"
".quad 0xe39e015000000069,0x239e012010000010,0xb21c002010000038,0xb25c005800d02400\n"
".quad 0xa3dc043038d01000,0x821c001000000039,0x82de00301200002c,0x321c043010cff001\n"
".quad 0x329c041000000029,0xa29e01100000002d,0x229e012010000010,0xa21c002010000028\n"
".quad 0xa2dc045000000075,0x825c001000000029,0x86dc005800d02400,0x921c003038d01000\n"
".quad 0x86de003036000020,0x321c043010cff001,0xd65e001000000065,0x379c043038d01001\n"
".quad 0xe11e01100000006d,0x221e012010000011,0xa09c002010000010,0xa0dc005800d02401\n"
".quad 0xa15e003038d01001,0xa21c043038d01001,0x211c001000000021,0x26dc003006000068\n"
".quad 0xd0dc00300a000068,0xd15c005800d02401,0xc09c033038d01001,0x365c0020284000e0\n"
".quad 0x369c003032000074,0x20dc23300a000074,0x215c035800c00080,0x675c035800c00078\n"
".quad 0xc19c0320284000e0,0x30dc434800c01800,0x815e004000000014,0x071de43038cff001\n"
".quad 0xd79c0328004000a0,0x515c005800c00079,0x209c03300e400044,0x619c032039c00010\n"
".quad 0x515e0020284000e0,0x30dc43300e4000c0,0xd1dc2348004000b0,0x869e005800c00081\n"
".quad 0x215c853034cff001,0x86de009400000000,0x865e003036cff001,0xa45e003032cff001\n"
".quad 0x809e003000400055,0x70dc433008cff001,0x615c234000000078,0x61dc035800c00080\n"
".quad 0x209e005800c00078,0x211c033026400054,0x51dc4320284000e1,0x249e00400000001c\n"
".quad 0x409c2330264000c0,0x415c035800c00080,0xc4dc035800c00078,0xb61e004800c03000\n"
".quad 0x215c43302c400055,0xd09c034000000014,0x375c032039c00011,0xc4dc0320284000e1\n"
".quad 0x30dc434800c03c00,0x411c0348004000b0,0xd79c232039c00010,0x249c855800c00081\n"
".quad 0xd7dc039400000000,0x515c435800c00079,0x619c0348004000b0,0x349c032039c00010\n"
".quad 0xe0dc4320284000e1,0x71dc43400000007d,0x209c2348004000b0,0x24dc035800c00081\n"
".quad 0xd79c035800c00079,0x939e0020284000e0,0x24dc43302e400055,0xd09c03400000004c\n"
".quad 0xc75c032039c00011,0xe31c234800c04800,0xe35c035800c00081,0x30dc435800c00079\n"
".quad 0xd75c0348004000b0,0xc35c4320284000e1,0xe31c034000000034,0x551c032039c00011\n"
".quad 0x101e0020284000e1,0xd35c4330004000c1,0x249c0348004000b0,0x455c232039c00011\n"
".quad 0x479c035800c00081,0x34dc435800c00079,0x451c0348004000b1,0x555c432039c00011\n"
".quad 0xd79c234000000079,0x859e005800c00081,0x555c43302c4000c1,0xd71c0348004000b1\n"
".quad 0xd75c032039c00011,0xe29e005800c00079,0x601c85302e4000c0,0xe75c439400000000\n"
".quad 0x459c854000000075,0x229c859400000000,0xd75c439400000000,0x221c8548004000b1\n"
".quad 0xc2dc859400000001,0xc3dc859400000001,0x441c859400000000,0x001de79400000001\n"
".quad 0x0000008000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x8ccccd3dcccccd00,0x2aaaab3f2aaaab3f,0xe38e39bee38e393e\n"
".quad 0x00004e00080a043d,0x2419030024002000,0x000000000c170400,0x11f0000020000400\n"
".quad 0x000000000c170400,0x21f0000018000300,0x000000000c170400,0x11f0000010000200\n"
".quad 0x000000000c170400,0x21f0000008000100,0x000000000c170400,0x21f0000000000000\n"
".quad 0x07005400080d0400,0x005de40000000500,0x00dc042800440400,0x011c042c00000098\n"
".quad 0x001c042c00000088,0x009c042c00000094,0x015de42c00000084,0x351ca32800400110\n"
".quad 0x049ca32008400030,0x019de22004400020,0x511e0318fa000000,0x201e044800c00bfc\n"
".quad 0x209e041800000051,0x21dc231800000049,0x00dc001a0e000011,0x209c00300c800014\n"
".quad 0x21dc23300c800004,0x30dc0018a0400111,0x515e035000f0eff0,0x209c004800c007fc\n"
".quad 0x30dc005000f0fff0,0x41dc23580000000c,0x20dc0018a0400111,0x43dc233006000008\n"
".quad 0x409c031a20000015,0x31dc0020244000e1,0x0005e7208ed0a000,0x20dc038000000000\n"
".quad 0x01dc004800fffffd,0x201c035000cfc000,0x20de044800c00005,0x015de4180000000d\n"
".quad 0x311c00280000001c,0x421c865000cfc000,0x201e0480104000fc,0x40dc031800000001\n"
".quad 0x019c004800fffffd,0x601c865000cfc000,0x20de0480104101fc,0x32dc00180000000d\n"
".quad 0x015de45000cfc000,0x425c86280000002c,0x40dc0380104202fc,0x20de044800c00005\n"
".quad 0x315c00180000000d,0x479c865000cfc000,0x01dde480104505fc,0x669c862800000014\n"
".quad 0x029de480104404fc,0xa59c862800000018,0x215c2380104303fc,0x219c035800c00080\n"
".quad 0x40dc035800c00078,0x029de24800c00ffd,0x515c431800000010,0x30dc034000000018\n"
".quad 0x411c0320244000e0,0x219c034800c02005,0x32dc232015800080,0x331c035800c00080\n"
".quad 0x409c035800c00078,0x51dc4320244000e0,0x311c034800400090,0xb0dc432015800080\n"
".quad 0x22dc234000000030,0x231c035800c00080,0x315c435800c00078,0x209c034800400090\n"
".quad 0xb0dc432015800080,0x461c854000000030,0x455c038400000000,0x30dc434800c03801\n"
".quad 0x64dc854800400090,0x511c038400000000,0x265c8520244000e1,0x415c038400000000\n"
".quad 0x409c035800c00078,0x40dc234800c04001,0x411c035800c00080,0x209c0320158000a0\n"
".quad 0x30dc4320244000e0,0x219c234000000014,0x21dc035800c00080,0x315c435800c00078\n"
".quad 0x209c0348004000b0,0x60dc4320158000a0,0x30dc43400000001c,0x0081e748004000b0\n"
".quad 0x3120004000001320,0x8161005000000021,0x32a0045000000065,0x41a0001000000079\n"
".quad 0x8121005000000060,0x5160005000000000,0x61a0005000000024,0x4120005000000000\n"
".quad 0x5160005000000024,0x61a0005000000058,0x4121005000000064,0x5161005000000058\n"
".quad 0x61a0005000000068,0x4121005000000024,0x56e1005000000068,0x61a0005000000078\n"
".quad 0x4720005000000058,0x6120005000000078,0xc161005000000068,0xc3a300500000006d\n"
".quad 0x476000500000006d,0xb120005000000078,0x51a000580000006d,0x51e0005800d02400\n"
".quad 0xc5e000303ad01000,0x6120003008000071,0x01a1e2300e000014,0x01e1e21871ee3470\n"
".quad 0x71220018fe71c71c,0x3120043008cff001,0x4322011000000011,0x3120042014000018\n"
".quad 0x44220110004000c1,0xe2a0002014000030,0xe2e0005800d02400,0xa46004303ad01000\n"
".quad 0xa2a0001000000041,0x7322003016000038,0x32a0043014cff001,0xb6a1001000000069\n"
".quad 0x3320045000000071,0xc322011000000031,0x43a2012014000018,0xa2a0002014000030\n"
".quad 0xa2e0005800d02401,0xa3a004303ad01001,0xa2a0001000000039,0x7322003016000068\n"
".quad 0x32a0043014cff001,0x3320041000000059,0xc322011000000031,0x4322012014000018\n"
".quad 0xc2a0002014000030,0xa32004500000006d,0xa2e0001000000031,0xa5a0005800d02400\n"
".quad 0xb2a000303ad01000,0x75a200302c000028,0x32a0043014cff001,0xb262001000000025\n"
".quad 0x37a004303ad01001,0x05a1e41000000059,0xe1a20128004000a0,0x42a2012014000019\n"
".quad 0xc120002014000018,0xc160005800d02401,0xc1e200303ad01001,0xa2a004303ad01001\n"
".quad 0x41a0001000000029,0x472000300a000070,0xb16000300e000070,0xb1e0005800d02401\n"
".quad 0x412003303ad01001,0x71a20020244000e1,0x56a000300ccff001,0x56e000300e00006c\n"
".quad 0x416023301200006c,0x41e0035800c00080,0x4120035800c00078,0x772200202dc00010\n"
".quad 0x51e0433038cff001,0x716200400000001c,0x76a200303acff001,0x76e2003034cff001\n"
".quad 0x5160003036cff001,0xc5e2003026400024,0xb422003000400035,0x5262003032400035\n"
".quad 0x71604330264000c0,0x41e00348004000b0,0x44e0034800c00801,0x4260854800c01001\n"
".quad 0x71e0039400000000,0x70220020244000e0,0xa5e20030004000c1,0x6122003030400035\n"
".quad 0x7760233010400034,0x7160035800c00080,0x31a0035800c00078,0x42220020244000e1\n"
".quad 0xd1604330104000c0,0x7120034000000015,0x626023202dc00010,0x64e0035800c00080\n"
".quad 0x5160435800c00078,0x41e00348004000b0,0x9260434800c01801,0x44e003400000004c\n"
".quad 0x4220854800c02001,0x71e0039400000000,0x34e00320244000e0,0x76220020244000e1\n"
".quad 0x62200330304000c1,0x316023202dc00010,0x31a0035800c00081,0x7760235800c00079\n"
".quad 0x77a0035800c00080,0x5160435800c00078,0x9260434000000018,0x71a00348004000b0\n"
".quad 0x41e003202dc00010,0xd120434800c02801,0x4520034000000079,0x77a0034800c03001\n"
".quad 0x41e04320244000e0,0x31200348004000b0,0xe4e023202dc00011,0xe760035800c00081\n"
".quad 0x5160435800c00079,0x04220048004000b0,0x34e04330324000c1,0x4760034000000075\n"
".quad 0x55200320244000e1,0xe4a00320244000e1,0x862085202dc00011,0x4560239400000000\n"
".quad 0x47a0035800c00081,0x34e0435800c00079,0x45200348004000b1,0x556043202dc00011\n"
".quad 0xd7a0234000000079,0x6020855800c00081,0x5560439400000000,0xd5a00348004000b1\n"
".quad 0xd76003202dc00011,0x4420855800c00079,0x22a0859400000000,0xe760439400000001\n"
".quad 0xd5e0434000000075,0x63208548004000b1,0x43a0859400000001,0x2460859400000001\n"
".quad 0x00a1e79400000000,0x4180034000000660,0x41c0034800c00801,0x4300034800c01001\n"
".quad 0x6180034800c02001,0x42800320244000e0,0x72c0034800c01801,0xc3800320244000e0\n"
".quad 0x61c02320244000e0,0x6300035800c00080,0x04c1e45800c00078,0xa2800328004000a0\n"
".quad 0xb3402320244000e0,0xb3c0035800c00080,0x71c0435800c00078,0xa400234000000030\n"
".quad 0xa300035800c00080,0x6180035800c00078,0xd340432027c00010,0xe3c023400000003c\n"
".quad 0xe440035800c00080,0x0400435800c00078,0x71c0434000000031,0xb3000348004000b0\n"
".quad 0xf3c0432027c00010,0x4440034000000044,0xd340434800c02801,0xa2800348004000b0\n"
".quad 0x1440032027c00010,0x45000320244000e1,0x02c0434800c03001,0xe3800348004000b1\n"
".quad 0x1540232027c00010,0x15c0035800c00081,0x4480035800c00079,0xf3c04320244000e1\n"
".quad 0x55004348004000b0,0x140003400000005d,0x2540232027c00011,0x25c0035800c00081\n"
".quad 0x4440435800c00079,0x24800348004000b1,0x54c0432027c00011,0x600085400000005d\n"
".quad 0xc640859400000000,0x34c0439400000000,0xa2008548004000b1,0xe600859400000000\n"
".quad 0x0680859400000000,0x2780859400000001,0x4240859400000001,0x2580859400000000\n"
".quad 0x001de79400000000,0x0000008000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0xcfd0000000000000,0xe38e39439fd00043\n"
".quad 0x0802043de38e39be,0x000004000000d400,0x0000d30008020400,0x0802040000000300\n"
".quad 0x000002000000d200,0x0000d00008020400,0x0802040000000100,0x000000000000ce00\n"
".quad 0x0000d50008020400,0x080a040000000500,0x2800200000007800,0x0c17040028190300\n"
".quad 0x2400050000000000,0x0c17040011f00000,0x2000040000000000,0x0c17040011f00000\n"
".quad 0x1800030000000000,0x0c17040021f00000,0x1000020000000000,0x0c17040011f00000\n"
".quad 0x0800010000000000,0x0c17040021f00000,0x0000000000000000,0x080d040021f00000\n"
".quad 0x0000020002001800,0x00440400005de400,0x00000094001c0428,0x00000084009c042c\n"
".quad 0x0000009800dc042c,0x00000088011c042c,0x04400020049ca32c,0x00000010061de220\n"
".quad 0x08400030351ca318,0x00c00005209c0320,0x00fffffd201c0348,0x00c02ffd411c0348\n"
".quad 0x00c03805421c0348,0x00c04005431c0348,0x00c0180144dc0348,0x244000e1419c0348\n"
".quad 0x044000e0415c0320,0x00c027fd40dc0320,0x044000e0811c0348,0x00c00801425c0320\n"
".quad 0x004000e0c21c0348,0x00c00ffd41dc0320,0x00c0200542dc0348,0x044000e1329c0348\n"
".quad 0x00c00080631c2320,0x00c00078635c0358,0x004000e0309c0358,0x004000e090dc0320\n"
".quad 0x31800080639c0320,0x244000e0755c0320,0x244000e0b01c0320,0x00000034c19c4320\n"
".quad 0x00c00080a1dc2340,0x00c00078a2dc0358,0x0040009063dc4358,0x31800080a31c0348\n"
".quad 0x0000002c719c4320,0x00c0008051dc2340,0x00c0007852dc0358,0x00400090635c4358\n"
".quad 0x31800080529c0348,0x0000002c715c4320,0x00c0008041dc2340,0x00c00078441c0358\n"
".quad 0x0040009052dc4358,0x31800080419c0348,0x00000040711c4320,0x00c00080315c2340\n"
".quad 0x00c00078341c0358,0x0040009041dc4358,0x31800080311c0348,0x0000004050dc4320\n"
".quad 0x00c00080241c2340,0x00c00078245c0358,0x00400090315c4358,0x31800080209c0348\n"
".quad 0x0000004500dc4320,0x00c00080845c2340,0x00c00078859c0358,0x0040009030dc4358\n"
".quad 0x31800080841c0348,0x00000059145c4320,0x00c00081521c2340,0x00c00079559c0358\n"
".quad 0x00400091145c4358,0x31800081569c0348,0x00000058821c4320,0x00000000475c8540\n"
".quad 0x00000000265c8584,0x0040009086dc4384,0x00000000e21c8548,0x00c00080055c2384\n"
".quad 0x00c00078059c0358,0x31800080079c0358,0x00000000639c8520,0x00000059501c4384\n"
".quad 0xfa000000015de240,0x0000005120de0418,0x00c04001411c0318,0x00c03801455c0348\n"
".quad 0x00000049209e0448,0x0a80001430dc0018,0x244000e0419c0330,0x244000e1511c0320\n"
".quad 0x0a800004209c0020,0x00f0eff030dc0030,0x00c00080415c2350,0x00c0007841dc0358\n"
".quad 0x00000000a29c8558,0x0040009007dc4384,0x00f0fff0209c0048,0x0000000c30dc0050\n"
".quad 0x318000a0411c0358,0x0000001c515c4320,0x00c0008062dc2340,0x00c0007861dc0358\n"
".quad 0x0600000820dc0058,0x004000b0515c4330,0x318000a0609c0348,0x0000001cb19c4320\n"
".quad 0x8ed0a00031dc0040,0x00000000c01c8520,0x0000000103dc8584,0x00000001a5dc8584\n"
".quad 0x00000001e59c8584,0x004000b060dc4384,0x000012e00081e748,0x0000007481200040\n"
".quad 0x0000005971610050,0x0000003d33200450,0x0000005c41a00010,0x00000001d1210050\n"
".quad 0x0000006451600050,0x0000000061a00050,0x0000006441200050,0x0000002851600050\n"
".quad 0x0000005861a00050,0x0000002841210050,0x0000003851610050,0x0000006461a00050\n"
".quad 0x0000003841210050,0x0000003c56e10050,0x0000002861a00050,0x0000003c46a00050\n"
".quad 0x0000003861200050,0x0000006da1610050,0x0000006da2e30050,0x0000003c47200050\n"
".quad 0x0000006db1200050,0x00d0240051a00058,0x38d0100051e00058,0x08000069a6200030\n"
".quad 0x0e00001461200030,0x71ee347001a1e230,0xfe71c71c01e1e218,0x08cff00181220018\n"
".quad 0x0000001131200430,0x1800001844220110,0x004000c131200420,0x1800004044220110\n"
".quad 0x00d02400b3200020,0x38d01000b3600058,0x00000041a4200430,0x1a00002cc2e00010\n"
".quad 0x0000003933200430,0x16cff00182e20010,0x0000002d33a00430,0x00000069b2e10010\n"
".quad 0x18000018e3a20150,0x1800003843a20120,0x00d02400b3200020,0x38d01000b3600058\n"
".quad 0x00000039a3a00430,0x1a00002cc2e00010,0x16cff00183220030,0x0000002932a00430\n"
".quad 0x0000003133200410,0x14000018c3220110,0x1400003043220120,0x0000006da2a00020\n"
".quad 0x00000031a3e00450,0x00d02400a2e00010,0x38d01000a7a00058,0x3c000028b7a00030\n"
".quad 0x0000006532a00430,0x3ccff00187a20010,0x0000007937a00430,0x14000019e1a20110\n"
".quad 0x38d01001b7a20020,0x1400001842a20130,0x00d02401a1200020,0x38d01001a1600058\n"
".quad 0x38d01001a1e20030,0x00000029a2a00430,0x0a00006841a00010,0x0e00006846a00030\n"
".quad 0x00d02401b1600030,0x38d01001b1e00058,0x244000e141200330,0x34cff00186a20020\n"
".quad 0x0e00006c56600030,0x3c00006c56e00030,0x00c0008041602330,0x00c0007841e00358\n"
".quad 0x32cff00186620058,0x36cff00186e20030,0x0000001c51604330,0x38cff00181e20040\n"
".quad 0x004000a00721e430,0x2e40003594620028,0x1040002471e00030,0x39c0001041200330\n"
".quad 0x00400035a3220020,0x104000c072220030,0x004000b051604330,0x244000e091e00348\n"
".quad 0x00c0100142600320,0x0000000042208548,0x00c0008077a02394,0x00c0007877e00358\n"
".quad 0x244000e092600358,0x0ccff00181220020,0x0000007de1604330,0x00c0008092202340\n"
".quad 0x00c0007897a00358,0x3a40003441220058,0x244000e131a00330,0x0000007884e04320\n"
".quad 0x3a4000c042220040,0x00c0008067602330,0x00c0007867a00358,0x39c0001071200358\n"
".quad 0x2c400035b3620020,0x00000079d1e04330,0x004000b051604340,0x00c0200147600348\n"
".quad 0x39c0001061a00348,0x0000000042208520,0x244000e1d7600394,0x00c0280147a00320\n"
".quad 0x004000b071e04348,0x00c00081d7e02348,0x00c00079d1200358,0x39c0001092200358\n"
".quad 0x244000e1e7a00320,0x00000011f1604320,0x004000b132604340,0x39c00011d1200348\n"
".quad 0x00c00081e4e02320,0x00c00079e7600358,0x00c0300145200358,0x004000b051604348\n"
".quad 0x0000007534e04348,0x244000e147600340,0x244000e155200320,0x39c00011e4a00320\n"
".quad 0x2e4000c114620020,0x00c0008145602330,0x00c0007947a00358,0x004000b134e04358\n"
".quad 0x39c0001145200348,0x0000007955604320,0x00c00081d7a02340,0x004000c0c0220058\n"
".quad 0x004000b155604330,0x39c00011d7200348,0x00c00079d7600320,0x2c4000c0d3220058\n"
".quad 0x0000000084608530,0x00000075e7604394,0x0000000060208540,0x0000000043208594\n"
".quad 0x004000b1d7604394,0x0000000122a08548,0x00000001c3e08594,0x0000000143a08594\n"
".quad 0x0000000024208594,0x0000062000a1e794,0x244000e091800340,0x00c0100141c00320\n"
".quad 0x00c0200142400348,0x00c0280143400348,0x244000e073000348,0x244000e094000320\n"
".quad 0x004000a002c1e420,0x00c0008061c02328,0x00c0007862400358,0x244000e132000358\n"
".quad 0x244000e0d4c00320,0x17c0001061800320,0x0000002471c04320,0x00c0300144400340\n"
".quad 0x00c0008082402348,0x00c0007883400358,0x004000b071c04358,0x244000e115000348\n"
".quad 0x17c0001082000320,0x0000003492404320,0x00c00080c3402340,0x00c00078c4400358\n"
".quad 0x004000b092404358,0x17c00010c3000348,0x00000044d3404320,0x00c0008104402340\n"
".quad 0x00c0007904800358,0x004000b0d3404358,0x17c0001104000348,0x0000004914404320\n"
".quad 0x00c0008135402340,0x00c0007936000358,0x004000b114404358,0x17c0001134800348\n"
".quad 0x0000006154c04320,0x00c0008145402340,0x00c0007946000358,0x004000b134c04358\n"
".quad 0x17c0001145000348,0x0000006152c04320,0x0000000060008540,0x00000000c5808594\n"
".quad 0x004000b0b5404394,0x0000000087408548,0x0000000105c08594,0x0000000123808594\n"
".quad 0x0000000143c08594,0x0000000046408594,0x0000000022808594,0x00000000001de794\n"
".quad 0x0000000000000080,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x9fd00043cfd00000,0xe38e39bee38e3943,0x00004c00080a043d,0x2019030020002000\n"
".quad 0x000000000c170400,0x21f0000018000300,0x000000000c170400,0x11f0000010000200\n"
".quad 0x000000000c170400,0x21f0000008000100,0x000000000c170400,0x21f0000000000000\n"
".quad 0x01000c00080d0400,0x005de40000000100,0x011c042800440400,0x00dc042c00000088\n"
".quad 0x009c042c00000098,0x001c042c00000084,0x345ca32c00000094,0x011de22008400030\n"
".quad 0x041ca318fa000000,0x209e042004400020,0xffdc851800000045,0x201e04c900001003\n"
".quad 0x20dc001800000041,0x001c003008800014,0x30dc003008800004,0x001c005000f0eff0\n"
".quad 0x30dc005000f0fff0,0x00dc00580000000c,0x101c033006000000,0x31dc0020204000e1\n"
".quad 0x0fdc03208ed0a000,0xffdc04207e000004,0x13dc2350ee0000ff,0x00dc03188ec00005\n"
".quad 0x011c044800fffffd,0x33dc032c00000084,0x0000071a22c00bf4,0x411e0360000025e0\n"
".quad 0x13dc236000c00008,0x415c031a22c007f9,0x0005e74800c00800,0x20de044000002520\n"
".quad 0x21dc00180000000d,0x009c035000cfc000,0x311c004800c00005,0x015de45000cfc000\n"
".quad 0x451c86280000001c,0x209e0480104000fc,0x10dc031800000009,0x209c004800fffffd\n"
".quad 0x019de45000cfc000,0x655c862800000008,0x20de0480104101fc,0x31dc00180000000d\n"
".quad 0x015de45000cfc000,0x469c86280000001c,0x10dc0380104202fc,0x20de044800c00005\n"
".quad 0x315c00180000000d,0x46dc865000cfc000,0x00dde480104505fc,0x23dc862800000014\n"
".quad 0x639c8680104404fc,0x109c0380104303fc,0x011c234800c00ffd,0x015c035800c00080\n"
".quad 0x021de25800c00078,0x10dc031800000010,0x209c034800c02005,0x411c4320204000e0\n"
".quad 0x019c034000000014,0x301c032011800080,0x20dc2320204000e0,0x215c035800c00080\n"
".quad 0x41dc435800c00078,0x211c034800400090,0x309c432011800080,0x00dc234000000014\n"
".quad 0x025c035800c00080,0x215c435800c00078,0x009c034800400090,0x301c432011800080\n"
".quad 0x449c854000000024,0x125c038400000000,0x00dc434800c04001,0x64dc854800400090\n"
".quad 0x911c038400000000,0x201c8520204000e0,0x415c038400000000,0x40dc235800c00078\n"
".quad 0x409c035800c00080,0x30dc4320118000a0,0x30dc434000000014,0x0001e748004000b0\n"
".quad 0x311c0040000013a0,0x215d005000000051,0x021de25000000001,0x419c001871ee3470\n"
".quad 0x411d005000000048,0x515c005000000055,0x619c005000000068,0x411c005000000054\n"
".quad 0x515c005000000068,0x619c005000000038,0x411d005000000000,0x515d005000000038\n"
".quad 0x619c00500000003c,0x411d005000000068,0x55dd00500000003c,0x619c00500000006c\n"
".quad 0x459c005000000038,0x025de2500000006c,0x611c0018fe71c71c,0x615d00500000003c\n"
".quad 0x465c00500000005d,0x711c00500000006c,0x519c00580000005d,0x51dc005800d02400\n"
".quad 0x661c003032d01000,0x611c003008000059,0x319c04300e000014,0x66df00100000006d\n"
".quad 0x811e00500000005d,0x311c043008cff001,0x429e011000000011,0x311c04200c000020\n"
".quad 0x431e0110004000c1,0xb19c00200c000028,0xb1dc005800d02401,0x329c043032d01001\n"
".quad 0x73dd00100000003d,0x619c005000000059,0xa6dc04300e00006c,0x819e001000000031\n"
".quad 0x319c04300ccff001,0x619e011000000019,0x419e012014000020,0xf29c002014000018\n"
".quad 0xf2dc005800d02400,0xa2dc003032d01000,0x83de00301600003c,0x329c043016cff001\n"
".quad 0x339c041000000039,0xe39e01100000003d,0x429e012014000020,0x639c002014000038\n"
".quad 0xe31c00500000005d,0xe35c005800d02400,0xc35c003032d01000,0x839e00301a000038\n"
".quad 0x331c04301acff001,0x339c041000000069,0xe21e011000000039,0x639e002018000020\n"
".quad 0x411e013032d01001,0x625c002018000020,0x631c005800d02401,0x121c033032d01001\n"
".quad 0xa11c0420204000e1,0x935c001000000011,0x931c003018000058,0x839e00301c000058\n"
".quad 0x859c233032cff001,0x825c035800c00080,0xe3dc005800c00078,0x039de43026400024\n"
".quad 0x625c4328004000a0,0xf3de004000000025,0xa4dc0430264000c0,0x821c031000000019\n"
".quad 0x119c03201dc00010,0xa59c044800c00801,0x925c431000000029,0x619c0348004000b0\n"
".quad 0x81de0020204000e0,0x83dc85301acff001,0x629c239400000000,0x635c035800c00080\n"
".quad 0x71de005800c00078,0x619c033028400034,0xa35c43201dc00010,0x12dc034000000034\n"
".quad 0x729c004800c01001,0x721c005800d02401,0x725e003032d01001,0xd1dc4330284000c0\n"
".quad 0xb35c0348004000b0,0xa21c0020204000e0,0x625c85301000005c,0xd3dc239400000000\n"
".quad 0xd51c035800c00080,0x82de005800c00078,0xd21c033010cff001,0xf25c43201dc00010\n"
".quad 0xb1de004000000050,0x119c033024400034,0x925c434800c01801,0x71de0048004000b0\n"
".quad 0x12dc0330244000c0,0x13dc034800c02001,0x81dc854800c02801,0x149c039400000000\n"
".quad 0x619c034800c03001,0x135c0320204000e0,0x725e004800c03801,0xb2dc033032d01001\n"
".quad 0xf21c0320204000e0,0x23dc0320204000e0,0x61dc2320204000e1,0x645c035800c00080\n"
".quad 0xa49c005800c00078,0xb25c23301200005c,0xb29c035800c00080,0x619c035800c00078\n"
".quad 0x71dc43201dc00010,0x951c434000000044,0x845c234000000028,0x825c035800c00080\n"
".quad 0x71dc435800c00078,0xb29c0348004000b0,0x125c43201dc00010,0x845e004000000025\n"
".quad 0x42dc433018cff001,0xf5dc2348004000b1,0xf31c035800c00080,0x821c035800c00078\n"
".quad 0x051c04201dc00010,0x75dc432c00000084,0x925c434000000031,0xf31c0348004000b0\n"
".quad 0xd3dc03201dc00010,0x441e0320204000e0,0x849e006000c00009,0x735c433024cff001\n"
".quad 0x0fdc8548004000b1,0x0fdc85c900000001,0xf39c03c900000801,0xf51c23201dc00010\n"
".quad 0x145e005800c00080,0xf3dc03302a400035,0x249e005800c00078,0x141e003000400035\n"
".quad 0x43dc43302a4000c1,0x201e00400000003d,0x641c8530004000c1,0xf3dc439400000000\n"
".quad 0xa01c8548004000b0,0x811c859400000000,0xc59c859400000000,0xe4dc859400000000\n"
".quad 0x26dc959400000000,0x0081e79400000000,0x01200440000000a0,0x4122032c00000084\n"
".quad 0x4fe0856000c00008,0x4fe085c900000000,0x00a1e7c900000800,0x41400040000002e0\n"
".quad 0x0240005000000051,0x2200005000000000,0xa180005000000049,0x5140005000000069\n"
".quad 0x824100300af00001,0xb1c0005000000024,0x514000500000006d,0x9280005000000018\n"
".quad 0xe200005000000018,0x5180005000000038,0xa1c100500000001c,0xf24000500000001c\n"
".quad 0x014004500000003c,0x6181002c00000084,0x71c0005000000020,0x0101e25000000020\n"
".quad 0x5142031800000004,0x6181006000c00008,0x71c1005000000024,0xf100855000000024\n"
".quad 0x518085c900001003,0x51c085c900000000,0x115c03c900000800,0x119c034800c00801\n"
".quad 0x11dc034800c01001,0x125c034800c01801,0x515c034800c02001,0x619c0320204000e0\n"
".quad 0x721c0320204000e0,0x929c0320204000e0,0x51dc2320204000e0,0x525c035800c00080\n"
".quad 0x62dc235800c00078,0x631c035800c00080,0x111c035800c00078,0x059de44800c02801\n"
".quad 0x735c4328004000a0,0xb1dc434000000024,0x84dc234000000030,0x825c035800c00080\n"
".quad 0x431c035800c00078,0x511c0320204000e0,0x325c43202dc00010,0xa2dc234000000025\n"
".quad 0xa4dc035800c00080,0xd15c435800c00078,0x619c0348004000b0,0xb2dc43202dc00010\n"
".quad 0xc4dc23400000004c,0xc5dc035800c00080,0x71dc435800c00078,0x821c0348004000b0\n"
".quad 0x335c43202dc00010,0x14dc03400000005d,0x925c434800c03001,0xa29c0348004000b0\n"
".quad 0x34dc03202dc00010,0x161c0320204000e1,0xb2dc434800c03801,0xc31c0348004000b0\n"
".quad 0x345c23202dc00010,0x35dc035800c00081,0x861c035800c00079,0xd35c4320204000e1\n"
".quad 0x145c4348004000b0,0x341c03400000005d,0x84dc23202dc00011,0x85dc035800c00081\n"
".quad 0x145c435800c00079,0x859c0348004000b1,0x35dc43202dc00011,0x455c85400000005d\n"
".quad 0x601c859400000000,0x851c859400000000,0x75dc439400000000,0xa49c8548004000b1\n"
".quad 0xc3dc859400000000,0x06dc859400000000,0x669c859400000001,0x239c959400000001\n"
".quad 0x4fdc859400000000,0x5fdc95c900000000,0xffdc04c900000000,0x001de750ee0000ff\n"
".quad 0x0000008000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x9fd00043cfd00000\n"
".quad 0xe38e39bee38e3943,0x0000ca000802043d,0x0802040000000300,0x000002000000c900\n"
".quad 0x0000c70008020400,0x0802040000000100,0x000000000000c500,0x0000cc0008020400\n"
".quad 0x0802040000000500,0x000004000000cb00,0x00005f00080a0400,0x3419030034002000\n"
".quad 0x000000000c170400,0x11f0000030000600,0x000000000c170400,0x21f0000028000500\n"
".quad 0x000000000c170400,0x21f0000020000400,0x000000000c170400,0x21f0000018000300\n"
".quad 0x000000000c170400,0x11f0000010000200,0x000000000c170400,0x21f0000008000100\n"
".quad 0x000000000c170400,0x21f0000000000000,0x05003c00080d0400,0x005de40000000300\n"
".quad 0x001c042800440400,0x00dc042c00000094,0x011c042c00000098,0x009c042c00000088\n"
".quad 0x351ca32c00000084,0x04dca32008400030,0x41dc232004400020,0x301c031a0ec00501\n"
".quad 0x411c034800fff97d,0x01dc0320264000e1,0x41dc231880c002f8,0x31dc231880c006fd\n"
".quad 0x0001e71a20c00ffd,0x401c038000000000,0x309c034800fffffd,0x20de044800fffffd\n"
".quad 0x201e041800000001,0x31dc001800000009,0x009c005000cfc000,0x301c035000cfc000\n"
".quad 0x00dde44800c00005,0x239c86280000001c,0x201e0480104202fc,0x019c001800000001\n"
".quad 0x631c865000cfc000,0x221e0480104303fc,0x845c001800000051,0x00dde45000cfc000\n"
".quad 0x249c862800000044,0x401c0380104000fc,0x201e044800c00005,0x00dc001800000001\n"
".quad 0x22dc865000cfc000,0x01dde480104505fc,0x629c86280000000c,0x041de480104404fc\n"
".quad 0x001c862800000018,0x415c2380104101fd,0x419c035800c00080,0x409c035800c00078\n"
".quad 0x03dde44800c017fd,0x515c432800400080,0x209c034000000018,0x419c0320264000e0\n"
".quad 0x40dc03201fc00010,0x225c234800c03005,0x235c035800c00080,0x51dc435800c00078\n"
".quad 0x30dc034800400090,0x211c0320264000e0,0x909c43201fc00010,0x325c234000000034\n"
".quad 0x335c035800c00080,0x215c435800c00078,0x309c034800400090,0x90dc43201fc00010\n"
".quad 0x225e044000000034,0x655c85180000004d,0x30dc438400000000,0x91dc004800400090\n"
".quad 0x441c85208e4000d4,0x245c858400000000,0x0000078400000000,0x009de460000002e0\n"
".quad 0x0001e728000000fc,0x30de034000000280,0x20de044800c01001,0x31dc00180000000d\n"
".quad 0x0001e7208e4000e4,0x40de0340000001e0,0x20de044800c00c01,0x31dc00180000000d\n"
".quad 0x0001e7208e4000e4,0x81dc004000000140,0x0001e7208e4000d4,0x811c0040000000e0\n"
".quad 0x90dc005000f0eff0,0x411c005000f0fff0,0x30dc005800000010,0x31dc00300800000c\n"
".quad 0x0021f4208ed0a000,0x009df24000000000,0x009df21800000028,0x009df21800000030\n"
".quad 0x009df2180000002c,0x009df21800000008,0x469c03180000000c,0x20dc034800c05401\n"
".quad 0x46dc034800fffffc,0xa09c034800c06001,0x319c0320264000e1,0x021de4080ec00030\n"
".quad 0x20dc2328004000a0,0x215c035800c00080,0xb11c035800c00078,0x61de0320264000e1\n"
".quad 0x209c036000c00008,0x30dc432011c00010,0x415c234000000014,0x419c035800c00080\n"
".quad 0x71dc865800c00078,0x30dc431400400000,0x411c0348004000b0,0x515c432011c00010\n"
".quad 0x515c434000000018,0x701de748004000b0,0x419c034803fff2a0,0x41dc034800c00c01\n"
".quad 0x425c034800c01801,0x43dc034800c02401,0x619c034800c03001,0x721c0320264000e0\n"
".quad 0x961c0320264000e0,0x035de420264000e0,0xf59c0328004000a0,0x61dc2320264000e0\n"
".quad 0x625c035800c00080,0x83dc235800c00078,0x855c035800c00080,0x71dc435800c00078\n"
".quad 0x619c034000000024,0xf25c43201bc00010,0x85dc234000000054,0x83dc035800c00081\n"
".quad 0x665c235800c00079,0x669c035800c00081,0x71dc435800c00079,0x821c0348004000b0\n"
".quad 0x755c43201bc00010,0x95dc43400000003d,0x43dc034000000069,0x469c034800c03c01\n"
".quad 0x925c434800c04801,0x851c0348004000b0,0xf3dc03201bc00011,0xa4dc0320264000e0\n"
".quad 0x555c4320264000e1,0xf61c2348004000b1,0xf65c035800c00080,0x659c035800c00078\n"
".quad 0x36dc03201bc00011,0x865c435800c00079,0x75dc434000000065,0xf61c0348004000b1\n"
".quad 0x33dc23201bc00010,0x601c855800c00081,0x965c439400000000,0x369c0348004000b1\n"
".quad 0xf35c43201bc00011,0x845c85400000006c,0x449c859400000000,0xd6dc439400000001\n"
".quad 0x641c8548004000b0,0x829c859400000001,0xa2dc859400000001,0x239c859400000001\n"
".quad 0x431c859400000000,0x001de79400000000,0x001de74000001a00,0x031de44000000620\n"
".quad 0x039de42800000028,0x041de4280000002c,0x001de72800000044,0x029de440000005a0\n"
".quad 0x02dde42800000030,0x045de42800000038,0x001de72800000040,0x41dc234000000520\n"
".quad 0x000007190e0000fd,0x0001e760000000e0,0x41dc234000000080,0x0021f4190ec00bfd\n"
".quad 0x029de44000000000,0x045df42800000030,0x031de42800000040,0x041df42800000028\n"
".quad 0x009d002800000044,0x011de25000000045,0x20de0018f68f5c28,0x209c003014cfc000\n"
".quad 0x449c003018cfc000,0x439c0030004000f4,0x42dc003006400104,0x001de73004400104\n"
".quad 0x41dc234000000300,0x000007190e0000fd,0x0001e760000000e0,0x41dc234000000080\n"
".quad 0x0021f4190ec00bfd,0x02dde44000000000,0x045df42800000038,0x039de42800000040\n"
".quad 0x041df4280000002c,0x501c002800000044,0x209c005000000041,0xe0dc005000000049\n"
".quad 0x001c005000000038,0x001c005000000044,0xb09c005000000008,0x001c00500000002c\n"
".quad 0x00dd00500000000c,0x001c005000000045,0x309c005000000008,0x30de00301ccfc000\n"
".quad 0x001c003016cfc000,0x029e005000efe000,0x031e003004400104,0x001c003006400104\n"
".quad 0x509c003024400114,0x00dd005000000049,0x021de25000000045,0x211c001871ee3470\n"
".quad 0x209d005000000040,0x30dc005000000001,0x411c005000000038,0x209c005000000000\n"
".quad 0x30dc005000000038,0x411c005000000030,0x209d005000000044,0x30dd005000000030\n"
".quad 0x411c005000000028,0x209d005000000038,0x35dd005000000028,0x411c00500000002c\n"
".quad 0x259c005000000030,0x025de2500000002c,0x409c0018fe71c71c,0x60dd005000000028\n"
".quad 0x735d00500000005d,0x265c005000000059,0x709c00500000002c,0x311c00580000005d\n"
".quad 0x315c005800d02400,0x661c003032d01000,0x409c003004000059,0x311c04300a00000c\n"
".quad 0x62df00100000002d,0x809e00500000005d,0x309c043004cff001,0x219e011000000009\n"
".quad 0x309c042008000020,0x219e0110004000c1,0xb11c002008000018,0xb15c005800d02400\n"
".quad 0xa19c043032d01000,0x411c001000000019,0x329c04300a00002c,0x811e001000000029\n"
".quad 0x311c043008cff001,0x411e011000000011,0x211e012014000020,0xd29c002014000010\n"
".quad 0xd2dc005800d02400,0xa11c043032d01000,0xa29c001000000011,0x835e003016000034\n"
".quad 0x329c043014cff001,0x331c041000000031,0xc31e011000000035,0x231e012014000020\n"
".quad 0x629c002014000030,0xa31c04500000005d,0xa2dc001000000031,0xa3dc005800d02400\n"
".quad 0xb3dc003032d01000,0x329c04301e000028,0x83de001000000039,0x339c04301ecff001\n"
".quad 0xe21e01100000003d,0x739e002014000020,0x209e013032d01001,0x621c002014000020\n"
".quad 0x625c005800d02401,0x629e003032d01001,0xa09c043032d01001,0x82dc001000000009\n"
".quad 0x871c003012000058,0x725c003014000058,0x729c005800d02401,0x421c033032d01001\n"
".quad 0x059de420264000e1,0x929c0028004000a0,0x95dc00301400005c,0x825c23301c00005c\n"
".quad 0x839c035800c00080,0x821c035800c00078,0x829e00202dc00010,0x925c433014cff001\n"
".quad 0x839e004000000038,0x865e003032cff001,0x925c433016cff001,0xe39c0048004000b0\n"
".quad 0x81de00302a400124,0x85de003038cff001,0xe55e00302ecff001,0x439c03302a4000c0\n"
".quad 0x715e004800c00c01,0x855c853000400134,0xe3dc039400000000,0x439c0320264000e0\n"
".quad 0x71de004800c01801,0xf2dc233022400135,0xf25c035800c00080,0x921e005800c00078\n"
".quad 0xe39c033024400135,0xb25c4320264000e0,0x855e004000000024,0xe2dc2330244000c0\n"
".quad 0xe49c035800c00080,0xf21c035800c00078,0x501e00202dc00010,0xb49c4330004000c0\n"
".quad 0x925c434000000048,0x42dc0348004000b0,0x715e004800c02401,0x855c8530224000c0\n"
".quad 0xb65c039400000000,0x42dc0320264000e0,0x93dc234800c03001,0x925c035800c00081\n"
".quad 0xa21e005800c00079,0xb29c033020400134,0xf3dc4320264000e0,0x841e004000000024\n"
".quad 0xa21c2330204000c0,0xa25c035800c00080,0x82dc435800c00078,0xe21c034000000024\n"
".quad 0x439c03202dc00010,0x451c034800c03c01,0x225c434800c04801,0xe39c0348004000b1\n"
".quad 0xa49c0320264000e0,0x841c8520264000e1,0xe55c239400000000,0xe75c035800c00080\n"
".quad 0x441c035800c00078,0xb21c0320264000e1,0x225c2320264000e1,0x251c035800c00081\n"
".quad 0x569c435800c00079,0x84dc234000000075,0x855c035800c00080,0x925c435800c00078\n"
".quad 0x249c034000000050,0x355c43202dc00011,0x94dc434000000055,0x851c0348004000b0\n"
".quad 0x555c43202dc00010,0x921c0348004000b1,0x065c23202dc00011,0xf25c435800c00081\n"
".quad 0xa29c0348004000b0,0x801c85202dc00010,0xb2dc439400000000,0xe39c0348004000b0\n"
".quad 0xa15c85202dc00010,0xa3dc439400000000,0x059c0348004000b1,0x041c03202dc00011\n"
".quad 0xe09c855800c00079,0x941c439400000000,0x05dc434000000041,0x631c8548004000b1\n"
".quad 0x211c859400000001,0x419c859400000001,0x001de79400000001,0x0000008000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0003580000000000\n"
".quad 0x000540000005c800,0x0004f8000004f800,0x0004f8000004f800,0x0004f8000004f800\n"
".quad 0x0005200000035800,0x0004f80000050000,0x8ccccd3dcccccd00,0x2aaaab3f2aaaab3f\n"
".quad 0xe38e39bf2aaaab3e,0x0802043de38e39be,0x000001000000b500,0x0000b30008020400\n"
".quad 0x0802040000000000,0x000005000000ba00,0x0000b90008020400,0x0802040000000400\n"
".quad 0x000003000000b800,0x0000b70008020400,0x080a040000000200,0x2000200000007f00\n"
".quad 0x0c17040020190300,0x1800030000000000,0x0c17040021f00000,0x1000020000000000\n"
".quad 0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x080d040021f00000,0x0000060007005400,0x00440400005de400,0x0000009800dc0428\n"
".quad 0x00000088011c042c,0x00000094001c042c,0x00000084009c042c,0x08400030351ca32c\n"
".quad 0xfa000000011de220,0x04400020049ca318,0x00000051201e0420,0x8ec0000541dc2318\n"
".quad 0x00000049209e0418,0x0880001400dc0018,0x08800004209c0030,0x00f0eff030dc0030\n"
".quad 0x00fffffd211c0350,0x00f0fff0209c0048,0x0000000c30dc0050,0x20c00bf441dc0358\n"
".quad 0x0600000820dc001a,0x20c007f943dc2330,0x244000e1409c031a,0x8ed0a00031dc0020\n"
".quad 0x000000000005e720,0x0000001120de0480,0x00cfc00001dc0018,0x00c00005201c0350\n"
".quad 0x00cfc000311c0048,0x0000001c015de450,0x104000fc421c8628,0x00000001201e0480\n"
".quad 0x00fffffd40dc0318,0x00cfc000019c0048,0x104101fc601c8650,0x0000000d20de0480\n"
".quad 0x00cfc00032dc0018,0x0000002c015de450,0x104202fc425c8628,0x00c0000540dc0380\n"
".quad 0x0000000d20de0448,0x00cfc000315c0018,0x104505fc479c8650,0x0000001401dde480\n"
".quad 0x104404fc669c8628,0x00000018029de480,0x104303fca59c8628,0x00c00080215c2380\n"
".quad 0x00c00078219c0358,0x00c00ffd40dc0358,0x00000010029de248,0x00000018515c4318\n"
".quad 0x244000e030dc0340,0x00c02005411c0320,0x15800080219c0348,0x00c0008032dc2320\n"
".quad 0x00c00078331c0358,0x244000e0409c0358,0x0040009051dc4320,0x15800080311c0348\n"
".quad 0x00000030b0dc4320,0x00c0008022dc2340,0x00c00078231c0358,0x00400090315c4358\n"
".quad 0x15800080209c0348,0x00000030b0dc4320,0x00000000461c8540,0x00c03801455c0384\n"
".quad 0x0040009030dc4348,0x0000000064dc8548,0x244000e1511c0384,0x00000000265c8520\n"
".quad 0x00c00078415c0384,0x00c04001409c0358,0x00c0008040dc2348,0x158000a0411c0358\n"
".quad 0x244000e0209c0320,0x0000001430dc4320,0x00c00080219c2340,0x00c0007821dc0358\n"
".quad 0x004000b0315c4358,0x158000a0209c0348,0x0000001c60dc4320,0x004000b030dc4340\n"
".quad 0x000013200081e748,0x0000002131200040,0x0000006581610050,0x0000007932a00450\n"
".quad 0x0000006041a00010,0x0000000081210050,0x0000002451600050,0x0000000061a00050\n"
".quad 0x0000002441200050,0x0000005851600050,0x0000006461a00050,0x0000005841210050\n"
".quad 0x0000006851610050,0x0000002461a00050,0x0000006841210050,0x0000007856e10050\n"
".quad 0x0000005861a00050,0x0000007847200050,0x0000006861200050,0x0000006dc1610050\n"
".quad 0x0000006dc3a30050,0x0000007847600050,0x0000006db1200050,0x00d0240051a00058\n"
".quad 0x3ad0100051e00058,0x08000071c5e00030,0x0e00001461200030,0x71ee347001a1e230\n"
".quad 0xfe71c71c01e1e218,0x08cff00171220018,0x0000001131200430,0x1400001843220110\n"
".quad 0x004000c131200420,0x1400003044220110,0x00d02400e2a00020,0x3ad01000e2e00058\n"
".quad 0x00000041a4600430,0x16000038a2a00010,0x14cff00173220030,0x0000006932a00430\n"
".quad 0x00000071b6a10010,0x0000003133200450,0x14000018c3220110,0x1400003043a20120\n"
".quad 0x00d02401a2a00020,0x3ad01001a2e00058,0x00000039a3a00430,0x16000068a2a00010\n"
".quad 0x14cff00173220030,0x0000005932a00430,0x0000003133200410,0x14000018c3220110\n"
".quad 0x1400003043220120,0x0000006dc2a00020,0x00000031a3200450,0x00d02400a2e00010\n"
".quad 0x3ad01000a5a00058,0x2c000028b2a00030,0x14cff00175a20030,0x0000002532a00430\n"
".quad 0x3ad01001b2620010,0x0000005937a00430,0x004000a005a1e410,0x14000019e1a20128\n"
".quad 0x1400001842a20120,0x00d02401c1200020,0x3ad01001c1600058,0x3ad01001c1e20030\n"
".quad 0x00000029a2a00430,0x0a00007041a00010,0x0e00007047200030,0x00d02401b1600030\n"
".quad 0x3ad01001b1e00058,0x244000e141200330,0x0ccff00171a20020,0x0e00006c56a00030\n"
".quad 0x1200006c56e00030,0x00c0008041602330,0x00c0007841e00358,0x2dc0001041200358\n"
".quad 0x38cff00177220020,0x0000001c51e04330,0x3acff00171620040,0x34cff00176a20030\n"
".quad 0x36cff00176e20030,0x2640002451600030,0x00400035c5e20030,0x32400035b4220030\n"
".quad 0x264000c052620030,0x004000b071604330,0x00c0080141e00348,0x00c0100144e00348\n"
".quad 0x0000000042608548,0x244000e071e00394,0x004000c170220020,0x30400035a5e20030\n"
".quad 0x1040003461220030,0x00c0008077602330,0x00c0007871600358,0x244000e131a00358\n"
".quad 0x104000c042220020,0x00000015d1604330,0x2dc0001071200340,0x00c0008062602320\n"
".quad 0x00c0007864e00358,0x004000b051604358,0x00c0180141e00348,0x0000004c92604348\n"
".quad 0x00c0200144e00340,0x0000000042208548,0x244000e071e00394,0x244000e134e00320\n"
".quad 0x304000c176220020,0x2dc0001062200330,0x00c0008131602320,0x00c0007931a00358\n"
".quad 0x00c0008077602358,0x00c0007877a00358,0x0000001851604358,0x004000b092604340\n"
".quad 0x2dc0001071a00348,0x00c0280141e00320,0x00000079d1204348,0x00c0300145200340\n"
".quad 0x244000e077a00348,0x004000b041e04320,0x2dc0001131200348,0x00c00081e4e02320\n"
".quad 0x00c00079e7600358,0x004000b051604358,0x324000c104220048,0x0000007534e04330\n"
".quad 0x244000e147600340,0x244000e155200320,0x2dc00011e4a00320,0x0000000086208520\n"
".quad 0x00c0008145602394,0x00c0007947a00358,0x004000b134e04358,0x2dc0001145200348\n"
".quad 0x0000007955604320,0x00c00081d7a02340,0x0000000060208558,0x004000b155604394\n"
".quad 0x2dc00011d5a00348,0x00c00079d7600320,0x0000000044208558,0x0000000122a08594\n"
".quad 0x00000075e7604394,0x004000b1d5e04340,0x0000000163208548,0x0000000143a08594\n"
".quad 0x0000000024608594,0x0000066000a1e794,0x00c0080141800340,0x00c0100141c00348\n"
".quad 0x00c0200143000348,0x244000e061800348,0x00c0180142800320,0x244000e072c00348\n"
".quad 0x244000e0c3800320,0x00c0008061c02320,0x00c0007863000358,0x004000a004c1e458\n"
".quad 0x244000e0a2800328,0x00c00080b3402320,0x00c00078b3c00358,0x0000003071c04358\n"
".quad 0x00c00080a4002340,0x00c00078a3000358,0x27c0001061800358,0x0000003cd3404320\n"
".quad 0x00c00080e3c02340,0x00c00078e4400358,0x0000003104004358,0x004000b071c04340\n"
".quad 0x27c00010b3000348,0x00000044f3c04320,0x00c0280144400340,0x004000b0d3404348\n"
".quad 0x27c00010a2800348,0x244000e114400320,0x00c0300145000320,0x004000b102c04348\n"
".quad 0x27c00010e3800348,0x00c0008115402320,0x00c0007915c00358,0x244000e144800358\n"
".quad 0x004000b0f3c04320,0x0000005d55004348,0x27c0001114000340,0x00c0008125402320\n"
".quad 0x00c0007925c00358,0x004000b144404358,0x27c0001124800348,0x0000005d54c04320\n"
".quad 0x0000000060008540,0x00000000c6408594,0x004000b134c04394,0x00000000a2008548\n"
".quad 0x00000000e6008594,0x0000000106808594,0x0000000127808594,0x0000000042408594\n"
".quad 0x0000000025808594,0x00000000001de794,0x0000000000000080,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x9fd00043cfd00000,0xe38e39bee38e3943\n"
".quad 0x0000ca000802043d,0x0802040000000300,0x000002000000c900,0x0000c70008020400\n"
".quad 0x0802040000000100,0x000000000000c500,0x0000cc0008020400,0x0802040000000500\n"
".quad 0x000004000000cb00,0x00008900080a0400,0x2019030020002000,0x000000000c170400\n"
".quad 0x21f0000018000300,0x000000000c170400,0x11f0000010000200,0x000000000c170400\n"
".quad 0x21f0000008000100,0x000000000c170400,0x21f0000000000000,0x02001800080d0400\n"
".quad 0x005de40000000200,0x00dc042800440400,0x011c042c00000098,0x001c042c00000088\n"
".quad 0x009c042c00000094,0x365ca32c00000084,0x01dde22008400030,0x059ca318fa000000\n"
".quad 0x211e042004400020,0x951c031800000065,0x91dc234800c00801,0x20de04188ec00011\n"
".quad 0x615c031800000059,0x471c004800fffff1,0x919c03300e800014,0x411c034800c04001\n"
".quad 0x94dc03202c4000e1,0x36dc004800c01001,0x51dc03300e800004,0x009de41a20c00bdc\n"
".quad 0x60dc0328004000a0,0x415c23202c4000e0,0x41dc035800c00080,0x319c035800c00078\n"
".quad 0x949c03202c4000e1,0x411c034800c01801,0x515c432005c00010,0x61dc23400000001c\n"
".quad 0x625c035800c00080,0x221c035800c00078,0x95dc03202c4000e1,0x515c434800c02001\n"
".quad 0x619c0348004000b0,0x71dc432005c00010,0x825c234000000024,0x82dc035800c00080\n"
".quad 0x729c035800c00078,0x955c03202c4000e1,0x71dc434800c02801,0x821c0348004000b0\n"
".quad 0x925c432005c00010,0xa2dc23400000002c,0xa35c035800c00080,0x531c035800c00078\n"
".quad 0x961c03202c4000e1,0x925c434800c03001,0xa29c0348004000b0,0xb2dc432005c00010\n"
".quad 0xc35c234000000034,0xc3dc035800c00080,0x839c035800c00078,0x901c03202c4000e1\n"
".quad 0xb2dc434800c03801,0xc31c0348004000b0,0xd35c432005c00010,0xe3dc23400000003c\n"
".quad 0xe45c035800c00080,0x041c035800c00078,0xd35c43202c4000e0,0xe39c0348004000b0\n"
".quad 0xf3dc432005c00010,0x079c234000000044,0x07dc035800c00081,0xf3dc435800c00079\n"
".quad 0xc45c0048004000b0,0x041c035000f0eff1,0xe7dc432005c00011,0xb75c00400000007d\n"
".quad 0x381c235000f0fff1,0x385c035800c00080,0x179c005800c00078,0xf45c435800000045\n"
".quad 0x309c0348004000b1,0x00dc432005c00010,0xd75c004000000086,0x93dc23303c000075\n"
".quad 0x969c031a20c007ed,0x30dc43202c4000e1,0xd1dc0048004000b0,0x0005e7208ed0a001\n"
".quad 0xa29c234000002120,0xa35c035800c00081,0x615c035800c00079,0x919c034800c00005\n"
".quad 0x92dc034800c02ffd,0x06dde44800c03805,0xa3dc432800400080,0x611c034000000034\n"
".quad 0x931c034800fffffd,0x635c034800c04005,0x91dc03200a4000e0,0x921c034800c00ffd\n"
".quad 0xb19c034800c027fd,0xa29c03200a4000e0,0x215c032037c00011,0xc69c03200a4000e1\n"
".quad 0x871c0320084000e0,0x431c0320084000e0,0x739c0320084000e1,0x511c23202c4000e0\n"
".quad 0x51dc035800c00080,0x925c035800c00078,0xf2dc434800c02005,0x521c034800400090\n"
".quad 0x411c432037c00010,0xd15c23400000001c,0xd1dc035800c00080,0x975c035800c00078\n"
".quad 0x425c43202c4000e0,0xd11c034800400090,0x515c432037c00010,0x61dc23400000001c\n"
".quad 0x635c035800c00080,0x515c435800c00078,0x619c034800400090,0x71dc432037c00010\n"
".quad 0xc35c234000000034,0xc3dc035800c00080,0x71dc435800c00078,0xc31c034800400090\n"
".quad 0xd35c432037c00010,0xe3dc23400000003c,0xe79c035800c00080,0xd35c435800c00078\n"
".quad 0xe39c034800400090,0xf3dc432037c00010,0xc79c234000000078,0xc7dc035800c00081\n"
".quad 0xf3dc435800c00079,0xc81c034800400090,0xe71c432037c00011,0xd79c23400000007d\n"
".quad 0xd7dc035800c00081,0xc85c435800c00079,0xd89c034800400091,0xe71c432037c00011\n"
".quad 0xa75c23400000007d,0xa79c035800c00081,0xc8dc435800c00079,0xa91c034800400091\n"
".quad 0xd69c432037c00011,0x411c854000000079,0xa7dc858400000000,0xa95c438400000000\n"
".quad 0x869c854800400091,0x619c858400000000,0xc71c858400000000,0xe6dc858400000000\n"
".quad 0x081c858400000000,0x275c858400000002,0x415c858400000002,0x0001e78400000002\n"
".quad 0xf2dc004000001260,0xc1dd005000000071,0xb29d005000000069,0xb2dc005000000075\n"
".quad 0x71dc00500000006c,0xa29c005000000080,0xb2dc005000000080,0x71dd005000000068\n"
".quad 0xa29c005000000010,0xb2dc005000000010,0x71dd005000000074,0xa29d005000000018\n"
".quad 0xb39c005000000018,0x341c045000000080,0x791c001000000019,0xe39c005000000014\n"
".quad 0xa89d005000000010,0x329c045000000014,0xe19c001000000011,0x43dd005000000018\n"
".quad 0x41df00500000008a,0x68dc00500000008a,0x279c005000000014,0xf19c00580000008a\n"
".quad 0xf99c005800d02400,0x211d003046d01000,0x785c005000000092,0x795c005800d02400\n"
".quad 0x479c003046d01000,0x699c00303c000092,0x331c04304c00003c,0x415c001000000015\n"
".quad 0x419c005800d02400,0x185c003046d01000,0xe1de00304a00001e,0x439c00304ccff001\n"
".quad 0x599c00500000008a,0x311c04300c000010,0x319c04100000001d,0xe3dc001000000081\n"
".quad 0xe95c005800d02400,0xe81e003046d01000,0x021de23042cff001,0x025de21871ee3470\n"
".quad 0xf95c0018fe71c71c,0x381c04304a000038,0x439e011000000081,0x311c042018000020\n"
".quad 0xe99e0010004000c1,0x081e01304ccff001,0xe95e002020000022,0x439e01304acff001\n"
".quad 0x331c042018000038,0x399c041000000099,0x9a1c031000000095,0x441e01202c4000e1\n"
".quad 0x495c002020000080,0x465c005800d02402,0x481e003046d01002,0xc31e013046d01002\n"
".quad 0x565c002014000020,0x621e013032000092,0x581c00200c000022,0x299c003040000092\n"
".quad 0x285c005800d02402,0x291e003046d01002,0x3a5c033046d01002,0x685c00202c4000e1\n"
".quad 0x695c00304200008a,0x889c23304800008a,0x891c035800c00082,0xe8de005800c0007a\n"
".quad 0x29dc033046cff001,0x24dc43202c4000e1,0x089de44000000092,0x799c0328004000a0\n"
".quad 0x35dc00202c4000e1,0x849c03303e400026,0x58dc032045c00012,0x451c03202c4000e1\n"
".quad 0x34dc43202c4000e1,0x755e0048004000b1,0x891c03303e4000c1,0x45dc23202c4000e1\n"
".quad 0x255c855800c00081,0x461c039400000001,0x001c035800c00079,0x451c03202c4000e0\n"
".quad 0x759c432045c00011,0x94dc234000000061,0x95dc035800c00082,0x655c435800c0007a\n"
".quad 0x949c0348004000b1,0x34dc432045c00012,0x75dc23400000005d,0x761c035800c00082\n"
".quad 0x34dc435800c0007a,0x759c0348004000b1,0x75dc432045c00012,0xe65e004000000061\n"
".quad 0xe7de003032cff001,0xe9de003040cff001,0xe95e003042cff001,0x6a1c23304acff001\n"
".quad 0x679c035800c00082,0x75dc435800c0007a,0x965e0048004000b1,0x661c033038400035\n"
".quad 0x879c432045c00012,0x381c23400000007a,0x385c035800c00082,0x971e005800c0007a\n"
".quad 0xe65c4330384000c1,0xf7de0048004000b1,0x379c033034400035,0x081c432045c00012\n"
".quad 0x485c234000000086,0x48dc035800c00082,0xf69e005800c0007a,0x07dc4330344000c1\n"
".quad 0x481c0348004000b2,0x185c432045c00012,0x08dc23400000008e,0x091c035800c00080\n"
".quad 0x185c435800c00078,0x089c0348004000b2,0x701e002045c00010,0x38dc433036400036\n"
".quad 0x429e014000000092,0x591e002014000030,0x411e01303a400036,0x06de00200c000020\n"
".quad 0x401e0030364000c0,0x471c85303a4000c2,0x26dc859400000001,0xa11c049400000001\n"
".quad 0xa19c041000000011,0x669c851000000029,0x38dc439400000001,0xa1dc0448004000b2\n"
".quad 0x801c851000000041,0xa21c049400000001,0xe11c851000000039,0x019c859400000001\n"
".quad 0x21dc859400000002,0x221c859400000002,0x001de79400000000,0x421c034000001580\n"
".quad 0x001de4202c4000e1,0x325c0328004000a0,0x82dc23202c4000e1,0x831c035800c00080\n"
".quad 0x839c035800c00078,0x935c032001c00010,0xb21c435800c00078,0x92dc234000000030\n"
".quad 0x229c035800c00080,0x83dc43202c4000e1,0x931c0348004000b0,0xb21c432001c00010\n"
".quad 0xa25c234000000034,0xa2dc035800c00080,0x749c035800c00078,0x835c43202c4000e1\n"
".quad 0xa29c0348004000b0,0x921c432001c00010,0x225c23400000002c,0x24dc035800c00081\n"
".quad 0x51dc035800c00079,0x82dc43202c4000e1,0x221c0348004000b0,0x925c432001c00011\n"
".quad 0x74dc23400000004c,0x755c035800c00080,0x925c435800c00078,0x851c0348004000b0\n"
".quad 0x749c03202c4000e1,0x31dc432001c00010,0x455c234000000055,0x459c035800c00081\n"
".quad 0x74dc435800c00079,0x451c0348004000b0,0x501c432001c00011,0xe69c854000000059\n"
".quad 0xc75c859400000000,0x055c439400000000,0xa71c8548004000b0,0x86dc859400000000\n"
".quad 0x219c859400000000,0x415c859400000001,0x081c859400000001,0x211c859400000001\n"
".quad 0x001de79400000000,0xb49c004000000fc0,0xc4dc005000cfc001,0x29dc865000cfc001\n"
".quad 0x261c8680104000fd,0x289c8680104101fd,0x281c8680104202fd,0x28dc8680104303fd\n"
".quad 0x25dc8680104404fd,0x279c8680104505fd,0x27dc8680104606fd,0x249c8680104707fd\n"
".quad 0x701c0080104808fd,0x069de45000000062,0x965c032800400100,0x051c00202c4000e1\n"
".quad 0x959c035000000088,0x801d005800c00079,0x451c005000000081,0x24dd005000000081\n"
".quad 0x451c00500000008e,0x001c00500000008d,0x34dc00500000005c,0x451c00500000005d\n"
".quad 0x001d00500000005d,0x34dc005000000078,0x451c005000000079,0xea9c005000000079\n"
".quad 0x001d005800400101,0x34dd00500000007c,0x085c00500000007d,0x391d005000000048\n"
".quad 0x401c005000000049,0x271c00500000007d,0x14dd005800400101,0x099c005000000092\n"
".quad 0x401c005000000048,0x351c005800000092,0x355c005800d02401,0x195c00304cd01001\n"
".quad 0x371c043000000086,0x401c001000000071,0x051de2302a00004d,0x055de21871ee3470\n"
".quad 0x54de0018fe71c71c,0xa01e003000cff002,0x1a1f005000cfe001,0x369c045000000092\n"
".quad 0x349c04100000004d,0xf7dc001000000001,0xa69c015800400101,0x271c015000000051\n"
".quad 0x869c002038000069,0x86dc005800d02402,0xa71c04304cd01002,0xa69c001000000071\n"
".quad 0x3a1c0430360000a1,0x47dd00100000007d,0x569e005000000086,0x369c043034cff002\n"
".quad 0xa69c011000000069,0x269c015000000051,0xfa1c002050000069,0xfa5c005800d02401\n"
".quad 0xa6dc04304cd01001,0x8a5c001000000069,0x57de00305200007e,0x3a1c043052cff002\n"
".quad 0x879c01100000007d,0x3a1c045000000052,0x279c0110000000a9,0x1a1c002050000079\n"
".quad 0xa69c045000000092,0x875c001000000079,0x8a5c005800d02402,0xda5c00304cd01002\n"
".quad 0x575e0030520000a1,0x3a1c043052cff002,0x575e001000000075,0x851c01304ccff002\n"
".quad 0x0a1de45000000052,0x9a5c2328004000a0,0xd75c025800c00081,0x9a1c0330fb8e38e5\n"
".quad 0x959c432051c00011,0x075c00400000005a,0x165c005800000074,0x1a5c005800d02402\n"
".quad 0x775c00304cd01002,0x99dc00303a400102,0x6a5c433052000085,0x759c0048004000b1\n"
".quad 0x579e005800400101,0x875c85304ecff002,0x49dc009400000002,0xe79c02304cd01002\n"
".quad 0x359c0430f78e38e5,0x07dc001000000059,0x479c005800000078,0x249c015800d02402\n"
".quad 0x861c00202c000051,0x17de00303e400101,0x499e00304cd01002,0xe75c00304cd01002\n"
".quad 0x97dc00304e000091,0xe79c00303e000085,0x565e00304c000091,0x575e00303acff002\n"
".quad 0x579e00303ecff002,0x965c02303ccff002,0xd75c0230f78e38e5,0xe79c0230f78e38e5\n"
".quad 0x065c0030f78e38e5,0x075c005800000064,0x079c005800000074,0x201c005800000078\n"
".quad 0x051c003032400102,0x355c00303a400102,0x461c85303c400102,0xa49c049400000000\n"
".quad 0x601c851000000049,0x851c859400000000,0xa55c859400000000,0xc49c859400000000\n"
".quad 0xe69c859400000000,0x06dc859400000000,0x271c859400000001,0x001de79400000000\n"
".quad 0x0000008000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x9fd00043cfd00000,0xe38e39bee38e3943,0x0000b6000802043d\n"
".quad 0x0802040000000400,0x000003000000b500,0x0000b40008020400,0x0802040000000200\n"
".quad 0x000001000000b300,0x0000b20008020400,0x0802040000000000,0x000008000000ba00\n"
".quad 0x0000b90008020400,0x0802040000000700,0x000006000000b800,0x0000b70008020400\n"
".quad 0x080a040000000500,0x2400200000005c00,0x0c17040024190300,0x2000040000000000\n"
".quad 0x0c17040011f00000,0x1800030000000000,0x0c17040021f00000,0x1000020000000000\n"
".quad 0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x080d040021f00000,0x0000020002001800,0x00440400005de400,0x0000009800dc0428\n"
".quad 0x00000088011c042c,0x00000094001c042c,0x00000084009c042c,0x00400100015de42c\n"
".quad 0x08400030351ca328,0x04400020049ca320,0xfa000000019de220,0x00c00bfc511e0318\n"
".quad 0x00000051201e0448,0x00000049209e0418,0x0e00001121dc2318,0x0c80001400dc001a\n"
".quad 0x0c800004209c0030,0xa040010121dc2330,0x00f0eff030dc0018,0x00c007fc515e0350\n"
".quad 0x00f0fff0209c0048,0x0000000c30dc0050,0xa040010141dc2358,0x0600000820dc0018\n"
".quad 0x2000001543dc2330,0x244000e1409c031a,0x8ed0a00031dc0020,0x000000000005e720\n"
".quad 0x00fffffd20dc0380,0x00cfc00001dc0048,0x00c00005201c0350,0x0000000d20de0448\n"
".quad 0x0000001c015de418,0x00cfc000311c0028,0x104000fc421c8650,0x00000001201e0480\n"
".quad 0x00fffffd40dc0318,0x00cfc000019c0048,0x104101fc601c8650,0x0000000d20de0480\n"
".quad 0x00cfc00032dc0018,0x0000002c015de450,0x104202fc425c8628,0x00c0000540dc0380\n"
".quad 0x0000000d20de0448,0x00cfc000315c0018,0x104505fc479c8650,0x0000001401dde480\n"
".quad 0x104404fc669c8628,0x00000018029de480,0x104303fca59c8628,0x00c00080215c2380\n"
".quad 0x00c00078219c0358,0x00c00ffd40dc0358,0x00000010029de248,0x00000018515c4318\n"
".quad 0x244000e030dc0340,0x00c02005411c0320,0x15800080219c0348,0x00c0008032dc2320\n"
".quad 0x00c00078331c0358,0x244000e0409c0358,0x0040009051dc4320,0x15800080311c0348\n"
".quad 0x00000030b0dc4320,0x00c0008022dc2340,0x00c00078231c0358,0x00400090315c4358\n"
".quad 0x15800080209c0348,0x00000030b0dc4320,0x00000000461c8540,0x00c03801455c0384\n"
".quad 0x0040009030dc4348,0x0000000064dc8548,0x244000e1511c0384,0x00000000265c8520\n"
".quad 0x00c00078415c0384,0x00c04001409c0358,0x00c0008040dc2348,0x158000a0411c0358\n"
".quad 0x244000e0209c0320,0x0000001430dc4320,0x00c00080219c2340,0x00c0007821dc0358\n"
".quad 0x004000b0315c4358,0x158000a0209c0348,0x0000001c60dc4320,0x004000b030dc4340\n"
".quad 0x000013200081e748,0x0000002131200040,0x0000006581610050,0x0000007932a00450\n"
".quad 0x0000006041a00010,0x0000000081210050,0x0000002451600050,0x0000000061a00050\n"
".quad 0x0000002441200050,0x0000005851600050,0x0000006461a00050,0x0000005841210050\n"
".quad 0x0000006851610050,0x0000002461a00050,0x0000006841210050,0x0000007856e10050\n"
".quad 0x0000005861a00050,0x0000007847200050,0x0000006861200050,0x0000006dc1610050\n"
".quad 0x0000006dc3a30050,0x0000007847600050,0x0000006db1200050,0x00d0240051a00058\n"
".quad 0x3ad0100051e00058,0x08000071c5e00030,0x0e00001461200030,0x71ee347001a1e230\n"
".quad 0xfe71c71c01e1e218,0x08cff00171220018,0x0000001131200430,0x1400001843220110\n"
".quad 0x004000c131200420,0x1400003044220110,0x00d02400e2a00020,0x3ad01000e2e00058\n"
".quad 0x00000041a4600430,0x16000038a2a00010,0x14cff00173220030,0x0000006932a00430\n"
".quad 0x00000071b6a10010,0x0000003133200450,0x14000018c3220110,0x1400003043a20120\n"
".quad 0x00d02401a2a00020,0x3ad01001a2e00058,0x00000039a3a00430,0x16000068a2a00010\n"
".quad 0x14cff00173220030,0x0000005932a00430,0x0000003133200410,0x14000018c3220110\n"
".quad 0x1400003043220120,0x0000006dc2a00020,0x00000031a3200450,0x00d02400a2e00010\n"
".quad 0x3ad01000a5a00058,0x2c000028b2a00030,0x14cff00175a20030,0x0000002532a00430\n"
".quad 0x3ad01001b2620010,0x0000005937a00430,0x004000a005a1e410,0x14000019e1a20128\n"
".quad 0x1400001842a20120,0x00d02401c1200020,0x3ad01001c1600058,0x3ad01001c1e20030\n"
".quad 0x00000029a2a00430,0x0a00007041a00010,0x0e00007047200030,0x00d02401b1600030\n"
".quad 0x3ad01001b1e00058,0x244000e141200330,0x0ccff00171a20020,0x0e00006c56a00030\n"
".quad 0x1200006c56e00030,0x00c0008041602330,0x00c0007841e00358,0x2dc0001041200358\n"
".quad 0x38cff00177220020,0x0000001c51e04330,0x3acff00171620040,0x34cff00176a20030\n"
".quad 0x36cff00176e20030,0x2640002451600030,0x00400035c5e20030,0x32400035b4220030\n"
".quad 0x264000c052620030,0x004000b071604330,0x00c0080141e00348,0x00c0100144e00348\n"
".quad 0x0000000042608548,0x244000e071e00394,0x004000c170220020,0x30400035a5e20030\n"
".quad 0x1040003461220030,0x00c0008077602330,0x00c0007871600358,0x244000e131a00358\n"
".quad 0x104000c042220020,0x00000015d1604330,0x2dc0001071200340,0x00c0008062602320\n"
".quad 0x00c0007864e00358,0x004000b051604358,0x00c0180141e00348,0x0000004c92604348\n"
".quad 0x00c0200144e00340,0x0000000042208548,0x244000e071e00394,0x244000e134e00320\n"
".quad 0x304000c176220020,0x2dc0001062200330,0x00c0008131602320,0x00c0007931a00358\n"
".quad 0x00c0008077602358,0x00c0007877a00358,0x0000001851604358,0x004000b092604340\n"
".quad 0x2dc0001071a00348,0x00c0280141e00320,0x00000079d1204348,0x00c0300145200340\n"
".quad 0x244000e077a00348,0x004000b041e04320,0x2dc0001131200348,0x00c00081e4e02320\n"
".quad 0x00c00079e7600358,0x004000b051604358,0x324000c104220048,0x0000007534e04330\n"
".quad 0x244000e147600340,0x244000e155200320,0x2dc00011e4a00320,0x0000000086208520\n"
".quad 0x00c0008145602394,0x00c0007947a00358,0x004000b134e04358,0x2dc0001145200348\n"
".quad 0x0000007955604320,0x00c00081d7a02340,0x0000000060208558,0x004000b155604394\n"
".quad 0x2dc00011d5a00348,0x00c00079d7600320,0x0000000044208558,0x0000000122a08594\n"
".quad 0x00000075e7604394,0x004000b1d5e04340,0x0000000163208548,0x0000000143a08594\n"
".quad 0x0000000024608594,0x0000066000a1e794,0x00c0080141800340,0x00c0100141c00348\n"
".quad 0x00c0200143000348,0x244000e061800348,0x00c0180142800320,0x244000e072c00348\n"
".quad 0x244000e0c3800320,0x00c0008061c02320,0x00c0007863000358,0x004000a004c1e458\n"
".quad 0x244000e0a2800328,0x00c00080b3402320,0x00c00078b3c00358,0x0000003071c04358\n"
".quad 0x00c00080a4002340,0x00c00078a3000358,0x27c0001061800358,0x0000003cd3404320\n"
".quad 0x00c00080e3c02340,0x00c00078e4400358,0x0000003104004358,0x004000b071c04340\n"
".quad 0x27c00010b3000348,0x00000044f3c04320,0x00c0280144400340,0x004000b0d3404348\n"
".quad 0x27c00010a2800348,0x244000e114400320,0x00c0300145000320,0x004000b102c04348\n"
".quad 0x27c00010e3800348,0x00c0008115402320,0x00c0007915c00358,0x244000e144800358\n"
".quad 0x004000b0f3c04320,0x0000005d55004348,0x27c0001114000340,0x00c0008125402320\n"
".quad 0x00c0007925c00358,0x004000b144404358,0x27c0001124800348,0x0000005d54c04320\n"
".quad 0x0000000060008540,0x00000000c6408594,0x004000b134c04394,0x00000000a2008548\n"
".quad 0x00000000e6008594,0x0000000106808594,0x0000000127808594,0x0000000042408594\n"
".quad 0x0000000025808594,0x00000000001de794,0x0000000000000080,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0xcfd0000000000000,0xe38e39439fd00043\n"
".quad 0x0802043de38e39be,0x000003000000ca00,0x0000c90008020400,0x0802040000000200\n"
".quad 0x000001000000c700,0x0000c50008020400,0x0802040000000000,0x000005000000cc00\n"
".quad 0x0000cb0008020400,0x080a040000000400,0x2400200000006500,0x0c17040024190300\n"
".quad 0x2000040000000000,0x0c17040011f00000,0x1800030000000000,0x0c17040021f00000\n"
".quad 0x1000020000000000,0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000\n"
".quad 0x0000000000000000,0x080d040021f00000,0x0000020002001800,0x00440400005de400\n"
".quad 0x0000009800dc0428,0x00000088011c042c,0x00000094001c042c,0x00000084009c042c\n"
".quad 0x08400030355ca32c,0x04400020051ca320,0x00fffffd501c0320,0x00000051221e0448\n"
".quad 0x00000001201e0418,0x00cfc000819c0018,0x00cfc000015c0050,0x00c00005501c0350\n"
".quad 0x00000018011de448,0x104000fc441c8628,0x00000001201e0480,0x00cfc00001dc0018\n"
".quad 0x104101fc645c8650,0x00fffffd401c0380,0x0000001400dde448,0x00000001201e0428\n"
".quad 0x00cfc000019c0018,0x00c00005401c0350,0x00000018009de448,0x104404fc239c8628\n"
".quad 0x00000001201e0480,0x00cfc000011c0018,0x104505fc431c8650,0x00000055225e0480\n"
".quad 0x00cfc00090dc0018,0x104202fc249c8650,0x104707fc62dc8680,0x0000001c015de480\n"
".quad 0x104606fc429c8628,0x00000010009de480,0x104303fc201c8628,0x284000e1509c0380\n"
".quad 0x00400080015de420,0x8e4000b481dc0028,0x00c0008020dc2320,0x00c00078211c0358\n"
".quad 0x0bc00010209c0358,0x0000034000000720,0x0000001030dc4360,0x000000fc011de440\n"
".quad 0x0040009030dc4328,0x0000000024dc8548,0x000002800001e784,0x00c01001409e0340\n"
".quad 0x00000009209e0448,0x8e4000c421dc0018,0x000001e00001e720,0x00c00c01509e0340\n"
".quad 0x00000009209e0448,0x8e4000c421dc0018,0x000001400001e720,0x8e4000b491dc0040\n"
".quad 0x000000e00001e720,0x00f0eff090dc0040,0x00f0fff0809c0050,0x0000000c30dc0050\n"
".quad 0x06000008209c0058,0x8ed0a00021dc0030,0x000000000021f420,0x00000028011df240\n"
".quad 0x00000030011df218,0x0000002c011df218,0x00000008011df218,0x0000000c011df218\n"
".quad 0x00c05401569c0318,0x00fffffc40dc0348,0x00c0600156dc0348,0x284000e1a09c0348\n"
".quad 0x0ec00028319c0320,0x004000a0021de408,0x00c0008020dc2328,0x00c00078215c0358\n"
".quad 0x284000e1b11c0358,0x00c0000861de0320,0x11c00010209c0360,0x0000001430dc4320\n"
".quad 0x00c00080415c2340,0x00c00078419c0358,0x0040000071dc8658,0x004000b030dc4314\n"
".quad 0x11c00010411c0348,0x00000018515c4320,0x004000b0515c4340,0x03fff4e0701de748\n"
".quad 0x00c00c01519c0348,0x00c0180151dc0348,0x00c02401525c0348,0x00c0300153dc0348\n"
".quad 0x284000e0619c0348,0x284000e0721c0320,0x284000e0959c0320,0x284000e0f61c0320\n"
".quad 0x00c0008061dc2320,0x00c00078625c0358,0x004000a0035de458,0x00c0008083dc2328\n"
".quad 0x00c0007884dc0358,0x0000002471dc4358,0x1bc00010619c0340,0x0000004cf25c4320\n"
".quad 0x00c0008165dc2340,0x00c0007963dc0358,0x004000b071dc4358,0x1bc00010821c0348\n"
".quad 0x0000003d75dc4320,0x00c03c0153dc0340,0x00c0008184dc2348,0x00c00079865c0358\n"
".quad 0x004000b0925c4358,0x284000e0f3dc0348,0x1bc00011659c0320,0x0000006534dc4320\n"
".quad 0x00c04801569c0340,0x00c00080f55c2348,0x00c00078f65c0358,0x004000b175dc4358\n"
".quad 0x1bc00011861c0348,0x0000006556dc4320,0x284000e1a51c0340,0x004000b1365c4320\n"
".quad 0x1bc00010f69c0348,0x00c0008143dc2320,0x00c0007944dc0358,0x004000b1b6dc4358\n"
".quad 0x1bc00011451c0348,0x0000004cf35c4320,0x00000000601c8540,0x00000000845c8594\n"
".quad 0x004000b0d55c4394,0x00000001649c8548,0x00000001841c8594,0x00000001a29c8594\n"
".quad 0x0000000142dc8594,0x00000000239c8594,0x00000000431c8594,0x00001900001de794\n"
".quad 0x00000520001de740,0x0e0000fd51dc2340,0x000000e000000719,0x000000800001e760\n"
".quad 0x0ec00bfd51dc2340,0x000000000021f419,0x00000030029de440,0x00000040045df428\n"
".quad 0x00000028031de428,0x00000044041df428,0x00000045009d0028,0xf68f5c28011de250\n"
".quad 0x14cfc00020de0018,0x18cfc000209c0030,0x004000d4449c0030,0x064000e4439c0030\n"
".quad 0x044000e442dc0030,0x00000300001de730,0x0e0000fd51dc2340,0x000000e000000719\n"
".quad 0x000000800001e760,0x0ec00bfd51dc2340,0x000000000021f419,0x0000003802dde440\n"
".quad 0x00000040045df428,0x0000002c039de428,0x00000044041df428,0x00000041301c0028\n"
".quad 0x00000049209c0050,0x00000038e0dc0050,0x00000044001c0050,0x00000008001c0050\n"
".quad 0x0000002cb09c0050,0x0000000c001c0050,0x0000004500dd0050,0x00000008001c0050\n"
".quad 0x1ccfc000309c0050,0x16cfc00030de0030,0x00efe000001c0030,0x044000e4029e0050\n"
".quad 0x064000e4031e0030,0x244000f4001c0030,0x00000049309c0030,0x0000004500dd0050\n"
".quad 0x71ee3470021de250,0x00000040211c0018,0x00000001209d0050,0x0000003830dc0050\n"
".quad 0x00000000411c0050,0x00000038209c0050,0x0000003030dc0050,0x00000044411c0050\n"
".quad 0x00000030209d0050,0x0000002830dd0050,0x00000038411c0050,0x00000028209d0050\n"
".quad 0x0000002c35dd0050,0x00000030411c0050,0x0000002c259c0050,0xfe71c71c025de250\n"
".quad 0x00000028409c0018,0x0000005d60dd0050,0x00000059735d0050,0x0000002c265c0050\n"
".quad 0x0000005d709c0050,0x00d02400311c0058,0x32d01000315c0058,0x04000059661c0030\n"
".quad 0x0a00000c409c0030,0x0000002d311c0430,0x0000005d62df0010,0x04cff001809e0050\n"
".quad 0x00000009309c0430,0x08000020219e0110,0x004000c1309c0420,0x08000018219e0110\n"
".quad 0x00d02400b11c0020,0x32d01000b15c0058,0x00000019a19c0430,0x0a00002c411c0010\n"
".quad 0x00000029329c0430,0x08cff001811e0010,0x00000011311c0430,0x14000020411e0110\n"
".quad 0x14000010211e0120,0x00d02400d29c0020,0x32d01000d2dc0058,0x00000011a11c0430\n"
".quad 0x16000034a29c0010,0x14cff001835e0030,0x00000031329c0430,0x00000035331c0410\n"
".quad 0x14000020c31e0110,0x14000030231e0120,0x0000005d629c0020,0x00000031a31c0450\n"
".quad 0x00d02400a2dc0010,0x32d01000a3dc0058,0x1e000028b3dc0030,0x00000039329c0430\n"
".quad 0x1ecff00183de0010,0x0000003d339c0430,0x14000020e21e0110,0x32d01001739e0020\n"
".quad 0x14000020209e0130,0x00d02401621c0020,0x32d01001625c0058,0x32d01001629e0030\n"
".quad 0x00000009a09c0430,0x1200005882dc0010,0x14000058871c0030,0x00d02401725c0030\n"
".quad 0x32d01001729c0058,0x284000e1521c0330,0x004000a0059de420,0x1400005c929c0028\n"
".quad 0x1c00005c95dc0030,0x00c00080825c2330,0x00c00078839c0358,0x2dc00010821c0358\n"
".quad 0x14cff001829e0020,0x00000038925c4330,0x32cff001839e0040,0x16cff001865e0030\n"
".quad 0x004000b0925c4330,0x26400104e39c0048,0x38cff00181de0030,0x2ecff00185de0030\n"
".quad 0x264000c0e4de0030,0x00c00c01539c0330,0x00400114715e0048,0x0000000084dc8530\n"
".quad 0x284000e0e3dc0394,0x00c01801539c0320,0x2240011571de0048,0x00c00080f2dc2330\n"
".quad 0x00c00078f25c0358,0x24400115921e0058,0x284000e0e39c0330,0x00000024b25c4320\n"
".quad 0x244000c084de0040,0x00c00080e2dc2330,0x00c00078e49c0358,0x2dc00010f21c0358\n"
".quad 0x004000c0501e0020,0x00000048b49c4330,0x004000b0925c4340,0x00c0240152dc0348\n"
".quad 0x224000c0715e0048,0x0000000084dc8530,0x284000e0b65c0394,0x00c0300152dc0320\n"
".quad 0x00c0008193dc2348,0x00c00079925c0358,0x20400114a21e0058,0x284000e0b29c0330\n"
".quad 0x00000024f3dc4320,0x204000c0841e0040,0x00c00080a21c2330,0x00c00078a25c0358\n"
".quad 0x00c0480154dc0358,0x0000002482dc4348,0x2dc00010e21c0340,0x00c03c01539c0320\n"
".quad 0x004000b1225c4348,0x284000e0e39c0348,0x284000e1a49c0320,0x00000000841c8520\n"
".quad 0x00c00080e75c2394,0x00c00078e21c0358,0x284000e1341c0358,0x00c00081225c2320\n"
".quad 0x00000021d69c4358,0x00c0007924dc0340,0x284000e1b21c0358,0x2dc00011249c0320\n"
".quad 0x0000004c925c4320,0x00c0008084dc2340,0x00c00078855c0358,0x00000055355c4358\n"
".quad 0x004000b094dc4340,0x2dc00010851c0348,0x004000b1555c4320,0x2dc00011921c0348\n"
".quad 0x00c00081065c2320,0x004000b0f25c4358,0x2dc00010a29c0348,0x00000000801c8520\n"
".quad 0x004000b0b2dc4394,0x2dc00010e39c0348,0x00000000a15c8520,0x004000b1a3dc4394\n"
".quad 0x2dc00011059c0348,0x00c00079041c0320,0x00000000e09c8558,0x00000041941c4394\n"
".quad 0x004000b105dc4340,0x00000001631c8548,0x00000001211c8594,0x00000001419c8594\n"
".quad 0x00000000001de794,0x0000000000000080,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0004f8000002c800,0x0004680000047000,0x0004680000046800\n"
".quad 0x0004680000046800,0x0002c80000046800,0xcccccd0000046800,0x2aaaab3f8ccccd3d\n"
".quad 0x2aaaab3e2aaaab3f,0xe38e39bee38e39bf,0x0000c0000802043d,0x0802040000000400\n"
".quad 0x000001000000bf00,0x0000be0008020400,0x0802040000000300,0x000000000000bd00\n"
".quad 0x0000bc0008020400,0x0802040000000200,0x000007000000c300,0x0000c20008020400\n"
".quad 0x0802040000000600,0x000005000000c100,0x00005a00080a0400,0x2019030020002000\n"
".quad 0x000000000c170400,0x21f0000018000300,0x000000000c170400,0x11f0000010000200\n"
".quad 0x000000000c170400,0x21f0000008000100,0x000000000c170400,0x21f0000000000000\n"
".quad 0x06004800080d0400,0x005de40000000500,0x00dc042800440400,0x011c042c00000098\n"
".quad 0x001c042c00000088,0x009c042c00000094,0x351ca32c00000084,0x011de22008400030\n"
".quad 0x049ca318fa000000,0x201e042004400020,0x41dc231800000051,0x209e04188ec00009\n"
".quad 0x00dc001800000049,0x209c003008800014,0x30dc003008800004,0x211c035000f0eff0\n"
".quad 0x209c004800fffff9,0x30dc005000f0fff0,0x41dc03580000000c,0x20dc001a20c00bec\n"
".quad 0x43dc233006000008,0x409c031a20c007f5,0x31dc0020244000e1,0x0005e7208ed0a000\n"
".quad 0x20dc038000000000,0x01dc004800fffffd,0x201c035000cfc000,0x20de044800c00005\n"
".quad 0x015de4180000000d,0x311c00280000001c,0x421c865000cfc000,0x201e0480104000fc\n"
".quad 0x40dc031800000001,0x019c004800fffffd,0x601c865000cfc000,0x20de0480104101fc\n"
".quad 0x32dc00180000000d,0x015de45000cfc000,0x425c86280000002c,0x40dc0380104202fc\n"
".quad 0x20de044800c00005,0x315c00180000000d,0x479c865000cfc000,0x01dde480104505fc\n"
".quad 0x669c862800000014,0x029de480104404fc,0xa59c862800000018,0x215c2380104303fc\n"
".quad 0x219c035800c00080,0x40dc035800c00078,0x029de24800c00ffd,0x515c431800000010\n"
".quad 0x30dc034000000018,0x411c0320244000e0,0x219c034800c02005,0x32dc232015800080\n"
".quad 0x331c035800c00080,0x409c035800c00078,0x51dc4320244000e0,0x311c034800400090\n"
".quad 0xb0dc432015800080,0x22dc234000000030,0x231c035800c00080,0x315c435800c00078\n"
".quad 0x209c034800400090,0xb0dc432015800080,0x461c854000000030,0x455c038400000000\n"
".quad 0x30dc434800c03801,0x64dc854800400090,0x511c038400000000,0x265c8520244000e1\n"
".quad 0x415c038400000000,0x409c035800c00078,0x40dc234800c04001,0x411c035800c00080\n"
".quad 0x209c0320158000a0,0x30dc4320244000e0,0x219c234000000014,0x21dc035800c00080\n"
".quad 0x315c435800c00078,0x209c0348004000b0,0x60dc4320158000a0,0x30dc43400000001c\n"
".quad 0x0081e748004000b0,0x3120004000001320,0x8161005000000021,0x32a0045000000065\n"
".quad 0x41a0001000000079,0x8121005000000060,0x5160005000000000,0x61a0005000000024\n"
".quad 0x4120005000000000,0x5160005000000024,0x61a0005000000058,0x4121005000000064\n"
".quad 0x5161005000000058,0x61a0005000000068,0x4121005000000024,0x56e1005000000068\n"
".quad 0x61a0005000000078,0x4720005000000058,0x6120005000000078,0xc161005000000068\n"
".quad 0xc3a300500000006d,0x476000500000006d,0xb120005000000078,0x51a000580000006d\n"
".quad 0x51e0005800d02400,0xc5e000303ad01000,0x6120003008000071,0x01a1e2300e000014\n"
".quad 0x01e1e21871ee3470,0x71220018fe71c71c,0x3120043008cff001,0x4322011000000011\n"
".quad 0x3120042014000018,0x44220110004000c1,0xe2a0002014000030,0xe2e0005800d02400\n"
".quad 0xa46004303ad01000,0xa2a0001000000041,0x7322003016000038,0x32a0043014cff001\n"
".quad 0xb6a1001000000069,0x3320045000000071,0xc322011000000031,0x43a2012014000018\n"
".quad 0xa2a0002014000030,0xa2e0005800d02401,0xa3a004303ad01001,0xa2a0001000000039\n"
".quad 0x7322003016000068,0x32a0043014cff001,0x3320041000000059,0xc322011000000031\n"
".quad 0x4322012014000018,0xc2a0002014000030,0xa32004500000006d,0xa2e0001000000031\n"
".quad 0xa5a0005800d02400,0xb2a000303ad01000,0x75a200302c000028,0x32a0043014cff001\n"
".quad 0xb262001000000025,0x37a004303ad01001,0x05a1e41000000059,0xe1a20128004000a0\n"
".quad 0x42a2012014000019,0xc120002014000018,0xc160005800d02401,0xc1e200303ad01001\n"
".quad 0xa2a004303ad01001,0x41a0001000000029,0x472000300a000070,0xb16000300e000070\n"
".quad 0xb1e0005800d02401,0x412003303ad01001,0x71a20020244000e1,0x56a000300ccff001\n"
".quad 0x56e000300e00006c,0x416023301200006c,0x41e0035800c00080,0x4120035800c00078\n"
".quad 0x772200202dc00010,0x51e0433038cff001,0x716200400000001c,0x76a200303acff001\n"
".quad 0x76e2003034cff001,0x5160003036cff001,0xc5e2003026400024,0xb422003000400035\n"
".quad 0x5262003032400035,0x71604330264000c0,0x41e00348004000b0,0x44e0034800c00801\n"
".quad 0x4260854800c01001,0x71e0039400000000,0x70220020244000e0,0xa5e20030004000c1\n"
".quad 0x6122003030400035,0x7760233010400034,0x7160035800c00080,0x31a0035800c00078\n"
".quad 0x42220020244000e1,0xd1604330104000c0,0x7120034000000015,0x626023202dc00010\n"
".quad 0x64e0035800c00080,0x5160435800c00078,0x41e00348004000b0,0x9260434800c01801\n"
".quad 0x44e003400000004c,0x4220854800c02001,0x71e0039400000000,0x34e00320244000e0\n"
".quad 0x76220020244000e1,0x62200330304000c1,0x316023202dc00010,0x31a0035800c00081\n"
".quad 0x7760235800c00079,0x77a0035800c00080,0x5160435800c00078,0x9260434000000018\n"
".quad 0x71a00348004000b0,0x41e003202dc00010,0xd120434800c02801,0x4520034000000079\n"
".quad 0x77a0034800c03001,0x41e04320244000e0,0x31200348004000b0,0xe4e023202dc00011\n"
".quad 0xe760035800c00081,0x5160435800c00079,0x04220048004000b0,0x34e04330324000c1\n"
".quad 0x4760034000000075,0x55200320244000e1,0xe4a00320244000e1,0x862085202dc00011\n"
".quad 0x4560239400000000,0x47a0035800c00081,0x34e0435800c00079,0x45200348004000b1\n"
".quad 0x556043202dc00011,0xd7a0234000000079,0x6020855800c00081,0x5560439400000000\n"
".quad 0xd5a00348004000b1,0xd76003202dc00011,0x4420855800c00079,0x22a0859400000000\n"
".quad 0xe760439400000001,0xd5e0434000000075,0x63208548004000b1,0x43a0859400000001\n"
".quad 0x2460859400000001,0x00a1e79400000000,0x4180034000000660,0x41c0034800c00801\n"
".quad 0x4300034800c01001,0x6180034800c02001,0x42800320244000e0,0x72c0034800c01801\n"
".quad 0xc3800320244000e0,0x61c02320244000e0,0x6300035800c00080,0x04c1e45800c00078\n"
".quad 0xa2800328004000a0,0xb3402320244000e0,0xb3c0035800c00080,0x71c0435800c00078\n"
".quad 0xa400234000000030,0xa300035800c00080,0x6180035800c00078,0xd340432027c00010\n"
".quad 0xe3c023400000003c,0xe440035800c00080,0x0400435800c00078,0x71c0434000000031\n"
".quad 0xb3000348004000b0,0xf3c0432027c00010,0x4440034000000044,0xd340434800c02801\n"
".quad 0xa2800348004000b0,0x1440032027c00010,0x45000320244000e1,0x02c0434800c03001\n"
".quad 0xe3800348004000b1,0x1540232027c00010,0x15c0035800c00081,0x4480035800c00079\n"
".quad 0xf3c04320244000e1,0x55004348004000b0,0x140003400000005d,0x2540232027c00011\n"
".quad 0x25c0035800c00081,0x4440435800c00079,0x24800348004000b1,0x54c0432027c00011\n"
".quad 0x600085400000005d,0xc640859400000000,0x34c0439400000000,0xa2008548004000b1\n"
".quad 0xe600859400000000,0x0680859400000000,0x2780859400000001,0x4240859400000001\n"
".quad 0x2580859400000000,0x001de79400000000,0x0000008000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x9fd00043cfd00000\n"
".quad 0xe38e39bee38e3943,0x0000d4000802043d,0x0802040000000400,0x000003000000d300\n"
".quad 0x0000d20008020400,0x0802040000000200,0x000001000000d000,0x0000ce0008020400\n"
".quad 0x0802040000000000,0x000005000000d500,0x00007600080a0400,0x2419030024002000\n"
".quad 0x000000000c170400,0x11f0000020000400,0x000000000c170400,0x21f0000018000300\n"
".quad 0x000000000c170400,0x11f0000010000200,0x000000000c170400,0x21f0000008000100\n"
".quad 0x000000000c170400,0x21f0000000000000,0x02001800080d0400,0x005de40000000200\n"
".quad 0x001c042800440400,0x009c042c00000094,0x00dc042c00000084,0x011c042c00000098\n"
".quad 0x049ca32c00000088,0x061de22004400020,0x351ca31800000010,0x209c032008400030\n"
".quad 0x201c034800c00005,0x411c034800fffffd,0x421c034800c02ffd,0x431c034800c03805\n"
".quad 0x44dc034800c04005,0x419c034800c01801,0x415c0320244000e1,0x40dc0320044000e0\n"
".quad 0x811c034800c027fd,0x425c0320044000e0,0xc21c034800c00801,0x41dc0320004000e0\n"
".quad 0x42dc034800c00ffd,0x329c034800c02005,0x631c2320044000e1,0x635c035800c00080\n"
".quad 0x309c035800c00078,0x90dc0320004000e0,0x639c0320004000e0,0x755c032031800080\n"
".quad 0xb01c0320244000e0,0xc19c4320244000e0,0xa1dc234000000034,0xa2dc035800c00080\n"
".quad 0x63dc435800c00078,0xa31c034800400090,0x719c432031800080,0x51dc23400000002c\n"
".quad 0x52dc035800c00080,0x635c435800c00078,0x529c034800400090,0x715c432031800080\n"
".quad 0x41dc23400000002c,0x441c035800c00080,0x52dc435800c00078,0x419c034800400090\n"
".quad 0x711c432031800080,0x315c234000000040,0x341c035800c00080,0x41dc435800c00078\n"
".quad 0x311c034800400090,0x50dc432031800080,0x241c234000000040,0x245c035800c00080\n"
".quad 0x315c435800c00078,0x209c034800400090,0x00dc432031800080,0x845c234000000045\n"
".quad 0x859c035800c00080,0x30dc435800c00078,0x841c034800400090,0x145c432031800080\n"
".quad 0x521c234000000059,0x559c035800c00081,0x145c435800c00079,0x569c034800400091\n"
".quad 0x821c432031800081,0x475c854000000058,0x265c858400000000,0x86dc438400000000\n"
".quad 0xe21c854800400090,0x055c238400000000,0x059c035800c00080,0x079c035800c00078\n"
".quad 0x639c852031800080,0x501c438400000000,0x015de24000000059,0x20de0418fa000000\n"
".quad 0x411c031800000051,0x455c034800c04001,0x209e044800c03801,0x30dc001800000049\n"
".quad 0x419c03300a800014,0x511c0320244000e0,0x209c0020244000e1,0x30dc00300a800004\n"
".quad 0x415c235000f0eff0,0x41dc035800c00080,0xa29c855800c00078,0x07dc438400000000\n"
".quad 0x209c004800400090,0x30dc005000f0fff0,0x411c03580000000c,0x515c4320318000a0\n"
".quad 0x62dc23400000001c,0x61dc035800c00080,0x20dc005800c00078,0x515c433006000008\n"
".quad 0x609c0348004000b0,0xb19c4320318000a0,0x31dc00400000001c,0xc01c85208ed0a000\n"
".quad 0x03dc858400000000,0xa5dc858400000001,0xe59c858400000001,0x60dc438400000001\n"
".quad 0x0081e748004000b0,0x81200040000012e0,0x7161005000000074,0x3320045000000059\n"
".quad 0x41a000100000003d,0xd12100500000005c,0x5160005000000001,0x61a0005000000064\n"
".quad 0x4120005000000000,0x5160005000000064,0x61a0005000000028,0x4121005000000058\n"
".quad 0x5161005000000028,0x61a0005000000038,0x4121005000000064,0x56e1005000000038\n"
".quad 0x61a000500000003c,0x46a0005000000028,0x612000500000003c,0xa161005000000038\n"
".quad 0xa2e300500000006d,0x472000500000006d,0xb12000500000003c,0x51a000580000006d\n"
".quad 0x51e0005800d02400,0xa620003038d01000,0x6120003008000069,0x01a1e2300e000014\n"
".quad 0x01e1e21871ee3470,0x81220018fe71c71c,0x3120043008cff001,0x4422011000000011\n"
".quad 0x3120042018000018,0x44220110004000c1,0xb320002018000040,0xb360005800d02400\n"
".quad 0xa420043038d01000,0xc2e0001000000041,0x332004301a00002c,0x82e2001000000039\n"
".quad 0x33a0043016cff001,0xb2e100100000002d,0xe3a2015000000069,0x43a2012018000018\n"
".quad 0xb320002018000038,0xb360005800d02400,0xa3a0043038d01000,0xc2e0001000000039\n"
".quad 0x832200301a00002c,0x32a0043016cff001,0x3320041000000029,0xc322011000000031\n"
".quad 0x4322012014000018,0xa2a0002014000030,0xa3e004500000006d,0xa2e0001000000031\n"
".quad 0xa7a0005800d02400,0xb7a0003038d01000,0x32a004303c000028,0x87a2001000000065\n"
".quad 0x37a004303ccff001,0xe1a2011000000079,0xb7a2002014000019,0x42a2013038d01001\n"
".quad 0xa120002014000018,0xa160005800d02401,0xa1e2003038d01001,0xa2a0043038d01001\n"
".quad 0x41a0001000000029,0x46a000300a000068,0xb16000300e000068,0xb1e0005800d02401\n"
".quad 0x4120033038d01001,0x86a20020244000e1,0x5660003034cff001,0x56e000300e00006c\n"
".quad 0x416023303c00006c,0x41e0035800c00080,0x8662005800c00078,0x86e2003032cff001\n"
".quad 0x5160433036cff001,0x81e200400000001c,0x0721e43038cff001,0x94620028004000a0\n"
".quad 0x71e000302e400035,0x4120033010400024,0xa322002039c00010,0x7222003000400035\n"
".quad 0x51604330104000c0,0x91e00348004000b0,0x42600320244000e0,0x4220854800c01001\n"
".quad 0x77a0239400000000,0x77e0035800c00080,0x9260035800c00078,0x81220020244000e0\n"
".quad 0xe16043300ccff001,0x922023400000007d,0x97a0035800c00080,0x4122005800c00078\n"
".quad 0x31a003303a400034,0x84e04320244000e1,0x4222004000000078,0x676023303a4000c0\n"
".quad 0x67a0035800c00080,0x7120035800c00078,0xb362002039c00010,0xd1e043302c400035\n"
".quad 0x5160434000000079,0x47600348004000b0,0x61a0034800c02001,0x4220852039c00010\n"
".quad 0xd760039400000000,0x47a00320244000e1,0x71e0434800c02801,0xd7e02348004000b0\n"
".quad 0xd120035800c00081,0x9220035800c00079,0xe7a0032039c00010,0xf1604320244000e1\n"
".quad 0x3260434000000011,0xd1200348004000b1,0xe4e0232039c00011,0xe760035800c00081\n"
".quad 0x4520035800c00079,0x5160434800c03001,0x34e04348004000b0,0x4760034000000075\n"
".quad 0x55200320244000e1,0xe4a00320244000e1,0x1462002039c00011,0x456023302e4000c1\n"
".quad 0x47a0035800c00081,0x34e0435800c00079,0x45200348004000b1,0x5560432039c00011\n"
".quad 0xd7a0234000000079,0xc022005800c00081,0x55604330004000c0,0xd7200348004000b1\n"
".quad 0xd760032039c00011,0xd322005800c00079,0x846085302c4000c0,0xe760439400000000\n"
".quad 0x6020854000000075,0x4320859400000000,0xd760439400000000,0x22a08548004000b1\n"
".quad 0xc3e0859400000001,0x43a0859400000001,0x2420859400000001,0x00a1e79400000000\n"
".quad 0x9180034000000620,0x41c00320244000e0,0x4240034800c01001,0x4340034800c02001\n"
".quad 0x7300034800c02801,0x94000320244000e0,0x02c1e420244000e0,0x61c02328004000a0\n"
".quad 0x6240035800c00080,0x3200035800c00078,0xd4c00320244000e1,0x61800320244000e0\n"
".quad 0x71c0432017c00010,0x4440034000000024,0x8240234800c03001,0x8340035800c00080\n"
".quad 0x71c0435800c00078,0x15000348004000b0,0x82000320244000e1,0x9240432017c00010\n"
".quad 0xc340234000000034,0xc440035800c00080,0x9240435800c00078,0xc3000348004000b0\n"
".quad 0xd340432017c00010,0x0440234000000044,0x0480035800c00081,0xd340435800c00079\n"
".quad 0x04000348004000b0,0x1440432017c00011,0x3540234000000049,0x3600035800c00081\n"
".quad 0x1440435800c00079,0x34800348004000b1,0x54c0432017c00011,0x4540234000000061\n"
".quad 0x4600035800c00081,0x34c0435800c00079,0x45000348004000b1,0x52c0432017c00011\n"
".quad 0x6000854000000061,0xc580859400000000,0xb540439400000000,0x87408548004000b0\n"
".quad 0x05c0859400000000,0x2380859400000001,0x43c0859400000001,0x4640859400000001\n"
".quad 0x2280859400000000,0x001de79400000000,0x0000008000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0xcfd0000000000000,0xe38e39439fd00043\n"
".quad 0x080a043de38e39be,0x2000200000008c00,0x0c17040020190300,0x1800030000000000\n"
".quad 0x0c17040021f00000,0x1000020000000000,0x0c17040011f00000,0x0800010000000000\n"
".quad 0x0c17040021f00000,0x0000000000000000,0x080d040021f00000,0x0000010001000c00\n"
".quad 0x00440400005de400,0x0000009800dc0428,0x00000088011c042c,0x00000094001c042c\n"
".quad 0x00000084009c042c,0x08400030345ca32c,0x04400020001ca320,0x0ec0050111dc2320\n"
".quad 0x00fff97c009c031a,0x80c002f821dc0348,0x80c006fd11dc2318,0x000000000021e718\n"
".quad 0x0ec0097801dc2380,0x20c0068401dc2319,0x20c0050511dc2319,0x20c006f911dc2319\n"
".quad 0x000000000021e719,0x00000001309e0480,0xff40000001dde218,0x000000fc019de418\n"
".quad 0x00400014211c0128,0x000017c001000748,0x00000045319e0450,0x00cff800409c0118\n"
".quad 0x00400034611c0148,0xff40000001dde248,0x000000fc019de418,0x00000009a31c0428\n"
".quad 0x000016e001000710,0x00cff800409c0150,0x00000009a35c0448,0x104000fcc65c8610\n"
".quad 0x104101fcc51c8680,0x104202fcc3dc8680,0x104303fcc39c8680,0x104404fcc49c8680\n"
".quad 0x104505fcc41c8680,0x104606fcc69c8680,0x104707fcc21c8680,0x104808fcc09c8680\n"
".quad 0x0000005190dc0080,0x71ee3470029de250,0xfe71c71c02dde218,0x0000003c315c0018\n"
".quad 0x0000003940dd0050,0x00000038515c0050,0x00000048f11d0050,0x00000048515c0050\n"
".quad 0x0000004030dc0050,0x00000040411c0050,0x00000040515c0050,0x0000006830dd0050\n"
".quad 0x00000068411c0050,0x00000068515c0050,0x0000002030dd0050,0x00000020411d0050\n"
".quad 0x00000008355c0050,0x00000008459d0050,0x0000002050dc0050,0x004000c0821c0050\n"
".quad 0x00000059511d0058,0x00000008361c0050,0x0000005960dc0050,0x00d02400415c0058\n"
".quad 0x30d01000419c0058,0x0600005555dc0030,0x00000059525f0030,0x0c00001050dc0050\n"
".quad 0x004000c0011de430,0x004000c0219c0028,0x06cff00170de0058,0x00cfe00044de0030\n"
".quad 0x00000019319c0450,0x0000000d311c0410,0x0000004d309c0410,0x00000055631d0010\n"
".quad 0x00000028411c0150,0x0c000010211c0150,0x00d02400919c0020,0x30d0100091dc0058\n"
".quad 0x0e000024619c0030,0x00000021321c0430,0x0ccff001719e0010,0x00000019319c0430\n"
".quad 0x00000028619c0110,0x10000018221c0150,0x00d02400c19c0020,0x30d01000c1dc0058\n"
".quad 0x0e00003061dc0030,0x004000c1a31c0030,0x00000011a69c0458,0x0ecff001719e0010\n"
".quad 0x00000031331c0430,0x00000019319c0410,0x00000028619c0110,0x18000018219c0150\n"
".quad 0x00000059531c0020,0x00d02400c11c0050,0x30d01000c15c0058,0x0a000030415c0030\n"
".quad 0x004000c1031c0030,0x00400080041de458,0x0acff001711e0028,0x00000011311c0430\n"
".quad 0x00000028411c0110,0x00000031329c0450,0x004000a1131c0310,0x14000010229c0120\n"
".quad 0x30cff001709e0020,0x00c00080c0dc2330,0x00c00078c15c0358,0xfb8e38e4211c0258\n"
".quad 0x21c00010c09c0330,0x0000001430dc4320,0x00000011331c0040,0x00d02401515c0058\n"
".quad 0x30d01001511c0058,0x184000c1931c0030,0x0040009030dc4330,0x08000054535c0048\n"
".quad 0x00c00c01111c0330,0x00000000231c8548,0x1acff001735e0094,0x004000a0411c0330\n"
".quad 0x00c01801165c0320,0xf78e38e4d09c0248,0x00c0008040dc2330,0x00c00078435c0358\n"
".quad 0x00000009309c0058,0x004000a1931c0358,0x0000003430dc4320,0x044000c1451c0040\n"
".quad 0x00c00080c09c2330,0x00c00078c35c0358,0x30d01001565e0058,0x00000029a29c0430\n"
".quad 0x00000034235c4310,0x21c00010409c0340,0x00c02401111c0320,0x0040009030dc4348\n"
".quad 0x004000a0411c0348,0x21c00010c31c0320,0x00000000251c8520,0x00c0008046dc2394\n"
".quad 0x00400090d35c4358,0x32000054509c0048,0x00c03001165c0330,0x00d02401651c0048\n"
".quad 0x30d01001615c0058,0x30d01001661e0030,0x004000a1965c0330,0x0a000059415c0020\n"
".quad 0x30000059451c0030,0x00c00081955c2330,0x00c00079961c0358,0x0acff001715e0058\n"
".quad 0x04cff001709e0030,0x00000061561c4330,0x28cff001751e0040,0x00c03c01155c0330\n"
".quad 0xf78e38e4515c0248,0xf78e38e4209c0230,0xf78e38e5459c0230,0x004000a155dc0330\n"
".quad 0x00c0007840dc0320,0x00000015351c0058,0x00000009355c0058,0x0000005934dc0058\n"
".quad 0x00c00081709c2358,0x00c00079715c0358,0x00000021a59c0458,0x0000000db0dc4310\n"
".quad 0x21c00010421c0340,0x00000014215c4320,0x00c04801109c0340,0x00000019a6dc0448\n"
".quad 0x00400090325c4310,0x00c05401111c0348,0x21c00011919c0348,0x004000a0209c0320\n"
".quad 0x00c0600110dc0320,0x004000a0445c0348,0x0040009181dc4320,0x284000c0f51c0048\n"
".quad 0x2a4000c0e55c0030,0x21c00011711c0330,0x00c0008023dc2320,0x00c00078239c0358\n"
".quad 0x00400090515c4358,0x21c00010209c0348,0x00000038f39c4320,0x00c0008113dc2340\n"
".quad 0x00c0007915dc0358,0x004000a0301c0358,0x00400090e0dc4320,0x0000005cf3dc4348\n"
".quad 0x21c00011139c0340,0x00c00080045c2320,0x00c0007805dc0358,0x00400090f3dc4358\n"
".quad 0x21c00010041c0348,0x264000c1201c0020,0x0000005d15dc4330,0x00000000c51c8540\n"
".quad 0x00000000855c8594,0x00000000601c8594,0x00400091745c4394,0x00000000429c8548\n"
".quad 0x0000000026dc8594,0x00000000e59c8594,0x00000001069c8594,0x00000000001de794\n"
".quad 0xffc00000509c0280,0xffc0000070dc0239,0x8e40004421dc0339,0x200000fc31dc0319\n"
".quad 0x000000800021e719,0x000000fc035de440,0x000000fc039de428,0x000000fc03dde428\n"
".quad 0x000000e0001de728,0x010000106fdd0340,0x003ffffc73dc0248,0x003ffffc50dc0238\n"
".quad 0xf2c00000239c0238,0x00000018035de40b,0x0e00000cf1dc4328,0xf28000002380021a\n"
".quad 0x000000fc009de40b,0x0000001870dc0028,0x00000200000007c8,0x0c800074221e0160\n"
".quad 0x04000020209c0120,0x0c800074221e0120,0x00000010229c0120,0x04000020209c0150\n"
".quad 0x08000018a21e0120,0x14000020209c0120,0x0000003ce29c4320,0x08000018221e0168\n"
".quad 0x010000348fdd0320,0xfffffffc921c0248,0x0e00002881dc4339,0x000000000021f41b\n"
".quad 0x000000a001000740,0x00000010009de450,0x0000001400ddf428,0x00000008011de428\n"
".quad 0x0000000c015de428,0x00000000001de728,0x00c0000470dc0390,0x00c00004509c0360\n"
".quad 0x00000010021de460,0x00c00054341c0328,0x00c00054235c0358,0x00000014025de458\n"
".quad 0x00fffffd02dc0328,0x00fffffcd29c0348,0x00000018009de448,0x0ec01ff4b1dc0328\n"
".quad 0x0000001c00dde41a,0x20c01ff4a1dc0328,0x000005400021e71a,0x8edffc0081dc8140\n"
".quad 0x000000400001e719,0x00200000515c4240,0x00000e60001de738,0x8edffc0021dc8140\n"
".quad 0x000000600001e719,0x00200000715c4240,0x00000018011de438,0x00000dc0001de728\n"
".quad 0x0e0000fc83dc0140,0x0e0000fc25dc0119,0x0e00000811dc0419,0x000000800001e70c\n"
".quad 0x0edffc0087dc8140,0x0edffc0021dc8119,0x00000080002de719,0x000000600021e740\n"
".quad 0x000000fc011de440,0xffe00000015de228,0x00000c60001de71b,0x0e00004401dc0440\n"
".quad 0x000000800021e70c,0x00000014709c8340,0x000000fc011de468,0x00000000215c0228\n"
".quad 0x00000ba0001de73a,0x0e00004831dc0440,0x000000a00021e70c,0x00000014709c8340\n"
".quad 0x000000fc011de468,0x00000000209c0228,0xffc00000215c423a,0x00000ac0001de739\n"
".quad 0x0e0000fca1dc2340,0x00d0d4008120011b,0xffffff2804a1e250,0x000000fc0481e41b\n"
".quad 0x0e0000fcb1dc2328,0x000000800001e71b,0x00d0d400219c0140,0x00c000d9249c0350\n"
".quad 0x00000020001de748,0x000000fc049de440,0x00fff005009c0328,0x00000004029de248\n"
".quad 0x00fff004d21c0318,0x0000001c21de8348,0x00000014815e8341,0x0000001872dc0041\n"
".quad 0x14800074609e01c8,0x14000028221c0120,0x00000008209c0120,0x00000028429c0150\n"
".quad 0x10000020209c0150,0x08000028639e0120,0x04800074621e0120,0x14000008e29c0120\n"
".quad 0x04000008809c0120,0x00000040d25d0320,0x08000028619e0148,0x14000008611c0120\n"
".quad 0x00c00004521c0320,0x00c00054821c0360,0x00000020925c0358,0x00000048935c0348\n"
".quad 0x00fffffcd25c0348,0x0ec01ff491dc0348,0x000000600001e71a,0x00000020d09d0340\n"
".quad 0x00000014215e8348,0x00000600001de740,0x00fff004d11c0340,0x8ec00ffc41dc2348\n"
".quad 0x000000800001e719,0x00000000509c0240,0x000000fc011de43a,0xffc00000215c4228\n"
".quad 0x00000520001de739,0x0effef3041dc2340,0x00000000515c021b,0x000000400001e73a\n"
".quad 0x000000fc011de440,0x00000480001de728,0x94000008639c0140,0x00000035211f8421\n"
".quad 0x94000008621c011c,0x14000008609c0120,0x8ec0007c41dc2321,0x003ffffcf19c0219\n"
".quad 0x8e00000883dc0138,0x0040000061dc421a,0x000000a00081e738,0x0000003520a38440\n"
".quad 0xa20000fce3e0231c,0x0000001c03a1e41a,0x00ffff8021200328,0x000000fc01e1e448\n"
".quad 0x0e0000fc41dc2328,0x000000e00081e719,0x00c0008040a20340,0x00000010e1a00348\n"
".quad 0x00000008e0e00358,0x0000000870a00360,0x0000001071e00360,0xa20000fc33e02358\n"
".quad 0x0000000863a0431a,0x00c00004e09c0368,0x00c0007c70dc0358,0x0000000c211c4360\n"
".quad 0x00c00004e09c0368,0x00c0000440dc0368,0xa20000fc31dc2368,0x800000fc21dc231a\n"
".quad 0x00c00004709c031a,0x000000600021e758,0x00c00004411c0340,0x0e0000fc41dc2348\n"
".quad 0x00c0000420800319,0x00000008515c4348,0x00000000001de768,0x0000000000000090\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x000000c079fa0000,0x5fffffc073fa0000\n"
".quad 0x0000000000000003,0x0802043ff0000000,0x000006000000ca00,0x0000c90008020400\n"
".quad 0x0802040000000500,0x000004000000c800,0x0000c70008020400,0x0802040000000300\n"
".quad 0x000002000000c600,0x0000c50008020400,0x0802040000000100,0x000000000000c400\n"
".quad 0x0000cc0008020400,0x0802040000000800,0x000007000000cb00,0x00006300080a0400\n"
".quad 0x1419030014002000,0x000000000c170400,0x11f0000010000200,0x000000000c170400\n"
".quad 0x21f0000008000100,0x000000000c170400,0x21f0000000000000,0x06004800080d0400\n"
".quad 0x005de40000000300,0x001c042800440400,0x009c042c00000094,0x00dc042c00000084\n"
".quad 0x011c042c00000098,0x049ca32c00000088,0xffdc852004400020,0x34dca3c900001003\n"
".quad 0x021de42008400030,0x301c0328000000fc,0x0fdc0320244000e1,0xffdc04207e000004\n"
".quad 0x31dc2350ee0000ff,0x209c031a0ec00501,0x21dc034800fff97d,0x31dc231880c002f8\n"
".quad 0x21dc231880c006fd,0x0001e71a20c00ffd,0x309c038000000000,0x20dc034800fffffd\n"
".quad 0x211e044800fffffd,0x209e041800000009,0x415c00180000000d,0x219c005000cfc000\n"
".quad 0x209c035000cfc000,0x01dde44800c00005,0x63dc862800000014,0x209e0480104202fc\n"
".quad 0x211c001800000009,0x431c865000cfc000,0x225e0480104303fc,0x90dc00180000004d\n"
".quad 0x01dde45000cfc000,0x645c86280000000c,0x315c0380104000fc,0x215e044800c00005\n"
".quad 0x51dc001800000015,0x665c865000cfc000,0x015de480104505fc,0x435c86280000001c\n"
".quad 0x009de480104404fc,0x241c862800000010,0x015c2380104101fc,0x019c035800c00080\n"
".quad 0x30dc035800c00078,0x009de44800c017fd,0x515c432800400080,0x30dc034000000018\n"
".quad 0x311c0320244000e0,0x019c034800c03005,0x329c232005c00010,0x32dc035800c00080\n"
".quad 0x401c035800c00078,0x51dc4320244000e0,0x311c034800400090,0xa0dc432005c00010\n"
".quad 0x029c23400000002c,0x02dc035800c00080,0x315c435800c00078,0x009c034800400090\n"
".quad 0xa01c432005c00010,0x229e04400000002c,0x661c851800000049,0x00dc438400000000\n"
".quad 0xa1dc004800400090,0x439c85208e400004,0x201c858400000000,0x0000078400000000\n"
".quad 0x0001e760000002c0,0x209e034000000280,0x209e044800c01001,0x21dc001800000009\n"
".quad 0x0001e7208e400014,0x309e0340000001e0,0x209e044800c00c01,0x21dc001800000009\n"
".quad 0x0001e7208e400014,0x91dc004000000140,0x0001e7208e400004,0x90dc0040000000e0\n"
".quad 0xa09c005000f0eff0,0x30dc005000f0fff0,0x209c00580000000c,0x21dc003006000008\n"
".quad 0x0021f4208ed0a000,0x021df24000000000,0x021df21800000028,0x021df21800000030\n"
".quad 0x021df2180000002c,0x021df21800000008,0x309c03180000000c,0x015de44800c06001\n"
".quad 0x81dc2328004000a0,0x209c03190ec00004,0x00000720244000e0,0x20dc236000002780\n"
".quad 0x211c035800c00080,0x209c035800c00078,0x30dc43200bc00010,0x30dc434000000010\n"
".quad 0x0001e748004000b0,0x81dc234000000040,0x0001e71a8ec00028,0x81dc234000000b00\n"
".quad 0x0081e7190ec00028,0x01200440000000a0,0x4122032c00000084,0x4fe0856000c00008\n"
".quad 0x4fe085c900000000,0x00a1e7c900000800,0x11400040000002e0,0x0240005000000045\n"
".quad 0xe200005000000000,0xf180005000000038,0x014000500000003c,0x824100300af00001\n"
".quad 0x91c0005000000024,0x5140005000000065,0x9280005000000018,0xc200005000000018\n"
".quad 0x5180005000000030,0xa1c100500000001c,0xd24000500000001c,0x0140045000000034\n"
".quad 0x6181002c00000084,0x71c0005000000020,0x0101e25000000020,0x5142031800000004\n"
".quad 0x6181006000c00008,0x71c1005000000024,0xf100855000000024,0x518085c900001003\n"
".quad 0x51c085c900000000,0x311c03c900000800,0x315c034800c00c01,0x31dc034800c01801\n"
".quad 0x419c034800c02401,0x511c0320244000e0,0x755c0320244000e0,0x615c2320244000e0\n"
".quad 0x61dc035800c00080,0x059de45800c00078,0x321c0328004000a0,0x429c234800c03001\n"
".quad 0x42dc035800c00080,0x525c235800c00078,0x51dc435800c00081,0x551c03400000001c\n"
".quad 0x619c035800c00079,0xa15c43202dc00010,0x821c03400000002c,0x329c0320244000e0\n"
".quad 0x951c434800c03c01,0x71dc434000000050,0x825c2348004000b0,0x82dc035800c00080\n"
".quad 0xa29c035800c00078,0x641c8520244000e0,0x411c039400000000,0x925c43202dc00010\n"
".quad 0xa2dc23400000002c,0xa5dc035800c00080,0x515c435800c00078,0x519c0348004000b0\n"
".quad 0xb2dc43202dc00011,0x35dc03400000005c,0x41dc434800c04801,0x821c0348004000b1\n"
".quad 0x741c03202dc00010,0x34dc0320244000e1,0x925c434800c05401,0x051c2348004000b0\n"
".quad 0x055c035800c00081,0xa29c035800c00079,0x349c03202dc00010,0x455c4320244000e1\n"
".quad 0xb2dc434000000055,0x051c0348004000b0,0x241c23202dc00011,0x24dc035800c00081\n"
".quad 0x555c435800c00079,0x249c0348004000b1,0x041c43202dc00011,0x401c85400000004d\n"
".quad 0x645c859400000000,0x04dc439400000000,0x839c8548004000b1,0xa35c859400000000\n"
".quad 0x465c859400000000,0x23dc859400000001,0x231c959400000001,0x009c049400000000\n"
".quad 0x81dc232c00000084,0x000007190ec00008,0x209e0360000005c0,0x2fdc856000c00008\n"
".quad 0x2fdc85c900000000,0x0001e7c900000800,0x81dc234000000240,0x0021f4190ec0000c\n"
".quad 0x31dc234000000000,0x000007190e0000fd,0x0001e760000000e0,0x31dc234000000080\n"
".quad 0x0021f4190ec00bfd,0x035de44000000000,0x001df42800000030,0x031de42800000038\n"
".quad 0x039df42800000034,0xe09d002800000000,0x011de25000000000,0x20de0018f68f5c28\n"
".quad 0x209c00301acfc000,0x445c003018cfc000,0x43dc003020400024,0x465c103006400034\n"
".quad 0x31dc233004400034,0x000007190e0000fd,0x0001e760000000e0,0x31dc234000000080\n"
".quad 0x0021f4190ec00bfd,0x065de44000000000,0x001df4280000003c,0x03dde42800000038\n"
".quad 0x039df42800000064,0x809c002800000000,0x10dc005000000039,0xf11c005000000045\n"
".quad 0x209c00500000003c,0x209c005000000000,0x90dc00500000000c,0x209c005000000065\n"
".quad 0xe11d005000000010,0x209c005000000000,0x40dc00500000000c,0x411e00301ecfc000\n"
".quad 0x209c003032cfc000,0x235e005000efe000,0x231e003006400034,0x241c103008400034\n"
".quad 0x81dc233022400044,0x000007190ec0002c,0x0001e76000000120,0x81dc2340000000a0\n"
".quad 0x0021f4190ec00030,0x031de44000000000,0x03dde42800000034,0x039df42800000064\n"
".quad 0x035de42800000000,0x065de42800000030,0x001df4280000003c,0x809c002800000038\n"
".quad 0xe0dd005000000045,0x029de25000000000,0x211c001871ee3470,0x109d005000000038\n"
".quad 0x30dc005000000041,0x411c00500000003c,0x209c005000000040,0x30dc00500000003c\n"
".quad 0x411c005000000030,0x209d005000000000,0x30dd005000000030,0x411c005000000034\n"
".quad 0x209d00500000003c,0x355d005000000034,0x411c005000000064,0x251c005000000030\n"
".quad 0x02dde25000000064,0x409c0018fe71c71c,0x40dd005000000034,0x25dc005000000055\n"
".quad 0x509c005000000064,0x311c005800000055,0x315c005800d02400,0x459c00302ed01000\n"
".quad 0x409c003004000051,0x311c04300a00000c,0x465f001000000065,0x609e005000000055\n"
".quad 0x309c043004cff001,0x219e011000000009,0x309c042008000028,0x221e0110004000c1\n"
".quad 0x911c002008000018,0x915c005800d02401,0x411c00302ed01001,0xa65c04300a000064\n"
".quad 0x619e001000000021,0x311c043008cff001,0x535d001000000035,0x319c045000000051\n"
".quad 0x619e011000000019,0x219e012008000028,0xd11c002008000018,0xd15c005800d02400\n"
".quad 0xa19c04302ed01000,0x415c001000000019,0x635e00300a000034,0x311c04300acff001\n"
".quad 0x331c041000000031,0xc31e011000000035,0x211e012008000028,0x431c002008000030\n"
".quad 0xa11c045000000055,0xc21c001000000011,0xc25c005800d02400,0x825c00302ed01000\n"
".quad 0x631e003012000030,0x321c043012cff001,0x43dc00100000003d,0x331c04302ed01001\n"
".quad 0xc29e011000000031,0x331c032010000028,0x209e0120244000e1,0x621e002010000028\n"
".quad 0xc25c23302ecff001,0xc2dc035800c00080,0x821c005800c00078,0x029de43030400054\n"
".quad 0x925c4328004000a0,0x42dc00400000002c,0x835e005800d02401,0xc21c0330304000c0\n"
".quad 0x331c032015c00010,0xb3dc004800c00c01,0x925c43301e000050,0xc31c0348004000b0\n"
".quad 0x63de0020244000e0,0x835c85301ecff001,0xc61c239400000000,0xc69c035800c00080\n"
".quad 0xf3de005800c00078,0xc21c033022400064,0x825c432015c00010,0xf35e004000000069\n"
".quad 0x531c0030224000c0,0x545c005800d02401,0x33dc03302ed01001,0x925c434800c01801\n"
".quad 0xc45c0048004000b0,0xf3dc033022000054,0x835c8520244000e0,0x645e009400000000\n"
".quad 0xf61c233022cff001,0xf69c035800c00080,0x125e005800c00078,0xf21c03301c400065\n"
".quad 0x845c432015c00010,0x939e004000000069,0x335c03301c4000c0,0x125c434800c02401\n"
".quad 0x33dc0348004000b1,0xd61c034800c03001,0x839c8520244000e0,0xf35c039400000000\n"
".quad 0x845c2320244000e0,0xa09c045800c00081,0x339c031000000009,0xd3dc234800c03c01\n"
".quad 0xd69c035800c00080,0x421e005800c00078,0xe39c03302ed01001,0x825c0320244000e0\n"
".quad 0xf69c435800c00079,0xb21c004000000068,0xe2dc233010000050,0xe3dc035800c00080\n"
".quad 0x125c435800c00078,0x345c034000000025,0xb3dc434800c04801,0x52de00400000003c\n"
".quad 0x145c03302ed01001,0x621e0020244000e1,0xc2dc003010cff001,0x131c233016000054\n"
".quad 0x15dc035800c00081,0x62de005800c00079,0xc5dc433016cff001,0x831e00400000005c\n"
".quad 0x821c033020400064,0xb2de002015c00011,0xc51e003000400064,0x925c4330204000c0\n"
".quad 0xd31c0348004000b0,0x341c032015c00010,0x34dc034800c05401,0xa35c434800c06001\n"
".quad 0xe39c0348004000b1,0x055c032015c00010,0x361c0320244000e1,0xf3dc4320244000e1\n"
".quad 0x141c0348004000b0,0x559c232015c00011,0x569c035800c00081,0x745c435800c00079\n"
".quad 0x549c0348004000b1,0x64dc432015c00011,0x855c234000000069,0x859c035800c00081\n"
".quad 0x34dc435800c00079,0xb01e0048004000b1,0x829c0330004000c0,0x559c432015c00011\n"
".quad 0x851c854000000059,0xc01c859400000000,0x62dc439400000000,0xe09c8548004000b1\n"
".quad 0x011c859400000000,0x219c859400000001,0xa65c959400000001,0xffdc049400000000\n"
".quad 0x001de750ee0000ff,0x0000008000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x8ccccd3dcccccd00,0x2aaaab3f2aaaab3f,0xe38e39bf2aaaab3e,0x0802043de38e39be\n"
".quad 0x000002000000c000,0x0000be0008020400,0x0802040000000100,0x000000000000bc00\n"
".quad 0x0000c30008020400,0x0802040000000500,0x000004000000c200,0x0000c10008020400\n"
".quad 0x080a040000000300,0x3400200000006b00,0x0c17040034190300,0x3000060000000000\n"
".quad 0x0c17040011f00000,0x2800050000000000,0x0c17040021f00000,0x2000040000000000\n"
".quad 0x0c17040021f00000,0x1800030000000000,0x0c17040021f00000,0x1000020000000000\n"
".quad 0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x080d040021f00000,0x000007000a007800,0x00440400005de400,0x0000009800dc0428\n"
".quad 0x00000088011c042c,0x00000094001c042c,0x00000084009c042c,0x08400030365ca32c\n"
".quad 0xfa000000019de220,0x04400020059ca318,0x8ec0001191dc2320,0x00c00801951c0318\n"
".quad 0x00fffff1611c0348,0x0000005920de0448,0x00c04001915c0318,0x20c00bdc41dc0348\n"
".quad 0x00000065269e041a,0x2c4000e1411c0318,0x00c0100194dc0320,0x0c800004375c0048\n"
".quad 0x2c4000e050dc0330,0x004000a0009de420,0x0c800015a71c0028,0x00c00080415c2330\n"
".quad 0x00c0007841dc0358,0x2c4000e1319c0358,0x00c01801949c0320,0x05c00010411c0348\n"
".quad 0x0000001c515c4320,0x00c0008061dc2340,0x00c00078625c0358,0x2c4000e1221c0358\n"
".quad 0x00c0200195dc0320,0x004000b0515c4348,0x05c00010619c0348,0x0000002471dc4320\n"
".quad 0x00c00080825c2340,0x00c0007882dc0358,0x2c4000e1729c0358,0x00c02801955c0320\n"
".quad 0x004000b071dc4348,0x05c00010821c0348,0x0000002c925c4320,0x00c00080a2dc2340\n"
".quad 0x00c00078a35c0358,0x2c4000e1531c0358,0x00c03001961c0320,0x004000b0925c4348\n"
".quad 0x05c00010a29c0348,0x00000034b2dc4320,0x00c00080c35c2340,0x00c00078c3dc0358\n"
".quad 0x2c4000e1839c0358,0x00c03801901c0320,0x004000b0b2dc4348,0x05c00010c31c0348\n"
".quad 0x0000003cd35c4320,0x00c00080e3dc2340,0x00c00078e45c0358,0x2c4000e0041c0358\n"
".quad 0x004000b0d35c4320,0x05c00010e39c0348,0x00000044f3dc4320,0x00c0008107dc2340\n"
".quad 0x00c00079081c0358,0x004000b0f3dc4358,0x00f0eff1c45c0048,0x05c00011041c0350\n"
".quad 0x00000081f81c4320,0x00f0fff1d79c0040,0x00c00080385c2350,0x00c00078389c0358\n"
".quad 0x0000004517dc0058,0x004000b2045c4358,0x05c00010309c0348,0x0000008a10dc4320\n"
".quad 0x3e000079e79c0040,0x20c007ed93dc2330,0x2c4000e196dc031a,0x004000b030dc4320\n"
".quad 0x8ed0a001e1dc0048,0x00001e000005e720,0x00fffffd611c0340,0x00cfc001a1dc0048\n"
".quad 0x00000011211e0450,0x0000001c025de418,0x00cfc000421c0028,0x00c00005611c0350\n"
".quad 0x104000fc871c8648,0x00000011211e0480,0x00fffffd915c0318,0x00cfc000419c0048\n"
".quad 0x104101fc669c8650,0x00000015215e0480,0x00cfc000515c0018,0x00000014025de450\n"
".quad 0x104202fc839c8628,0x00c0000591dc0380,0x0000001d21de0448,0x00cfc000725c0018\n"
".quad 0x104505fc83dc8650,0x0000002401dde480,0x104404fc681c8628,0x00000018011de480\n"
".quad 0x104303fc479c8628,0x00c00ffd911c0380,0x00c00081b19c2348,0x00c00079b1dc0358\n"
".quad 0x0040008002dde458,0x00c02005915c0328,0x2c4000e0411c0348,0x0000001c61dc4320\n"
".quad 0x17c00011b19c0340,0x2c4000e0521c0320,0x00c00080415c2320,0x00c00078425c0358\n"
".quad 0x0040009071dc4358,0x17c00010411c0348,0x00000024515c4320,0x00c00080825c2340\n"
".quad 0x00c00078829c0358,0x00400090515c4358,0x17c00010821c0348,0x00000028925c4320\n"
".quad 0x0000000067dc8540,0x0000000046dc8584,0x00400090925c4384,0x00000000875c8548\n"
".quad 0x000012600001e784,0x00000071f19c0040,0x00000069c11d0050,0x00000075b15d0050\n"
".quad 0x0000006c619c0050,0x00000038411c0050,0x00000038515c0050,0x00000068619c0050\n"
".quad 0x00000078411d0050,0x00000078515c0050,0x00000074619c0050,0x00000079329c0450\n"
".quad 0x00000080411d0010,0x00000038619c0050,0x00000080515d0050,0x00000081341c0450\n"
".quad 0x00000078679c0010,0x0000003c491c0050,0x0000003c589d0050,0x00000081e81c0050\n"
".quad 0x0000003d331c0450,0x0000008a419d0010,0x0000003e08dc0050,0x0000008a415f0050\n"
".quad 0x0000008a21dc0050,0x00d0240063dc0058,0x46d01000699c0058,0x00000092211d0030\n"
".quad 0x00d02400581c0050,0x46d01000585c0058,0x0e000092479c0030,0x4c000018f99c0030\n"
".quad 0x0000008a495c0030,0x00d0240041dc0050,0x46d01000419c0058,0x42000016081c0030\n"
".quad 0x4ccff001e15e0030,0x00d0240253dc0030,0x46d01002599c0058,0x0c000010785c0030\n"
".quad 0x40cff001e81e0030,0x71ee3470021de230,0xfe71c71c025de218,0x00000015311c0418\n"
".quad 0x4c000094f95c0010,0x42cff001e99e0030,0x00000039319c0430,0x00000081381c0410\n"
".quad 0x18000020439e0110,0x004000c1311c0420,0x20000022081e0110,0x4acff001e95e0020\n"
".quad 0x18000038439e0130,0x00000099331c0420,0x00000095399c0410,0x2c4000e19a1c0310\n"
".quad 0x20000080441e0120,0x00d02402495c0020,0x46d01002465c0058,0x46d01002481e0030\n"
".quad 0x14000020c31e0130,0x32000092565c0020,0x0c000022621e0130,0x40000092581c0020\n"
".quad 0x00d02402299c0030,0x46d01002285c0058,0x46d01002291e0030,0x2c4000e13a5c0330\n"
".quad 0x4200008a685c0020,0x4800008a695c0030,0x00c00082889c2330,0x00c0007a891c0358\n"
".quad 0x46cff001e8de0058,0x2c4000e129dc0330,0x0000009224dc4320,0x004000a0089de440\n"
".quad 0x2c4000e1799c0328,0x3e40002635dc0020,0x45c00012849c0330,0x2c4000e158dc0320\n"
".quad 0x2c4000e1451c0320,0x004000b134dc4320,0x3e4000c1755e0048,0x2c4000e1891c0330\n"
".quad 0x00c0008145dc2320,0x00000001255c8558,0x00c00079461c0394,0x2c4000e0001c0358\n"
".quad 0x45c00011451c0320,0x00000061759c4320,0x00c0008294dc2340,0x00c0007a95dc0358\n"
".quad 0x004000b1655c4358,0x45c00012949c0348,0x0000005d34dc4320,0x00c0008275dc2340\n"
".quad 0x00c0007a761c0358,0x004000b134dc4358,0x45c00012759c0348,0x0000006175dc4320\n"
".quad 0x32cff001e65e0040,0x40cff001e7de0030,0x42cff001e9de0030,0x4acff001e95e0030\n"
".quad 0x00c000826a1c2330,0x00c0007a679c0358,0x004000b175dc4358,0x38400035965e0048\n"
".quad 0x45c00012661c0330,0x0000007a879c4320,0x00c00082381c2340,0x00c0007a385c0358\n"
".quad 0x384000c1971e0058,0x004000b1e65c4330,0x34400035f7de0048,0x45c00012379c0330\n"
".quad 0x00000086081c4320,0x00c00082485c2340,0x00c0007a48dc0358,0x344000c1f69e0058\n"
".quad 0x004000b207dc4330,0x45c00012481c0348,0x0000008e185c4320,0x00c0008008dc2340\n"
".quad 0x00c00078091c0358,0x004000b2185c4358,0x45c00010089c0348,0x36400036701e0020\n"
".quad 0x0000009238dc4330,0x14000030429e0140,0x3a400036591e0020,0x0c000020411e0130\n"
".quad 0x364000c006de0020,0x3a4000c2401e0030,0x00000001471c8530,0x0000000126dc8594\n"
".quad 0x00000011a11c0494,0x00000029a19c0410,0x00000001669c8510,0x004000b238dc4394\n"
".quad 0x00000041a1dc0448,0x00000001801c8510,0x00000039a21c0494,0x00000001e11c8510\n"
".quad 0x00000002019c8594,0x0000000221dc8594,0x00000000221c8594,0x00001580001de794\n"
".quad 0x2c4000e1411c0340,0x004000a0001de420,0x2c4000e1315c0328,0x00c0008041dc2320\n"
".quad 0x00c00078421c0358,0x01c00010429c0358,0x00c00078525c0320,0x00000020711c4358\n"
".quad 0x00c0008051dc2340,0x2c4000e1219c0358,0x004000b042dc4320,0x01c00010521c0348\n"
".quad 0x00000024711c4320,0x00c00080615c2340,0x00c0007861dc0358,0x2c4000e1735c0358\n"
".quad 0x004000b0425c4320,0x01c00010619c0348,0x0000001c511c4320,0x00c00080d15c2340\n"
".quad 0x00c00078d4dc0358,0x2c4000e1531c0358,0x004000b041dc4320,0x01c00010d11c0348\n"
".quad 0x0000004c515c4320,0x00c00080c35c2340,0x00c00078c4dc0358,0x2c4000e1849c0358\n"
".quad 0x004000b0515c4320,0x01c00010c31c0348,0x0000004cd35c4320,0x00c0008124dc2340\n"
".quad 0x00c00079251c0358,0x004000b0d35c4358,0x01c00011249c0348,0x00000051301c4320\n"
".quad 0x00000000a69c8540,0x00000000875c8594,0x004000b004dc4394,0x00000000671c8548\n"
".quad 0x0000000046dc8594,0x00000000c81c8594,0x0000000123dc8594,0x00000001039c8594\n"
".quad 0x00000000279c8594,0x00000fc0001de794,0x00cfc001d49c0040,0x00cfc001c4dc0050\n"
".quad 0x104606fd29dc8650,0x104707fd261c8680,0x104808fd289c8680,0x104909fd281c8680\n"
".quad 0x104a0afd28dc8680,0x104b0bfd25dc8680,0x104c0cfd279c8680,0x104d0dfd27dc8680\n"
".quad 0x104e0efd249c8680,0x00000062701c0080,0x00400100069de450,0x2c4000e1965c0328\n"
".quad 0x00000088051c0020,0x00c00079959c0350,0x00000081801d0058,0x00000081451c0050\n"
".quad 0x0000008e24dd0050,0x0000008d451c0050,0x0000005c001c0050,0x0000005d34dc0050\n"
".quad 0x0000005d451c0050,0x00000078001d0050,0x0000007934dc0050,0x00000079451c0050\n"
".quad 0x00400101ea9c0050,0x0000007c001d0058,0x0000007d34dd0050,0x00000048085c0050\n"
".quad 0x00000049391d0050,0x0000007d401c0050,0x00400101271c0050,0x0000009214dd0058\n"
".quad 0x00000048099c0050,0x00000092401c0050,0x00d02401351c0058,0x4cd01001355c0058\n"
".quad 0x00000086195c0030,0x00000071371c0430,0x2a00004d401c0010,0x71ee3470051de230\n"
".quad 0xfe71c71c055de218,0x00cff00254de0018,0x00cfe001a01e0030,0x000000921a1f0050\n"
".quad 0x0000004d369c0450,0x00000001349c0410,0x00400101f7dc0010,0x00000051a69c0158\n"
".quad 0x38000069271c0150,0x00d02402869c0020,0x4cd0100286dc0058,0x00000071a71c0430\n"
".quad 0x360000a1a69c0010,0x0000007d3a1c0430,0x0000008647dd0010,0x34cff002569e0050\n"
".quad 0x00000069369c0430,0x00000051a69c0110,0x50000069269c0150,0x00d02401fa1c0020\n"
".quad 0x4cd01001fa5c0058,0x00000069a6dc0430,0x5200007e8a5c0010,0x52cff00257de0030\n"
".quad 0x0000007d3a1c0430,0x00000052879c0110,0x000000a93a1c0450,0x50000079279c0110\n"
".quad 0x000000921a1c0020,0x00000079a69c0450,0x00d02402875c0010,0x4cd010028a5c0058\n"
".quad 0x520000a1da5c0030,0x52cff002575e0030,0x000000753a1c0430,0x4ccff002575e0010\n"
".quad 0x00000052851c0130,0x004000a00a1de450,0x00c000819a5c2328,0xfb8e38e5d75c0258\n"
".quad 0x51c000119a1c0330,0x0000005a959c4320,0x00000074075c0040,0x00d02402165c0058\n"
".quad 0x4cd010021a5c0058,0x3a400102775c0030,0x5200008599dc0030,0x004000b16a5c4330\n"
".quad 0x00400101759c0048,0x4ecff002579e0058,0x00000002875c8530,0x4cd0100249dc0094\n"
".quad 0xf78e38e5e79c0230,0x00000059359c0430,0x0000007807dc0010,0x00d02402479c0058\n"
".quad 0x2c000051249c0158,0x3e400101861c0020,0x4cd0100217de0030,0x4cd01002499e0030\n"
".quad 0x4e000091e75c0030,0x3e00008597dc0030,0x4c000091e79c0030,0x3acff002565e0030\n"
".quad 0x3ecff002575e0030,0x3ccff002579e0030,0xf78e38e5965c0230,0xf78e38e5d75c0230\n"
".quad 0xf78e38e5e79c0230,0x00000064065c0030,0x00000074075c0058,0x00000078079c0058\n"
".quad 0x32400102201c0058,0x3a400102051c0030,0x3c400102355c0030,0x00000000461c8530\n"
".quad 0x00000049a49c0494,0x00000000601c8510,0x00000000851c8594,0x00000000a55c8594\n"
".quad 0x00000000c49c8594,0x00000000e69c8594,0x0000000106dc8594,0x00000000271c8594\n"
".quad 0x00000000001de794,0x0000000000000080,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0xcfd0000000000000,0xe38e39439fd00043,0x0802043de38e39be\n"
".quad 0x000004000000d400,0x0000c00008020400,0x0802040000000b00,0x000003000000d300\n"
".quad 0x0000bf0008020400,0x0802040000000a00,0x000002000000d200,0x0000be0008020400\n"
".quad 0x0802040000000900,0x000008000000bd00,0x0000d00008020400,0x0802040000000100\n"
".quad 0x000007000000bc00,0x0000bb0008020400,0x0802040000000600,0x000000000000ce00\n"
".quad 0x0000c30008020400,0x0802040000000e00,0x00000d000000c200,0x0000d50008020400\n"
".quad 0x0802040000000500,0x00000c000000c100,0x00006100080a0400,0x2419030024002000\n"
".quad 0x000000000c170400,0x11f0000020000400,0x000000000c170400,0x21f0000018000300\n"
".quad 0x000000000c170400,0x11f0000010000200,0x000000000c170400,0x21f0000008000100\n"
".quad 0x000000000c170400,0x21f0000000000000,0x02001800080d0400,0x005de40000000200\n"
".quad 0x001c042800440400,0x009c042c00000094,0x0000072c00000084,0x045ca360000003e0\n"
".quad 0x001c042004400020,0x009c042c00000098,0x20de042c00000088,0x049ca31800000045\n"
".quad 0x31dc002004400030,0x209c03208e400004,0x0001e720224000e1,0x101e0340000002c0\n"
".quad 0x201e044800c01001,0x01dc001800000001,0x0001e7208e400014,0x201e034000000220\n"
".quad 0x201e044800c00c01,0x01dc001800000001,0x0001e7208e400014,0x201e044000000180\n"
".quad 0x01dc001800000049,0x0001e7208e400004,0x011c004000000100,0x301c005000f0eff0\n"
".quad 0x40dc005000f0fff0,0x001c005800000010,0x01dc003006000000,0x0001e7208ed0a000\n"
".quad 0x059df44000000020,0x059df228000000fc,0x059df21800000028,0x059df21800000030\n"
".quad 0x059df2180000002c,0x059df21800000008,0xffdc85180000000c,0x1fdc03c900001003\n"
".quad 0xffdc04207e000008,0x21dc2350ee0000ff,0x101c031a0ec00501,0x01dc034800fff97d\n"
".quad 0x21dc231880c002f8,0x11dc231880c006fd,0x0001e71a20c00ffd,0x20dc038000000000\n"
".quad 0x22dc234800c017fd,0x231c035800c00080,0x035de45800c00078,0x111c032800400080\n"
".quad 0x339c034800fffffd,0x229c0320224000e0,0xb2dc434800c03005,0x209c034000000030\n"
".quad 0x241c03201bc00010,0x43dc234800fffffd,0x119c031a0efffffc,0x015de44800c00005\n"
".quad 0xe3dc232800400080,0xe4dc035800c00080,0xa31c035800c00078,0xb0dc4320224000e0\n"
".quad 0x035c034800400090,0x0505e44800c03c01,0x0525e42800000010,0x21dc0328000000fc\n"
".quad 0x65dc234800c00005,0xe39c03188ec01000,0xf3dc43200bc00010,0x001de4400000004c\n"
".quad 0xc55c232800400080,0xc5dc035800c00080,0x24dc855800c00078,0xd51c038400000000\n"
".quad 0x729c0320284000e0,0x01a9e24800c05400,0xf3dc431800000ffc,0xc31c034800400090\n"
".quad 0x535c432001c00010,0x025de4400000005d,0x409c232800400080,0x40dc035800c00081\n"
".quad 0xa29c035800c00079,0x261c03200c4000e0,0x02c5e44800c00c01,0x02e5e42800000010\n"
".quad 0xd35c4328000000fc,0x451c034800400090,0x209c432013c00011,0xa0dc23400000000c\n"
".quad 0xa25c035800c00080,0x85dc035800c00078,0x255c4320164000e1,0x32dc434800400090\n"
".quad 0x021de44000000024,0x709c232800400080,0x70dc035800c00081,0xa29c035800c00079\n"
".quad 0x265c032011c00010,0x225c434800c02401,0x009c03400000000c,0x0409e44800c04801\n"
".quad 0x0429e22800000018,0xb2dc431800000ffc,0x721c034800400090,0x941c032011c00011\n"
".quad 0x00c9e420204000e1,0x925c432800000018,0x71dc234800400090,0x019c03188ec00c00\n"
".quad 0x71dc03200bc00011,0x015c234800c06000,0x041c035800c00081,0x00e9e25800c00079\n"
".quad 0x71dc041800000ffc,0x0125e42000c06bfc,0x515c4328000000fc,0x20dc034000000040\n"
".quad 0x709c0320064000e0,0x51dc4320084000e0,0x311c034800400090,0x301c232001c00010\n"
".quad 0x30dc035800c00080,0x215c235800c00078,0x241c035800c00080,0x001c435800c00078\n"
".quad 0x05dde2400000000c,0x50dc431800000010,0x015c434000000040,0xc01c854800400090\n"
".quad 0x209c038400000000,0xa29c85202f800080,0xe39c858400000000,0x30dc438400000000\n"
".quad 0x431c854800400090,0x22dc038400000000,0x235c854800c06001,0x61dc238400000000\n"
".quad 0xb11c03190ec00005,0x469c8520224000e0,0x841c858400000001,0x40dc238400000000\n"
".quad 0x415c035800c00080,0x409c035800c00078,0x63dc85202f8000a0,0x30dc438400000000\n"
".quad 0x0000074000000014,0x30dc436000002680,0x0001e748004000b0,0x61dc234000000040\n"
".quad 0x0001e71a8ec00029,0x61dc234000000ac0,0x0081e7190ec00029,0x01200440000000a0\n"
".quad 0x4122032c00000084,0x4fe0856000c00008,0x4fe085c900000000,0x00a1e7c900000800\n"
".quad 0x01400040000002e0,0x0240005000000041,0xe200005000000000,0xa180005000000038\n"
".quad 0xf140005000000069,0x824100300af00000,0xd1c0005000000024,0x5140005000000034\n"
".quad 0x92c0005000000018,0xc200005000000018,0x5180005000000030,0xb1c100500000001c\n"
".quad 0xa24000500000001c,0x0140045000000028,0x6181002c00000084,0x71c0005000000020\n"
".quad 0x0101e25000000020,0x5142031800000004,0x6181006000c00008,0x71c1005000000024\n"
".quad 0xf100855000000024,0x518085c900001003,0x51c085c900000000,0x21dc03c900000800\n"
".quad 0x225c034800c01801,0x811c034800c03001,0x919c0320224000e1,0x721c0320224000e1\n"
".quad 0x959c0320224000e0,0x061de420224000e0,0x41dc2328004000a0,0x425c035800c00080\n"
".quad 0x651c235800c00078,0x655c035800c00080,0x215c035800c00078,0x72dc434800c03c01\n"
".quad 0x411c034000000024,0x41dc432031c00010,0x551c034000000055,0xb15c4320224000e0\n"
".quad 0x825c2348004000b0,0x84dc035800c00080,0x619c035800c00078,0x655c232031c00010\n"
".quad 0x925c435800c00081,0x71dc43400000004c,0x64dc0348004000b0,0x821c035800c00079\n"
".quad 0x22dc032031c00010,0x54dc434800c04801,0x265c03400000004d,0x925c434800c05401\n"
".quad 0x455c2348004000b0,0x45dc035800c00081,0x649c035800c00079,0xb2dc032031c00011\n"
".quad 0x555c4320224000e0,0x34dc43400000005d,0xb59c2348004000b1,0xb5dc035800c00080\n"
".quad 0x451c035800c00078,0x965c032031c00011,0x65dc4320224000e1,0x555c43400000005d\n"
".quad 0xb59c0348004000b1,0x92dc232031c00010,0x945c035800c00081,0x75dc435800c00079\n"
".quad 0x961c0348004000b1,0xb45c432031c00011,0x43dc854000000044,0x801c859400000000\n"
".quad 0x641c859400000000,0x165c439400000000,0x239c8548004000b1,0x429c859400000001\n"
".quad 0x635c859400000001,0x869c859400000001,0x231c959400000001,0x009c049400000000\n"
".quad 0x61dc232c00000084,0x000007190ec00009,0x209e0360000005c0,0x2fdc856000c00008\n"
".quad 0x2fdc85c900000000,0x0001e7c900000800,0x61dc234000000240,0x0021f4190ec0000d\n"
".quad 0x21dc234000000000,0x000007190e0000fd,0x0001e760000000e0,0x21dc234000000080\n"
".quad 0x0021f4190ec00bfd,0x029de44000000000,0x001df42800000030,0x031de42800000038\n"
".quad 0x039df42800000028,0xe09d002800000000,0x011de25000000000,0x20de0018f68f5c28\n"
".quad 0x209c003014cfc000,0x441c003018cfc000,0x469c00301e400024,0x435c103006400034\n"
".quad 0x21dc233004400034,0x000007190e0000fd,0x0001e760000000e0,0x21dc234000000080\n"
".quad 0x0021f4190ec00bfd,0x035de44000000000,0x001df42800000068,0x069de42800000038\n"
".quad 0x039df42800000034,0x309c002800000000,0x00dc005000000039,0xa11c005000000041\n"
".quad 0x209c005000000069,0x209c005000000000,0xd0dc00500000000c,0x209c005000000034\n"
".quad 0xe11d005000000010,0x209c005000000000,0x40dc00500000000c,0x411e003034cfc000\n"
".quad 0x209c00301acfc000,0x229e005000efe000,0x231e003006400034,0x23dc103008400034\n"
".quad 0x61dc233020400044,0x000007190ec0002d,0x0001e76000000120,0x61dc2340000000a0\n"
".quad 0x0021f4190ec00031,0x031de44000000000,0x069de42800000028,0x039df42800000034\n"
".quad 0x029de42800000000,0x035de42800000030,0x001df42800000068,0x309c002800000038\n"
".quad 0xe0dd005000000041,0x019de25000000000,0x211c001871ee3470,0x009d005000000038\n"
".quad 0x30dc00500000003d,0x411c005000000068,0x209c00500000003c,0x30dc005000000068\n"
".quad 0x411c005000000030,0x209d005000000000,0x30dd005000000030,0x411c005000000028\n"
".quad 0x209d005000000068,0x355d005000000028,0x411c005000000034,0x251c005000000030\n"
".quad 0x01dde25000000034,0x409c0018fe71c71c,0x40dd005000000028,0x42df005000000055\n"
".quad 0x25dc005000000055,0x509c005000000034,0x311c005800000055,0x315c005800d02400\n"
".quad 0x459c00302ed01000,0x071de43004000051,0x409c0028004000a0,0x311c04300a00000c\n"
".quad 0x535d001000000035,0x609e005000000051,0x309c043004cff001,0x221e011000000009\n"
".quad 0x309c042008000018,0x221e0110004000c1,0xb11c002008000020,0xb15c005800d02400\n"
".quad 0xa6dc04302ed01000,0x411c001000000021,0x329c04300a00002c,0x611e001000000029\n"
".quad 0x311c043008cff001,0x411e011000000011,0x211e012014000018,0xd29c002014000010\n"
".quad 0xd2dc005800d02400,0xa2dc00302ed01000,0x635e003016000034,0x329c043016cff001\n"
".quad 0x331c041000000031,0xc31e011000000035,0x229e012014000018,0x431c002014000030\n"
".quad 0xc21c005000000055,0xc25c005800d02400,0x825c00302ed01000,0x631e003012000030\n"
".quad 0x321c043012cff001,0xa69c041000000069,0x331c041000000029,0x229c031000000031\n"
".quad 0xc19e014800c03001,0x235c032010000018,0x431e0020224000e1,0x209e01302ed01001\n"
".quad 0x425c002010000018,0x419c005800d02401,0xd1dc23302ed01001,0xd21c035800c00080\n"
".quad 0x919c005800c00078,0x931c00300c000050,0xa51c043018000050,0x715c431000000011\n"
".quad 0x61de004000000020,0xd11c03302ecff001,0x821c032039c00010,0x71dc0020224000e1\n"
".quad 0x515c433026400054,0x835c2348004000b0,0x72de005800c00080,0x84dc0330264000c0\n"
".quad 0x619e005800c00078,0x42dc85300ccff001,0x225c039400000000,0x619e004800c01801\n"
".quad 0x91dc033020400064,0x811c0320224000e1,0xd15c432039c00010,0x921c03400000004c\n"
".quad 0x619e0020224000e0,0x515c4330204000c0,0x525c0048004000b0,0x535c005800d02401\n"
".quad 0x419c85302ed01001,0x841c239400000000,0x935c005800c00080,0x84dc03301a000054\n"
".quad 0xa19c035800c00078,0x611e0020224000e0,0x015c43301acff001,0x22dc03400000004d\n"
".quad 0x435e004800c03c01,0x811c03301c400064,0x729c232039c00010,0xd35e005800c00080\n"
".quad 0x515c43301c4000c0,0x739c0348004000b0,0xb21c035800c00078,0x435c8520224000e0\n"
".quad 0xa39c439400000000,0x629c234000000038,0x62dc035800c00080,0x215c035800c00078\n"
".quad 0x711c034800c04801,0xa41c432039c00010,0x235c03400000002c,0x249c034800c05401\n"
".quad 0x52dc034800c06001,0xe15c4320224000e0,0x619c0348004000b0,0x84dc232039c00010\n"
".quad 0x861c035800c00080,0xd35c035800c00078,0x239c0320224000e0,0x545e0020224000e1\n"
".quad 0x01dc43302ed01001,0x329c4348004000b1,0x821c034000000061,0x941c002039c00010\n"
".quad 0xb45c233022000054,0xb49c035800c00080,0xa25c435800c00078,0xb29c0348004000b0\n"
".quad 0x12dc432039c00010,0x649e004000000049,0xd4dc233020cff001,0xd41c035800c00080\n"
".quad 0x645e005800c00078,0xb2dc433018cff001,0xd31c0348004000b0,0x335c432039c00010\n"
".quad 0xe4dc234000000041,0xe55c035800c00080,0xd35c435800c00078,0xe41c0348004000b0\n"
".quad 0x139e002039c00010,0x249e00301e400065,0x34dc433000400065,0xe39e004000000055\n"
".quad 0x201e00301e4000c0,0xa09c0430004000c1,0x439c851000000009,0x601c859400000000\n"
".quad 0x345c439400000000,0x809c8548004000b1,0xa69c859400000000,0xc51c859400000000\n"
".quad 0x06dc959400000000,0xffdc049400000001,0x001de750ee0000ff,0x0000008000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x8ccccd3dcccccd00,0x2aaaab3f2aaaab3f\n"
".quad 0xe38e39bf2aaaab3e,0x080a043de38e39be,0x3400200000007400,0x0c17040034190300\n"
".quad 0x3000060000000000,0x0c17040011f00000,0x2800050000000000,0x0c17040021f00000\n"
".quad 0x2000040000000000,0x0c17040021f00000,0x1800030000000000,0x0c17040021f00000\n"
".quad 0x1000020000000000,0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000\n"
".quad 0x0000000000000000,0x080d040021f00000,0x000007000a007800,0x00440400005de400\n"
".quad 0x00000094001c0428,0x00000084009c042c,0x0000009800dc042c,0x00000088011c042c\n"
".quad 0x04400020049ca32c,0x00000010061de220,0x08400030351ca318,0x00c00005209c0320\n"
".quad 0x00fffffd201c0348,0x00c02ffd411c0348,0x00c03805421c0348,0x00c04005431c0348\n"
".quad 0x00c0180144dc0348,0x244000e1419c0348,0x044000e0415c0320,0x00c027fd40dc0320\n"
".quad 0x044000e0811c0348,0x00c00801425c0320,0x004000e0c21c0348,0x00c00ffd41dc0320\n"
".quad 0x00c0200542dc0348,0x044000e1329c0348,0x00c00080631c2320,0x00c00078635c0358\n"
".quad 0x004000e0309c0358,0x004000e090dc0320,0x31800080639c0320,0x244000e0755c0320\n"
".quad 0x244000e0b01c0320,0x00000034c19c4320,0x00c00080a1dc2340,0x00c00078a2dc0358\n"
".quad 0x0040009063dc4358,0x31800080a31c0348,0x0000002c719c4320,0x00c0008051dc2340\n"
".quad 0x00c0007852dc0358,0x00400090635c4358,0x31800080529c0348,0x0000002c715c4320\n"
".quad 0x00c0008041dc2340,0x00c00078441c0358,0x0040009052dc4358,0x31800080419c0348\n"
".quad 0x00000040711c4320,0x00c00080315c2340,0x00c00078341c0358,0x0040009041dc4358\n"
".quad 0x31800080311c0348,0x0000004050dc4320,0x00c00080241c2340,0x00c00078245c0358\n"
".quad 0x00400090315c4358,0x31800080209c0348,0x0000004500dc4320,0x00c00080845c2340\n"
".quad 0x00c00078859c0358,0x0040009030dc4358,0x31800080841c0348,0x00000059145c4320\n"
".quad 0x00c00081521c2340,0x00c00079559c0358,0x00400091145c4358,0x31800081569c0348\n"
".quad 0x00000058821c4320,0x00000000475c8540,0x00000000265c8584,0x0040009086dc4384\n"
".quad 0x00000000e21c8548,0x00c00080055c2384,0x00c00078059c0358,0x31800080079c0358\n"
".quad 0x00000000639c8520,0x00000059501c4384,0xfa000000015de240,0x0000005120de0418\n"
".quad 0x00c04001411c0318,0x00c03801455c0348,0x00000049209e0448,0x0a80001430dc0018\n"
".quad 0x244000e0419c0330,0x244000e1511c0320,0x0a800004209c0020,0x00f0eff030dc0030\n"
".quad 0x00c00080415c2350,0x00c0007841dc0358,0x00000000a29c8558,0x0040009007dc4384\n"
".quad 0x00f0fff0209c0048,0x0000000c30dc0050,0x318000a0411c0358,0x0000001c515c4320\n"
".quad 0x00c0008062dc2340,0x00c0007861dc0358,0x0600000820dc0058,0x004000b0515c4330\n"
".quad 0x318000a0609c0348,0x0000001cb19c4320,0x8ed0a00031dc0040,0x00000000c01c8520\n"
".quad 0x0000000103dc8584,0x00000001a5dc8584,0x00000001e59c8584,0x004000b060dc4384\n"
".quad 0x000012e00081e748,0x0000007481200040,0x0000005971610050,0x0000003d33200450\n"
".quad 0x0000005c41a00010,0x00000001d1210050,0x0000006451600050,0x0000000061a00050\n"
".quad 0x0000006441200050,0x0000002851600050,0x0000005861a00050,0x0000002841210050\n"
".quad 0x0000003851610050,0x0000006461a00050,0x0000003841210050,0x0000003c56e10050\n"
".quad 0x0000002861a00050,0x0000003c46a00050,0x0000003861200050,0x0000006da1610050\n"
".quad 0x0000006da2e30050,0x0000003c47200050,0x0000006db1200050,0x00d0240051a00058\n"
".quad 0x38d0100051e00058,0x08000069a6200030,0x0e00001461200030,0x71ee347001a1e230\n"
".quad 0xfe71c71c01e1e218,0x08cff00181220018,0x0000001131200430,0x1800001844220110\n"
".quad 0x004000c131200420,0x1800004044220110,0x00d02400b3200020,0x38d01000b3600058\n"
".quad 0x00000041a4200430,0x1a00002cc2e00010,0x0000003933200430,0x16cff00182e20010\n"
".quad 0x0000002d33a00430,0x00000069b2e10010,0x18000018e3a20150,0x1800003843a20120\n"
".quad 0x00d02400b3200020,0x38d01000b3600058,0x00000039a3a00430,0x1a00002cc2e00010\n"
".quad 0x16cff00183220030,0x0000002932a00430,0x0000003133200410,0x14000018c3220110\n"
".quad 0x1400003043220120,0x0000006da2a00020,0x00000031a3e00450,0x00d02400a2e00010\n"
".quad 0x38d01000a7a00058,0x3c000028b7a00030,0x0000006532a00430,0x3ccff00187a20010\n"
".quad 0x0000007937a00430,0x14000019e1a20110,0x38d01001b7a20020,0x1400001842a20130\n"
".quad 0x00d02401a1200020,0x38d01001a1600058,0x38d01001a1e20030,0x00000029a2a00430\n"
".quad 0x0a00006841a00010,0x0e00006846a00030,0x00d02401b1600030,0x38d01001b1e00058\n"
".quad 0x244000e141200330,0x34cff00186a20020,0x0e00006c56600030,0x3c00006c56e00030\n"
".quad 0x00c0008041602330,0x00c0007841e00358,0x32cff00186620058,0x36cff00186e20030\n"
".quad 0x0000001c51604330,0x38cff00181e20040,0x004000a00721e430,0x2e40003594620028\n"
".quad 0x1040002471e00030,0x39c0001041200330,0x00400035a3220020,0x104000c072220030\n"
".quad 0x004000b051604330,0x244000e091e00348,0x00c0100142600320,0x0000000042208548\n"
".quad 0x00c0008077a02394,0x00c0007877e00358,0x244000e092600358,0x0ccff00181220020\n"
".quad 0x0000007de1604330,0x00c0008092202340,0x00c0007897a00358,0x3a40003441220058\n"
".quad 0x244000e131a00330,0x0000007884e04320,0x3a4000c042220040,0x00c0008067602330\n"
".quad 0x00c0007867a00358,0x39c0001071200358,0x2c400035b3620020,0x00000079d1e04330\n"
".quad 0x004000b051604340,0x00c0200147600348,0x39c0001061a00348,0x0000000042208520\n"
".quad 0x244000e1d7600394,0x00c0280147a00320,0x004000b071e04348,0x00c00081d7e02348\n"
".quad 0x00c00079d1200358,0x39c0001092200358,0x244000e1e7a00320,0x00000011f1604320\n"
".quad 0x004000b132604340,0x39c00011d1200348,0x00c00081e4e02320,0x00c00079e7600358\n"
".quad 0x00c0300145200358,0x004000b051604348,0x0000007534e04348,0x244000e147600340\n"
".quad 0x244000e155200320,0x39c00011e4a00320,0x2e4000c114620020,0x00c0008145602330\n"
".quad 0x00c0007947a00358,0x004000b134e04358,0x39c0001145200348,0x0000007955604320\n"
".quad 0x00c00081d7a02340,0x004000c0c0220058,0x004000b155604330,0x39c00011d7200348\n"
".quad 0x00c00079d7600320,0x2c4000c0d3220058,0x0000000084608530,0x00000075e7604394\n"
".quad 0x0000000060208540,0x0000000043208594,0x004000b1d7604394,0x0000000122a08548\n"
".quad 0x00000001c3e08594,0x0000000143a08594,0x0000000024208594,0x0000062000a1e794\n"
".quad 0x244000e091800340,0x00c0100141c00320,0x00c0200142400348,0x00c0280143400348\n"
".quad 0x244000e073000348,0x244000e094000320,0x004000a002c1e420,0x00c0008061c02328\n"
".quad 0x00c0007862400358,0x244000e132000358,0x244000e0d4c00320,0x17c0001061800320\n"
".quad 0x0000002471c04320,0x00c0300144400340,0x00c0008082402348,0x00c0007883400358\n"
".quad 0x004000b071c04358,0x244000e115000348,0x17c0001082000320,0x0000003492404320\n"
".quad 0x00c00080c3402340,0x00c00078c4400358,0x004000b092404358,0x17c00010c3000348\n"
".quad 0x00000044d3404320,0x00c0008104402340,0x00c0007904800358,0x004000b0d3404358\n"
".quad 0x17c0001104000348,0x0000004914404320,0x00c0008135402340,0x00c0007936000358\n"
".quad 0x004000b114404358,0x17c0001134800348,0x0000006154c04320,0x00c0008145402340\n"
".quad 0x00c0007946000358,0x004000b134c04358,0x17c0001145000348,0x0000006152c04320\n"
".quad 0x0000000060008540,0x00000000c5808594,0x004000b0b5404394,0x0000000087408548\n"
".quad 0x0000000105c08594,0x0000000123808594,0x0000000143c08594,0x0000000046408594\n"
".quad 0x0000000022808594,0x00000000001de794,0x0000000000000080,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0xcfd0000000000000,0xe38e39439fd00043\n"
".quad 0x080a043de38e39be,0x2400200000007d00,0x0c17040024190300,0x2000040000000000\n"
".quad 0x0c17040011f00000,0x1800030000000000,0x0c17040021f00000,0x1000020000000000\n"
".quad 0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x080d040021f00000,0x0000010001000c00,0x00440400005de400,0x00000098001c0428\n"
".quad 0x00000088009c042c,0x0000009400dc042c,0x00000084011c042c,0x04400030001ca32c\n"
".quad 0x08400020309ca320,0x8ec00c0001dc2320,0x80c0100021dc2318,0x044000a0009c0318\n"
".quad 0x000000000021e720,0x00c0008020dc2380,0x00c00078211c0358,0x00400080021de458\n"
".quad 0x01000000019de228,0xfe00000001dde219,0x0000001030dc4318,0x11c00010209c0340\n"
".quad 0x00003000015de220,0x00000000025de218,0x0ee00000621c001a,0x0040009030dc4330\n"
".quad 0x014000a054dc0348,0x10e00000921c0050,0x7e0000fff01c0030,0xff4000a0525c4330\n"
".quad 0x0ed01003f11c0020,0x0ecff000019e0030,0x924000b0549c0330,0x01000009339c0320\n"
".quad 0x0ef01003f1dc0048,0xfb8e38e4619c0230,0x0000000d23dc4330,0x01000039341c0348\n"
".quad 0x080000fff11c0048,0x0e0000fff1dc0030,0x00000000219c8530,0x0000003d245c4394\n"
".quad 0x10cff000021e0048,0x08cff000011e0030,0x01000041329c0330,0x0ecff000015e0048\n"
".quad 0x00000021309c0430,0xf78e38e441dc0210,0x0000004522dc4330,0x01000029321c0348\n"
".quad 0x00000000e1dc8548,0x0000000101dc8594,0x0000002d225c4394,0x01000021319c0348\n"
".quad 0x71ee3470031de248,0xfe71c71c035de218,0x0000002521dc4318,0x01000019339c0348\n"
".quad 0x00000030209c0148,0xf78e38e4501c0250,0x00000011311c0430,0x0000001d23dc4310\n"
".quad 0x00000009a41c0448,0x01000039309c0310,0x00000030411c0148,0x00000000a01c8550\n"
".quad 0x0000003d20dc4394,0x01000009331c0348,0x00000011a15c0448,0x00000000801c8510\n"
".quad 0x0000000d235c4394,0x00000000615c8548,0x00000000e15c8594,0x00000000241c8594\n"
".quad 0x00000000c15c8594,0x00000000001de794,0x0000000000000080,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x00008a00080a0400,0x1019030010002000,0x000000000c170400,0x21f0000008000100\n"
".quad 0x000000000c170400,0x21f0000000000000,0x01000c00080d0400,0x005de40000000100\n"
".quad 0x001c042800440400,0x009c042c00000094,0x00dc042c00000084,0x011c042c00000098\n"
".quad 0x049ca32c00000088,0x061de22004400020,0x351ca31800000010,0x209c032008400030\n"
".quad 0x201c034800c00005,0x411c034800fffffd,0x421c034800c02ffd,0x431c034800c03805\n"
".quad 0x44dc034800c04005,0x419c034800c01801,0x415c0320244000e1,0x40dc0320044000e0\n"
".quad 0x811c034800c027fd,0x425c0320044000e0,0xc21c034800c00801,0x41dc0320004000e0\n"
".quad 0x42dc034800c00ffd,0x329c034800c02005,0x631c2320044000e1,0x635c035800c00080\n"
".quad 0x309c035800c00078,0x90dc0320004000e0,0x639c0320004000e0,0x755c032031800080\n"
".quad 0xb01c0320244000e0,0xc19c4320244000e0,0xa1dc234000000034,0xa2dc035800c00080\n"
".quad 0x63dc435800c00078,0xa31c034800400090,0x719c432031800080,0x51dc23400000002c\n"
".quad 0x52dc035800c00080,0x635c435800c00078,0x529c034800400090,0x715c432031800080\n"
".quad 0x41dc23400000002c,0x441c035800c00080,0x52dc435800c00078,0x419c034800400090\n"
".quad 0x711c432031800080,0x315c234000000040,0x341c035800c00080,0x41dc435800c00078\n"
".quad 0x311c034800400090,0x50dc432031800080,0x241c234000000040,0x245c035800c00080\n"
".quad 0x315c435800c00078,0x209c034800400090,0x00dc432031800080,0x845c234000000045\n"
".quad 0x859c035800c00080,0x30dc435800c00078,0x841c034800400090,0x145c432031800080\n"
".quad 0x521c234000000059,0x559c035800c00081,0x145c435800c00079,0x569c034800400091\n"
".quad 0x821c432031800081,0x475c854000000058,0x265c858400000000,0x86dc438400000000\n"
".quad 0xe21c854800400090,0x055c238400000000,0x059c035800c00080,0x079c035800c00078\n"
".quad 0x639c852031800080,0x501c438400000000,0x015de24000000059,0x20de0418fa000000\n"
".quad 0x411c031800000051,0x455c034800c04001,0x209e044800c03801,0x30dc001800000049\n"
".quad 0x419c03300a800014,0x511c0320244000e0,0x209c0020244000e1,0x30dc00300a800004\n"
".quad 0x415c235000f0eff0,0x41dc035800c00080,0xa29c855800c00078,0x07dc438400000000\n"
".quad 0x209c004800400090,0x30dc005000f0fff0,0x411c03580000000c,0x515c4320318000a0\n"
".quad 0x62dc23400000001c,0x61dc035800c00080,0x20dc005800c00078,0x515c433006000008\n"
".quad 0x609c0348004000b0,0xb19c4320318000a0,0x31dc00400000001c,0xc01c85208ed0a000\n"
".quad 0x03dc858400000000,0xa5dc858400000001,0xe59c858400000001,0x60dc438400000001\n"
".quad 0x0081e748004000b0,0x81200040000012e0,0x7161005000000074,0x3320045000000059\n"
".quad 0x41a000100000003d,0xd12100500000005c,0x5160005000000001,0x61a0005000000064\n"
".quad 0x4120005000000000,0x5160005000000064,0x61a0005000000028,0x4121005000000058\n"
".quad 0x5161005000000028,0x61a0005000000038,0x4121005000000064,0x56e1005000000038\n"
".quad 0x61a000500000003c,0x46a0005000000028,0x612000500000003c,0xa161005000000038\n"
".quad 0xa2e300500000006d,0x472000500000006d,0xb12000500000003c,0x51a000580000006d\n"
".quad 0x51e0005800d02400,0xa620003038d01000,0x6120003008000069,0x01a1e2300e000014\n"
".quad 0x01e1e21871ee3470,0x81220018fe71c71c,0x3120043008cff001,0x4422011000000011\n"
".quad 0x3120042018000018,0x44220110004000c1,0xb320002018000040,0xb360005800d02400\n"
".quad 0xa420043038d01000,0xc2e0001000000041,0x332004301a00002c,0x82e2001000000039\n"
".quad 0x33a0043016cff001,0xb2e100100000002d,0xe3a2015000000069,0x43a2012018000018\n"
".quad 0xb320002018000038,0xb360005800d02400,0xa3a0043038d01000,0xc2e0001000000039\n"
".quad 0x832200301a00002c,0x32a0043016cff001,0x3320041000000029,0xc322011000000031\n"
".quad 0x4322012014000018,0xa2a0002014000030,0xa3e004500000006d,0xa2e0001000000031\n"
".quad 0xa7a0005800d02400,0xb7a0003038d01000,0x32a004303c000028,0x87a2001000000065\n"
".quad 0x37a004303ccff001,0xe1a2011000000079,0xb7a2002014000019,0x42a2013038d01001\n"
".quad 0xa120002014000018,0xa160005800d02401,0xa1e2003038d01001,0xa2a0043038d01001\n"
".quad 0x41a0001000000029,0x46a000300a000068,0xb16000300e000068,0xb1e0005800d02401\n"
".quad 0x4120033038d01001,0x86a20020244000e1,0x5660003034cff001,0x56e000300e00006c\n"
".quad 0x416023303c00006c,0x41e0035800c00080,0x8662005800c00078,0x86e2003032cff001\n"
".quad 0x5160433036cff001,0x81e200400000001c,0x0721e43038cff001,0x94620028004000a0\n"
".quad 0x71e000302e400035,0x4120033010400024,0xa322002039c00010,0x7222003000400035\n"
".quad 0x51604330104000c0,0x91e00348004000b0,0x42600320244000e0,0x4220854800c01001\n"
".quad 0x77a0239400000000,0x77e0035800c00080,0x9260035800c00078,0x81220020244000e0\n"
".quad 0xe16043300ccff001,0x922023400000007d,0x97a0035800c00080,0x4122005800c00078\n"
".quad 0x31a003303a400034,0x84e04320244000e1,0x4222004000000078,0x676023303a4000c0\n"
".quad 0x67a0035800c00080,0x7120035800c00078,0xb362002039c00010,0xd1e043302c400035\n"
".quad 0x5160434000000079,0x47600348004000b0,0x61a0034800c02001,0x4220852039c00010\n"
".quad 0xd760039400000000,0x47a00320244000e1,0x71e0434800c02801,0xd7e02348004000b0\n"
".quad 0xd120035800c00081,0x9220035800c00079,0xe7a0032039c00010,0xf1604320244000e1\n"
".quad 0x3260434000000011,0xd1200348004000b1,0xe4e0232039c00011,0xe760035800c00081\n"
".quad 0x4520035800c00079,0x5160434800c03001,0x34e04348004000b0,0x4760034000000075\n"
".quad 0x55200320244000e1,0xe4a00320244000e1,0x1462002039c00011,0x456023302e4000c1\n"
".quad 0x47a0035800c00081,0x34e0435800c00079,0x45200348004000b1,0x5560432039c00011\n"
".quad 0xd7a0234000000079,0xc022005800c00081,0x55604330004000c0,0xd7200348004000b1\n"
".quad 0xd760032039c00011,0xd322005800c00079,0x846085302c4000c0,0xe760439400000000\n"
".quad 0x6020854000000075,0x4320859400000000,0xd760439400000000,0x22a08548004000b1\n"
".quad 0xc3e0859400000001,0x43a0859400000001,0x2420859400000001,0x00a1e79400000000\n"
".quad 0x9180034000000620,0x41c00320244000e0,0x4240034800c01001,0x4340034800c02001\n"
".quad 0x7300034800c02801,0x94000320244000e0,0x02c1e420244000e0,0x61c02328004000a0\n"
".quad 0x6240035800c00080,0x3200035800c00078,0xd4c00320244000e1,0x61800320244000e0\n"
".quad 0x71c0432017c00010,0x4440034000000024,0x8240234800c03001,0x8340035800c00080\n"
".quad 0x71c0435800c00078,0x15000348004000b0,0x82000320244000e1,0x9240432017c00010\n"
".quad 0xc340234000000034,0xc440035800c00080,0x9240435800c00078,0xc3000348004000b0\n"
".quad 0xd340432017c00010,0x0440234000000044,0x0480035800c00081,0xd340435800c00079\n"
".quad 0x04000348004000b0,0x1440432017c00011,0x3540234000000049,0x3600035800c00081\n"
".quad 0x1440435800c00079,0x34800348004000b1,0x54c0432017c00011,0x4540234000000061\n"
".quad 0x4600035800c00081,0x34c0435800c00079,0x45000348004000b1,0x52c0432017c00011\n"
".quad 0x6000854000000061,0xc580859400000000,0xb540439400000000,0x87408548004000b0\n"
".quad 0x05c0859400000000,0x2380859400000001,0x43c0859400000001,0x4640859400000001\n"
".quad 0x2280859400000000,0x001de79400000000,0x0000008000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x9fd00043cfd00000\n"
".quad 0xe38e39bee38e3943,0x00008700080a043d,0x2419030024002000,0x000000000c170400\n"
".quad 0x11f0000020000400,0x000000000c170400,0x21f0000018000300,0x000000000c170400\n"
".quad 0x11f0000010000200,0x000000000c170400,0x21f0000008000100,0x000000000c170400\n"
".quad 0x21f0000000000000,0x01000c00080d0400,0x005de40000000100,0x00dc042800440400\n"
".quad 0x011c042c00000098,0x001c042c00000088,0x009c042c00000094,0x369ca32c00000084\n"
".quad 0x019de22008400030,0x001ca318fa000000,0xa61c032004400020,0xa49c034800c00801\n"
".quad 0x009de44800c01001,0x81dc0328004000a0,0x221c0320004000e1,0xa4dc0320004000e1\n"
".quad 0x72dc234800c01801,0x731c035800c00080,0x741c035800c00078,0x325c032005c00010\n"
".quad 0xb1dc4320004000e1,0x82dc234000000030,0x831c035800c00080,0xa5dc035800c00078\n"
".quad 0x745c434800c02001,0x839c0348004000b0,0xb1dc432005c00010,0x921c234000000030\n"
".quad 0x92dc035800c00080,0x729c035800c00078,0x20de0420004000e1,0x211e041800000001\n"
".quad 0x73dc431800000069,0xa59c0348004000b0,0x931c034800c02801,0x81dc432005c00010\n"
".quad 0xa21c23400000002c,0xa25c035800c00080,0x36dc005800c00078,0x471c00300c800004\n"
".quad 0x619c03300c800014,0x735c4320004000e1,0xa1dc2348004000b0,0x015c03188ec00009\n"
".quad 0xa29c034800fffff8,0x81dc432005c00010,0xa55c034000000024,0x625c234800c03001\n"
".quad 0x675c035800c00080,0x51dc035800c00078,0x72dc431a20c00bec,0x515c0348004000b0\n"
".quad 0x621c0320004000e1,0x919c432005c00010,0xa51c034000000074,0x51dc234800c03801\n"
".quad 0x575c035800c00080,0x625c435800c00078,0x411c0348004000b0,0x519c0320004000e1\n"
".quad 0x715c432005c00010,0xa65c034000000074,0x479c234800c04001,0x47dc035800c00080\n"
".quad 0x51dc435800c00078,0x90dc0348004000b0,0xc15c0020004000e1,0x411c035000f0eff1\n"
".quad 0xe7dc432005c00010,0xb75c00400000007d,0x381c235000f0fff1,0x385c035800c00080\n"
".quad 0x579c005800c00078,0xf15c435800000014,0x309c0348004000b1,0x00dc432005c00010\n"
".quad 0xd75c004000000086,0xa3dc23303c000075,0x30dc431a20c007f5,0xd1dc0048004000b0\n"
".quad 0x0005e7208ed0a001,0xa21c034000002680,0xa29c034800fffffd,0xa11c034800c00005\n"
".quad 0x025de420004000e1,0x879c032800400080,0x86dc034800c02800,0xa15c034800c03000\n"
".quad 0xa3dc234800c00ffd,0xa3dc03188ec00c00,0xa21c034800c03800,0x429c034800c04000\n"
".quad 0x425c232013c00010,0x42dc035800c00080,0x075c035800c00078,0x511c034800fffffc\n"
".quad 0xa19c0320004000e0,0x035c034800c02005,0x915c434800c00004,0x045de4400000002c\n"
".quad 0xd5dc232800400080,0x425c231a0efffffd,0x491c035800c00080,0x619c035800c00078\n"
".quad 0xd7dc2320004000e0,0x889c04188ec01000,0x52dc432002c04bfc,0xa7dc034800400090\n"
".quad 0x08c9e44800c00801,0x08e9e42800000074,0x421c0328000000fc,0x925c432023c00010\n"
".quad 0x041de44000000090,0x611c232800400080,0x615c035800c00080,0x036de25800c00078\n"
".quad 0xa1dc031800000ffc,0x070de44800c01801,0x072de22800000034,0x925c431800000ffc\n"
".quad 0xf7dc034800400090,0x0849e420464000e1,0x0869e42800000074,0x619c0328000000fc\n"
".quad 0x411c432021c00010,0x00dde44000000014,0x080de42800400080,0xf3dc032800000034\n"
".quad 0x771c03201a4000e0,0xf15c2320384000e0,0xf35c035800c00081,0xe79c035800c00079\n"
".quad 0x41dc4320424000e1,0x0769e44800400090,0xf11c0328000000fc,0x50dc432007c00011\n"
".quad 0x009de44000000034,0xe35c232800400080,0xe7dc035800c00081,0x275c035800c00079\n"
".quad 0x315c43203a4000e2,0xe09c034800400090,0xd0dc432005c00011,0x031de4400000007c\n"
".quad 0xd35c232800400080,0xd79c035800c00081,0x30dc435800c00079,0xd31c034800400090\n"
".quad 0xd35c432019c00011,0x039de44000000078,0xf75c232800400080,0xf79c035800c00080\n"
".quad 0xd35c435800c00078,0x082de24800400090,0xf39c031800000ffc,0xa91c85201dc00010\n"
".quad 0xd3dc438400000000,0xc75c234000000079,0xc79c035800c00081,0xb6dc035800c00079\n"
".quad 0xf3dc4320404000e1,0xc29c034800400090,0xd2dc432023c00011,0xb45c234000000079\n"
".quad 0xb71c035800c00081,0xb2dc435800c00079,0xb41c034800400090,0x145c432021c00011\n"
".quad 0x679c854000000071,0x871c858400000000,0x145c438400000000,0x475c854800400091\n"
".quad 0x281c858400000000,0xc7dc858400000000,0xe19c858400000000,0xa6dc858400000000\n"
".quad 0x01dc858400000000,0x0001e78400000001,0x429c004000001320,0xd21d005000000076\n"
".quad 0xc25d00500000006d,0xa29c005000000079,0x821c005000000070,0x925c005000000080\n"
".quad 0xa29c005000000080,0x821d00500000006c,0x925c00500000001c,0xa29c00500000001c\n"
".quad 0x821d005000000078,0x925d005000000018,0xa2dc005000000018,0x829c005000000080\n"
".quad 0x995d00500000007c,0x321c04500000007c,0xb1dc00100000001d,0x311c04500000001c\n"
".quad 0x581c001000000081,0x785c005800000096,0xa2dd005000000018,0x339c045000000094\n"
".quad 0x199c00100000007d,0xa7dc00500000007e,0xa45f003040000028,0xb81c005000000094\n"
".quad 0xb85c005800d02400,0x541d00304cd01000,0x189c00500000002a,0x18dc005800d02401\n"
".quad 0x02dc00304cd01001,0xa1dc00304200002e,0x081c005000000094,0x085c005800d02401\n"
".quad 0x245c00304cd01001,0x331c043046000046,0x789c001000000019,0x78dc005800d02400\n"
".quad 0x041c00304cd01000,0xa19c003042000042,0xa81c005800d02400,0xa85e00304cd01000\n"
".quad 0x21dc00304cd01000,0x689c00304600001e,0x68dc003040000028,0xf29e003042000028\n"
".quad 0xf19e003016cff001,0x009de23022cff001,0x00dde21871ee3470,0x329c0418fe71c71c\n"
".quad 0xf81e001000000029,0xfa1e003020cff001,0x319c04300ecff001,0xf9de001000000019\n"
".quad 0xa41e01304ccff001,0x329c04201c000008,0x681e011000000081,0x319c042018000008\n"
".quad 0x79dc0010000000a1,0xa29e013048400026,0x2a9c032010000008,0x619e0120004000e1\n"
".quad 0x7a1e002008000008,0x509c0030484000c2,0x50dc005800d02402,0x591e00304cd01002\n"
".quad 0xa9dc03304cd01002,0x269c0020004000e1,0x299c003006000094,0x309c043048000094\n"
".quad 0x791c2310004000c1,0x795c035800c00082,0x239e015800c0007a,0x3a5c03201c000040\n"
".quad 0x445c4320004000e1,0x091de44000000096,0x841c0328004000a0,0x495c0320004000e1\n"
".quad 0x749c0320004000e1,0x051c032049c00012,0x59dc035800c00079,0x14dc4320004000e1\n"
".quad 0x045c2348004000b1,0x041c035800c00081,0x2a1c852049c00011,0x145c439400000001\n"
".quad 0xa51c034000000051,0x661c035800c0007a,0xa4dc2320004000e1,0x145c435800c00082\n"
".quad 0xa49c0348004000b1,0x34dc432049c00012,0x251e014000000051,0x959c232018000080\n"
".quad 0x935c035800c00082,0x75dc035800c0007a,0x34dc4320004000e1,0x931c0348004000b1\n"
".quad 0x635c432049c00012,0x901c034000000035,0x765c2320004000e1,0x781c035800c00081\n"
".quad 0xd35c435800c00079,0x759c0348004000b0,0x95dc432049c00011,0xf85e004000000081\n"
".quad 0x865c233044cff001,0x889c035800c00081,0xf81e005800c00079,0xf8de003046cff001\n"
".quad 0x75dc433034cff001,0x861c0348004000b1,0x169e002049c00011,0x965c43303a400036\n"
".quad 0x785c234000000089,0x789c035800c00082,0xa75e005800c0007a,0x965c43303a4000c1\n"
".quad 0x081e0048004000b1,0x769c033036400036,0x185c432049c00012,0xf7de00400000008a\n"
".quad 0x589c23304ccff001,0x59dc035800c00082,0x099e005800c0007a,0x16dc4330364000c2\n"
".quad 0x581c0348004000b2,0x285c432049c00012,0x095c23400000009e,0x09dc035800c00080\n"
".quad 0x185c435800c00078,0x089c0348004000b2,0x301e002049c00010,0x221e013038400036\n"
".quad 0xf7de002010000028,0x209e01303c400035,0x071e002008000018,0xf01e0030384000c0\n"
".quad 0x075c85303c4000c1,0x591c439400000001,0x271c85400000009e,0xa09c049400000001\n"
".quad 0xa11c041000000009,0xc99c851000000021,0xa15c049400000000,0x601c851000000051\n"
".quad 0x48dc439400000001,0xa19c0448004000b2,0x809c851000000039,0xa11c859400000001\n"
".quad 0x015c859400000001,0x219c859400000002,0x001de79400000002,0x811c034000001700\n"
".quad 0x215c0320004000e1,0x049de420004000e1,0x429c2328004000a0,0x42dc035800c00080\n"
".quad 0x439c035800c00078,0x321c032025c00010,0xa11c4320004000e1,0x529c23400000002c\n"
".quad 0x52dc035800c00080,0x43dc435800c00078,0x531c0348004000b0,0xa11c432025c00010\n"
".quad 0x815c23400000002c,0x82dc035800c00080,0x725c035800c00078,0x435c4320004000e1\n"
".quad 0x829c0348004000b0,0x511c432025c00010,0x915c23400000002c,0x945c035800c00080\n"
".quad 0x60dc035800c00078,0x42dc4320004000e1,0x921c0348004000b0,0x511c432025c00010\n"
".quad 0x315c234000000044,0x345c035800c00080,0x509c035800c00078,0x425c4320004000e1\n"
".quad 0x311c0348004000b0,0x50dc432025c00010,0x245c234000000044,0x24dc035800c00080\n"
".quad 0x441c035800c00078,0x315c4320004000e1,0x209c0348004000b0,0x10dc432025c00010\n"
".quad 0x045c23400000004d,0x04dc035800c00081,0x901c035800c00079,0x30dc4320004000e1\n"
".quad 0x041c0348004000b0,0x145c432025c00011,0x04dc23400000004d,0x051c035800c00080\n"
".quad 0x145c435800c00078,0x049c0348004000b1,0xe6dc852025c00010,0x301c439400000000\n"
".quad 0xc79c854000000051,0xa75c859400000000,0x871c859400000000,0x04dc439400000000\n"
".quad 0x419c8548004000b0,0x27dc859400000000,0x081c859400000000,0x21dc859400000001\n"
".quad 0x001de79400000001,0xb49c004000000fc0,0xc4dc005000cfc001,0x29dc865000cfc001\n"
".quad 0x279c8680104000fd,0x285c8680104101fd,0x27dc8680104202fd,0x289c8680104303fd\n"
".quad 0x299c8680104404fd,0x271c8680104505fd,0x275c8680104606fd,0x249c8680104707fd\n"
".quad 0x74dc0080104808fd,0xa01c03500000007a,0x355c0020004000e1,0xe4dd005000000085\n"
".quad 0x555c00500000007d,0x151d00500000007d,0x555c00500000008a,0x34dc005000000089\n"
".quad 0x451c005000000099,0x555c005000000099,0x34dd005000000099,0x451c005000000071\n"
".quad 0x555c005000000071,0xca9c005000000071,0x34dd005800400101,0x451d005000000075\n"
".quad 0x381c005000000075,0x48dd005000000049,0x54dc005000000049,0x261c005000000075\n"
".quad 0x051d005800400101,0x395c00500000008e,0x34dc005000000049,0x455c00580000008e\n"
".quad 0x459c005800d02401,0x091c00304ad01001,0x361c043026000082,0x54dc001000000061\n"
".quad 0x059de4302c000051,0x051de22800400100,0x44de001871ee3470,0x66de003026cff002\n"
".quad 0x055de25000cfe001,0x359c0418fe71c71c,0x349c04100000004d,0x0a1f00100000006d\n"
".quad 0x659c01500000008e,0xd75c005000000051,0x469e005800400101,0x261c01304acff002\n"
".quad 0x859c002030000059,0x85dc005800d02402,0xa69c02304ad01002,0x659c0030fb8e38e5\n"
".quad 0x3a1c04302e0000a1,0x375d001000000075,0x459e005000000082,0xb69c00302ccff002\n"
".quad 0x359c045800000069,0x769c001000000059,0x659c013034400102,0x259c015000000051\n"
".quad 0xda1c002050000059,0xda5c005800d02401,0xa5dc04304ad01001,0x8a5c001000000059\n"
".quad 0x475e003052000076,0x3a1c043052cff002,0x871c011000000075,0x3a1c045000000052\n"
".quad 0x271c0110000000a9,0x0a5c002050000071,0xaa1c04500000008e,0xa59c041000000061\n"
".quad 0x961c001000000071,0x965c005800d02402,0x675c00304ad01002,0x399c005800400102\n"
".quad 0x865c00304ad01002,0x0a5c2330320000a5,0x461e005800c00080,0x361c043032cff002\n"
".quad 0x851c011000000061,0x061de45000000051,0x065c0328004000a0,0x061c035800c00078\n"
".quad 0x965c432031c00010,0x001c004000000066,0x0a5c005800d02402,0x965c43304ad01002\n"
".quad 0x09dc0048004000b1,0x869c853052000080,0x471e009400000001,0x361c04304ecff002\n"
".quad 0xc71c021000000075,0x249c0130f78e38e5,0xb75c002030000051,0x371c005800000071\n"
".quad 0xa49c045800d02402,0xe69c001000000049,0x079e00303a400101,0x395e00304ad01002\n"
".quad 0xc75c00304ad01002,0x079c00304c00008d,0xc81c00303c000080,0x401e00304a00008d\n"
".quad 0x471e00303acff002,0x475e00303ccff002,0x001c023040cff002,0xc71c0230f78e38e4\n"
".quad 0xd75c0230f78e38e5,0xb01c0030f78e38e5,0xb71c005800000001,0xb6dc005800000071\n"
".quad 0x101c005800000075,0xf51c003000400102,0x255c003038400101,0x069c853036400102\n"
".quad 0xe01c859400000001,0xc51c859400000000,0xa55c859400000000,0x849c859400000000\n"
".quad 0x659c859400000000,0x45dc859400000000,0x2a1c859400000000,0x001de79400000000\n"
".quad 0x0000008000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x9fd00043cfd00000,0xe38e39bee38e3943,0x0000c0000802043d\n"
".quad 0x0802040000000500,0x000004000000bf00,0x0000be0008020400,0x0802040000000300\n"
".quad 0x000002000000bd00,0x0000bc0008020400,0x0802040000000100,0x000000000000bb00\n"
".quad 0x0000c30008020400,0x0802040000000800,0x000007000000c200,0x0000c10008020400\n"
".quad 0x080a040000000600,0x2400200000007100,0x0c17040024190300,0x2000040000000000\n"
".quad 0x0c17040011f00000,0x1800030000000000,0x0c17040021f00000,0x1000020000000000\n"
".quad 0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x080d040021f00000,0x0000020003002400,0x00440400005de400,0x00000088011c0428\n"
".quad 0x0000009800dc042c,0x00000084009c042c,0x00000094001c042c,0x08400030345ca32c\n"
".quad 0xfa000000011de220,0x04400020041ca318,0x00000045209e0420,0x00001003ffdc8518\n"
".quad 0x00000041201e04c9,0x0880001420dc0018,0x08800004001c0030,0x00f0eff030dc0030\n"
".quad 0x00f0fff0001c0050,0x0000000c30dc0050,0x0600000000dc0058,0x204000e1101c0330\n"
".quad 0x8ed0a00031dc0020,0x7e0000040fdc0320,0xee0000ffffdc0420,0x8ec0000513dc2350\n"
".quad 0x00fffffd00dc0318,0x00000084011c0448,0x22c00bf433dc032c,0x000025e00000071a\n"
".quad 0x00c00008411e0360,0x22c007f913dc2360,0x00c00800415c031a,0x000025200005e748\n"
".quad 0x0000000d20de0440,0x00cfc00021dc0018,0x00c00005009c0350,0x00cfc000311c0048\n"
".quad 0x0000001c015de450,0x104000fc451c8628,0x00000009209e0480,0x00fffffd10dc0318\n"
".quad 0x00cfc000209c0048,0x00000008019de450,0x104101fc655c8628,0x0000000d20de0480\n"
".quad 0x00cfc00031dc0018,0x0000001c015de450,0x104202fc469c8628,0x00c0000510dc0380\n"
".quad 0x0000000d20de0448,0x00cfc000315c0018,0x104505fc46dc8650,0x0000001400dde480\n"
".quad 0x104404fc23dc8628,0x104303fc639c8680,0x00c00ffd109c0380,0x00c00080011c2348\n"
".quad 0x00c00078015c0358,0x00000010021de258,0x00c0200510dc0318,0x204000e0209c0348\n"
".quad 0x00000014411c4320,0x11800080019c0340,0x204000e0301c0320,0x00c0008020dc2320\n"
".quad 0x00c00078215c0358,0x0040009041dc4358,0x11800080211c0348,0x00000014309c4320\n"
".quad 0x00c0008000dc2340,0x00c00078025c0358,0x00400090215c4358,0x11800080009c0348\n"
".quad 0x00000024301c4320,0x00000000449c8540,0x00c04001125c0384,0x0040009000dc4348\n"
".quad 0x0000000064dc8548,0x204000e0911c0384,0x00000000201c8520,0x00c00078415c0384\n"
".quad 0x00c0008040dc2358,0x118000a0409c0358,0x0000001430dc4320,0x004000b030dc4340\n"
".quad 0x000013a00001e748,0x00000051311c0040,0x00000001215d0050,0x71ee3470021de250\n"
".quad 0x00000048419c0018,0x00000055411d0050,0x00000068515c0050,0x00000054619c0050\n"
".quad 0x00000068411c0050,0x00000038515c0050,0x00000000619c0050,0x00000038411d0050\n"
".quad 0x0000003c515d0050,0x00000068619c0050,0x0000003c411d0050,0x0000006c55dd0050\n"
".quad 0x00000038619c0050,0x0000006c459c0050,0xfe71c71c025de250,0x0000003c611c0018\n"
".quad 0x0000005d615d0050,0x0000006c465c0050,0x0000005d711c0050,0x00d02400519c0058\n"
".quad 0x32d0100051dc0058,0x08000059661c0030,0x0e000014611c0030,0x0000006d319c0430\n"
".quad 0x0000005d66df0010,0x08cff001811e0050,0x00000011311c0430,0x0c000020429e0110\n"
".quad 0x004000c1311c0420,0x0c000028431e0110,0x00d02401b19c0020,0x32d01001b1dc0058\n"
".quad 0x0000003d329c0430,0x0000005973dd0010,0x0e00006c619c0050,0x00000031a6dc0430\n"
".quad 0x0ccff001819e0010,0x00000019319c0430,0x14000020619e0110,0x14000018419e0120\n"
".quad 0x00d02400f29c0020,0x32d01000f2dc0058,0x1600003ca2dc0030,0x16cff00183de0030\n"
".quad 0x00000039329c0430,0x0000003d339c0410,0x14000020e39e0110,0x14000038429e0120\n"
".quad 0x0000005d639c0020,0x00d02400e31c0050,0x32d01000e35c0058,0x1a000038c35c0030\n"
".quad 0x1acff001839e0030,0x00000069331c0430,0x00000039339c0410,0x18000020e21e0110\n"
".quad 0x32d01001639e0020,0x18000020411e0130,0x00d02401625c0020,0x32d01001631c0058\n"
".quad 0x204000e1121c0330,0x00000011a11c0420,0x18000058935c0010,0x1c000058931c0030\n"
".quad 0x32cff001839e0030,0x00c00080859c2330,0x00c00078825c0358,0x26400024e3dc0058\n"
".quad 0x004000a0039de430,0x00000025625c4328,0x264000c0f3de0040,0x00000019a4dc0430\n"
".quad 0x1dc00010821c0310,0x00c00801119c0320,0x00000029a59c0448,0x004000b0925c4310\n"
".quad 0x204000e0619c0348,0x1acff00181de0020,0x0000000083dc8530,0x00c00080629c2394\n"
".quad 0x00c00078635c0358,0x2840003471de0058,0x1dc00010619c0330,0x00000034a35c4320\n"
".quad 0x00c0100112dc0340,0x00d02401729c0048,0x32d01001721c0058,0x284000c0725e0030\n"
".quad 0x004000b0d1dc4330,0x204000e0b35c0348,0x1000005ca21c0020,0x00000000625c8530\n"
".quad 0x00c00080d3dc2394,0x00c00078d51c0358,0x10cff00182de0058,0x1dc00010d21c0330\n"
".quad 0x00000050f25c4320,0x24400034b1de0040,0x00c01801119c0330,0x004000b0925c4348\n"
".quad 0x244000c071de0048,0x00c0200112dc0330,0x00c0280113dc0348,0x0000000081dc8548\n"
".quad 0x00c03001149c0394,0x204000e0619c0348,0x00c03801135c0320,0x32d01001725e0048\n"
".quad 0x204000e0b2dc0330,0x204000e0f21c0320,0x204000e123dc0320,0x00c0008061dc2320\n"
".quad 0x00c00078645c0358,0x1200005ca49c0058,0x00c00080b25c2330,0x00c00078b29c0358\n"
".quad 0x1dc00010619c0358,0x0000004471dc4320,0x00000028951c4340,0x00c00080845c2340\n"
".quad 0x00c00078825c0358,0x004000b071dc4358,0x1dc00010b29c0348,0x00000025125c4320\n"
".quad 0x18cff001845e0040,0x004000b142dc4330,0x00c00080f5dc2348,0x00c00078f31c0358\n"
".quad 0x1dc00010821c0358,0x00000084051c0420,0x0000003175dc432c,0x004000b0925c4340\n"
".quad 0x1dc00010f31c0348,0x204000e0d3dc0320,0x00c00009441e0320,0x24cff001849e0060\n"
".quad 0x004000b1735c4330,0x000000010fdc8548,0x000008010fdc85c9,0x1dc00010f39c03c9\n"
".quad 0x00c00080f51c2320,0x2a400035145e0058,0x00c00078f3dc0330,0x00400035249e0058\n"
".quad 0x2a4000c1141e0030,0x0000003d43dc4330,0x004000c1201e0040,0x00000000641c8530\n"
".quad 0x004000b0f3dc4394,0x00000000a01c8548,0x00000000811c8594,0x00000000c59c8594\n"
".quad 0x00000000e4dc8594,0x0000000026dc9594,0x000000a00081e794,0x0000008401200440\n"
".quad 0x00c000084122032c,0x000000004fe08560,0x000008004fe085c9,0x000002e000a1e7c9\n"
".quad 0x0000005141400040,0x0000000002400050,0x0000004922000050,0x00000069a1800050\n"
".quad 0x0af0000151400050,0x0000002482410030,0x0000006db1c00050,0x0000001851400050\n"
".quad 0x0000001892800050,0x00000038e2000050,0x0000001c51800050,0x0000001ca1c10050\n"
".quad 0x0000003cf2400050,0x0000008401400450,0x000000206181002c,0x0000002071c00050\n"
".quad 0x000000040101e250,0x00c0000851420318,0x0000002461810060,0x0000002471c10050\n"
".quad 0x00001003f1008550,0x00000000518085c9,0x0000080051c085c9,0x00c00801115c03c9\n"
".quad 0x00c01001119c0348,0x00c0180111dc0348,0x00c02001125c0348,0x204000e0515c0348\n"
".quad 0x204000e0619c0320,0x204000e0721c0320,0x204000e0929c0320,0x00c0008051dc2320\n"
".quad 0x00c00078525c0358,0x00c0008062dc2358,0x00c00078631c0358,0x00c02801111c0358\n"
".quad 0x004000a0059de448,0x00000024735c4328,0x00000030b1dc4340,0x00c0008084dc2340\n"
".quad 0x00c00078825c0358,0x204000e0431c0358,0x2dc00010511c0320,0x00000025325c4320\n"
".quad 0x00c00080a2dc2340,0x00c00078a4dc0358,0x004000b0d15c4358,0x2dc00010619c0348\n"
".quad 0x0000004cb2dc4320,0x00c00080c4dc2340,0x00c00078c5dc0358,0x004000b071dc4358\n"
".quad 0x2dc00010821c0348,0x0000005d335c4320,0x00c0300114dc0340,0x004000b0925c4348\n"
".quad 0x2dc00010a29c0348,0x204000e134dc0320,0x00c03801161c0320,0x004000b0b2dc4348\n"
".quad 0x2dc00010c31c0348,0x00c00081345c2320,0x00c0007935dc0358,0x204000e1861c0358\n"
".quad 0x004000b0d35c4320,0x0000005d145c4348,0x2dc00011341c0340,0x00c0008184dc2320\n"
".quad 0x00c0007985dc0358,0x004000b1145c4358,0x2dc00011859c0348,0x0000005d35dc4320\n"
".quad 0x00000000455c8540,0x00000000601c8594,0x00000000851c8594,0x004000b175dc4394\n"
".quad 0x00000000a49c8548,0x00000000c3dc8594,0x0000000106dc8594,0x00000001669c8594\n"
".quad 0x00000000239c9594,0x000000004fdc8594,0x000000005fdc95c9,0xee0000ffffdc04c9\n"
".quad 0x00000000001de750,0x0000000000000080,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0xcfd0000000000000\n"
".quad 0xe38e39439fd00043,0x0802043de38e39be,0x000003000000ca00,0x0000c90008020400\n"
".quad 0x0802040000000200,0x000001000000c700,0x0000c50008020400,0x0802040000000000\n"
".quad 0x000005000000cc00,0x0000cb0008020400,0x080a040000000400,0x3400200000005800\n"
".quad 0x0c17040034190300,0x3000060000000000,0x0c17040011f00000,0x2800050000000000\n"
".quad 0x0c17040021f00000,0x2000040000000000,0x0c17040021f00000,0x1800030000000000\n"
".quad 0x0c17040021f00000,0x1000020000000000,0x0c17040011f00000,0x0800010000000000\n"
".quad 0x0c17040021f00000,0x0000000000000000,0x080d040021f00000,0x0000030005003c00\n"
".quad 0x00440400005de400,0x0000009800dc0428,0x00000088011c042c,0x00000094001c042c\n"
".quad 0x00000084009c042c,0x08400030355ca32c,0x04400020051ca320,0x00fffffd501c0320\n"
".quad 0x00fffffd409c0348,0x0000000120de0448,0x00000009201e0418,0x00cfc000315c0018\n"
".quad 0x00cfc000009c0050,0x0000001400dde450,0x00c00005401c0328,0x104202fc239c8648\n"
".quad 0x00000001201e0480,0x00cfc000011c0018,0x104303fc431c8650,0x00000055221e0480\n"
".quad 0x00cfc00081dc0018,0x0000001c00dde450,0x104000fc249c8628,0x00c00005501c0380\n"
".quad 0x00000001201e0448,0x00cfc00000dc0018,0x104505fc22dc8650,0x0000000c015de480\n"
".quad 0x104404fc429c8628,0x00000010019de480,0x104101fc601c8628,0x0040008003dde480\n"
".quad 0x284000e1509c0328,0x00c017fd50dc0320,0x00c03005511c0348,0x00c00080215c2348\n"
".quad 0x00c0007821dc0358,0x1fc00010219c0358,0x284000e0309c0320,0x284000e040dc0320\n"
".quad 0x0000001c511c4320,0x00c00080215c2340,0x00c00078225c0358,0x0040009041dc4358\n"
".quad 0x1fc00010211c0348,0x00000024509c4320,0x00c00080325c2340,0x00c00078335c0358\n"
".quad 0x00400090215c4358,0x1fc00010309c0348,0x0000003490dc4320,0x00000051225e0440\n"
".quad 0x0000000064dc8518,0x0040009030dc4384,0x8e4000d491dc0048,0x00000000441c8520\n"
".quad 0x00000000245c8584,0x000002e000000784,0x000000fc009de460,0x000002800001e728\n"
".quad 0x00c0100140de0340,0x0000000d20de0448,0x8e4000e431dc0018,0x000001e00001e720\n"
".quad 0x00c00c0150de0340,0x0000000d20de0448,0x8e4000e431dc0018,0x000001400001e720\n"
".quad 0x8e4000d481dc0040,0x000000e00001e720,0x00f0eff0811c0040,0x00f0fff090dc0050\n"
".quad 0x00000010411c0050,0x0800000c30dc0058,0x8ed0a00031dc0030,0x000000000021f420\n"
".quad 0x00000028009df240,0x00000030009df218,0x0000002c009df218,0x00000008009df218\n"
".quad 0x0000000c009df218,0x00c05401569c0318,0x00fffffc20dc0348,0x00c0600156dc0348\n"
".quad 0x284000e1a09c0348,0x0ec00030319c0320,0x004000a0021de408,0x00c0008020dc2328\n"
".quad 0x00c00078215c0358,0x284000e1b11c0358,0x00c0000861de0320,0x11c00010209c0360\n"
".quad 0x0000001430dc4320,0x00c00080415c2340,0x00c00078419c0358,0x0040000071dc8658\n"
".quad 0x004000b030dc4314,0x11c00010411c0348,0x00000018515c4320,0x004000b0515c4340\n"
".quad 0x03fff360701de748,0x00c00c01519c0348,0x00c0180151dc0348,0x00c02401525c0348\n"
".quad 0x00c0300153dc0348,0x284000e0619c0348,0x284000e0721c0320,0x284000e0959c0320\n"
".quad 0x284000e0f61c0320,0x00c0008061dc2320,0x00c00078625c0358,0x004000a0035de458\n"
".quad 0x00c0008083dc2328,0x00c0007884dc0358,0x0000002471dc4358,0x1bc00010619c0340\n"
".quad 0x0000004cf25c4320,0x00c0008165dc2340,0x00c0007963dc0358,0x004000b071dc4358\n"
".quad 0x1bc00010821c0348,0x0000003d75dc4320,0x00c03c0153dc0340,0x00c0008184dc2348\n"
".quad 0x00c00079865c0358,0x004000b0925c4358,0x284000e0f3dc0348,0x1bc00011659c0320\n"
".quad 0x0000006534dc4320,0x00c04801569c0340,0x00c00080f55c2348,0x00c00078f65c0358\n"
".quad 0x004000b175dc4358,0x1bc00011861c0348,0x0000006556dc4320,0x284000e1a51c0340\n"
".quad 0x004000b1365c4320,0x1bc00010f69c0348,0x00c0008143dc2320,0x00c0007944dc0358\n"
".quad 0x004000b1b6dc4358,0x1bc00011451c0348,0x0000004cf35c4320,0x00000000601c8540\n"
".quad 0x00000000845c8594,0x004000b0d55c4394,0x00000001649c8548,0x00000001841c8594\n"
".quad 0x00000001a29c8594,0x0000000142dc8594,0x00000000239c8594,0x00000000431c8594\n"
".quad 0x00001a00001de794,0x00000620001de740,0x00000028031de440,0x0000002c039de428\n"
".quad 0x00000044041de428,0x000005a0001de728,0x00000030029de440,0x0000003802dde428\n"
".quad 0x00000040045de428,0x00000520001de728,0x0e0000fd51dc2340,0x000000e000000719\n"
".quad 0x000000800001e760,0x0ec00bfd51dc2340,0x000000000021f419,0x00000030029de440\n"
".quad 0x00000040045df428,0x00000028031de428,0x00000044041df428,0x00000045009d0028\n"
".quad 0xf68f5c28011de250,0x14cfc00020de0018,0x18cfc000209c0030,0x004000f4449c0030\n"
".quad 0x06400104439c0030,0x0440010442dc0030,0x00000300001de730,0x0e0000fd51dc2340\n"
".quad 0x000000e000000719,0x000000800001e760,0x0ec00bfd51dc2340,0x000000000021f419\n"
".quad 0x0000003802dde440,0x00000040045df428,0x0000002c039de428,0x00000044041df428\n"
".quad 0x00000041201c0028,0x00000049209c0050,0x00000038e0dc0050,0x00000044001c0050\n"
".quad 0x00000008001c0050,0x0000002cb09c0050,0x0000000c001c0050,0x0000004500dd0050\n"
".quad 0x00000008001c0050,0x1ccfc000309c0050,0x16cfc00030de0030,0x00efe000001c0030\n"
".quad 0x04400104029e0050,0x06400104031e0030,0x24400114001c0030,0x00000049309c0030\n"
".quad 0x0000004500dd0050,0x71ee3470021de250,0x00000040211c0018,0x00000001209d0050\n"
".quad 0x0000003830dc0050,0x00000000411c0050,0x00000038209c0050,0x0000003030dc0050\n"
".quad 0x00000044411c0050,0x00000030209d0050,0x0000002830dd0050,0x00000038411c0050\n"
".quad 0x00000028209d0050,0x0000002c35dd0050,0x00000030411c0050,0x0000002c259c0050\n"
".quad 0xfe71c71c025de250,0x00000028409c0018,0x0000005d60dd0050,0x00000059735d0050\n"
".quad 0x0000002c265c0050,0x0000005d709c0050,0x00d02400311c0058,0x32d01000315c0058\n"
".quad 0x04000059661c0030,0x0a00000c409c0030,0x0000002d311c0430,0x0000005d62df0010\n"
".quad 0x04cff001809e0050,0x00000009309c0430,0x08000020219e0110,0x004000c1309c0420\n"
".quad 0x08000018219e0110,0x00d02400b11c0020,0x32d01000b15c0058,0x00000019a19c0430\n"
".quad 0x0a00002c411c0010,0x00000029329c0430,0x08cff001811e0010,0x00000011311c0430\n"
".quad 0x14000020411e0110,0x14000010211e0120,0x00d02400d29c0020,0x32d01000d2dc0058\n"
".quad 0x00000011a11c0430,0x16000034a29c0010,0x14cff001835e0030,0x00000031329c0430\n"
".quad 0x00000035331c0410,0x14000020c31e0110,0x14000030231e0120,0x0000005d629c0020\n"
".quad 0x00000031a31c0450,0x00d02400a2dc0010,0x32d01000a3dc0058,0x1e000028b3dc0030\n"
".quad 0x00000039329c0430,0x1ecff00183de0010,0x0000003d339c0430,0x14000020e21e0110\n"
".quad 0x32d01001739e0020,0x14000020209e0130,0x00d02401621c0020,0x32d01001625c0058\n"
".quad 0x32d01001629e0030,0x00000009a09c0430,0x1200005882dc0010,0x14000058871c0030\n"
".quad 0x00d02401725c0030,0x32d01001729c0058,0x284000e1521c0330,0x004000a0059de420\n"
".quad 0x1400005c929c0028,0x1c00005c95dc0030,0x00c00080825c2330,0x00c00078839c0358\n"
".quad 0x2dc00010821c0358,0x14cff001829e0020,0x00000038925c4330,0x32cff001839e0040\n"
".quad 0x16cff001865e0030,0x004000b0925c4330,0x26400124e39c0048,0x38cff00181de0030\n"
".quad 0x2ecff00185de0030,0x264000c0e4de0030,0x00c00c01539c0330,0x00400134715e0048\n"
".quad 0x0000000084dc8530,0x284000e0e3dc0394,0x00c01801539c0320,0x2240013571de0048\n"
".quad 0x00c00080f2dc2330,0x00c00078f25c0358,0x24400135921e0058,0x284000e0e39c0330\n"
".quad 0x00000024b25c4320,0x244000c084de0040,0x00c00080e2dc2330,0x00c00078e49c0358\n"
".quad 0x2dc00010f21c0358,0x004000c0501e0020,0x00000048b49c4330,0x004000b0925c4340\n"
".quad 0x00c0240152dc0348,0x224000c0715e0048,0x0000000084dc8530,0x284000e0b65c0394\n"
".quad 0x00c0300152dc0320,0x00c0008193dc2348,0x00c00079925c0358,0x20400134a21e0058\n"
".quad 0x284000e0b29c0330,0x00000024f3dc4320,0x204000c0841e0040,0x00c00080a21c2330\n"
".quad 0x00c00078a25c0358,0x00c0480154dc0358,0x0000002482dc4348,0x2dc00010e21c0340\n"
".quad 0x00c03c01539c0320,0x004000b1225c4348,0x284000e0e39c0348,0x284000e1a49c0320\n"
".quad 0x00000000841c8520,0x00c00080e75c2394,0x00c00078e21c0358,0x284000e1341c0358\n"
".quad 0x00c00081225c2320,0x00000021d69c4358,0x00c0007924dc0340,0x284000e1b21c0358\n"
".quad 0x2dc00011249c0320,0x0000004c925c4320,0x00c0008084dc2340,0x00c00078855c0358\n"
".quad 0x00000055355c4358,0x004000b094dc4340,0x2dc00010851c0348,0x004000b1555c4320\n"
".quad 0x2dc00011921c0348,0x00c00081065c2320,0x004000b0f25c4358,0x2dc00010a29c0348\n"
".quad 0x00000000801c8520,0x004000b0b2dc4394,0x2dc00010e39c0348,0x00000000a15c8520\n"
".quad 0x004000b1a3dc4394,0x2dc00011059c0348,0x00c00079041c0320,0x00000000e09c8558\n"
".quad 0x00000041941c4394,0x004000b105dc4340,0x00000001631c8548,0x00000001211c8594\n"
".quad 0x00000001419c8594,0x00000000001de794,0x0000000000000080,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0005980000032800,0x0004c80000051000\n"
".quad 0x0004c8000004c800,0x0004c8000004c800,0x000328000004c800,0x0004d0000004f000\n"
".quad 0xcccccd000004c800,0x2aaaab3f8ccccd3d,0x2aaaab3e2aaaab3f,0xe38e39bee38e39bf\n"
".quad 0x0000c0000802043d,0x0802040000000200,0x000001000000be00,0x0000bc0008020400\n"
".quad 0x0802040000000000,0x000005000000c300,0x0000c20008020400,0x0802040000000400\n"
".quad 0x000003000000c100,0x00008500080a0400,0x2019030020002000,0x000000000c170400\n"
".quad 0x21f0000018000300,0x000000000c170400,0x11f0000010000200,0x000000000c170400\n"
".quad 0x21f0000008000100,0x000000000c170400,0x21f0000000000000,0x06004800080d0400\n"
".quad 0x005de40000000500,0x00dc042800440400,0x011c042c00000098,0x001c042c00000088\n"
".quad 0x009c042c00000094,0x015de42c00000084,0x351ca32800400100,0x049ca32008400030\n"
".quad 0x019de22004400020,0x511e0318fa000000,0x201e044800c00bfc,0x209e041800000051\n"
".quad 0x21dc231800000049,0x00dc001a0e000011,0x209c00300c800014,0x21dc23300c800004\n"
".quad 0x30dc0018a0400101,0x515e035000f0eff0,0x209c004800c007fc,0x30dc005000f0fff0\n"
".quad 0x41dc23580000000c,0x20dc0018a0400101,0x43dc233006000008,0x409c031a20000015\n"
".quad 0x31dc0020244000e1,0x0005e7208ed0a000,0x20dc038000000000,0x01dc004800fffffd\n"
".quad 0x201c035000cfc000,0x20de044800c00005,0x015de4180000000d,0x311c00280000001c\n"
".quad 0x421c865000cfc000,0x201e0480104000fc,0x40dc031800000001,0x019c004800fffffd\n"
".quad 0x601c865000cfc000,0x20de0480104101fc,0x32dc00180000000d,0x015de45000cfc000\n"
".quad 0x425c86280000002c,0x40dc0380104202fc,0x20de044800c00005,0x315c00180000000d\n"
".quad 0x479c865000cfc000,0x01dde480104505fc,0x669c862800000014,0x029de480104404fc\n"
".quad 0xa59c862800000018,0x215c2380104303fc,0x219c035800c00080,0x40dc035800c00078\n"
".quad 0x029de24800c00ffd,0x515c431800000010,0x30dc034000000018,0x411c0320244000e0\n"
".quad 0x219c034800c02005,0x32dc232015800080,0x331c035800c00080,0x409c035800c00078\n"
".quad 0x51dc4320244000e0,0x311c034800400090,0xb0dc432015800080,0x22dc234000000030\n"
".quad 0x231c035800c00080,0x315c435800c00078,0x209c034800400090,0xb0dc432015800080\n"
".quad 0x461c854000000030,0x455c038400000000,0x30dc434800c03801,0x64dc854800400090\n"
".quad 0x511c038400000000,0x265c8520244000e1,0x415c038400000000,0x409c035800c00078\n"
".quad 0x40dc234800c04001,0x411c035800c00080,0x209c0320158000a0,0x30dc4320244000e0\n"
".quad 0x219c234000000014,0x21dc035800c00080,0x315c435800c00078,0x209c0348004000b0\n"
".quad 0x60dc4320158000a0,0x30dc43400000001c,0x0081e748004000b0,0x3120004000001320\n"
".quad 0x8161005000000021,0x32a0045000000065,0x41a0001000000079,0x8121005000000060\n"
".quad 0x5160005000000000,0x61a0005000000024,0x4120005000000000,0x5160005000000024\n"
".quad 0x61a0005000000058,0x4121005000000064,0x5161005000000058,0x61a0005000000068\n"
".quad 0x4121005000000024,0x56e1005000000068,0x61a0005000000078,0x4720005000000058\n"
".quad 0x6120005000000078,0xc161005000000068,0xc3a300500000006d,0x476000500000006d\n"
".quad 0xb120005000000078,0x51a000580000006d,0x51e0005800d02400,0xc5e000303ad01000\n"
".quad 0x6120003008000071,0x01a1e2300e000014,0x01e1e21871ee3470,0x71220018fe71c71c\n"
".quad 0x3120043008cff001,0x4322011000000011,0x3120042014000018,0x44220110004000c1\n"
".quad 0xe2a0002014000030,0xe2e0005800d02400,0xa46004303ad01000,0xa2a0001000000041\n"
".quad 0x7322003016000038,0x32a0043014cff001,0xb6a1001000000069,0x3320045000000071\n"
".quad 0xc322011000000031,0x43a2012014000018,0xa2a0002014000030,0xa2e0005800d02401\n"
".quad 0xa3a004303ad01001,0xa2a0001000000039,0x7322003016000068,0x32a0043014cff001\n"
".quad 0x3320041000000059,0xc322011000000031,0x4322012014000018,0xc2a0002014000030\n"
".quad 0xa32004500000006d,0xa2e0001000000031,0xa5a0005800d02400,0xb2a000303ad01000\n"
".quad 0x75a200302c000028,0x32a0043014cff001,0xb262001000000025,0x37a004303ad01001\n"
".quad 0x05a1e41000000059,0xe1a20128004000a0,0x42a2012014000019,0xc120002014000018\n"
".quad 0xc160005800d02401,0xc1e200303ad01001,0xa2a004303ad01001,0x41a0001000000029\n"
".quad 0x472000300a000070,0xb16000300e000070,0xb1e0005800d02401,0x412003303ad01001\n"
".quad 0x71a20020244000e1,0x56a000300ccff001,0x56e000300e00006c,0x416023301200006c\n"
".quad 0x41e0035800c00080,0x4120035800c00078,0x772200202dc00010,0x51e0433038cff001\n"
".quad 0x716200400000001c,0x76a200303acff001,0x76e2003034cff001,0x5160003036cff001\n"
".quad 0xc5e2003026400024,0xb422003000400035,0x5262003032400035,0x71604330264000c0\n"
".quad 0x41e00348004000b0,0x44e0034800c00801,0x4260854800c01001,0x71e0039400000000\n"
".quad 0x70220020244000e0,0xa5e20030004000c1,0x6122003030400035,0x7760233010400034\n"
".quad 0x7160035800c00080,0x31a0035800c00078,0x42220020244000e1,0xd1604330104000c0\n"
".quad 0x7120034000000015,0x626023202dc00010,0x64e0035800c00080,0x5160435800c00078\n"
".quad 0x41e00348004000b0,0x9260434800c01801,0x44e003400000004c,0x4220854800c02001\n"
".quad 0x71e0039400000000,0x34e00320244000e0,0x76220020244000e1,0x62200330304000c1\n"
".quad 0x316023202dc00010,0x31a0035800c00081,0x7760235800c00079,0x77a0035800c00080\n"
".quad 0x5160435800c00078,0x9260434000000018,0x71a00348004000b0,0x41e003202dc00010\n"
".quad 0xd120434800c02801,0x4520034000000079,0x77a0034800c03001,0x41e04320244000e0\n"
".quad 0x31200348004000b0,0xe4e023202dc00011,0xe760035800c00081,0x5160435800c00079\n"
".quad 0x04220048004000b0,0x34e04330324000c1,0x4760034000000075,0x55200320244000e1\n"
".quad 0xe4a00320244000e1,0x862085202dc00011,0x4560239400000000,0x47a0035800c00081\n"
".quad 0x34e0435800c00079,0x45200348004000b1,0x556043202dc00011,0xd7a0234000000079\n"
".quad 0x6020855800c00081,0x5560439400000000,0xd5a00348004000b1,0xd76003202dc00011\n"
".quad 0x4420855800c00079,0x22a0859400000000,0xe760439400000001,0xd5e0434000000075\n"
".quad 0x63208548004000b1,0x43a0859400000001,0x2460859400000001,0x00a1e79400000000\n"
".quad 0x4180034000000660,0x41c0034800c00801,0x4300034800c01001,0x6180034800c02001\n"
".quad 0x42800320244000e0,0x72c0034800c01801,0xc3800320244000e0,0x61c02320244000e0\n"
".quad 0x6300035800c00080,0x04c1e45800c00078,0xa2800328004000a0,0xb3402320244000e0\n"
".quad 0xb3c0035800c00080,0x71c0435800c00078,0xa400234000000030,0xa300035800c00080\n"
".quad 0x6180035800c00078,0xd340432027c00010,0xe3c023400000003c,0xe440035800c00080\n"
".quad 0x0400435800c00078,0x71c0434000000031,0xb3000348004000b0,0xf3c0432027c00010\n"
".quad 0x4440034000000044,0xd340434800c02801,0xa2800348004000b0,0x1440032027c00010\n"
".quad 0x45000320244000e1,0x02c0434800c03001,0xe3800348004000b1,0x1540232027c00010\n"
".quad 0x15c0035800c00081,0x4480035800c00079,0xf3c04320244000e1,0x55004348004000b0\n"
".quad 0x140003400000005d,0x2540232027c00011,0x25c0035800c00081,0x4440435800c00079\n"
".quad 0x24800348004000b1,0x54c0432027c00011,0x600085400000005d,0xc640859400000000\n"
".quad 0x34c0439400000000,0xa2008548004000b1,0xe600859400000000,0x0680859400000000\n"
".quad 0x2780859400000001,0x4240859400000001,0x2580859400000000,0x001de79400000000\n"
".quad 0x0000008000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x9fd00043cfd00000,0xe38e39bee38e3943,0x0000ca000802043d\n"
".quad 0x0802040000000300,0x000002000000c900,0x0000c70008020400,0x0802040000000100\n"
".quad 0x000000000000c500,0x0000cc0008020400,0x0802040000000500,0x000004000000cb00\n"
".quad 0x00006800080a0400,0x2419030024002000,0x000000000c170400,0x11f0000020000400\n"
".quad 0x000000000c170400,0x21f0000018000300,0x000000000c170400,0x11f0000010000200\n"
".quad 0x000000000c170400,0x21f0000008000100,0x000000000c170400,0x21f0000000000000\n"
".quad 0x02001800080d0400,0x0000000000000200,0x0000000000000000,0x0000080000000000\n"
".quad 0x0000020000000000,0x000000000000d700,0x0000020000000000,0x4b4742000000d600\n"
".quad 0x1007040054524d00,0xffffff000000d500,0xffffffffffffffff,0x0000d400100704ff\n"
".quad 0xffffffffffffff00,0x100704ffffffffff,0xffffff000000d300,0xffffffffffffffff\n"
".quad 0x0000d200100704ff,0xffffffffffffff00,0x100704ffffffffff,0xffffff000000d100\n"
".quad 0xffffffffffffffff,0x0000d000100704ff,0xffffffffffffff00,0x100704ffffffffff\n"
".quad 0xffffff000000cf00,0xffffffffffffffff,0x0000ce00100704ff,0xffffffffffffff00\n"
".quad 0x100704ffffffffff,0xffffff000000cd00,0xffffffffffffffff,0x0000cc00100704ff\n"
".quad 0xffffffffffffff00,0x100704ffffffffff,0xffffff000000cb00,0xffffffffffffffff\n"
".quad 0x0000ca00100704ff,0xffffffffffffff00,0x100704ffffffffff,0xffffff000000c900\n"
".quad 0xffffffffffffffff,0x0000c800100704ff,0xffffffffffffff00,0x100704ffffffffff\n"
".quad 0xffffff000000c700,0xffffffffffffffff,0x0000c600100704ff,0xffffffffffffff00\n"
".quad 0x100704ffffffffff,0xffffff000000c500,0xffffffffffffffff,0x0000c400100704ff\n"
".quad 0xffffffffffffff00,0x100704ffffffffff,0xffffff000000c300,0xffffffffffffffff\n"
".quad 0x0000c200100704ff,0xffffffffffffff00,0x100704ffffffffff,0xffffff000000c100\n"
".quad 0xffffffffffffffff,0x0000c000100704ff,0xffffffffffffff00,0x100704ffffffffff\n"
".quad 0xffffff000000bf00,0xffffffffffffffff,0x0000be00100704ff,0xffffffffffffff00\n"
".quad 0x100704ffffffffff,0xffffff000000bd00,0xffffffffffffffff,0x0000bc00100704ff\n"
".quad 0xffffffffffffff00,0x100704ffffffffff,0xffffff000000bb00,0xffffffffffffffff\n"
".quad 0x0000ba00100704ff,0xffffffffffffff00,0x100704ffffffffff,0xffffff000000b900\n"
".quad 0xffffffffffffffff,0x0000b800100704ff,0xffffffffffffff00,0x100704ffffffffff\n"
".quad 0xffffff000000b700,0xffffffffffffffff,0x0000b600100704ff,0xffffffffffffff00\n"
".quad 0x100704ffffffffff,0xffffff000000b500,0xffffffffffffffff,0x0000b400100704ff\n"
".quad 0xffffffffffffff00,0x100704ffffffffff,0xffffff000000b300,0xffffffffffffffff\n"
".quad 0x0000b200100704ff,0xffffffffffffff00,0x081204ffffffffff,0x000000000000b100\n"
".quad 0x0000b10008110400,0x0812040000000000,0x000000000000b000,0x0000b00008110400\n"
".quad 0x0812040000000000,0x000000000000af00,0x0000af0008110400,0x0812040000000000\n"
".quad 0x000000000000ae00,0x0000ae0008110400,0x0812040000000000,0x000000000000ad00\n"
".quad 0x0000ad0008110400,0x0812040000000000,0x000000000000ac00,0x0000ac0008110400\n"
".quad 0x0812040000000000,0x000000000000ab00,0x0000ab0008110400,0x0812040000000000\n"
".quad 0x000000000000aa00,0x0000aa0008110400,0x0812040000000000,0x000000000000a900\n"
".quad 0x0000a90008110400,0x0812040000000000,0x000000000000a800,0x0000a80008110400\n"
".quad 0x0812040000000000,0x000000000000a700,0x0000a70008110400,0x0812040000000000\n"
".quad 0x000000000000a600,0x0000a60008110400,0x0812040000000000,0x000000000000a500\n"
".quad 0x0000a50008110400,0x0812040000000000,0x000000000000a400,0x0000a40008110400\n"
".quad 0x0812040000000000,0x000000000000a300,0x0000a30008110400,0x0812040000000000\n"
".quad 0x000000000000a200,0x0000a20008110400,0x0812040000000000,0x000000000000a100\n"
".quad 0x0000a10008110400,0x0812040000000000,0x000000000000a000,0x0000a00008110400\n"
".quad 0x0812040000000000,0x0000000000009f00,0x00009f0008110400,0x0812040000000000\n"
".quad 0x0000000000009e00,0x00009e0008110400,0x0812040000000000,0x0000000000009d00\n"
".quad 0x00009d0008110400,0x0812040000000000,0x0000000000009c00,0x00009c0008110400\n"
".quad 0x0812040000000000,0x0000000000001e00,0x00001e0008110400,0x0812040000000000\n"
".quad 0x0000000000001d00,0x00001d0008110400,0x0812040000000000,0x0000000000009b00\n"
".quad 0x00009b0008110400,0x0812040000000000,0x0000000000009a00,0x00009a0008110400\n"
".quad 0x0812040000000000,0x0000000000009900,0x0000990008110400,0x0812040000000000\n"
".quad 0x0000000000009800,0x0000980008110400,0x0812040000000000,0x0000000000009700\n"
".quad 0x0000970008110400,0x0812040000000000,0x0000000000009600,0x0000960008110400\n"
".quad 0x0812040000000000,0x0000000000009500,0x0000950008110400,0x0812040000000000\n"
".quad 0x0000000000009400,0x0000940008110400,0x0812040000000000,0x0000000000009300\n"
".quad 0x0000930008110400,0x0812040000000000,0x0000000000009200,0x0000920008110400\n"
".quad 0x0812040000000000,0x0000000000009100,0x0000910008110400,0x0000000000000000\n"
".quad 0x0000000500000006,0x000000000001cc48,0x0000000000000000,0x0000000000000000\n"
".quad 0x00000000000008f8,0x00000000000008f8,0x0000000000000004,0x0000b10560000000\n"
".quad 0x0000000000005069,0x0000000000000000,0x0000000000000000,0x0000000000000164\n"
".quad 0x0000000000000164,0x0000000000000004,0x0000b00560000000,0x00000000000051cd\n"
".quad 0x0000000000000000,0x0000000000000000,0x00000000000002ac,0x00000000000002ac\n"
".quad 0x0000000000000004,0x0000af0560000000,0x0000000000005479,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000f6c,0x0000000000000f6c,0x0000000000000004\n"
".quad 0x0000ae0560000000,0x00000000000063e5,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000e2c,0x0000000000000e2c,0x0000000000000004,0x0000ae0660000000\n"
".quad 0x0000000000007211,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000404,0x0000000000000004,0x0000ad0560000000,0x0000000000007211\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000fec,0x0000000000000fec\n"
".quad 0x0000000000000004,0x0000ac0560000000,0x00000000000081fd,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000a44,0x0000000000000a44,0x0000000000000004\n"
".quad 0x0000ab0560000000,0x0000000000008c41,0x0000000000000000,0x0000000000000000\n"
".quad 0x00000000000009f4,0x00000000000009f4,0x0000000000000004,0x0000aa0560000000\n"
".quad 0x0000000000009635,0x0000000000000000,0x0000000000000000,0x0000000000000bf4\n"
".quad 0x0000000000000bf4,0x0000000000000004,0x0000a90560000000,0x000000000000a229\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000a44,0x0000000000000a44\n"
".quad 0x0000000000000004,0x0000a80560000000,0x000000000000ac6d,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000d04,0x0000000000000d04,0x0000000000000004\n"
".quad 0x0000a70560000000,0x000000000000b971,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000a3c,0x0000000000000a3c,0x0000000000000004,0x0000a60560000000\n"
".quad 0x000000000000c3ad,0x0000000000000000,0x0000000000000000,0x0000000000000c88\n"
".quad 0x0000000000000c88,0x0000000000000004,0x0000a50560000000,0x000000000000d035\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000a3c,0x0000000000000a3c\n"
".quad 0x0000000000000004,0x0000a40560000000,0x000000000000da71,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000a44,0x0000000000000a44,0x0000000000000004\n"
".quad 0x0000a30560000000,0x000000000000e4b5,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000b90,0x0000000000000b90,0x0000000000000004,0x0000a30660000000\n"
".quad 0x000000000000f045,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000404,0x0000000000000004,0x0000a20560000000,0x000000000000f045\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000cb4,0x0000000000000cb4\n"
".quad 0x0000000000000004,0x0000a10560000000,0x000000000000fcf9,0x0000000000000000\n"
".quad 0x0000000000000000,0x00000000000009f4,0x00000000000009f4,0x0000000000000004\n"
".quad 0x0000a00560000000,0x00000000000106ed,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000fec,0x0000000000000fec,0x0000000000000004,0x00009f0560000000\n"
".quad 0x00000000000116d9,0x0000000000000000,0x0000000000000000,0x0000000000000a28\n"
".quad 0x0000000000000a28,0x0000000000000004,0x00009e0560000000,0x0000000000012101\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000bf4,0x0000000000000bf4\n"
".quad 0x0000000000000004,0x00009d0560000000,0x0000000000012cf5,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000a10,0x0000000000000a10,0x0000000000000004\n"
".quad 0x00009c0560000000,0x0000000000013705,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000a44,0x0000000000000a44,0x0000000000000004,0x00009b0560000000\n"
".quad 0x0000000000014149,0x0000000000000000,0x0000000000000000,0x0000000000000d04\n"
".quad 0x0000000000000d04,0x0000000000000004,0x00009a0560000000,0x0000000000014e4d\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000e2c,0x0000000000000e2c\n"
".quad 0x0000000000000004,0x00009a0660000000,0x0000000000015c79,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000404,0x0000000000000004\n"
".quad 0x0000990560000000,0x0000000000015c79,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000f6c,0x0000000000000f6c,0x0000000000000004,0x0000980560000000\n"
".quad 0x0000000000016be5,0x0000000000000000,0x0000000000000000,0x0000000000000f3c\n"
".quad 0x0000000000000f3c,0x0000000000000004,0x0000980660000000,0x0000000000017b21\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000404\n"
".quad 0x0000000000000004,0x0000970560000000,0x0000000000017b21,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000a58,0x0000000000000a58,0x0000000000000004\n"
".quad 0x0000960560000000,0x0000000000018579,0x0000000000000000,0x0000000000000000\n"
".quad 0x00000000000002ac,0x00000000000002ac,0x0000000000000004,0x0000950560000000\n"
".quad 0x0000000000018825,0x0000000000000000,0x0000000000000000,0x0000000000000a58\n"
".quad 0x0000000000000a58,0x0000000000000004,0x0000940560000000,0x000000000001927d\n"
".quad 0x0000000000000000,0x0000000000000000,0x000000000000113c,0x000000000000113c\n"
".quad 0x0000000000000004,0x0000930560000000,0x000000000001a3b9,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000b90,0x0000000000000b90,0x0000000000000004\n"
".quad 0x0000930660000000,0x000000000001af49,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000404,0x0000000000000004,0x0000920560000000\n"
".quad 0x000000000001af49,0x0000000000000000,0x0000000000000000,0x0000000000000c84\n"
".quad 0x0000000000000c84,0x0000000000000004,0x0000910560000000,0x000000000001bbcd\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000a28,0x0000000000000a28\n"
".quad 0x0000000000000004,0x0000000500000001,0x000000000001c5f5,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000030,0x0000000000000030,0x0000000000000004\n"
".quad 0x0000000600000001,0x000000000001c625,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000008,0x0000000000000008,0x0000000000000004,0x0000005001000001\n"
".quad 0x000000000006be26,0x0000003800000000,0x0000001400030000,0x0000000f00000040\n"
".quad 0x0000000000000015,0x0000000000000000,0x0000000000000000,0x707265746e497874\n"
".quad 0x0075632e74736554,0x762e0a0a0a0a0a0a,0x33206e6f69737265,0x677261742e0a302e\n"
".quad 0x30325f6d73207465,0x7365726464612e0a,0x3620657a69735f73,0x656c69662e0a0a34\n"
".quad 0x6e49787422203109,0x7473655470726574,0x22692e337070632e,0x3209656c69662e0a\n"
".quad 0x65746e4978742220,0x632e747365547072,0x656c69662e0a2275,0x7273752f22203309\n"
".quad 0x632f6c61636f6c2f,0x2f6e69622f616475,0x756c636e692f2e2e,0x63697665642f6564\n"
".quad 0x6974636e75665f65,0x2e0a22682e736e6f,0x22203409656c6966,0x636f6c2f7273752f\n"
".quad 0x2f616475632f6c61,0x5f69632f6d76766e,0x2e6564756c636e69,0x656c69662e0a2268\n"
".quad 0x7273752f22203509,0x632f6c61636f6c2f,0x2f6e69622f616475,0x756c636e692f2e2e\n"
".quad 0x30325f6d732f6564,0x5f63696d6f74615f,0x6e6f6974636e7566,0x6c672e0a22682e73\n"
".quad 0x65742e206c61626f,0x7865742066657278,0x3b4130665f666552,0x6c61626f6c672e0a\n"
".quad 0x6665727865742e20,0x5f66655278657420,0x6c672e0a3b413166,0x65742e206c61626f\n"
".quad 0x7865742066657278,0x3b4132665f666552,0x6c61626f6c672e0a,0x6665727865742e20\n"
".quad 0x5f66655278657420,0x6c672e0a3b413366,0x65742e206c61626f,0x7865742066657278\n"
".quad 0x3b4134665f666552,0x6c61626f6c672e0a,0x6665727865742e20,0x5f66655278657420\n"
".quad 0x6c672e0a3b413566,0x65742e206c61626f,0x7865742066657278,0x3b4136665f666552\n"
".quad 0x6c61626f6c672e0a,0x6665727865742e20,0x5f66655278657420,0x6c672e0a3b413766\n"
".quad 0x65742e206c61626f,0x7865742066657278,0x3b4138665f666552,0x6c61626f6c672e0a\n"
".quad 0x6665727865742e20,0x5f66655278657420,0x6c672e0a3b423066,0x65742e206c61626f\n"
".quad 0x7865742066657278,0x3b4231665f666552,0x6c61626f6c672e0a,0x6665727865742e20\n"
".quad 0x5f66655278657420,0x6c672e0a3b423266,0x65742e206c61626f,0x7865742066657278\n"
".quad 0x3b4233665f666552,0x6c61626f6c672e0a,0x6665727865742e20,0x5f66655278657420\n"
".quad 0x6c672e0a3b423466,0x65742e206c61626f,0x7865742066657278,0x3b4235665f666552\n"
".quad 0x6c61626f6c672e0a,0x6665727865742e20,0x5f66655278657420,0x6c672e0a3b423666\n"
".quad 0x65742e206c61626f,0x7865742066657278,0x3b4237665f666552,0x6c61626f6c672e0a\n"
".quad 0x6665727865742e20,0x5f66655278657420,0x6c672e0a3b423866,0x65742e206c61626f\n"
".quad 0x7865742066657278,0x3b4330665f666552,0x6c61626f6c672e0a,0x6665727865742e20\n"
".quad 0x5f66655278657420,0x6c672e0a3b433166,0x65742e206c61626f,0x7865742066657278\n"
".quad 0x3b4332665f666552,0x6c61626f6c672e0a,0x6665727865742e20,0x5f66655278657420\n"
".quad 0x6c672e0a3b433366,0x65742e206c61626f,0x7865742066657278,0x3b4334665f666552\n"
".quad 0x6c61626f6c672e0a,0x6665727865742e20,0x5f66655278657420,0x6c672e0a3b433566\n"
".quad 0x65742e206c61626f,0x7865742066657278,0x3b4336665f666552,0x6c61626f6c672e0a\n"
".quad 0x6665727865742e20,0x5f66655278657420,0x6c672e0a3b433766,0x65742e206c61626f\n"
".quad 0x7865742066657278,0x3b4338665f666552,0x6c61626f6c672e0a,0x6665727865742e20\n"
".quad 0x5f66655278657420,0x6c672e0a3b443066,0x65742e206c61626f,0x7865742066657278\n"
".quad 0x3b4431665f666552,0x6c61626f6c672e0a,0x6665727865742e20,0x5f66655278657420\n"
".quad 0x6c672e0a3b443266,0x65742e206c61626f,0x7865742066657278,0x3b4433665f666552\n"
".quad 0x6c61626f6c672e0a,0x6665727865742e20,0x5f66655278657420,0x6c672e0a3b443466\n"
".quad 0x65742e206c61626f,0x7865742066657278,0x3b4435665f666552,0x6c61626f6c672e0a\n"
".quad 0x6665727865742e20,0x5f66655278657420,0x6c672e0a3b443666,0x65742e206c61626f\n"
".quad 0x7865742066657278,0x3b4437665f666552,0x6c61626f6c672e0a,0x6665727865742e20\n"
".quad 0x5f66655278657420,0x0a0a0a0a3b443866,0x206c61626f6c672e,0x31206e67696c612e\n"
".quad 0x7473242038622e20,0x7b203d205d345b72,0x202c3137202c3636,0x0a3b7d30202c3537\n"
".quad 0x206c61626f6c672e,0x31206e67696c612e,0x7473242038622e20,0x203d205d345b3172\n"
".quad 0x2c3238202c37377b,0x3b7d30202c343820,0x0a0a0a0a0a0a0a0a,0x762e0a0a0a0a0a0a\n"
".quad 0x2e20656c62697369,0x702e2820636e7566,0x33622e206d617261,0x725f636e75662032\n"
".quad 0x2029306c61767465,0x6567616d49385a5f,0x2e0a2866666e6346,0x622e206d61726170\n"
".quad 0x6d49385a5f203233,0x66666e6346656761,0x305f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203233622e20,0x63466567616d4938,0x617261705f66666e,0x0a7b0a290a315f6d\n"
".quad 0x33662e206765722e,0x3b3e373c66252032,0x702e206765722e0a,0x323c702520646572\n"
".quad 0x206765722e0a3b3e,0x3c7225203233732e,0x646c0a0a0a3b3e32,0x662e6d617261702e\n"
".quad 0x202c316625203233,0x67616d49385a5f5b,0x705f66666e634665,0x3b5d305f6d617261\n"
".quad 0x617261702e646c0a,0x6625203233662e6d,0x49385a5f5b202c32,0x666e63466567616d\n"
".quad 0x5f6d617261705f66,0x2e6464610a3b5d31,0x2c33662520323366,0x6630202c31662520\n"
".quad 0x3030304346463343,0x33662e6464610a3b,0x25202c3466252032,0x33436630202c3266\n"
".quad 0x0a3b303030434642,0x37203220636f6c2e,0x2e6c756d0a312034,0x2c35662520323366\n"
".quad 0x6625202c34662520,0x722e616d660a3b34,0x6625203233662e6e,0x202c336625202c36\n"
".quad 0x356625202c336625,0x6c2e707465730a3b,0x7025203233662e74,0x202c366625202c31\n"
".quad 0x3030303832346630,0x706c65730a3b3030,0x317225203233622e,0x2c30202c3031202c\n"
".quad 0x6c2e0a3b31702520,0x203737203220636f,0x7261702e74730a31,0x5b093233622e6d61\n"
".quad 0x7465725f636e7566,0x2c5d302b306c6176,0x65720a3b31722520,0x762e0a0a7d0a3b74\n"
".quad 0x2e20656c62697369,0x702e2820636e7566,0x33622e206d617261,0x725f636e75662032\n"
".quad 0x2029306c61767465,0x6567616d49385a5f,0x2e0a2869696e6346,0x622e206d61726170\n"
".quad 0x6d49385a5f203233,0x69696e6346656761,0x305f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203233622e20,0x63466567616d4938,0x617261705f69696e,0x0a7b0a290a315f6d\n"
".quad 0x33662e206765722e,0x3b3e393c66252032,0x702e206765722e0a,0x363c702520646572\n"
".quad 0x206765722e0a3b3e,0x3c7225203233732e,0x6c0a0a0a3b3e3731,0x2e6d617261702e64\n"
".quad 0x2c31722520323375,0x616d49385a5f5b20,0x5f69696e63466567,0x5d305f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x76630a3120323820,0x3233662e6e722e74,0x316625203233732e\n"
".quad 0x730a3b317225202c,0x662e746c2e707465,0x202c317025203233,0x336630202c316625\n"
".quad 0x3b44434343434344,0x726220317025400a,0x3b385f3142422061,0x33752e766f6d0a0a\n"
".quad 0x31202c3472252032,0x2e646c0a3b343230,0x33752e6d61726170,0x202c333172252032\n"
".quad 0x67616d49385a5f5b,0x705f69696e634665,0x3b5d305f6d617261,0x203220636f6c2e0a\n"
".quad 0x6275730a31203438,0x357225203233732e,0x25202c347225202c,0x7476630a3b333172\n"
".quad 0x2e3233662e6e722e,0x2c33662520323373,0x65730a3b35722520,0x33662e746c2e7074\n"
".quad 0x25202c3270252032,0x46336630202c3366,0x0a3b444343434338,0x6172622032702540\n"
".quad 0x0a3b375f31424220,0x3233752e766f6d0a,0x3637202c36722520,0x61702e646c0a3b38\n"
".quad 0x203233752e6d6172,0x5f5b202c35317225,0x466567616d49385a,0x7261705f69696e63\n"
".quad 0x2e0a3b5d315f6d61,0x3638203220636f6c,0x732e6275730a3120,0x202c377225203233\n"
".quad 0x317225202c367225,0x722e7476630a3b35,0x33732e3233662e6e,0x25202c3466252032\n"
".quad 0x707465730a3b3772,0x203233662e746c2e,0x346625202c337025,0x433846336630202c\n"
".quad 0x25400a3b44434343,0x4220617262203370,0x6c0a0a3b365f3142,0x2e6d617261702e64\n"
".quad 0x3431722520323375,0x6d49385a5f5b202c,0x69696e6346656761,0x315f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x630a312038382032,0x33662e6e722e7476,0x6625203233732e32\n"
".quad 0x3b34317225202c32,0x746c2e707465730a,0x347025203233662e,0x30202c326625202c\n"
".quad 0x4343434343443366,0x20347025400a3b44,0x5f31424220617262,0x2e6464610a0a3b35\n"
".quad 0x2c35662520323366,0x6630202c31662520,0x3030304346463343,0x33662e6464610a3b\n"
".quad 0x25202c3666252032,0x33436630202c3266,0x0a3b303030434642,0x39203220636f6c2e\n"
".quad 0x2e6c756d0a312030,0x2c37662520323366,0x6625202c36662520,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x202c356625202c38,0x376625202c356625,0x6c2e707465730a3b\n"
".quad 0x7025203233662e74,0x202c386625202c35,0x3030303832346630,0x706c65730a3b3030\n"
".quad 0x387225203233622e,0x2c30202c3031202c,0x74730a3b35702520,0x622e6d617261702e\n"
".quad 0x636e75665b093233,0x306c61767465725f,0x387225202c5d302b,0x0a0a3b7465720a3b\n"
".quad 0x6d0a3a355f314242,0x25203233752e766f,0x3b3231202c363172,0x696e752e6172620a\n"
".quad 0x0a3b395f31424220,0x0a3a365f3142420a,0x203233752e766f6d,0x3131202c36317225\n"
".quad 0x6e752e6172620a3b,0x3b395f3142422069,0x3a375f3142420a0a,0x3233752e766f6d0a\n"
".quad 0x32202c3631722520,0x6e752e6172620a3b,0x3b395f3142422069,0x3a385f3142420a0a\n"
".quad 0x3233752e766f6d0a,0x33202c3631722520,0x395f3142420a0a3b,0x3220636f6c2e0a3a\n"
".quad 0x74730a3120343920,0x622e6d617261702e,0x636e75665b093233,0x306c61767465725f\n"
".quad 0x317225202c5d302b,0x0a3b7465720a3b36,0x697369762e0a0a7d,0x6e75662e20656c62\n"
".quad 0x726d31315a5f2063,0x64696c6c6f635f74,0x535f535f53665265,0x535f535f535f535f\n"
".quad 0x702e0a28665f535f,0x36622e206d617261,0x726d31315a5f2034,0x64696c6c6f635f74\n"
".quad 0x535f535f53665265,0x535f535f535f535f,0x7261705f665f535f,0x702e0a2c305f6d61\n"
".quad 0x36622e206d617261,0x726d31315a5f2034,0x64696c6c6f635f74,0x535f535f53665265\n"
".quad 0x535f535f535f535f,0x7261705f665f535f,0x702e0a2c315f6d61,0x36622e206d617261\n"
".quad 0x726d31315a5f2034,0x64696c6c6f635f74,0x535f535f53665265,0x535f535f535f535f\n"
".quad 0x7261705f665f535f,0x702e0a2c325f6d61,0x36622e206d617261,0x726d31315a5f2034\n"
".quad 0x64696c6c6f635f74,0x535f535f53665265,0x535f535f535f535f,0x7261705f665f535f\n"
".quad 0x702e0a2c335f6d61,0x36622e206d617261,0x726d31315a5f2034,0x64696c6c6f635f74\n"
".quad 0x535f535f53665265,0x535f535f535f535f,0x7261705f665f535f,0x702e0a2c345f6d61\n"
".quad 0x36622e206d617261,0x726d31315a5f2034,0x64696c6c6f635f74,0x535f535f53665265\n"
".quad 0x535f535f535f535f,0x7261705f665f535f,0x702e0a2c355f6d61,0x36622e206d617261\n"
".quad 0x726d31315a5f2034,0x64696c6c6f635f74,0x535f535f53665265,0x535f535f535f535f\n"
".quad 0x7261705f665f535f,0x702e0a2c365f6d61,0x36622e206d617261,0x726d31315a5f2034\n"
".quad 0x64696c6c6f635f74,0x535f535f53665265,0x535f535f535f535f,0x7261705f665f535f\n"
".quad 0x702e0a2c375f6d61,0x36622e206d617261,0x726d31315a5f2034,0x64696c6c6f635f74\n"
".quad 0x535f535f53665265,0x535f535f535f535f,0x7261705f665f535f,0x702e0a2c385f6d61\n"
".quad 0x33622e206d617261,0x726d31315a5f2032,0x64696c6c6f635f74,0x535f535f53665265\n"
".quad 0x535f535f535f535f,0x7261705f665f535f,0x7b0a290a395f6d61,0x662e206765722e0a\n"
".quad 0x32313c6625203233,0x6765722e0a3b3e31,0x7225203233732e20,0x722e0a3b3e37323c\n"
".quad 0x203436732e206765,0x3b3e30313c6c7225,0x61702e646c0a0a0a,0x203436752e6d6172\n"
".quad 0x5f5b202c316c7225,0x635f74726d31315a,0x66526564696c6c6f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f66,0x702e646c0a3b5d30,0x3436752e6d617261\n"
".quad 0x5b202c326c722520,0x5f74726d31315a5f,0x526564696c6c6f63,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x6d617261705f665f,0x2e646c0a3b5d315f,0x36752e6d61726170\n"
".quad 0x202c336c72252034,0x74726d31315a5f5b,0x6564696c6c6f635f,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x617261705f665f53,0x646c0a3b5d325f6d,0x752e6d617261702e\n"
".quad 0x2c346c7225203436,0x726d31315a5f5b20,0x64696c6c6f635f74,0x535f535f53665265\n"
".quad 0x535f535f535f535f,0x7261705f665f535f,0x6c0a3b5d335f6d61,0x2e6d617261702e64\n"
".quad 0x356c722520343675,0x6d31315a5f5b202c,0x696c6c6f635f7472,0x5f535f5366526564\n"
".quad 0x5f535f535f535f53,0x61705f665f535f53,0x0a3b5d345f6d6172,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x31315a5f5b202c36,0x6c6c6f635f74726d,0x535f536652656469\n"
".quad 0x535f535f535f535f,0x705f665f535f535f,0x3b5d355f6d617261,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x315a5f5b202c376c,0x6c6f635f74726d31,0x5f5366526564696c\n"
".quad 0x5f535f535f535f53,0x5f665f535f535f53,0x5d365f6d61726170,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5a5f5b202c386c72,0x6f635f74726d3131,0x5366526564696c6c\n"
".quad 0x535f535f535f535f,0x665f535f535f535f,0x375f6d617261705f,0x61702e646c0a3b5d\n"
".quad 0x203436752e6d6172,0x5f5b202c396c7225,0x635f74726d31315a,0x66526564696c6c6f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d617261705f66,0x702e646c0a3b5d38\n"
".quad 0x3233662e6d617261,0x5f5b202c31662520,0x635f74726d31315a,0x66526564696c6c6f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d617261705f66,0x636f6c2e0a3b5d39\n"
".quad 0x3120323032203220,0x203233662e646c0a,0x72255b202c326625,0x2e646c0a3b5d326c\n"
".quad 0x2c33662520323366,0x3b5d346c72255b20,0x3233662e6275730a,0x6625202c34662520\n"
".quad 0x0a3b336625202c32,0x25203233662e646c,0x6c72255b202c3566,0x2e6464610a3b5d36\n"
".quad 0x2c36662520323366,0x6625202c34662520,0x33662e646c0a3b35,0x5b202c3766252032\n"
".quad 0x730a3b5d376c7225,0x25203233662e6275,0x2c366625202c3866,0x646c0a3b37662520\n"
".quad 0x396625203233662e,0x5d386c72255b202c,0x33662e6275730a3b,0x202c303166252032\n"
".quad 0x396625202c386625,0x3233662e646c0a3b,0x5b202c3131662520,0x610a3b5d396c7225\n"
".quad 0x25203233662e6464,0x316625202c323166,0x3b31316625202c30,0x203220636f6c2e0a\n"
".quad 0x646c0a3120333032,0x316625203233662e,0x356c72255b202c33,0x33662e646c0a3b5d\n"
".quad 0x202c343166252032,0x0a3b5d336c72255b,0x203233662e627573,0x6625202c35316625\n"
".quad 0x33316625202c3431,0x33662e6464610a3b,0x202c363166252032,0x6625202c35316625\n"
".quad 0x662e6464610a3b35,0x2c37316625203233,0x25202c3631662520,0x2e6275730a3b3766\n"
".quad 0x3831662520323366,0x202c37316625202c,0x6275730a3b396625,0x316625203233662e\n"
".quad 0x2c38316625202c39,0x2e0a3b3131662520,0x3032203220636f6c,0x662e646c0a312037\n"
".quad 0x2c30326625203233,0x3b5d316c72255b20,0x2e6e722e616d660a,0x3132662520323366\n"
".quad 0x202c30326625202c,0x3030303030436630,0x3b326625202c3030,0x3233662e6464610a\n"
".quad 0x25202c3232662520,0x316625202c313266,0x662e6464610a3b34,0x2c33326625203233\n"
".quad 0x25202c3232662520,0x2e6464610a3b3366,0x3432662520323366,0x202c33326625202c\n"
".quad 0x6d660a3b33316625,0x3233662e6e722e61,0x25202c3532662520,0x30346630202c3566\n"
".quad 0x202c303030303038,0x6d660a3b34326625,0x3233662e6e722e61,0x25202c3632662520\n"
".quad 0x30346630202c3766,0x202c303030303038,0x6d660a3b35326625,0x3233662e6e722e61\n"
".quad 0x25202c3732662520,0x30346630202c3966,0x202c303030303038,0x6d660a3b36326625\n"
".quad 0x3233662e6e722e61,0x25202c3832662520,0x346630202c313166,0x2c30303030303830\n"
".quad 0x6d0a3b3732662520,0x25203233662e6c75,0x316625202c393266,0x3b32316625202c32\n"
".quad 0x3233662e6c756d0a,0x25202c3033662520,0x316625202c393166,0x722e616d660a3b39\n"
".quad 0x6625203233662e6e,0x32316625202c3133,0x202c32316625202c,0x6f6d0a3b30336625\n"
".quad 0x6625203233662e76,0x30346630202c3233,0x0a3b303030303034,0x32203220636f6c2e\n"
".quad 0x67656e0a31203730,0x336625203233662e,0x3b31336625202c33,0x2e6e722e616d660a\n"
".quad 0x3433662520323366,0x202c33336625202c,0x6625202c32336625,0x636f6c2e0a3b3832\n"
".quad 0x3120393032203220,0x3233662e6c756d0a,0x25202c3533662520,0x346630202c303266\n"
".quad 0x3b30303030303430,0x3233662e67656e0a,0x25202c3633662520,0x2e616d660a3b3266\n"
".quad 0x25203233662e6e72,0x336625202c373366,0x2c32336625202c36,0x6e0a3b3533662520\n"
".quad 0x25203233662e6765,0x316625202c383366,0x722e616d660a3b34,0x6625203233662e6e\n"
".quad 0x38336625202c3933,0x202c32336625202c,0x656e0a3b37336625,0x6625203233662e67\n"
".quad 0x3b336625202c3034,0x2e6e722e616d660a,0x3134662520323366,0x202c30346625202c\n"
".quad 0x6625202c32336625,0x2e67656e0a3b3933,0x3234662520323366,0x0a3b33316625202c\n"
".quad 0x662e6e722e616d66,0x2c33346625203233,0x25202c3234662520,0x346625202c323366\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x31336625202c3434,0x303430346630202c\n"
".quad 0x6625202c30303030,0x2e6275730a3b3334,0x3534662520323366,0x25202c336625202c\n"
".quad 0x636f6c2e0a3b3266,0x3120313132203220,0x3233662e6464610a,0x25202c3634662520\n"
".quad 0x3b356625202c3566,0x3233662e6464610a,0x25202c3734662520,0x346625202c353466\n"
".quad 0x662e6464610a3b36,0x2c38346625203233,0x6625202c37662520,0x662e6275730a3b37\n"
".quad 0x2c39346625203233,0x25202c3734662520,0x6464610a3b383466,0x356625203233662e\n"
".quad 0x202c396625202c30,0x6275730a3b396625,0x356625203233662e,0x2c39346625202c31\n"
".quad 0x610a3b3035662520,0x25203233662e6464,0x316625202c323566,0x3b31316625202c31\n"
".quad 0x3233662e6464610a,0x25202c3335662520,0x356625202c313566,0x662e6275730a3b32\n"
".quad 0x2c34356625203233,0x25202c3331662520,0x6f6c2e0a3b343166,0x2032313220322063\n"
".quad 0x33662e6464610a31,0x202c353566252032,0x6625202c34356625,0x2e6464610a3b3634\n"
".quad 0x3635662520323366,0x202c35356625202c,0x75730a3b38346625,0x6625203233662e62\n"
".quad 0x36356625202c3735,0x0a3b30356625202c,0x203233662e627573,0x6625202c38356625\n"
".quad 0x32356625202c3735,0x3220636f6c2e0a3b,0x730a312033313220,0x25203233662e6275\n"
".quad 0x326625202c393566,0x0a3b34316625202c,0x203233662e646461,0x6625202c30366625\n"
".quad 0x3b336625202c3935,0x3233662e6275730a,0x25202c3136662520,0x316625202c303666\n"
".quad 0x662e67656e0a3b33,0x2c32366625203233,0x660a3b3931662520,0x33662e6e722e616d\n"
".quad 0x202c333666252032,0x6625202c32366625,0x39326625202c3931,0x33662e6275730a3b\n"
".quad 0x202c343666252032,0x6625202c31366625,0x636f6c2e0a3b3336,0x3120343132203220\n"
".quad 0x3233662e6275730a,0x25202c3536662520,0x3b376625202c3566,0x3233662e6464610a\n"
".quad 0x25202c3636662520,0x396625202c353666,0x33662e6275730a3b,0x202c373666252032\n"
".quad 0x6625202c36366625,0x2e67656e0a3b3131,0x3836662520323366,0x0a3b32316625202c\n"
".quad 0x662e6e722e616d66,0x2c39366625203233,0x25202c3836662520,0x366625202c393166\n"
".quad 0x662e6275730a3b37,0x2c30376625203233,0x25202c3434662520,0x6f6c2e0a3b343366\n"
".quad 0x2033323220322063,0x6e722e616d660a31,0x376625203233662e,0x2c30376625202c31\n"
".quad 0x3833454442663020,0x326625202c393345,0x33662e74730a3b30,0x5d316c72255b2032\n"
".quad 0x0a3b31376625202c,0x203233662e6c756d,0x6625202c32376625,0x43426630202c3433\n"
".quad 0x0a3b383345383345,0x203233662e766f6d,0x6630202c33376625,0x3933453833364433\n"
".quad 0x3220636f6c2e0a3b,0x6e0a312035323220,0x25203233662e6765,0x346625202c343766\n"
".quad 0x722e616d660a3b34,0x6625203233662e6e,0x34376625202c3537,0x202c33376625202c\n"
".quad 0x6f6d0a3b32376625,0x6625203233662e76,0x45336630202c3637,0x0a3b424141414132\n"
".quad 0x32203220636f6c2e,0x67656e0a31203532,0x376625203233662e,0x3b33356625202c37\n"
".quad 0x2e6e722e616d660a,0x3837662520323366,0x202c37376625202c,0x6625202c36376625\n"
".quad 0x2e6c756d0a3b3537,0x3937662520323366,0x202c34366625202c,0x766f6d0a3b316625\n"
".quad 0x386625203233662e,0x3845336630202c30,0x2e0a3b3030303030,0x3232203220636f6c\n"
".quad 0x2e616d660a312035,0x25203233662e6e72,0x376625202c313866,0x3845336630202c39\n"
".quad 0x25202c3030303030,0x2e646c0a3b383766,0x3238662520323366,0x5d326c72255b202c\n"
".quad 0x33662e6275730a3b,0x202c333866252032,0x6625202c32386625,0x662e74730a3b3138\n"
".quad 0x326c72255b203233,0x3b33386625202c5d,0x203220636f6c2e0a,0x656e0a3120323332\n"
".quad 0x6625203233662e67,0x38356625202c3438,0x3220636f6c2e0a3b,0x660a312036323220\n"
".quad 0x33662e6e722e616d,0x202c353866252032,0x6625202c34386625,0x35376625202c3637\n"
".quad 0x33662e67656e0a3b,0x202c363866252032,0x6d660a3b39376625,0x3233662e6e722e61\n"
".quad 0x25202c3738662520,0x386625202c363866,0x3b35386625202c30,0x203233662e646c0a\n"
".quad 0x255b202c38386625,0x75730a3b5d336c72,0x6625203233662e62,0x38386625202c3938\n"
".quad 0x0a3b37386625202c,0x5b203233662e7473,0x25202c5d336c7225,0x6f6c2e0a3b393866\n"
".quad 0x2037323220322063,0x6e722e616d660a31,0x396625203233662e,0x2c33356625202c30\n"
".quad 0x4141324533663020,0x376625202c424141,0x722e616d660a3b35,0x6625203233662e6e\n"
".quad 0x39376625202c3139,0x303845336630202c,0x6625202c30303030,0x662e646c0a3b3039\n"
".quad 0x2c32396625203233,0x3b5d346c72255b20,0x3233662e6275730a,0x25202c3339662520\n"
".quad 0x396625202c323966,0x33662e74730a3b31,0x5d346c72255b2032,0x0a3b33396625202c\n"
".quad 0x32203220636f6c2e,0x616d660a31203832,0x203233662e6e722e,0x6625202c34396625\n"
".quad 0x45336630202c3835,0x202c424141414132,0x6d660a3b35376625,0x3233662e6e722e61\n"
".quad 0x25202c3539662520,0x386625202c363866,0x3b34396625202c30,0x203233662e646c0a\n"
".quad 0x255b202c36396625,0x75730a3b5d356c72,0x6625203233662e62,0x36396625202c3739\n"
".quad 0x0a3b35396625202c,0x5b203233662e7473,0x25202c5d356c7225,0x6f6c2e0a3b373966\n"
".quad 0x2039323220322063,0x33662e6c756d0a31,0x202c383966252032,0x6630202c34346625\n"
".quad 0x3833453833454333,0x6e722e616d660a3b,0x396625203233662e,0x2c34336625202c39\n"
".quad 0x3833364433663020,0x396625202c393345,0x662e766f6d0a3b38,0x3030316625203233\n"
".quad 0x414144336630202c,0x6c2e0a3b42414141,0x393232203220636f,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x356625202c313031,0x4144336630202c33,0x25202c4241414141\n"
".quad 0x616d660a3b393966,0x203233662e6e722e,0x25202c3230316625,0x336630202c383566\n"
".quad 0x2c42414141414144,0x0a3b313031662520,0x203233662e6c756d,0x25202c3330316625\n"
".quad 0x316625202c393666,0x6e722e616d660a3b,0x316625203233662e,0x30316625202c3430\n"
".quad 0x3845336630202c33,0x25202c3030303030,0x646c0a3b32303166,0x316625203233662e\n"
".quad 0x6c72255b202c3530,0x2e6275730a3b5d36,0x3031662520323366,0x3530316625202c36\n"
".quad 0x3b3430316625202c,0x203233662e74730a,0x202c5d366c72255b,0x2e0a3b3630316625\n"
".quad 0x3332203220636f6c,0x2e616d660a312030,0x25203233662e6e72,0x6625202c37303166\n"
".quad 0x30316625202c3737,0x3b39396625202c30,0x2e6e722e616d660a,0x3031662520323366\n"
".quad 0x2c38356625202c38,0x4141414433663020,0x316625202c424141,0x636f6c2e0a3b3730\n"
".quad 0x3120323332203220,0x3233662e67656e0a,0x202c393031662520,0x2e0a3b3330316625\n"
".quad 0x3332203220636f6c,0x2e616d660a312030,0x25203233662e6e72,0x6625202c30313166\n"
".quad 0x386625202c393031,0x3830316625202c30,0x3233662e646c0a3b,0x202c313131662520\n"
".quad 0x0a3b5d376c72255b,0x203233662e627573,0x25202c3231316625,0x6625202c31313166\n"
".quad 0x2e74730a3b303131,0x6c72255b20323366,0x31316625202c5d37,0x20636f6c2e0a3b32\n"
".quad 0x0a31203133322032,0x662e6e722e616d66,0x3331316625203233,0x202c34386625202c\n"
".quad 0x25202c3030316625,0x6d660a3b37303166,0x3233662e6e722e61,0x202c343131662520\n"
".quad 0x30202c3330316625,0x3030303038453366,0x3331316625202c30,0x3233662e646c0a3b\n"
".quad 0x202c353131662520,0x0a3b5d386c72255b,0x203233662e627573,0x25202c3631316625\n"
".quad 0x6625202c35313166,0x2e74730a3b343131,0x6c72255b20323366,0x31316625202c5d38\n"
".quad 0x20636f6c2e0a3b36,0x0a31203233322032,0x662e6e722e616d66,0x3731316625203233\n"
".quad 0x202c34386625202c,0x25202c3030316625,0x6d660a3b31303166,0x3233662e6e722e61\n"
".quad 0x202c383131662520,0x25202c3930316625,0x316625202c303866,0x662e646c0a3b3731\n"
".quad 0x3931316625203233,0x5d396c72255b202c,0x33662e6275730a3b,0x2c30323166252032\n"
".quad 0x202c393131662520,0x730a3b3831316625,0x255b203233662e74,0x6625202c5d396c72\n"
".quad 0x6f6c2e0a3b303231,0x2031343220322063,0x7d0a3b7465720a32,0x62697369762e0a0a\n"
".quad 0x636e75662e20656c,0x75654e31315a5f20,0x747361456e6e616d,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x61702e0a28695f53,0x3436622e206d6172,0x75654e31315a5f20\n"
".quad 0x747361456e6e616d,0x5f535f535f536652,0x5f535f535f535f53,0x617261705f695f53\n"
".quad 0x61702e0a2c305f6d,0x3436622e206d6172,0x75654e31315a5f20,0x747361456e6e616d\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x617261705f695f53,0x61702e0a2c315f6d\n"
".quad 0x3436622e206d6172,0x75654e31315a5f20,0x747361456e6e616d,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x61702e0a2c325f6d,0x3436622e206d6172\n"
".quad 0x75654e31315a5f20,0x747361456e6e616d,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x617261705f695f53,0x61702e0a2c335f6d,0x3436622e206d6172,0x75654e31315a5f20\n"
".quad 0x747361456e6e616d,0x5f535f535f536652,0x5f535f535f535f53,0x617261705f695f53\n"
".quad 0x61702e0a2c345f6d,0x3436622e206d6172,0x75654e31315a5f20,0x747361456e6e616d\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x617261705f695f53,0x61702e0a2c355f6d\n"
".quad 0x3436622e206d6172,0x75654e31315a5f20,0x747361456e6e616d,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x61702e0a2c365f6d,0x3436622e206d6172\n"
".quad 0x75654e31315a5f20,0x747361456e6e616d,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x617261705f695f53,0x61702e0a2c375f6d,0x3436622e206d6172,0x75654e31315a5f20\n"
".quad 0x747361456e6e616d,0x5f535f535f536652,0x5f535f535f535f53,0x617261705f695f53\n"
".quad 0x61702e0a2c385f6d,0x3233622e206d6172,0x75654e31315a5f20,0x747361456e6e616d\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x617261705f695f53,0x0a7b0a290a395f6d\n"
".quad 0x33662e206765722e,0x3e37333c66252032,0x2e206765722e0a3b,0x3c70252064657270\n"
".quad 0x6765722e0a3b3e33,0x7225203233732e20,0x722e0a3b3e36323c,0x203436732e206765\n"
".quad 0x3b3e37323c6c7225,0x61702e646c0a0a0a,0x203233752e6d6172,0x5a5f5b202c317225\n"
".quad 0x6e616d75654e3131,0x536652747361456e,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x395f6d617261705f,0x2e707465730a3b5d,0x25203233732e7165,0x2c317225202c3170\n"
".quad 0x317025400a3b3020,0x3342422061726220,0x2e646c0a0a3b335f,0x33752e6d61726170\n"
".quad 0x202c353272252032,0x75654e31315a5f5b,0x747361456e6e616d,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x65730a3b5d395f6d,0x33732e656e2e7074\n"
".quad 0x25202c3270252032,0x373637202c353272,0x6220327025400a3b,0x345f334242206172\n"
".quad 0x61702e646c0a0a3b,0x203436752e6d6172,0x5b202c32316c7225,0x6d75654e31315a5f\n"
".quad 0x52747361456e6e61,0x535f535f535f5366,0x535f535f535f535f,0x6d617261705f695f\n"
".quad 0x6f6c2e0a3b5d325f,0x2032353220322063,0x3233662e646c0a31,0x255b202c31662520\n"
".quad 0x6c0a3b5d32316c72,0x2e6d617261702e64,0x316c722520343675,0x31315a5f5b202c36\n"
".quad 0x456e6e616d75654e,0x535f536652747361,0x535f535f535f535f,0x705f695f535f535f\n"
".quad 0x3b5d345f6d617261,0x203220636f6c2e0a,0x74730a3120323532,0x72255b203233662e\n"
".quad 0x6625202c5d36316c,0x61702e646c0a3b31,0x203436752e6d6172,0x5b202c39316c7225\n"
".quad 0x6d75654e31315a5f,0x52747361456e6e61,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x6d617261705f695f,0x6f6c2e0a3b5d355f,0x2033353220322063,0x3233662e646c0a31\n"
".quad 0x255b202c32662520,0x6c0a3b5d39316c72,0x2e6d617261702e64,0x326c722520343675\n"
".quad 0x31315a5f5b202c34,0x456e6e616d75654e,0x535f536652747361,0x535f535f535f535f\n"
".quad 0x705f695f535f535f,0x3b5d385f6d617261,0x203220636f6c2e0a,0x74730a3120333532\n"
".quad 0x72255b203233662e,0x6625202c5d34326c,0x752e6172620a3b32,0x345f33424220696e\n"
".quad 0x335f3342420a0a3b,0x7261702e646c0a3a,0x25203436752e6d61,0x5f5b202c37316c72\n"
".quad 0x616d75654e31315a,0x6652747361456e6e,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d34,0x3120383432203220,0x203233662e646c0a\n"
".quad 0x72255b202c336625,0x646c0a3b5d37316c,0x752e6d617261702e,0x33316c7225203436\n"
".quad 0x4e31315a5f5b202c,0x61456e6e616d7565,0x5f535f5366527473,0x5f535f535f535f53\n"
".quad 0x61705f695f535f53,0x0a3b5d325f6d6172,0x32203220636f6c2e,0x2e74730a31203834\n"
".quad 0x6c72255b20323366,0x336625202c5d3331,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c35326c72,0x616d75654e31315a,0x6652747361456e6e,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x636f6c2e0a3b5d38,0x3120393432203220\n"
".quad 0x203233662e646c0a,0x72255b202c346625,0x646c0a3b5d35326c,0x752e6d617261702e\n"
".quad 0x30326c7225203436,0x4e31315a5f5b202c,0x61456e6e616d7565,0x5f535f5366527473\n"
".quad 0x5f535f535f535f53,0x61705f695f535f53,0x0a3b5d355f6d6172,0x32203220636f6c2e\n"
".quad 0x2e74730a31203934,0x6c72255b20323366,0x346625202c5d3032,0x345f3342420a0a3b\n"
".quad 0x7261702e646c0a3a,0x25203436752e6d61,0x5f5b202c30316c72,0x616d75654e31315a\n"
".quad 0x6652747361456e6e,0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d617261705f69\n"
".quad 0x636f6c2e0a3b5d30,0x3120383532203220,0x203233662e646c0a,0x72255b202c356625\n"
".quad 0x646c0a3b5d30316c,0x752e6d617261702e,0x34316c7225203436,0x4e31315a5f5b202c\n"
".quad 0x61456e6e616d7565,0x5f535f5366527473,0x5f535f535f535f53,0x61705f695f535f53\n"
".quad 0x0a3b5d325f6d6172,0x32203220636f6c2e,0x2e646c0a31203835,0x2c36662520323366\n"
".quad 0x5d34316c72255b20,0x33662e6464610a3b,0x25202c3766252032,0x3b366625202c3566\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c38316c,0x6e616d75654e3131\n"
".quad 0x536652747361456e,0x535f535f535f535f,0x695f535f535f535f,0x345f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203835322032,0x25203233662e646c,0x6c72255b202c3866\n"
".quad 0x6464610a3b5d3831,0x396625203233662e,0x25202c376625202c,0x702e646c0a3b3866\n"
".quad 0x3436752e6d617261,0x202c31316c722520,0x75654e31315a5f5b,0x747361456e6e616d\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x617261705f695f53,0x6c2e0a3b5d315f6d\n"
".quad 0x383532203220636f,0x33662e646c0a3120,0x202c303166252032,0x3b5d31316c72255b\n"
".quad 0x3233662e6464610a,0x25202c3131662520,0x316625202c303166,0x662e6464610a3b30\n"
".quad 0x2c32316625203233,0x6625202c39662520,0x702e646c0a3b3131,0x3436752e6d617261\n"
".quad 0x202c31326c722520,0x75654e31315a5f5b,0x747361456e6e616d,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x6c2e0a3b5d355f6d,0x383532203220636f\n"
".quad 0x33662e646c0a3120,0x202c333166252032,0x3b5d31326c72255b,0x3233662e6464610a\n"
".quad 0x25202c3431662520,0x316625202c333166,0x662e6464610a3b33,0x2c35316625203233\n"
".quad 0x25202c3231662520,0x2e646c0a3b343166,0x36752e6d61726170,0x2c36326c72252034\n"
".quad 0x654e31315a5f5b20,0x7361456e6e616d75,0x535f535f53665274,0x535f535f535f535f\n"
".quad 0x7261705f695f535f,0x2e0a3b5d385f6d61,0x3532203220636f6c,0x662e646c0a312038\n"
".quad 0x2c36316625203233,0x5d36326c72255b20,0x33662e6464610a3b,0x202c373166252032\n"
".quad 0x6625202c36316625,0x2e6464610a3b3631,0x3831662520323366,0x202c35316625202c\n"
".quad 0x64610a3b37316625,0x6625203233662e64,0x38316625202c3931,0x303846426630202c\n"
".quad 0x6c2e0a3b30303030,0x303632203220636f,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x39316625202c3032,0x413246426630202c,0x6625202c42414141,0x702e646c0a3b3031\n"
".quad 0x3436752e6d617261,0x202c35316c722520,0x75654e31315a5f5b,0x747361456e6e616d\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x617261705f695f53,0x6c2e0a3b5d335f6d\n"
".quad 0x303632203220636f,0x33662e74730a3120,0x35316c72255b2032,0x3b30326625202c5d\n"
".quad 0x203220636f6c2e0a,0x646c0a3120313632,0x326625203233662e,0x316c72255b202c31\n"
".quad 0x662e646c0a3b5d38,0x2c32326625203233,0x5d34316c72255b20,0x33662e6275730a3b\n"
".quad 0x202c333266252032,0x6625202c32326625,0x2e766f6d0a3b3132,0x3432662520323366\n"
".quad 0x303046336630202c,0x6c2e0a3b30303030,0x313632203220636f,0x33662e646c0a3120\n"
".quad 0x202c353266252032,0x3b5d31326c72255b,0x2e6e722e616d660a,0x3632662520323366\n"
".quad 0x202c33326625202c,0x3030303046336630,0x35326625202c3030,0x33662e766f6d0a3b\n"
".quad 0x202c373266252032,0x4141413245336630,0x636f6c2e0a3b4241,0x3120323632203220\n"
".quad 0x3233662e67656e0a,0x25202c3832662520,0x6f6c2e0a3b393166,0x2031363220322063\n"
".quad 0x6e722e616d660a31,0x326625203233662e,0x2c38326625202c39,0x25202c3732662520\n"
".quad 0x2e646c0a3b363266,0x36752e6d61726170,0x2c33326c72252034,0x654e31315a5f5b20\n"
".quad 0x7361456e6e616d75,0x535f535f53665274,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x2e0a3b5d375f6d61,0x3632203220636f6c,0x662e74730a312031,0x326c72255b203233\n"
".quad 0x39326625202c5d33,0x3220636f6c2e0a3b,0x6c0a312032363220,0x6625203233662e64\n"
".quad 0x6c72255b202c3033,0x2e646c0a3b5d3831,0x3133662520323366,0x34316c72255b202c\n"
".quad 0x662e6275730a3b5d,0x2c32336625203233,0x25202c3133662520,0x2e646c0a3b303366\n"
".quad 0x3333662520323366,0x36326c72255b202c,0x662e67656e0a3b5d,0x2c34336625203233\n"
".quad 0x660a3b3233662520,0x33662e6e722e616d,0x202c353366252032,0x6625202c34336625\n"
".quad 0x33336625202c3432,0x6e722e616d660a3b,0x336625203233662e,0x2c38326625202c36\n"
".quad 0x25202c3732662520,0x2e646c0a3b353366,0x36752e6d61726170,0x2c32326c72252034\n"
".quad 0x654e31315a5f5b20,0x7361456e6e616d75,0x535f535f53665274,0x535f535f535f535f\n"
".quad 0x7261705f695f535f,0x2e0a3b5d365f6d61,0x3632203220636f6c,0x662e74730a312032\n"
".quad 0x326c72255b203233,0x36336625202c5d32,0x3220636f6c2e0a3b,0x720a322035363220\n"
".quad 0x2e0a0a7d0a3b7465,0x20656c6269736976,0x5a5f20636e75662e,0x6863697269443331\n"
".quad 0x527473655774656c,0x535f535f535f5366,0x535f535f535f535f,0x7261702e0a28695f\n"
".quad 0x203436622e206d61,0x6972694433315a5f,0x73655774656c6863,0x535f535f53665274\n"
".quad 0x535f535f535f535f,0x7261705f695f535f,0x702e0a2c305f6d61,0x36622e206d617261\n"
".quad 0x694433315a5f2034,0x5774656c68636972,0x535f536652747365,0x535f535f535f535f\n"
".quad 0x705f695f535f535f,0x0a2c315f6d617261,0x2e206d617261702e,0x33315a5f20343662\n"
".quad 0x656c686369726944,0x5366527473655774,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x325f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20,0x6863697269443331\n"
".quad 0x527473655774656c,0x535f535f535f5366,0x535f535f535f535f,0x6d617261705f695f\n"
".quad 0x7261702e0a2c335f,0x203436622e206d61,0x6972694433315a5f,0x73655774656c6863\n"
".quad 0x535f535f53665274,0x535f535f535f535f,0x7261705f695f535f,0x702e0a2c345f6d61\n"
".quad 0x36622e206d617261,0x694433315a5f2034,0x5774656c68636972,0x535f536652747365\n"
".quad 0x535f535f535f535f,0x705f695f535f535f,0x0a2c355f6d617261,0x2e206d617261702e\n"
".quad 0x33315a5f20343662,0x656c686369726944,0x5366527473655774,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x365f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20\n"
".quad 0x6863697269443331,0x527473655774656c,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x6d617261705f695f,0x7261702e0a2c375f,0x203436622e206d61,0x6972694433315a5f\n"
".quad 0x73655774656c6863,0x535f535f53665274,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x702e0a2c385f6d61,0x33622e206d617261,0x694433315a5f2032,0x5774656c68636972\n"
".quad 0x535f536652747365,0x535f535f535f535f,0x705f695f535f535f,0x290a395f6d617261\n"
".quad 0x206765722e0a7b0a,0x3c6625203233662e,0x65722e0a3b3e3232,0x20646572702e2067\n"
".quad 0x2e0a3b3e333c7025,0x3233732e20676572,0x3b3e31323c722520,0x732e206765722e0a\n"
".quad 0x323c6c7225203436,0x646c0a0a0a3b3e35,0x752e6d617261702e,0x202c317225203233\n"
".quad 0x72694433315a5f5b,0x655774656c686369,0x5f535f5366527473,0x5f535f535f535f53\n"
".quad 0x61705f695f535f53,0x0a3b5d395f6d6172,0x2e71652e70746573,0x2c31702520323373\n"
".quad 0x3b30202c31722520,0x726220317025400a,0x3b335f3442422061,0x7261702e646c0a0a\n"
".quad 0x25203233752e6d61,0x5a5f5b202c303272,0x6863697269443331,0x527473655774656c\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x6d617261705f695f,0x7465730a3b5d395f\n"
".quad 0x3233732e656e2e70,0x7225202c32702520,0x3b373637202c3032,0x726220327025400a\n"
".quad 0x3b345f3442422061,0x7261702e646c0a0a,0x25203436752e6d61,0x5f5b202c30316c72\n"
".quad 0x636972694433315a,0x7473655774656c68,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x617261705f695f53,0x6c2e0a3b5d325f6d,0x353732203220636f,0x33662e646c0a3120\n"
".quad 0x5b202c3166252032,0x0a3b5d30316c7225,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x315a5f5b202c3431,0x6c68636972694433,0x6652747365577465,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x636f6c2e0a3b5d34,0x3120353732203220\n"
".quad 0x203233662e74730a,0x2c5d34316c72255b,0x646c0a3b31662520,0x752e6d617261702e\n"
".quad 0x38316c7225203436,0x4433315a5f5b202c,0x74656c6863697269,0x5f53665274736557\n"
".quad 0x5f535f535f535f53,0x5f695f535f535f53,0x5d365f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x6c0a312036373220,0x6625203233662e64,0x316c72255b202c32,0x702e646c0a3b5d38\n"
".quad 0x3436752e6d617261,0x202c31326c722520,0x72694433315a5f5b,0x655774656c686369\n"
".quad 0x5f535f5366527473,0x5f535f535f535f53,0x61705f695f535f53,0x0a3b5d375f6d6172\n"
".quad 0x32203220636f6c2e,0x2e74730a31203637,0x6c72255b20323366,0x326625202c5d3132\n"
".quad 0x6e752e6172620a3b,0x3b345f3442422069,0x3a335f3442420a0a,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c35316c,0x6863697269443331,0x527473655774656c\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x6d617261705f695f,0x6f6c2e0a3b5d345f\n"
".quad 0x2031373220322063,0x3233662e646c0a31,0x255b202c33662520,0x6c0a3b5d35316c72\n"
".quad 0x2e6d617261702e64,0x316c722520343675,0x33315a5f5b202c31,0x656c686369726944\n"
".quad 0x5366527473655774,0x535f535f535f535f,0x695f535f535f535f,0x325f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203137322032,0x5b203233662e7473,0x202c5d31316c7225\n"
".quad 0x2e646c0a3b336625,0x36752e6d61726170,0x2c32326c72252034,0x694433315a5f5b20\n"
".quad 0x5774656c68636972,0x535f536652747365,0x535f535f535f535f,0x705f695f535f535f\n"
".quad 0x3b5d375f6d617261,0x203220636f6c2e0a,0x646c0a3120323732,0x346625203233662e\n"
".quad 0x32326c72255b202c,0x61702e646c0a3b5d,0x203436752e6d6172,0x5b202c39316c7225\n"
".quad 0x6972694433315a5f,0x73655774656c6863,0x535f535f53665274,0x535f535f535f535f\n"
".quad 0x7261705f695f535f,0x2e0a3b5d365f6d61,0x3732203220636f6c,0x662e74730a312032\n"
".quad 0x316c72255b203233,0x3b346625202c5d39,0x3a345f3442420a0a,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c33316c,0x6863697269443331,0x527473655774656c\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x6d617261705f695f,0x6f6c2e0a3b5d335f\n"
".quad 0x2031383220322063,0x3233662e646c0a31,0x255b202c35662520,0x6d0a3b5d33316c72\n"
".quad 0x25203233662e766f,0x44336630202c3666,0x0a3b413037443341,0x32203220636f6c2e\n"
".quad 0x616d660a31203138,0x203233662e6e722e,0x366625202c376625,0x413246336630202c\n"
".quad 0x6625202c42414141,0x61702e646c0a3b35,0x203436752e6d6172,0x5f5b202c396c7225\n"
".quad 0x636972694433315a,0x7473655774656c68,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x617261705f695f53,0x6c2e0a3b5d315f6d,0x313832203220636f,0x33662e74730a3120\n"
".quad 0x5d396c72255b2032,0x6c0a3b376625202c,0x2e6d617261702e64,0x316c722520343675\n"
".quad 0x33315a5f5b202c36,0x656c686369726944,0x5366527473655774,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x345f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203238322032\n"
".quad 0x25203233662e646c,0x6c72255b202c3866,0x2e646c0a3b5d3631,0x36752e6d61726170\n"
".quad 0x2c32316c72252034,0x694433315a5f5b20,0x5774656c68636972,0x535f536652747365\n"
".quad 0x535f535f535f535f,0x705f695f535f535f,0x3b5d325f6d617261,0x203220636f6c2e0a\n"
".quad 0x646c0a3120323832,0x396625203233662e,0x32316c72255b202c,0x662e6275730a3b5d\n"
".quad 0x2c30316625203233,0x6625202c39662520,0x662e766f6d0a3b38,0x2c31316625203233\n"
".quad 0x3030304633663020,0x2e646c0a3b303030,0x36752e6d61726170,0x2c33326c72252034\n"
".quad 0x694433315a5f5b20,0x5774656c68636972,0x535f536652747365,0x535f535f535f535f\n"
".quad 0x705f695f535f535f,0x3b5d375f6d617261,0x203220636f6c2e0a,0x646c0a3120323832\n"
".quad 0x316625203233662e,0x326c72255b202c32,0x2e67656e0a3b5d33,0x3331662520323366\n"
".quad 0x0a3b30316625202c,0x662e6e722e616d66,0x2c34316625203233,0x25202c3331662520\n"
".quad 0x316625202c313166,0x722e616d660a3b32,0x6625203233662e6e,0x2c366625202c3531\n"
".quad 0x4141324533663020,0x316625202c424141,0x61702e646c0a3b34,0x203436752e6d6172\n"
".quad 0x5b202c37316c7225,0x6972694433315a5f,0x73655774656c6863,0x535f535f53665274\n"
".quad 0x535f535f535f535f,0x7261705f695f535f,0x2e0a3b5d355f6d61,0x3832203220636f6c\n"
".quad 0x662e74730a312032,0x316c72255b203233,0x35316625202c5d37,0x3220636f6c2e0a3b\n"
".quad 0x6c0a312033383220,0x6625203233662e64,0x6c72255b202c3631,0x2e646c0a3b5d3631\n"
".quad 0x3731662520323366,0x32316c72255b202c,0x662e6275730a3b5d,0x2c38316625203233\n"
".quad 0x25202c3731662520,0x2e646c0a3b363166,0x36752e6d61726170,0x2c30326c72252034\n"
".quad 0x694433315a5f5b20,0x5774656c68636972,0x535f536652747365,0x535f535f535f535f\n"
".quad 0x705f695f535f535f,0x3b5d365f6d617261,0x203220636f6c2e0a,0x646c0a3120333832\n"
".quad 0x316625203233662e,0x326c72255b202c39,0x2e616d660a3b5d30,0x25203233662e6e72\n"
".quad 0x316625202c303266,0x3046336630202c38,0x25202c3030303030,0x616d660a3b393166\n"
".quad 0x203233662e6e722e,0x6625202c31326625,0x3245336630202c36,0x25202c4241414141\n"
".quad 0x2e646c0a3b303266,0x36752e6d61726170,0x2c34326c72252034,0x694433315a5f5b20\n"
".quad 0x5774656c68636972,0x535f536652747365,0x535f535f535f535f,0x705f695f535f535f\n"
".quad 0x3b5d385f6d617261,0x203220636f6c2e0a,0x74730a3120333832,0x72255b203233662e\n"
".quad 0x6625202c5d34326c,0x636f6c2e0a3b3132,0x3220363832203220,0x0a7d0a3b7465720a\n"
".quad 0x6c62697369762e0a,0x20636e75662e2065,0x6e756f6230315a5f,0x6652736569726164\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x7261702e0a286969,0x203436622e206d61\n"
".quad 0x6e756f6230315a5f,0x6652736569726164,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x7261702e0a2c305f,0x203436622e206d61,0x6e756f6230315a5f\n"
".quad 0x6652736569726164,0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969\n"
".quad 0x7261702e0a2c315f,0x203436622e206d61,0x6e756f6230315a5f,0x6652736569726164\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x7261702e0a2c325f\n"
".quad 0x203436622e206d61,0x6e756f6230315a5f,0x6652736569726164,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x6d617261705f6969,0x7261702e0a2c335f,0x203436622e206d61\n"
".quad 0x6e756f6230315a5f,0x6652736569726164,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x7261702e0a2c345f,0x203436622e206d61,0x6e756f6230315a5f\n"
".quad 0x6652736569726164,0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969\n"
".quad 0x7261702e0a2c355f,0x203436622e206d61,0x6e756f6230315a5f,0x6652736569726164\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x7261702e0a2c365f\n"
".quad 0x203436622e206d61,0x6e756f6230315a5f,0x6652736569726164,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x6d617261705f6969,0x7261702e0a2c375f,0x203436622e206d61\n"
".quad 0x6e756f6230315a5f,0x6652736569726164,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x7261702e0a2c385f,0x203233622e206d61,0x6e756f6230315a5f\n"
".quad 0x6652736569726164,0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969\n"
".quad 0x7261702e0a2c395f,0x203233622e206d61,0x6e756f6230315a5f,0x6652736569726164\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x0a7b0a290a30315f\n"
".quad 0x33662e206765722e,0x3e34363c66252032,0x2e206765722e0a3b,0x3c70252064657270\n"
".quad 0x65722e0a3b3e3031,0x25203233732e2067,0x2e0a3b3e34363c72,0x3436732e20676572\n"
".quad 0x3e35353c6c722520,0x702e646c0a0a0a3b,0x3233752e6d617261,0x5f5b202c32722520\n"
".quad 0x646e756f6230315a,0x5366527365697261,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x7465730a3b5d3031,0x3233732e74672e70,0x7225202c31702520\n"
".quad 0x400a3b3031202c32,0x2061726220317025,0x0a0a3b365f354242,0x6d617261702e646c\n"
".quad 0x367225203233752e,0x30315a5f5b202c31,0x697261646e756f62,0x5f535f5366527365\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x5d30315f6d617261,0x652e707465730a3b\n"
".quad 0x7025203233732e71,0x2c31367225202c34,0x347025400a3b3220,0x3542422061726220\n"
".quad 0x646c0a0a3b32315f,0x752e6d617261702e,0x2c30367225203233,0x6f6230315a5f5b20\n"
".quad 0x7365697261646e75,0x5f535f535f536652,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x0a3b5d30315f6d61,0x2e71652e70746573,0x2c35702520323373,0x33202c3036722520\n"
".quad 0x6220357025400a3b,0x335f354242206172,0x6e752e6172620a3b,0x37315f3542422069\n"
".quad 0x335f3542420a0a3b,0x7261702e646c0a3a,0x25203233752e6d61,0x5a5f5b202c393572\n"
".quad 0x61646e756f623031,0x5f53665273656972,0x5f535f535f535f53,0x69695f535f535f53\n"
".quad 0x395f6d617261705f,0x2e707465730a3b5d,0x25203233732e7165,0x39357225202c3670\n"
".quad 0x7025400a3b30202c,0x4242206172622036,0x6c0a0a3b30315f35,0x2e6d617261702e64\n"
".quad 0x3835722520323375,0x6230315a5f5b202c,0x65697261646e756f,0x535f535f53665273\n"
".quad 0x535f535f535f535f,0x61705f69695f535f,0x0a3b5d395f6d6172,0x2e656e2e70746573\n"
".quad 0x2c37702520323373,0x37202c3835722520,0x377025400a3b3736,0x3542422061726220\n"
".quad 0x646c0a0a3b31315f,0x752e6d617261702e,0x35316c7225203436,0x6230315a5f5b202c\n"
".quad 0x65697261646e756f,0x535f535f53665273,0x535f535f535f535f,0x61705f69695f535f\n"
".quad 0x0a3b5d325f6d6172,0x32203220636f6c2e,0x2e646c0a31203537,0x2c37662520323366\n"
".quad 0x5d35316c72255b20,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c35326c72\n"
".quad 0x646e756f6230315a,0x5366527365697261,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d34,0x3120353732203220,0x203233662e74730a\n"
".quad 0x2c5d35326c72255b,0x646c0a3b37662520,0x752e6d617261702e,0x39336c7225203436\n"
".quad 0x6230315a5f5b202c,0x65697261646e756f,0x535f535f53665273,0x535f535f535f535f\n"
".quad 0x61705f69695f535f,0x0a3b5d365f6d6172,0x32203220636f6c2e,0x2e646c0a31203637\n"
".quad 0x2c38662520323366,0x5d39336c72255b20,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c35346c72,0x646e756f6230315a,0x5366527365697261,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x5f6d617261705f69,0x636f6c2e0a3b5d37,0x3120363732203220\n"
".quad 0x203233662e74730a,0x2c5d35346c72255b,0x72620a3b38662520,0x424220696e752e61\n"
".quad 0x420a0a3b31315f35,0x646c0a3a365f3542,0x752e6d617261702e,0x2c33367225203233\n"
".quad 0x6f6230315a5f5b20,0x7365697261646e75,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x7261705f69695f53,0x0a3b5d30315f6d61,0x2e71652e70746573,0x2c32702520323373\n"
".quad 0x31202c3336722520,0x20327025400a3b31,0x5f35424220617262,0x702e646c0a0a3b39\n"
".quad 0x3233752e6d617261,0x5b202c3236722520,0x6e756f6230315a5f,0x6652736569726164\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x65730a3b5d30315f\n"
".quad 0x33732e656e2e7074,0x25202c3370252032,0x3b3231202c323672,0x726220337025400a\n"
".quad 0x37315f3542422061,0x61702e646c0a0a3b,0x203436752e6d6172,0x5b202c33326c7225\n"
".quad 0x6e756f6230315a5f,0x6652736569726164,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x6f6c2e0a3b5d345f,0x2032313320322063,0x3233662e646c0a31\n"
".quad 0x255b202c31662520,0x6c0a3b5d33326c72,0x2e6d617261702e64,0x316c722520343675\n"
".quad 0x30315a5f5b202c33,0x697261646e756f62,0x5f535f5366527365,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x3b5d325f6d617261,0x203220636f6c2e0a,0x74730a3120323133\n"
".quad 0x72255b203233662e,0x6625202c5d33316c,0x61702e646c0a3b31,0x203436752e6d6172\n"
".quad 0x5b202c33346c7225,0x6e756f6230315a5f,0x6652736569726164,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x6d617261705f6969,0x6f6c2e0a3b5d375f,0x2033313320322063\n"
".quad 0x3233662e646c0a31,0x255b202c32662520,0x6c0a3b5d33346c72,0x2e6d617261702e64\n"
".quad 0x336c722520343675,0x30315a5f5b202c37,0x697261646e756f62,0x5f535f5366527365\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x3b5d365f6d617261,0x203220636f6c2e0a\n"
".quad 0x74730a3120333133,0x72255b203233662e,0x6625202c5d37336c,0x61702e646c0a3b32\n"
".quad 0x203436752e6d6172,0x5b202c39346c7225,0x6e756f6230315a5f,0x6652736569726164\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x6f6c2e0a3b5d385f\n"
".quad 0x2034313320322063,0x3233662e646c0a31,0x255b202c33662520,0x6c0a3b5d39346c72\n"
".quad 0x2e6d617261702e64,0x336c722520343675,0x30315a5f5b202c31,0x697261646e756f62\n"
".quad 0x5f535f5366527365,0x5f535f535f535f53,0x705f69695f535f53,0x3b5d355f6d617261\n"
".quad 0x203220636f6c2e0a,0x74730a3120343133,0x72255b203233662e,0x6625202c5d31336c\n"
".quad 0x20636f6c2e0a3b33,0x0a32203631332032,0x42420a0a3b746572,0x2e646c0a3a395f35\n"
".quad 0x36752e6d61726170,0x2c34316c72252034,0x6f6230315a5f5b20,0x7365697261646e75\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x7261705f69695f53,0x2e0a3b5d325f6d61\n"
".quad 0x3033203220636f6c,0x662e646c0a312036,0x202c346625203233,0x3b5d34316c72255b\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c34326c,0x61646e756f623031\n"
".quad 0x5f53665273656972,0x5f535f535f535f53,0x69695f535f535f53,0x345f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203630332032,0x5b203233662e7473,0x202c5d34326c7225\n"
".quad 0x2e646c0a3b346625,0x36752e6d61726170,0x2c38336c72252034,0x6f6230315a5f5b20\n"
".quad 0x7365697261646e75,0x5f535f535f536652,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x2e0a3b5d365f6d61,0x3033203220636f6c,0x662e646c0a312037,0x202c356625203233\n"
".quad 0x3b5d38336c72255b,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c34346c\n"
".quad 0x61646e756f623031,0x5f53665273656972,0x5f535f535f535f53,0x69695f535f535f53\n"
".quad 0x375f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203730332032,0x5b203233662e7473\n"
".quad 0x202c5d34346c7225,0x2e646c0a3b356625,0x36752e6d61726170,0x2c32336c72252034\n"
".quad 0x6f6230315a5f5b20,0x7365697261646e75,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x7261705f69695f53,0x2e0a3b5d355f6d61,0x3033203220636f6c,0x662e646c0a312038\n"
".quad 0x202c366625203233,0x3b5d32336c72255b,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5a5f5b202c30356c,0x61646e756f623031,0x5f53665273656972,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x385f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203830332032\n"
".quad 0x5b203233662e7473,0x202c5d30356c7225,0x6f6c2e0a3b366625,0x2036313320322063\n"
".quad 0x0a0a3b7465720a32,0x0a3a30315f354242,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x315a5f5b202c3632,0x7261646e756f6230,0x535f536652736569,0x535f535f535f535f\n"
".quad 0x5f69695f535f535f,0x5d345f6d61726170,0x3220636f6c2e0a3b,0x6c0a312031373220\n"
".quad 0x6625203233662e64,0x326c72255b202c39,0x702e646c0a3b5d36,0x3436752e6d617261\n"
".quad 0x202c36316c722520,0x756f6230315a5f5b,0x527365697261646e,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x6c2e0a3b5d325f6d,0x313732203220636f\n"
".quad 0x33662e74730a3120,0x36316c72255b2032,0x0a3b396625202c5d,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3634,0x7261646e756f6230,0x535f536652736569\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x5d375f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x6c0a312032373220,0x6625203233662e64,0x6c72255b202c3031,0x2e646c0a3b5d3634\n"
".quad 0x36752e6d61726170,0x2c30346c72252034,0x6f6230315a5f5b20,0x7365697261646e75\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x7261705f69695f53,0x2e0a3b5d365f6d61\n"
".quad 0x3732203220636f6c,0x662e74730a312032,0x346c72255b203233,0x30316625202c5d30\n"
".quad 0x315f3542420a0a3b,0x61702e646c0a3a31,0x203436752e6d6172,0x5b202c31326c7225\n"
".quad 0x6e756f6230315a5f,0x6652736569726164,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x6f6c2e0a3b5d335f,0x2031383220322063,0x3233662e646c0a31\n"
".quad 0x5b202c3131662520,0x0a3b5d31326c7225,0x203233662e766f6d,0x6630202c32316625\n"
".quad 0x4130374433414433,0x3220636f6c2e0a3b,0x660a312031383220,0x33662e6e722e616d\n"
".quad 0x202c333166252032,0x6630202c32316625,0x4241414141324633,0x0a3b31316625202c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3131,0x7261646e756f6230\n"
".quad 0x535f536652736569,0x535f535f535f535f,0x5f69695f535f535f,0x5d315f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x730a312031383220,0x255b203233662e74,0x25202c5d31316c72\n"
".quad 0x2e646c0a3b333166,0x36752e6d61726170,0x2c37326c72252034,0x6f6230315a5f5b20\n"
".quad 0x7365697261646e75,0x5f535f535f536652,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x2e0a3b5d345f6d61,0x3832203220636f6c,0x662e646c0a312032,0x2c34316625203233\n"
".quad 0x5d37326c72255b20,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c37316c72\n"
".quad 0x646e756f6230315a,0x5366527365697261,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d32,0x3120323832203220,0x203233662e646c0a\n"
".quad 0x255b202c35316625,0x730a3b5d37316c72,0x25203233662e6275,0x316625202c363166\n"
".quad 0x3b34316625202c35,0x3233662e766f6d0a,0x30202c3731662520,0x3030303030463366\n"
".quad 0x61702e646c0a3b30,0x203436752e6d6172,0x5b202c37346c7225,0x6e756f6230315a5f\n"
".quad 0x6652736569726164,0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969\n"
".quad 0x6f6c2e0a3b5d375f,0x2032383220322063,0x3233662e646c0a31,0x5b202c3831662520\n"
".quad 0x0a3b5d37346c7225,0x203233662e67656e,0x6625202c39316625,0x2e616d660a3b3631\n"
".quad 0x25203233662e6e72,0x316625202c303266,0x2c37316625202c39,0x660a3b3831662520\n"
".quad 0x33662e6e722e616d,0x202c313266252032,0x6630202c32316625,0x4241414141324533\n"
".quad 0x0a3b30326625202c,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3333\n"
".quad 0x7261646e756f6230,0x535f536652736569,0x535f535f535f535f,0x5f69695f535f535f\n"
".quad 0x5d355f6d61726170,0x3220636f6c2e0a3b,0x730a312032383220,0x255b203233662e74\n"
".quad 0x25202c5d33336c72,0x6f6c2e0a3b313266,0x2033383220322063,0x3233662e646c0a31\n"
".quad 0x5b202c3232662520,0x0a3b5d37326c7225,0x25203233662e646c,0x72255b202c333266\n"
".quad 0x75730a3b5d37316c,0x6625203233662e62,0x33326625202c3432,0x0a3b32326625202c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3134,0x7261646e756f6230\n"
".quad 0x535f536652736569,0x535f535f535f535f,0x5f69695f535f535f,0x5d365f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312033383220,0x6625203233662e64,0x6c72255b202c3532\n"
".quad 0x616d660a3b5d3134,0x203233662e6e722e,0x6625202c36326625,0x46336630202c3432\n"
".quad 0x202c303030303030,0x6d660a3b35326625,0x3233662e6e722e61,0x25202c3732662520\n"
".quad 0x336630202c323166,0x2c42414141413245,0x6c0a3b3632662520,0x2e6d617261702e64\n"
".quad 0x356c722520343675,0x30315a5f5b202c31,0x697261646e756f62,0x5f535f5366527365\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x3b5d385f6d617261,0x203220636f6c2e0a\n"
".quad 0x74730a3120333832,0x72255b203233662e,0x6625202c5d31356c,0x636f6c2e0a3b3732\n"
".quad 0x3220363133203220,0x420a0a3b7465720a,0x6c0a3a32315f3542,0x2e6d617261702e64\n"
".quad 0x3735722520323375,0x6230315a5f5b202c,0x65697261646e756f,0x535f535f53665273\n"
".quad 0x535f535f535f535f,0x61705f69695f535f,0x0a3b5d395f6d6172,0x2e71652e70746573\n"
".quad 0x2c38702520323373,0x30202c3735722520,0x6220387025400a3b,0x315f354242206172\n"
".quad 0x702e646c0a0a3b35,0x3233752e6d617261,0x5b202c3635722520,0x6e756f6230315a5f\n"
".quad 0x6652736569726164,0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969\n"
".quad 0x7465730a3b5d395f,0x3233732e656e2e70,0x7225202c39702520,0x3b373637202c3635\n"
".quad 0x726220397025400a,0x36315f3542422061,0x61702e646c0a0a3b,0x203436752e6d6172\n"
".quad 0x5b202c38316c7225,0x6e756f6230315a5f,0x6652736569726164,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x6d617261705f6969,0x6f6c2e0a3b5d325f,0x2032353220322063\n"
".quad 0x3233662e646c0a31,0x5b202c3832662520,0x0a3b5d38316c7225,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3832,0x7261646e756f6230,0x535f536652736569\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x5d345f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x730a312032353220,0x255b203233662e74,0x25202c5d38326c72,0x2e646c0a3b383266\n"
".quad 0x36752e6d61726170,0x2c34336c72252034,0x6f6230315a5f5b20,0x7365697261646e75\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x7261705f69695f53,0x2e0a3b5d355f6d61\n"
".quad 0x3532203220636f6c,0x662e646c0a312033,0x2c39326625203233,0x5d34336c72255b20\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c32356c72,0x646e756f6230315a\n"
".quad 0x5366527365697261,0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69\n"
".quad 0x636f6c2e0a3b5d38,0x3120333532203220,0x203233662e74730a,0x2c5d32356c72255b\n"
".quad 0x620a3b3932662520,0x4220696e752e6172,0x0a0a3b36315f3542,0x0a3a35315f354242\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3932,0x7261646e756f6230\n"
".quad 0x535f536652736569,0x535f535f535f535f,0x5f69695f535f535f,0x5d345f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312038343220,0x6625203233662e64,0x6c72255b202c3033\n"
".quad 0x2e646c0a3b5d3932,0x36752e6d61726170,0x2c39316c72252034,0x6f6230315a5f5b20\n"
".quad 0x7365697261646e75,0x5f535f535f536652,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x2e0a3b5d325f6d61,0x3432203220636f6c,0x662e74730a312038,0x316c72255b203233\n"
".quad 0x30336625202c5d39,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c33356c72\n"
".quad 0x646e756f6230315a,0x5366527365697261,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d38,0x3120393432203220,0x203233662e646c0a\n"
".quad 0x255b202c31336625,0x6c0a3b5d33356c72,0x2e6d617261702e64,0x336c722520343675\n"
".quad 0x30315a5f5b202c35,0x697261646e756f62,0x5f535f5366527365,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x3b5d355f6d617261,0x203220636f6c2e0a,0x74730a3120393432\n"
".quad 0x72255b203233662e,0x6625202c5d35336c,0x3542420a0a3b3133,0x2e646c0a3a36315f\n"
".quad 0x36752e6d61726170,0x2c30316c72252034,0x6f6230315a5f5b20,0x7365697261646e75\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x7261705f69695f53,0x2e0a3b5d305f6d61\n"
".quad 0x3532203220636f6c,0x662e646c0a312038,0x2c32336625203233,0x5d30316c72255b20\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c30326c72,0x646e756f6230315a\n"
".quad 0x5366527365697261,0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69\n"
".quad 0x636f6c2e0a3b5d32,0x3120383532203220,0x203233662e646c0a,0x255b202c33336625\n"
".quad 0x610a3b5d30326c72,0x25203233662e6464,0x336625202c343366,0x3b33336625202c32\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c30336c,0x61646e756f623031\n"
".quad 0x5f53665273656972,0x5f535f535f535f53,0x69695f535f535f53,0x345f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203835322032,0x25203233662e646c,0x72255b202c353366\n"
".quad 0x64610a3b5d30336c,0x6625203233662e64,0x34336625202c3633,0x0a3b35336625202c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3231,0x7261646e756f6230\n"
".quad 0x535f536652736569,0x535f535f535f535f,0x5f69695f535f535f,0x5d315f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312038353220,0x6625203233662e64,0x6c72255b202c3733\n"
".quad 0x6464610a3b5d3231,0x336625203233662e,0x2c37336625202c38,0x610a3b3733662520\n"
".quad 0x25203233662e6464,0x336625202c393366,0x3b38336625202c36,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c36336c,0x61646e756f623031,0x5f53665273656972\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x355f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203835322032,0x25203233662e646c,0x72255b202c303466,0x64610a3b5d36336c\n"
".quad 0x6625203233662e64,0x30346625202c3134,0x0a3b30346625202c,0x203233662e646461\n"
".quad 0x6625202c32346625,0x31346625202c3933,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c34356c72,0x646e756f6230315a,0x5366527365697261,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x5f6d617261705f69,0x636f6c2e0a3b5d38,0x3120383532203220\n"
".quad 0x203233662e646c0a,0x255b202c33346625,0x610a3b5d34356c72,0x25203233662e6464\n"
".quad 0x346625202c343466,0x3b33346625202c33,0x3233662e6464610a,0x25202c3534662520\n"
".quad 0x346625202c323466,0x662e6464610a3b34,0x2c36346625203233,0x30202c3534662520\n"
".quad 0x3030303038464266,0x20636f6c2e0a3b30,0x0a31203036322032,0x662e6e722e616d66\n"
".quad 0x2c37346625203233,0x30202c3634662520,0x4141414132464266,0x3b37336625202c42\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c32326c,0x61646e756f623031\n"
".quad 0x5f53665273656972,0x5f535f535f535f53,0x69695f535f535f53,0x335f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203036322032,0x5b203233662e7473,0x202c5d32326c7225\n"
".quad 0x6c2e0a3b37346625,0x313632203220636f,0x33662e646c0a3120,0x202c383466252032\n"
".quad 0x3b5d30336c72255b,0x203233662e646c0a,0x255b202c39346625,0x730a3b5d30326c72\n"
".quad 0x25203233662e6275,0x346625202c303566,0x3b38346625202c39,0x3233662e766f6d0a\n"
".quad 0x30202c3135662520,0x3030303030463366,0x20636f6c2e0a3b30,0x0a31203136322032\n"
".quad 0x25203233662e646c,0x72255b202c323566,0x6d660a3b5d36336c,0x3233662e6e722e61\n"
".quad 0x25202c3335662520,0x336630202c303566,0x2c30303030303046,0x6d0a3b3235662520\n"
".quad 0x25203233662e766f,0x336630202c343566,0x3b42414141413245,0x203220636f6c2e0a\n"
".quad 0x656e0a3120323632,0x6625203233662e67,0x36346625202c3535,0x3220636f6c2e0a3b\n"
".quad 0x660a312031363220,0x33662e6e722e616d,0x202c363566252032,0x6625202c35356625\n"
".quad 0x33356625202c3435,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c38346c72\n"
".quad 0x646e756f6230315a,0x5366527365697261,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d37,0x3120313632203220,0x203233662e74730a\n"
".quad 0x2c5d38346c72255b,0x2e0a3b3635662520,0x3632203220636f6c,0x662e646c0a312032\n"
".quad 0x2c37356625203233,0x5d30336c72255b20,0x3233662e646c0a3b,0x5b202c3835662520\n"
".quad 0x0a3b5d30326c7225,0x203233662e627573,0x6625202c39356625,0x37356625202c3835\n"
".quad 0x3233662e646c0a3b,0x5b202c3036662520,0x0a3b5d34356c7225,0x203233662e67656e\n"
".quad 0x6625202c31366625,0x2e616d660a3b3935,0x25203233662e6e72,0x366625202c323666\n"
".quad 0x2c31356625202c31,0x660a3b3036662520,0x33662e6e722e616d,0x202c333666252032\n"
".quad 0x6625202c35356625,0x32366625202c3435,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c32346c72,0x646e756f6230315a,0x5366527365697261,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x5f6d617261705f69,0x636f6c2e0a3b5d36,0x3120323632203220\n"
".quad 0x203233662e74730a,0x2c5d32346c72255b,0x0a0a3b3336662520,0x0a3a37315f354242\n"
".quad 0x33203220636f6c2e,0x7465720a32203631,0x69762e0a0a7d0a3b,0x662e20656c626973\n"
".quad 0x36315a5f20636e75,0x697261646e756f62,0x6563726f665f7365,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x702e0a2869695f53,0x36622e206d617261,0x6f6236315a5f2034\n"
".quad 0x7365697261646e75,0x66526563726f665f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x7261702e0a2c305f,0x203436622e206d61,0x6e756f6236315a5f\n"
".quad 0x665f736569726164,0x5f5366526563726f,0x5f535f535f535f53,0x69695f535f535f53\n"
".quad 0x315f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20,0x61646e756f623631\n"
".quad 0x726f665f73656972,0x5f535f5366526563,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x0a2c325f6d617261,0x2e206d617261702e,0x36315a5f20343662,0x697261646e756f62\n"
".quad 0x6563726f665f7365,0x5f535f535f536652,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x702e0a2c335f6d61,0x36622e206d617261,0x6f6236315a5f2034,0x7365697261646e75\n"
".quad 0x66526563726f665f,0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969\n"
".quad 0x7261702e0a2c345f,0x203436622e206d61,0x6e756f6236315a5f,0x665f736569726164\n"
".quad 0x5f5366526563726f,0x5f535f535f535f53,0x69695f535f535f53,0x355f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436622e20,0x61646e756f623631,0x726f665f73656972\n"
".quad 0x5f535f5366526563,0x5f535f535f535f53,0x705f69695f535f53,0x0a2c365f6d617261\n"
".quad 0x2e206d617261702e,0x36315a5f20343662,0x697261646e756f62,0x6563726f665f7365\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x7261705f69695f53,0x702e0a2c375f6d61\n"
".quad 0x36622e206d617261,0x6f6236315a5f2034,0x7365697261646e75,0x66526563726f665f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x7261702e0a2c385f\n"
".quad 0x203233622e206d61,0x6e756f6236315a5f,0x665f736569726164,0x5f5366526563726f\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x395f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203233622e20,0x61646e756f623631,0x726f665f73656972,0x5f535f5366526563\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x0a30315f6d617261,0x6765722e0a7b0a29\n"
".quad 0x6625203233662e20,0x722e0a3b3e34363c,0x646572702e206765,0x3b3e32313c702520\n"
".quad 0x732e206765722e0a,0x36363c7225203233,0x206765722e0a3b3e,0x6c7225203436732e\n"
".quad 0x0a0a0a3b3e35353c,0x6d617261702e646c,0x327225203233752e,0x6236315a5f5b202c\n"
".quad 0x65697261646e756f,0x526563726f665f73,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x617261705f69695f,0x730a3b5d30315f6d,0x732e74672e707465,0x202c317025203233\n"
".quad 0x3b3031202c327225,0x726220317025400a,0x3b365f3642422061,0x7261702e646c0a0a\n"
".quad 0x25203233752e6d61,0x5a5f5b202c333672,0x61646e756f623631,0x726f665f73656972\n"
".quad 0x5f535f5366526563,0x5f535f535f535f53,0x705f69695f535f53,0x5d30315f6d617261\n"
".quad 0x652e707465730a3b,0x7025203233732e71,0x2c33367225202c34,0x347025400a3b3220\n"
".quad 0x3642422061726220,0x646c0a0a3b30315f,0x752e6d617261702e,0x2c32367225203233\n"
".quad 0x6f6236315a5f5b20,0x7365697261646e75,0x66526563726f665f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x6d617261705f6969,0x65730a3b5d30315f,0x33732e71652e7074\n"
".quad 0x25202c3570252032,0x0a3b33202c323672,0x6172622035702540,0x0a3b335f36424220\n"
".quad 0x20696e752e617262,0x0a3b39315f364242,0x0a3a335f3642420a,0x6d617261702e646c\n"
".quad 0x357225203233752e,0x36315a5f5b202c39,0x697261646e756f62,0x6563726f665f7365\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x7261705f69695f53,0x730a3b5d395f6d61\n"
".quad 0x732e71652e707465,0x202c367025203233,0x3b30202c39357225,0x726220367025400a\n"
".quad 0x3b385f3642422061,0x7261702e646c0a0a,0x25203233752e6d61,0x5a5f5b202c383572\n"
".quad 0x61646e756f623631,0x726f665f73656972,0x5f535f5366526563,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x3b5d395f6d617261,0x656e2e707465730a,0x377025203233732e\n"
".quad 0x202c38357225202c,0x7025400a3b373637,0x4242206172622037,0x646c0a0a3b395f36\n"
".quad 0x752e6d617261702e,0x33316c7225203436,0x6236315a5f5b202c,0x65697261646e756f\n"
".quad 0x526563726f665f73,0x535f535f535f5366,0x535f535f535f535f,0x617261705f69695f\n"
".quad 0x6c2e0a3b5d325f6d,0x353732203220636f,0x33662e646c0a3120,0x5b202c3166252032\n"
".quad 0x0a3b5d33316c7225,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3332\n"
".quad 0x7261646e756f6236,0x63726f665f736569,0x535f535f53665265,0x535f535f535f535f\n"
".quad 0x61705f69695f535f,0x0a3b5d345f6d6172,0x32203220636f6c2e,0x2e74730a31203537\n"
".quad 0x6c72255b20323366,0x316625202c5d3332,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c37336c72,0x646e756f6236315a,0x6f665f7365697261,0x535f536652656372\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x5d365f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x6c0a312036373220,0x6625203233662e64,0x336c72255b202c32,0x702e646c0a3b5d37\n"
".quad 0x3436752e6d617261,0x202c33346c722520,0x756f6236315a5f5b,0x5f7365697261646e\n"
".quad 0x5366526563726f66,0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69\n"
".quad 0x636f6c2e0a3b5d37,0x3120363732203220,0x203233662e74730a,0x2c5d33346c72255b\n"
".quad 0x72620a3b32662520,0x424220696e752e61,0x42420a0a3b395f36,0x2e646c0a3a365f36\n"
".quad 0x33752e6d61726170,0x202c353672252032,0x756f6236315a5f5b,0x5f7365697261646e\n"
".quad 0x5366526563726f66,0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69\n"
".quad 0x7465730a3b5d3031,0x3233732e71652e70,0x7225202c32702520,0x0a3b3131202c3536\n"
".quad 0x6172622032702540,0x3b38315f36424220,0x7261702e646c0a0a,0x25203233752e6d61\n"
".quad 0x5a5f5b202c343672,0x61646e756f623631,0x726f665f73656972,0x5f535f5366526563\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x5d30315f6d617261,0x652e707465730a3b\n"
".quad 0x7025203233732e71,0x2c34367225202c33,0x7025400a3b323120,0x4242206172622033\n"
".quad 0x72620a3b37315f36,0x424220696e752e61,0x420a0a3b39315f36,0x646c0a3a385f3642\n"
".quad 0x752e6d617261702e,0x34326c7225203436,0x6236315a5f5b202c,0x65697261646e756f\n"
".quad 0x526563726f665f73,0x535f535f535f5366,0x535f535f535f535f,0x617261705f69695f\n"
".quad 0x6c2e0a3b5d345f6d,0x313732203220636f,0x33662e646c0a3120,0x5b202c3366252032\n"
".quad 0x0a3b5d34326c7225,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3431\n"
".quad 0x7261646e756f6236,0x63726f665f736569,0x535f535f53665265,0x535f535f535f535f\n"
".quad 0x61705f69695f535f,0x0a3b5d325f6d6172,0x32203220636f6c2e,0x2e74730a31203137\n"
".quad 0x6c72255b20323366,0x336625202c5d3431,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c34346c72,0x646e756f6236315a,0x6f665f7365697261,0x535f536652656372\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x5d375f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x6c0a312032373220,0x6625203233662e64,0x346c72255b202c34,0x702e646c0a3b5d34\n"
".quad 0x3436752e6d617261,0x202c38336c722520,0x756f6236315a5f5b,0x5f7365697261646e\n"
".quad 0x5366526563726f66,0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69\n"
".quad 0x636f6c2e0a3b5d36,0x3120323732203220,0x203233662e74730a,0x2c5d38336c72255b\n"
".quad 0x420a0a3b34662520,0x646c0a3a395f3642,0x752e6d617261702e,0x31326c7225203436\n"
".quad 0x6236315a5f5b202c,0x65697261646e756f,0x526563726f665f73,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x6c2e0a3b5d335f6d,0x313832203220636f\n"
".quad 0x33662e646c0a3120,0x5b202c3566252032,0x0a3b5d31326c7225,0x203233662e766f6d\n"
".quad 0x336630202c366625,0x3b41303744334144,0x203220636f6c2e0a,0x6d660a3120313832\n"
".quad 0x3233662e6e722e61,0x6625202c37662520,0x3246336630202c36,0x25202c4241414141\n"
".quad 0x702e646c0a3b3566,0x3436752e6d617261,0x202c31316c722520,0x756f6236315a5f5b\n"
".quad 0x5f7365697261646e,0x5366526563726f66,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d31,0x3120313832203220,0x203233662e74730a\n"
".quad 0x2c5d31316c72255b,0x646c0a3b37662520,0x752e6d617261702e,0x35326c7225203436\n"
".quad 0x6236315a5f5b202c,0x65697261646e756f,0x526563726f665f73,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x6c2e0a3b5d345f6d,0x323832203220636f\n"
".quad 0x33662e646c0a3120,0x5b202c3866252032,0x0a3b5d35326c7225,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3531,0x7261646e756f6236,0x63726f665f736569\n"
".quad 0x535f535f53665265,0x535f535f535f535f,0x61705f69695f535f,0x0a3b5d325f6d6172\n"
".quad 0x32203220636f6c2e,0x2e646c0a31203238,0x2c39662520323366,0x5d35316c72255b20\n"
".quad 0x33662e6275730a3b,0x202c303166252032,0x386625202c396625,0x33662e766f6d0a3b\n"
".quad 0x202c313166252032,0x3030303046336630,0x702e646c0a3b3030,0x3436752e6d617261\n"
".quad 0x202c35346c722520,0x756f6236315a5f5b,0x5f7365697261646e,0x5366526563726f66\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69,0x636f6c2e0a3b5d37\n"
".quad 0x3120323832203220,0x203233662e646c0a,0x255b202c32316625,0x6e0a3b5d35346c72\n"
".quad 0x25203233662e6765,0x316625202c333166,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x33316625202c3431,0x202c31316625202c,0x6d660a3b32316625,0x3233662e6e722e61\n"
".quad 0x25202c3531662520,0x45336630202c3666,0x202c424141414132,0x646c0a3b34316625\n"
".quad 0x752e6d617261702e,0x31336c7225203436,0x6236315a5f5b202c,0x65697261646e756f\n"
".quad 0x526563726f665f73,0x535f535f535f5366,0x535f535f535f535f,0x617261705f69695f\n"
".quad 0x6c2e0a3b5d355f6d,0x323832203220636f,0x33662e74730a3120,0x31336c72255b2032\n"
".quad 0x3b35316625202c5d,0x203220636f6c2e0a,0x646c0a3120333832,0x316625203233662e\n"
".quad 0x326c72255b202c36,0x662e646c0a3b5d35,0x2c37316625203233,0x5d35316c72255b20\n"
".quad 0x33662e6275730a3b,0x202c383166252032,0x6625202c37316625,0x702e646c0a3b3631\n"
".quad 0x3436752e6d617261,0x202c39336c722520,0x756f6236315a5f5b,0x5f7365697261646e\n"
".quad 0x5366526563726f66,0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69\n"
".quad 0x636f6c2e0a3b5d36,0x3120333832203220,0x203233662e646c0a,0x255b202c39316625\n"
".quad 0x660a3b5d39336c72,0x33662e6e722e616d,0x202c303266252032,0x6630202c38316625\n"
".quad 0x3030303030304633,0x0a3b39316625202c,0x662e6e722e616d66,0x2c31326625203233\n"
".quad 0x6630202c36662520,0x4241414141324533,0x0a3b30326625202c,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3934,0x7261646e756f6236,0x63726f665f736569\n"
".quad 0x535f535f53665265,0x535f535f535f535f,0x61705f69695f535f,0x0a3b5d385f6d6172\n"
".quad 0x32203220636f6c2e,0x2e74730a31203338,0x6c72255b20323366,0x326625202c5d3934\n"
".quad 0x752e6172620a3b31,0x315f36424220696e,0x5f3642420a0a3b35,0x702e646c0a3a3031\n"
".quad 0x3233752e6d617261,0x5b202c3735722520,0x6e756f6236315a5f,0x665f736569726164\n"
".quad 0x5f5366526563726f,0x5f535f535f535f53,0x69695f535f535f53,0x395f6d617261705f\n"
".quad 0x2e707465730a3b5d,0x25203233732e7165,0x37357225202c3870,0x7025400a3b30202c\n"
".quad 0x4242206172622038,0x6c0a0a3b33315f36,0x2e6d617261702e64,0x3635722520323375\n"
".quad 0x6236315a5f5b202c,0x65697261646e756f,0x526563726f665f73,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x65730a3b5d395f6d,0x33732e656e2e7074\n"
".quad 0x25202c3970252032,0x373637202c363572,0x6220397025400a3b,0x315f364242206172\n"
".quad 0x702e646c0a0a3b34,0x3436752e6d617261,0x202c36316c722520,0x756f6236315a5f5b\n"
".quad 0x5f7365697261646e,0x5366526563726f66,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d32,0x3120323532203220,0x203233662e646c0a\n"
".quad 0x255b202c32326625,0x6c0a3b5d36316c72,0x2e6d617261702e64,0x326c722520343675\n"
".quad 0x36315a5f5b202c36,0x697261646e756f62,0x6563726f665f7365,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x7261705f69695f53,0x2e0a3b5d345f6d61,0x3532203220636f6c\n"
".quad 0x662e74730a312032,0x326c72255b203233,0x32326625202c5d36,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c32336c72,0x646e756f6236315a,0x6f665f7365697261\n"
".quad 0x535f536652656372,0x535f535f535f535f,0x5f69695f535f535f,0x5d355f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312033353220,0x6625203233662e64,0x6c72255b202c3332\n"
".quad 0x2e646c0a3b5d3233,0x36752e6d61726170,0x2c30356c72252034,0x6f6236315a5f5b20\n"
".quad 0x7365697261646e75,0x66526563726f665f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x6f6c2e0a3b5d385f,0x2033353220322063,0x3233662e74730a31\n"
".quad 0x5d30356c72255b20,0x0a3b33326625202c,0x20696e752e617262,0x0a3b34315f364242\n"
".quad 0x3a33315f3642420a,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c37326c\n"
".quad 0x61646e756f623631,0x726f665f73656972,0x5f535f5366526563,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x3b5d345f6d617261,0x203220636f6c2e0a,0x646c0a3120383432\n"
".quad 0x326625203233662e,0x326c72255b202c34,0x702e646c0a3b5d37,0x3436752e6d617261\n"
".quad 0x202c37316c722520,0x756f6236315a5f5b,0x5f7365697261646e,0x5366526563726f66\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69,0x636f6c2e0a3b5d32\n"
".quad 0x3120383432203220,0x203233662e74730a,0x2c5d37316c72255b,0x6c0a3b3432662520\n"
".quad 0x2e6d617261702e64,0x356c722520343675,0x36315a5f5b202c31,0x697261646e756f62\n"
".quad 0x6563726f665f7365,0x5f535f535f536652,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x2e0a3b5d385f6d61,0x3432203220636f6c,0x662e646c0a312039,0x2c35326625203233\n"
".quad 0x5d31356c72255b20,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c33336c72\n"
".quad 0x646e756f6236315a,0x6f665f7365697261,0x535f536652656372,0x535f535f535f535f\n"
".quad 0x5f69695f535f535f,0x5d355f6d61726170,0x3220636f6c2e0a3b,0x730a312039343220\n"
".quad 0x255b203233662e74,0x25202c5d33336c72,0x42420a0a3b353266,0x646c0a3a34315f36\n"
".quad 0x752e6d617261702e,0x30316c7225203436,0x6236315a5f5b202c,0x65697261646e756f\n"
".quad 0x526563726f665f73,0x535f535f535f5366,0x535f535f535f535f,0x617261705f69695f\n"
".quad 0x6c2e0a3b5d305f6d,0x383532203220636f,0x33662e646c0a3120,0x202c363266252032\n"
".quad 0x3b5d30316c72255b,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c38316c\n"
".quad 0x61646e756f623631,0x726f665f73656972,0x5f535f5366526563,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x3b5d325f6d617261,0x203220636f6c2e0a,0x646c0a3120383532\n"
".quad 0x326625203233662e,0x316c72255b202c37,0x2e6464610a3b5d38,0x3832662520323366\n"
".quad 0x202c36326625202c,0x646c0a3b37326625,0x752e6d617261702e,0x38326c7225203436\n"
".quad 0x6236315a5f5b202c,0x65697261646e756f,0x526563726f665f73,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x6c2e0a3b5d345f6d,0x383532203220636f\n"
".quad 0x33662e646c0a3120,0x202c393266252032,0x3b5d38326c72255b,0x3233662e6464610a\n"
".quad 0x25202c3033662520,0x326625202c383266,0x61702e646c0a3b39,0x203436752e6d6172\n"
".quad 0x5b202c32316c7225,0x6e756f6236315a5f,0x665f736569726164,0x5f5366526563726f\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203835322032,0x25203233662e646c,0x72255b202c313366,0x64610a3b5d32316c\n"
".quad 0x6625203233662e64,0x31336625202c3233,0x0a3b31336625202c,0x203233662e646461\n"
".quad 0x6625202c33336625,0x32336625202c3033,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c34336c72,0x646e756f6236315a,0x6f665f7365697261,0x535f536652656372\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x5d355f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x6c0a312038353220,0x6625203233662e64,0x6c72255b202c3433,0x6464610a3b5d3433\n"
".quad 0x336625203233662e,0x2c34336625202c35,0x610a3b3433662520,0x25203233662e6464\n"
".quad 0x336625202c363366,0x3b35336625202c33,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5a5f5b202c32356c,0x61646e756f623631,0x726f665f73656972,0x5f535f5366526563\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x3b5d385f6d617261,0x203220636f6c2e0a\n"
".quad 0x646c0a3120383532,0x336625203233662e,0x356c72255b202c37,0x2e6464610a3b5d32\n"
".quad 0x3833662520323366,0x202c37336625202c,0x64610a3b37336625,0x6625203233662e64\n"
".quad 0x36336625202c3933,0x0a3b38336625202c,0x203233662e646461,0x6625202c30346625\n"
".quad 0x46426630202c3933,0x0a3b303030303038,0x32203220636f6c2e,0x616d660a31203036\n"
".quad 0x203233662e6e722e,0x6625202c31346625,0x46426630202c3034,0x202c424141414132\n"
".quad 0x646c0a3b31336625,0x752e6d617261702e,0x32326c7225203436,0x6236315a5f5b202c\n"
".quad 0x65697261646e756f,0x526563726f665f73,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x617261705f69695f,0x6c2e0a3b5d335f6d,0x303632203220636f,0x33662e74730a3120\n"
".quad 0x32326c72255b2032,0x3b31346625202c5d,0x203220636f6c2e0a,0x646c0a3120313632\n"
".quad 0x346625203233662e,0x326c72255b202c32,0x662e646c0a3b5d38,0x2c33346625203233\n"
".quad 0x5d38316c72255b20,0x33662e6275730a3b,0x202c343466252032,0x6625202c33346625\n"
".quad 0x2e766f6d0a3b3234,0x3534662520323366,0x303046336630202c,0x6c2e0a3b30303030\n"
".quad 0x313632203220636f,0x33662e646c0a3120,0x202c363466252032,0x3b5d34336c72255b\n"
".quad 0x2e6e722e616d660a,0x3734662520323366,0x202c34346625202c,0x3030303046336630\n"
".quad 0x36346625202c3030,0x33662e766f6d0a3b,0x202c383466252032,0x4141413245336630\n"
".quad 0x636f6c2e0a3b4241,0x3120323632203220,0x3233662e67656e0a,0x25202c3934662520\n"
".quad 0x6f6c2e0a3b303466,0x2031363220322063,0x6e722e616d660a31,0x356625203233662e\n"
".quad 0x2c39346625202c30,0x25202c3834662520,0x2e646c0a3b373466,0x36752e6d61726170\n"
".quad 0x2c36346c72252034,0x6f6236315a5f5b20,0x7365697261646e75,0x66526563726f665f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x6f6c2e0a3b5d375f\n"
".quad 0x2031363220322063,0x3233662e74730a31,0x5d36346c72255b20,0x0a3b30356625202c\n"
".quad 0x32203220636f6c2e,0x2e646c0a31203236,0x3135662520323366,0x38326c72255b202c\n"
".quad 0x33662e646c0a3b5d,0x202c323566252032,0x3b5d38316c72255b,0x3233662e6275730a\n"
".quad 0x25202c3335662520,0x356625202c323566,0x33662e646c0a3b31,0x202c343566252032\n"
".quad 0x3b5d32356c72255b,0x3233662e67656e0a,0x25202c3535662520,0x616d660a3b333566\n"
".quad 0x203233662e6e722e,0x6625202c36356625,0x35346625202c3535,0x0a3b34356625202c\n"
".quad 0x662e6e722e616d66,0x2c37356625203233,0x25202c3934662520,0x356625202c383466\n"
".quad 0x61702e646c0a3b36,0x203436752e6d6172,0x5b202c30346c7225,0x6e756f6236315a5f\n"
".quad 0x665f736569726164,0x5f5366526563726f,0x5f535f535f535f53,0x69695f535f535f53\n"
".quad 0x365f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203236322032,0x5b203233662e7473\n"
".quad 0x202c5d30346c7225,0x420a0a3b37356625,0x6c0a3a35315f3642,0x2e6d617261702e64\n"
".quad 0x3136722520323375,0x6236315a5f5b202c,0x65697261646e756f,0x526563726f665f73\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x617261705f69695f,0x730a3b5d30315f6d\n"
".quad 0x732e71652e707465,0x2c30317025203233,0x31202c3136722520,0x30317025400a3b31\n"
".quad 0x3642422061726220,0x646c0a0a3b38315f,0x752e6d617261702e,0x2c30367225203233\n"
".quad 0x6f6236315a5f5b20,0x7365697261646e75,0x66526563726f665f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x6d617261705f6969,0x65730a3b5d30315f,0x33732e656e2e7074\n"
".quad 0x202c313170252032,0x3231202c30367225,0x2031317025400a3b,0x5f36424220617262\n"
".quad 0x3642420a0a3b3931,0x2e646c0a3a37315f,0x36752e6d61726170,0x2c39326c72252034\n"
".quad 0x6f6236315a5f5b20,0x7365697261646e75,0x66526563726f665f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x6d617261705f6969,0x6f6c2e0a3b5d345f,0x2030343320322063\n"
".quad 0x3233662e646c0a31,0x5b202c3835662520,0x0a3b5d39326c7225,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3931,0x7261646e756f6236,0x63726f665f736569\n"
".quad 0x535f535f53665265,0x535f535f535f535f,0x61705f69695f535f,0x0a3b5d325f6d6172\n"
".quad 0x33203220636f6c2e,0x2e74730a31203034,0x6c72255b20323366,0x356625202c5d3931\n"
".quad 0x61702e646c0a3b38,0x203436752e6d6172,0x5b202c37346c7225,0x6e756f6236315a5f\n"
".quad 0x665f736569726164,0x5f5366526563726f,0x5f535f535f535f53,0x69695f535f535f53\n"
".quad 0x375f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203134332032,0x25203233662e646c\n"
".quad 0x72255b202c393566,0x646c0a3b5d37346c,0x752e6d617261702e,0x31346c7225203436\n"
".quad 0x6236315a5f5b202c,0x65697261646e756f,0x526563726f665f73,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x6c2e0a3b5d365f6d,0x313433203220636f\n"
".quad 0x33662e74730a3120,0x31346c72255b2032,0x3b39356625202c5d,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c33356c,0x61646e756f623631,0x726f665f73656972\n"
".quad 0x5f535f5366526563,0x5f535f535f535f53,0x705f69695f535f53,0x3b5d385f6d617261\n"
".quad 0x203220636f6c2e0a,0x646c0a3120323433,0x366625203233662e,0x356c72255b202c30\n"
".quad 0x702e646c0a3b5d33,0x3436752e6d617261,0x202c35336c722520,0x756f6236315a5f5b\n"
".quad 0x5f7365697261646e,0x5366526563726f66,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d35,0x3120323433203220,0x203233662e74730a\n"
".quad 0x2c5d35336c72255b,0x2e0a3b3036662520,0x3433203220636f6c,0x3b7465720a322034\n"
".quad 0x38315f3642420a0a,0x7261702e646c0a3a,0x25203436752e6d61,0x5f5b202c30326c72\n"
".quad 0x646e756f6236315a,0x6f665f7365697261,0x535f536652656372,0x535f535f535f535f\n"
".quad 0x5f69695f535f535f,0x5d325f6d61726170,0x3220636f6c2e0a3b,0x6c0a312034333320\n"
".quad 0x6625203233662e64,0x6c72255b202c3136,0x2e646c0a3b5d3032,0x36752e6d61726170\n"
".quad 0x2c30336c72252034,0x6f6236315a5f5b20,0x7365697261646e75,0x66526563726f665f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x6f6c2e0a3b5d345f\n"
".quad 0x2034333320322063,0x3233662e74730a31,0x5d30336c72255b20,0x0a3b31366625202c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3234,0x7261646e756f6236\n"
".quad 0x63726f665f736569,0x535f535f53665265,0x535f535f535f535f,0x61705f69695f535f\n"
".quad 0x0a3b5d365f6d6172,0x33203220636f6c2e,0x2e646c0a31203533,0x3236662520323366\n"
".quad 0x32346c72255b202c,0x61702e646c0a3b5d,0x203436752e6d6172,0x5b202c38346c7225\n"
".quad 0x6e756f6236315a5f,0x665f736569726164,0x5f5366526563726f,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x375f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203533332032\n"
".quad 0x5b203233662e7473,0x202c5d38346c7225,0x646c0a3b32366625,0x752e6d617261702e\n"
".quad 0x36336c7225203436,0x6236315a5f5b202c,0x65697261646e756f,0x526563726f665f73\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x617261705f69695f,0x6c2e0a3b5d355f6d\n"
".quad 0x363333203220636f,0x33662e646c0a3120,0x202c333666252032,0x3b5d36336c72255b\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c34356c,0x61646e756f623631\n"
".quad 0x726f665f73656972,0x5f535f5366526563,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x3b5d385f6d617261,0x203220636f6c2e0a,0x74730a3120363333,0x72255b203233662e\n"
".quad 0x6625202c5d34356c,0x3642420a0a3b3336,0x6f6c2e0a3a39315f,0x2034343320322063\n"
".quad 0x7d0a3b7465720a32,0x62697369762e0a0a,0x636e75662e20656c,0x6d617261702e2820\n"
".quad 0x7566203233622e20,0x61767465725f636e,0x64345a5f2029306c,0x2e0a2869696e696d\n"
".quad 0x622e206d61726170,0x6d64345a5f203233,0x7261705f69696e69,0x702e0a2c305f6d61\n"
".quad 0x33622e206d617261,0x696d64345a5f2032,0x617261705f69696e,0x0a7b0a290a315f6d\n"
".quad 0x72702e206765722e,0x3e323c7025206465,0x2e206765722e0a3b,0x353c722520323373\n"
".quad 0x2e646c0a0a0a3b3e,0x33752e6d61726170,0x5b202c3172252032,0x696e696d64345a5f\n"
".quad 0x5f6d617261705f69,0x702e646c0a3b5d30,0x3233752e6d617261,0x5f5b202c32722520\n"
".quad 0x69696e696d64345a,0x315f6d617261705f,0x732e6464610a3b5d,0x202c337225203233\n"
".quad 0x3b312d202c327225,0x203220636f6c2e0a,0x65730a3120313633,0x33732e746c2e7074\n"
".quad 0x25202c3170252032,0x3b327225202c3172,0x33622e706c65730a,0x25202c3472252032\n"
".quad 0x2c337225202c3172,0x6c2e0a3b31702520,0x323633203220636f,0x61702e74730a3120\n"
".quad 0x093233622e6d6172,0x65725f636e75665b,0x5d302b306c617674,0x720a3b347225202c\n"
".quad 0x2e0a0a7d0a3b7465,0x20656c6269736976,0x2e2820636e75662e,0x622e206d61726170\n"
".quad 0x5f636e7566203233,0x29306c6176746572,0x78616d64345a5f20,0x617261702e0a2869\n"
".quad 0x5f203233622e206d,0x5f6978616d64345a,0x0a305f6d61726170,0x6765722e0a7b0a29\n"
".quad 0x7225203233732e20,0x6c0a0a0a3b3e343c,0x2e6d617261702e64,0x2c31722520323375\n"
".quad 0x616d64345a5f5b20,0x6d617261705f6978,0x766f6d0a3b5d305f,0x327225203233752e\n"
".quad 0x78616d0a3b30202c,0x337225203233732e,0x25202c327225202c,0x636f6c2e0a3b3172\n"
".quad 0x3120373633203220,0x617261702e74730a,0x665b093233622e6d,0x767465725f636e75\n"
".quad 0x202c5d302b306c61,0x7465720a3b337225,0x6e652e0a0a7d0a3b,0x31315a5f20797274\n"
".quad 0x635f656c706d6973,0x505f53665079706f,0x61702e0a286d6669,0x3436752e206d6172\n"
".quad 0x6d697331315a5f20,0x79706f635f656c70,0x6d6669505f536650,0x305f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436752e20,0x656c706d69733131,0x53665079706f635f\n"
".quad 0x61705f6d6669505f,0x2e0a2c315f6d6172,0x752e206d61726170,0x7331315a5f203436\n"
".quad 0x6f635f656c706d69,0x69505f5366507970,0x6d617261705f6d66,0x7261702e0a2c325f\n"
".quad 0x203233662e206d61,0x706d697331315a5f,0x5079706f635f656c,0x5f6d6669505f5366\n"
".quad 0x2c335f6d61726170,0x206d617261702e0a,0x315a5f203436752e,0x5f656c706d697331\n"
".quad 0x5f53665079706f63,0x7261705f6d666950,0x7b0a290a345f6d61,0x662e206765722e0a\n"
".quad 0x3e323c6625203233,0x2e206765722e0a3b,0x313c722520323373,0x6765722e0a3b3e36\n"
".quad 0x7225203436732e20,0x0a0a3b3e36313c6c,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x315a5f5b202c316c,0x5f656c706d697331,0x5f53665079706f63,0x7261705f6d666950\n"
".quad 0x6c0a3b5d305f6d61,0x2e6d617261702e64,0x326c722520343675,0x7331315a5f5b202c\n"
".quad 0x6f635f656c706d69,0x69505f5366507970,0x6d617261705f6d66,0x2e646c0a3b5d315f\n"
".quad 0x36752e6d61726170,0x202c336c72252034,0x6d697331315a5f5b,0x79706f635f656c70\n"
".quad 0x6d6669505f536650,0x345f6d617261705f,0x2e617476630a3b5d,0x61626f6c672e6f74\n"
".quad 0x7225203436752e6c,0x326c7225202c346c,0x3220636f6c2e0a3b,0x6d0a312033373320\n"
".quad 0x25203233752e766f,0x69746e25202c3172,0x766f6d0a3b782e64,0x327225203233752e\n"
".quad 0x646961746325202c,0x2e766f6d0a3b782e,0x2c33722520323375,0x3b782e6469742520\n"
".quad 0x2e6f6c2e64616d0a,0x2c34722520323373,0x7225202c31722520,0x0a3b337225202c32\n"
".quad 0x33203220636f6c2e,0x766f6d0a31203437,0x357225203233752e,0x2e6469746e25202c\n"
".quad 0x752e766f6d0a3b79,0x202c367225203233,0x792e646961746325,0x33752e766f6d0a3b\n"
".quad 0x25202c3772252032,0x6d0a3b792e646974,0x33732e6f6c2e6461,0x25202c3872252032\n"
".quad 0x2c367225202c3572,0x6c2e0a3b37722520,0x353733203220636f,0x752e766f6d0a3120\n"
".quad 0x202c397225203233,0x3b7a2e6469746e25,0x3233752e766f6d0a,0x25202c3031722520\n"
".quad 0x3b7a2e6469617463,0x3233752e766f6d0a,0x25202c3131722520,0x6d0a3b7a2e646974\n"
".quad 0x33732e6f6c2e6461,0x202c323172252032,0x317225202c397225,0x3b31317225202c30\n"
".quad 0x203220636f6c2e0a,0x756d0a3120363733,0x3233732e6f6c2e6c,0x25202c3331722520\n"
".quad 0x383637202c323172,0x36752e7476630a3b,0x7225203233752e34,0x3b387225202c356c\n"
".quad 0x3436752e7476630a,0x6c7225203233752e,0x3b33317225202c36,0x3436732e6464610a\n"
".quad 0x25202c376c722520,0x6c7225202c366c72,0x752e7476630a3b35,0x25203233752e3436\n"
".quad 0x347225202c386c72,0x3220636f6c2e0a3b,0x6d0a312036373320,0x36732e6f6c2e6461\n"
".quad 0x202c396c72252034,0x7225202c376c7225,0x386c7225202c336c,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x316c7225202c3031,0x36622e6c68730a3b\n"
".quad 0x2c31316c72252034,0x33202c396c722520,0x732e7268730a3b32,0x32316c7225203436\n"
".quad 0x2c31316c7225202c,0x6f6c2e0a3b323320,0x2038373320322063,0x36622e6c68730a31\n"
".quad 0x2c33316c72252034,0x202c32316c722520,0x732e6464610a3b32,0x34316c7225203436\n"
".quad 0x2c30316c7225202c,0x0a3b33316c722520,0x203436732e646461,0x25202c35316c7225\n"
".quad 0x6c7225202c346c72,0x672e646c0a3b3331,0x33662e6c61626f6c,0x5b202c3166252032\n"
".quad 0x0a3b5d34316c7225,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d35316c72\n"
".quad 0x636f6c2e0a3b3166,0x3220393733203220,0x0a7d0a3b7465720a,0x207972746e652e0a\n"
".quad 0x7274784534315a5f,0x436d6f7246746361,0x0a28666d6650645f,0x2e206d617261702e\n"
".quad 0x34315a5f20343675,0x4674636172747845,0x6650645f436d6f72,0x6d617261705f666d\n"
".quad 0x7261702e0a2c305f,0x203436752e206d61,0x7274784534315a5f,0x436d6f7246746361\n"
".quad 0x705f666d6650645f,0x0a2c315f6d617261,0x2e206d617261702e,0x34315a5f20323366\n"
".quad 0x4674636172747845,0x6650645f436d6f72,0x6d617261705f666d,0x2e0a7b0a290a325f\n"
".quad 0x3233662e20676572,0x3e3234313c662520,0x2e206765722e0a3b,0x3c64662520343666\n"
".quad 0x65722e0a3b3e3632,0x20646572702e2067,0x0a3b3e33313c7025,0x33732e206765722e\n"
".quad 0x3e30323c72252032,0x2e206765722e0a3b,0x3c6c722520343673,0x6c0a0a0a3b3e3036\n"
".quad 0x2e6d617261702e64,0x336c722520343675,0x4534315a5f5b202c,0x7246746361727478\n"
".quad 0x6d6650645f436d6f,0x5f6d617261705f66,0x617476630a3b5d30,0x626f6c672e6f742e\n"
".quad 0x25203436752e6c61,0x6c7225202c326c72,0x20636f6c2e0a3b33,0x0a31203438332032\n"
".quad 0x203233752e766f6d,0x746e25202c337225,0x6f6d0a3b782e6469,0x7225203233752e76\n"
".quad 0x6961746325202c34,0x766f6d0a3b782e64,0x357225203233752e,0x782e64697425202c\n"
".quad 0x6f6c2e64616d0a3b,0x317225203233732e,0x25202c337225202c,0x3b357225202c3472\n"
".quad 0x203220636f6c2e0a,0x6f6d0a3120353833,0x7225203233752e76,0x6469746e25202c36\n"
".quad 0x2e766f6d0a3b792e,0x2c37722520323375,0x2e64696174632520,0x752e766f6d0a3b79\n"
".quad 0x202c387225203233,0x0a3b792e64697425,0x732e6f6c2e64616d,0x202c327225203233\n"
".quad 0x377225202c367225,0x610a3b387225202c,0x25203233732e6464,0x2c317225202c3972\n"
".quad 0x730a3b3731342d20,0x752e746c2e707465,0x202c317025203233,0x303931202c397225\n"
".quad 0x672e707465730a3b,0x7025203233732e74,0x202c327225202c32,0x646e610a3b303233\n"
".quad 0x702520646572702e,0x202c317025202c33,0x7465730a3b327025,0x3233732e746c2e70\n"
".quad 0x7225202c34702520,0x0a3b373434202c32,0x646572702e646e61,0x7025202c35702520\n"
".quad 0x0a3b347025202c33,0x33203220636f6c2e,0x2521400a31203439,0x4220617262203570\n"
".quad 0x0a0a3b325f303142,0x2e71652e70746573,0x2c36702520323373,0x3134202c31722520\n"
".quad 0x2e707465730a3b37,0x25203233732e7165,0x2c317225202c3770,0x726f0a3b36303620\n"
".quad 0x702520646572702e,0x202c367025202c38,0x6f6c2e0a3b377025,0x2034393320322063\n"
".quad 0x652e707465730a31,0x7025203233732e71,0x202c327225202c39,0x2e726f0a3b313233\n"
".quad 0x3170252064657270,0x202c387025202c30,0x6f6c2e0a3b397025,0x2034393320322063\n"
".quad 0x652e707465730a31,0x7025203233732e71,0x2c327225202c3131,0x726f0a3b36343420\n"
".quad 0x702520646572702e,0x30317025202c3231,0x0a3b31317025202c,0x33203220636f6c2e\n"
".quad 0x7025400a31203439,0x4220617262203231,0x0a0a3b335f303142,0x0a3a325f30314242\n"
".quad 0x34203220636f6c2e,0x7465720a32203734,0x5f303142420a0a3b,0x20636f6c2e0a3a33\n"
".quad 0x0a31203939332032,0x662e6e722e747663,0x25203233732e3436,0x317225202c316466\n"
".quad 0x36662e6464610a3b,0x202c326466252034,0x6430202c31646625,0x3030414639373043\n"
".quad 0x3030303030303030,0x3320636f6c2e0a3b,0x0a33203832333120,0x662e6e722e766964\n"
".quad 0x2c33646625203436,0x30202c3264662520,0x3030303044463364,0x3030303030303030\n"
".quad 0x20636f6c2e0a3b30,0x0a31203939332032,0x203436662e646461,0x6625202c34646625\n"
".quad 0x46336430202c3364,0x3030303030303045,0x0a3b303030303030,0x662e6e722e747663\n"
".quad 0x25203436662e3233,0x646625202c343566,0x20636f6c2e0a3b34,0x0a31203030342032\n"
".quad 0x662e6e722e747663,0x25203233732e3436,0x327225202c356466,0x36662e6464610a3b\n"
".quad 0x202c366466252034,0x6430202c35646625,0x3030414633373043,0x3030303030303030\n"
".quad 0x3320636f6c2e0a3b,0x0a33203832333120,0x662e6e722e766964,0x2c37646625203436\n"
".quad 0x30202c3664662520,0x3030303044463364,0x3030303030303030,0x20636f6c2e0a3b30\n"
".quad 0x0a31203030342032,0x203436662e646461,0x6625202c38646625,0x46336430202c3764\n"
".quad 0x3030303030303045,0x0a3b303030303030,0x662e6e722e747663,0x25203436662e3233\n"
".quad 0x646625202c353566,0x752e766f6d0a3b38,0x2c30317225203233,0x6574090a0a3b3020\n"
".quad 0x2e34762e64322e78,0x203233662e323366,0x6625202c3266257b,0x202c346625202c33\n"
".quad 0x745b202c7d356625,0x30665f6665527865,0x343566257b202c43,0x5d7d35356625202c\n"
".quad 0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366,0x6625202c3866257b\n"
".quad 0x2c30316625202c39,0x202c7d3131662520,0x5f6665527865745b,0x66257b202c433166\n"
".quad 0x35356625202c3435,0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x2c343166257b2032,0x25202c3531662520,0x316625202c363166,0x7865745b202c7d37\n"
".quad 0x2c4332665f666552,0x202c343566257b20,0x0a3b5d7d35356625,0x2e786574090a090a\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x326625202c303266,0x2c32326625202c31\n"
".quad 0x202c7d3332662520,0x5f6665527865745b,0x66257b202c433366,0x35356625202c3435\n"
".quad 0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34,0x2c363266257b2032\n"
".quad 0x25202c3732662520,0x326625202c383266,0x7865745b202c7d39,0x2c4334665f666552\n"
".quad 0x202c343566257b20,0x0a3b5d7d35356625,0x2e786574090a090a,0x33662e34762e6432\n"
".quad 0x257b203233662e32,0x336625202c323366,0x2c34336625202c33,0x202c7d3533662520\n"
".quad 0x5f6665527865745b,0x66257b202c433566,0x35356625202c3435,0x090a090a0a3b5d7d\n"
".quad 0x762e64322e786574,0x33662e3233662e34,0x2c383366257b2032,0x25202c3933662520\n"
".quad 0x346625202c303466,0x7865745b202c7d31,0x2c4336665f666552,0x202c343566257b20\n"
".quad 0x0a3b5d7d35356625,0x2e786574090a090a,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x346625202c343466,0x2c36346625202c35,0x202c7d3734662520,0x5f6665527865745b\n"
".quad 0x66257b202c433766,0x35356625202c3435,0x090a090a0a3b5d7d,0x762e64322e786574\n"
".quad 0x33662e3233662e34,0x2c303566257b2032,0x25202c3135662520,0x356625202c323566\n"
".quad 0x7865745b202c7d33,0x2c4338665f666552,0x202c343566257b20,0x0a3b5d7d35356625\n"
".quad 0x3220636f6c2e090a,0x610a312032313420,0x25203233662e6464,0x326625202c363566\n"
".quad 0x610a3b386625202c,0x25203233662e6464,0x356625202c373566,0x3b34316625202c36\n"
".quad 0x3233662e6464610a,0x25202c3835662520,0x326625202c373566,0x662e6464610a3b30\n"
".quad 0x2c39356625203233,0x25202c3835662520,0x6464610a3b363266,0x366625203233662e\n"
".quad 0x2c39356625202c30,0x610a3b3233662520,0x25203233662e6464,0x366625202c313666\n"
".quad 0x3b38336625202c30,0x3233662e6464610a,0x25202c3236662520,0x346625202c313666\n"
".quad 0x662e6464610a3b34,0x2c33366625203233,0x25202c3236662520,0x6f6c2e0a3b303566\n"
".quad 0x2033313420322063,0x33662e6275730a31,0x202c343666252032,0x326625202c386625\n"
".quad 0x662e6464610a3b30,0x2c35366625203233,0x25202c3436662520,0x6275730a3b323366\n"
".quad 0x366625203233662e,0x2c35366625202c36,0x730a3b3833662520,0x25203233662e6275\n"
".quad 0x366625202c373666,0x3b34346625202c36,0x3233662e6464610a,0x25202c3836662520\n"
".quad 0x356625202c373666,0x20636f6c2e0a3b30,0x0a31203431342032,0x203233662e627573\n"
".quad 0x6625202c39366625,0x36326625202c3431,0x33662e6464610a3b,0x202c303766252032\n"
".quad 0x6625202c39366625,0x2e6464610a3b3233,0x3137662520323366,0x202c30376625202c\n"
".quad 0x75730a3b38336625,0x6625203233662e62,0x31376625202c3237,0x0a3b34346625202c\n"
".quad 0x203233662e627573,0x6625202c33376625,0x30356625202c3237,0x3220636f6c2e0a3b\n"
".quad 0x6d0a312035313420,0x25203233662e6c75,0x376625202c343766,0x3b33376625202c33\n"
".quad 0x2e6e722e616d660a,0x3537662520323366,0x202c38366625202c,0x6625202c38366625\n"
".quad 0x2e766f6d0a3b3437,0x3637662520323366,0x304346336630202c,0x6c2e0a3b30303030\n"
".quad 0x383234203220636f,0x662e67656e0a3120,0x2c37376625203233,0x2e0a3b3537662520\n"
".quad 0x3234203220636f6c,0x2e616d660a312037,0x25203233662e6e72,0x376625202c383766\n"
".quad 0x2c36376625202c37,0x6d0a3b3336662520,0x25203233662e6c75,0x376625202c393766\n"
".quad 0x4545336630202c38,0x6d0a3b3933453833,0x25203233662e766f,0x336630202c303866\n"
".quad 0x3b30303030303846,0x617261702e646c0a,0x6625203233662e6d,0x5a5f5b202c313431\n"
".quad 0x6361727478453431,0x645f436d6f724674,0x7261705f666d6650,0x2e0a3b5d325f6d61\n"
".quad 0x3234203220636f6c,0x2e6275730a312037,0x3138662520323366,0x202c30386625202c\n"
".quad 0x6d0a3b3134316625,0x25203233662e6c75,0x386625202c323866,0x3b39376625202c31\n"
".quad 0x2e6e722e616d660a,0x3338662520323366,0x25202c326625202c,0x6625202c31343166\n"
".quad 0x2e7476630a3b3238,0x203233732e343673,0x7225202c346c7225,0x752e7476630a3b32\n"
".quad 0x25203233752e3436,0x317225202c356c72,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c39356c72,0x617274784534315a,0x5f436d6f72467463,0x61705f666d665064\n"
".quad 0x0a3b5d315f6d6172,0x34203220636f6c2e,0x64616d0a31203732,0x203436732e6f6c2e\n"
".quad 0x7225202c366c7225,0x356c7225202c346c,0x3b356c7225202c39,0x3436622e6c68730a\n"
".quad 0x25202c376c722520,0x3b3233202c366c72,0x3436732e7268730a,0x25202c386c722520\n"
".quad 0x3b3233202c376c72,0x203220636f6c2e0a,0x68730a3120373234,0x7225203436622e6c\n"
".quad 0x386c7225202c396c,0x6464610a3b32202c,0x6c7225203436732e,0x326c7225202c3031\n"
".quad 0x0a3b396c7225202c,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d30316c72\n"
".quad 0x766f6d0a3b333866,0x386625203233662e,0x3430346630202c34,0x2e0a3b3030303030\n"
".quad 0x3234203220636f6c,0x2e616d660a312038,0x25203233662e6e72,0x366625202c353866\n"
".quad 0x3430346630202c38,0x25202c3030303030,0x6c756d0a3b333666,0x386625203233662e\n"
".quad 0x2c38366625202c36,0x3030393034663020,0x616d660a3b303030,0x203233662e6e722e\n"
".quad 0x6625202c37386625,0x38366625202c3638,0x0a3b35386625202c,0x662e6e722e616d66\n"
".quad 0x2c38386625203233,0x25202c3737662520,0x386625202c363766,0x662e6c756d0a3b37\n"
".quad 0x2c39386625203233,0x30202c3838662520,0x3345383345443366,0x662e6c756d0a3b39\n"
".quad 0x2c30396625203233,0x25202c3138662520,0x616d660a3b393866,0x203233662e6e722e\n"
".quad 0x6625202c31396625,0x3134316625202c38,0x0a3b30396625202c,0x203436732e646461\n"
".quad 0x25202c31316c7225,0x383637202c346c72,0x3220636f6c2e0a3b,0x6d0a312038323420\n"
".quad 0x36732e6f6c2e6461,0x2c32316c72252034,0x202c31316c722520,0x25202c39356c7225\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x316c7225202c3331,0x730a3b3233202c32\n"
".quad 0x25203436732e7268,0x7225202c34316c72,0x3b3233202c33316c,0x203220636f6c2e0a\n"
".quad 0x68730a3120383234,0x7225203436622e6c,0x6c7225202c35316c,0x610a3b32202c3431\n"
".quad 0x25203436732e6464,0x7225202c36316c72,0x316c7225202c326c,0x6c672e74730a3b35\n"
".quad 0x3233662e6c61626f,0x5d36316c72255b20,0x0a3b31396625202c,0x34203220636f6c2e\n"
".quad 0x616d660a31203932,0x203233662e6e722e,0x6625202c32396625,0x30346630202c3337\n"
".quad 0x202c303030303034,0x756d0a3b33366625,0x6625203233662e6c,0x33376625202c3339\n"
".quad 0x303930346630202c,0x6d660a3b30303030,0x3233662e6e722e61,0x25202c3439662520\n"
".quad 0x376625202c333966,0x3b32396625202c33,0x2e6e722e616d660a,0x3539662520323366\n"
".quad 0x202c37376625202c,0x6625202c36376625,0x2e6c756d0a3b3439,0x3639662520323366\n"
".quad 0x202c35396625202c,0x4538334544336630,0x2e6c756d0a3b3933,0x3739662520323366\n"
".quad 0x202c31386625202c,0x6d660a3b36396625,0x3233662e6e722e61,0x25202c3839662520\n"
".quad 0x316625202c343166,0x37396625202c3134,0x36732e6464610a3b,0x2c37316c72252034\n"
".quad 0x31202c346c722520,0x6f6c2e0a3b363335,0x2039323420322063,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x316c7225202c3831,0x39356c7225202c37,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x25202c39316c7225,0x3233202c38316c72,0x36732e7268730a3b\n"
".quad 0x2c30326c72252034,0x202c39316c722520,0x636f6c2e0a3b3233,0x3120393234203220\n"
".quad 0x3436622e6c68730a,0x202c31326c722520,0x32202c30326c7225,0x36732e6464610a3b\n"
".quad 0x2c32326c72252034,0x25202c326c722520,0x74730a3b31326c72,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x396625202c5d3232,0x20636f6c2e0a3b38,0x0a31203033342032\n"
".quad 0x203233662e67656e,0x6625202c39396625,0x2e616d660a3b3836,0x25203233662e6e72\n"
".quad 0x6625202c30303166,0x34386625202c3939,0x0a3b33366625202c,0x662e6e722e616d66\n"
".quad 0x3130316625203233,0x202c36386625202c,0x6625202c38366625,0x616d660a3b303031\n"
".quad 0x203233662e6e722e,0x25202c3230316625,0x376625202c373766,0x3130316625202c36\n"
".quad 0x33662e6c756d0a3b,0x2c33303166252032,0x202c323031662520,0x4538334544336630\n"
".quad 0x2e6c756d0a3b3933,0x3031662520323366,0x2c31386625202c34,0x0a3b333031662520\n"
".quad 0x662e6e722e616d66,0x3530316625203233,0x202c30326625202c,0x25202c3134316625\n"
".quad 0x64610a3b34303166,0x7225203436732e64,0x6c7225202c33326c,0x3b34303332202c34\n"
".quad 0x203220636f6c2e0a,0x616d0a3120303334,0x3436732e6f6c2e64,0x202c34326c722520\n"
".quad 0x25202c33326c7225,0x7225202c39356c72,0x2e6c68730a3b356c,0x326c722520343662\n"
".quad 0x34326c7225202c35,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c36326c\n"
".quad 0x0a3b3233202c3532,0x34203220636f6c2e,0x6c68730a31203033,0x6c7225203436622e\n"
".quad 0x326c7225202c3732,0x64610a3b32202c36,0x7225203436732e64,0x6c7225202c38326c\n"
".quad 0x37326c7225202c32,0x6f6c672e74730a3b,0x203233662e6c6162,0x2c5d38326c72255b\n"
".quad 0x0a3b353031662520,0x34203220636f6c2e,0x67656e0a31203133,0x316625203233662e\n"
".quad 0x33376625202c3630,0x6e722e616d660a3b,0x316625203233662e,0x30316625202c3730\n"
".quad 0x2c34386625202c36,0x660a3b3336662520,0x33662e6e722e616d,0x2c38303166252032\n"
".quad 0x25202c3339662520,0x316625202c333766,0x2e616d660a3b3730,0x25203233662e6e72\n"
".quad 0x6625202c39303166,0x36376625202c3737,0x3b3830316625202c,0x3233662e6c756d0a\n"
".quad 0x202c303131662520,0x30202c3930316625,0x3345383345443366,0x662e6c756d0a3b39\n"
".quad 0x3131316625203233,0x202c31386625202c,0x660a3b3031316625,0x33662e6e722e616d\n"
".quad 0x2c32313166252032,0x25202c3632662520,0x6625202c31343166,0x6464610a3b313131\n"
".quad 0x6c7225203436732e,0x346c7225202c3932,0x0a3b32373033202c,0x34203220636f6c2e\n"
".quad 0x64616d0a31203133,0x203436732e6f6c2e,0x25202c30336c7225,0x7225202c39326c72\n"
".quad 0x6c7225202c39356c,0x622e6c68730a3b35,0x31336c7225203436,0x2c30336c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x336c7225202c3233,0x2e0a3b3233202c31\n"
".quad 0x3334203220636f6c,0x2e6c68730a312031,0x336c722520343662,0x32336c7225202c33\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x326c7225202c3433,0x3b33336c7225202c\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d34336c7225,0x2e0a3b3231316625\n"
".quad 0x3334203220636f6c,0x2e6c756d0a312032,0x3131662520323366,0x2c32336625202c33\n"
".quad 0x0a3b313431662520,0x2e3436662e747663,0x3964662520323366,0x3b3331316625202c\n"
".quad 0x3436662e7476630a,0x646625203233662e,0x31386625202c3031,0x33662e6464610a3b\n"
".quad 0x2c34313166252032,0x25202c3836662520,0x616d660a3b333766,0x203233662e6e722e\n"
".quad 0x25202c3531316625,0x6630202c34313166,0x3030303030343034,0x0a3b33366625202c\n"
".quad 0x203233662e6c756d,0x25202c3631316625,0x6630202c34313166,0x3030303030393034\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x31316625202c3731,0x3431316625202c36\n"
".quad 0x3b3531316625202c,0x2e6e722e616d660a,0x3131662520323366,0x2c37376625202c38\n"
".quad 0x25202c3637662520,0x76630a3b37313166,0x33662e3436662e74,0x2c31316466252032\n"
".quad 0x0a3b383131662520,0x203436662e6c756d,0x25202c3231646625,0x6430202c31316466\n"
".quad 0x3743313743394633,0x4331443842374331,0x6e722e616d660a3b,0x646625203436662e\n"
".quad 0x31646625202c3331,0x3231646625202c30,0x0a3b39646625202c,0x662e6e722e747663\n"
".quad 0x25203436662e3233,0x6625202c39313166,0x6464610a3b333164,0x6c7225203436732e\n"
".quad 0x346c7225202c3533,0x0a3b30343833202c,0x34203220636f6c2e,0x64616d0a31203233\n"
".quad 0x203436732e6f6c2e,0x25202c36336c7225,0x7225202c35336c72,0x6c7225202c39356c\n"
".quad 0x622e6c68730a3b35,0x37336c7225203436,0x2c36336c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x336c7225202c3833,0x2e0a3b3233202c37,0x3334203220636f6c\n"
".quad 0x2e6c68730a312032,0x336c722520343662,0x38336c7225202c39,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x326c7225202c3034,0x3b39336c7225202c,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x202c5d30346c7225,0x2e0a3b3931316625,0x3334203220636f6c\n"
".quad 0x2e6c756d0a312033,0x3231662520323366,0x2c38336625202c30,0x0a3b313431662520\n"
".quad 0x2e3436662e747663,0x3164662520323366,0x3032316625202c34,0x33662e6275730a3b\n"
".quad 0x2c31323166252032,0x25202c3337662520,0x6f6c2e0a3b383666,0x2033333420322063\n"
".quad 0x6e722e616d660a31,0x316625203233662e,0x32316625202c3232,0x3430346630202c31\n"
".quad 0x25202c3030303030,0x6c756d0a3b333666,0x316625203233662e,0x32316625202c3332\n"
".quad 0x3930346630202c31,0x660a3b3030303030,0x33662e6e722e616d,0x2c34323166252032\n"
".quad 0x202c333231662520,0x25202c3132316625,0x6d660a3b32323166,0x3233662e6e722e61\n"
".quad 0x202c353231662520,0x6625202c37376625,0x32316625202c3637,0x662e7476630a3b34\n"
".quad 0x25203233662e3436,0x6625202c35316466,0x6c756d0a3b353231,0x646625203436662e\n"
".quad 0x31646625202c3631,0x3946336430202c35,0x3743313743313743,0x660a3b4331443842\n"
".quad 0x36662e6e722e616d,0x2c37316466252034,0x202c303164662520,0x25202c3631646625\n"
".quad 0x76630a3b34316466,0x3233662e6e722e74,0x316625203436662e,0x31646625202c3632\n"
".quad 0x732e6464610a3b37,0x31346c7225203436,0x202c346c7225202c,0x6c2e0a3b38303634\n"
".quad 0x333334203220636f,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c32346c\n"
".quad 0x356c7225202c3134,0x3b356c7225202c39,0x3436622e6c68730a,0x202c33346c722520\n"
".quad 0x33202c32346c7225,0x732e7268730a3b32,0x34346c7225203436,0x2c33346c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x2033333420322063,0x36622e6c68730a31,0x2c35346c72252034\n"
".quad 0x202c34346c722520,0x732e6464610a3b32,0x36346c7225203436,0x202c326c7225202c\n"
".quad 0x730a3b35346c7225,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d36346c\n"
".quad 0x6f6c2e0a3b363231,0x2034333420322063,0x33662e6c756d0a31,0x2c37323166252032\n"
".quad 0x25202c3434662520,0x76630a3b31343166,0x33662e3436662e74,0x2c38316466252032\n"
".quad 0x0a3b373231662520,0x203233662e627573,0x25202c3832316625,0x376625202c393966\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x316625202c393231,0x30346630202c3832\n"
".quad 0x202c303030303034,0x756d0a3b33366625,0x6625203233662e6c,0x316625202c303331\n"
".quad 0x30346630202c3832,0x0a3b303030303039,0x662e6e722e616d66,0x3133316625203233\n"
".quad 0x2c3033316625202c,0x202c383231662520,0x660a3b3932316625,0x33662e6e722e616d\n"
".quad 0x2c32333166252032,0x25202c3737662520,0x316625202c363766,0x2e7476630a3b3133\n"
".quad 0x203233662e343666,0x25202c3931646625,0x756d0a3b32333166,0x6625203436662e6c\n"
".quad 0x646625202c303264,0x46336430202c3931,0x4331374331374339,0x0a3b433144384237\n"
".quad 0x662e6e722e616d66,0x3132646625203436,0x2c3031646625202c,0x202c303264662520\n"
".quad 0x630a3b3831646625,0x33662e6e722e7476,0x6625203436662e32,0x646625202c333331\n"
".quad 0x2e6464610a3b3132,0x346c722520343673,0x2c346c7225202c37,0x2e0a3b3637333520\n"
".quad 0x3334203220636f6c,0x2e64616d0a312034,0x25203436732e6f6c,0x7225202c38346c72\n"
".quad 0x6c7225202c37346c,0x356c7225202c3935,0x36622e6c68730a3b,0x2c39346c72252034\n"
".quad 0x202c38346c722520,0x2e7268730a3b3233,0x356c722520343673,0x39346c7225202c30\n"
".quad 0x6c2e0a3b3233202c,0x343334203220636f,0x622e6c68730a3120,0x31356c7225203436\n"
".quad 0x2c30356c7225202c,0x2e6464610a3b3220,0x356c722520343673,0x2c326c7225202c32\n"
".quad 0x0a3b31356c722520,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d32356c72\n"
".quad 0x6c2e0a3b33333166,0x353334203220636f,0x662e6c756d0a3120,0x3433316625203233\n"
".quad 0x202c30356625202c,0x630a3b3134316625,0x662e3436662e7476,0x3232646625203233\n"
".quad 0x3b3433316625202c,0x3233662e6275730a,0x202c353331662520,0x6625202c38366625\n"
".quad 0x2e616d660a3b3337,0x25203233662e6e72,0x6625202c36333166,0x346630202c353331\n"
".quad 0x2c30303030303430,0x6d0a3b3336662520,0x25203233662e6c75,0x6625202c37333166\n"
".quad 0x346630202c353331,0x3b30303030303930,0x2e6e722e616d660a,0x3331662520323366\n"
".quad 0x3733316625202c38,0x2c3533316625202c,0x0a3b363331662520,0x662e6e722e616d66\n"
".quad 0x3933316625203233,0x202c37376625202c,0x6625202c36376625,0x7476630a3b383331\n"
".quad 0x3233662e3436662e,0x202c333264662520,0x6d0a3b3933316625,0x25203436662e6c75\n"
".quad 0x6625202c34326466,0x336430202c333264,0x3137433137433946,0x3b43314438423743\n"
".quad 0x2e6e722e616d660a,0x3264662520343666,0x3031646625202c35,0x2c3432646625202c\n"
".quad 0x0a3b323264662520,0x662e6e722e747663,0x25203436662e3233,0x6625202c30343166\n"
".quad 0x6464610a3b353264,0x6c7225203436732e,0x346c7225202c3335,0x0a3b34343136202c\n"
".quad 0x34203220636f6c2e,0x64616d0a31203533,0x203436732e6f6c2e,0x25202c34356c7225\n"
".quad 0x7225202c33356c72,0x6c7225202c39356c,0x622e6c68730a3b35,0x35356c7225203436\n"
".quad 0x2c34356c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x356c7225202c3635\n"
".quad 0x2e0a3b3233202c35,0x3334203220636f6c,0x2e6c68730a312035,0x356c722520343662\n"
".quad 0x36356c7225202c37,0x6464610a3b32202c,0x6c7225203436732e,0x326c7225202c3835\n"
".quad 0x3b37356c7225202c,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d38356c7225\n"
".quad 0x2e0a3b3034316625,0x3434203220636f6c,0x3b7465720a322037,0x746e652e0a0a7d0a\n"
".quad 0x4c38315a5f207972,0x416279685f645f52,0x63726f665f444342,0x536d665f53665065\n"
".quad 0x702e0a28695f535f,0x36752e206d617261,0x524c38315a5f2034,0x42416279685f645f\n"
".quad 0x6563726f665f4443,0x5f536d665f536650,0x617261705f695f53,0x61702e0a2c305f6d\n"
".quad 0x3436752e206d6172,0x5f524c38315a5f20,0x4342416279685f64,0x506563726f665f44\n"
".quad 0x535f536d665f5366,0x6d617261705f695f,0x7261702e0a2c315f,0x203233662e206d61\n"
".quad 0x645f524c38315a5f,0x444342416279685f,0x66506563726f665f,0x5f535f536d665f53\n"
".quad 0x5f6d617261705f69,0x617261702e0a2c32,0x5f203436752e206d,0x5f645f524c38315a\n"
".quad 0x5f44434241627968,0x5366506563726f66,0x695f535f536d665f,0x335f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436752e20,0x685f645f524c3831,0x665f444342416279\n"
".quad 0x5f5366506563726f,0x5f695f535f536d66,0x2c345f6d61726170,0x206d617261702e0a\n"
".quad 0x315a5f203436752e,0x79685f645f524c38,0x6f665f4443424162,0x665f536650656372\n"
".quad 0x705f695f535f536d,0x0a2c355f6d617261,0x2e206d617261702e,0x38315a5f20323375\n"
".quad 0x6279685f645f524c,0x726f665f44434241,0x6d665f5366506563,0x61705f695f535f53\n"
".quad 0x0a290a365f6d6172,0x2e206765722e0a7b,0x313c662520323366,0x65722e0a3b3e3136\n"
".quad 0x25203436662e2067,0x0a3b3e34323c6466,0x72702e206765722e,0x3e373c7025206465\n"
".quad 0x2e206765722e0a3b,0x373c722520323373,0x6765722e0a3b3e30,0x7225203436732e20\n"
".quad 0x0a3b3e3535313c6c,0x65726168732e090a,0x6e67696c612e2064,0x5f2038622e203420\n"
".quad 0x6f6c5f616475635f,0x5f7261765f6c6163,0x32335f3433353633,0x6e6f635f6e6f6e5f\n"
".quad 0x5b586d75735f7473,0x090a0a3b5d323135,0x206465726168732e,0x34206e67696c612e\n"
".quad 0x635f5f2038622e20,0x61636f6c5f616475,0x36335f7261765f6c,0x6e5f33345f343335\n"
".quad 0x74736e6f635f6e6f,0x31355b596d75735f,0x732e090a0a3b5d32,0x612e206465726168\n"
".quad 0x2e2034206e67696c,0x6475635f5f203862,0x5f6c61636f6c5f61,0x333536335f726176\n"
".quad 0x6e6f6e5f30335f35,0x635f74736e6f635f,0x3b5d345b6b636568,0x7261702e646c0a0a\n"
".quad 0x25203436752e6d61,0x5a5f5b202c336c72,0x685f645f524c3831,0x665f444342416279\n"
".quad 0x5f5366506563726f,0x5f695f535f536d66,0x5d335f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x6d0a312032353420,0x25203233752e766f,0x64697425202c3172,0x2e766f6d0a3b782e\n"
".quad 0x2c35722520323375,0x782e6469746e2520,0x33752e766f6d0a3b,0x25202c3672252032\n"
".quad 0x3b782e6469617463,0x2e6f6c2e64616d0a,0x2c32722520323373,0x7225202c35722520\n"
".quad 0x0a3b317225202c36,0x34203220636f6c2e,0x766f6d0a31203335,0x377225203233752e\n"
".quad 0x2e6469746e25202c,0x752e766f6d0a3b79,0x202c387225203233,0x792e646961746325\n"
".quad 0x33752e766f6d0a3b,0x25202c3972252032,0x6d0a3b792e646974,0x33732e6f6c2e6461\n"
".quad 0x25202c3372252032,0x2c387225202c3772,0x6c2e0a3b39722520,0x343534203220636f\n"
".quad 0x722e7476630a3120,0x33732e3233662e6e,0x202c323166252032,0x616d660a3b327225\n"
".quad 0x203233662e6e722e,0x6625202c33316625,0x45336630202c3231,0x202c303030303038\n"
".quad 0x3044464333346630,0x636f6c2e0a3b3030,0x3120353534203220,0x2e6e722e7476630a\n"
".quad 0x203233732e323366,0x337225202c326625,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x202c326625202c34,0x3030303845336630,0x33346630202c3030,0x0a3b303030444639\n"
".quad 0x2e3436752e747663,0x346c722520323375,0x2e0a3b327225202c,0x3534203220636f6c\n"
".quad 0x2e7476630a312036,0x203233732e343673,0x7225202c356c7225,0x6c2e64616d0a3b33\n"
".quad 0x7225203436732e6f,0x356c7225202c366c,0x202c336c7225202c,0x64610a3b346c7225\n"
".quad 0x6625203233662e64,0x33316625202c3531,0x464633436630202c,0x64610a3b30303043\n"
".quad 0x6625203233662e64,0x34316625202c3631,0x464233436630202c,0x6c2e0a3b30303043\n"
".quad 0x203437203220636f,0x33662e6c756d0a31,0x202c373166252032,0x6625202c36316625\n"
".quad 0x2e616d660a3b3631,0x25203233662e6e72,0x316625202c383166,0x2c35316625202c35\n"
".quad 0x730a3b3731662520,0x662e746c2e707465,0x202c317025203233,0x6630202c38316625\n"
".quad 0x3030303030383234,0x33752e766f6d0a3b,0x202c303172252032,0x20636f6c2e0a3b30\n"
".quad 0x0a31203136342032,0x65726168732e7473,0x5f5b203233752e64,0x6f6c5f616475635f\n"
".quad 0x5f7261765f6c6163,0x30335f3533353633,0x6e6f635f6e6f6e5f,0x6b636568635f7473\n"
".quad 0x3b30317225202c5d,0x203220636f6c2e0a,0x61620a3120323634,0x3020636e79732e72\n"
".quad 0x33732e6464610a3b,0x25202c3472252032,0x0a3b312d202c3272,0x2e74672e70746573\n"
".quad 0x2c32702520323375,0x3637202c34722520,0x20636f6c2e0a3b35,0x0a31203436342032\n"
".quad 0x2e746c2e70746573,0x2c33702520323373,0x3b31202c33722520,0x646572702e726f0a\n"
".quad 0x7025202c34702520,0x0a3b337025202c32,0x34203220636f6c2e,0x7465730a31203436\n"
".quad 0x3233732e74672e70,0x7225202c35702520,0x0a3b303135202c33,0x20646572702e726f\n"
".quad 0x347025202c367025,0x2e0a3b357025202c,0x3534203220636f6c,0x2e766f6d0a312032\n"
".quad 0x3936722520323375,0x782e64697425202c,0x69772e6c756d0a3b,0x25203233752e6564\n"
".quad 0x7225202c30316c72,0x6d0a3b34202c3936,0x25203436752e766f,0x5f5f202c31316c72\n"
".quad 0x636f6c5f61647563,0x335f7261765f6c61,0x5f32335f34333536,0x736e6f635f6e6f6e\n"
".quad 0x0a3b586d75735f74,0x203436732e646461,0x7225202c376c7225,0x6c7225202c31316c\n"
".quad 0x2e766f6d0a3b3031,0x316c722520343675,0x6475635f5f202c32,0x5f6c61636f6c5f61\n"
".quad 0x333536335f726176,0x6e6f6e5f33345f34,0x735f74736e6f635f,0x6464610a3b596d75\n"
".quad 0x6c7225203436732e,0x32316c7225202c38,0x3b30316c7225202c,0x203220636f6c2e0a\n"
".quad 0x25400a3120343634,0x4220617262203670,0x0a0a3b375f313142,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c383431,0x685f645f524c3831,0x665f444342416279\n"
".quad 0x5f5366506563726f,0x5f695f535f536d66,0x5d305f6d61726170,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x316c7225202c3331,0x2e6c68730a3b3834\n"
".quad 0x316c722520343662,0x2c366c7225202c34,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x316c7225202c3531,0x2e0a3b3233202c34,0x3734203220636f6c,0x2e6c68730a312032\n"
".quad 0x316c722520343662,0x35316c7225202c36,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x316c7225202c3731,0x36316c7225202c33,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x72255b202c336625,0x64610a3b5d37316c,0x7225203233732e64,0x2c337225202c3231\n"
".quad 0x6f6c2e0a3b312d20,0x2033373420322063,0x36752e7476630a31,0x7225203233752e34\n"
".quad 0x317225202c38316c,0x732e6464610a3b32,0x39316c7225203436,0x2c38316c7225202c\n"
".quad 0x6c0a3b3432303120,0x2e6d617261702e64,0x316c722520343675,0x315a5f5b202c3435\n"
".quad 0x79685f645f524c38,0x6f665f4443424162,0x665f536650656372,0x705f695f535f536d\n"
".quad 0x3b5d335f6d617261,0x203220636f6c2e0a,0x616d0a3120333734,0x3436732e6f6c2e64\n"
".quad 0x202c30326c722520,0x25202c39316c7225,0x25202c3435316c72,0x6c68730a3b346c72\n"
".quad 0x6c7225203436622e,0x326c7225202c3132,0x730a3b3233202c30,0x25203436732e7268\n"
".quad 0x7225202c32326c72,0x3b3233202c31326c,0x203220636f6c2e0a,0x68730a3120333734\n"
".quad 0x7225203436622e6c,0x6c7225202c33326c,0x610a3b32202c3232,0x25203436732e6464\n"
".quad 0x7225202c34326c72,0x6c7225202c33316c,0x672e646c0a3b3332,0x33662e6c61626f6c\n"
".quad 0x5b202c3466252032,0x0a3b5d34326c7225,0x34203220636f6c2e,0x6464610a31203437\n"
".quad 0x317225203233732e,0x202c337225202c34,0x752e7476630a3b31,0x25203233752e3436\n"
".quad 0x7225202c35326c72,0x2e6464610a3b3431,0x326c722520343673,0x35326c7225202c36\n"
".quad 0x0a3b38343032202c,0x34203220636f6c2e,0x64616d0a31203437,0x203436732e6f6c2e\n"
".quad 0x25202c37326c7225,0x7225202c36326c72,0x7225202c3435316c,0x2e6c68730a3b346c\n"
".quad 0x326c722520343662,0x37326c7225202c38,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c39326c,0x0a3b3233202c3832,0x34203220636f6c2e,0x6c68730a31203437\n"
".quad 0x6c7225203436622e,0x326c7225202c3033,0x64610a3b32202c39,0x7225203436732e64\n"
".quad 0x6c7225202c31336c,0x336c7225202c3331,0x6c672e646c0a3b30,0x3233662e6c61626f\n"
".quad 0x255b202c35662520,0x2e0a3b5d31336c72,0x3734203220636f6c,0x2e7476630a312035\n"
".quad 0x732e3233662e6e72,0x2c35356625203233,0x64610a3b34722520,0x6625203233662e64\n"
".quad 0x35356625202c3335,0x303046336630202c,0x64610a3b30303030,0x6625203233662e64\n"
".quad 0x2c326625202c3033,0x3030304633663020,0x74090a0a3b303030,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x202c393166257b20,0x6625202c30326625,0x32326625202c3132\n"
".quad 0x527865745b202c7d,0x202c4331665f6665,0x25202c333566257b,0x0a0a3b5d7d303366\n"
".quad 0x203220636f6c2e09,0x64610a3120363734,0x7225203233732e64,0x2c327225202c3731\n"
".quad 0x2e7476630a3b3120,0x732e3233662e6e72,0x2c36356625203233,0x610a3b3731722520\n"
".quad 0x25203233662e6464,0x356625202c373466,0x3046336630202c36,0x0a0a3b3030303030\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x353266257b203233,0x202c36326625202c\n"
".quad 0x6625202c37326625,0x65745b202c7d3832,0x4333665f66655278,0x2c373466257b202c\n"
".quad 0x3b5d7d3033662520,0x20636f6c2e090a0a,0x0a31203737342032,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x317225202c373566,0x662e6464610a3b32,0x2c32346625203233\n"
".quad 0x30202c3735662520,0x3030303030463366,0x786574090a0a3b30,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x6625202c31336625,0x33336625202c3233,0x2c7d34336625202c\n"
".quad 0x6665527865745b20,0x257b202c4335665f,0x346625202c333566,0x0a090a0a3b5d7d32\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x373366257b203233,0x202c38336625202c\n"
".quad 0x6625202c39336625,0x65745b202c7d3034,0x4336665f66655278,0x2c373466257b202c\n"
".quad 0x3b5d7d3234662520,0x20636f6c2e090a0a,0x0a31203937342032,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x317225202c383566,0x662e6464610a3b34,0x2c34356625203233\n"
".quad 0x30202c3835662520,0x3030303030463366,0x786574090a0a3b30,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x6625202c33346625,0x35346625202c3434,0x2c7d36346625202c\n"
".quad 0x6665527865745b20,0x257b202c4337665f,0x356625202c373466,0x0a090a0a3b5d7d34\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x393466257b203233,0x202c30356625202c\n"
".quad 0x6625202c31356625,0x65745b202c7d3235,0x4338665f66655278,0x2c333566257b202c\n"
".quad 0x3b5d7d3435662520,0x732e646461090a0a,0x32336c7225203436,0x202c356c7225202c\n"
".quad 0x6c2e0a3b36393034,0x303035203220636f,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c33336c,0x316c7225202c3233,0x346c7225202c3435,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3135316c72,0x645f524c38315a5f,0x444342416279685f\n"
".quad 0x66506563726f665f,0x5f535f536d665f53,0x5f6d617261705f69,0x617476630a3b5d31\n"
".quad 0x626f6c672e6f742e,0x25203436752e6c61,0x7225202c34336c72,0x68730a3b3135316c\n"
".quad 0x7225203436622e6c,0x6c7225202c35336c,0x0a3b3233202c3333,0x203436732e726873\n"
".quad 0x25202c36336c7225,0x3233202c35336c72,0x3220636f6c2e0a3b,0x730a312030303520\n"
".quad 0x25203436622e6c68,0x7225202c37336c72,0x0a3b32202c36336c,0x203436732e646461\n"
".quad 0x7225202c396c7225,0x6c7225202c34336c,0x636f6c2e0a3b3733,0x3120323834203220\n"
".quad 0x726220317025400a,0x335f313142422061,0x20636f6c2e0a0a3b,0x0a31203235342032\n"
".quad 0x203233752e766f6d,0x7425202c38367225,0x756d0a3b782e6469,0x752e656469772e6c\n"
".quad 0x38336c7225203233,0x202c38367225202c,0x732e6464610a3b34,0x30346c7225203436\n"
".quad 0x2c31316c7225202c,0x0a3b38336c722520,0x35203220636f6c2e,0x2e74730a31203330\n"
".quad 0x752e646572616873,0x346c72255b203233,0x30317225202c5d30,0x36732e6464610a3b\n"
".quad 0x2c32346c72252034,0x202c32316c722520,0x2e0a3b38336c7225,0x3035203220636f6c\n"
".quad 0x732e74730a312034,0x33752e6465726168,0x32346c72255b2032,0x3b30317225202c5d\n"
".quad 0x203220636f6c2e0a,0x64610a3120383035,0x6625203233662e64,0x2c336625202c3935\n"
".quad 0x610a3b3931662520,0x25203233662e6464,0x356625202c303666,0x0a3b346625202c39\n"
".quad 0x203233662e646461,0x6625202c31366625,0x35326625202c3036,0x33662e6464610a3b\n"
".quad 0x202c323666252032,0x6625202c31366625,0x662e6464610a3b35,0x2c33366625203233\n"
".quad 0x25202c3236662520,0x6464610a3b313366,0x366625203233662e,0x2c33366625202c34\n"
".quad 0x610a3b3733662520,0x25203233662e6464,0x366625202c353666,0x3b33346625202c34\n"
".quad 0x3233662e6464610a,0x25202c3636662520,0x346625202c353666,0x662e6275730a3b39\n"
".quad 0x2c37366625203233,0x25202c3931662520,0x6464610a3b353266,0x366625203233662e\n"
".quad 0x2c37366625202c38,0x730a3b3133662520,0x25203233662e6275,0x366625202c393666\n"
".quad 0x3b37336625202c38,0x3233662e6275730a,0x25202c3037662520,0x346625202c393666\n"
".quad 0x662e6464610a3b33,0x2c31376625203233,0x25202c3037662520,0x6275730a3b393466\n"
".quad 0x376625203233662e,0x202c346625202c32,0x6464610a3b356625,0x376625203233662e\n"
".quad 0x2c32376625202c33,0x610a3b3133662520,0x25203233662e6464,0x376625202c343766\n"
".quad 0x3b37336625202c33,0x3233662e6275730a,0x25202c3537662520,0x346625202c343766\n"
".quad 0x662e6275730a3b33,0x2c36376625203233,0x25202c3537662520,0x6c756d0a3b393466\n"
".quad 0x376625203233662e,0x2c36376625202c37,0x660a3b3637662520,0x33662e6e722e616d\n"
".quad 0x202c383766252032,0x6625202c31376625,0x37376625202c3137,0x33662e766f6d0a3b\n"
".quad 0x202c393766252032,0x3030304346336630,0x636f6c2e0a3b3030,0x3120383035203220\n"
".quad 0x3233662e67656e0a,0x25202c3038662520,0x616d660a3b383766,0x203233662e6e722e\n"
".quad 0x6625202c31386625,0x39376625202c3038,0x0a3b36366625202c,0x662e6e722e616d66\n"
".quad 0x2c32386625203233,0x30202c3138662520,0x3345383345454266,0x0a3b336625202c39\n"
".quad 0x203233662e67656e,0x6625202c33386625,0x702e646c0a3b3238,0x3233662e6d617261\n"
".quad 0x202c303631662520,0x5f524c38315a5f5b,0x4342416279685f64,0x506563726f665f44\n"
".quad 0x535f536d665f5366,0x6d617261705f695f,0x6f6c2e0a3b5d325f,0x2038303520322063\n"
".quad 0x6e722e616d660a31,0x386625203233662e,0x2c33386625202c34,0x202c303631662520\n"
".quad 0x766f6d0a3b336625,0x386625203233662e,0x3430346630202c35,0x2e0a3b3030303030\n"
".quad 0x3035203220636f6c,0x2e616d660a312038,0x25203233662e6e72,0x376625202c363866\n"
".quad 0x3430346630202c31,0x25202c3030303030,0x6c756d0a3b363666,0x386625203233662e\n"
".quad 0x2c31376625202c37,0x3030393034663020,0x616d660a3b303030,0x203233662e6e722e\n"
".quad 0x6625202c38386625,0x31376625202c3738,0x0a3b36386625202c,0x662e6e722e616d66\n"
".quad 0x2c39386625203233,0x25202c3038662520,0x386625202c393766,0x662e766f6d0a3b38\n"
".quad 0x2c30396625203233,0x3833454433663020,0x6f6c2e0a3b393345,0x2038303520322063\n"
".quad 0x33662e67656e0a31,0x202c313966252032,0x6d660a3b39386625,0x3233662e6e722e61\n"
".quad 0x25202c3239662520,0x396625202c313966,0x3b39316625202c30,0x3233662e67656e0a\n"
".quad 0x25202c3339662520,0x616d660a3b323966,0x203233662e6e722e,0x6625202c34396625\n"
".quad 0x36316625202c3339,0x3b39316625202c30,0x2e6e722e616d660a,0x3539662520323366\n"
".quad 0x202c36376625202c,0x3030303430346630,0x36366625202c3030,0x33662e6c756d0a3b\n"
".quad 0x202c363966252032,0x6630202c36376625,0x3030303030393034,0x6e722e616d660a3b\n"
".quad 0x396625203233662e,0x2c36396625202c37,0x25202c3637662520,0x616d660a3b353966\n"
".quad 0x203233662e6e722e,0x6625202c38396625,0x39376625202c3038,0x0a3b37396625202c\n"
".quad 0x203233662e67656e,0x6625202c39396625,0x2e616d660a3b3839,0x25203233662e6e72\n"
".quad 0x6625202c30303166,0x30396625202c3939,0x6e0a3b346625202c,0x25203233662e6765\n"
".quad 0x6625202c31303166,0x616d660a3b303031,0x203233662e6e722e,0x25202c3230316625\n"
".quad 0x6625202c31303166,0x346625202c303631,0x33662e67656e0a3b,0x2c33303166252032\n"
".quad 0x660a3b3137662520,0x33662e6e722e616d,0x2c34303166252032,0x202c333031662520\n"
".quad 0x6625202c35386625,0x2e616d660a3b3636,0x25203233662e6e72,0x6625202c35303166\n"
".quad 0x31376625202c3738,0x3b3430316625202c,0x2e6e722e616d660a,0x3031662520323366\n"
".quad 0x2c30386625202c36,0x25202c3937662520,0x656e0a3b35303166,0x6625203233662e67\n"
".quad 0x316625202c373031,0x2e616d660a3b3630,0x25203233662e6e72,0x6625202c38303166\n"
".quad 0x396625202c373031,0x3b35326625202c30,0x3233662e67656e0a,0x202c393031662520\n"
".quad 0x660a3b3830316625,0x33662e6e722e616d,0x2c30313166252032,0x202c393031662520\n"
".quad 0x25202c3036316625,0x67656e0a3b353266,0x316625203233662e,0x36376625202c3131\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x31316625202c3231,0x2c35386625202c31\n"
".quad 0x660a3b3636662520,0x33662e6e722e616d,0x2c33313166252032,0x25202c3639662520\n"
".quad 0x316625202c363766,0x2e616d660a3b3231,0x25203233662e6e72,0x6625202c34313166\n"
".quad 0x39376625202c3038,0x3b3331316625202c,0x3233662e67656e0a,0x202c353131662520\n"
".quad 0x660a3b3431316625,0x33662e6e722e616d,0x2c36313166252032,0x202c353131662520\n"
".quad 0x6625202c30396625,0x662e67656e0a3b35,0x3731316625203233,0x3b3631316625202c\n"
".quad 0x2e6e722e616d660a,0x3131662520323366,0x3731316625202c38,0x2c3036316625202c\n"
".quad 0x64610a3b35662520,0x6625203233662e64,0x376625202c393131,0x3b36376625202c31\n"
".quad 0x2e6e722e616d660a,0x3231662520323366,0x3931316625202c30,0x303430346630202c\n"
".quad 0x6625202c30303030,0x2e6c756d0a3b3636,0x3231662520323366,0x3931316625202c31\n"
".quad 0x303930346630202c,0x6d660a3b30303030,0x3233662e6e722e61,0x202c323231662520\n"
".quad 0x25202c3132316625,0x6625202c39313166,0x616d660a3b303231,0x203233662e6e722e\n"
".quad 0x25202c3332316625,0x376625202c303866,0x3232316625202c39,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x32316625202c3164,0x662e766f6d0a3b33,0x2c32646625203436\n"
".quad 0x3743394633643020,0x3842374331374331,0x6f6c2e0a3b433144,0x2038303520322063\n"
".quad 0x36662e7476630a31,0x6625203233662e34,0x31336625202c3364,0x36662e67656e0a3b\n"
".quad 0x202c346466252034,0x6d660a3b31646625,0x3436662e6e722e61,0x25202c3564662520\n"
".quad 0x646625202c346466,0x3b33646625202c32,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x3036316625202c36,0x36662e67656e0a3b,0x202c376466252034,0x6d660a3b36646625\n"
".quad 0x3436662e6e722e61,0x25202c3864662520,0x646625202c376466,0x3b33646625202c35\n"
".quad 0x2e6e722e7476630a,0x203436662e323366,0x25202c3432316625,0x6275730a3b386466\n"
".quad 0x316625203233662e,0x36376625202c3532,0x0a3b31376625202c,0x35203220636f6c2e\n"
".quad 0x616d660a31203830,0x203233662e6e722e,0x25202c3632316625,0x6630202c35323166\n"
".quad 0x3030303030343034,0x0a3b36366625202c,0x203233662e6c756d,0x25202c3732316625\n"
".quad 0x6630202c35323166,0x3030303030393034,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x32316625202c3832,0x3532316625202c37,0x3b3632316625202c,0x2e6e722e616d660a\n"
".quad 0x3231662520323366,0x2c30386625202c39,0x25202c3937662520,0x76630a3b38323166\n"
".quad 0x33662e3436662e74,0x202c396466252032,0x630a3b3932316625,0x662e3436662e7476\n"
".quad 0x3031646625203233,0x0a3b37336625202c,0x203436662e67656e,0x25202c3131646625\n"
".quad 0x616d660a3b396466,0x203436662e6e722e,0x25202c3231646625,0x6625202c31316466\n"
".quad 0x31646625202c3264,0x722e616d660a3b30,0x6625203436662e6e,0x646625202c333164\n"
".quad 0x3231646625202c37,0x3b3031646625202c,0x2e6e722e7476630a,0x203436662e323366\n"
".quad 0x25202c3033316625,0x75730a3b33316466,0x6625203233662e62,0x316625202c313331\n"
".quad 0x36376625202c3330,0x6e722e616d660a3b,0x316625203233662e,0x33316625202c3233\n"
".quad 0x3430346630202c31,0x25202c3030303030,0x6c756d0a3b363666,0x316625203233662e\n"
".quad 0x33316625202c3333,0x3930346630202c31,0x660a3b3030303030,0x33662e6e722e616d\n"
".quad 0x2c34333166252032,0x202c333331662520,0x25202c3133316625,0x6d660a3b32333166\n"
".quad 0x3233662e6e722e61,0x202c353331662520,0x6625202c30386625,0x33316625202c3937\n"
".quad 0x662e7476630a3b34,0x25203233662e3436,0x6625202c34316466,0x7476630a3b353331\n"
".quad 0x3233662e3436662e,0x202c353164662520,0x656e0a3b33346625,0x6625203436662e67\n"
".quad 0x646625202c363164,0x2e616d660a3b3431,0x25203436662e6e72,0x6625202c37316466\n"
".quad 0x646625202c363164,0x3531646625202c32,0x6e722e616d660a3b,0x646625203436662e\n"
".quad 0x37646625202c3831,0x2c3731646625202c,0x0a3b353164662520,0x662e6e722e747663\n"
".quad 0x25203436662e3233,0x6625202c36333166,0x6275730a3b383164,0x316625203233662e\n"
".quad 0x31376625202c3733,0x0a3b36376625202c,0x662e6e722e616d66,0x3833316625203233\n"
".quad 0x2c3733316625202c,0x3030343034663020,0x366625202c303030,0x662e6c756d0a3b36\n"
".quad 0x3933316625203233,0x2c3733316625202c,0x3030393034663020,0x616d660a3b303030\n"
".quad 0x203233662e6e722e,0x25202c3034316625,0x6625202c39333166,0x316625202c373331\n"
".quad 0x2e616d660a3b3833,0x25203233662e6e72,0x6625202c31343166,0x39376625202c3038\n"
".quad 0x3b3034316625202c,0x3436662e7476630a,0x646625203233662e,0x34316625202c3931\n"
".quad 0x662e7476630a3b31,0x25203233662e3436,0x6625202c30326466,0x2e67656e0a3b3934\n"
".quad 0x3264662520343666,0x3931646625202c31,0x6e722e616d660a3b,0x646625203436662e\n"
".quad 0x32646625202c3232,0x2c32646625202c31,0x0a3b303264662520,0x662e6e722e616d66\n"
".quad 0x3332646625203436,0x202c37646625202c,0x25202c3232646625,0x76630a3b30326466\n"
".quad 0x3233662e6e722e74,0x316625203436662e,0x32646625202c3234,0x61702e646c0a3b33\n"
".quad 0x203436752e6d6172,0x202c3335316c7225,0x5f524c38315a5f5b,0x4342416279685f64\n"
".quad 0x506563726f665f44,0x535f536d665f5366,0x6d617261705f695f,0x6f6c2e0a3b5d335f\n"
".quad 0x2036353420322063,0x6f6c2e64616d0a31,0x6c7225203436732e,0x356c7225202c3534\n"
".quad 0x3335316c7225202c,0x0a3b346c7225202c,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x5a5f5b202c303531,0x685f645f524c3831,0x665f444342416279,0x5f5366506563726f\n"
".quad 0x5f695f535f536d66,0x5d315f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f\n"
".quad 0x6c7225203436752e,0x316c7225202c3634,0x2e6c68730a3b3035,0x346c722520343662\n"
".quad 0x35346c7225202c37,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c38346c\n"
".quad 0x0a3b3233202c3734,0x35203220636f6c2e,0x6c68730a31203930,0x6c7225203436622e\n"
".quad 0x346c7225202c3934,0x64610a3b32202c38,0x7225203436732e64,0x6c7225202c30356c\n"
".quad 0x346c7225202c3634,0x6c672e74730a3b39,0x3233662e6c61626f,0x5d30356c72255b20\n"
".quad 0x0a3b34386625202c,0x203436732e646461,0x25202c31356c7225,0x323135202c356c72\n"
".quad 0x3220636f6c2e0a3b,0x6d0a312033393420,0x36732e6f6c2e6461,0x2c32356c72252034\n"
".quad 0x202c31356c722520,0x202c3335316c7225,0x68730a3b346c7225,0x7225203436622e6c\n"
".quad 0x6c7225202c33356c,0x0a3b3233202c3235,0x203436732e726873,0x25202c34356c7225\n"
".quad 0x3233202c33356c72,0x3220636f6c2e0a3b,0x730a312033393420,0x25203436622e6c68\n"
".quad 0x7225202c35356c72,0x0a3b32202c34356c,0x203436732e646461,0x25202c36356c7225\n"
".quad 0x7225202c36346c72,0x6f6c2e0a3b35356c,0x2030313520322063,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x2c5d36356c72255b,0x610a3b3439662520,0x25203436732e6464\n"
".quad 0x7225202c37356c72,0x34323031202c356c,0x3220636f6c2e0a3b,0x6d0a312034393420\n"
".quad 0x36732e6f6c2e6461,0x2c38356c72252034,0x202c37356c722520,0x202c3335316c7225\n"
".quad 0x68730a3b346c7225,0x7225203436622e6c,0x6c7225202c39356c,0x0a3b3233202c3835\n"
".quad 0x203436732e726873,0x25202c30366c7225,0x3233202c39356c72,0x3220636f6c2e0a3b\n"
".quad 0x730a312034393420,0x25203436622e6c68,0x7225202c31366c72,0x0a3b32202c30366c\n"
".quad 0x203436732e646461,0x25202c32366c7225,0x7225202c36346c72,0x6f6c2e0a3b31366c\n"
".quad 0x2031313520322063,0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d32366c72255b\n"
".quad 0x0a3b323031662520,0x203436732e646461,0x25202c33366c7225,0x333531202c356c72\n"
".quad 0x20636f6c2e0a3b36,0x0a31203539342032,0x732e6f6c2e64616d,0x34366c7225203436\n"
".quad 0x2c33366c7225202c,0x2c3335316c722520,0x730a3b346c722520,0x25203436622e6c68\n"
".quad 0x7225202c35366c72,0x3b3233202c34366c,0x3436732e7268730a,0x202c36366c722520\n"
".quad 0x33202c35366c7225,0x20636f6c2e0a3b32,0x0a31203539342032,0x203436622e6c6873\n"
".quad 0x25202c37366c7225,0x3b32202c36366c72,0x3436732e6464610a,0x202c38366c722520\n"
".quad 0x25202c36346c7225,0x6c2e0a3b37366c72,0x323135203220636f,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x5d38366c72255b20,0x3b3031316625202c,0x3436732e6464610a\n"
".quad 0x202c39366c722520,0x3032202c356c7225,0x636f6c2e0a3b3834,0x3120363934203220\n"
".quad 0x2e6f6c2e64616d0a,0x376c722520343673,0x39366c7225202c30,0x3335316c7225202c\n"
".quad 0x0a3b346c7225202c,0x203436622e6c6873,0x25202c31376c7225,0x3233202c30376c72\n"
".quad 0x36732e7268730a3b,0x2c32376c72252034,0x202c31376c722520,0x636f6c2e0a3b3233\n"
".quad 0x3120363934203220,0x3436622e6c68730a,0x202c33376c722520,0x32202c32376c7225\n"
".quad 0x36732e6464610a3b,0x2c34376c72252034,0x202c36346c722520,0x2e0a3b33376c7225\n"
".quad 0x3135203220636f6c,0x672e74730a312033,0x33662e6c61626f6c,0x34376c72255b2032\n"
".quad 0x3831316625202c5d,0x36732e6464610a3b,0x2c35376c72252034,0x32202c356c722520\n"
".quad 0x6f6c2e0a3b303635,0x2037393420322063,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x376c7225202c3637,0x35316c7225202c35,0x3b346c7225202c33,0x3436622e6c68730a\n"
".quad 0x202c37376c722520,0x33202c36376c7225,0x732e7268730a3b32,0x38376c7225203436\n"
".quad 0x2c37376c7225202c,0x6f6c2e0a3b323320,0x2037393420322063,0x36622e6c68730a31\n"
".quad 0x2c39376c72252034,0x202c38376c722520,0x732e6464610a3b32,0x30386c7225203436\n"
".quad 0x2c36346c7225202c,0x0a3b39376c722520,0x35203220636f6c2e,0x2e74730a31203431\n"
".quad 0x662e6c61626f6c67,0x386c72255b203233,0x32316625202c5d30,0x732e6464610a3b34\n"
".quad 0x31386c7225203436,0x202c356c7225202c,0x6c2e0a3b32373033,0x383934203220636f\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c32386c,0x316c7225202c3138\n"
".quad 0x346c7225202c3335,0x36622e6c68730a3b,0x2c33386c72252034,0x202c32386c722520\n"
".quad 0x2e7268730a3b3233,0x386c722520343673,0x33386c7225202c34,0x6c2e0a3b3233202c\n"
".quad 0x383934203220636f,0x622e6c68730a3120,0x35386c7225203436,0x2c34386c7225202c\n"
".quad 0x2e6464610a3b3220,0x386c722520343673,0x36346c7225202c36,0x3b35386c7225202c\n"
".quad 0x203220636f6c2e0a,0x74730a3120353135,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x316625202c5d3638,0x2e6464610a3b3033,0x386c722520343673,0x2c356c7225202c37\n"
".quad 0x2e0a3b3438353320,0x3934203220636f6c,0x2e64616d0a312039,0x25203436732e6f6c\n"
".quad 0x7225202c38386c72,0x6c7225202c37386c,0x6c7225202c333531,0x622e6c68730a3b34\n"
".quad 0x39386c7225203436,0x2c38386c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x386c7225202c3039,0x2e0a3b3233202c39,0x3934203220636f6c,0x2e6c68730a312039\n"
".quad 0x396c722520343662,0x30396c7225202c31,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x346c7225202c3239,0x31396c7225202c36,0x3220636f6c2e0a3b,0x730a312036313520\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d32396c,0x6f6c2e0a3b363331\n"
".quad 0x2037313520322063,0x6f6c672e74730a31,0x203233662e6c6162,0x202c5d396c72255b\n"
".quad 0x620a3b3234316625,0x4220696e752e6172,0x0a0a3b385f313142,0x0a3a335f31314242\n"
".quad 0x34203220636f6c2e,0x7025400a31203338,0x4242206172622031,0x2e0a0a3b355f3131\n"
".quad 0x3534203220636f6c,0x2e766f6d0a312032,0x3736722520323375,0x782e64697425202c\n"
".quad 0x69772e6c756d0a3b,0x25203233752e6564,0x7225202c33396c72,0x610a3b34202c3736\n"
".quad 0x25203436732e6464,0x7225202c35396c72,0x6c7225202c31316c,0x636f6c2e0a3b3339\n"
".quad 0x3120393834203220,0x726168732e74730a,0x5b203233752e6465,0x202c5d35396c7225\n"
".quad 0x64610a3b30317225,0x7225203436732e64,0x6c7225202c37396c,0x396c7225202c3231\n"
".quad 0x20636f6c2e0a3b33,0x0a31203039342032,0x65726168732e7473,0x255b203233752e64\n"
".quad 0x25202c5d37396c72,0x6172620a3b303172,0x31424220696e752e,0x42420a0a3b365f31\n"
".quad 0x6f6d0a3a355f3131,0x7225203233752e76,0x2e0a3b31202c3234,0x3834203220636f6c\n"
".quad 0x732e74730a312034,0x33752e6465726168,0x6475635f5f5b2032,0x5f6c61636f6c5f61\n"
".quad 0x333536335f726176,0x6e6f6e5f30335f35,0x635f74736e6f635f,0x25202c5d6b636568\n"
".quad 0x6f6c2e0a3b323472,0x2035383420322063,0x33662e6464610a31,0x2c33343166252032\n"
".quad 0x25202c3931662520,0x616d660a3b393166,0x203233662e6e722e,0x25202c3434316625\n"
".quad 0x436630202c353266,0x2c30303030303030,0x0a3b333431662520,0x203233662e646461\n"
".quad 0x25202c3534316625,0x336625202c313366,0x662e6464610a3b31,0x3634316625203233\n"
".quad 0x2c3434316625202c,0x0a3b353431662520,0x203233662e646461,0x25202c3734316625\n"
".quad 0x346625202c393466,0x662e6464610a3b39,0x3834316625203233,0x2c3634316625202c\n"
".quad 0x0a3b373431662520,0x203233662e646461,0x25202c3934316625,0x336625202c373366\n"
".quad 0x662e6275730a3b37,0x3035316625203233,0x2c3834316625202c,0x0a3b393431662520\n"
".quad 0x203233662e646461,0x25202c3135316625,0x346625202c333466,0x662e6275730a3b33\n"
".quad 0x3235316625203233,0x2c3035316625202c,0x0a3b313531662520,0x34203220636f6c2e\n"
".quad 0x766f6d0a31203235,0x367225203233752e,0x2e64697425202c36,0x772e6c756d0a3b78\n"
".quad 0x203233752e656469,0x25202c38396c7225,0x0a3b34202c363672,0x203436732e646461\n"
".quad 0x202c3030316c7225,0x25202c31316c7225,0x6c2e0a3b38396c72,0x353834203220636f\n"
".quad 0x68732e74730a3120,0x3233662e64657261,0x3030316c72255b20,0x3235316625202c5d\n"
".quad 0x3220636f6c2e0a3b,0x610a312036383420,0x25203233662e6464,0x6625202c33353166\n"
".quad 0x0a3b356625202c35,0x203233662e646461,0x25202c3435316625,0x3b346625202c3466\n"
".quad 0x3233662e6275730a,0x202c353531662520,0x25202c3435316625,0x64610a3b33353166\n"
".quad 0x6625203233662e64,0x316625202c363531,0x34316625202c3535,0x662e6275730a3b35\n"
".quad 0x3735316625203233,0x2c3635316625202c,0x0a3b373431662520,0x203233662e646461\n"
".quad 0x25202c3835316625,0x6625202c37353166,0x6275730a3b393431,0x316625203233662e\n"
".quad 0x35316625202c3935,0x3135316625202c38,0x36732e6464610a3b,0x3230316c72252034\n"
".quad 0x2c32316c7225202c,0x0a3b38396c722520,0x34203220636f6c2e,0x2e74730a31203638\n"
".quad 0x662e646572616873,0x316c72255b203233,0x316625202c5d3230,0x3142420a0a3b3935\n"
".quad 0x6464610a3a365f31,0x6c7225203436732e,0x6c7225202c343031,0x0a3b323135202c35\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c323531,0x685f645f524c3831\n"
".quad 0x665f444342416279,0x5f5366506563726f,0x5f695f535f536d66,0x5d335f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x6d0a312033393420,0x36732e6f6c2e6461,0x3630316c72252034\n"
".quad 0x3430316c7225202c,0x3235316c7225202c,0x0a3b346c7225202c,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c393431,0x685f645f524c3831,0x665f444342416279\n"
".quad 0x5f5366506563726f,0x5f695f535f536d66,0x5d315f6d61726170,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x6c7225202c373031,0x6c68730a3b393431\n"
".quad 0x6c7225203436622e,0x6c7225202c383031,0x3b3233202c363031,0x3436732e7268730a\n"
".quad 0x2c3930316c722520,0x2c3830316c722520,0x6f6c2e0a3b323320,0x2033393420322063\n"
".quad 0x36622e6c68730a31,0x3031316c72252034,0x3930316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c313131,0x6c7225202c373031,0x2e74730a3b303131\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x326625202c5d3131,0x732e6464610a3b35\n"
".quad 0x31316c7225203436,0x2c356c7225202c32,0x2e0a3b3432303120,0x3934203220636f6c\n"
".quad 0x2e64616d0a312034,0x25203436732e6f6c,0x25202c3331316c72,0x25202c3231316c72\n"
".quad 0x25202c3235316c72,0x6c68730a3b346c72,0x6c7225203436622e,0x6c7225202c343131\n"
".quad 0x3b3233202c333131,0x3436732e7268730a,0x2c3531316c722520,0x2c3431316c722520\n"
".quad 0x6f6c2e0a3b323320,0x2034393420322063,0x36622e6c68730a31,0x3631316c72252034\n"
".quad 0x3531316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c373131\n"
".quad 0x6c7225202c373031,0x2e74730a3b363131,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x356625202c5d3731,0x36732e6464610a3b,0x3831316c72252034,0x202c356c7225202c\n"
".quad 0x6c2e0a3b36333531,0x353934203220636f,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3931316c,0x7225202c3831316c,0x7225202c3235316c,0x2e6c68730a3b346c\n"
".quad 0x316c722520343662,0x316c7225202c3032,0x0a3b3233202c3931,0x203436732e726873\n"
".quad 0x202c3132316c7225,0x202c3032316c7225,0x636f6c2e0a3b3233,0x3120353934203220\n"
".quad 0x3436622e6c68730a,0x2c3232316c722520,0x2c3132316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x316c7225202c3332,0x316c7225202c3730,0x672e74730a3b3232\n"
".quad 0x33662e6c61626f6c,0x32316c72255b2032,0x39316625202c5d33,0x36732e6464610a3b\n"
".quad 0x3432316c72252034,0x202c356c7225202c,0x6c2e0a3b38343032,0x363934203220636f\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3532316c,0x7225202c3432316c\n"
".quad 0x7225202c3235316c,0x2e6c68730a3b346c,0x316c722520343662,0x316c7225202c3632\n"
".quad 0x0a3b3233202c3532,0x203436732e726873,0x202c3732316c7225,0x202c3632316c7225\n"
".quad 0x636f6c2e0a3b3233,0x3120363934203220,0x3436622e6c68730a,0x2c3832316c722520\n"
".quad 0x2c3732316c722520,0x2e6464610a3b3220,0x316c722520343673,0x316c7225202c3932\n"
".quad 0x316c7225202c3730,0x672e74730a3b3832,0x33662e6c61626f6c,0x32316c72255b2032\n"
".quad 0x3b346625202c5d39,0x3436732e6464610a,0x2c3033316c722520,0x32202c356c722520\n"
".quad 0x6f6c2e0a3b303635,0x2037393420322063,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c313331,0x6c7225202c303331,0x6c7225202c323531,0x622e6c68730a3b34\n"
".quad 0x33316c7225203436,0x33316c7225202c32,0x730a3b3233202c31,0x25203436732e7268\n"
".quad 0x25202c3333316c72,0x33202c3233316c72,0x20636f6c2e0a3b32,0x0a31203739342032\n"
".quad 0x203436622e6c6873,0x202c3433316c7225,0x202c3333316c7225,0x732e6464610a3b32\n"
".quad 0x33316c7225203436,0x30316c7225202c35,0x33316c7225202c37,0x6c672e74730a3b34\n"
".quad 0x3233662e6c61626f,0x3533316c72255b20,0x3b33346625202c5d,0x3436732e6464610a\n"
".quad 0x2c3633316c722520,0x33202c356c722520,0x6f6c2e0a3b323730,0x2038393420322063\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c373331,0x6c7225202c363331\n"
".quad 0x6c7225202c323531,0x622e6c68730a3b34,0x33316c7225203436,0x33316c7225202c38\n"
".quad 0x730a3b3233202c37,0x25203436732e7268,0x25202c3933316c72,0x33202c3833316c72\n"
".quad 0x20636f6c2e0a3b32,0x0a31203839342032,0x203436622e6c6873,0x202c3034316c7225\n"
".quad 0x202c3933316c7225,0x732e6464610a3b32,0x34316c7225203436,0x30316c7225202c31\n"
".quad 0x34316c7225202c37,0x6c672e74730a3b30,0x3233662e6c61626f,0x3134316c72255b20\n"
".quad 0x3b39346625202c5d,0x3436732e6464610a,0x2c3234316c722520,0x33202c356c722520\n"
".quad 0x6f6c2e0a3b343835,0x2039393420322063,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c333431,0x6c7225202c323431,0x6c7225202c323531,0x622e6c68730a3b34\n"
".quad 0x34316c7225203436,0x34316c7225202c34,0x730a3b3233202c33,0x25203436732e7268\n"
".quad 0x25202c3534316c72,0x33202c3434316c72,0x20636f6c2e0a3b32,0x0a31203939342032\n"
".quad 0x203436622e6c6873,0x202c3634316c7225,0x202c3534316c7225,0x732e6464610a3b32\n"
".quad 0x34316c7225203436,0x30316c7225202c37,0x34316c7225202c37,0x6c672e74730a3b36\n"
".quad 0x3233662e6c61626f,0x3734316c72255b20,0x3b31336625202c5d,0x203220636f6c2e0a\n"
".quad 0x74730a3120303035,0x2e6c61626f6c672e,0x6c72255b20323366,0x37336625202c5d39\n"
".quad 0x6e752e6172620a3b,0x385f313142422069,0x5f313142420a0a3b,0x20636f6c2e0a3a37\n"
".quad 0x0a31203636342032,0x65726168732e7473,0x255b203233752e64,0x7225202c5d376c72\n"
".quad 0x636f6c2e0a3b3031,0x3120373634203220,0x726168732e74730a,0x5b203233752e6465\n"
".quad 0x25202c5d386c7225,0x42420a0a3b303172,0x6c2e0a3a385f3131,0x323235203220636f\n"
".quad 0x732e7261620a3120,0x720a3b3020636e79,0x2e0a0a7d0a3b7465,0x5a5f207972746e65\n"
".quad 0x685f645f524c3831,0x665f444341426279,0x5f5366506563726f,0x28695f535f536d66\n"
".quad 0x206d617261702e0a,0x315a5f203436752e,0x79685f645f524c38,0x6f665f4443414262\n"
".quad 0x665f536650656372,0x705f695f535f536d,0x0a2c305f6d617261,0x2e206d617261702e\n"
".quad 0x38315a5f20343675,0x6279685f645f524c,0x726f665f44434142,0x6d665f5366506563\n"
".quad 0x61705f695f535f53,0x2e0a2c315f6d6172,0x662e206d61726170,0x4c38315a5f203233\n"
".quad 0x426279685f645f52,0x63726f665f444341,0x536d665f53665065,0x7261705f695f535f\n"
".quad 0x702e0a2c325f6d61,0x36752e206d617261,0x524c38315a5f2034,0x41426279685f645f\n"
".quad 0x6563726f665f4443,0x5f536d665f536650,0x617261705f695f53,0x61702e0a2c335f6d\n"
".quad 0x3436752e206d6172,0x5f524c38315a5f20,0x4341426279685f64,0x506563726f665f44\n"
".quad 0x535f536d665f5366,0x6d617261705f695f,0x7261702e0a2c345f,0x203436752e206d61\n"
".quad 0x645f524c38315a5f,0x444341426279685f,0x66506563726f665f,0x5f535f536d665f53\n"
".quad 0x5f6d617261705f69,0x617261702e0a2c35,0x5f203233752e206d,0x5f645f524c38315a\n"
".quad 0x5f44434142627968,0x5366506563726f66,0x695f535f536d665f,0x365f6d617261705f\n"
".quad 0x65722e0a7b0a290a,0x25203233662e2067,0x0a3b3e3136313c66,0x36662e206765722e\n"
".quad 0x34323c6466252034,0x206765722e0a3b3e,0x702520646572702e,0x65722e0a3b3e373c\n"
".quad 0x25203233732e2067,0x2e0a3b3e30373c72,0x3436732e20676572,0x3535313c6c722520\n"
".quad 0x68732e090a0a3b3e,0x6c612e2064657261,0x622e2034206e6769,0x616475635f5f2038\n"
".quad 0x765f6c61636f6c5f,0x38323636335f7261,0x5f6e6f6e5f32335f,0x75735f74736e6f63\n"
".quad 0x3b5d3231355b586d,0x726168732e090a0a,0x67696c612e206465,0x2038622e2034206e\n"
".quad 0x6c5f616475635f5f,0x7261765f6c61636f,0x345f38323636335f,0x6f635f6e6f6e5f33\n"
".quad 0x596d75735f74736e,0x0a0a3b5d3231355b,0x6465726168732e09,0x206e67696c612e20\n"
".quad 0x5f5f2038622e2034,0x636f6c5f61647563,0x335f7261765f6c61,0x5f30335f39323636\n"
".quad 0x736e6f635f6e6f6e,0x5b6b636568635f74,0x2e646c0a0a3b5d34,0x36752e6d61726170\n"
".quad 0x202c336c72252034,0x5f524c38315a5f5b,0x4341426279685f64,0x506563726f665f44\n"
".quad 0x535f536d665f5366,0x6d617261705f695f,0x6f6c2e0a3b5d335f,0x2036343520322063\n"
".quad 0x33752e766f6d0a31,0x25202c3172252032,0x6d0a3b782e646974,0x25203233752e766f\n"
".quad 0x69746e25202c3572,0x766f6d0a3b782e64,0x367225203233752e,0x646961746325202c\n"
".quad 0x2e64616d0a3b782e,0x25203233732e6f6c,0x2c357225202c3272,0x7225202c36722520\n"
".quad 0x20636f6c2e0a3b31,0x0a31203734352032,0x203233752e766f6d,0x746e25202c377225\n"
".quad 0x6f6d0a3b792e6469,0x7225203233752e76,0x6961746325202c38,0x766f6d0a3b792e64\n"
".quad 0x397225203233752e,0x792e64697425202c,0x6f6c2e64616d0a3b,0x337225203233732e\n"
".quad 0x25202c377225202c,0x3b397225202c3872,0x203220636f6c2e0a,0x76630a3120383435\n"
".quad 0x3233662e6e722e74,0x316625203233732e,0x0a3b327225202c32,0x662e6e722e616d66\n"
".quad 0x2c33316625203233,0x30202c3231662520,0x3030303038453366,0x4333346630202c30\n"
".quad 0x2e0a3b3030304446,0x3435203220636f6c,0x2e7476630a312039,0x732e3233662e6e72\n"
".quad 0x202c326625203233,0x616d660a3b337225,0x203233662e6e722e,0x6625202c34316625\n"
".quad 0x3845336630202c32,0x30202c3030303030,0x3030444639333466,0x752e7476630a3b30\n"
".quad 0x25203233752e3436,0x327225202c346c72,0x3220636f6c2e0a3b,0x630a312030353520\n"
".quad 0x732e3436732e7476,0x2c356c7225203233,0x616d0a3b33722520,0x3436732e6f6c2e64\n"
".quad 0x25202c366c722520,0x6c7225202c356c72,0x3b346c7225202c33,0x3233662e6464610a\n"
".quad 0x25202c3531662520,0x436630202c333166,0x3b30303043464633,0x3233662e6464610a\n"
".quad 0x25202c3631662520,0x436630202c343166,0x3b30303043464233,0x203220636f6c2e0a\n"
".quad 0x6c756d0a31203437,0x316625203233662e,0x2c36316625202c37,0x660a3b3631662520\n"
".quad 0x33662e6e722e616d,0x202c383166252032,0x6625202c35316625,0x37316625202c3531\n"
".quad 0x6c2e707465730a3b,0x7025203233662e74,0x2c38316625202c31,0x3030383234663020\n"
".quad 0x766f6d0a3b303030,0x317225203233752e,0x6c2e0a3b30202c30,0x353535203220636f\n"
".quad 0x68732e74730a3120,0x3233752e64657261,0x616475635f5f5b20,0x765f6c61636f6c5f\n"
".quad 0x39323636335f7261,0x5f6e6f6e5f30335f,0x68635f74736e6f63,0x7225202c5d6b6365\n"
".quad 0x636f6c2e0a3b3031,0x3120363535203220,0x6e79732e7261620a,0x6464610a3b302063\n"
".quad 0x347225203233732e,0x2d202c327225202c,0x2e707465730a3b31,0x25203233752e7467\n"
".quad 0x2c347225202c3270,0x6c2e0a3b35363720,0x383535203220636f,0x2e707465730a3120\n"
".quad 0x25203233732e746c,0x2c337225202c3370,0x702e726f0a3b3120,0x2c34702520646572\n"
".quad 0x7025202c32702520,0x20636f6c2e0a3b33,0x0a31203835352032,0x2e74672e70746573\n"
".quad 0x2c35702520323373,0x3135202c33722520,0x72702e726f0a3b30,0x202c367025206465\n"
".quad 0x357025202c347025,0x3220636f6c2e0a3b,0x6d0a312036343520,0x25203233752e766f\n"
".quad 0x697425202c393672,0x6c756d0a3b782e64,0x33752e656469772e,0x2c30316c72252032\n"
".quad 0x34202c3936722520,0x36752e766f6d0a3b,0x2c31316c72252034,0x5f616475635f5f20\n"
".quad 0x61765f6c61636f6c,0x5f38323636335f72,0x635f6e6f6e5f3233,0x6d75735f74736e6f\n"
".quad 0x732e6464610a3b58,0x2c376c7225203436,0x202c31316c722520,0x6d0a3b30316c7225\n"
".quad 0x25203436752e766f,0x5f5f202c32316c72,0x636f6c5f61647563,0x335f7261765f6c61\n"
".quad 0x5f33345f38323636,0x736e6f635f6e6f6e,0x0a3b596d75735f74,0x203436732e646461\n"
".quad 0x7225202c386c7225,0x6c7225202c32316c,0x636f6c2e0a3b3031,0x3120383535203220\n"
".quad 0x726220367025400a,0x375f323142422061,0x61702e646c0a0a3b,0x203436752e6d6172\n"
".quad 0x202c3834316c7225,0x5f524c38315a5f5b,0x4341426279685f64,0x506563726f665f44\n"
".quad 0x535f536d665f5366,0x6d617261705f695f,0x7476630a3b5d305f,0x6f6c672e6f742e61\n"
".quad 0x203436752e6c6162,0x25202c33316c7225,0x730a3b3834316c72,0x25203436622e6c68\n"
".quad 0x7225202c34316c72,0x0a3b3233202c366c,0x203436732e726873,0x25202c35316c7225\n"
".quad 0x3233202c34316c72,0x3220636f6c2e0a3b,0x730a312036363520,0x25203436622e6c68\n"
".quad 0x7225202c36316c72,0x0a3b32202c35316c,0x203436732e646461,0x25202c37316c7225\n"
".quad 0x7225202c33316c72,0x2e646c0a3b36316c,0x662e6c61626f6c67,0x202c336625203233\n"
".quad 0x3b5d37316c72255b,0x3233732e6464610a,0x25202c3231722520,0x0a3b312d202c3372\n"
".quad 0x35203220636f6c2e,0x7476630a31203736,0x3233752e3436752e,0x202c38316c722520\n"
".quad 0x64610a3b32317225,0x7225203436732e64,0x6c7225202c39316c,0x34323031202c3831\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3435316c72,0x645f524c38315a5f\n"
".quad 0x444341426279685f,0x66506563726f665f,0x5f535f536d665f53,0x5f6d617261705f69\n"
".quad 0x636f6c2e0a3b5d33,0x3120373635203220,0x2e6f6c2e64616d0a,0x326c722520343673\n"
".quad 0x39316c7225202c30,0x3435316c7225202c,0x0a3b346c7225202c,0x203436622e6c6873\n"
".quad 0x25202c31326c7225,0x3233202c30326c72,0x36732e7268730a3b,0x2c32326c72252034\n"
".quad 0x202c31326c722520,0x636f6c2e0a3b3233,0x3120373635203220,0x3436622e6c68730a\n"
".quad 0x202c33326c722520,0x32202c32326c7225,0x36732e6464610a3b,0x2c34326c72252034\n"
".quad 0x202c33316c722520,0x6c0a3b33326c7225,0x6c61626f6c672e64,0x346625203233662e\n"
".quad 0x34326c72255b202c,0x20636f6c2e0a3b5d,0x0a31203836352032,0x203233732e646461\n"
".quad 0x7225202c34317225,0x76630a3b31202c33,0x33752e3436752e74,0x2c35326c72252032\n"
".quad 0x610a3b3431722520,0x25203436732e6464,0x7225202c36326c72,0x343032202c35326c\n"
".quad 0x20636f6c2e0a3b38,0x0a31203836352032,0x732e6f6c2e64616d,0x37326c7225203436\n"
".quad 0x2c36326c7225202c,0x2c3435316c722520,0x730a3b346c722520,0x25203436622e6c68\n"
".quad 0x7225202c38326c72,0x3b3233202c37326c,0x3436732e7268730a,0x202c39326c722520\n"
".quad 0x33202c38326c7225,0x20636f6c2e0a3b32,0x0a31203836352032,0x203436622e6c6873\n"
".quad 0x25202c30336c7225,0x3b32202c39326c72,0x3436732e6464610a,0x202c31336c722520\n"
".quad 0x25202c33316c7225,0x646c0a3b30336c72,0x2e6c61626f6c672e,0x2c35662520323366\n"
".quad 0x5d31336c72255b20,0x3220636f6c2e0a3b,0x630a312039363520,0x33662e6e722e7476\n"
".quad 0x6625203233732e32,0x3b347225202c3535,0x3233662e6464610a,0x25202c3335662520\n"
".quad 0x336630202c353566,0x3b30303030303046,0x3233662e6464610a,0x25202c3033662520\n"
".quad 0x46336630202c3266,0x0a3b303030303030,0x64322e786574090a,0x2e3233662e34762e\n"
".quad 0x3166257b20323366,0x2c30326625202c39,0x25202c3132662520,0x745b202c7d323266\n"
".quad 0x31665f6665527865,0x333566257b202c43,0x5d7d30336625202c,0x636f6c2e090a0a3b\n"
".quad 0x3120303735203220,0x3233732e6464610a,0x25202c3731722520,0x630a3b31202c3272\n"
".quad 0x33662e6e722e7476,0x6625203233732e32,0x37317225202c3635,0x33662e6464610a3b\n"
".quad 0x202c373466252032,0x6630202c36356625,0x3030303030304633,0x2e786574090a0a3b\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x326625202c353266,0x2c37326625202c36\n"
".quad 0x202c7d3832662520,0x5f6665527865745b,0x66257b202c433366,0x30336625202c3734\n"
".quad 0x6c2e090a0a3b5d7d,0x313735203220636f,0x722e7476630a3120,0x33732e3233662e6e\n"
".quad 0x202c373566252032,0x64610a3b32317225,0x6625203233662e64,0x37356625202c3234\n"
".quad 0x303046336630202c,0x090a0a3b30303030,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x2c313366257b2032,0x25202c3233662520,0x336625202c333366,0x7865745b202c7d34\n"
".quad 0x2c4335665f666552,0x202c333566257b20,0x0a3b5d7d32346625,0x2e786574090a090a\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x336625202c373366,0x2c39336625202c38\n"
".quad 0x202c7d3034662520,0x5f6665527865745b,0x66257b202c433666,0x32346625202c3734\n"
".quad 0x6c2e090a0a3b5d7d,0x333735203220636f,0x722e7476630a3120,0x33732e3233662e6e\n"
".quad 0x202c383566252032,0x64610a3b34317225,0x6625203233662e64,0x38356625202c3435\n"
".quad 0x303046336630202c,0x090a0a3b30303030,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x2c333466257b2032,0x25202c3434662520,0x346625202c353466,0x7865745b202c7d36\n"
".quad 0x2c4337665f666552,0x202c373466257b20,0x0a3b5d7d34356625,0x2e786574090a090a\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x356625202c393466,0x2c31356625202c30\n"
".quad 0x202c7d3235662520,0x5f6665527865745b,0x66257b202c433866,0x34356625202c3335\n"
".quad 0x6461090a0a3b5d7d,0x7225203436732e64,0x6c7225202c32336c,0x3b36393034202c35\n"
".quad 0x203220636f6c2e0a,0x616d0a3120343935,0x3436732e6f6c2e64,0x202c33336c722520\n"
".quad 0x25202c32336c7225,0x25202c3435316c72,0x2e646c0a3b346c72,0x36752e6d61726170\n"
".quad 0x3135316c72252034,0x4c38315a5f5b202c,0x426279685f645f52,0x63726f665f444341\n"
".quad 0x536d665f53665065,0x7261705f695f535f,0x630a3b5d315f6d61,0x672e6f742e617476\n"
".quad 0x36752e6c61626f6c,0x2c34336c72252034,0x3b3135316c722520,0x3436622e6c68730a\n"
".quad 0x202c35336c722520,0x33202c33336c7225,0x732e7268730a3b32,0x36336c7225203436\n"
".quad 0x2c35336c7225202c,0x6f6c2e0a3b323320,0x2034393520322063,0x36622e6c68730a31\n"
".quad 0x2c37336c72252034,0x202c36336c722520,0x732e6464610a3b32,0x2c396c7225203436\n"
".quad 0x202c34336c722520,0x2e0a3b37336c7225,0x3735203220636f6c,0x317025400a312036\n"
".quad 0x3142422061726220,0x6c2e0a0a3b335f32,0x363435203220636f,0x752e766f6d0a3120\n"
".quad 0x2c38367225203233,0x3b782e6469742520,0x6469772e6c756d0a,0x7225203233752e65\n"
".quad 0x367225202c38336c,0x64610a3b34202c38,0x7225203436732e64,0x6c7225202c30346c\n"
".quad 0x336c7225202c3131,0x20636f6c2e0a3b38,0x0a31203739352032,0x65726168732e7473\n"
".quad 0x255b203233752e64,0x25202c5d30346c72,0x6464610a3b303172,0x6c7225203436732e\n"
".quad 0x316c7225202c3234,0x38336c7225202c32,0x3220636f6c2e0a3b,0x730a312038393520\n"
".quad 0x6465726168732e74,0x72255b203233752e,0x7225202c5d32346c,0x636f6c2e0a3b3031\n"
".quad 0x3120323036203220,0x3233662e6464610a,0x25202c3935662520,0x39316625202c3366\n"
".quad 0x33662e6464610a3b,0x202c303666252032,0x6625202c39356625,0x662e6464610a3b34\n"
".quad 0x2c31366625203233,0x25202c3036662520,0x6464610a3b353266,0x366625203233662e\n"
".quad 0x2c31366625202c32,0x64610a3b35662520,0x6625203233662e64,0x32366625202c3336\n"
".quad 0x0a3b31336625202c,0x203233662e646461,0x6625202c34366625,0x37336625202c3336\n"
".quad 0x33662e6464610a3b,0x202c353666252032,0x6625202c34366625,0x2e6464610a3b3334\n"
".quad 0x3636662520323366,0x202c35366625202c,0x75730a3b39346625,0x6625203233662e62\n"
".quad 0x39316625202c3736,0x0a3b35326625202c,0x203233662e646461,0x6625202c38366625\n"
".quad 0x31336625202c3736,0x33662e6275730a3b,0x202c393666252032,0x6625202c38366625\n"
".quad 0x2e6275730a3b3733,0x3037662520323366,0x202c39366625202c,0x64610a3b33346625\n"
".quad 0x6625203233662e64,0x30376625202c3137,0x0a3b39346625202c,0x203233662e627573\n"
".quad 0x6625202c32376625,0x0a3b356625202c34,0x203233662e646461,0x6625202c33376625\n"
".quad 0x31336625202c3237,0x33662e6464610a3b,0x202c343766252032,0x6625202c33376625\n"
".quad 0x2e6275730a3b3733,0x3537662520323366,0x202c34376625202c,0x75730a3b33346625\n"
".quad 0x6625203233662e62,0x35376625202c3637,0x0a3b39346625202c,0x203233662e6c756d\n"
".quad 0x6625202c37376625,0x36376625202c3637,0x6e722e616d660a3b,0x376625203233662e\n"
".quad 0x2c31376625202c38,0x25202c3137662520,0x766f6d0a3b373766,0x376625203233662e\n"
".quad 0x4346336630202c39,0x2e0a3b3030303030,0x3036203220636f6c,0x2e67656e0a312032\n"
".quad 0x3038662520323366,0x0a3b38376625202c,0x662e6e722e616d66,0x2c31386625203233\n"
".quad 0x25202c3038662520,0x366625202c393766,0x722e616d660a3b36,0x6625203233662e6e\n"
".quad 0x31386625202c3238,0x334545426630202c,0x6625202c39334538,0x662e67656e0a3b33\n"
".quad 0x2c33386625203233,0x6c0a3b3238662520,0x2e6d617261702e64,0x3631662520323366\n"
".quad 0x38315a5f5b202c30,0x6279685f645f524c,0x726f665f44434142,0x6d665f5366506563\n"
".quad 0x61705f695f535f53,0x0a3b5d325f6d6172,0x36203220636f6c2e,0x616d660a31203230\n"
".quad 0x203233662e6e722e,0x6625202c34386625,0x36316625202c3338,0x0a3b336625202c30\n"
".quad 0x203233662e766f6d,0x6630202c35386625,0x3030303030343034,0x3220636f6c2e0a3b\n"
".quad 0x660a312032303620,0x33662e6e722e616d,0x202c363866252032,0x6630202c31376625\n"
".quad 0x3030303030343034,0x0a3b36366625202c,0x203233662e6c756d,0x6625202c37386625\n"
".quad 0x30346630202c3137,0x0a3b303030303039,0x662e6e722e616d66,0x2c38386625203233\n"
".quad 0x25202c3738662520,0x386625202c313766,0x722e616d660a3b36,0x6625203233662e6e\n"
".quad 0x30386625202c3938,0x202c39376625202c,0x6f6d0a3b38386625,0x6625203233662e76\n"
".quad 0x44336630202c3039,0x0a3b393345383345,0x36203220636f6c2e,0x67656e0a31203230\n"
".quad 0x396625203233662e,0x3b39386625202c31,0x2e6e722e616d660a,0x3239662520323366\n"
".quad 0x202c31396625202c,0x6625202c30396625,0x2e67656e0a3b3931,0x3339662520323366\n"
".quad 0x0a3b32396625202c,0x662e6e722e616d66,0x2c34396625203233,0x25202c3339662520\n"
".quad 0x6625202c30363166,0x2e616d660a3b3931,0x25203233662e6e72,0x376625202c353966\n"
".quad 0x3430346630202c36,0x25202c3030303030,0x6c756d0a3b363666,0x396625203233662e\n"
".quad 0x2c36376625202c36,0x3030393034663020,0x616d660a3b303030,0x203233662e6e722e\n"
".quad 0x6625202c37396625,0x36376625202c3639,0x0a3b35396625202c,0x662e6e722e616d66\n"
".quad 0x2c38396625203233,0x25202c3038662520,0x396625202c393766,0x662e67656e0a3b37\n"
".quad 0x2c39396625203233,0x660a3b3839662520,0x33662e6e722e616d,0x2c30303166252032\n"
".quad 0x25202c3939662520,0x346625202c303966,0x33662e67656e0a3b,0x2c31303166252032\n"
".quad 0x0a3b303031662520,0x662e6e722e616d66,0x3230316625203233,0x2c3130316625202c\n"
".quad 0x202c303631662520,0x67656e0a3b346625,0x316625203233662e,0x31376625202c3330\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x30316625202c3430,0x2c35386625202c33\n"
".quad 0x660a3b3636662520,0x33662e6e722e616d,0x2c35303166252032,0x25202c3738662520\n"
".quad 0x316625202c313766,0x2e616d660a3b3430,0x25203233662e6e72,0x6625202c36303166\n"
".quad 0x39376625202c3038,0x3b3530316625202c,0x3233662e67656e0a,0x202c373031662520\n"
".quad 0x660a3b3630316625,0x33662e6e722e616d,0x2c38303166252032,0x202c373031662520\n"
".quad 0x6625202c30396625,0x2e67656e0a3b3532,0x3031662520323366,0x3830316625202c39\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x30316625202c3031,0x3036316625202c39\n"
".quad 0x0a3b35326625202c,0x203233662e67656e,0x25202c3131316625,0x616d660a3b363766\n"
".quad 0x203233662e6e722e,0x25202c3231316625,0x6625202c31313166,0x36366625202c3538\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x36396625202c3331,0x202c36376625202c\n"
".quad 0x660a3b3231316625,0x33662e6e722e616d,0x2c34313166252032,0x25202c3038662520\n"
".quad 0x316625202c393766,0x2e67656e0a3b3331,0x3131662520323366,0x3431316625202c35\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x31316625202c3631,0x2c30396625202c35\n"
".quad 0x656e0a3b35662520,0x6625203233662e67,0x316625202c373131,0x2e616d660a3b3631\n"
".quad 0x25203233662e6e72,0x6625202c38313166,0x316625202c373131,0x3b356625202c3036\n"
".quad 0x3233662e6464610a,0x202c393131662520,0x6625202c31376625,0x2e616d660a3b3637\n"
".quad 0x25203233662e6e72,0x6625202c30323166,0x346630202c393131,0x2c30303030303430\n"
".quad 0x6d0a3b3636662520,0x25203233662e6c75,0x6625202c31323166,0x346630202c393131\n"
".quad 0x3b30303030303930,0x2e6e722e616d660a,0x3231662520323366,0x3132316625202c32\n"
".quad 0x2c3931316625202c,0x0a3b303231662520,0x662e6e722e616d66,0x3332316625203233\n"
".quad 0x202c30386625202c,0x6625202c39376625,0x7476630a3b323231,0x3233662e3436662e\n"
".quad 0x25202c3164662520,0x6f6d0a3b33323166,0x6625203436662e76,0x46336430202c3264\n"
".quad 0x4331374331374339,0x0a3b433144384237,0x36203220636f6c2e,0x7476630a31203230\n"
".quad 0x3233662e3436662e,0x25202c3364662520,0x67656e0a3b313366,0x646625203436662e\n"
".quad 0x3b31646625202c34,0x2e6e722e616d660a,0x3564662520343666,0x202c34646625202c\n"
".quad 0x6625202c32646625,0x2e7476630a3b3364,0x203233662e343666,0x6625202c36646625\n"
".quad 0x67656e0a3b303631,0x646625203436662e,0x3b36646625202c37,0x2e6e722e616d660a\n"
".quad 0x3864662520343666,0x202c37646625202c,0x6625202c35646625,0x2e7476630a3b3364\n"
".quad 0x662e3233662e6e72,0x3432316625203436,0x0a3b38646625202c,0x203233662e627573\n"
".quad 0x25202c3532316625,0x376625202c363766,0x20636f6c2e0a3b31,0x0a31203230362032\n"
".quad 0x662e6e722e616d66,0x3632316625203233,0x2c3532316625202c,0x3030343034663020\n"
".quad 0x366625202c303030,0x662e6c756d0a3b36,0x3732316625203233,0x2c3532316625202c\n"
".quad 0x3030393034663020,0x616d660a3b303030,0x203233662e6e722e,0x25202c3832316625\n"
".quad 0x6625202c37323166,0x316625202c353231,0x2e616d660a3b3632,0x25203233662e6e72\n"
".quad 0x6625202c39323166,0x39376625202c3038,0x3b3832316625202c,0x3436662e7476630a\n"
".quad 0x646625203233662e,0x3932316625202c39,0x36662e7476630a3b,0x6625203233662e34\n"
".quad 0x336625202c303164,0x662e67656e0a3b37,0x3131646625203436,0x0a3b39646625202c\n"
".quad 0x662e6e722e616d66,0x3231646625203436,0x2c3131646625202c,0x25202c3264662520\n"
".quad 0x6d660a3b30316466,0x3436662e6e722e61,0x202c333164662520,0x6625202c37646625\n"
".quad 0x646625202c323164,0x2e7476630a3b3031,0x662e3233662e6e72,0x3033316625203436\n"
".quad 0x3b3331646625202c,0x3233662e6275730a,0x202c313331662520,0x25202c3330316625\n"
".quad 0x616d660a3b363766,0x203233662e6e722e,0x25202c3233316625,0x6630202c31333166\n"
".quad 0x3030303030343034,0x0a3b36366625202c,0x203233662e6c756d,0x25202c3333316625\n"
".quad 0x6630202c31333166,0x3030303030393034,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x33316625202c3433,0x3133316625202c33,0x3b3233316625202c,0x2e6e722e616d660a\n"
".quad 0x3331662520323366,0x2c30386625202c35,0x25202c3937662520,0x76630a3b34333166\n"
".quad 0x33662e3436662e74,0x2c34316466252032,0x0a3b353331662520,0x2e3436662e747663\n"
".quad 0x3164662520323366,0x3b33346625202c35,0x3436662e67656e0a,0x202c363164662520\n"
".quad 0x660a3b3431646625,0x36662e6e722e616d,0x2c37316466252034,0x202c363164662520\n"
".quad 0x6625202c32646625,0x616d660a3b353164,0x203436662e6e722e,0x25202c3831646625\n"
".quad 0x646625202c376466,0x31646625202c3731,0x722e7476630a3b35,0x36662e3233662e6e\n"
".quad 0x2c36333166252034,0x0a3b383164662520,0x203233662e627573,0x25202c3733316625\n"
".quad 0x376625202c313766,0x722e616d660a3b36,0x6625203233662e6e,0x316625202c383331\n"
".quad 0x30346630202c3733,0x202c303030303034,0x756d0a3b36366625,0x6625203233662e6c\n"
".quad 0x316625202c393331,0x30346630202c3733,0x0a3b303030303039,0x662e6e722e616d66\n"
".quad 0x3034316625203233,0x2c3933316625202c,0x202c373331662520,0x660a3b3833316625\n"
".quad 0x33662e6e722e616d,0x2c31343166252032,0x25202c3038662520,0x316625202c393766\n"
".quad 0x2e7476630a3b3034,0x203233662e343666,0x25202c3931646625,0x76630a3b31343166\n"
".quad 0x33662e3436662e74,0x2c30326466252032,0x6e0a3b3934662520,0x25203436662e6765\n"
".quad 0x6625202c31326466,0x616d660a3b393164,0x203436662e6e722e,0x25202c3232646625\n"
".quad 0x6625202c31326466,0x32646625202c3264,0x722e616d660a3b30,0x6625203436662e6e\n"
".quad 0x646625202c333264,0x3232646625202c37,0x3b3032646625202c,0x2e6e722e7476630a\n"
".quad 0x203436662e323366,0x25202c3234316625,0x646c0a3b33326466,0x752e6d617261702e\n"
".quad 0x35316c7225203436,0x38315a5f5b202c33,0x6279685f645f524c,0x726f665f44434142\n"
".quad 0x6d665f5366506563,0x61705f695f535f53,0x0a3b5d335f6d6172,0x35203220636f6c2e\n"
".quad 0x64616d0a31203035,0x203436732e6f6c2e,0x25202c35346c7225,0x6c7225202c356c72\n"
".quad 0x6c7225202c333531,0x61702e646c0a3b34,0x203436752e6d6172,0x202c3035316c7225\n"
".quad 0x5f524c38315a5f5b,0x4341426279685f64,0x506563726f665f44,0x535f536d665f5366\n"
".quad 0x6d617261705f695f,0x7476630a3b5d315f,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x25202c36346c7225,0x730a3b3035316c72,0x25203436622e6c68,0x7225202c37346c72\n"
".quad 0x3b3233202c35346c,0x3436732e7268730a,0x202c38346c722520,0x33202c37346c7225\n"
".quad 0x20636f6c2e0a3b32,0x0a31203330362032,0x203436622e6c6873,0x25202c39346c7225\n"
".quad 0x3b32202c38346c72,0x3436732e6464610a,0x202c30356c722520,0x25202c36346c7225\n"
".quad 0x74730a3b39346c72,0x2e6c61626f6c672e,0x6c72255b20323366,0x386625202c5d3035\n"
".quad 0x732e6464610a3b34,0x31356c7225203436,0x202c356c7225202c,0x6f6c2e0a3b323135\n"
".quad 0x2037383520322063,0x6f6c2e64616d0a31,0x6c7225203436732e,0x356c7225202c3235\n"
".quad 0x35316c7225202c31,0x3b346c7225202c33,0x3436622e6c68730a,0x202c33356c722520\n"
".quad 0x33202c32356c7225,0x732e7268730a3b32,0x34356c7225203436,0x2c33356c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x2037383520322063,0x36622e6c68730a31,0x2c35356c72252034\n"
".quad 0x202c34356c722520,0x732e6464610a3b32,0x36356c7225203436,0x2c36346c7225202c\n"
".quad 0x0a3b35356c722520,0x36203220636f6c2e,0x2e74730a31203430,0x662e6c61626f6c67\n"
".quad 0x356c72255b203233,0x34396625202c5d36,0x36732e6464610a3b,0x2c37356c72252034\n"
".quad 0x31202c356c722520,0x6f6c2e0a3b343230,0x2038383520322063,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x356c7225202c3835,0x35316c7225202c37,0x3b346c7225202c33\n"
".quad 0x3436622e6c68730a,0x202c39356c722520,0x33202c38356c7225,0x732e7268730a3b32\n"
".quad 0x30366c7225203436,0x2c39356c7225202c,0x6f6c2e0a3b323320,0x2038383520322063\n"
".quad 0x36622e6c68730a31,0x2c31366c72252034,0x202c30366c722520,0x732e6464610a3b32\n"
".quad 0x32366c7225203436,0x2c36346c7225202c,0x0a3b31366c722520,0x36203220636f6c2e\n"
".quad 0x2e74730a31203530,0x662e6c61626f6c67,0x366c72255b203233,0x30316625202c5d32\n"
".quad 0x732e6464610a3b32,0x33366c7225203436,0x202c356c7225202c,0x6c2e0a3b36333531\n"
".quad 0x393835203220636f,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c34366c\n"
".quad 0x316c7225202c3336,0x346c7225202c3335,0x36622e6c68730a3b,0x2c35366c72252034\n"
".quad 0x202c34366c722520,0x2e7268730a3b3233,0x366c722520343673,0x35366c7225202c36\n"
".quad 0x6c2e0a3b3233202c,0x393835203220636f,0x622e6c68730a3120,0x37366c7225203436\n"
".quad 0x2c36366c7225202c,0x2e6464610a3b3220,0x366c722520343673,0x36346c7225202c38\n"
".quad 0x3b37366c7225202c,0x203220636f6c2e0a,0x74730a3120363036,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x316625202c5d3836,0x2e6464610a3b3031,0x366c722520343673\n"
".quad 0x2c356c7225202c39,0x2e0a3b3834303220,0x3935203220636f6c,0x2e64616d0a312030\n"
".quad 0x25203436732e6f6c,0x7225202c30376c72,0x6c7225202c39366c,0x6c7225202c333531\n"
".quad 0x622e6c68730a3b34,0x31376c7225203436,0x2c30376c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x376c7225202c3237,0x2e0a3b3233202c31,0x3935203220636f6c\n"
".quad 0x2e6c68730a312030,0x376c722520343662,0x32376c7225202c33,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x346c7225202c3437,0x33376c7225202c36,0x3220636f6c2e0a3b\n"
".quad 0x730a312037303620,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d34376c\n"
".quad 0x6464610a3b383131,0x6c7225203436732e,0x356c7225202c3537,0x0a3b30363532202c\n"
".quad 0x35203220636f6c2e,0x64616d0a31203139,0x203436732e6f6c2e,0x25202c36376c7225\n"
".quad 0x7225202c35376c72,0x7225202c3335316c,0x2e6c68730a3b346c,0x376c722520343662\n"
".quad 0x36376c7225202c37,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c38376c\n"
".quad 0x0a3b3233202c3737,0x35203220636f6c2e,0x6c68730a31203139,0x6c7225203436622e\n"
".quad 0x376c7225202c3937,0x64610a3b32202c38,0x7225203436732e64,0x6c7225202c30386c\n"
".quad 0x376c7225202c3634,0x20636f6c2e0a3b39,0x0a31203830362032,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x25202c5d30386c72,0x64610a3b34323166,0x7225203436732e64\n"
".quad 0x6c7225202c31386c,0x3b32373033202c35,0x203220636f6c2e0a,0x616d0a3120323935\n"
".quad 0x3436732e6f6c2e64,0x202c32386c722520,0x25202c31386c7225,0x25202c3335316c72\n"
".quad 0x6c68730a3b346c72,0x6c7225203436622e,0x386c7225202c3338,0x730a3b3233202c32\n"
".quad 0x25203436732e7268,0x7225202c34386c72,0x3b3233202c33386c,0x203220636f6c2e0a\n"
".quad 0x68730a3120323935,0x7225203436622e6c,0x6c7225202c35386c,0x610a3b32202c3438\n"
".quad 0x25203436732e6464,0x7225202c36386c72,0x6c7225202c36346c,0x636f6c2e0a3b3538\n"
".quad 0x3120393036203220,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d36386c7225\n"
".quad 0x610a3b3033316625,0x25203436732e6464,0x7225202c37386c72,0x34383533202c356c\n"
".quad 0x3220636f6c2e0a3b,0x6d0a312033393520,0x36732e6f6c2e6461,0x2c38386c72252034\n"
".quad 0x202c37386c722520,0x202c3335316c7225,0x68730a3b346c7225,0x7225203436622e6c\n"
".quad 0x6c7225202c39386c,0x0a3b3233202c3838,0x203436732e726873,0x25202c30396c7225\n"
".quad 0x3233202c39386c72,0x3220636f6c2e0a3b,0x730a312033393520,0x25203436622e6c68\n"
".quad 0x7225202c31396c72,0x0a3b32202c30396c,0x203436732e646461,0x25202c32396c7225\n"
".quad 0x7225202c36346c72,0x6f6c2e0a3b31396c,0x2030313620322063,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x2c5d32396c72255b,0x0a3b363331662520,0x36203220636f6c2e\n"
".quad 0x2e74730a31203131,0x662e6c61626f6c67,0x396c72255b203233,0x3234316625202c5d\n"
".quad 0x6e752e6172620a3b,0x385f323142422069,0x5f323142420a0a3b,0x20636f6c2e0a3a33\n"
".quad 0x0a31203737352032,0x6172622031702540,0x3b355f3231424220,0x3220636f6c2e0a0a\n"
".quad 0x6d0a312036343520,0x25203233752e766f,0x697425202c373672,0x6c756d0a3b782e64\n"
".quad 0x33752e656469772e,0x2c33396c72252032,0x34202c3736722520,0x36732e6464610a3b\n"
".quad 0x2c35396c72252034,0x202c31316c722520,0x2e0a3b33396c7225,0x3835203220636f6c\n"
".quad 0x732e74730a312033,0x33752e6465726168,0x35396c72255b2032,0x3b30317225202c5d\n"
".quad 0x3436732e6464610a,0x202c37396c722520,0x25202c32316c7225,0x6c2e0a3b33396c72\n"
".quad 0x343835203220636f,0x68732e74730a3120,0x3233752e64657261,0x5d37396c72255b20\n"
".quad 0x0a3b30317225202c,0x20696e752e617262,0x0a3b365f32314242,0x3a355f323142420a\n"
".quad 0x3233752e766f6d0a,0x31202c3234722520,0x3220636f6c2e0a3b,0x730a312038373520\n"
".quad 0x6465726168732e74,0x5f5f5b203233752e,0x636f6c5f61647563,0x335f7261765f6c61\n"
".quad 0x5f30335f39323636,0x736e6f635f6e6f6e,0x5d6b636568635f74,0x0a3b32347225202c\n"
".quad 0x35203220636f6c2e,0x6464610a31203937,0x316625203233662e,0x39316625202c3334\n"
".quad 0x0a3b39316625202c,0x662e6e722e616d66,0x3434316625203233,0x202c35326625202c\n"
".quad 0x3030303030436630,0x34316625202c3030,0x662e6464610a3b33,0x3534316625203233\n"
".quad 0x202c31336625202c,0x64610a3b31336625,0x6625203233662e64,0x316625202c363431\n"
".quad 0x34316625202c3434,0x662e6464610a3b35,0x3734316625203233,0x202c39346625202c\n"
".quad 0x64610a3b39346625,0x6625203233662e64,0x316625202c383431,0x34316625202c3634\n"
".quad 0x662e6464610a3b37,0x3934316625203233,0x202c37336625202c,0x75730a3b37336625\n"
".quad 0x6625203233662e62,0x316625202c303531,0x34316625202c3834,0x662e6464610a3b39\n"
".quad 0x3135316625203233,0x202c33346625202c,0x75730a3b33346625,0x6625203233662e62\n"
".quad 0x316625202c323531,0x35316625202c3035,0x20636f6c2e0a3b31,0x0a31203634352032\n"
".quad 0x203233752e766f6d,0x7425202c36367225,0x756d0a3b782e6469,0x752e656469772e6c\n"
".quad 0x38396c7225203233,0x202c36367225202c,0x732e6464610a3b34,0x30316c7225203436\n"
".quad 0x31316c7225202c30,0x3b38396c7225202c,0x203220636f6c2e0a,0x74730a3120393735\n"
".quad 0x2e6465726168732e,0x6c72255b20323366,0x6625202c5d303031,0x6f6c2e0a3b323531\n"
".quad 0x2030383520322063,0x33662e6464610a31,0x2c33353166252032,0x6625202c35662520\n"
".quad 0x662e6464610a3b35,0x3435316625203233,0x25202c346625202c,0x2e6275730a3b3466\n"
".quad 0x3531662520323366,0x3435316625202c35,0x3b3335316625202c,0x3233662e6464610a\n"
".quad 0x202c363531662520,0x25202c3535316625,0x75730a3b35343166,0x6625203233662e62\n"
".quad 0x316625202c373531,0x34316625202c3635,0x662e6464610a3b37,0x3835316625203233\n"
".quad 0x2c3735316625202c,0x0a3b393431662520,0x203233662e627573,0x25202c3935316625\n"
".quad 0x6625202c38353166,0x6464610a3b313531,0x6c7225203436732e,0x6c7225202c323031\n"
".quad 0x396c7225202c3231,0x20636f6c2e0a3b38,0x0a31203038352032,0x65726168732e7473\n"
".quad 0x255b203233662e64,0x202c5d3230316c72,0x0a0a3b3935316625,0x0a3a365f32314242\n"
".quad 0x203436732e646461,0x202c3430316c7225,0x3135202c356c7225,0x61702e646c0a3b32\n"
".quad 0x203436752e6d6172,0x202c3235316c7225,0x5f524c38315a5f5b,0x4341426279685f64\n"
".quad 0x506563726f665f44,0x535f536d665f5366,0x6d617261705f695f,0x6f6c2e0a3b5d335f\n"
".quad 0x2037383520322063,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c363031\n"
".quad 0x6c7225202c343031,0x6c7225202c323531,0x61702e646c0a3b34,0x203436752e6d6172\n"
".quad 0x202c3934316c7225,0x5f524c38315a5f5b,0x4341426279685f64,0x506563726f665f44\n"
".quad 0x535f536d665f5366,0x6d617261705f695f,0x7476630a3b5d315f,0x6f6c672e6f742e61\n"
".quad 0x203436752e6c6162,0x202c3730316c7225,0x0a3b3934316c7225,0x203436622e6c6873\n"
".quad 0x202c3830316c7225,0x202c3630316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3930,0x0a3b3233202c3830,0x35203220636f6c2e,0x6c68730a31203738\n"
".quad 0x6c7225203436622e,0x6c7225202c303131,0x0a3b32202c393031,0x203436732e646461\n"
".quad 0x202c3131316c7225,0x202c3730316c7225,0x0a3b3031316c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3131316c72,0x64610a3b35326625,0x7225203436732e64\n"
".quad 0x7225202c3231316c,0x34323031202c356c,0x3220636f6c2e0a3b,0x6d0a312038383520\n"
".quad 0x36732e6f6c2e6461,0x3331316c72252034,0x3231316c7225202c,0x3235316c7225202c\n"
".quad 0x0a3b346c7225202c,0x203436622e6c6873,0x202c3431316c7225,0x202c3331316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3531,0x0a3b3233202c3431\n"
".quad 0x35203220636f6c2e,0x6c68730a31203838,0x6c7225203436622e,0x6c7225202c363131\n"
".quad 0x0a3b32202c353131,0x203436732e646461,0x202c3731316c7225,0x202c3730316c7225\n"
".quad 0x0a3b3631316c7225,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3731316c72\n"
".quad 0x6464610a3b356625,0x6c7225203436732e,0x6c7225202c383131,0x3b36333531202c35\n"
".quad 0x203220636f6c2e0a,0x616d0a3120393835,0x3436732e6f6c2e64,0x2c3931316c722520\n"
".quad 0x2c3831316c722520,0x2c3235316c722520,0x730a3b346c722520,0x25203436622e6c68\n"
".quad 0x25202c3032316c72,0x33202c3931316c72,0x732e7268730a3b32,0x32316c7225203436\n"
".quad 0x32316c7225202c31,0x2e0a3b3233202c30,0x3835203220636f6c,0x2e6c68730a312039\n"
".quad 0x316c722520343662,0x316c7225202c3232,0x610a3b32202c3132,0x25203436732e6464\n"
".quad 0x25202c3332316c72,0x25202c3730316c72,0x730a3b3232316c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3332316c,0x6464610a3b393166,0x6c7225203436732e\n"
".quad 0x6c7225202c343231,0x3b38343032202c35,0x203220636f6c2e0a,0x616d0a3120303935\n"
".quad 0x3436732e6f6c2e64,0x2c3532316c722520,0x2c3432316c722520,0x2c3235316c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3632316c72,0x33202c3532316c72\n"
".quad 0x732e7268730a3b32,0x32316c7225203436,0x32316c7225202c37,0x2e0a3b3233202c36\n"
".quad 0x3935203220636f6c,0x2e6c68730a312030,0x316c722520343662,0x316c7225202c3832\n"
".quad 0x610a3b32202c3732,0x25203436732e6464,0x25202c3932316c72,0x25202c3730316c72\n"
".quad 0x730a3b3832316c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3932316c\n"
".quad 0x2e6464610a3b3466,0x316c722520343673,0x356c7225202c3033,0x0a3b30363532202c\n"
".quad 0x35203220636f6c2e,0x64616d0a31203139,0x203436732e6f6c2e,0x202c3133316c7225\n"
".quad 0x202c3033316c7225,0x202c3235316c7225,0x68730a3b346c7225,0x7225203436622e6c\n"
".quad 0x7225202c3233316c,0x3233202c3133316c,0x36732e7268730a3b,0x3333316c72252034\n"
".quad 0x3233316c7225202c,0x6c2e0a3b3233202c,0x313935203220636f,0x622e6c68730a3120\n"
".quad 0x33316c7225203436,0x33316c7225202c34,0x64610a3b32202c33,0x7225203436732e64\n"
".quad 0x7225202c3533316c,0x7225202c3730316c,0x74730a3b3433316c,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d353331,0x2e6464610a3b3334,0x316c722520343673\n"
".quad 0x356c7225202c3633,0x0a3b32373033202c,0x35203220636f6c2e,0x64616d0a31203239\n"
".quad 0x203436732e6f6c2e,0x202c3733316c7225,0x202c3633316c7225,0x202c3235316c7225\n"
".quad 0x68730a3b346c7225,0x7225203436622e6c,0x7225202c3833316c,0x3233202c3733316c\n"
".quad 0x36732e7268730a3b,0x3933316c72252034,0x3833316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x323935203220636f,0x622e6c68730a3120,0x34316c7225203436,0x33316c7225202c30\n"
".quad 0x64610a3b32202c39,0x7225203436732e64,0x7225202c3134316c,0x7225202c3730316c\n"
".quad 0x74730a3b3034316c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d313431\n"
".quad 0x2e6464610a3b3934,0x316c722520343673,0x356c7225202c3234,0x0a3b34383533202c\n"
".quad 0x35203220636f6c2e,0x64616d0a31203339,0x203436732e6f6c2e,0x202c3334316c7225\n"
".quad 0x202c3234316c7225,0x202c3235316c7225,0x68730a3b346c7225,0x7225203436622e6c\n"
".quad 0x7225202c3434316c,0x3233202c3334316c,0x36732e7268730a3b,0x3534316c72252034\n"
".quad 0x3434316c7225202c,0x6c2e0a3b3233202c,0x333935203220636f,0x622e6c68730a3120\n"
".quad 0x34316c7225203436,0x34316c7225202c36,0x64610a3b32202c35,0x7225203436732e64\n"
".quad 0x7225202c3734316c,0x7225202c3730316c,0x74730a3b3634316c,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d373431,0x636f6c2e0a3b3133,0x3120343935203220\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x25202c5d396c7225,0x6172620a3b373366\n"
".quad 0x31424220696e752e,0x42420a0a3b385f32,0x6c2e0a3a375f3231,0x303635203220636f\n"
".quad 0x68732e74730a3120,0x3233752e64657261,0x2c5d376c72255b20,0x2e0a3b3031722520\n"
".quad 0x3635203220636f6c,0x732e74730a312031,0x33752e6465726168,0x5d386c72255b2032\n"
".quad 0x0a3b30317225202c,0x3a385f323142420a,0x203220636f6c2e0a,0x61620a3120353136\n"
".quad 0x3020636e79732e72,0x7d0a3b7465720a3b,0x7972746e652e0a0a,0x5f524c32315a5f20\n"
".quad 0x4342416279685f64,0x286d665f53665044,0x206d617261702e0a,0x315a5f203436752e\n"
".quad 0x79685f645f524c32,0x5366504443424162,0x617261705f6d665f,0x61702e0a2c305f6d\n"
".quad 0x3436752e206d6172,0x5f524c32315a5f20,0x4342416279685f64,0x5f6d665f53665044\n"
".quad 0x2c315f6d61726170,0x206d617261702e0a,0x315a5f203233662e,0x79685f645f524c32\n"
".quad 0x5366504443424162,0x617261705f6d665f,0x61702e0a2c325f6d,0x3436752e206d6172\n"
".quad 0x5f524c32315a5f20,0x4342416279685f64,0x5f6d665f53665044,0x0a335f6d61726170\n"
".quad 0x6765722e0a7b0a29,0x6625203233662e20,0x2e0a3b3e3434313c,0x3436662e20676572\n"
".quad 0x3e34323c64662520,0x2e206765722e0a3b,0x3c70252064657270,0x6765722e0a3b3e37\n"
".quad 0x7225203233732e20,0x722e0a3b3e30353c,0x203436732e206765,0x3e3333313c6c7225\n"
".quad 0x702e646c0a0a0a3b,0x3436752e6d617261,0x202c30316c722520,0x5f524c32315a5f5b\n"
".quad 0x4342416279685f64,0x5f6d665f53665044,0x5d305f6d61726170,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5a5f5b202c316c72,0x685f645f524c3231,0x6650444342416279\n"
".quad 0x7261705f6d665f53,0x6c0a3b5d315f6d61,0x2e6d617261702e64,0x326c722520343675\n"
".quad 0x4c32315a5f5b202c,0x416279685f645f52,0x665f536650444342,0x5f6d617261705f6d\n"
".quad 0x617476630a3b5d33,0x626f6c672e6f742e,0x25203436752e6c61,0x6c7225202c336c72\n"
".quad 0x2e617476630a3b31,0x61626f6c672e6f74,0x7225203436752e6c,0x316c7225202c346c\n"
".quad 0x20636f6c2e0a3b30,0x0a31203134362032,0x203233752e766f6d,0x746e25202c347225\n"
".quad 0x6f6d0a3b782e6469,0x7225203233752e76,0x6961746325202c35,0x766f6d0a3b782e64\n"
".quad 0x367225203233752e,0x782e64697425202c,0x6f6c2e64616d0a3b,0x317225203233732e\n"
".quad 0x25202c347225202c,0x3b367225202c3572,0x203220636f6c2e0a,0x6f6d0a3120323436\n"
".quad 0x7225203233752e76,0x6469746e25202c37,0x2e766f6d0a3b792e,0x2c38722520323375\n"
".quad 0x2e64696174632520,0x752e766f6d0a3b79,0x202c397225203233,0x0a3b792e64697425\n"
".quad 0x732e6f6c2e64616d,0x202c327225203233,0x387225202c377225,0x2e0a3b397225202c\n"
".quad 0x3436203220636f6c,0x2e7476630a312033,0x732e3233662e6e72,0x2c32316625203233\n"
".quad 0x6d660a3b31722520,0x3233662e6e722e61,0x25202c3331662520,0x336630202c323166\n"
".quad 0x2c30303030303845,0x4446433334663020,0x6f6c2e0a3b303030,0x2034343620322063\n"
".quad 0x6e722e7476630a31,0x3233732e3233662e,0x7225202c32662520,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x2c326625202c3431,0x3030384533663020,0x346630202c303030\n"
".quad 0x3b30303044463933,0x3436752e7476630a,0x6c7225203233752e,0x0a3b317225202c35\n"
".quad 0x36203220636f6c2e,0x7476630a31203534,0x3233732e3436732e,0x25202c366c722520\n"
".quad 0x2e64616d0a3b3272,0x25203436732e6f6c,0x6c7225202c376c72,0x2c326c7225202c36\n"
".quad 0x610a3b356c722520,0x25203233662e6464,0x316625202c353166,0x4633436630202c33\n"
".quad 0x610a3b3030304346,0x25203233662e6464,0x316625202c363166,0x4233436630202c34\n"
".quad 0x2e0a3b3030304346,0x3437203220636f6c,0x662e6c756d0a3120,0x2c37316625203233\n"
".quad 0x25202c3631662520,0x616d660a3b363166,0x203233662e6e722e,0x6625202c38316625\n"
".quad 0x35316625202c3531,0x0a3b37316625202c,0x2e746c2e70746573,0x2c31702520323366\n"
".quad 0x30202c3831662520,0x3030303038323466,0x732e6464610a3b30,0x202c337225203233\n"
".quad 0x3b312d202c317225,0x74672e707465730a,0x327025203233752e,0x37202c337225202c\n"
".quad 0x636f6c2e0a3b3536,0x3120393436203220,0x746c2e707465730a,0x337025203233732e\n"
".quad 0x31202c327225202c,0x6572702e726f0a3b,0x25202c3470252064,0x3b337025202c3270\n"
".quad 0x203220636f6c2e0a,0x65730a3120393436,0x33732e74672e7074,0x25202c3570252032\n"
".quad 0x3b303135202c3272,0x646572702e726f0a,0x7025202c36702520,0x0a3b357025202c34\n"
".quad 0x36203220636f6c2e,0x7025400a31203934,0x4242206172622036,0x730a0a3b345f3331\n"
".quad 0x25203436622e6c68,0x7225202c31316c72,0x0a3b3233202c376c,0x203436732e726873\n"
".quad 0x25202c32316c7225,0x3233202c31316c72,0x3220636f6c2e0a3b,0x730a312034353620\n"
".quad 0x25203436622e6c68,0x7225202c33316c72,0x0a3b32202c32316c,0x203436732e646461\n"
".quad 0x25202c34316c7225,0x6c7225202c346c72,0x672e646c0a3b3331,0x33662e6c61626f6c\n"
".quad 0x5b202c3366252032,0x0a3b5d34316c7225,0x203233732e646461,0x7225202c31317225\n"
".quad 0x2e0a3b312d202c32,0x3536203220636f6c,0x2e7476630a312035,0x203233752e343675\n"
".quad 0x25202c35316c7225,0x6464610a3b313172,0x6c7225203436732e,0x316c7225202c3631\n"
".quad 0x3b34323031202c35,0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3233316c\n"
".quad 0x5f645f524c32315a,0x5044434241627968,0x61705f6d665f5366,0x0a3b5d335f6d6172\n"
".quad 0x36203220636f6c2e,0x64616d0a31203535,0x203436732e6f6c2e,0x25202c37316c7225\n"
".quad 0x7225202c36316c72,0x7225202c3233316c,0x2e6c68730a3b356c,0x316c722520343662\n"
".quad 0x37316c7225202c38,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c39316c\n"
".quad 0x0a3b3233202c3831,0x36203220636f6c2e,0x6c68730a31203535,0x6c7225203436622e\n"
".quad 0x316c7225202c3032,0x64610a3b32202c39,0x7225203436732e64,0x6c7225202c31326c\n"
".quad 0x30326c7225202c34,0x6f6c672e646c0a3b,0x203233662e6c6162,0x72255b202c346625\n"
".quad 0x6c2e0a3b5d31326c,0x363536203220636f,0x732e6464610a3120,0x2c33317225203233\n"
".quad 0x3b31202c32722520,0x3436752e7476630a,0x6c7225203233752e,0x33317225202c3232\n"
".quad 0x36732e6464610a3b,0x2c33326c72252034,0x202c32326c722520,0x6c2e0a3b38343032\n"
".quad 0x363536203220636f,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c34326c\n"
".quad 0x316c7225202c3332,0x356c7225202c3233,0x36622e6c68730a3b,0x2c35326c72252034\n"
".quad 0x202c34326c722520,0x2e7268730a3b3233,0x326c722520343673,0x35326c7225202c36\n"
".quad 0x6c2e0a3b3233202c,0x363536203220636f,0x622e6c68730a3120,0x37326c7225203436\n"
".quad 0x2c36326c7225202c,0x2e6464610a3b3220,0x326c722520343673,0x2c346c7225202c38\n"
".quad 0x0a3b37326c722520,0x61626f6c672e646c,0x6625203233662e6c,0x326c72255b202c35\n"
".quad 0x636f6c2e0a3b5d38,0x3120373536203220,0x2e6e722e7476630a,0x203233732e323366\n"
".quad 0x7225202c35356625,0x662e6464610a3b33,0x2c33356625203233,0x30202c3535662520\n"
".quad 0x3030303030463366,0x662e6464610a3b30,0x2c30336625203233,0x6630202c32662520\n"
".quad 0x3030303030304633,0x33752e766f6d0a3b,0x202c353172252032,0x786574090a0a3b30\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x6625202c39316625,0x31326625202c3032\n"
".quad 0x2c7d32326625202c,0x6665527865745b20,0x257b202c4331665f,0x336625202c333566\n"
".quad 0x2e090a0a3b5d7d30,0x3536203220636f6c,0x2e6464610a312038,0x3631722520323373\n"
".quad 0x31202c317225202c,0x6e722e7476630a3b,0x3233732e3233662e,0x25202c3635662520\n"
".quad 0x6464610a3b363172,0x346625203233662e,0x2c36356625202c37,0x3030304633663020\n"
".quad 0x74090a0a3b303030,0x34762e64322e7865,0x3233662e3233662e,0x202c353266257b20\n"
".quad 0x6625202c36326625,0x38326625202c3732,0x527865745b202c7d,0x202c4333665f6665\n"
".quad 0x25202c373466257b,0x0a0a3b5d7d303366,0x203220636f6c2e09,0x76630a3120393536\n"
".quad 0x3233662e6e722e74,0x356625203233732e,0x3b31317225202c37,0x3233662e6464610a\n"
".quad 0x25202c3234662520,0x336630202c373566,0x3b30303030303046,0x322e786574090a0a\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x32336625202c3133,0x202c33336625202c\n"
".quad 0x5b202c7d34336625,0x665f666552786574,0x3566257b202c4335,0x7d32346625202c33\n"
".quad 0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e,0x202c373366257b20\n"
".quad 0x6625202c38336625,0x30346625202c3933,0x527865745b202c7d,0x202c4336665f6665\n"
".quad 0x25202c373466257b,0x0a0a3b5d7d323466,0x203220636f6c2e09,0x76630a3120313636\n"
".quad 0x3233662e6e722e74,0x356625203233732e,0x3b33317225202c38,0x3233662e6464610a\n"
".quad 0x25202c3435662520,0x336630202c383566,0x3b30303030303046,0x322e786574090a0a\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x34346625202c3334,0x202c35346625202c\n"
".quad 0x5b202c7d36346625,0x665f666552786574,0x3466257b202c4337,0x7d34356625202c37\n"
".quad 0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e,0x202c393466257b20\n"
".quad 0x6625202c30356625,0x32356625202c3135,0x527865745b202c7d,0x202c4338665f6665\n"
".quad 0x25202c333566257b,0x0a0a3b5d7d343566,0x3436732e64646109,0x202c39326c722520\n"
".quad 0x3533202c366c7225,0x636f6c2e0a3b3438,0x3120313736203220,0x2e6f6c2e64616d0a\n"
".quad 0x336c722520343673,0x39326c7225202c30,0x3233316c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x25202c31336c7225,0x3233202c30336c72,0x36732e7268730a3b\n"
".quad 0x2c32336c72252034,0x202c31336c722520,0x636f6c2e0a3b3233,0x3120313736203220\n"
".quad 0x3436622e6c68730a,0x202c33336c722520,0x32202c32336c7225,0x36732e6464610a3b\n"
".quad 0x202c386c72252034,0x7225202c336c7225,0x6464610a3b33336c,0x6c7225203436732e\n"
".quad 0x366c7225202c3433,0x0a3b36393034202c,0x36203220636f6c2e,0x64616d0a31203237\n"
".quad 0x203436732e6f6c2e,0x25202c35336c7225,0x7225202c34336c72,0x7225202c3233316c\n"
".quad 0x2e6c68730a3b356c,0x336c722520343662,0x35336c7225202c36,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c37336c,0x0a3b3233202c3633,0x36203220636f6c2e\n"
".quad 0x6c68730a31203237,0x6c7225203436622e,0x336c7225202c3833,0x64610a3b32202c37\n"
".quad 0x7225203436732e64,0x336c7225202c396c,0x3b38336c7225202c,0x203220636f6c2e0a\n"
".quad 0x25400a3120343636,0x4220617262203170,0x0a0a3b335f333142,0x36203220636f6c2e\n"
".quad 0x6464610a31203837,0x356625203233662e,0x202c336625202c39,0x64610a3b39316625\n"
".quad 0x6625203233662e64,0x39356625202c3036,0x610a3b346625202c,0x25203233662e6464\n"
".quad 0x366625202c313666,0x3b35326625202c30,0x3233662e6464610a,0x25202c3236662520\n"
".quad 0x356625202c313666,0x33662e6464610a3b,0x202c333666252032,0x6625202c32366625\n"
".quad 0x2e6464610a3b3133,0x3436662520323366,0x202c33366625202c,0x64610a3b37336625\n"
".quad 0x6625203233662e64,0x34366625202c3536,0x0a3b33346625202c,0x203233662e646461\n"
".quad 0x6625202c36366625,0x39346625202c3536,0x33662e6275730a3b,0x202c373666252032\n"
".quad 0x6625202c39316625,0x2e6464610a3b3532,0x3836662520323366,0x202c37366625202c\n"
".quad 0x75730a3b31336625,0x6625203233662e62,0x38366625202c3936,0x0a3b37336625202c\n"
".quad 0x203233662e627573,0x6625202c30376625,0x33346625202c3936,0x33662e6464610a3b\n"
".quad 0x202c313766252032,0x6625202c30376625,0x2e6275730a3b3934,0x3237662520323366\n"
".quad 0x25202c346625202c,0x2e6464610a3b3566,0x3337662520323366,0x202c32376625202c\n"
".quad 0x64610a3b31336625,0x6625203233662e64,0x33376625202c3437,0x0a3b37336625202c\n"
".quad 0x203233662e627573,0x6625202c35376625,0x33346625202c3437,0x33662e6275730a3b\n"
".quad 0x202c363766252032,0x6625202c35376625,0x2e6c756d0a3b3934,0x3737662520323366\n"
".quad 0x202c36376625202c,0x6d660a3b36376625,0x3233662e6e722e61,0x25202c3837662520\n"
".quad 0x376625202c313766,0x3b37376625202c31,0x3233662e766f6d0a,0x30202c3937662520\n"
".quad 0x3030303043463366,0x20636f6c2e0a3b30,0x0a31203837362032,0x203233662e67656e\n"
".quad 0x6625202c30386625,0x2e616d660a3b3837,0x25203233662e6e72,0x386625202c313866\n"
".quad 0x2c39376625202c30,0x660a3b3636662520,0x33662e6e722e616d,0x202c323866252032\n"
".quad 0x6630202c31386625,0x3933453833454542,0x6e0a3b336625202c,0x25203233662e6765\n"
".quad 0x386625202c333866,0x61702e646c0a3b32,0x203233662e6d6172,0x5b202c3334316625\n"
".quad 0x645f524c32315a5f,0x444342416279685f,0x705f6d665f536650,0x3b5d325f6d617261\n"
".quad 0x203220636f6c2e0a,0x6d660a3120383736,0x3233662e6e722e61,0x25202c3438662520\n"
".quad 0x316625202c333866,0x3b336625202c3334,0x3233662e766f6d0a,0x30202c3538662520\n"
".quad 0x3030303034303466,0x20636f6c2e0a3b30,0x0a31203837362032,0x662e6e722e616d66\n"
".quad 0x2c36386625203233,0x30202c3137662520,0x3030303034303466,0x3b36366625202c30\n"
".quad 0x3233662e6c756d0a,0x25202c3738662520,0x346630202c313766,0x3b30303030303930\n"
".quad 0x2e6e722e616d660a,0x3838662520323366,0x202c37386625202c,0x6625202c31376625\n"
".quad 0x2e616d660a3b3638,0x25203233662e6e72,0x386625202c393866,0x2c39376625202c30\n"
".quad 0x6d0a3b3838662520,0x25203233662e766f,0x336630202c303966,0x3b39334538334544\n"
".quad 0x203220636f6c2e0a,0x656e0a3120383736,0x6625203233662e67,0x39386625202c3139\n"
".quad 0x6e722e616d660a3b,0x396625203233662e,0x2c31396625202c32,0x25202c3039662520\n"
".quad 0x67656e0a3b393166,0x396625203233662e,0x3b32396625202c33,0x2e6e722e616d660a\n"
".quad 0x3439662520323366,0x202c33396625202c,0x25202c3334316625,0x616d660a3b393166\n"
".quad 0x203233662e6e722e,0x6625202c35396625,0x30346630202c3637,0x202c303030303034\n"
".quad 0x756d0a3b36366625,0x6625203233662e6c,0x36376625202c3639,0x303930346630202c\n"
".quad 0x6d660a3b30303030,0x3233662e6e722e61,0x25202c3739662520,0x376625202c363966\n"
".quad 0x3b35396625202c36,0x2e6e722e616d660a,0x3839662520323366,0x202c30386625202c\n"
".quad 0x6625202c39376625,0x2e67656e0a3b3739,0x3939662520323366,0x0a3b38396625202c\n"
".quad 0x662e6e722e616d66,0x3030316625203233,0x202c39396625202c,0x6625202c30396625\n"
".quad 0x662e67656e0a3b34,0x3130316625203233,0x3b3030316625202c,0x2e6e722e616d660a\n"
".quad 0x3031662520323366,0x3130316625202c32,0x2c3334316625202c,0x656e0a3b34662520\n"
".quad 0x6625203233662e67,0x376625202c333031,0x722e616d660a3b31,0x6625203233662e6e\n"
".quad 0x316625202c343031,0x35386625202c3330,0x0a3b36366625202c,0x662e6e722e616d66\n"
".quad 0x3530316625203233,0x202c37386625202c,0x6625202c31376625,0x616d660a3b343031\n"
".quad 0x203233662e6e722e,0x25202c3630316625,0x376625202c303866,0x3530316625202c39\n"
".quad 0x33662e67656e0a3b,0x2c37303166252032,0x0a3b363031662520,0x662e6e722e616d66\n"
".quad 0x3830316625203233,0x2c3730316625202c,0x25202c3039662520,0x67656e0a3b353266\n"
".quad 0x316625203233662e,0x30316625202c3930,0x722e616d660a3b38,0x6625203233662e6e\n"
".quad 0x316625202c303131,0x34316625202c3930,0x3b35326625202c33,0x3233662e67656e0a\n"
".quad 0x202c313131662520,0x6d660a3b36376625,0x3233662e6e722e61,0x202c323131662520\n"
".quad 0x25202c3131316625,0x366625202c353866,0x722e616d660a3b36,0x6625203233662e6e\n"
".quad 0x396625202c333131,0x2c36376625202c36,0x0a3b323131662520,0x662e6e722e616d66\n"
".quad 0x3431316625203233,0x202c30386625202c,0x6625202c39376625,0x67656e0a3b333131\n"
".quad 0x316625203233662e,0x31316625202c3531,0x722e616d660a3b34,0x6625203233662e6e\n"
".quad 0x316625202c363131,0x30396625202c3531,0x6e0a3b356625202c,0x25203233662e6765\n"
".quad 0x6625202c37313166,0x616d660a3b363131,0x203233662e6e722e,0x25202c3831316625\n"
".quad 0x6625202c37313166,0x356625202c333431,0x33662e6464610a3b,0x2c39313166252032\n"
".quad 0x25202c3137662520,0x616d660a3b363766,0x203233662e6e722e,0x25202c3032316625\n"
".quad 0x6630202c39313166,0x3030303030343034,0x0a3b36366625202c,0x203233662e6c756d\n"
".quad 0x25202c3132316625,0x6630202c39313166,0x3030303030393034,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x32316625202c3232,0x3931316625202c31,0x3b3032316625202c\n"
".quad 0x2e6e722e616d660a,0x3231662520323366,0x2c30386625202c33,0x25202c3937662520\n"
".quad 0x76630a3b32323166,0x33662e3436662e74,0x202c316466252032,0x6d0a3b3332316625\n"
".quad 0x25203436662e766f,0x336430202c326466,0x3137433137433946,0x3b43314438423743\n"
".quad 0x203220636f6c2e0a,0x76630a3120383736,0x33662e3436662e74,0x202c336466252032\n"
".quad 0x656e0a3b31336625,0x6625203436662e67,0x31646625202c3464,0x6e722e616d660a3b\n"
".quad 0x646625203436662e,0x2c34646625202c35,0x25202c3264662520,0x7476630a3b336466\n"
".quad 0x3233662e3436662e,0x25202c3664662520,0x656e0a3b33343166,0x6625203436662e67\n"
".quad 0x36646625202c3764,0x6e722e616d660a3b,0x646625203436662e,0x2c37646625202c38\n"
".quad 0x25202c3564662520,0x7476630a3b336466,0x2e3233662e6e722e,0x3231662520343666\n"
".quad 0x3b38646625202c34,0x3233662e6275730a,0x202c353231662520,0x6625202c36376625\n"
".quad 0x636f6c2e0a3b3137,0x3120383736203220,0x2e6e722e616d660a,0x3231662520323366\n"
".quad 0x3532316625202c36,0x303430346630202c,0x6625202c30303030,0x2e6c756d0a3b3636\n"
".quad 0x3231662520323366,0x3532316625202c37,0x303930346630202c,0x6d660a3b30303030\n"
".quad 0x3233662e6e722e61,0x202c383231662520,0x25202c3732316625,0x6625202c35323166\n"
".quad 0x616d660a3b363231,0x203233662e6e722e,0x25202c3932316625,0x376625202c303866\n"
".quad 0x3832316625202c39,0x36662e7476630a3b,0x6625203233662e34,0x32316625202c3964\n"
".quad 0x662e7476630a3b39,0x25203233662e3436,0x6625202c30316466,0x2e67656e0a3b3733\n"
".quad 0x3164662520343666,0x3b39646625202c31,0x2e6e722e616d660a,0x3164662520343666\n"
".quad 0x3131646625202c32,0x202c32646625202c,0x660a3b3031646625,0x36662e6e722e616d\n"
".quad 0x2c33316466252034,0x25202c3764662520,0x6625202c32316466,0x7476630a3b303164\n"
".quad 0x2e3233662e6e722e,0x3331662520343666,0x3331646625202c30,0x33662e6275730a3b\n"
".quad 0x2c31333166252032,0x202c333031662520,0x6d660a3b36376625,0x3233662e6e722e61\n"
".quad 0x202c323331662520,0x30202c3133316625,0x3030303034303466,0x3b36366625202c30\n"
".quad 0x3233662e6c756d0a,0x202c333331662520,0x30202c3133316625,0x3030303039303466\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x316625202c343331,0x33316625202c3333\n"
".quad 0x3233316625202c31,0x6e722e616d660a3b,0x316625203233662e,0x30386625202c3533\n"
".quad 0x202c39376625202c,0x630a3b3433316625,0x662e3436662e7476,0x3431646625203233\n"
".quad 0x3b3533316625202c,0x3436662e7476630a,0x646625203233662e,0x33346625202c3531\n"
".quad 0x36662e67656e0a3b,0x2c36316466252034,0x0a3b343164662520,0x662e6e722e616d66\n"
".quad 0x3731646625203436,0x2c3631646625202c,0x25202c3264662520,0x6d660a3b35316466\n"
".quad 0x3436662e6e722e61,0x202c383164662520,0x6625202c37646625,0x646625202c373164\n"
".quad 0x2e7476630a3b3531,0x662e3233662e6e72,0x3633316625203436,0x3b3831646625202c\n"
".quad 0x3233662e6275730a,0x202c373331662520,0x6625202c31376625,0x2e616d660a3b3637\n"
".quad 0x25203233662e6e72,0x6625202c38333166,0x346630202c373331,0x2c30303030303430\n"
".quad 0x6d0a3b3636662520,0x25203233662e6c75,0x6625202c39333166,0x346630202c373331\n"
".quad 0x3b30303030303930,0x2e6e722e616d660a,0x3431662520323366,0x3933316625202c30\n"
".quad 0x2c3733316625202c,0x0a3b383331662520,0x662e6e722e616d66,0x3134316625203233\n"
".quad 0x202c30386625202c,0x6625202c39376625,0x7476630a3b303431,0x3233662e3436662e\n"
".quad 0x202c393164662520,0x630a3b3134316625,0x662e3436662e7476,0x3032646625203233\n"
".quad 0x0a3b39346625202c,0x203436662e67656e,0x25202c3132646625,0x6d660a3b39316466\n"
".quad 0x3436662e6e722e61,0x202c323264662520,0x25202c3132646625,0x646625202c326466\n"
".quad 0x2e616d660a3b3032,0x25203436662e6e72,0x6625202c33326466,0x32646625202c3764\n"
".quad 0x3032646625202c32,0x6e722e7476630a3b,0x3436662e3233662e,0x202c323431662520\n"
".quad 0x6c0a3b3332646625,0x2e6d617261702e64,0x316c722520343675,0x315a5f5b202c3133\n"
".quad 0x79685f645f524c32,0x5366504443424162,0x617261705f6d665f,0x6c2e0a3b5d335f6d\n"
".quad 0x353436203220636f,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c31346c\n"
".quad 0x33316c7225202c36,0x3b356c7225202c31,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5f5b202c3932316c,0x5f645f524c32315a,0x5044434241627968,0x61705f6d665f5366\n"
".quad 0x0a3b5d315f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67,0x32346c7225203436\n"
".quad 0x3932316c7225202c,0x36622e6c68730a3b,0x2c33346c72252034,0x202c31346c722520\n"
".quad 0x2e7268730a3b3233,0x346c722520343673,0x33346c7225202c34,0x6c2e0a3b3233202c\n"
".quad 0x393736203220636f,0x622e6c68730a3120,0x35346c7225203436,0x2c34346c7225202c\n"
".quad 0x2e6464610a3b3220,0x346c722520343673,0x32346c7225202c36,0x3b35346c7225202c\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d36346c7225,0x64610a3b34386625\n"
".quad 0x7225203436732e64,0x6c7225202c37346c,0x0a3b323135202c36,0x36203220636f6c2e\n"
".quad 0x64616d0a31203536,0x203436732e6f6c2e,0x25202c38346c7225,0x7225202c37346c72\n"
".quad 0x7225202c3133316c,0x2e6c68730a3b356c,0x346c722520343662,0x38346c7225202c39\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c30356c,0x0a3b3233202c3934\n"
".quad 0x36203220636f6c2e,0x6c68730a31203536,0x6c7225203436622e,0x356c7225202c3135\n"
".quad 0x64610a3b32202c30,0x7225203436732e64,0x6c7225202c32356c,0x356c7225202c3234\n"
".quad 0x20636f6c2e0a3b31,0x0a31203038362032,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x25202c5d32356c72,0x6464610a3b343966,0x6c7225203436732e,0x366c7225202c3335\n"
".quad 0x0a3b34323031202c,0x36203220636f6c2e,0x64616d0a31203636,0x203436732e6f6c2e\n"
".quad 0x25202c34356c7225,0x7225202c33356c72,0x7225202c3133316c,0x2e6c68730a3b356c\n"
".quad 0x356c722520343662,0x34356c7225202c35,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c36356c,0x0a3b3233202c3535,0x36203220636f6c2e,0x6c68730a31203636\n"
".quad 0x6c7225203436622e,0x356c7225202c3735,0x64610a3b32202c36,0x7225203436732e64\n"
".quad 0x6c7225202c38356c,0x356c7225202c3234,0x20636f6c2e0a3b37,0x0a31203138362032\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d38356c72,0x64610a3b32303166\n"
".quad 0x7225203436732e64,0x6c7225202c39356c,0x3b36333531202c36,0x203220636f6c2e0a\n"
".quad 0x616d0a3120373636,0x3436732e6f6c2e64,0x202c30366c722520,0x25202c39356c7225\n"
".quad 0x25202c3133316c72,0x6c68730a3b356c72,0x6c7225203436622e,0x366c7225202c3136\n"
".quad 0x730a3b3233202c30,0x25203436732e7268,0x7225202c32366c72,0x3b3233202c31366c\n"
".quad 0x203220636f6c2e0a,0x68730a3120373636,0x7225203436622e6c,0x6c7225202c33366c\n"
".quad 0x610a3b32202c3236,0x25203436732e6464,0x7225202c34366c72,0x6c7225202c32346c\n"
".quad 0x636f6c2e0a3b3336,0x3120323836203220,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d34366c7225,0x610a3b3031316625,0x25203436732e6464,0x7225202c35366c72\n"
".quad 0x38343032202c366c,0x3220636f6c2e0a3b,0x6d0a312038363620,0x36732e6f6c2e6461\n"
".quad 0x2c36366c72252034,0x202c35366c722520,0x202c3133316c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x6c7225202c37366c,0x0a3b3233202c3636,0x203436732e726873\n"
".quad 0x25202c38366c7225,0x3233202c37366c72,0x3220636f6c2e0a3b,0x730a312038363620\n"
".quad 0x25203436622e6c68,0x7225202c39366c72,0x0a3b32202c38366c,0x203436732e646461\n"
".quad 0x25202c30376c7225,0x7225202c32346c72,0x6f6c2e0a3b39366c,0x2033383620322063\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d30376c72255b,0x0a3b383131662520\n"
".quad 0x203436732e646461,0x25202c31376c7225,0x363532202c366c72,0x20636f6c2e0a3b30\n"
".quad 0x0a31203936362032,0x732e6f6c2e64616d,0x32376c7225203436,0x2c31376c7225202c\n"
".quad 0x2c3133316c722520,0x730a3b356c722520,0x25203436622e6c68,0x7225202c33376c72\n"
".quad 0x3b3233202c32376c,0x3436732e7268730a,0x202c34376c722520,0x33202c33376c7225\n"
".quad 0x20636f6c2e0a3b32,0x0a31203936362032,0x203436622e6c6873,0x25202c35376c7225\n"
".quad 0x3b32202c34376c72,0x3436732e6464610a,0x202c36376c722520,0x25202c32346c7225\n"
".quad 0x6c2e0a3b35376c72,0x343836203220636f,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x5d36376c72255b20,0x3b3432316625202c,0x3436732e6464610a,0x202c37376c722520\n"
".quad 0x3033202c366c7225,0x636f6c2e0a3b3237,0x3120303736203220,0x2e6f6c2e64616d0a\n"
".quad 0x376c722520343673,0x37376c7225202c38,0x3133316c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x25202c39376c7225,0x3233202c38376c72,0x36732e7268730a3b\n"
".quad 0x2c30386c72252034,0x202c39376c722520,0x636f6c2e0a3b3233,0x3120303736203220\n"
".quad 0x3436622e6c68730a,0x202c31386c722520,0x32202c30386c7225,0x36732e6464610a3b\n"
".quad 0x2c32386c72252034,0x202c32346c722520,0x2e0a3b31386c7225,0x3836203220636f6c\n"
".quad 0x672e74730a312035,0x33662e6c61626f6c,0x32386c72255b2032,0x3033316625202c5d\n"
".quad 0x3220636f6c2e0a3b,0x6d0a312031373620,0x36732e6f6c2e6461,0x2c34386c72252034\n"
".quad 0x202c39326c722520,0x202c3133316c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x6c7225202c35386c,0x0a3b3233202c3438,0x203436732e726873,0x25202c36386c7225\n"
".quad 0x3233202c35386c72,0x3220636f6c2e0a3b,0x730a312031373620,0x25203436622e6c68\n"
".quad 0x7225202c37386c72,0x0a3b32202c36386c,0x203436732e646461,0x25202c38386c7225\n"
".quad 0x7225202c32346c72,0x6f6c2e0a3b37386c,0x2036383620322063,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x2c5d38386c72255b,0x0a3b363331662520,0x36203220636f6c2e\n"
".quad 0x2e74730a31203738,0x662e6c61626f6c67,0x396c72255b203233,0x3234316625202c5d\n"
".quad 0x3220636f6c2e0a3b,0x720a322031393620,0x3142420a0a3b7465,0x6464610a3a335f33\n"
".quad 0x6c7225203436732e,0x366c7225202c3039,0x6c0a3b323135202c,0x2e6d617261702e64\n"
".quad 0x316c722520343675,0x315a5f5b202c3033,0x79685f645f524c32,0x5366504443424162\n"
".quad 0x617261705f6d665f,0x6c2e0a3b5d335f6d,0x353636203220636f,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c32396c,0x316c7225202c3039,0x356c7225202c3033\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3832316c72,0x645f524c32315a5f\n"
".quad 0x444342416279685f,0x705f6d665f536650,0x3b5d315f6d617261,0x6f742e617476630a\n"
".quad 0x2e6c61626f6c672e,0x396c722520343675,0x32316c7225202c33,0x622e6c68730a3b38\n"
".quad 0x34396c7225203436,0x2c32396c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x396c7225202c3539,0x2e0a3b3233202c34,0x3636203220636f6c,0x2e6c68730a312035\n"
".quad 0x396c722520343662,0x35396c7225202c36,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x396c7225202c3739,0x36396c7225202c33,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x2c5d37396c72255b,0x610a3b3532662520,0x25203436732e6464,0x7225202c38396c72\n"
".quad 0x34323031202c366c,0x3220636f6c2e0a3b,0x6d0a312036363620,0x36732e6f6c2e6461\n"
".quad 0x2c39396c72252034,0x202c38396c722520,0x202c3033316c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3030316c,0x3b3233202c39396c,0x3436732e7268730a\n"
".quad 0x2c3130316c722520,0x2c3030316c722520,0x6f6c2e0a3b323320,0x2036363620322063\n"
".quad 0x36622e6c68730a31,0x3230316c72252034,0x3130316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c333031,0x316c7225202c3339,0x672e74730a3b3230\n"
".quad 0x33662e6c61626f6c,0x30316c72255b2032,0x3b356625202c5d33,0x3436732e6464610a\n"
".quad 0x2c3430316c722520,0x31202c366c722520,0x6f6c2e0a3b363335,0x2037363620322063\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c353031,0x6c7225202c343031\n"
".quad 0x6c7225202c303331,0x622e6c68730a3b35,0x30316c7225203436,0x30316c7225202c36\n"
".quad 0x730a3b3233202c35,0x25203436732e7268,0x25202c3730316c72,0x33202c3630316c72\n"
".quad 0x20636f6c2e0a3b32,0x0a31203736362032,0x203436622e6c6873,0x202c3830316c7225\n"
".quad 0x202c3730316c7225,0x732e6464610a3b32,0x30316c7225203436,0x33396c7225202c39\n"
".quad 0x3830316c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3930316c72255b\n"
".quad 0x0a3b39316625202c,0x203436732e646461,0x202c3031316c7225,0x3032202c366c7225\n"
".quad 0x636f6c2e0a3b3834,0x3120383636203220,0x2e6f6c2e64616d0a,0x316c722520343673\n"
".quad 0x316c7225202c3131,0x316c7225202c3031,0x356c7225202c3033,0x36622e6c68730a3b\n"
".quad 0x3231316c72252034,0x3131316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3331316c,0x3233202c3231316c,0x3220636f6c2e0a3b,0x730a312038363620\n"
".quad 0x25203436622e6c68,0x25202c3431316c72,0x32202c3331316c72,0x36732e6464610a3b\n"
".quad 0x3531316c72252034,0x2c33396c7225202c,0x3b3431316c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3531316c7225,0x64610a3b34662520,0x7225203436732e64\n"
".quad 0x7225202c3631316c,0x30363532202c366c,0x3220636f6c2e0a3b,0x6d0a312039363620\n"
".quad 0x36732e6f6c2e6461,0x3731316c72252034,0x3631316c7225202c,0x3033316c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3831316c7225,0x202c3731316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3931,0x0a3b3233202c3831\n"
".quad 0x36203220636f6c2e,0x6c68730a31203936,0x6c7225203436622e,0x6c7225202c303231\n"
".quad 0x0a3b32202c393131,0x203436732e646461,0x202c3132316c7225,0x25202c33396c7225\n"
".quad 0x730a3b3032316c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3132316c\n"
".quad 0x6464610a3b333466,0x6c7225203436732e,0x6c7225202c323231,0x3b32373033202c36\n"
".quad 0x203220636f6c2e0a,0x616d0a3120303736,0x3436732e6f6c2e64,0x2c3332316c722520\n"
".quad 0x2c3232316c722520,0x2c3033316c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3432316c72,0x33202c3332316c72,0x732e7268730a3b32,0x32316c7225203436\n"
".quad 0x32316c7225202c35,0x2e0a3b3233202c34,0x3736203220636f6c,0x2e6c68730a312030\n"
".quad 0x316c722520343662,0x316c7225202c3632,0x610a3b32202c3532,0x25203436732e6464\n"
".quad 0x25202c3732316c72,0x7225202c33396c72,0x74730a3b3632316c,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d373231,0x636f6c2e0a3b3934,0x3120313736203220\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x25202c5d386c7225,0x6f6c2e0a3b313366\n"
".quad 0x2032373620322063,0x6f6c672e74730a31,0x203233662e6c6162,0x202c5d396c72255b\n"
".quad 0x420a0a3b37336625,0x2e0a3a345f333142,0x3936203220636f6c,0x3b7465720a322031\n"
".quad 0x746e652e0a0a7d0a,0x4c33315a5f207972,0x416279685f645f52,0x5f53665032444342\n"
".quad 0x61702e0a28696d66,0x3436752e206d6172,0x5f524c33315a5f20,0x4342416279685f64\n"
".quad 0x6d665f5366503244,0x5f6d617261705f69,0x617261702e0a2c30,0x5f203436752e206d\n"
".quad 0x5f645f524c33315a,0x3244434241627968,0x5f696d665f536650,0x2c315f6d61726170\n"
".quad 0x206d617261702e0a,0x315a5f203233662e,0x79685f645f524c33,0x6650324443424162\n"
".quad 0x61705f696d665f53,0x2e0a2c325f6d6172,0x752e206d61726170,0x4c33315a5f203436\n"
".quad 0x416279685f645f52,0x5f53665032444342,0x617261705f696d66,0x61702e0a2c335f6d\n"
".quad 0x3233752e206d6172,0x5f524c33315a5f20,0x4342416279685f64,0x6d665f5366503244\n"
".quad 0x5f6d617261705f69,0x722e0a7b0a290a34,0x203233662e206765,0x3b3e3434313c6625\n"
".quad 0x662e206765722e0a,0x323c646625203436,0x6765722e0a3b3e34,0x2520646572702e20\n"
".quad 0x722e0a3b3e393c70,0x203233732e206765,0x0a3b3e35353c7225,0x36732e206765722e\n"
".quad 0x33313c6c72252034,0x646c0a0a0a3b3e33,0x752e6d617261702e,0x30316c7225203436\n"
".quad 0x4c33315a5f5b202c,0x416279685f645f52,0x5f53665032444342,0x617261705f696d66\n"
".quad 0x646c0a3b5d305f6d,0x752e6d617261702e,0x2c316c7225203436,0x524c33315a5f5b20\n"
".quad 0x42416279685f645f,0x665f536650324443,0x6d617261705f696d,0x2e646c0a3b5d315f\n"
".quad 0x36752e6d61726170,0x202c326c72252034,0x5f524c33315a5f5b,0x4342416279685f64\n"
".quad 0x6d665f5366503244,0x5f6d617261705f69,0x702e646c0a3b5d33,0x3233752e6d617261\n"
".quad 0x5f5b202c33722520,0x5f645f524c33315a,0x3244434241627968,0x5f696d665f536650\n"
".quad 0x5d345f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e\n"
".quad 0x3b316c7225202c33,0x6f742e617476630a,0x2e6c61626f6c672e,0x346c722520343675\n"
".quad 0x3b30316c7225202c,0x203220636f6c2e0a,0x6f6d0a3120383936,0x7225203233752e76\n"
".quad 0x6469746e25202c34,0x2e766f6d0a3b782e,0x2c35722520323375,0x2e64696174632520\n"
".quad 0x752e766f6d0a3b78,0x202c367225203233,0x0a3b782e64697425,0x732e6f6c2e64616d\n"
".quad 0x202c317225203233,0x357225202c347225,0x2e0a3b367225202c,0x3936203220636f6c\n"
".quad 0x2e766f6d0a312039,0x2c37722520323375,0x792e6469746e2520,0x33752e766f6d0a3b\n"
".quad 0x25202c3872252032,0x3b792e6469617463,0x3233752e766f6d0a,0x7425202c39722520\n"
".quad 0x616d0a3b792e6469,0x3233732e6f6c2e64,0x7225202c32722520,0x202c387225202c37\n"
".quad 0x6f6c2e0a3b397225,0x2030303720322063,0x6e722e7476630a31,0x3233732e3233662e\n"
".quad 0x25202c3231662520,0x2e616d660a3b3172,0x25203233662e6e72,0x316625202c333166\n"
".quad 0x3845336630202c32,0x30202c3030303030,0x3030444643333466,0x20636f6c2e0a3b30\n"
".quad 0x0a31203130372032,0x662e6e722e747663,0x25203233732e3233,0x3b327225202c3266\n"
".quad 0x2e6e722e616d660a,0x3431662520323366,0x30202c326625202c,0x3030303038453366\n"
".quad 0x3933346630202c30,0x630a3b3030304446,0x752e3436752e7476,0x2c356c7225203233\n"
".quad 0x6c2e0a3b31722520,0x323037203220636f,0x732e7476630a3120,0x25203233732e3436\n"
".quad 0x327225202c366c72,0x6f6c2e64616d0a3b,0x6c7225203436732e,0x2c366c7225202c37\n"
".quad 0x25202c326c722520,0x6464610a3b356c72,0x316625203233662e,0x2c33316625202c35\n"
".quad 0x4346463343663020,0x6464610a3b303030,0x316625203233662e,0x2c34316625202c36\n"
".quad 0x4346423343663020,0x6f6c2e0a3b303030,0x3120343720322063,0x3233662e6c756d0a\n"
".quad 0x25202c3731662520,0x316625202c363166,0x722e616d660a3b36,0x6625203233662e6e\n"
".quad 0x35316625202c3831,0x202c35316625202c,0x65730a3b37316625,0x33662e746c2e7074\n"
".quad 0x25202c3170252032,0x346630202c383166,0x3b30303030303832,0x203220636f6c2e0a\n"
".quad 0x65730a3120373037,0x33732e746c2e7074,0x25202c3270252032,0x3b337225202c3172\n"
".quad 0x3233752e766f6d0a,0x37202c3031722520,0x636f6c2e0a3b3736,0x3120373037203220\n"
".quad 0x3233732e6275730a,0x25202c3131722520,0x337225202c303172,0x672e707465730a3b\n"
".quad 0x7025203233732e74,0x202c317225202c33,0x726f0a3b31317225,0x702520646572702e\n"
".quad 0x202c327025202c34,0x6f6c2e0a3b337025,0x2037303720322063,0x6c2e707465730a31\n"
".quad 0x7025203233732e74,0x202c327225202c35,0x2e726f0a3b337225,0x3670252064657270\n"
".quad 0x25202c347025202c,0x2e766f6d0a3b3570,0x3231722520323375,0x2e0a3b313135202c\n"
".quad 0x3037203220636f6c,0x2e6275730a312037,0x3331722520323373,0x202c32317225202c\n"
".quad 0x7465730a3b337225,0x3233732e74672e70,0x7225202c37702520,0x3b33317225202c32\n"
".quad 0x646572702e726f0a,0x7025202c38702520,0x0a3b377025202c36,0x37203220636f6c2e\n"
".quad 0x7025400a31203730,0x4242206172622038,0x730a0a3b345f3431,0x25203436622e6c68\n"
".quad 0x7225202c31316c72,0x0a3b3233202c376c,0x203436732e726873,0x25202c32316c7225\n"
".quad 0x3233202c31316c72,0x3220636f6c2e0a3b,0x730a312032313720,0x25203436622e6c68\n"
".quad 0x7225202c33316c72,0x0a3b32202c32316c,0x203436732e646461,0x25202c34316c7225\n"
".quad 0x6c7225202c346c72,0x672e646c0a3b3331,0x33662e6c61626f6c,0x5b202c3366252032\n"
".quad 0x0a3b5d34316c7225,0x203233732e646461,0x7225202c35317225,0x2e0a3b312d202c32\n"
".quad 0x3137203220636f6c,0x2e7476630a312033,0x203233752e343675,0x25202c35316c7225\n"
".quad 0x6464610a3b353172,0x6c7225203436732e,0x316c7225202c3631,0x3b34323031202c35\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3233316c,0x5f645f524c33315a\n"
".quad 0x3244434241627968,0x5f696d665f536650,0x5d335f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x6d0a312033313720,0x36732e6f6c2e6461,0x2c37316c72252034,0x202c36316c722520\n"
".quad 0x202c3233316c7225,0x68730a3b356c7225,0x7225203436622e6c,0x6c7225202c38316c\n"
".quad 0x0a3b3233202c3731,0x203436732e726873,0x25202c39316c7225,0x3233202c38316c72\n"
".quad 0x3220636f6c2e0a3b,0x730a312033313720,0x25203436622e6c68,0x7225202c30326c72\n"
".quad 0x0a3b32202c39316c,0x203436732e646461,0x25202c31326c7225,0x6c7225202c346c72\n"
".quad 0x672e646c0a3b3032,0x33662e6c61626f6c,0x5b202c3466252032,0x0a3b5d31326c7225\n"
".quad 0x37203220636f6c2e,0x6464610a31203431,0x317225203233732e,0x202c327225202c37\n"
".quad 0x752e7476630a3b31,0x25203233752e3436,0x7225202c32326c72,0x2e6464610a3b3731\n"
".quad 0x326c722520343673,0x32326c7225202c33,0x0a3b38343032202c,0x37203220636f6c2e\n"
".quad 0x64616d0a31203431,0x203436732e6f6c2e,0x25202c34326c7225,0x7225202c33326c72\n"
".quad 0x7225202c3233316c,0x2e6c68730a3b356c,0x326c722520343662,0x34326c7225202c35\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c36326c,0x0a3b3233202c3532\n"
".quad 0x37203220636f6c2e,0x6c68730a31203431,0x6c7225203436622e,0x326c7225202c3732\n"
".quad 0x64610a3b32202c36,0x7225203436732e64,0x6c7225202c38326c,0x37326c7225202c34\n"
".quad 0x6f6c672e646c0a3b,0x203233662e6c6162,0x72255b202c356625,0x64610a3b5d38326c\n"
".quad 0x7225203233732e64,0x2c317225202c3931,0x6f6c2e0a3b312d20,0x2035313720322063\n"
".quad 0x6e722e7476630a31,0x3233732e3233662e,0x25202c3535662520,0x6464610a3b393172\n"
".quad 0x356625203233662e,0x2c35356625202c33,0x3030304633663020,0x6464610a3b303030\n"
".quad 0x336625203233662e,0x202c326625202c30,0x3030303046336630,0x2e766f6d0a3b3030\n"
".quad 0x3032722520323375,0x74090a0a3b30202c,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x202c393166257b20,0x6625202c30326625,0x32326625202c3132,0x527865745b202c7d\n"
".quad 0x202c4331665f6665,0x25202c333566257b,0x0a0a3b5d7d303366,0x203220636f6c2e09\n"
".quad 0x64610a3120363137,0x7225203233732e64,0x2c317225202c3132,0x2e7476630a3b3120\n"
".quad 0x732e3233662e6e72,0x2c36356625203233,0x610a3b3132722520,0x25203233662e6464\n"
".quad 0x356625202c373466,0x3046336630202c36,0x0a0a3b3030303030,0x2e64322e78657409\n"
".quad 0x662e3233662e3476,0x353266257b203233,0x202c36326625202c,0x6625202c37326625\n"
".quad 0x65745b202c7d3832,0x4333665f66655278,0x2c373466257b202c,0x3b5d7d3033662520\n"
".quad 0x20636f6c2e090a0a,0x0a31203731372032,0x662e6e722e747663,0x25203233732e3233\n"
".quad 0x317225202c373566,0x662e6464610a3b35,0x2c32346625203233,0x30202c3735662520\n"
".quad 0x3030303030463366,0x786574090a0a3b30,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x6625202c31336625,0x33336625202c3233,0x2c7d34336625202c,0x6665527865745b20\n"
".quad 0x257b202c4335665f,0x346625202c333566,0x0a090a0a3b5d7d32,0x2e64322e78657409\n"
".quad 0x662e3233662e3476,0x373366257b203233,0x202c38336625202c,0x6625202c39336625\n"
".quad 0x65745b202c7d3034,0x4336665f66655278,0x2c373466257b202c,0x3b5d7d3234662520\n"
".quad 0x20636f6c2e090a0a,0x0a31203931372032,0x662e6e722e747663,0x25203233732e3233\n"
".quad 0x317225202c383566,0x662e6464610a3b37,0x2c34356625203233,0x30202c3835662520\n"
".quad 0x3030303030463366,0x786574090a0a3b30,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x6625202c33346625,0x35346625202c3434,0x2c7d36346625202c,0x6665527865745b20\n"
".quad 0x257b202c4337665f,0x356625202c373466,0x0a090a0a3b5d7d34,0x2e64322e78657409\n"
".quad 0x662e3233662e3476,0x393466257b203233,0x202c30356625202c,0x6625202c31356625\n"
".quad 0x65745b202c7d3235,0x4338665f66655278,0x2c333566257b202c,0x3b5d7d3435662520\n"
".quad 0x732e646461090a0a,0x39326c7225203436,0x202c366c7225202c,0x6c2e0a3b34383533\n"
".quad 0x393237203220636f,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c30336c\n"
".quad 0x316c7225202c3932,0x356c7225202c3233,0x36622e6c68730a3b,0x2c31336c72252034\n"
".quad 0x202c30336c722520,0x2e7268730a3b3233,0x336c722520343673,0x31336c7225202c32\n"
".quad 0x6c2e0a3b3233202c,0x393237203220636f,0x622e6c68730a3120,0x33336c7225203436\n"
".quad 0x2c32336c7225202c,0x2e6464610a3b3220,0x386c722520343673,0x202c336c7225202c\n"
".quad 0x610a3b33336c7225,0x25203436732e6464,0x7225202c34336c72,0x36393034202c366c\n"
".quad 0x3220636f6c2e0a3b,0x6d0a312030333720,0x36732e6f6c2e6461,0x2c35336c72252034\n"
".quad 0x202c34336c722520,0x202c3233316c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x6c7225202c36336c,0x0a3b3233202c3533,0x203436732e726873,0x25202c37336c7225\n"
".quad 0x3233202c36336c72,0x3220636f6c2e0a3b,0x730a312030333720,0x25203436622e6c68\n"
".quad 0x7225202c38336c72,0x0a3b32202c37336c,0x203436732e646461,0x7225202c396c7225\n"
".quad 0x336c7225202c336c,0x20636f6c2e0a3b38,0x0a31203232372032,0x6172622031702540\n"
".quad 0x3b335f3431424220,0x3220636f6c2e0a0a,0x610a312036333720,0x25203233662e6464\n"
".quad 0x336625202c393566,0x0a3b39316625202c,0x203233662e646461,0x6625202c30366625\n"
".quad 0x3b346625202c3935,0x3233662e6464610a,0x25202c3136662520,0x326625202c303666\n"
".quad 0x662e6464610a3b35,0x2c32366625203233,0x25202c3136662520,0x2e6464610a3b3566\n"
".quad 0x3336662520323366,0x202c32366625202c,0x64610a3b31336625,0x6625203233662e64\n"
".quad 0x33366625202c3436,0x0a3b37336625202c,0x203233662e646461,0x6625202c35366625\n"
".quad 0x33346625202c3436,0x33662e6464610a3b,0x202c363666252032,0x6625202c35366625\n"
".quad 0x2e6275730a3b3934,0x3736662520323366,0x202c39316625202c,0x64610a3b35326625\n"
".quad 0x6625203233662e64,0x37366625202c3836,0x0a3b31336625202c,0x203233662e627573\n"
".quad 0x6625202c39366625,0x37336625202c3836,0x33662e6275730a3b,0x202c303766252032\n"
".quad 0x6625202c39366625,0x2e6464610a3b3334,0x3137662520323366,0x202c30376625202c\n"
".quad 0x75730a3b39346625,0x6625203233662e62,0x2c346625202c3237,0x64610a3b35662520\n"
".quad 0x6625203233662e64,0x32376625202c3337,0x0a3b31336625202c,0x203233662e646461\n"
".quad 0x6625202c34376625,0x37336625202c3337,0x33662e6275730a3b,0x202c353766252032\n"
".quad 0x6625202c34376625,0x2e6275730a3b3334,0x3637662520323366,0x202c35376625202c\n"
".quad 0x756d0a3b39346625,0x6625203233662e6c,0x36376625202c3737,0x0a3b36376625202c\n"
".quad 0x662e6e722e616d66,0x2c38376625203233,0x25202c3137662520,0x376625202c313766\n"
".quad 0x662e766f6d0a3b37,0x2c39376625203233,0x3030434633663020,0x6f6c2e0a3b303030\n"
".quad 0x2036333720322063,0x33662e67656e0a31,0x202c303866252032,0x6d660a3b38376625\n"
".quad 0x3233662e6e722e61,0x25202c3138662520,0x376625202c303866,0x3b36366625202c39\n"
".quad 0x2e6e722e616d660a,0x3238662520323366,0x202c31386625202c,0x4538334545426630\n"
".quad 0x3b336625202c3933,0x3233662e67656e0a,0x25202c3338662520,0x2e646c0a3b323866\n"
".quad 0x33662e6d61726170,0x2c33343166252032,0x524c33315a5f5b20,0x42416279685f645f\n"
".quad 0x665f536650324443,0x6d617261705f696d,0x6f6c2e0a3b5d325f,0x2036333720322063\n"
".quad 0x6e722e616d660a31,0x386625203233662e,0x2c33386625202c34,0x202c333431662520\n"
".quad 0x766f6d0a3b336625,0x386625203233662e,0x3430346630202c35,0x2e0a3b3030303030\n"
".quad 0x3337203220636f6c,0x2e616d660a312036,0x25203233662e6e72,0x376625202c363866\n"
".quad 0x3430346630202c31,0x25202c3030303030,0x6c756d0a3b363666,0x386625203233662e\n"
".quad 0x2c31376625202c37,0x3030393034663020,0x616d660a3b303030,0x203233662e6e722e\n"
".quad 0x6625202c38386625,0x31376625202c3738,0x0a3b36386625202c,0x662e6e722e616d66\n"
".quad 0x2c39386625203233,0x25202c3038662520,0x386625202c393766,0x662e766f6d0a3b38\n"
".quad 0x2c30396625203233,0x3833454433663020,0x6f6c2e0a3b393345,0x2036333720322063\n"
".quad 0x33662e67656e0a31,0x202c313966252032,0x6d660a3b39386625,0x3233662e6e722e61\n"
".quad 0x25202c3239662520,0x396625202c313966,0x3b39316625202c30,0x3233662e67656e0a\n"
".quad 0x25202c3339662520,0x616d660a3b323966,0x203233662e6e722e,0x6625202c34396625\n"
".quad 0x34316625202c3339,0x3b39316625202c33,0x2e6e722e616d660a,0x3539662520323366\n"
".quad 0x202c36376625202c,0x3030303430346630,0x36366625202c3030,0x33662e6c756d0a3b\n"
".quad 0x202c363966252032,0x6630202c36376625,0x3030303030393034,0x6e722e616d660a3b\n"
".quad 0x396625203233662e,0x2c36396625202c37,0x25202c3637662520,0x616d660a3b353966\n"
".quad 0x203233662e6e722e,0x6625202c38396625,0x39376625202c3038,0x0a3b37396625202c\n"
".quad 0x203233662e67656e,0x6625202c39396625,0x2e616d660a3b3839,0x25203233662e6e72\n"
".quad 0x6625202c30303166,0x30396625202c3939,0x6e0a3b346625202c,0x25203233662e6765\n"
".quad 0x6625202c31303166,0x616d660a3b303031,0x203233662e6e722e,0x25202c3230316625\n"
".quad 0x6625202c31303166,0x346625202c333431,0x33662e67656e0a3b,0x2c33303166252032\n"
".quad 0x660a3b3137662520,0x33662e6e722e616d,0x2c34303166252032,0x202c333031662520\n"
".quad 0x6625202c35386625,0x2e616d660a3b3636,0x25203233662e6e72,0x6625202c35303166\n"
".quad 0x31376625202c3738,0x3b3430316625202c,0x2e6e722e616d660a,0x3031662520323366\n"
".quad 0x2c30386625202c36,0x25202c3937662520,0x656e0a3b35303166,0x6625203233662e67\n"
".quad 0x316625202c373031,0x2e616d660a3b3630,0x25203233662e6e72,0x6625202c38303166\n"
".quad 0x396625202c373031,0x3b35326625202c30,0x3233662e67656e0a,0x202c393031662520\n"
".quad 0x660a3b3830316625,0x33662e6e722e616d,0x2c30313166252032,0x202c393031662520\n"
".quad 0x25202c3334316625,0x67656e0a3b353266,0x316625203233662e,0x36376625202c3131\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x31316625202c3231,0x2c35386625202c31\n"
".quad 0x660a3b3636662520,0x33662e6e722e616d,0x2c33313166252032,0x25202c3639662520\n"
".quad 0x316625202c363766,0x2e616d660a3b3231,0x25203233662e6e72,0x6625202c34313166\n"
".quad 0x39376625202c3038,0x3b3331316625202c,0x3233662e67656e0a,0x202c353131662520\n"
".quad 0x660a3b3431316625,0x33662e6e722e616d,0x2c36313166252032,0x202c353131662520\n"
".quad 0x6625202c30396625,0x662e67656e0a3b35,0x3731316625203233,0x3b3631316625202c\n"
".quad 0x2e6e722e616d660a,0x3131662520323366,0x3731316625202c38,0x2c3334316625202c\n"
".quad 0x64610a3b35662520,0x6625203233662e64,0x376625202c393131,0x3b36376625202c31\n"
".quad 0x2e6e722e616d660a,0x3231662520323366,0x3931316625202c30,0x303430346630202c\n"
".quad 0x6625202c30303030,0x2e6c756d0a3b3636,0x3231662520323366,0x3931316625202c31\n"
".quad 0x303930346630202c,0x6d660a3b30303030,0x3233662e6e722e61,0x202c323231662520\n"
".quad 0x25202c3132316625,0x6625202c39313166,0x616d660a3b303231,0x203233662e6e722e\n"
".quad 0x25202c3332316625,0x376625202c303866,0x3232316625202c39,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x32316625202c3164,0x662e766f6d0a3b33,0x2c32646625203436\n"
".quad 0x3743394633643020,0x3842374331374331,0x6f6c2e0a3b433144,0x2036333720322063\n"
".quad 0x36662e7476630a31,0x6625203233662e34,0x31336625202c3364,0x36662e67656e0a3b\n"
".quad 0x202c346466252034,0x6d660a3b31646625,0x3436662e6e722e61,0x25202c3564662520\n"
".quad 0x646625202c346466,0x3b33646625202c32,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x3334316625202c36,0x36662e67656e0a3b,0x202c376466252034,0x6d660a3b36646625\n"
".quad 0x3436662e6e722e61,0x25202c3864662520,0x646625202c376466,0x3b33646625202c35\n"
".quad 0x2e6e722e7476630a,0x203436662e323366,0x25202c3432316625,0x6275730a3b386466\n"
".quad 0x316625203233662e,0x36376625202c3532,0x0a3b31376625202c,0x37203220636f6c2e\n"
".quad 0x616d660a31203633,0x203233662e6e722e,0x25202c3632316625,0x6630202c35323166\n"
".quad 0x3030303030343034,0x0a3b36366625202c,0x203233662e6c756d,0x25202c3732316625\n"
".quad 0x6630202c35323166,0x3030303030393034,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x32316625202c3832,0x3532316625202c37,0x3b3632316625202c,0x2e6e722e616d660a\n"
".quad 0x3231662520323366,0x2c30386625202c39,0x25202c3937662520,0x76630a3b38323166\n"
".quad 0x33662e3436662e74,0x202c396466252032,0x630a3b3932316625,0x662e3436662e7476\n"
".quad 0x3031646625203233,0x0a3b37336625202c,0x203436662e67656e,0x25202c3131646625\n"
".quad 0x616d660a3b396466,0x203436662e6e722e,0x25202c3231646625,0x6625202c31316466\n"
".quad 0x31646625202c3264,0x722e616d660a3b30,0x6625203436662e6e,0x646625202c333164\n"
".quad 0x3231646625202c37,0x3b3031646625202c,0x2e6e722e7476630a,0x203436662e323366\n"
".quad 0x25202c3033316625,0x75730a3b33316466,0x6625203233662e62,0x316625202c313331\n"
".quad 0x36376625202c3330,0x6e722e616d660a3b,0x316625203233662e,0x33316625202c3233\n"
".quad 0x3430346630202c31,0x25202c3030303030,0x6c756d0a3b363666,0x316625203233662e\n"
".quad 0x33316625202c3333,0x3930346630202c31,0x660a3b3030303030,0x33662e6e722e616d\n"
".quad 0x2c34333166252032,0x202c333331662520,0x25202c3133316625,0x6d660a3b32333166\n"
".quad 0x3233662e6e722e61,0x202c353331662520,0x6625202c30386625,0x33316625202c3937\n"
".quad 0x662e7476630a3b34,0x25203233662e3436,0x6625202c34316466,0x7476630a3b353331\n"
".quad 0x3233662e3436662e,0x202c353164662520,0x656e0a3b33346625,0x6625203436662e67\n"
".quad 0x646625202c363164,0x2e616d660a3b3431,0x25203436662e6e72,0x6625202c37316466\n"
".quad 0x646625202c363164,0x3531646625202c32,0x6e722e616d660a3b,0x646625203436662e\n"
".quad 0x37646625202c3831,0x2c3731646625202c,0x0a3b353164662520,0x662e6e722e747663\n"
".quad 0x25203436662e3233,0x6625202c36333166,0x6275730a3b383164,0x316625203233662e\n"
".quad 0x31376625202c3733,0x0a3b36376625202c,0x662e6e722e616d66,0x3833316625203233\n"
".quad 0x2c3733316625202c,0x3030343034663020,0x366625202c303030,0x662e6c756d0a3b36\n"
".quad 0x3933316625203233,0x2c3733316625202c,0x3030393034663020,0x616d660a3b303030\n"
".quad 0x203233662e6e722e,0x25202c3034316625,0x6625202c39333166,0x316625202c373331\n"
".quad 0x2e616d660a3b3833,0x25203233662e6e72,0x6625202c31343166,0x39376625202c3038\n"
".quad 0x3b3034316625202c,0x3436662e7476630a,0x646625203233662e,0x34316625202c3931\n"
".quad 0x662e7476630a3b31,0x25203233662e3436,0x6625202c30326466,0x2e67656e0a3b3934\n"
".quad 0x3264662520343666,0x3931646625202c31,0x6e722e616d660a3b,0x646625203436662e\n"
".quad 0x32646625202c3232,0x2c32646625202c31,0x0a3b303264662520,0x662e6e722e616d66\n"
".quad 0x3332646625203436,0x202c37646625202c,0x25202c3232646625,0x76630a3b30326466\n"
".quad 0x3233662e6e722e74,0x316625203436662e,0x32646625202c3234,0x61702e646c0a3b33\n"
".quad 0x203436752e6d6172,0x202c3133316c7225,0x5f524c33315a5f5b,0x4342416279685f64\n"
".quad 0x6d665f5366503244,0x5f6d617261705f69,0x636f6c2e0a3b5d33,0x3120323037203220\n"
".quad 0x2e6f6c2e64616d0a,0x346c722520343673,0x2c366c7225202c31,0x2c3133316c722520\n"
".quad 0x6c0a3b356c722520,0x2e6d617261702e64,0x316c722520343675,0x315a5f5b202c3932\n"
".quad 0x79685f645f524c33,0x6650324443424162,0x61705f696d665f53,0x0a3b5d315f6d6172\n"
".quad 0x2e6f742e61747663,0x752e6c61626f6c67,0x32346c7225203436,0x3932316c7225202c\n"
".quad 0x36622e6c68730a3b,0x2c33346c72252034,0x202c31346c722520,0x2e7268730a3b3233\n"
".quad 0x346c722520343673,0x33346c7225202c34,0x6c2e0a3b3233202c,0x373337203220636f\n"
".quad 0x622e6c68730a3120,0x35346c7225203436,0x2c34346c7225202c,0x2e6464610a3b3220\n"
".quad 0x346c722520343673,0x32346c7225202c36,0x3b35346c7225202c,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x202c5d36346c7225,0x64610a3b34386625,0x7225203436732e64\n"
".quad 0x6c7225202c37346c,0x0a3b323135202c36,0x37203220636f6c2e,0x64616d0a31203332\n"
".quad 0x203436732e6f6c2e,0x25202c38346c7225,0x7225202c37346c72,0x7225202c3133316c\n"
".quad 0x2e6c68730a3b356c,0x346c722520343662,0x38346c7225202c39,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c30356c,0x0a3b3233202c3934,0x37203220636f6c2e\n"
".quad 0x6c68730a31203332,0x6c7225203436622e,0x356c7225202c3135,0x64610a3b32202c30\n"
".quad 0x7225203436732e64,0x6c7225202c32356c,0x356c7225202c3234,0x20636f6c2e0a3b31\n"
".quad 0x0a31203833372032,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d32356c72\n"
".quad 0x6464610a3b343966,0x6c7225203436732e,0x366c7225202c3335,0x0a3b34323031202c\n"
".quad 0x37203220636f6c2e,0x64616d0a31203432,0x203436732e6f6c2e,0x25202c34356c7225\n"
".quad 0x7225202c33356c72,0x7225202c3133316c,0x2e6c68730a3b356c,0x356c722520343662\n"
".quad 0x34356c7225202c35,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c36356c\n"
".quad 0x0a3b3233202c3535,0x37203220636f6c2e,0x6c68730a31203432,0x6c7225203436622e\n"
".quad 0x356c7225202c3735,0x64610a3b32202c36,0x7225203436732e64,0x6c7225202c38356c\n"
".quad 0x356c7225202c3234,0x20636f6c2e0a3b37,0x0a31203933372032,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x25202c5d38356c72,0x64610a3b32303166,0x7225203436732e64\n"
".quad 0x6c7225202c39356c,0x3b36333531202c36,0x203220636f6c2e0a,0x616d0a3120353237\n"
".quad 0x3436732e6f6c2e64,0x202c30366c722520,0x25202c39356c7225,0x25202c3133316c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x366c7225202c3136,0x730a3b3233202c30\n"
".quad 0x25203436732e7268,0x7225202c32366c72,0x3b3233202c31366c,0x203220636f6c2e0a\n"
".quad 0x68730a3120353237,0x7225203436622e6c,0x6c7225202c33366c,0x610a3b32202c3236\n"
".quad 0x25203436732e6464,0x7225202c34366c72,0x6c7225202c32346c,0x636f6c2e0a3b3336\n"
".quad 0x3120303437203220,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d34366c7225\n"
".quad 0x610a3b3031316625,0x25203436732e6464,0x7225202c35366c72,0x38343032202c366c\n"
".quad 0x3220636f6c2e0a3b,0x6d0a312036323720,0x36732e6f6c2e6461,0x2c36366c72252034\n"
".quad 0x202c35366c722520,0x202c3133316c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x6c7225202c37366c,0x0a3b3233202c3636,0x203436732e726873,0x25202c38366c7225\n"
".quad 0x3233202c37366c72,0x3220636f6c2e0a3b,0x730a312036323720,0x25203436622e6c68\n"
".quad 0x7225202c39366c72,0x0a3b32202c38366c,0x203436732e646461,0x25202c30376c7225\n"
".quad 0x7225202c32346c72,0x6f6c2e0a3b39366c,0x2031343720322063,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x2c5d30376c72255b,0x0a3b383131662520,0x203436732e646461\n"
".quad 0x25202c31376c7225,0x363532202c366c72,0x20636f6c2e0a3b30,0x0a31203732372032\n"
".quad 0x732e6f6c2e64616d,0x32376c7225203436,0x2c31376c7225202c,0x2c3133316c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x7225202c33376c72,0x3b3233202c32376c\n"
".quad 0x3436732e7268730a,0x202c34376c722520,0x33202c33376c7225,0x20636f6c2e0a3b32\n"
".quad 0x0a31203732372032,0x203436622e6c6873,0x25202c35376c7225,0x3b32202c34376c72\n"
".quad 0x3436732e6464610a,0x202c36376c722520,0x25202c32346c7225,0x6c2e0a3b35376c72\n"
".quad 0x323437203220636f,0x6c672e74730a3120,0x3233662e6c61626f,0x5d36376c72255b20\n"
".quad 0x3b3432316625202c,0x3436732e6464610a,0x202c37376c722520,0x3033202c366c7225\n"
".quad 0x636f6c2e0a3b3237,0x3120383237203220,0x2e6f6c2e64616d0a,0x376c722520343673\n"
".quad 0x37376c7225202c38,0x3133316c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x25202c39376c7225,0x3233202c38376c72,0x36732e7268730a3b,0x2c30386c72252034\n"
".quad 0x202c39376c722520,0x636f6c2e0a3b3233,0x3120383237203220,0x3436622e6c68730a\n"
".quad 0x202c31386c722520,0x32202c30386c7225,0x36732e6464610a3b,0x2c32386c72252034\n"
".quad 0x202c32346c722520,0x2e0a3b31386c7225,0x3437203220636f6c,0x672e74730a312033\n"
".quad 0x33662e6c61626f6c,0x32386c72255b2032,0x3033316625202c5d,0x3220636f6c2e0a3b\n"
".quad 0x6d0a312039323720,0x36732e6f6c2e6461,0x2c34386c72252034,0x202c39326c722520\n"
".quad 0x202c3133316c7225,0x68730a3b356c7225,0x7225203436622e6c,0x6c7225202c35386c\n"
".quad 0x0a3b3233202c3438,0x203436732e726873,0x25202c36386c7225,0x3233202c35386c72\n"
".quad 0x3220636f6c2e0a3b,0x730a312039323720,0x25203436622e6c68,0x7225202c37386c72\n"
".quad 0x0a3b32202c36386c,0x203436732e646461,0x25202c38386c7225,0x7225202c32346c72\n"
".quad 0x6f6c2e0a3b37386c,0x2034343720322063,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x2c5d38386c72255b,0x0a3b363331662520,0x37203220636f6c2e,0x2e74730a31203534\n"
".quad 0x662e6c61626f6c67,0x396c72255b203233,0x3234316625202c5d,0x3220636f6c2e0a3b\n"
".quad 0x720a322039343720,0x3142420a0a3b7465,0x6464610a3a335f34,0x6c7225203436732e\n"
".quad 0x366c7225202c3039,0x6c0a3b323135202c,0x2e6d617261702e64,0x316c722520343675\n"
".quad 0x315a5f5b202c3033,0x79685f645f524c33,0x6650324443424162,0x61705f696d665f53\n"
".quad 0x0a3b5d335f6d6172,0x37203220636f6c2e,0x64616d0a31203332,0x203436732e6f6c2e\n"
".quad 0x25202c32396c7225,0x7225202c30396c72,0x7225202c3033316c,0x702e646c0a3b356c\n"
".quad 0x3436752e6d617261,0x2c3832316c722520,0x524c33315a5f5b20,0x42416279685f645f\n"
".quad 0x665f536650324443,0x6d617261705f696d,0x7476630a3b5d315f,0x6f6c672e6f742e61\n"
".quad 0x203436752e6c6162,0x25202c33396c7225,0x730a3b3832316c72,0x25203436622e6c68\n"
".quad 0x7225202c34396c72,0x3b3233202c32396c,0x3436732e7268730a,0x202c35396c722520\n"
".quad 0x33202c34396c7225,0x20636f6c2e0a3b32,0x0a31203332372032,0x203436622e6c6873\n"
".quad 0x25202c36396c7225,0x3b32202c35396c72,0x3436732e6464610a,0x202c37396c722520\n"
".quad 0x25202c33396c7225,0x74730a3b36396c72,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x326625202c5d3739,0x732e6464610a3b35,0x38396c7225203436,0x202c366c7225202c\n"
".quad 0x6c2e0a3b34323031,0x343237203220636f,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c39396c,0x316c7225202c3839,0x356c7225202c3033,0x36622e6c68730a3b\n"
".quad 0x3030316c72252034,0x2c39396c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c313031,0x3b3233202c303031,0x203220636f6c2e0a,0x68730a3120343237\n"
".quad 0x7225203436622e6c,0x7225202c3230316c,0x3b32202c3130316c,0x3436732e6464610a\n"
".quad 0x2c3330316c722520,0x202c33396c722520,0x0a3b3230316c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3330316c72,0x6464610a3b356625,0x6c7225203436732e\n"
".quad 0x6c7225202c343031,0x3b36333531202c36,0x203220636f6c2e0a,0x616d0a3120353237\n"
".quad 0x3436732e6f6c2e64,0x2c3530316c722520,0x2c3430316c722520,0x2c3033316c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3630316c72,0x33202c3530316c72\n"
".quad 0x732e7268730a3b32,0x30316c7225203436,0x30316c7225202c37,0x2e0a3b3233202c36\n"
".quad 0x3237203220636f6c,0x2e6c68730a312035,0x316c722520343662,0x316c7225202c3830\n"
".quad 0x610a3b32202c3730,0x25203436732e6464,0x25202c3930316c72,0x7225202c33396c72\n"
".quad 0x74730a3b3830316c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d393031\n"
".quad 0x2e6464610a3b3931,0x316c722520343673,0x366c7225202c3031,0x0a3b38343032202c\n"
".quad 0x37203220636f6c2e,0x64616d0a31203632,0x203436732e6f6c2e,0x202c3131316c7225\n"
".quad 0x202c3031316c7225,0x202c3033316c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3231316c,0x3233202c3131316c,0x36732e7268730a3b,0x3331316c72252034\n"
".quad 0x3231316c7225202c,0x6c2e0a3b3233202c,0x363237203220636f,0x622e6c68730a3120\n"
".quad 0x31316c7225203436,0x31316c7225202c34,0x64610a3b32202c33,0x7225203436732e64\n"
".quad 0x7225202c3531316c,0x6c7225202c33396c,0x2e74730a3b343131,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x346625202c5d3531,0x36732e6464610a3b,0x3631316c72252034\n"
".quad 0x202c366c7225202c,0x6c2e0a3b30363532,0x373237203220636f,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3731316c,0x7225202c3631316c,0x7225202c3033316c\n"
".quad 0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3831,0x0a3b3233202c3731\n"
".quad 0x203436732e726873,0x202c3931316c7225,0x202c3831316c7225,0x636f6c2e0a3b3233\n"
".quad 0x3120373237203220,0x3436622e6c68730a,0x2c3032316c722520,0x2c3931316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x396c7225202c3132,0x32316c7225202c33\n"
".quad 0x6c672e74730a3b30,0x3233662e6c61626f,0x3132316c72255b20,0x3b33346625202c5d\n"
".quad 0x3436732e6464610a,0x2c3232316c722520,0x33202c366c722520,0x6f6c2e0a3b323730\n"
".quad 0x2038323720322063,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c333231\n"
".quad 0x6c7225202c323231,0x6c7225202c303331,0x622e6c68730a3b35,0x32316c7225203436\n"
".quad 0x32316c7225202c34,0x730a3b3233202c33,0x25203436732e7268,0x25202c3532316c72\n"
".quad 0x33202c3432316c72,0x20636f6c2e0a3b32,0x0a31203832372032,0x203436622e6c6873\n"
".quad 0x202c3632316c7225,0x202c3532316c7225,0x732e6464610a3b32,0x32316c7225203436\n"
".quad 0x33396c7225202c37,0x3632316c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x5d3732316c72255b,0x0a3b39346625202c,0x37203220636f6c2e,0x2e74730a31203932\n"
".quad 0x662e6c61626f6c67,0x386c72255b203233,0x3b31336625202c5d,0x203220636f6c2e0a\n"
".quad 0x74730a3120303337,0x2e6c61626f6c672e,0x6c72255b20323366,0x37336625202c5d39\n"
".quad 0x5f343142420a0a3b,0x20636f6c2e0a3a34,0x0a32203934372032,0x0a0a7d0a3b746572\n"
".quad 0x5f207972746e652e,0x5f645f524c33315a,0x3243444241627968,0x69666d665f536650\n"
".quad 0x6d617261702e0a28,0x5a5f203436752e20,0x685f645f524c3331,0x5032434442416279\n"
".quad 0x5f69666d665f5366,0x2c305f6d61726170,0x206d617261702e0a,0x315a5f203436752e\n"
".quad 0x79685f645f524c33,0x6650324344424162,0x705f69666d665f53,0x0a2c315f6d617261\n"
".quad 0x2e206d617261702e,0x33315a5f20323366,0x6279685f645f524c,0x5366503243444241\n"
".quad 0x61705f69666d665f,0x2e0a2c325f6d6172,0x752e206d61726170,0x4c33315a5f203436\n"
".quad 0x416279685f645f52,0x5f53665032434442,0x7261705f69666d66,0x702e0a2c335f6d61\n"
".quad 0x33662e206d617261,0x524c33315a5f2032,0x42416279685f645f,0x665f536650324344\n"
".quad 0x617261705f69666d,0x61702e0a2c345f6d,0x3233752e206d6172,0x5f524c33315a5f20\n"
".quad 0x4442416279685f64,0x6d665f5366503243,0x6d617261705f6966,0x2e0a7b0a290a355f\n"
".quad 0x3233662e20676572,0x3e3434313c662520,0x2e206765722e0a3b,0x3c64662520343666\n"
".quad 0x65722e0a3b3e3432,0x20646572702e2067,0x2e0a3b3e393c7025,0x3233732e20676572\n"
".quad 0x3b3e35353c722520,0x732e206765722e0a,0x313c6c7225203436,0x6c0a0a0a3b3e3333\n"
".quad 0x2e6d617261702e64,0x316c722520343675,0x33315a5f5b202c30,0x6279685f645f524c\n"
".quad 0x5366503243444241,0x61705f69666d665f,0x0a3b5d305f6d6172,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x33315a5f5b202c31,0x6279685f645f524c,0x5366503243444241\n"
".quad 0x61705f69666d665f,0x0a3b5d315f6d6172,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x33315a5f5b202c32,0x6279685f645f524c,0x5366503243444241,0x61705f69666d665f\n"
".quad 0x0a3b5d335f6d6172,0x6d617261702e646c,0x337225203233752e,0x4c33315a5f5b202c\n"
".quad 0x416279685f645f52,0x5f53665032434442,0x7261705f69666d66,0x630a3b5d355f6d61\n"
".quad 0x672e6f742e617476,0x36752e6c61626f6c,0x202c336c72252034,0x76630a3b316c7225\n"
".quad 0x6c672e6f742e6174,0x3436752e6c61626f,0x25202c346c722520,0x6c2e0a3b30316c72\n"
".quad 0x343537203220636f,0x752e766f6d0a3120,0x202c347225203233,0x3b782e6469746e25\n"
".quad 0x3233752e766f6d0a,0x6325202c35722520,0x0a3b782e64696174,0x203233752e766f6d\n"
".quad 0x697425202c367225,0x64616d0a3b782e64,0x203233732e6f6c2e,0x347225202c317225\n"
".quad 0x25202c357225202c,0x636f6c2e0a3b3672,0x3120353537203220,0x3233752e766f6d0a\n"
".quad 0x6e25202c37722520,0x6d0a3b792e646974,0x25203233752e766f,0x61746325202c3872\n"
".quad 0x6f6d0a3b792e6469,0x7225203233752e76,0x2e64697425202c39,0x6c2e64616d0a3b79\n"
".quad 0x7225203233732e6f,0x202c377225202c32,0x397225202c387225,0x3220636f6c2e0a3b\n"
".quad 0x630a312036353720,0x33662e6e722e7476,0x6625203233732e32,0x3b317225202c3231\n"
".quad 0x2e6e722e616d660a,0x3331662520323366,0x202c32316625202c,0x3030303845336630\n"
".quad 0x33346630202c3030,0x0a3b303030444643,0x37203220636f6c2e,0x7476630a31203735\n"
".quad 0x2e3233662e6e722e,0x2c32662520323373,0x6d660a3b32722520,0x3233662e6e722e61\n"
".quad 0x25202c3431662520,0x45336630202c3266,0x202c303030303038,0x3044463933346630\n"
".quad 0x2e6464610a3b3030,0x3531662520323366,0x202c33316625202c,0x3043464633436630\n"
".quad 0x2e6464610a3b3030,0x3631662520323366,0x202c34316625202c,0x3043464233436630\n"
".quad 0x636f6c2e0a3b3030,0x0a31203437203220,0x203233662e6c756d,0x6625202c37316625\n"
".quad 0x36316625202c3631,0x6e722e616d660a3b,0x316625203233662e,0x2c35316625202c38\n"
".quad 0x25202c3531662520,0x7465730a3b373166,0x3233662e746c2e70,0x6625202c31702520\n"
".quad 0x32346630202c3831,0x0a3b303030303038,0x2e3436752e747663,0x356c722520323375\n"
".quad 0x2e0a3b317225202c,0x3537203220636f6c,0x2e7476630a312039,0x203233732e343673\n"
".quad 0x7225202c366c7225,0x6c2e64616d0a3b32,0x7225203436732e6f,0x366c7225202c376c\n"
".quad 0x202c326c7225202c,0x6c2e0a3b356c7225,0x323637203220636f,0x2e707465730a3120\n"
".quad 0x25203233732e746c,0x2c317225202c3270,0x6f6d0a3b33722520,0x7225203233752e76\n"
".quad 0x3b373637202c3031,0x203220636f6c2e0a,0x75730a3120323637,0x7225203233732e62\n"
".quad 0x30317225202c3131,0x730a3b337225202c,0x732e74672e707465,0x202c337025203233\n"
".quad 0x317225202c317225,0x72702e726f0a3b31,0x202c347025206465,0x337025202c327025\n"
".quad 0x3220636f6c2e0a3b,0x730a312032363720,0x732e746c2e707465,0x202c357025203233\n"
".quad 0x337225202c327225,0x6572702e726f0a3b,0x25202c3670252064,0x3b357025202c3470\n"
".quad 0x3233752e766f6d0a,0x35202c3231722520,0x636f6c2e0a3b3131,0x3120323637203220\n"
".quad 0x3233732e6275730a,0x25202c3331722520,0x337225202c323172,0x672e707465730a3b\n"
".quad 0x7025203233732e74,0x202c327225202c37,0x726f0a3b33317225,0x702520646572702e\n"
".quad 0x202c367025202c38,0x6f6c2e0a3b377025,0x2032363720322063,0x6220387025400a31\n"
".quad 0x5f35314242206172,0x2e6c68730a0a3b34,0x316c722520343662,0x2c376c7225202c31\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x316c7225202c3231,0x2e0a3b3233202c31\n"
".quad 0x3637203220636f6c,0x2e6c68730a312037,0x316c722520343662,0x32316c7225202c33\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x346c7225202c3431,0x3b33316c7225202c\n"
".quad 0x626f6c672e646c0a,0x25203233662e6c61,0x6c72255b202c3366,0x6464610a3b5d3431\n"
".quad 0x317225203233732e,0x202c327225202c35,0x636f6c2e0a3b312d,0x3120383637203220\n"
".quad 0x3436752e7476630a,0x6c7225203233752e,0x35317225202c3531,0x36732e6464610a3b\n"
".quad 0x2c36316c72252034,0x202c35316c722520,0x646c0a3b34323031,0x752e6d617261702e\n"
".quad 0x33316c7225203436,0x33315a5f5b202c32,0x6279685f645f524c,0x5366503243444241\n"
".quad 0x61705f69666d665f,0x0a3b5d335f6d6172,0x37203220636f6c2e,0x64616d0a31203836\n"
".quad 0x203436732e6f6c2e,0x25202c37316c7225,0x7225202c36316c72,0x7225202c3233316c\n"
".quad 0x2e6c68730a3b356c,0x316c722520343662,0x37316c7225202c38,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c39316c,0x0a3b3233202c3831,0x37203220636f6c2e\n"
".quad 0x6c68730a31203836,0x6c7225203436622e,0x316c7225202c3032,0x64610a3b32202c39\n"
".quad 0x7225203436732e64,0x6c7225202c31326c,0x30326c7225202c34,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c346625,0x6c2e0a3b5d31326c,0x393637203220636f\n"
".quad 0x732e6464610a3120,0x2c37317225203233,0x3b31202c32722520,0x3436752e7476630a\n"
".quad 0x6c7225203233752e,0x37317225202c3232,0x36732e6464610a3b,0x2c33326c72252034\n"
".quad 0x202c32326c722520,0x6c2e0a3b38343032,0x393637203220636f,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c34326c,0x316c7225202c3332,0x356c7225202c3233\n"
".quad 0x36622e6c68730a3b,0x2c35326c72252034,0x202c34326c722520,0x2e7268730a3b3233\n"
".quad 0x326c722520343673,0x35326c7225202c36,0x6c2e0a3b3233202c,0x393637203220636f\n"
".quad 0x622e6c68730a3120,0x37326c7225203436,0x2c36326c7225202c,0x2e6464610a3b3220\n"
".quad 0x326c722520343673,0x2c346c7225202c38,0x0a3b37326c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x326c72255b202c35,0x2e6464610a3b5d38,0x3931722520323373\n"
".quad 0x2d202c317225202c,0x20636f6c2e0a3b31,0x0a31203037372032,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x317225202c353566,0x662e6464610a3b39,0x2c33356625203233\n"
".quad 0x30202c3535662520,0x3030303030463366,0x662e6464610a3b30,0x2c30336625203233\n"
".quad 0x6630202c32662520,0x3030303030304633,0x33752e766f6d0a3b,0x202c303272252032\n"
".quad 0x786574090a0a3b30,0x662e34762e64322e,0x7b203233662e3233,0x6625202c39316625\n"
".quad 0x31326625202c3032,0x2c7d32326625202c,0x6665527865745b20,0x257b202c4431665f\n"
".quad 0x336625202c333566,0x2e090a0a3b5d7d30,0x3737203220636f6c,0x2e6464610a312031\n"
".quad 0x3132722520323373,0x31202c317225202c,0x6e722e7476630a3b,0x3233732e3233662e\n"
".quad 0x25202c3635662520,0x6464610a3b313272,0x346625203233662e,0x2c36356625202c37\n"
".quad 0x3030304633663020,0x74090a0a3b303030,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x202c353266257b20,0x6625202c36326625,0x38326625202c3732,0x527865745b202c7d\n"
".quad 0x202c4433665f6665,0x25202c373466257b,0x0a0a3b5d7d303366,0x203220636f6c2e09\n"
".quad 0x76630a3120323737,0x3233662e6e722e74,0x356625203233732e,0x3b35317225202c37\n"
".quad 0x3233662e6464610a,0x25202c3234662520,0x336630202c373566,0x3b30303030303046\n"
".quad 0x322e786574090a0a,0x3233662e34762e64,0x66257b203233662e,0x32336625202c3133\n"
".quad 0x202c33336625202c,0x5b202c7d34336625,0x665f666552786574,0x3566257b202c4435\n"
".quad 0x7d32346625202c33,0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x202c373366257b20,0x6625202c38336625,0x30346625202c3933,0x527865745b202c7d\n"
".quad 0x202c4436665f6665,0x25202c373466257b,0x0a0a3b5d7d323466,0x203220636f6c2e09\n"
".quad 0x76630a3120343737,0x3233662e6e722e74,0x356625203233732e,0x3b37317225202c38\n"
".quad 0x3233662e6464610a,0x25202c3435662520,0x336630202c383566,0x3b30303030303046\n"
".quad 0x322e786574090a0a,0x3233662e34762e64,0x66257b203233662e,0x34346625202c3334\n"
".quad 0x202c35346625202c,0x5b202c7d36346625,0x665f666552786574,0x3466257b202c4437\n"
".quad 0x7d34356625202c37,0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x202c393466257b20,0x6625202c30356625,0x32356625202c3135,0x527865745b202c7d\n"
".quad 0x202c4438665f6665,0x25202c333566257b,0x0a0a3b5d7d343566,0x3436732e64646109\n"
".quad 0x202c39326c722520,0x3533202c366c7225,0x636f6c2e0a3b3438,0x3120343837203220\n"
".quad 0x2e6f6c2e64616d0a,0x336c722520343673,0x39326c7225202c30,0x3233316c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x25202c31336c7225,0x3233202c30336c72\n"
".quad 0x36732e7268730a3b,0x2c32336c72252034,0x202c31336c722520,0x636f6c2e0a3b3233\n"
".quad 0x3120343837203220,0x3436622e6c68730a,0x202c33336c722520,0x32202c32336c7225\n"
".quad 0x36732e6464610a3b,0x202c386c72252034,0x7225202c336c7225,0x6464610a3b33336c\n"
".quad 0x6c7225203436732e,0x366c7225202c3433,0x0a3b36393034202c,0x37203220636f6c2e\n"
".quad 0x64616d0a31203538,0x203436732e6f6c2e,0x25202c35336c7225,0x7225202c34336c72\n"
".quad 0x7225202c3233316c,0x2e6c68730a3b356c,0x336c722520343662,0x35336c7225202c36\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c37336c,0x0a3b3233202c3633\n"
".quad 0x37203220636f6c2e,0x6c68730a31203538,0x6c7225203436622e,0x336c7225202c3833\n"
".quad 0x64610a3b32202c37,0x7225203436732e64,0x336c7225202c396c,0x3b38336c7225202c\n"
".quad 0x203220636f6c2e0a,0x25400a3120373737,0x4220617262203170,0x0a0a3b335f353142\n"
".quad 0x37203220636f6c2e,0x6464610a31203139,0x356625203233662e,0x202c336625202c39\n"
".quad 0x64610a3b39316625,0x6625203233662e64,0x39356625202c3036,0x610a3b346625202c\n"
".quad 0x25203233662e6464,0x366625202c313666,0x3b35326625202c30,0x3233662e6464610a\n"
".quad 0x25202c3236662520,0x356625202c313666,0x33662e6464610a3b,0x202c333666252032\n"
".quad 0x6625202c32366625,0x2e6464610a3b3133,0x3436662520323366,0x202c33366625202c\n"
".quad 0x64610a3b37336625,0x6625203233662e64,0x34366625202c3536,0x0a3b33346625202c\n"
".quad 0x203233662e646461,0x6625202c36366625,0x39346625202c3536,0x33662e6275730a3b\n"
".quad 0x202c373666252032,0x6625202c39316625,0x2e6464610a3b3532,0x3836662520323366\n"
".quad 0x202c37366625202c,0x75730a3b31336625,0x6625203233662e62,0x38366625202c3936\n"
".quad 0x0a3b37336625202c,0x203233662e627573,0x6625202c30376625,0x33346625202c3936\n"
".quad 0x33662e6464610a3b,0x202c313766252032,0x6625202c30376625,0x2e6275730a3b3934\n"
".quad 0x3237662520323366,0x25202c346625202c,0x2e6464610a3b3566,0x3337662520323366\n"
".quad 0x202c32376625202c,0x64610a3b31336625,0x6625203233662e64,0x33376625202c3437\n"
".quad 0x0a3b37336625202c,0x203233662e627573,0x6625202c35376625,0x33346625202c3437\n"
".quad 0x33662e6275730a3b,0x202c363766252032,0x6625202c35376625,0x2e6c756d0a3b3934\n"
".quad 0x3737662520323366,0x202c36376625202c,0x6d660a3b36376625,0x3233662e6e722e61\n"
".quad 0x25202c3837662520,0x376625202c313766,0x3b37376625202c31,0x3233662e766f6d0a\n"
".quad 0x30202c3937662520,0x3030303043463366,0x20636f6c2e0a3b30,0x0a31203139372032\n"
".quad 0x203233662e67656e,0x6625202c30386625,0x2e616d660a3b3837,0x25203233662e6e72\n"
".quad 0x386625202c313866,0x2c39376625202c30,0x660a3b3636662520,0x33662e6e722e616d\n"
".quad 0x202c323866252032,0x6630202c31386625,0x3933453833454542,0x6e0a3b336625202c\n"
".quad 0x25203233662e6765,0x386625202c333866,0x61702e646c0a3b32,0x203233662e6d6172\n"
".quad 0x5b202c3334316625,0x645f524c33315a5f,0x434442416279685f,0x666d665f53665032\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d32,0x3120313937203220,0x2e6e722e616d660a\n"
".quad 0x3438662520323366,0x202c33386625202c,0x25202c3334316625,0x2e766f6d0a3b3366\n"
".quad 0x3538662520323366,0x303430346630202c,0x6c2e0a3b30303030,0x313937203220636f\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x31376625202c3638,0x303430346630202c\n"
".quad 0x6625202c30303030,0x2e6c756d0a3b3636,0x3738662520323366,0x202c31376625202c\n"
".quad 0x3030303930346630,0x2e616d660a3b3030,0x25203233662e6e72,0x386625202c383866\n"
".quad 0x2c31376625202c37,0x660a3b3638662520,0x33662e6e722e616d,0x202c393866252032\n"
".quad 0x6625202c30386625,0x38386625202c3937,0x33662e766f6d0a3b,0x202c303966252032\n"
".quad 0x4538334544336630,0x636f6c2e0a3b3933,0x3120313937203220,0x3233662e67656e0a\n"
".quad 0x25202c3139662520,0x616d660a3b393866,0x203233662e6e722e,0x6625202c32396625\n"
".quad 0x30396625202c3139,0x0a3b39316625202c,0x203233662e67656e,0x6625202c33396625\n"
".quad 0x2e616d660a3b3239,0x25203233662e6e72,0x396625202c343966,0x3334316625202c33\n"
".quad 0x0a3b39316625202c,0x662e6e722e616d66,0x2c35396625203233,0x30202c3637662520\n"
".quad 0x3030303034303466,0x3b36366625202c30,0x3233662e6c756d0a,0x25202c3639662520\n"
".quad 0x346630202c363766,0x3b30303030303930,0x2e6e722e616d660a,0x3739662520323366\n"
".quad 0x202c36396625202c,0x6625202c36376625,0x2e616d660a3b3539,0x25203233662e6e72\n"
".quad 0x386625202c383966,0x2c39376625202c30,0x6e0a3b3739662520,0x25203233662e6765\n"
".quad 0x396625202c393966,0x722e616d660a3b38,0x6625203233662e6e,0x396625202c303031\n"
".quad 0x2c30396625202c39,0x656e0a3b34662520,0x6625203233662e67,0x316625202c313031\n"
".quad 0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c32303166,0x316625202c313031\n"
".quad 0x3b346625202c3334,0x3233662e67656e0a,0x202c333031662520,0x6d660a3b31376625\n"
".quad 0x3233662e6e722e61,0x202c343031662520,0x25202c3330316625,0x366625202c353866\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x386625202c353031,0x2c31376625202c37\n"
".quad 0x0a3b343031662520,0x662e6e722e616d66,0x3630316625203233,0x202c30386625202c\n"
".quad 0x6625202c39376625,0x67656e0a3b353031,0x316625203233662e,0x30316625202c3730\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x316625202c383031,0x30396625202c3730\n"
".quad 0x0a3b35326625202c,0x203233662e67656e,0x25202c3930316625,0x6d660a3b38303166\n"
".quad 0x3233662e6e722e61,0x202c303131662520,0x25202c3930316625,0x6625202c33343166\n"
".quad 0x2e67656e0a3b3532,0x3131662520323366,0x3b36376625202c31,0x2e6e722e616d660a\n"
".quad 0x3131662520323366,0x3131316625202c32,0x202c35386625202c,0x6d660a3b36366625\n"
".quad 0x3233662e6e722e61,0x202c333131662520,0x6625202c36396625,0x31316625202c3637\n"
".quad 0x722e616d660a3b32,0x6625203233662e6e,0x386625202c343131,0x2c39376625202c30\n"
".quad 0x0a3b333131662520,0x203233662e67656e,0x25202c3531316625,0x6d660a3b34313166\n"
".quad 0x3233662e6e722e61,0x202c363131662520,0x25202c3531316625,0x356625202c303966\n"
".quad 0x33662e67656e0a3b,0x2c37313166252032,0x0a3b363131662520,0x662e6e722e616d66\n"
".quad 0x3831316625203233,0x2c3731316625202c,0x202c333431662520,0x6464610a3b356625\n"
".quad 0x316625203233662e,0x31376625202c3931,0x0a3b36376625202c,0x662e6e722e616d66\n"
".quad 0x3032316625203233,0x2c3931316625202c,0x3030343034663020,0x366625202c303030\n"
".quad 0x662e6c756d0a3b36,0x3132316625203233,0x2c3931316625202c,0x3030393034663020\n"
".quad 0x616d660a3b303030,0x203233662e6e722e,0x25202c3232316625,0x6625202c31323166\n"
".quad 0x316625202c393131,0x2e616d660a3b3032,0x25203233662e6e72,0x6625202c33323166\n"
".quad 0x39376625202c3038,0x3b3232316625202c,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x3332316625202c31,0x36662e766f6d0a3b,0x202c326466252034,0x3137433946336430\n"
".quad 0x4438423743313743,0x636f6c2e0a3b4331,0x3120313937203220,0x3436662e7476630a\n"
".quad 0x646625203233662e,0x3b31336625202c33,0x3436662e67656e0a,0x25202c3464662520\n"
".quad 0x616d660a3b316466,0x203436662e6e722e,0x6625202c35646625,0x32646625202c3464\n"
".quad 0x0a3b33646625202c,0x2e3436662e747663,0x3664662520323366,0x3b3334316625202c\n"
".quad 0x3436662e67656e0a,0x25202c3764662520,0x616d660a3b366466,0x203436662e6e722e\n"
".quad 0x6625202c38646625,0x35646625202c3764,0x0a3b33646625202c,0x662e6e722e747663\n"
".quad 0x25203436662e3233,0x6625202c34323166,0x2e6275730a3b3864,0x3231662520323366\n"
".quad 0x2c36376625202c35,0x2e0a3b3137662520,0x3937203220636f6c,0x2e616d660a312031\n"
".quad 0x25203233662e6e72,0x6625202c36323166,0x346630202c353231,0x2c30303030303430\n"
".quad 0x6d0a3b3636662520,0x25203233662e6c75,0x6625202c37323166,0x346630202c353231\n"
".quad 0x3b30303030303930,0x2e6e722e616d660a,0x3231662520323366,0x3732316625202c38\n"
".quad 0x2c3532316625202c,0x0a3b363231662520,0x662e6e722e616d66,0x3932316625203233\n"
".quad 0x202c30386625202c,0x6625202c39376625,0x7476630a3b383231,0x3233662e3436662e\n"
".quad 0x25202c3964662520,0x76630a3b39323166,0x33662e3436662e74,0x2c30316466252032\n"
".quad 0x6e0a3b3733662520,0x25203436662e6765,0x6625202c31316466,0x2e616d660a3b3964\n"
".quad 0x25203436662e6e72,0x6625202c32316466,0x646625202c313164,0x3031646625202c32\n"
".quad 0x6e722e616d660a3b,0x646625203436662e,0x37646625202c3331,0x2c3231646625202c\n"
".quad 0x0a3b303164662520,0x662e6e722e747663,0x25203436662e3233,0x6625202c30333166\n"
".quad 0x6275730a3b333164,0x316625203233662e,0x30316625202c3133,0x3b36376625202c33\n"
".quad 0x2e6e722e616d660a,0x3331662520323366,0x3133316625202c32,0x303430346630202c\n"
".quad 0x6625202c30303030,0x2e6c756d0a3b3636,0x3331662520323366,0x3133316625202c33\n"
".quad 0x303930346630202c,0x6d660a3b30303030,0x3233662e6e722e61,0x202c343331662520\n"
".quad 0x25202c3333316625,0x6625202c31333166,0x616d660a3b323331,0x203233662e6e722e\n"
".quad 0x25202c3533316625,0x376625202c303866,0x3433316625202c39,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x316625202c343164,0x2e7476630a3b3533,0x203233662e343666\n"
".quad 0x25202c3531646625,0x67656e0a3b333466,0x646625203436662e,0x31646625202c3631\n"
".quad 0x722e616d660a3b34,0x6625203436662e6e,0x646625202c373164,0x32646625202c3631\n"
".quad 0x3b3531646625202c,0x2e6e722e616d660a,0x3164662520343666,0x2c37646625202c38\n"
".quad 0x202c373164662520,0x630a3b3531646625,0x33662e6e722e7476,0x6625203436662e32\n"
".quad 0x646625202c363331,0x2e6275730a3b3831,0x3331662520323366,0x2c31376625202c37\n"
".quad 0x660a3b3637662520,0x33662e6e722e616d,0x2c38333166252032,0x202c373331662520\n"
".quad 0x3030303430346630,0x36366625202c3030,0x33662e6c756d0a3b,0x2c39333166252032\n"
".quad 0x202c373331662520,0x3030303930346630,0x2e616d660a3b3030,0x25203233662e6e72\n"
".quad 0x6625202c30343166,0x316625202c393331,0x33316625202c3733,0x722e616d660a3b38\n"
".quad 0x6625203233662e6e,0x386625202c313431,0x2c39376625202c30,0x0a3b303431662520\n"
".quad 0x2e3436662e747663,0x3164662520323366,0x3134316625202c39,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x346625202c303264,0x662e67656e0a3b39,0x3132646625203436\n"
".quad 0x3b3931646625202c,0x2e6e722e616d660a,0x3264662520343666,0x3132646625202c32\n"
".quad 0x202c32646625202c,0x660a3b3032646625,0x36662e6e722e616d,0x2c33326466252034\n"
".quad 0x25202c3764662520,0x6625202c32326466,0x7476630a3b303264,0x2e3233662e6e722e\n"
".quad 0x3431662520343666,0x3332646625202c32,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3133316c72,0x645f524c33315a5f,0x434442416279685f,0x666d665f53665032\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d33,0x3120393537203220,0x2e6f6c2e64616d0a\n"
".quad 0x346c722520343673,0x2c366c7225202c31,0x2c3133316c722520,0x6c0a3b356c722520\n"
".quad 0x2e6d617261702e64,0x316c722520343675,0x315a5f5b202c3932,0x79685f645f524c33\n"
".quad 0x6650324344424162,0x705f69666d665f53,0x3b5d315f6d617261,0x6f742e617476630a\n"
".quad 0x2e6c61626f6c672e,0x346c722520343675,0x32316c7225202c32,0x622e6c68730a3b39\n"
".quad 0x33346c7225203436,0x2c31346c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x346c7225202c3434,0x2e0a3b3233202c33,0x3937203220636f6c,0x2e6c68730a312033\n"
".quad 0x346c722520343662,0x34346c7225202c35,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x346c7225202c3634,0x35346c7225202c32,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x2c5d36346c72255b,0x610a3b3438662520,0x25203436732e6464,0x7225202c37346c72\n"
".quad 0x3b323135202c366c,0x203220636f6c2e0a,0x616d0a3120383737,0x3436732e6f6c2e64\n"
".quad 0x202c38346c722520,0x25202c37346c7225,0x25202c3133316c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x346c7225202c3934,0x730a3b3233202c38,0x25203436732e7268\n"
".quad 0x7225202c30356c72,0x3b3233202c39346c,0x203220636f6c2e0a,0x68730a3120383737\n"
".quad 0x7225203436622e6c,0x6c7225202c31356c,0x610a3b32202c3035,0x25203436732e6464\n"
".quad 0x7225202c32356c72,0x6c7225202c32346c,0x636f6c2e0a3b3135,0x3120343937203220\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d32356c7225,0x64610a3b34396625\n"
".quad 0x7225203436732e64,0x6c7225202c33356c,0x3b34323031202c36,0x203220636f6c2e0a\n"
".quad 0x616d0a3120393737,0x3436732e6f6c2e64,0x202c34356c722520,0x25202c33356c7225\n"
".quad 0x25202c3133316c72,0x6c68730a3b356c72,0x6c7225203436622e,0x356c7225202c3535\n"
".quad 0x730a3b3233202c34,0x25203436732e7268,0x7225202c36356c72,0x3b3233202c35356c\n"
".quad 0x203220636f6c2e0a,0x68730a3120393737,0x7225203436622e6c,0x6c7225202c37356c\n"
".quad 0x610a3b32202c3635,0x25203436732e6464,0x7225202c38356c72,0x6c7225202c32346c\n"
".quad 0x636f6c2e0a3b3735,0x3120353937203220,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d38356c7225,0x610a3b3230316625,0x25203436732e6464,0x7225202c39356c72\n"
".quad 0x36333531202c366c,0x3220636f6c2e0a3b,0x6d0a312030383720,0x36732e6f6c2e6461\n"
".quad 0x2c30366c72252034,0x202c39356c722520,0x202c3133316c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x6c7225202c31366c,0x0a3b3233202c3036,0x203436732e726873\n"
".quad 0x25202c32366c7225,0x3233202c31366c72,0x3220636f6c2e0a3b,0x730a312030383720\n"
".quad 0x25203436622e6c68,0x7225202c33366c72,0x0a3b32202c32366c,0x203436732e646461\n"
".quad 0x25202c34366c7225,0x7225202c32346c72,0x6f6c2e0a3b33366c,0x2036393720322063\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d34366c72255b,0x0a3b303131662520\n"
".quad 0x203436732e646461,0x25202c35366c7225,0x343032202c366c72,0x20636f6c2e0a3b38\n"
".quad 0x0a31203138372032,0x732e6f6c2e64616d,0x36366c7225203436,0x2c35366c7225202c\n"
".quad 0x2c3133316c722520,0x730a3b356c722520,0x25203436622e6c68,0x7225202c37366c72\n"
".quad 0x3b3233202c36366c,0x3436732e7268730a,0x202c38366c722520,0x33202c37366c7225\n"
".quad 0x20636f6c2e0a3b32,0x0a31203138372032,0x203436622e6c6873,0x25202c39366c7225\n"
".quad 0x3b32202c38366c72,0x3436732e6464610a,0x202c30376c722520,0x25202c32346c7225\n"
".quad 0x6c2e0a3b39366c72,0x373937203220636f,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x5d30376c72255b20,0x3b3831316625202c,0x3436732e6464610a,0x202c31376c722520\n"
".quad 0x3532202c366c7225,0x636f6c2e0a3b3036,0x3120323837203220,0x2e6f6c2e64616d0a\n"
".quad 0x376c722520343673,0x31376c7225202c32,0x3133316c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x25202c33376c7225,0x3233202c32376c72,0x36732e7268730a3b\n"
".quad 0x2c34376c72252034,0x202c33376c722520,0x636f6c2e0a3b3233,0x3120323837203220\n"
".quad 0x3436622e6c68730a,0x202c35376c722520,0x32202c34376c7225,0x36732e6464610a3b\n"
".quad 0x2c36376c72252034,0x202c32346c722520,0x2e0a3b35376c7225,0x3937203220636f6c\n"
".quad 0x672e74730a312038,0x33662e6c61626f6c,0x36376c72255b2032,0x3432316625202c5d\n"
".quad 0x36732e6464610a3b,0x2c37376c72252034,0x33202c366c722520,0x6f6c2e0a3b323730\n"
".quad 0x2033383720322063,0x6f6c2e64616d0a31,0x6c7225203436732e,0x376c7225202c3837\n"
".quad 0x33316c7225202c37,0x3b356c7225202c31,0x3436622e6c68730a,0x202c39376c722520\n"
".quad 0x33202c38376c7225,0x732e7268730a3b32,0x30386c7225203436,0x2c39376c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x2033383720322063,0x36622e6c68730a31,0x2c31386c72252034\n"
".quad 0x202c30386c722520,0x732e6464610a3b32,0x32386c7225203436,0x2c32346c7225202c\n"
".quad 0x0a3b31386c722520,0x37203220636f6c2e,0x2e74730a31203939,0x662e6c61626f6c67\n"
".quad 0x386c72255b203233,0x33316625202c5d32,0x20636f6c2e0a3b30,0x0a31203438372032\n"
".quad 0x732e6f6c2e64616d,0x34386c7225203436,0x2c39326c7225202c,0x2c3133316c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x7225202c35386c72,0x3b3233202c34386c\n"
".quad 0x3436732e7268730a,0x202c36386c722520,0x33202c35386c7225,0x20636f6c2e0a3b32\n"
".quad 0x0a31203438372032,0x203436622e6c6873,0x25202c37386c7225,0x3b32202c36386c72\n"
".quad 0x3436732e6464610a,0x202c38386c722520,0x25202c32346c7225,0x6c2e0a3b37386c72\n"
".quad 0x303038203220636f,0x6c672e74730a3120,0x3233662e6c61626f,0x5d38386c72255b20\n"
".quad 0x3b3633316625202c,0x203220636f6c2e0a,0x74730a3120313038,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x34316625202c5d39,0x20636f6c2e0a3b32,0x0a32203430382032\n"
".quad 0x42420a0a3b746572,0x64610a3a335f3531,0x7225203436732e64,0x6c7225202c30396c\n"
".quad 0x0a3b323135202c36,0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c303331\n"
".quad 0x685f645f524c3331,0x5032434442416279,0x5f69666d665f5366,0x5d335f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x6d0a312038373720,0x36732e6f6c2e6461,0x2c32396c72252034\n"
".quad 0x202c30396c722520,0x202c3033316c7225,0x646c0a3b356c7225,0x752e6d617261702e\n"
".quad 0x32316c7225203436,0x33315a5f5b202c38,0x6279685f645f524c,0x5366503243444241\n"
".quad 0x61705f69666d665f,0x0a3b5d315f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67\n"
".quad 0x33396c7225203436,0x3832316c7225202c,0x36622e6c68730a3b,0x2c34396c72252034\n"
".quad 0x202c32396c722520,0x2e7268730a3b3233,0x396c722520343673,0x34396c7225202c35\n"
".quad 0x6c2e0a3b3233202c,0x383737203220636f,0x622e6c68730a3120,0x36396c7225203436\n"
".quad 0x2c35396c7225202c,0x2e6464610a3b3220,0x396c722520343673,0x33396c7225202c37\n"
".quad 0x3b36396c7225202c,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d37396c7225\n"
".quad 0x64610a3b35326625,0x7225203436732e64,0x6c7225202c38396c,0x3b34323031202c36\n"
".quad 0x203220636f6c2e0a,0x616d0a3120393737,0x3436732e6f6c2e64,0x202c39396c722520\n"
".quad 0x25202c38396c7225,0x25202c3033316c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c303031,0x0a3b3233202c3939,0x203436732e726873,0x202c3130316c7225\n"
".quad 0x202c3030316c7225,0x636f6c2e0a3b3233,0x3120393737203220,0x3436622e6c68730a\n"
".quad 0x2c3230316c722520,0x2c3130316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x396c7225202c3330,0x30316c7225202c33,0x6c672e74730a3b32,0x3233662e6c61626f\n"
".quad 0x3330316c72255b20,0x0a3b356625202c5d,0x203436732e646461,0x202c3430316c7225\n"
".quad 0x3531202c366c7225,0x636f6c2e0a3b3633,0x3120303837203220,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3530,0x316c7225202c3430,0x356c7225202c3033\n"
".quad 0x36622e6c68730a3b,0x3630316c72252034,0x3530316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3730316c,0x3233202c3630316c,0x3220636f6c2e0a3b\n"
".quad 0x730a312030383720,0x25203436622e6c68,0x25202c3830316c72,0x32202c3730316c72\n"
".quad 0x36732e6464610a3b,0x3930316c72252034,0x2c33396c7225202c,0x3b3830316c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3930316c7225,0x610a3b3931662520\n"
".quad 0x25203436732e6464,0x25202c3031316c72,0x343032202c366c72,0x20636f6c2e0a3b38\n"
".quad 0x0a31203138372032,0x732e6f6c2e64616d,0x31316c7225203436,0x31316c7225202c31\n"
".quad 0x33316c7225202c30,0x3b356c7225202c30,0x3436622e6c68730a,0x2c3231316c722520\n"
".quad 0x2c3131316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c333131\n"
".quad 0x3b3233202c323131,0x203220636f6c2e0a,0x68730a3120313837,0x7225203436622e6c\n"
".quad 0x7225202c3431316c,0x3b32202c3331316c,0x3436732e6464610a,0x2c3531316c722520\n"
".quad 0x202c33396c722520,0x0a3b3431316c7225,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3531316c72,0x6464610a3b346625,0x6c7225203436732e,0x6c7225202c363131\n"
".quad 0x3b30363532202c36,0x203220636f6c2e0a,0x616d0a3120323837,0x3436732e6f6c2e64\n"
".quad 0x2c3731316c722520,0x2c3631316c722520,0x2c3033316c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3831316c72,0x33202c3731316c72,0x732e7268730a3b32\n"
".quad 0x31316c7225203436,0x31316c7225202c39,0x2e0a3b3233202c38,0x3837203220636f6c\n"
".quad 0x2e6c68730a312032,0x316c722520343662,0x316c7225202c3032,0x610a3b32202c3931\n"
".quad 0x25203436732e6464,0x25202c3132316c72,0x7225202c33396c72,0x74730a3b3032316c\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d313231,0x2e6464610a3b3334\n"
".quad 0x316c722520343673,0x366c7225202c3232,0x0a3b32373033202c,0x37203220636f6c2e\n"
".quad 0x64616d0a31203338,0x203436732e6f6c2e,0x202c3332316c7225,0x202c3232316c7225\n"
".quad 0x202c3033316c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3432316c\n"
".quad 0x3233202c3332316c,0x36732e7268730a3b,0x3532316c72252034,0x3432316c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x333837203220636f,0x622e6c68730a3120,0x32316c7225203436\n"
".quad 0x32316c7225202c36,0x64610a3b32202c35,0x7225203436732e64,0x7225202c3732316c\n"
".quad 0x6c7225202c33396c,0x2e74730a3b363231,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x346625202c5d3732,0x20636f6c2e0a3b39,0x0a31203438372032,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x6625202c5d386c72,0x636f6c2e0a3b3133,0x3120353837203220\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x25202c5d396c7225,0x42420a0a3b373366\n"
".quad 0x6c2e0a3a345f3531,0x343038203220636f,0x0a3b7465720a3220,0x72746e652e0a0a7d\n"
".quad 0x524c30315a5f2079,0x32434442415f645f,0x28666d665f536650,0x206d617261702e0a\n"
".quad 0x315a5f203436752e,0x42415f645f524c30,0x665f536650324344,0x6d617261705f666d\n"
".quad 0x7261702e0a2c305f,0x203436752e206d61,0x645f524c30315a5f,0x665032434442415f\n"
".quad 0x61705f666d665f53,0x2e0a2c315f6d6172,0x662e206d61726170,0x4c30315a5f203233\n"
".quad 0x434442415f645f52,0x666d665f53665032,0x325f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203436752e20,0x415f645f524c3031,0x5f53665032434442,0x617261705f666d66\n"
".quad 0x61702e0a2c335f6d,0x3233662e206d6172,0x5f524c30315a5f20,0x5032434442415f64\n"
".quad 0x705f666d665f5366,0x290a345f6d617261,0x206765722e0a7b0a,0x3c6625203233662e\n"
".quad 0x722e0a3b3e343031,0x203436662e206765,0x3b3e34323c646625,0x702e206765722e0a\n"
".quad 0x323c702520646572,0x206765722e0a3b3e,0x3c7225203233732e,0x65722e0a3b3e3535\n"
".quad 0x25203436732e2067,0x3b3e3037313c6c72,0x61702e646c0a0a0a,0x203436752e6d6172\n"
".quad 0x5f5b202c356c7225,0x5f645f524c30315a,0x5366503243444241,0x7261705f666d665f\n"
".quad 0x6c0a3b5d305f6d61,0x2e6d617261702e64,0x316c722520343675,0x4c30315a5f5b202c\n"
".quad 0x434442415f645f52,0x666d665f53665032,0x315f6d617261705f,0x61702e646c0a3b5d\n"
".quad 0x203436752e6d6172,0x5f5b202c326c7225,0x5f645f524c30315a,0x5366503243444241\n"
".quad 0x7261705f666d665f,0x630a3b5d335f6d61,0x672e6f742e617476,0x36752e6c61626f6c\n"
".quad 0x202c366c72252034,0x6c2e0a3b316c7225,0x383038203220636f,0x752e766f6d0a3120\n"
".quad 0x202c317225203233,0x3b782e6469746e25,0x3233752e766f6d0a,0x6325202c32722520\n"
".quad 0x0a3b782e64696174,0x203233752e766f6d,0x697425202c337225,0x64616d0a3b782e64\n"
".quad 0x203233732e6f6c2e,0x317225202c347225,0x25202c327225202c,0x636f6c2e0a3b3372\n"
".quad 0x3120393038203220,0x3233752e766f6d0a,0x6e25202c35722520,0x6d0a3b792e646974\n"
".quad 0x25203233752e766f,0x61746325202c3672,0x6f6d0a3b792e6469,0x7225203233752e76\n"
".quad 0x2e64697425202c37,0x6c2e64616d0a3b79,0x7225203233732e6f,0x202c357225202c38\n"
".quad 0x377225202c367225,0x3220636f6c2e0a3b,0x630a312030313820,0x33662e6e722e7476\n"
".quad 0x6625203233732e32,0x3b347225202c3131,0x2e6e722e616d660a,0x3231662520323366\n"
".quad 0x202c31316625202c,0x3030303845336630,0x33346630202c3030,0x0a3b303030444643\n"
".quad 0x38203220636f6c2e,0x7476630a31203131,0x2e3233662e6e722e,0x3331662520323373\n"
".quad 0x660a3b387225202c,0x33662e6e722e616d,0x202c343166252032,0x6630202c33316625\n"
".quad 0x3030303030384533,0x463933346630202c,0x64610a3b30303044,0x6625203233662e64\n"
".quad 0x32316625202c3531,0x464633436630202c,0x64610a3b30303043,0x6625203233662e64\n"
".quad 0x34316625202c3631,0x464233436630202c,0x6c2e0a3b30303043,0x203437203220636f\n"
".quad 0x33662e6c756d0a31,0x202c373166252032,0x6625202c36316625,0x2e616d660a3b3631\n"
".quad 0x25203233662e6e72,0x316625202c383166,0x2c35316625202c35,0x730a3b3731662520\n"
".quad 0x662e746c2e707465,0x202c317025203233,0x6630202c38316625,0x3030303030383234\n"
".quad 0x36752e7476630a3b,0x7225203233752e34,0x3b347225202c376c,0x203220636f6c2e0a\n"
".quad 0x76630a3120333138,0x33732e3436732e74,0x202c386c72252032,0x64616d0a3b387225\n"
".quad 0x203436732e6f6c2e,0x7225202c396c7225,0x326c7225202c386c,0x0a3b376c7225202c\n"
".quad 0x2e6f742e61747663,0x752e6c61626f6c67,0x30316c7225203436,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x25202c31316c7225,0x3b3233202c396c72,0x3436732e7268730a\n"
".quad 0x202c32316c722520,0x33202c31316c7225,0x20636f6c2e0a3b32,0x0a31203132382032\n"
".quad 0x203436622e6c6873,0x25202c33316c7225,0x3b32202c32316c72,0x3436732e6464610a\n"
".quad 0x202c34316c722520,0x25202c30316c7225,0x646c0a3b33316c72,0x2e6c61626f6c672e\n"
".quad 0x2c32662520323366,0x5d34316c72255b20,0x33732e6464610a3b,0x202c303172252032\n"
".quad 0x3b312d202c347225,0x3436752e7476630a,0x6c7225203233752e,0x30317225202c3531\n"
".quad 0x36732e6464610a3b,0x2c36316c72252034,0x35202c386c722520,0x636f6c2e0a3b3231\n"
".quad 0x3120323238203220,0x2e6f6c2e64616d0a,0x316c722520343673,0x36316c7225202c37\n"
".quad 0x202c326c7225202c,0x730a3b35316c7225,0x25203436622e6c68,0x7225202c38316c72\n"
".quad 0x3b3233202c37316c,0x3436732e7268730a,0x202c39316c722520,0x33202c38316c7225\n"
".quad 0x20636f6c2e0a3b32,0x0a31203232382032,0x203436622e6c6873,0x25202c30326c7225\n"
".quad 0x3b32202c39316c72,0x3436732e6464610a,0x202c31326c722520,0x25202c30316c7225\n"
".quad 0x646c0a3b30326c72,0x2e6c61626f6c672e,0x2c33662520323366,0x5d31326c72255b20\n"
".quad 0x33732e6464610a3b,0x202c323172252032,0x3b312d202c387225,0x203220636f6c2e0a\n"
".quad 0x76630a3120333238,0x33732e3436732e74,0x2c32326c72252032,0x610a3b3231722520\n"
".quad 0x25203436732e6464,0x7225202c33326c72,0x323031202c32326c,0x20636f6c2e0a3b34\n"
".quad 0x0a31203332382032,0x732e6f6c2e64616d,0x34326c7225203436,0x2c33326c7225202c\n"
".quad 0x25202c326c722520,0x6c68730a3b376c72,0x6c7225203436622e,0x326c7225202c3532\n"
".quad 0x730a3b3233202c34,0x25203436732e7268,0x7225202c36326c72,0x3b3233202c35326c\n"
".quad 0x203220636f6c2e0a,0x68730a3120333238,0x7225203436622e6c,0x6c7225202c37326c\n"
".quad 0x610a3b32202c3632,0x25203436732e6464,0x7225202c38326c72,0x6c7225202c30316c\n"
".quad 0x672e646c0a3b3732,0x33662e6c61626f6c,0x5b202c3466252032,0x0a3b5d38326c7225\n"
".quad 0x38203220636f6c2e,0x6464610a31203432,0x317225203233732e,0x202c347225202c34\n"
".quad 0x752e7476630a3b31,0x25203233752e3436,0x7225202c39326c72,0x2e6464610a3b3431\n"
".quad 0x336c722520343673,0x2c386c7225202c30,0x2e0a3b3633353120,0x3238203220636f6c\n"
".quad 0x2e64616d0a312034,0x25203436732e6f6c,0x7225202c31336c72,0x6c7225202c30336c\n"
".quad 0x39326c7225202c32,0x36622e6c68730a3b,0x2c32336c72252034,0x202c31336c722520\n"
".quad 0x2e7268730a3b3233,0x336c722520343673,0x32336c7225202c33,0x6c2e0a3b3233202c\n"
".quad 0x343238203220636f,0x622e6c68730a3120,0x34336c7225203436,0x2c33336c7225202c\n"
".quad 0x2e6464610a3b3220,0x336c722520343673,0x30316c7225202c35,0x3b34336c7225202c\n"
".quad 0x626f6c672e646c0a,0x25203233662e6c61,0x6c72255b202c3566,0x6f6c2e0a3b5d3533\n"
".quad 0x2035323820322063,0x33732e6464610a31,0x202c363172252032,0x0a3b31202c387225\n"
".quad 0x2e3436732e747663,0x336c722520323373,0x3b36317225202c36,0x3436732e6464610a\n"
".quad 0x202c37336c722520,0x32202c36336c7225,0x6f6c2e0a3b383430,0x2035323820322063\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x336c7225202c3833,0x2c326c7225202c37\n"
".quad 0x730a3b376c722520,0x25203436622e6c68,0x7225202c39336c72,0x3b3233202c38336c\n"
".quad 0x3436732e7268730a,0x202c30346c722520,0x33202c39336c7225,0x20636f6c2e0a3b32\n"
".quad 0x0a31203532382032,0x203436622e6c6873,0x25202c31346c7225,0x3b32202c30346c72\n"
".quad 0x3436732e6464610a,0x202c32346c722520,0x25202c30316c7225,0x646c0a3b31346c72\n"
".quad 0x2e6c61626f6c672e,0x2c36662520323366,0x5d32346c72255b20,0x36732e6464610a3b\n"
".quad 0x2c33346c72252034,0x202c32326c722520,0x6c2e0a3b30363532,0x363238203220636f\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c34346c,0x326c7225202c3334\n"
".quad 0x3b35316c7225202c,0x3436622e6c68730a,0x202c35346c722520,0x33202c34346c7225\n"
".quad 0x732e7268730a3b32,0x36346c7225203436,0x2c35346c7225202c,0x6f6c2e0a3b323320\n"
".quad 0x2036323820322063,0x36622e6c68730a31,0x2c37346c72252034,0x202c36346c722520\n"
".quad 0x732e6464610a3b32,0x38346c7225203436,0x2c30316c7225202c,0x0a3b37346c722520\n"
".quad 0x61626f6c672e646c,0x6625203233662e6c,0x346c72255b202c37,0x2e6464610a3b5d38\n"
".quad 0x346c722520343673,0x32326c7225202c39,0x0a3b32373033202c,0x38203220636f6c2e\n"
".quad 0x64616d0a31203732,0x203436732e6f6c2e,0x25202c30356c7225,0x7225202c39346c72\n"
".quad 0x326c7225202c326c,0x622e6c68730a3b39,0x31356c7225203436,0x2c30356c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x356c7225202c3235,0x2e0a3b3233202c31\n"
".quad 0x3238203220636f6c,0x2e6c68730a312037,0x356c722520343662,0x32356c7225202c33\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x316c7225202c3435,0x33356c7225202c30\n"
".quad 0x6f6c672e646c0a3b,0x203233662e6c6162,0x72255b202c386625,0x64610a3b5d34356c\n"
".quad 0x7225203436732e64,0x6c7225202c35356c,0x34383533202c3633,0x3220636f6c2e0a3b\n"
".quad 0x6d0a312038323820,0x36732e6f6c2e6461,0x2c36356c72252034,0x202c35356c722520\n"
".quad 0x7225202c326c7225,0x6c68730a3b39326c,0x6c7225203436622e,0x356c7225202c3735\n"
".quad 0x730a3b3233202c36,0x25203436732e7268,0x7225202c38356c72,0x3b3233202c37356c\n"
".quad 0x203220636f6c2e0a,0x68730a3120383238,0x7225203436622e6c,0x6c7225202c39356c\n"
".quad 0x610a3b32202c3835,0x25203436732e6464,0x7225202c30366c72,0x6c7225202c30316c\n"
".quad 0x672e646c0a3b3935,0x33662e6c61626f6c,0x5b202c3966252032,0x0a3b5d30366c7225\n"
".quad 0x203436732e646461,0x25202c31366c7225,0x3034202c36336c72,0x636f6c2e0a3b3639\n"
".quad 0x3120393238203220,0x2e6f6c2e64616d0a,0x366c722520343673,0x31366c7225202c32\n"
".quad 0x202c326c7225202c,0x730a3b35316c7225,0x25203436622e6c68,0x7225202c33366c72\n"
".quad 0x3b3233202c32366c,0x3436732e7268730a,0x202c34366c722520,0x33202c33366c7225\n"
".quad 0x20636f6c2e0a3b32,0x0a31203932382032,0x203436622e6c6873,0x25202c35366c7225\n"
".quad 0x3b32202c34366c72,0x3436732e6464610a,0x202c36366c722520,0x25202c30316c7225\n"
".quad 0x646c0a3b35366c72,0x2e6c61626f6c672e,0x3031662520323366,0x36366c72255b202c\n"
".quad 0x732e6464610a3b5d,0x37366c7225203436,0x202c386c7225202c,0x6c2e0a3b34383533\n"
".quad 0x383338203220636f,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c38366c\n"
".quad 0x326c7225202c3736,0x0a3b376c7225202c,0x203436622e6c6873,0x25202c39366c7225\n"
".quad 0x3233202c38366c72,0x36732e7268730a3b,0x2c30376c72252034,0x202c39366c722520\n"
".quad 0x636f6c2e0a3b3233,0x3120383338203220,0x3436622e6c68730a,0x202c31376c722520\n"
".quad 0x32202c30376c7225,0x36732e6464610a3b,0x202c336c72252034,0x7225202c366c7225\n"
".quad 0x6464610a3b31376c,0x6c7225203436732e,0x386c7225202c3237,0x0a3b36393034202c\n"
".quad 0x38203220636f6c2e,0x64616d0a31203933,0x203436732e6f6c2e,0x25202c33376c7225\n"
".quad 0x7225202c32376c72,0x376c7225202c326c,0x36622e6c68730a3b,0x2c34376c72252034\n"
".quad 0x202c33376c722520,0x2e7268730a3b3233,0x376c722520343673,0x34376c7225202c35\n"
".quad 0x6c2e0a3b3233202c,0x393338203220636f,0x622e6c68730a3120,0x36376c7225203436\n"
".quad 0x2c35376c7225202c,0x2e6464610a3b3220,0x346c722520343673,0x202c366c7225202c\n"
".quad 0x2e0a3b36376c7225,0x3338203220636f6c,0x317025400a312031,0x3142422061726220\n"
".quad 0x6c2e0a0a3b325f36,0x353438203220636f,0x662e6464610a3120,0x2c39316625203233\n"
".quad 0x6625202c32662520,0x662e6464610a3b33,0x2c30326625203233,0x25202c3931662520\n"
".quad 0x2e6464610a3b3466,0x3132662520323366,0x202c30326625202c,0x6464610a3b356625\n"
".quad 0x326625203233662e,0x2c31326625202c32,0x64610a3b36662520,0x6625203233662e64\n"
".quad 0x32326625202c3332,0x610a3b376625202c,0x25203233662e6464,0x326625202c343266\n"
".quad 0x0a3b386625202c33,0x203233662e646461,0x6625202c35326625,0x3b396625202c3432\n"
".quad 0x3233662e6464610a,0x25202c3632662520,0x316625202c353266,0x662e6275730a3b30\n"
".quad 0x2c37326625203233,0x6625202c33662520,0x662e6464610a3b35,0x2c38326625203233\n"
".quad 0x25202c3732662520,0x2e6275730a3b3766,0x3932662520323366,0x202c38326625202c\n"
".quad 0x6275730a3b386625,0x336625203233662e,0x2c39326625202c30,0x64610a3b39662520\n"
".quad 0x6625203233662e64,0x30336625202c3133,0x0a3b30316625202c,0x203233662e627573\n"
".quad 0x6625202c32336625,0x0a3b366625202c34,0x203233662e646461,0x6625202c33336625\n"
".quad 0x3b376625202c3233,0x3233662e6464610a,0x25202c3433662520,0x386625202c333366\n"
".quad 0x33662e6275730a3b,0x202c353366252032,0x6625202c34336625,0x662e6275730a3b39\n"
".quad 0x2c36336625203233,0x25202c3533662520,0x6c756d0a3b303166,0x336625203233662e\n"
".quad 0x2c36336625202c37,0x660a3b3633662520,0x33662e6e722e616d,0x202c383366252032\n"
".quad 0x6625202c31336625,0x37336625202c3133,0x33662e766f6d0a3b,0x202c393366252032\n"
".quad 0x3030304346336630,0x636f6c2e0a3b3030,0x3120353438203220,0x3233662e67656e0a\n"
".quad 0x25202c3034662520,0x616d660a3b383366,0x203233662e6e722e,0x6625202c31346625\n"
".quad 0x39336625202c3034,0x0a3b36326625202c,0x662e6e722e616d66,0x2c32346625203233\n"
".quad 0x30202c3134662520,0x3345383345454266,0x0a3b326625202c39,0x203233662e67656e\n"
".quad 0x6625202c33346625,0x702e646c0a3b3234,0x3233662e6d617261,0x202c333031662520\n"
".quad 0x5f524c30315a5f5b,0x5032434442415f64,0x705f666d665f5366,0x3b5d325f6d617261\n"
".quad 0x203220636f6c2e0a,0x6d660a3120353438,0x3233662e6e722e61,0x25202c3434662520\n"
".quad 0x316625202c333466,0x3b326625202c3330,0x3233662e766f6d0a,0x30202c3534662520\n"
".quad 0x3030303034303466,0x20636f6c2e0a3b30,0x0a31203534382032,0x662e6e722e616d66\n"
".quad 0x2c36346625203233,0x30202c3133662520,0x3030303034303466,0x3b36326625202c30\n"
".quad 0x3233662e6c756d0a,0x25202c3734662520,0x346630202c313366,0x3b30303030303930\n"
".quad 0x2e6e722e616d660a,0x3834662520323366,0x202c37346625202c,0x6625202c31336625\n"
".quad 0x2e616d660a3b3634,0x25203233662e6e72,0x346625202c393466,0x2c39336625202c30\n"
".quad 0x6d0a3b3834662520,0x25203233662e766f,0x336630202c303566,0x3b39334538334544\n"
".quad 0x203220636f6c2e0a,0x656e0a3120353438,0x6625203233662e67,0x39346625202c3135\n"
".quad 0x6e722e616d660a3b,0x356625203233662e,0x2c31356625202c32,0x25202c3035662520\n"
".quad 0x2e67656e0a3b3366,0x3335662520323366,0x0a3b32356625202c,0x662e6e722e616d66\n"
".quad 0x2c34356625203233,0x25202c3335662520,0x6625202c33303166,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x36336625202c3535,0x303430346630202c,0x6625202c30303030\n"
".quad 0x2e6c756d0a3b3632,0x3635662520323366,0x202c36336625202c,0x3030303930346630\n"
".quad 0x2e616d660a3b3030,0x25203233662e6e72,0x356625202c373566,0x2c36336625202c36\n"
".quad 0x660a3b3535662520,0x33662e6e722e616d,0x202c383566252032,0x6625202c30346625\n"
".quad 0x37356625202c3933,0x33662e67656e0a3b,0x202c393566252032,0x6d660a3b38356625\n"
".quad 0x3233662e6e722e61,0x25202c3036662520,0x356625202c393566,0x0a3b346625202c30\n"
".quad 0x203233662e67656e,0x6625202c31366625,0x2e616d660a3b3036,0x25203233662e6e72\n"
".quad 0x366625202c323666,0x3330316625202c31,0x6e0a3b346625202c,0x25203233662e6765\n"
".quad 0x336625202c333666,0x722e616d660a3b31,0x6625203233662e6e,0x33366625202c3436\n"
".quad 0x202c35346625202c,0x6d660a3b36326625,0x3233662e6e722e61,0x25202c3536662520\n"
".quad 0x336625202c373466,0x3b34366625202c31,0x2e6e722e616d660a,0x3636662520323366\n"
".quad 0x202c30346625202c,0x6625202c39336625,0x2e67656e0a3b3536,0x3736662520323366\n"
".quad 0x0a3b36366625202c,0x662e6e722e616d66,0x2c38366625203233,0x25202c3736662520\n"
".quad 0x356625202c303566,0x33662e67656e0a3b,0x202c393666252032,0x6d660a3b38366625\n"
".quad 0x3233662e6e722e61,0x25202c3037662520,0x316625202c393666,0x3b356625202c3330\n"
".quad 0x3233662e67656e0a,0x25202c3137662520,0x616d660a3b363366,0x203233662e6e722e\n"
".quad 0x6625202c32376625,0x35346625202c3137,0x0a3b36326625202c,0x662e6e722e616d66\n"
".quad 0x2c33376625203233,0x25202c3635662520,0x376625202c363366,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x30346625202c3437,0x202c39336625202c,0x656e0a3b33376625\n"
".quad 0x6625203233662e67,0x34376625202c3537,0x6e722e616d660a3b,0x376625203233662e\n"
".quad 0x2c35376625202c36,0x25202c3035662520,0x2e67656e0a3b3666,0x3737662520323366\n"
".quad 0x0a3b36376625202c,0x662e6e722e616d66,0x2c38376625203233,0x25202c3737662520\n"
".quad 0x6625202c33303166,0x662e6464610a3b36,0x2c39376625203233,0x25202c3133662520\n"
".quad 0x616d660a3b363366,0x203233662e6e722e,0x6625202c30386625,0x30346630202c3937\n"
".quad 0x202c303030303034,0x756d0a3b36326625,0x6625203233662e6c,0x39376625202c3138\n"
".quad 0x303930346630202c,0x6d660a3b30303030,0x3233662e6e722e61,0x25202c3238662520\n"
".quad 0x376625202c313866,0x3b30386625202c39,0x2e6e722e616d660a,0x3338662520323366\n"
".quad 0x202c30346625202c,0x6625202c39336625,0x2e7476630a3b3238,0x203233662e343666\n"
".quad 0x6625202c31646625,0x2e766f6d0a3b3338,0x3264662520343666,0x433946336430202c\n"
".quad 0x4237433137433137,0x6c2e0a3b43314438,0x353438203220636f,0x662e7476630a3120\n"
".quad 0x25203233662e3436,0x376625202c336466,0x36662e67656e0a3b,0x202c346466252034\n"
".quad 0x6d660a3b31646625,0x3436662e6e722e61,0x25202c3564662520,0x646625202c346466\n"
".quad 0x3b33646625202c32,0x3436662e7476630a,0x646625203233662e,0x3330316625202c36\n"
".quad 0x36662e67656e0a3b,0x202c376466252034,0x6d660a3b36646625,0x3436662e6e722e61\n"
".quad 0x25202c3864662520,0x646625202c376466,0x3b33646625202c35,0x2e6e722e7476630a\n"
".quad 0x203436662e323366,0x6625202c34386625,0x2e6275730a3b3864,0x3538662520323366\n"
".quad 0x202c36336625202c,0x6c2e0a3b31336625,0x353438203220636f,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x35386625202c3638,0x303430346630202c,0x6625202c30303030\n"
".quad 0x2e6c756d0a3b3632,0x3738662520323366,0x202c35386625202c,0x3030303930346630\n"
".quad 0x2e616d660a3b3030,0x25203233662e6e72,0x386625202c383866,0x2c35386625202c37\n"
".quad 0x660a3b3638662520,0x33662e6e722e616d,0x202c393866252032,0x6625202c30346625\n"
".quad 0x38386625202c3933,0x36662e7476630a3b,0x6625203233662e34,0x39386625202c3964\n"
".quad 0x36662e7476630a3b,0x6625203233662e34,0x386625202c303164,0x36662e67656e0a3b\n"
".quad 0x2c31316466252034,0x660a3b3964662520,0x36662e6e722e616d,0x2c32316466252034\n"
".quad 0x202c313164662520,0x6625202c32646625,0x616d660a3b303164,0x203436662e6e722e\n"
".quad 0x25202c3331646625,0x646625202c376466,0x31646625202c3231,0x722e7476630a3b30\n"
".quad 0x36662e3233662e6e,0x202c303966252034,0x730a3b3331646625,0x25203233662e6275\n"
".quad 0x366625202c313966,0x3b36336625202c33,0x2e6e722e616d660a,0x3239662520323366\n"
".quad 0x202c31396625202c,0x3030303430346630,0x36326625202c3030,0x33662e6c756d0a3b\n"
".quad 0x202c333966252032,0x6630202c31396625,0x3030303030393034,0x6e722e616d660a3b\n"
".quad 0x396625203233662e,0x2c33396625202c34,0x25202c3139662520,0x616d660a3b323966\n"
".quad 0x203233662e6e722e,0x6625202c35396625,0x39336625202c3034,0x0a3b34396625202c\n"
".quad 0x2e3436662e747663,0x3164662520323366,0x3b35396625202c34,0x3436662e7476630a\n"
".quad 0x646625203233662e,0x3b396625202c3531,0x3436662e67656e0a,0x202c363164662520\n"
".quad 0x660a3b3431646625,0x36662e6e722e616d,0x2c37316466252034,0x202c363164662520\n"
".quad 0x6625202c32646625,0x616d660a3b353164,0x203436662e6e722e,0x25202c3831646625\n"
".quad 0x646625202c376466,0x31646625202c3731,0x722e7476630a3b35,0x36662e3233662e6e\n"
".quad 0x202c363966252034,0x730a3b3831646625,0x25203233662e6275,0x336625202c373966\n"
".quad 0x3b36336625202c31,0x2e6e722e616d660a,0x3839662520323366,0x202c37396625202c\n"
".quad 0x3030303430346630,0x36326625202c3030,0x33662e6c756d0a3b,0x202c393966252032\n"
".quad 0x6630202c37396625,0x3030303030393034,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x39396625202c3030,0x202c37396625202c,0x6d660a3b38396625,0x3233662e6e722e61\n"
".quad 0x202c313031662520,0x6625202c30346625,0x30316625202c3933,0x662e7476630a3b30\n"
".quad 0x25203233662e3436,0x6625202c39316466,0x7476630a3b313031,0x3233662e3436662e\n"
".quad 0x202c303264662520,0x656e0a3b30316625,0x6625203436662e67,0x646625202c313264\n"
".quad 0x2e616d660a3b3931,0x25203436662e6e72,0x6625202c32326466,0x646625202c313264\n"
".quad 0x3032646625202c32,0x6e722e616d660a3b,0x646625203436662e,0x37646625202c3332\n"
".quad 0x2c3232646625202c,0x0a3b303264662520,0x662e6e722e747663,0x25203436662e3233\n"
".quad 0x6625202c32303166,0x2e646c0a3b333264,0x36752e6d61726170,0x3936316c72252034\n"
".quad 0x4c30315a5f5b202c,0x434442415f645f52,0x666d665f53665032,0x335f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203331382032,0x732e6f6c2e64616d,0x39376c7225203436\n"
".quad 0x202c386c7225202c,0x202c3936316c7225,0x646c0a3b376c7225,0x752e6d617261702e\n"
".quad 0x36316c7225203436,0x30315a5f5b202c37,0x4442415f645f524c,0x6d665f5366503243\n"
".quad 0x5f6d617261705f66,0x617476630a3b5d31,0x626f6c672e6f742e,0x25203436752e6c61\n"
".quad 0x7225202c30386c72,0x68730a3b3736316c,0x7225203436622e6c,0x6c7225202c31386c\n"
".quad 0x0a3b3233202c3937,0x203436732e726873,0x25202c32386c7225,0x3233202c31386c72\n"
".quad 0x3220636f6c2e0a3b,0x730a312037343820,0x25203436622e6c68,0x7225202c33386c72\n"
".quad 0x0a3b32202c32386c,0x203436732e646461,0x25202c34386c7225,0x7225202c30386c72\n"
".quad 0x2e74730a3b33386c,0x662e6c61626f6c67,0x386c72255b203233,0x34346625202c5d34\n"
".quad 0x3220636f6c2e0a3b,0x6d0a312032333820,0x36732e6f6c2e6461,0x2c36386c72252034\n"
".quad 0x202c36316c722520,0x202c3936316c7225,0x68730a3b376c7225,0x7225203436622e6c\n"
".quad 0x6c7225202c37386c,0x0a3b3233202c3638,0x203436732e726873,0x25202c38386c7225\n"
".quad 0x3233202c37386c72,0x3220636f6c2e0a3b,0x730a312032333820,0x25203436622e6c68\n"
".quad 0x7225202c39386c72,0x0a3b32202c38386c,0x203436732e646461,0x25202c30396c7225\n"
".quad 0x7225202c30386c72,0x6f6c2e0a3b39386c,0x2038343820322063,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x2c5d30396c72255b,0x610a3b3435662520,0x25203436732e6464\n"
".quad 0x7225202c31396c72,0x34323031202c386c,0x3220636f6c2e0a3b,0x6d0a312033333820\n"
".quad 0x36732e6f6c2e6461,0x2c32396c72252034,0x202c31396c722520,0x202c3936316c7225\n"
".quad 0x68730a3b376c7225,0x7225203436622e6c,0x6c7225202c33396c,0x0a3b3233202c3239\n"
".quad 0x203436732e726873,0x25202c34396c7225,0x3233202c33396c72,0x3220636f6c2e0a3b\n"
".quad 0x730a312033333820,0x25203436622e6c68,0x7225202c35396c72,0x0a3b32202c34396c\n"
".quad 0x203436732e646461,0x25202c36396c7225,0x7225202c30386c72,0x6f6c2e0a3b35396c\n"
".quad 0x2039343820322063,0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d36396c72255b\n"
".quad 0x2e0a3b3236662520,0x3338203220636f6c,0x2e64616d0a312034,0x25203436732e6f6c\n"
".quad 0x7225202c38396c72,0x6c7225202c30336c,0x6c7225202c393631,0x622e6c68730a3b37\n"
".quad 0x39396c7225203436,0x2c38396c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c303031,0x0a3b3233202c3939,0x38203220636f6c2e,0x6c68730a31203433\n"
".quad 0x6c7225203436622e,0x6c7225202c313031,0x0a3b32202c303031,0x203436732e646461\n"
".quad 0x202c3230316c7225,0x25202c30386c7225,0x2e0a3b3130316c72,0x3538203220636f6c\n"
".quad 0x672e74730a312030,0x33662e6c61626f6c,0x30316c72255b2032,0x30376625202c5d32\n"
".quad 0x36732e6464610a3b,0x3330316c72252034,0x202c386c7225202c,0x6c2e0a3b38343032\n"
".quad 0x353338203220636f,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3430316c\n"
".quad 0x7225202c3330316c,0x7225202c3936316c,0x2e6c68730a3b376c,0x316c722520343662\n"
".quad 0x316c7225202c3530,0x0a3b3233202c3430,0x203436732e726873,0x202c3630316c7225\n"
".quad 0x202c3530316c7225,0x636f6c2e0a3b3233,0x3120353338203220,0x3436622e6c68730a\n"
".quad 0x2c3730316c722520,0x2c3630316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x386c7225202c3830,0x30316c7225202c30,0x20636f6c2e0a3b37,0x0a31203135382032\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3830316c72,0x64610a3b38376625\n"
".quad 0x7225203436732e64,0x7225202c3930316c,0x30363532202c386c,0x3220636f6c2e0a3b\n"
".quad 0x6d0a312036333820,0x36732e6f6c2e6461,0x3031316c72252034,0x3930316c7225202c\n"
".quad 0x3936316c7225202c,0x0a3b376c7225202c,0x203436622e6c6873,0x202c3131316c7225\n"
".quad 0x202c3031316c7225,0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3231\n"
".quad 0x0a3b3233202c3131,0x38203220636f6c2e,0x6c68730a31203633,0x6c7225203436622e\n"
".quad 0x6c7225202c333131,0x0a3b32202c323131,0x203436732e646461,0x202c3431316c7225\n"
".quad 0x25202c30386c7225,0x2e0a3b3331316c72,0x3538203220636f6c,0x672e74730a312032\n"
".quad 0x33662e6c61626f6c,0x31316c72255b2032,0x34386625202c5d34,0x36732e6464610a3b\n"
".quad 0x3531316c72252034,0x202c386c7225202c,0x6c2e0a3b32373033,0x373338203220636f\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3631316c,0x7225202c3531316c\n"
".quad 0x7225202c3936316c,0x2e6c68730a3b376c,0x316c722520343662,0x316c7225202c3731\n"
".quad 0x0a3b3233202c3631,0x203436732e726873,0x202c3831316c7225,0x202c3731316c7225\n"
".quad 0x636f6c2e0a3b3233,0x3120373338203220,0x3436622e6c68730a,0x2c3931316c722520\n"
".quad 0x2c3831316c722520,0x2e6464610a3b3220,0x316c722520343673,0x386c7225202c3032\n"
".quad 0x31316c7225202c30,0x20636f6c2e0a3b39,0x0a31203335382032,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3032316c72,0x6c2e0a3b30396625,0x383338203220636f\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3232316c,0x6c7225202c37366c\n"
".quad 0x6c7225202c393631,0x622e6c68730a3b37,0x32316c7225203436,0x32316c7225202c33\n"
".quad 0x730a3b3233202c32,0x25203436732e7268,0x25202c3432316c72,0x33202c3332316c72\n"
".quad 0x20636f6c2e0a3b32,0x0a31203833382032,0x203436622e6c6873,0x202c3532316c7225\n"
".quad 0x202c3432316c7225,0x732e6464610a3b32,0x32316c7225203436,0x30386c7225202c36\n"
".quad 0x3532316c7225202c,0x3220636f6c2e0a3b,0x730a312034353820,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3632316c,0x6f6c2e0a3b363966,0x2035353820322063\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x202c5d346c72255b,0x2e0a3b3230316625\n"
".quad 0x3538203220636f6c,0x3b7465720a322038,0x325f363142420a0a,0x7261702e646c0a3a\n"
".quad 0x25203436752e6d61,0x5b202c3836316c72,0x645f524c30315a5f,0x665032434442415f\n"
".quad 0x61705f666d665f53,0x0a3b5d335f6d6172,0x38203220636f6c2e,0x64616d0a31203233\n"
".quad 0x203436732e6f6c2e,0x202c3033316c7225,0x25202c36316c7225,0x25202c3836316c72\n"
".quad 0x2e646c0a3b376c72,0x36752e6d61726170,0x3636316c72252034,0x4c30315a5f5b202c\n"
".quad 0x434442415f645f52,0x666d665f53665032,0x315f6d617261705f,0x2e617476630a3b5d\n"
".quad 0x61626f6c672e6f74,0x7225203436752e6c,0x7225202c3133316c,0x68730a3b3636316c\n"
".quad 0x7225203436622e6c,0x7225202c3233316c,0x3233202c3033316c,0x36732e7268730a3b\n"
".quad 0x3333316c72252034,0x3233316c7225202c,0x6c2e0a3b3233202c,0x323338203220636f\n"
".quad 0x622e6c68730a3120,0x33316c7225203436,0x33316c7225202c34,0x64610a3b32202c33\n"
".quad 0x7225203436732e64,0x7225202c3533316c,0x7225202c3133316c,0x74730a3b3433316c\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d353331,0x732e6464610a3b35\n"
".quad 0x33316c7225203436,0x2c386c7225202c36,0x2e0a3b3432303120,0x3338203220636f6c\n"
".quad 0x2e64616d0a312033,0x25203436732e6f6c,0x25202c3733316c72,0x25202c3633316c72\n"
".quad 0x25202c3836316c72,0x6c68730a3b376c72,0x6c7225203436622e,0x6c7225202c383331\n"
".quad 0x3b3233202c373331,0x3436732e7268730a,0x2c3933316c722520,0x2c3833316c722520\n"
".quad 0x6f6c2e0a3b323320,0x2033333820322063,0x36622e6c68730a31,0x3034316c72252034\n"
".quad 0x3933316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c313431\n"
".quad 0x6c7225202c313331,0x2e74730a3b303431,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x366625202c5d3134,0x3220636f6c2e0a3b,0x6d0a312034333820,0x36732e6f6c2e6461\n"
".quad 0x3334316c72252034,0x2c30336c7225202c,0x2c3836316c722520,0x730a3b376c722520\n"
".quad 0x25203436622e6c68,0x25202c3434316c72,0x33202c3334316c72,0x732e7268730a3b32\n"
".quad 0x34316c7225203436,0x34316c7225202c35,0x2e0a3b3233202c34,0x3338203220636f6c\n"
".quad 0x2e6c68730a312034,0x316c722520343662,0x316c7225202c3634,0x610a3b32202c3534\n"
".quad 0x25203436732e6464,0x25202c3734316c72,0x25202c3133316c72,0x730a3b3634316c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3734316c,0x2e6464610a3b3366\n"
".quad 0x316c722520343673,0x386c7225202c3834,0x0a3b38343032202c,0x38203220636f6c2e\n"
".quad 0x64616d0a31203533,0x203436732e6f6c2e,0x202c3934316c7225,0x202c3834316c7225\n"
".quad 0x202c3836316c7225,0x68730a3b376c7225,0x7225203436622e6c,0x7225202c3035316c\n"
".quad 0x3233202c3934316c,0x36732e7268730a3b,0x3135316c72252034,0x3035316c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x353338203220636f,0x622e6c68730a3120,0x35316c7225203436\n"
".quad 0x35316c7225202c32,0x64610a3b32202c31,0x7225203436732e64,0x7225202c3335316c\n"
".quad 0x7225202c3133316c,0x74730a3b3235316c,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d333531,0x732e6464610a3b34,0x35316c7225203436,0x2c386c7225202c34\n"
".quad 0x2e0a3b3036353220,0x3338203220636f6c,0x2e64616d0a312036,0x25203436732e6f6c\n"
".quad 0x25202c3535316c72,0x25202c3435316c72,0x25202c3836316c72,0x6c68730a3b376c72\n"
".quad 0x6c7225203436622e,0x6c7225202c363531,0x3b3233202c353531,0x3436732e7268730a\n"
".quad 0x2c3735316c722520,0x2c3635316c722520,0x6f6c2e0a3b323320,0x2036333820322063\n"
".quad 0x36622e6c68730a31,0x3835316c72252034,0x3735316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c393531,0x6c7225202c313331,0x2e74730a3b383531\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x396625202c5d3935,0x36732e6464610a3b\n"
".quad 0x3036316c72252034,0x202c386c7225202c,0x6c2e0a3b32373033,0x373338203220636f\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3136316c,0x7225202c3036316c\n"
".quad 0x7225202c3836316c,0x2e6c68730a3b376c,0x316c722520343662,0x316c7225202c3236\n"
".quad 0x0a3b3233202c3136,0x203436732e726873,0x202c3336316c7225,0x202c3236316c7225\n"
".quad 0x636f6c2e0a3b3233,0x3120373338203220,0x3436622e6c68730a,0x2c3436316c722520\n"
".quad 0x2c3336316c722520,0x2e6464610a3b3220,0x316c722520343673,0x316c7225202c3536\n"
".quad 0x316c7225202c3133,0x672e74730a3b3436,0x33662e6c61626f6c,0x36316c72255b2032\n"
".quad 0x30316625202c5d35,0x3220636f6c2e0a3b,0x730a312038333820,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x376625202c5d336c,0x3220636f6c2e0a3b,0x730a312039333820\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x386625202c5d346c,0x3220636f6c2e0a3b\n"
".quad 0x720a322038353820,0x2e0a0a7d0a3b7465,0x5a5f207972746e65,0x415f645f524c3631\n"
".quad 0x65746e495f434442,0x6d665f5366507072,0x617261702e0a2866,0x5f203436752e206d\n"
".quad 0x5f645f524c36315a,0x746e495f43444241,0x665f536650707265,0x6d617261705f666d\n"
".quad 0x7261702e0a2c305f,0x203436752e206d61,0x645f524c36315a5f,0x6e495f434442415f\n"
".quad 0x5f53665070726574,0x617261705f666d66,0x61702e0a2c315f6d,0x3233662e206d6172\n"
".quad 0x5f524c36315a5f20,0x495f434442415f64,0x536650707265746e,0x7261705f666d665f\n"
".quad 0x702e0a2c325f6d61,0x36752e206d617261,0x524c36315a5f2034,0x5f434442415f645f\n"
".quad 0x6650707265746e49,0x61705f666d665f53,0x2e0a2c335f6d6172,0x662e206d61726170\n"
".quad 0x4c36315a5f203233,0x434442415f645f52,0x50707265746e495f,0x705f666d665f5366\n"
".quad 0x290a345f6d617261,0x206765722e0a7b0a,0x3c6625203233662e,0x722e0a3b3e353432\n"
".quad 0x203436662e206765,0x3b3e31343c646625,0x702e206765722e0a,0x373c702520646572\n"
".quad 0x206765722e0a3b3e,0x3c7225203233732e,0x65722e0a3b3e3437,0x25203436732e2067\n"
".quad 0x3b3e3731323c6c72,0x61702e646c0a0a0a,0x203436752e6d6172,0x5b202c35316c7225\n"
".quad 0x645f524c36315a5f,0x6e495f434442415f,0x5f53665070726574,0x617261705f666d66\n"
".quad 0x646c0a3b5d305f6d,0x752e6d617261702e,0x2c316c7225203436,0x524c36315a5f5b20\n"
".quad 0x5f434442415f645f,0x6650707265746e49,0x61705f666d665f53,0x0a3b5d315f6d6172\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x36315a5f5b202c32,0x4442415f645f524c\n"
".quad 0x707265746e495f43,0x5f666d665f536650,0x5d335f6d61726170,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x35316c7225202c33,0x3220636f6c2e0a3b\n"
".quad 0x6d0a312033363820,0x25203233752e766f,0x69746e25202c3372,0x766f6d0a3b782e64\n"
".quad 0x347225203233752e,0x646961746325202c,0x2e766f6d0a3b782e,0x2c35722520323375\n"
".quad 0x3b782e6469742520,0x2e6f6c2e64616d0a,0x2c31722520323373,0x7225202c33722520\n"
".quad 0x0a3b357225202c34,0x38203220636f6c2e,0x766f6d0a31203436,0x367225203233752e\n"
".quad 0x2e6469746e25202c,0x752e766f6d0a3b79,0x202c377225203233,0x792e646961746325\n"
".quad 0x33752e766f6d0a3b,0x25202c3872252032,0x6d0a3b792e646974,0x33732e6f6c2e6461\n"
".quad 0x25202c3272252032,0x2c377225202c3672,0x6c2e0a3b38722520,0x353638203220636f\n"
".quad 0x722e7476630a3120,0x33732e3233662e6e,0x202c343166252032,0x616d660a3b317225\n"
".quad 0x203233662e6e722e,0x316625202c336625,0x3845336630202c34,0x30202c3030303030\n"
".quad 0x3030444643333466,0x20636f6c2e0a3b30,0x0a31203636382032,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x327225202c353166,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x202c35316625202c,0x3030303845336630,0x33346630202c3030,0x0a3b303030444639\n"
".quad 0x203233662e646461,0x6625202c36316625,0x4633436630202c33,0x610a3b3030304346\n"
".quad 0x25203233662e6464,0x346625202c373166,0x464233436630202c,0x6c2e0a3b30303043\n"
".quad 0x203437203220636f,0x33662e6c756d0a31,0x202c383166252032,0x6625202c37316625\n"
".quad 0x2e616d660a3b3731,0x25203233662e6e72,0x316625202c393166,0x2c36316625202c36\n"
".quad 0x730a3b3831662520,0x662e746c2e707465,0x202c317025203233,0x6630202c39316625\n"
".quad 0x3030303030383234,0x36752e7476630a3b,0x7225203233752e34,0x3b317225202c346c\n"
".quad 0x203220636f6c2e0a,0x76630a3120383638,0x33732e3436732e74,0x202c356c72252032\n"
".quad 0x64616d0a3b327225,0x203436732e6f6c2e,0x7225202c366c7225,0x326c7225202c356c\n"
".quad 0x0a3b346c7225202c,0x203233732e646461,0x317225202c397225,0x65730a3b342d202c\n"
".quad 0x33752e74672e7074,0x25202c3270252032,0x3b393537202c3972,0x203220636f6c2e0a\n"
".quad 0x65730a3120313738,0x33732e746c2e7074,0x25202c3370252032,0x6f0a3b34202c3272\n"
".quad 0x2520646572702e72,0x2c327025202c3470,0x6c2e0a3b33702520,0x313738203220636f\n"
".quad 0x2e707465730a3120,0x25203233732e7467,0x2c327225202c3570,0x726f0a3b37303520\n"
".quad 0x702520646572702e,0x202c347025202c36,0x6464610a3b357025,0x6c7225203436732e\n"
".quad 0x356c7225202c3631,0x2e0a3b323135202c,0x3938203220636f6c,0x2e64616d0a312032\n"
".quad 0x25203436732e6f6c,0x7225202c37316c72,0x6c7225202c36316c,0x3b346c7225202c32\n"
".quad 0x6f742e617476630a,0x2e6c61626f6c672e,0x316c722520343675,0x3b316c7225202c38\n"
".quad 0x3436622e6c68730a,0x202c39316c722520,0x33202c37316c7225,0x732e7268730a3b32\n"
".quad 0x30326c7225203436,0x2c39316c7225202c,0x6f6c2e0a3b323320,0x2032393820322063\n"
".quad 0x36622e6c68730a31,0x2c31326c72252034,0x202c30326c722520,0x732e6464610a3b32\n"
".quad 0x2c376c7225203436,0x202c38316c722520,0x610a3b31326c7225,0x25203436732e6464\n"
".quad 0x7225202c32326c72,0x34323031202c356c,0x3220636f6c2e0a3b,0x6d0a312033393820\n"
".quad 0x36732e6f6c2e6461,0x2c33326c72252034,0x202c32326c722520,0x7225202c326c7225\n"
".quad 0x2e6c68730a3b346c,0x326c722520343662,0x33326c7225202c34,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c35326c,0x0a3b3233202c3432,0x38203220636f6c2e\n"
".quad 0x6c68730a31203339,0x6c7225203436622e,0x326c7225202c3632,0x64610a3b32202c35\n"
".quad 0x7225203436732e64,0x316c7225202c386c,0x36326c7225202c38,0x36732e6464610a3b\n"
".quad 0x2c37326c72252034,0x31202c356c722520,0x6f6c2e0a3b363335,0x2034393820322063\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x326c7225202c3832,0x2c326c7225202c37\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x7225202c39326c72,0x3b3233202c38326c\n"
".quad 0x3436732e7268730a,0x202c30336c722520,0x33202c39326c7225,0x20636f6c2e0a3b32\n"
".quad 0x0a31203439382032,0x203436622e6c6873,0x25202c31336c7225,0x3b32202c30336c72\n"
".quad 0x3436732e6464610a,0x25202c396c722520,0x7225202c38316c72,0x6464610a3b31336c\n"
".quad 0x6c7225203436732e,0x356c7225202c3233,0x0a3b38343032202c,0x38203220636f6c2e\n"
".quad 0x64616d0a31203539,0x203436732e6f6c2e,0x25202c33336c7225,0x7225202c32336c72\n"
".quad 0x346c7225202c326c,0x36622e6c68730a3b,0x2c34336c72252034,0x202c33336c722520\n"
".quad 0x2e7268730a3b3233,0x336c722520343673,0x34336c7225202c35,0x6c2e0a3b3233202c\n"
".quad 0x353938203220636f,0x622e6c68730a3120,0x36336c7225203436,0x2c35336c7225202c\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x38316c7225202c30,0x3b36336c7225202c\n"
".quad 0x3436732e6464610a,0x202c37336c722520,0x3532202c356c7225,0x636f6c2e0a3b3036\n"
".quad 0x3120363938203220,0x2e6f6c2e64616d0a,0x336c722520343673,0x37336c7225202c38\n"
".quad 0x202c326c7225202c,0x68730a3b346c7225,0x7225203436622e6c,0x6c7225202c39336c\n"
".quad 0x0a3b3233202c3833,0x203436732e726873,0x25202c30346c7225,0x3233202c39336c72\n"
".quad 0x3220636f6c2e0a3b,0x730a312036393820,0x25203436622e6c68,0x7225202c31346c72\n"
".quad 0x0a3b32202c30346c,0x203436732e646461,0x25202c31316c7225,0x7225202c38316c72\n"
".quad 0x6464610a3b31346c,0x6c7225203436732e,0x356c7225202c3234,0x0a3b32373033202c\n"
".quad 0x38203220636f6c2e,0x64616d0a31203739,0x203436732e6f6c2e,0x25202c33346c7225\n"
".quad 0x7225202c32346c72,0x346c7225202c326c,0x36622e6c68730a3b,0x2c34346c72252034\n"
".quad 0x202c33346c722520,0x2e7268730a3b3233,0x346c722520343673,0x34346c7225202c35\n"
".quad 0x6c2e0a3b3233202c,0x373938203220636f,0x622e6c68730a3120,0x36346c7225203436\n"
".quad 0x2c35346c7225202c,0x2e6464610a3b3220,0x316c722520343673,0x38316c7225202c32\n"
".quad 0x3b36346c7225202c,0x3436732e6464610a,0x202c37346c722520,0x3533202c356c7225\n"
".quad 0x636f6c2e0a3b3438,0x3120383938203220,0x2e6f6c2e64616d0a,0x346c722520343673\n"
".quad 0x37346c7225202c38,0x202c326c7225202c,0x68730a3b346c7225,0x7225203436622e6c\n"
".quad 0x6c7225202c39346c,0x0a3b3233202c3834,0x203436732e726873,0x25202c30356c7225\n"
".quad 0x3233202c39346c72,0x3220636f6c2e0a3b,0x730a312038393820,0x25203436622e6c68\n"
".quad 0x7225202c31356c72,0x0a3b32202c30356c,0x203436732e646461,0x25202c33316c7225\n"
".quad 0x7225202c38316c72,0x6464610a3b31356c,0x6c7225203436732e,0x356c7225202c3235\n"
".quad 0x0a3b36393034202c,0x38203220636f6c2e,0x64616d0a31203939,0x203436732e6f6c2e\n"
".quad 0x25202c33356c7225,0x7225202c32356c72,0x346c7225202c326c,0x36622e6c68730a3b\n"
".quad 0x2c34356c72252034,0x202c33356c722520,0x2e7268730a3b3233,0x356c722520343673\n"
".quad 0x34356c7225202c35,0x6c2e0a3b3233202c,0x393938203220636f,0x622e6c68730a3120\n"
".quad 0x36356c7225203436,0x2c35356c7225202c,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x38316c7225202c34,0x3b36356c7225202c,0x203220636f6c2e0a,0x25400a3120313738\n"
".quad 0x4220617262203670,0x0a0a3b345f373142,0x203436622e6c6873,0x25202c37356c7225\n"
".quad 0x3b3233202c366c72,0x3436732e7268730a,0x202c38356c722520,0x33202c37356c7225\n"
".quad 0x20636f6c2e0a3b32,0x0a31203330392032,0x203436622e6c6873,0x25202c39356c7225\n"
".quad 0x3b32202c38356c72,0x3436732e6464610a,0x202c30366c722520,0x7225202c336c7225\n"
".quad 0x2e646c0a3b39356c,0x662e6c61626f6c67,0x202c356625203233,0x3b5d30366c72255b\n"
".quad 0x3233732e6464610a,0x25202c3131722520,0x0a3b312d202c3172,0x2e3436752e747663\n"
".quad 0x366c722520323375,0x3b31317225202c31,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5f5b202c3631326c,0x5f645f524c36315a,0x746e495f43444241,0x665f536650707265\n"
".quad 0x6d617261705f666d,0x6f6c2e0a3b5d335f,0x2034303920322063,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x316c7225202c3336,0x31326c7225202c36,0x31366c7225202c36\n"
".quad 0x36622e6c68730a3b,0x2c34366c72252034,0x202c33366c722520,0x2e7268730a3b3233\n"
".quad 0x366c722520343673,0x34366c7225202c35,0x6c2e0a3b3233202c,0x343039203220636f\n"
".quad 0x622e6c68730a3120,0x36366c7225203436,0x2c35366c7225202c,0x2e6464610a3b3220\n"
".quad 0x366c722520343673,0x2c336c7225202c37,0x0a3b36366c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x366c72255b202c36,0x2e6464610a3b5d37,0x3331722520323373\n"
".quad 0x2d202c327225202c,0x20636f6c2e0a3b31,0x0a31203530392032,0x2e3436732e747663\n"
".quad 0x366c722520323373,0x3b33317225202c38,0x3436732e6464610a,0x202c39366c722520\n"
".quad 0x31202c38366c7225,0x6f6c2e0a3b343230,0x2035303920322063,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x366c7225202c3037,0x31326c7225202c39,0x3b346c7225202c36\n"
".quad 0x3436622e6c68730a,0x202c31376c722520,0x33202c30376c7225,0x732e7268730a3b32\n"
".quad 0x32376c7225203436,0x2c31376c7225202c,0x6f6c2e0a3b323320,0x2035303920322063\n"
".quad 0x36622e6c68730a31,0x2c33376c72252034,0x202c32376c722520,0x732e6464610a3b32\n"
".quad 0x34376c7225203436,0x202c336c7225202c,0x6c0a3b33376c7225,0x6c61626f6c672e64\n"
".quad 0x376625203233662e,0x34376c72255b202c,0x20636f6c2e0a3b5d,0x0a31203630392032\n"
".quad 0x203233732e646461,0x7225202c35317225,0x76630a3b31202c31,0x33752e3436752e74\n"
".quad 0x2c35376c72252032,0x2e0a3b3531722520,0x3039203220636f6c,0x2e64616d0a312036\n"
".quad 0x25203436732e6f6c,0x7225202c37376c72,0x6c7225202c37326c,0x6c7225202c363132\n"
".quad 0x2e6c68730a3b3537,0x376c722520343662,0x37376c7225202c38,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c39376c,0x0a3b3233202c3837,0x39203220636f6c2e\n"
".quad 0x6c68730a31203630,0x6c7225203436622e,0x376c7225202c3038,0x64610a3b32202c39\n"
".quad 0x7225203436732e64,0x6c7225202c31386c,0x30386c7225202c33,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c386625,0x6c2e0a3b5d31386c,0x373039203220636f\n"
".quad 0x732e6464610a3120,0x2c37317225203233,0x3b31202c32722520,0x3436732e7476630a\n"
".quad 0x6c7225203233732e,0x37317225202c3238,0x36732e6464610a3b,0x2c33386c72252034\n"
".quad 0x202c32386c722520,0x6c2e0a3b38343032,0x373039203220636f,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c34386c,0x326c7225202c3338,0x346c7225202c3631\n"
".quad 0x36622e6c68730a3b,0x2c35386c72252034,0x202c34386c722520,0x2e7268730a3b3233\n"
".quad 0x386c722520343673,0x35386c7225202c36,0x6c2e0a3b3233202c,0x373039203220636f\n"
".quad 0x622e6c68730a3120,0x37386c7225203436,0x2c36386c7225202c,0x2e6464610a3b3220\n"
".quad 0x386c722520343673,0x2c336c7225202c38,0x0a3b37386c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x386c72255b202c39,0x2e6464610a3b5d38,0x386c722520343673\n"
".quad 0x38366c7225202c39,0x0a3b30363532202c,0x39203220636f6c2e,0x64616d0a31203830\n"
".quad 0x203436732e6f6c2e,0x25202c30396c7225,0x7225202c39386c72,0x7225202c3631326c\n"
".quad 0x6c68730a3b31366c,0x6c7225203436622e,0x396c7225202c3139,0x730a3b3233202c30\n"
".quad 0x25203436732e7268,0x7225202c32396c72,0x3b3233202c31396c,0x203220636f6c2e0a\n"
".quad 0x68730a3120383039,0x7225203436622e6c,0x6c7225202c33396c,0x610a3b32202c3239\n"
".quad 0x25203436732e6464,0x7225202c34396c72,0x396c7225202c336c,0x6c672e646c0a3b33\n"
".quad 0x3233662e6c61626f,0x5b202c3031662520,0x0a3b5d34396c7225,0x203436732e646461\n"
".quad 0x25202c35396c7225,0x3033202c38366c72,0x636f6c2e0a3b3237,0x3120393039203220\n"
".quad 0x2e6f6c2e64616d0a,0x396c722520343673,0x35396c7225202c36,0x3631326c7225202c\n"
".quad 0x3b35376c7225202c,0x3436622e6c68730a,0x202c37396c722520,0x33202c36396c7225\n"
".quad 0x732e7268730a3b32,0x38396c7225203436,0x2c37396c7225202c,0x6f6c2e0a3b323320\n"
".quad 0x2039303920322063,0x36622e6c68730a31,0x2c39396c72252034,0x202c38396c722520\n"
".quad 0x732e6464610a3b32,0x30316c7225203436,0x2c336c7225202c30,0x0a3b39396c722520\n"
".quad 0x61626f6c672e646c,0x6625203233662e6c,0x6c72255b202c3131,0x64610a3b5d303031\n"
".quad 0x7225203436732e64,0x7225202c3130316c,0x383533202c32386c,0x20636f6c2e0a3b34\n"
".quad 0x0a31203031392032,0x732e6f6c2e64616d,0x30316c7225203436,0x30316c7225202c32\n"
".quad 0x31326c7225202c31,0x35376c7225202c36,0x36622e6c68730a3b,0x3330316c72252034\n"
".quad 0x3230316c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3430316c\n"
".quad 0x3233202c3330316c,0x3220636f6c2e0a3b,0x730a312030313920,0x25203436622e6c68\n"
".quad 0x25202c3530316c72,0x32202c3430316c72,0x36732e6464610a3b,0x3630316c72252034\n"
".quad 0x202c336c7225202c,0x0a3b3530316c7225,0x61626f6c672e646c,0x6625203233662e6c\n"
".quad 0x6c72255b202c3231,0x64610a3b5d363031,0x7225203436732e64,0x7225202c3730316c\n"
".quad 0x393034202c32386c,0x20636f6c2e0a3b36,0x0a31203131392032,0x732e6f6c2e64616d\n"
".quad 0x30316c7225203436,0x30316c7225202c38,0x31326c7225202c37,0x31366c7225202c36\n"
".quad 0x36622e6c68730a3b,0x3930316c72252034,0x3830316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3031316c,0x3233202c3930316c,0x3220636f6c2e0a3b\n"
".quad 0x730a312031313920,0x25203436622e6c68,0x25202c3131316c72,0x32202c3031316c72\n"
".quad 0x36732e6464610a3b,0x3231316c72252034,0x202c336c7225202c,0x0a3b3131316c7225\n"
".quad 0x61626f6c672e646c,0x6625203233662e6c,0x6c72255b202c3331,0x6c2e0a3b5d323131\n"
".quad 0x333139203220636f,0x20317025400a3120,0x3731424220617262,0x6f6c2e0a0a3b335f\n"
".quad 0x2037323920322063,0x33662e6464610a31,0x202c303266252032,0x366625202c356625\n"
".quad 0x33662e6464610a3b,0x202c313266252032,0x6625202c30326625,0x662e6464610a3b37\n"
".quad 0x2c32326625203233,0x25202c3132662520,0x2e6464610a3b3866,0x3332662520323366\n"
".quad 0x202c32326625202c,0x6464610a3b396625,0x326625203233662e,0x2c33326625202c34\n"
".quad 0x610a3b3031662520,0x25203233662e6464,0x326625202c353266,0x3b31316625202c34\n"
".quad 0x3233662e6464610a,0x25202c3632662520,0x316625202c353266,0x662e6464610a3b32\n"
".quad 0x2c37326625203233,0x25202c3632662520,0x6275730a3b333166,0x326625203233662e\n"
".quad 0x202c366625202c38,0x6464610a3b386625,0x326625203233662e,0x2c38326625202c39\n"
".quad 0x730a3b3031662520,0x25203233662e6275,0x326625202c303366,0x3b31316625202c39\n"
".quad 0x3233662e6275730a,0x25202c3133662520,0x316625202c303366,0x662e6464610a3b32\n"
".quad 0x2c32336625203233,0x25202c3133662520,0x6275730a3b333166,0x336625203233662e\n"
".quad 0x202c376625202c33,0x6464610a3b396625,0x336625203233662e,0x2c33336625202c34\n"
".quad 0x610a3b3031662520,0x25203233662e6464,0x336625202c353366,0x3b31316625202c34\n"
".quad 0x3233662e6275730a,0x25202c3633662520,0x316625202c353366,0x662e6275730a3b32\n"
".quad 0x2c37336625203233,0x25202c3633662520,0x6c756d0a3b333166,0x336625203233662e\n"
".quad 0x2c37336625202c38,0x660a3b3733662520,0x33662e6e722e616d,0x202c393366252032\n"
".quad 0x6625202c32336625,0x38336625202c3233,0x33662e766f6d0a3b,0x202c303466252032\n"
".quad 0x3030304346336630,0x636f6c2e0a3b3030,0x3120373239203220,0x3233662e67656e0a\n"
".quad 0x25202c3134662520,0x616d660a3b393366,0x203233662e6e722e,0x6625202c32346625\n"
".quad 0x30346625202c3134,0x0a3b37326625202c,0x662e6e722e616d66,0x2c33346625203233\n"
".quad 0x30202c3234662520,0x3345383345454266,0x0a3b356625202c39,0x203233662e67656e\n"
".quad 0x6625202c34346625,0x702e646c0a3b3334,0x3233662e6d617261,0x202c333432662520\n"
".quad 0x5f524c36315a5f5b,0x495f434442415f64,0x536650707265746e,0x7261705f666d665f\n"
".quad 0x2e0a3b5d325f6d61,0x3239203220636f6c,0x2e616d660a312037,0x25203233662e6e72\n"
".quad 0x346625202c353466,0x3334326625202c34,0x6d0a3b356625202c,0x25203233662e766f\n"
".quad 0x346630202c363466,0x3b30303030303430,0x203220636f6c2e0a,0x6d660a3120373239\n"
".quad 0x3233662e6e722e61,0x25202c3734662520,0x346630202c323366,0x2c30303030303430\n"
".quad 0x6d0a3b3732662520,0x25203233662e6c75,0x336625202c383466,0x3930346630202c32\n"
".quad 0x660a3b3030303030,0x33662e6e722e616d,0x202c393466252032,0x6625202c38346625\n"
".quad 0x37346625202c3233,0x6e722e616d660a3b,0x356625203233662e,0x2c31346625202c30\n"
".quad 0x25202c3034662520,0x766f6d0a3b393466,0x356625203233662e,0x4544336630202c31\n"
".quad 0x2e0a3b3933453833,0x3239203220636f6c,0x2e67656e0a312037,0x3235662520323366\n"
".quad 0x0a3b30356625202c,0x662e6e722e616d66,0x2c33356625203233,0x25202c3235662520\n"
".quad 0x366625202c313566,0x33662e67656e0a3b,0x202c343566252032,0x6d660a3b33356625\n"
".quad 0x3233662e6e722e61,0x25202c3535662520,0x326625202c343566,0x3b366625202c3334\n"
".quad 0x2e6e722e616d660a,0x3635662520323366,0x202c37336625202c,0x3030303430346630\n"
".quad 0x37326625202c3030,0x33662e6c756d0a3b,0x202c373566252032,0x6630202c37336625\n"
".quad 0x3030303030393034,0x6e722e616d660a3b,0x356625203233662e,0x2c37356625202c38\n"
".quad 0x25202c3733662520,0x616d660a3b363566,0x203233662e6e722e,0x6625202c39356625\n"
".quad 0x30346625202c3134,0x0a3b38356625202c,0x203233662e67656e,0x6625202c30366625\n"
".quad 0x2e616d660a3b3935,0x25203233662e6e72,0x366625202c313666,0x2c31356625202c30\n"
".quad 0x656e0a3b37662520,0x6625203233662e67,0x31366625202c3236,0x6e722e616d660a3b\n"
".quad 0x366625203233662e,0x2c32366625202c33,0x202c333432662520,0x67656e0a3b376625\n"
".quad 0x366625203233662e,0x3b32336625202c34,0x2e6e722e616d660a,0x3536662520323366\n"
".quad 0x202c34366625202c,0x6625202c36346625,0x2e616d660a3b3732,0x25203233662e6e72\n"
".quad 0x346625202c363666,0x2c32336625202c38,0x660a3b3536662520,0x33662e6e722e616d\n"
".quad 0x202c373666252032,0x6625202c31346625,0x36366625202c3034,0x33662e67656e0a3b\n"
".quad 0x202c383666252032,0x6d660a3b37366625,0x3233662e6e722e61,0x25202c3936662520\n"
".quad 0x356625202c383666,0x0a3b386625202c31,0x203233662e67656e,0x6625202c30376625\n"
".quad 0x2e616d660a3b3936,0x25203233662e6e72,0x376625202c313766,0x3334326625202c30\n"
".quad 0x6e0a3b386625202c,0x25203233662e6765,0x336625202c323766,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x32376625202c3337,0x202c36346625202c,0x6d660a3b37326625\n"
".quad 0x3233662e6e722e61,0x25202c3437662520,0x336625202c373566,0x3b33376625202c37\n"
".quad 0x2e6e722e616d660a,0x3537662520323366,0x202c31346625202c,0x6625202c30346625\n"
".quad 0x2e67656e0a3b3437,0x3637662520323366,0x0a3b35376625202c,0x662e6e722e616d66\n"
".quad 0x2c37376625203233,0x25202c3637662520,0x396625202c313566,0x33662e67656e0a3b\n"
".quad 0x202c383766252032,0x6d660a3b37376625,0x3233662e6e722e61,0x25202c3937662520\n"
".quad 0x326625202c383766,0x3b396625202c3334,0x3233662e6464610a,0x25202c3038662520\n"
".quad 0x336625202c323366,0x722e616d660a3b37,0x6625203233662e6e,0x30386625202c3138\n"
".quad 0x303430346630202c,0x6625202c30303030,0x2e6c756d0a3b3732,0x3238662520323366\n"
".quad 0x202c30386625202c,0x3030303930346630,0x2e616d660a3b3030,0x25203233662e6e72\n"
".quad 0x386625202c333866,0x2c30386625202c32,0x660a3b3138662520,0x33662e6e722e616d\n"
".quad 0x202c343866252032,0x6625202c31346625,0x33386625202c3034,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x34386625202c3164,0x36662e766f6d0a3b,0x202c326466252034\n"
".quad 0x3137433946336430,0x4438423743313743,0x636f6c2e0a3b4331,0x3120373239203220\n"
".quad 0x3436662e7476630a,0x646625203233662e,0x3b30316625202c33,0x3436662e67656e0a\n"
".quad 0x25202c3464662520,0x616d660a3b316466,0x203436662e6e722e,0x6625202c35646625\n"
".quad 0x32646625202c3464,0x0a3b33646625202c,0x2e3436662e747663,0x3664662520323366\n"
".quad 0x3b3334326625202c,0x3436662e67656e0a,0x25202c3764662520,0x616d660a3b366466\n"
".quad 0x203436662e6e722e,0x6625202c38646625,0x35646625202c3764,0x0a3b33646625202c\n"
".quad 0x662e6e722e747663,0x25203436662e3233,0x646625202c353866,0x662e6275730a3b38\n"
".quad 0x2c36386625203233,0x25202c3733662520,0x6f6c2e0a3b323366,0x2037323920322063\n"
".quad 0x6e722e616d660a31,0x386625203233662e,0x2c36386625202c37,0x3030343034663020\n"
".quad 0x326625202c303030,0x662e6c756d0a3b37,0x2c38386625203233,0x30202c3638662520\n"
".quad 0x3030303039303466,0x722e616d660a3b30,0x6625203233662e6e,0x38386625202c3938\n"
".quad 0x202c36386625202c,0x6d660a3b37386625,0x3233662e6e722e61,0x25202c3039662520\n"
".quad 0x346625202c313466,0x3b39386625202c30,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x3b30396625202c39,0x3436662e7476630a,0x646625203233662e,0x31316625202c3031\n"
".quad 0x36662e67656e0a3b,0x2c31316466252034,0x660a3b3964662520,0x36662e6e722e616d\n"
".quad 0x2c32316466252034,0x202c313164662520,0x6625202c32646625,0x616d660a3b303164\n"
".quad 0x203436662e6e722e,0x25202c3331646625,0x646625202c376466,0x31646625202c3231\n"
".quad 0x722e7476630a3b30,0x36662e3233662e6e,0x202c313966252034,0x730a3b3331646625\n"
".quad 0x25203233662e6275,0x366625202c323966,0x3b37336625202c34,0x2e6e722e616d660a\n"
".quad 0x3339662520323366,0x202c32396625202c,0x3030303430346630,0x37326625202c3030\n"
".quad 0x33662e6c756d0a3b,0x202c343966252032,0x6630202c32396625,0x3030303030393034\n"
".quad 0x6e722e616d660a3b,0x396625203233662e,0x2c34396625202c35,0x25202c3239662520\n"
".quad 0x616d660a3b333966,0x203233662e6e722e,0x6625202c36396625,0x30346625202c3134\n"
".quad 0x0a3b35396625202c,0x2e3436662e747663,0x3164662520323366,0x3b36396625202c34\n"
".quad 0x3436662e7476630a,0x646625203233662e,0x32316625202c3531,0x36662e67656e0a3b\n"
".quad 0x2c36316466252034,0x0a3b343164662520,0x662e6e722e616d66,0x3731646625203436\n"
".quad 0x2c3631646625202c,0x25202c3264662520,0x6d660a3b35316466,0x3436662e6e722e61\n"
".quad 0x202c383164662520,0x6625202c37646625,0x646625202c373164,0x2e7476630a3b3531\n"
".quad 0x662e3233662e6e72,0x2c37396625203436,0x0a3b383164662520,0x203233662e627573\n"
".quad 0x6625202c38396625,0x37336625202c3233,0x6e722e616d660a3b,0x396625203233662e\n"
".quad 0x2c38396625202c39,0x3030343034663020,0x326625202c303030,0x662e6c756d0a3b37\n"
".quad 0x3030316625203233,0x202c38396625202c,0x3030303930346630,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x6625202c31303166,0x396625202c303031,0x3b39396625202c38\n"
".quad 0x2e6e722e616d660a,0x3031662520323366,0x2c31346625202c32,0x25202c3034662520\n"
".quad 0x76630a3b31303166,0x33662e3436662e74,0x2c39316466252032,0x0a3b323031662520\n"
".quad 0x2e3436662e747663,0x3264662520323366,0x3b33316625202c30,0x3436662e67656e0a\n"
".quad 0x202c313264662520,0x660a3b3931646625,0x36662e6e722e616d,0x2c32326466252034\n"
".quad 0x202c313264662520,0x6625202c32646625,0x616d660a3b303264,0x203436662e6e722e\n"
".quad 0x25202c3332646625,0x646625202c376466,0x32646625202c3232,0x722e7476630a3b30\n"
".quad 0x36662e3233662e6e,0x2c33303166252034,0x0a3b333264662520,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c353132,0x415f645f524c3631,0x65746e495f434442\n"
".quad 0x6d665f5366507072,0x5f6d617261705f66,0x636f6c2e0a3b5d33,0x3120383638203220\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x356c7225202c3531,0x3531326c7225202c\n"
".quad 0x0a3b346c7225202c,0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c323132\n"
".quad 0x415f645f524c3631,0x65746e495f434442,0x6d665f5366507072,0x5f6d617261705f66\n"
".quad 0x617476630a3b5d31,0x626f6c672e6f742e,0x25203436752e6c61,0x25202c3631316c72\n"
".quad 0x730a3b3231326c72,0x25203436622e6c68,0x25202c3731316c72,0x33202c3531316c72\n"
".quad 0x732e7268730a3b32,0x31316c7225203436,0x31316c7225202c38,0x2e0a3b3233202c37\n"
".quad 0x3938203220636f6c,0x2e6c68730a312031,0x316c722520343662,0x316c7225202c3931\n"
".quad 0x610a3b32202c3831,0x25203436732e6464,0x25202c3032316c72,0x25202c3631316c72\n"
".quad 0x2e0a3b3931316c72,0x3239203220636f6c,0x672e74730a312039,0x33662e6c61626f6c\n"
".quad 0x32316c72255b2032,0x35346625202c5d30,0x3220636f6c2e0a3b,0x6d0a312032393820\n"
".quad 0x36732e6f6c2e6461,0x3232316c72252034,0x2c36316c7225202c,0x2c3531326c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3332316c72,0x33202c3232316c72\n"
".quad 0x732e7268730a3b32,0x32316c7225203436,0x32316c7225202c34,0x2e0a3b3233202c33\n"
".quad 0x3938203220636f6c,0x2e6c68730a312032,0x316c722520343662,0x316c7225202c3532\n"
".quad 0x610a3b32202c3432,0x25203436732e6464,0x25202c3632316c72,0x25202c3631316c72\n"
".quad 0x2e0a3b3532316c72,0x3339203220636f6c,0x672e74730a312030,0x33662e6c61626f6c\n"
".quad 0x32316c72255b2032,0x35356625202c5d36,0x3220636f6c2e0a3b,0x6d0a312033393820\n"
".quad 0x36732e6f6c2e6461,0x3832316c72252034,0x2c32326c7225202c,0x2c3531326c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3932316c72,0x33202c3832316c72\n"
".quad 0x732e7268730a3b32,0x33316c7225203436,0x32316c7225202c30,0x2e0a3b3233202c39\n"
".quad 0x3938203220636f6c,0x2e6c68730a312033,0x316c722520343662,0x316c7225202c3133\n"
".quad 0x610a3b32202c3033,0x25203436732e6464,0x25202c3233316c72,0x25202c3631316c72\n"
".quad 0x2e0a3b3133316c72,0x3339203220636f6c,0x672e74730a312031,0x33662e6c61626f6c\n"
".quad 0x33316c72255b2032,0x33366625202c5d32,0x3220636f6c2e0a3b,0x6d0a312034393820\n"
".quad 0x36732e6f6c2e6461,0x3433316c72252034,0x2c37326c7225202c,0x2c3531326c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3533316c72,0x33202c3433316c72\n"
".quad 0x732e7268730a3b32,0x33316c7225203436,0x33316c7225202c36,0x2e0a3b3233202c35\n"
".quad 0x3938203220636f6c,0x2e6c68730a312034,0x316c722520343662,0x316c7225202c3733\n"
".quad 0x610a3b32202c3633,0x25203436732e6464,0x25202c3833316c72,0x25202c3631316c72\n"
".quad 0x2e0a3b3733316c72,0x3339203220636f6c,0x672e74730a312032,0x33662e6c61626f6c\n"
".quad 0x33316c72255b2032,0x31376625202c5d38,0x3220636f6c2e0a3b,0x6d0a312035393820\n"
".quad 0x36732e6f6c2e6461,0x3034316c72252034,0x2c32336c7225202c,0x2c3531326c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3134316c72,0x33202c3034316c72\n"
".quad 0x732e7268730a3b32,0x34316c7225203436,0x34316c7225202c32,0x2e0a3b3233202c31\n"
".quad 0x3938203220636f6c,0x2e6c68730a312035,0x316c722520343662,0x316c7225202c3334\n"
".quad 0x610a3b32202c3234,0x25203436732e6464,0x25202c3434316c72,0x25202c3631316c72\n"
".quad 0x2e0a3b3334316c72,0x3339203220636f6c,0x672e74730a312033,0x33662e6c61626f6c\n"
".quad 0x34316c72255b2032,0x39376625202c5d34,0x3220636f6c2e0a3b,0x6d0a312036393820\n"
".quad 0x36732e6f6c2e6461,0x3634316c72252034,0x2c37336c7225202c,0x2c3531326c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3734316c72,0x33202c3634316c72\n"
".quad 0x732e7268730a3b32,0x34316c7225203436,0x34316c7225202c38,0x2e0a3b3233202c37\n"
".quad 0x3938203220636f6c,0x2e6c68730a312036,0x316c722520343662,0x316c7225202c3934\n"
".quad 0x610a3b32202c3834,0x25203436732e6464,0x25202c3035316c72,0x25202c3631316c72\n"
".quad 0x2e0a3b3934316c72,0x3339203220636f6c,0x672e74730a312034,0x33662e6c61626f6c\n"
".quad 0x35316c72255b2032,0x35386625202c5d30,0x3220636f6c2e0a3b,0x6d0a312037393820\n"
".quad 0x36732e6f6c2e6461,0x3235316c72252034,0x2c32346c7225202c,0x2c3531326c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3335316c72,0x33202c3235316c72\n"
".quad 0x732e7268730a3b32,0x35316c7225203436,0x35316c7225202c34,0x2e0a3b3233202c33\n"
".quad 0x3938203220636f6c,0x2e6c68730a312037,0x316c722520343662,0x316c7225202c3535\n"
".quad 0x610a3b32202c3435,0x25203436732e6464,0x25202c3635316c72,0x25202c3631316c72\n"
".quad 0x2e0a3b3535316c72,0x3339203220636f6c,0x672e74730a312035,0x33662e6c61626f6c\n"
".quad 0x35316c72255b2032,0x31396625202c5d36,0x3220636f6c2e0a3b,0x6d0a312038393820\n"
".quad 0x36732e6f6c2e6461,0x3835316c72252034,0x2c37346c7225202c,0x2c3531326c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3935316c72,0x33202c3835316c72\n"
".quad 0x732e7268730a3b32,0x36316c7225203436,0x35316c7225202c30,0x2e0a3b3233202c39\n"
".quad 0x3938203220636f6c,0x2e6c68730a312038,0x316c722520343662,0x316c7225202c3136\n"
".quad 0x610a3b32202c3036,0x25203436732e6464,0x25202c3236316c72,0x25202c3631316c72\n"
".quad 0x2e0a3b3136316c72,0x3339203220636f6c,0x672e74730a312036,0x33662e6c61626f6c\n"
".quad 0x36316c72255b2032,0x37396625202c5d32,0x3220636f6c2e0a3b,0x730a312037333920\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d34316c,0x6f6c2e0a3b333031\n"
".quad 0x2030343920322063,0x0a0a3b7465720a32,0x0a3a335f37314242,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c343132,0x415f645f524c3631,0x65746e495f434442\n"
".quad 0x6d665f5366507072,0x5f6d617261705f66,0x636f6c2e0a3b5d33,0x3120323938203220\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3636,0x31326c7225202c36\n"
".quad 0x3b346c7225202c34,0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3131326c\n"
".quad 0x5f645f524c36315a,0x746e495f43444241,0x665f536650707265,0x6d617261705f666d\n"
".quad 0x7476630a3b5d315f,0x6f6c672e6f742e61,0x203436752e6c6162,0x202c3736316c7225\n"
".quad 0x0a3b3131326c7225,0x203436622e6c6873,0x202c3836316c7225,0x202c3636316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3936,0x0a3b3233202c3836\n"
".quad 0x38203220636f6c2e,0x6c68730a31203239,0x6c7225203436622e,0x6c7225202c303731\n"
".quad 0x0a3b32202c393631,0x203436732e646461,0x202c3137316c7225,0x202c3736316c7225\n"
".quad 0x0a3b3037316c7225,0x39203220636f6c2e,0x2e74730a31203431,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x386625202c5d3137,0x3220636f6c2e0a3b,0x6d0a312033393820\n"
".quad 0x36732e6f6c2e6461,0x3337316c72252034,0x2c32326c7225202c,0x2c3431326c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3437316c72,0x33202c3337316c72\n"
".quad 0x732e7268730a3b32,0x37316c7225203436,0x37316c7225202c35,0x2e0a3b3233202c34\n"
".quad 0x3938203220636f6c,0x2e6c68730a312033,0x316c722520343662,0x316c7225202c3637\n"
".quad 0x610a3b32202c3537,0x25203436732e6464,0x25202c3737316c72,0x25202c3736316c72\n"
".quad 0x2e0a3b3637316c72,0x3139203220636f6c,0x672e74730a312035,0x33662e6c61626f6c\n"
".quad 0x37316c72255b2032,0x3b396625202c5d37,0x203220636f6c2e0a,0x616d0a3120343938\n"
".quad 0x3436732e6f6c2e64,0x2c3937316c722520,0x202c37326c722520,0x202c3431326c7225\n"
".quad 0x68730a3b346c7225,0x7225203436622e6c,0x7225202c3038316c,0x3233202c3937316c\n"
".quad 0x36732e7268730a3b,0x3138316c72252034,0x3038316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x343938203220636f,0x622e6c68730a3120,0x38316c7225203436,0x38316c7225202c32\n"
".quad 0x64610a3b32202c31,0x7225203436732e64,0x7225202c3338316c,0x7225202c3736316c\n"
".quad 0x6c2e0a3b3238316c,0x363139203220636f,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3338316c72255b20,0x0a3b366625202c5d,0x38203220636f6c2e,0x64616d0a31203539\n"
".quad 0x203436732e6f6c2e,0x202c3538316c7225,0x25202c32336c7225,0x25202c3431326c72\n"
".quad 0x6c68730a3b346c72,0x6c7225203436622e,0x6c7225202c363831,0x3b3233202c353831\n"
".quad 0x3436732e7268730a,0x2c3738316c722520,0x2c3638316c722520,0x6f6c2e0a3b323320\n"
".quad 0x2035393820322063,0x36622e6c68730a31,0x3838316c72252034,0x3738316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c393831,0x6c7225202c373631\n"
".quad 0x6f6c2e0a3b383831,0x2037313920322063,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x5d3938316c72255b,0x2e0a3b376625202c,0x3938203220636f6c,0x2e64616d0a312036\n"
".quad 0x25203436732e6f6c,0x25202c3139316c72,0x7225202c37336c72,0x7225202c3431326c\n"
".quad 0x2e6c68730a3b346c,0x316c722520343662,0x316c7225202c3239,0x0a3b3233202c3139\n"
".quad 0x203436732e726873,0x202c3339316c7225,0x202c3239316c7225,0x636f6c2e0a3b3233\n"
".quad 0x3120363938203220,0x3436622e6c68730a,0x2c3439316c722520,0x2c3339316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x316c7225202c3539,0x316c7225202c3736\n"
".quad 0x636f6c2e0a3b3439,0x3120383139203220,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3539316c7225,0x2e0a3b3231662520,0x3938203220636f6c,0x2e64616d0a312037\n"
".quad 0x25203436732e6f6c,0x25202c3739316c72,0x7225202c32346c72,0x7225202c3431326c\n"
".quad 0x2e6c68730a3b346c,0x316c722520343662,0x316c7225202c3839,0x0a3b3233202c3739\n"
".quad 0x203436732e726873,0x202c3939316c7225,0x202c3839316c7225,0x636f6c2e0a3b3233\n"
".quad 0x3120373938203220,0x3436622e6c68730a,0x2c3030326c722520,0x2c3939316c722520\n"
".quad 0x2e6464610a3b3220,0x326c722520343673,0x316c7225202c3130,0x326c7225202c3736\n"
".quad 0x636f6c2e0a3b3030,0x3120393139203220,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3130326c7225,0x2e0a3b3331662520,0x3239203220636f6c,0x672e74730a312030\n"
".quad 0x33662e6c61626f6c,0x33316c72255b2032,0x3b30316625202c5d,0x203220636f6c2e0a\n"
".quad 0x74730a3120313239,0x2e6c61626f6c672e,0x6c72255b20323366,0x316625202c5d3431\n"
".quad 0x20636f6c2e0a3b31,0x0a32203034392032,0x42420a0a3b746572,0x6c2e0a3a345f3731\n"
".quad 0x353738203220636f,0x662e6464610a3120,0x3635316625203233,0x30202c336625202c\n"
".quad 0x3030303030463366,0x662e6464610a3b30,0x3735316625203233,0x30202c346625202c\n"
".quad 0x3030303030463366,0x752e766f6d0a3b30,0x2c36357225203233,0x6574090a0a3b3020\n"
".quad 0x2e34762e64322e78,0x203233662e323366,0x202c34303166257b,0x25202c3530316625\n"
".quad 0x6625202c36303166,0x745b202c7d373031,0x30665f6665527865,0x353166257b202c42\n"
".quad 0x3735316625202c36,0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x30313166257b2032,0x2c3131316625202c,0x202c323131662520,0x202c7d3331316625\n"
".quad 0x5f6665527865745b,0x66257b202c423166,0x316625202c363531,0x090a0a3b5d7d3735\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3166257b20323366,0x31316625202c3631\n"
".quad 0x3831316625202c37,0x7d3931316625202c,0x65527865745b202c,0x7b202c4232665f66\n"
".quad 0x25202c3635316625,0x0a3b5d7d37353166,0x2e786574090a090a,0x33662e34762e6432\n"
".quad 0x257b203233662e32,0x6625202c32323166,0x316625202c333231,0x32316625202c3432\n"
".quad 0x7865745b202c7d35,0x2c4233665f666552,0x2c36353166257b20,0x5d7d373531662520\n"
".quad 0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366,0x202c38323166257b\n"
".quad 0x25202c3932316625,0x6625202c30333166,0x745b202c7d313331,0x34665f6665527865\n"
".quad 0x353166257b202c42,0x3735316625202c36,0x090a090a0a3b5d7d,0x762e64322e786574\n"
".quad 0x33662e3233662e34,0x34333166257b2032,0x2c3533316625202c,0x202c363331662520\n"
".quad 0x202c7d3733316625,0x5f6665527865745b,0x66257b202c423566,0x316625202c363531\n"
".quad 0x090a0a3b5d7d3735,0x64322e786574090a,0x2e3233662e34762e,0x3166257b20323366\n"
".quad 0x34316625202c3034,0x3234316625202c31,0x7d3334316625202c,0x65527865745b202c\n"
".quad 0x7b202c4236665f66,0x25202c3635316625,0x0a3b5d7d37353166,0x2e786574090a090a\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x6625202c36343166,0x316625202c373431\n"
".quad 0x34316625202c3834,0x7865745b202c7d39,0x2c4237665f666552,0x2c36353166257b20\n"
".quad 0x5d7d373531662520,0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366\n"
".quad 0x202c32353166257b,0x25202c3335316625,0x6625202c34353166,0x745b202c7d353531\n"
".quad 0x38665f6665527865,0x353166257b202c42,0x3735316625202c36,0x6c2e090a0a3b5d7d\n"
".quad 0x363838203220636f,0x662e6464610a3120,0x3835316625203233,0x2c3430316625202c\n"
".quad 0x0a3b303131662520,0x203233662e646461,0x25202c3935316625,0x6625202c38353166\n"
".quad 0x6464610a3b363131,0x316625203233662e,0x35316625202c3036,0x3232316625202c39\n"
".quad 0x33662e6464610a3b,0x2c31363166252032,0x202c303631662520,0x610a3b3832316625\n"
".quad 0x25203233662e6464,0x6625202c32363166,0x316625202c313631,0x2e6464610a3b3433\n"
".quad 0x3631662520323366,0x3236316625202c33,0x3b3034316625202c,0x3233662e6464610a\n"
".quad 0x202c343631662520,0x25202c3336316625,0x64610a3b36343166,0x6625203233662e64\n"
".quad 0x316625202c353631,0x35316625202c3436,0x20636f6c2e0a3b32,0x0a31203738382032\n"
".quad 0x203233662e627573,0x25202c3636316625,0x6625202c30313166,0x6464610a3b323231\n"
".quad 0x316625203233662e,0x36316625202c3736,0x3433316625202c36,0x33662e6275730a3b\n"
".quad 0x2c38363166252032,0x202c373631662520,0x730a3b3034316625,0x25203233662e6275\n"
".quad 0x6625202c39363166,0x316625202c383631,0x2e6464610a3b3634,0x3731662520323366\n"
".quad 0x3936316625202c30,0x3b3235316625202c,0x203220636f6c2e0a,0x75730a3120383838\n"
".quad 0x6625203233662e62,0x316625202c313731,0x32316625202c3631,0x662e6464610a3b38\n"
".quad 0x3237316625203233,0x2c3137316625202c,0x0a3b343331662520,0x203233662e646461\n"
".quad 0x25202c3337316625,0x6625202c32373166,0x6275730a3b303431,0x316625203233662e\n"
".quad 0x37316625202c3437,0x3634316625202c33,0x33662e6275730a3b,0x2c35373166252032\n"
".quad 0x202c343731662520,0x2e0a3b3235316625,0x3838203220636f6c,0x2e6c756d0a312039\n"
".quad 0x3731662520323366,0x3537316625202c36,0x3b3537316625202c,0x2e6e722e616d660a\n"
".quad 0x3731662520323366,0x3037316625202c37,0x2c3037316625202c,0x0a3b363731662520\n"
".quad 0x203233662e766f6d,0x30202c3837316625,0x3030303043463366,0x20636f6c2e0a3b30\n"
".quad 0x0a31203239382032,0x203233662e67656e,0x25202c3937316625,0x6c2e0a3b37373166\n"
".quad 0x313938203220636f,0x722e616d660a3120,0x6625203233662e6e,0x316625202c303831\n"
".quad 0x37316625202c3937,0x3536316625202c38,0x33662e6c756d0a3b,0x2c31383166252032\n"
".quad 0x202c303831662520,0x4538334545336630,0x2e766f6d0a3b3933,0x3831662520323366\n"
".quad 0x3846336630202c32,0x6c0a3b3030303030,0x2e6d617261702e64,0x3432662520323366\n"
".quad 0x36315a5f5b202c34,0x4442415f645f524c,0x707265746e495f43,0x5f666d665f536650\n"
".quad 0x5d345f6d61726170,0x3220636f6c2e0a3b,0x730a312031393820,0x25203233662e6275\n"
".quad 0x6625202c33383166,0x326625202c323831,0x2e6c756d0a3b3434,0x3831662520323366\n"
".quad 0x3338316625202c34,0x3b3138316625202c,0x2e6e722e616d660a,0x3831662520323366\n"
".quad 0x3430316625202c35,0x2c3434326625202c,0x0a3b343831662520,0x2e3436752e747663\n"
".quad 0x326c722520323375,0x3b317225202c3230,0x203220636f6c2e0a,0x76630a3120383638\n"
".quad 0x33752e3436752e74,0x3330326c72252032,0x6c0a3b327225202c,0x2e6d617261702e64\n"
".quad 0x326c722520343675,0x315a5f5b202c3331,0x42415f645f524c36,0x7265746e495f4344\n"
".quad 0x666d665f53665070,0x335f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203836382032\n"
".quad 0x732e6f6c2e64616d,0x30326c7225203436,0x30326c7225202c34,0x31326c7225202c33\n"
".quad 0x30326c7225202c33,0x61702e646c0a3b32,0x203436752e6d6172,0x202c3031326c7225\n"
".quad 0x5f524c36315a5f5b,0x495f434442415f64,0x536650707265746e,0x7261705f666d665f\n"
".quad 0x630a3b5d315f6d61,0x672e6f742e617476,0x36752e6c61626f6c,0x3530326c72252034\n"
".quad 0x3031326c7225202c,0x36622e6c68730a3b,0x3630326c72252034,0x3430326c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3730326c,0x3233202c3630326c\n"
".quad 0x3220636f6c2e0a3b,0x730a312031393820,0x25203436622e6c68,0x25202c3830326c72\n"
".quad 0x32202c3730326c72,0x36732e6464610a3b,0x3930326c72252034,0x3530326c7225202c\n"
".quad 0x3830326c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3930326c72255b\n"
".quad 0x3b3538316625202c,0x3233662e766f6d0a,0x202c363831662520,0x3030303430346630\n"
".quad 0x636f6c2e0a3b3030,0x3120323938203220,0x2e6e722e616d660a,0x3831662520323366\n"
".quad 0x3037316625202c37,0x303430346630202c,0x6625202c30303030,0x6c756d0a3b353631\n"
".quad 0x316625203233662e,0x37316625202c3838,0x3930346630202c30,0x660a3b3030303030\n"
".quad 0x33662e6e722e616d,0x2c39383166252032,0x202c383831662520,0x25202c3037316625\n"
".quad 0x6d660a3b37383166,0x3233662e6e722e61,0x202c303931662520,0x25202c3937316625\n"
".quad 0x6625202c38373166,0x6c756d0a3b393831,0x316625203233662e,0x39316625202c3139\n"
".quad 0x4544336630202c30,0x6d0a3b3933453833,0x25203233662e6c75,0x6625202c32393166\n"
".quad 0x316625202c333831,0x2e616d660a3b3139,0x25203233662e6e72,0x6625202c33393166\n"
".quad 0x326625202c303131,0x39316625202c3434,0x6c672e74730a3b32,0x3233662e6c61626f\n"
".quad 0x2c5d376c72255b20,0x0a3b333931662520,0x38203220636f6c2e,0x616d660a31203339\n"
".quad 0x203233662e6e722e,0x25202c3439316625,0x6630202c35373166,0x3030303030343034\n"
".quad 0x3b3536316625202c,0x3233662e6c756d0a,0x202c353931662520,0x30202c3537316625\n"
".quad 0x3030303039303466,0x722e616d660a3b30,0x6625203233662e6e,0x316625202c363931\n"
".quad 0x37316625202c3539,0x3439316625202c35,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x37316625202c3739,0x3837316625202c39,0x3b3639316625202c,0x3233662e6c756d0a\n"
".quad 0x202c383931662520,0x30202c3739316625,0x3345383345443366,0x662e6c756d0a3b39\n"
".quad 0x3939316625203233,0x2c3338316625202c,0x0a3b383931662520,0x662e6e722e616d66\n"
".quad 0x3030326625203233,0x2c3631316625202c,0x202c343432662520,0x730a3b3939316625\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x326625202c5d386c,0x636f6c2e0a3b3030\n"
".quad 0x3120343938203220,0x3233662e67656e0a,0x202c313032662520,0x660a3b3037316625\n"
".quad 0x33662e6e722e616d,0x2c32303266252032,0x202c313032662520,0x25202c3638316625\n"
".quad 0x6d660a3b35363166,0x3233662e6e722e61,0x202c333032662520,0x25202c3838316625\n"
".quad 0x6625202c30373166,0x616d660a3b323032,0x203233662e6e722e,0x25202c3430326625\n"
".quad 0x6625202c39373166,0x326625202c383731,0x2e6c756d0a3b3330,0x3032662520323366\n"
".quad 0x3430326625202c35,0x334544336630202c,0x756d0a3b39334538,0x6625203233662e6c\n"
".quad 0x316625202c363032,0x30326625202c3338,0x722e616d660a3b35,0x6625203233662e6e\n"
".quad 0x316625202c373032,0x34326625202c3232,0x3630326625202c34,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x202c5d396c72255b,0x2e0a3b3730326625,0x3938203220636f6c\n"
".quad 0x2e67656e0a312035,0x3032662520323366,0x3537316625202c38,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x30326625202c3930,0x3638316625202c38,0x3b3536316625202c\n"
".quad 0x2e6e722e616d660a,0x3132662520323366,0x3539316625202c30,0x2c3537316625202c\n"
".quad 0x0a3b393032662520,0x662e6e722e616d66,0x3131326625203233,0x2c3937316625202c\n"
".quad 0x202c383731662520,0x6d0a3b3031326625,0x25203233662e6c75,0x6625202c32313266\n"
".quad 0x336630202c313132,0x3b39334538334544,0x3233662e6c756d0a,0x202c333132662520\n"
".quad 0x25202c3338316625,0x6d660a3b32313266,0x3233662e6e722e61,0x202c343132662520\n"
".quad 0x25202c3832316625,0x6625202c34343266,0x2e74730a3b333132,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x31326625202c5d30,0x20636f6c2e0a3b34,0x0a31203639382032\n"
".quad 0x203233662e6c756d,0x25202c3531326625,0x6625202c34333166,0x7476630a3b343432\n"
".quad 0x3233662e3436662e,0x202c343264662520,0x630a3b3531326625,0x662e3436662e7476\n"
".quad 0x3532646625203233,0x3b3338316625202c,0x3233662e6464610a,0x202c363132662520\n"
".quad 0x25202c3037316625,0x6d660a3b35373166,0x3233662e6e722e61,0x202c373132662520\n"
".quad 0x30202c3631326625,0x3030303034303466,0x3536316625202c30,0x33662e6c756d0a3b\n"
".quad 0x2c38313266252032,0x202c363132662520,0x3030303930346630,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x6625202c39313266,0x326625202c383132,0x31326625202c3631\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x316625202c303232,0x37316625202c3937\n"
".quad 0x3931326625202c38,0x36662e7476630a3b,0x6625203233662e34,0x326625202c363264\n"
".quad 0x2e6c756d0a3b3032,0x3264662520343666,0x3632646625202c37,0x433946336430202c\n"
".quad 0x4237433137433137,0x6d660a3b43314438,0x3436662e6e722e61,0x202c383264662520\n"
".quad 0x25202c3532646625,0x6625202c37326466,0x7476630a3b343264,0x2e3233662e6e722e\n"
".quad 0x3232662520343666,0x3832646625202c31,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x2c5d31316c72255b,0x0a3b313232662520,0x38203220636f6c2e,0x6c756d0a31203739\n"
".quad 0x326625203233662e,0x34316625202c3232,0x3434326625202c30,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x326625202c393264,0x2e6275730a3b3232,0x3232662520323366\n"
".quad 0x3537316625202c33,0x3b3037316625202c,0x203220636f6c2e0a,0x6d660a3120373938\n"
".quad 0x3233662e6e722e61,0x202c343232662520,0x30202c3332326625,0x3030303034303466\n"
".quad 0x3536316625202c30,0x33662e6c756d0a3b,0x2c35323266252032,0x202c333232662520\n"
".quad 0x3030303930346630,0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c36323266\n"
".quad 0x326625202c353232,0x32326625202c3332,0x722e616d660a3b34,0x6625203233662e6e\n"
".quad 0x316625202c373232,0x37316625202c3937,0x3632326625202c38,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x326625202c303364,0x2e6c756d0a3b3732,0x3364662520343666\n"
".quad 0x3033646625202c31,0x433946336430202c,0x4237433137433137,0x6d660a3b43314438\n"
".quad 0x3436662e6e722e61,0x202c323364662520,0x25202c3532646625,0x6625202c31336466\n"
".quad 0x7476630a3b393264,0x2e3233662e6e722e,0x3232662520343666,0x3233646625202c38\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x2c5d32316c72255b,0x0a3b383232662520\n"
".quad 0x38203220636f6c2e,0x6c756d0a31203839,0x326625203233662e,0x34316625202c3932\n"
".quad 0x3434326625202c36,0x36662e7476630a3b,0x6625203233662e34,0x326625202c333364\n"
".quad 0x2e6275730a3b3932,0x3332662520323366,0x3130326625202c30,0x3b3537316625202c\n"
".quad 0x2e6e722e616d660a,0x3332662520323366,0x3033326625202c31,0x303430346630202c\n"
".quad 0x6625202c30303030,0x6c756d0a3b353631,0x326625203233662e,0x33326625202c3233\n"
".quad 0x3930346630202c30,0x660a3b3030303030,0x33662e6e722e616d,0x2c33333266252032\n"
".quad 0x202c323332662520,0x25202c3033326625,0x6d660a3b31333266,0x3233662e6e722e61\n"
".quad 0x202c343332662520,0x25202c3937316625,0x6625202c38373166,0x7476630a3b333332\n"
".quad 0x3233662e3436662e,0x202c343364662520,0x6d0a3b3433326625,0x25203436662e6c75\n"
".quad 0x6625202c35336466,0x336430202c343364,0x3137433137433946,0x3b43314438423743\n"
".quad 0x2e6e722e616d660a,0x3364662520343666,0x3532646625202c36,0x2c3533646625202c\n"
".quad 0x0a3b333364662520,0x662e6e722e747663,0x25203436662e3233,0x6625202c35333266\n"
".quad 0x2e74730a3b363364,0x662e6c61626f6c67,0x316c72255b203233,0x33326625202c5d33\n"
".quad 0x20636f6c2e0a3b35,0x0a31203939382032,0x203233662e6c756d,0x25202c3633326625\n"
".quad 0x6625202c32353166,0x7476630a3b343432,0x3233662e3436662e,0x202c373364662520\n"
".quad 0x730a3b3633326625,0x25203233662e6275,0x6625202c37333266,0x316625202c303731\n"
".quad 0x2e616d660a3b3537,0x25203233662e6e72,0x6625202c38333266,0x346630202c373332\n"
".quad 0x2c30303030303430,0x0a3b353631662520,0x203233662e6c756d,0x25202c3933326625\n"
".quad 0x6630202c37333266,0x3030303030393034,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x33326625202c3034,0x3733326625202c39,0x3b3833326625202c,0x2e6e722e616d660a\n"
".quad 0x3432662520323366,0x3937316625202c31,0x2c3837316625202c,0x0a3b303432662520\n"
".quad 0x2e3436662e747663,0x3364662520323366,0x3134326625202c38,0x36662e6c756d0a3b\n"
".quad 0x2c39336466252034,0x202c383364662520,0x3137433946336430,0x4438423743313743\n"
".quad 0x2e616d660a3b4331,0x25203436662e6e72,0x6625202c30346466,0x646625202c353264\n"
".quad 0x33646625202c3933,0x722e7476630a3b37,0x36662e3233662e6e,0x2c32343266252034\n"
".quad 0x0a3b303464662520,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d34316c72\n"
".quad 0x6c2e0a3b32343266,0x303439203220636f,0x0a3b7465720a3220,0x72746e652e0a0a7d\n"
".quad 0x524c39315a5f2079,0x42416279685f645f,0x7265746e495f4344,0x666d665f53665070\n"
".quad 0x6d617261702e0a28,0x5a5f203436752e20,0x685f645f524c3931,0x495f434442416279\n"
".quad 0x536650707265746e,0x7261705f666d665f,0x702e0a2c305f6d61,0x36752e206d617261\n"
".quad 0x524c39315a5f2034,0x42416279685f645f,0x7265746e495f4344,0x666d665f53665070\n"
".quad 0x315f6d617261705f,0x6d617261702e0a2c,0x5a5f203233662e20,0x685f645f524c3931\n"
".quad 0x495f434442416279,0x536650707265746e,0x7261705f666d665f,0x702e0a2c325f6d61\n"
".quad 0x36752e206d617261,0x524c39315a5f2034,0x42416279685f645f,0x7265746e495f4344\n"
".quad 0x666d665f53665070,0x335f6d617261705f,0x6d617261702e0a2c,0x5a5f203233662e20\n"
".quad 0x685f645f524c3931,0x495f434442416279,0x536650707265746e,0x7261705f666d665f\n"
".quad 0x7b0a290a345f6d61,0x662e206765722e0a,0x38323c6625203233,0x6765722e0a3b3e35\n"
".quad 0x6625203436662e20,0x2e0a3b3e31343c64,0x6572702e20676572,0x3b3e373c70252064\n"
".quad 0x732e206765722e0a,0x39363c7225203233,0x206765722e0a3b3e,0x6c7225203436732e\n"
".quad 0x0a0a3b3e3937313c,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c34316c\n"
".quad 0x685f645f524c3931,0x495f434442416279,0x536650707265746e,0x7261705f666d665f\n"
".quad 0x6c0a3b5d305f6d61,0x2e6d617261702e64,0x316c722520343675,0x4c39315a5f5b202c\n"
".quad 0x416279685f645f52,0x65746e495f434442,0x6d665f5366507072,0x5f6d617261705f66\n"
".quad 0x702e646c0a3b5d31,0x3436752e6d617261,0x5b202c326c722520,0x645f524c39315a5f\n"
".quad 0x434442416279685f,0x50707265746e495f,0x705f666d665f5366,0x3b5d335f6d617261\n"
".quad 0x6f742e617476630a,0x2e6c61626f6c672e,0x336c722520343675,0x3b34316c7225202c\n"
".quad 0x203220636f6c2e0a,0x6f6d0a3120363439,0x7225203233752e76,0x6469746e25202c33\n"
".quad 0x2e766f6d0a3b782e,0x2c34722520323375,0x2e64696174632520,0x752e766f6d0a3b78\n"
".quad 0x202c357225203233,0x0a3b782e64697425,0x732e6f6c2e64616d,0x202c317225203233\n"
".quad 0x347225202c337225,0x2e0a3b357225202c,0x3439203220636f6c,0x2e766f6d0a312037\n"
".quad 0x2c36722520323375,0x792e6469746e2520,0x33752e766f6d0a3b,0x25202c3772252032\n"
".quad 0x3b792e6469617463,0x3233752e766f6d0a,0x7425202c38722520,0x616d0a3b792e6469\n"
".quad 0x3233732e6f6c2e64,0x7225202c32722520,0x202c377225202c36,0x6f6c2e0a3b387225\n"
".quad 0x2038343920322063,0x6e722e7476630a31,0x3233732e3233662e,0x25202c3531662520\n"
".quad 0x2e616d660a3b3172,0x25203233662e6e72,0x35316625202c3366,0x303845336630202c\n"
".quad 0x6630202c30303030,0x3030304446433334,0x3220636f6c2e0a3b,0x630a312039343920\n"
".quad 0x33662e6e722e7476,0x6625203233732e32,0x0a3b327225202c34,0x662e6e722e616d66\n"
".quad 0x202c356625203233,0x336630202c346625,0x2c30303030303845,0x4446393334663020\n"
".quad 0x6464610a3b303030,0x316625203233662e,0x202c336625202c36,0x3043464633436630\n"
".quad 0x2e6464610a3b3030,0x3731662520323366,0x30202c356625202c,0x3030434642334366\n"
".quad 0x20636f6c2e0a3b30,0x6d0a312034372032,0x25203233662e6c75,0x316625202c383166\n"
".quad 0x3b37316625202c37,0x2e6e722e616d660a,0x3931662520323366,0x202c36316625202c\n"
".quad 0x6625202c36316625,0x707465730a3b3831,0x203233662e746c2e,0x316625202c317025\n"
".quad 0x3832346630202c39,0x630a3b3030303030,0x752e3436752e7476,0x2c346c7225203233\n"
".quad 0x6c2e0a3b31722520,0x313539203220636f,0x732e7476630a3120,0x25203233732e3436\n"
".quad 0x7225202c35316c72,0x6c2e64616d0a3b32,0x7225203436732e6f,0x316c7225202c356c\n"
".quad 0x2c326c7225202c35,0x610a3b346c722520,0x25203233732e6464,0x2c317225202c3972\n"
".quad 0x7465730a3b342d20,0x3233752e74672e70,0x7225202c32702520,0x0a3b393537202c39\n"
".quad 0x39203220636f6c2e,0x7465730a31203435,0x3233732e746c2e70,0x7225202c33702520\n"
".quad 0x726f0a3b34202c32,0x702520646572702e,0x202c327025202c34,0x6f6c2e0a3b337025\n"
".quad 0x2034353920322063,0x672e707465730a31,0x7025203233732e74,0x202c327225202c35\n"
".quad 0x2e726f0a3b373035,0x3670252064657270,0x25202c347025202c,0x2e6464610a3b3570\n"
".quad 0x316c722520343673,0x35316c7225202c36,0x2e0a3b323135202c,0x3739203220636f6c\n"
".quad 0x2e64616d0a312035,0x25203436732e6f6c,0x7225202c37316c72,0x6c7225202c36316c\n"
".quad 0x3b346c7225202c32,0x6f742e617476630a,0x2e6c61626f6c672e,0x316c722520343675\n"
".quad 0x3b316c7225202c38,0x3436622e6c68730a,0x202c39316c722520,0x33202c37316c7225\n"
".quad 0x732e7268730a3b32,0x30326c7225203436,0x2c39316c7225202c,0x6f6c2e0a3b323320\n"
".quad 0x2035373920322063,0x36622e6c68730a31,0x2c31326c72252034,0x202c30326c722520\n"
".quad 0x732e6464610a3b32,0x2c366c7225203436,0x202c38316c722520,0x610a3b31326c7225\n"
".quad 0x25203436732e6464,0x7225202c32326c72,0x323031202c35316c,0x20636f6c2e0a3b34\n"
".quad 0x0a31203637392032,0x732e6f6c2e64616d,0x33326c7225203436,0x2c32326c7225202c\n"
".quad 0x25202c326c722520,0x6c68730a3b346c72,0x6c7225203436622e,0x326c7225202c3432\n"
".quad 0x730a3b3233202c33,0x25203436732e7268,0x7225202c35326c72,0x3b3233202c34326c\n"
".quad 0x203220636f6c2e0a,0x68730a3120363739,0x7225203436622e6c,0x6c7225202c36326c\n"
".quad 0x610a3b32202c3532,0x25203436732e6464,0x6c7225202c376c72,0x326c7225202c3831\n"
".quad 0x732e6464610a3b36,0x37326c7225203436,0x2c35316c7225202c,0x2e0a3b3633353120\n"
".quad 0x3739203220636f6c,0x2e64616d0a312037,0x25203436732e6f6c,0x7225202c38326c72\n"
".quad 0x6c7225202c37326c,0x3b346c7225202c32,0x3436622e6c68730a,0x202c39326c722520\n"
".quad 0x33202c38326c7225,0x732e7268730a3b32,0x30336c7225203436,0x2c39326c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x2037373920322063,0x36622e6c68730a31,0x2c31336c72252034\n"
".quad 0x202c30336c722520,0x732e6464610a3b32,0x2c386c7225203436,0x202c38316c722520\n"
".quad 0x610a3b31336c7225,0x25203436732e6464,0x7225202c32336c72,0x343032202c35316c\n"
".quad 0x20636f6c2e0a3b38,0x0a31203837392032,0x732e6f6c2e64616d,0x33336c7225203436\n"
".quad 0x2c32336c7225202c,0x25202c326c722520,0x6c68730a3b346c72,0x6c7225203436622e\n"
".quad 0x336c7225202c3433,0x730a3b3233202c33,0x25203436732e7268,0x7225202c35336c72\n"
".quad 0x3b3233202c34336c,0x203220636f6c2e0a,0x68730a3120383739,0x7225203436622e6c\n"
".quad 0x6c7225202c36336c,0x610a3b32202c3533,0x25203436732e6464,0x6c7225202c396c72\n"
".quad 0x336c7225202c3831,0x732e6464610a3b36,0x37336c7225203436,0x2c35316c7225202c\n"
".quad 0x2e0a3b3036353220,0x3739203220636f6c,0x2e64616d0a312039,0x25203436732e6f6c\n"
".quad 0x7225202c38336c72,0x6c7225202c37336c,0x3b346c7225202c32,0x3436622e6c68730a\n"
".quad 0x202c39336c722520,0x33202c38336c7225,0x732e7268730a3b32,0x30346c7225203436\n"
".quad 0x2c39336c7225202c,0x6f6c2e0a3b323320,0x2039373920322063,0x36622e6c68730a31\n"
".quad 0x2c31346c72252034,0x202c30346c722520,0x732e6464610a3b32,0x30316c7225203436\n"
".quad 0x2c38316c7225202c,0x0a3b31346c722520,0x203436732e646461,0x25202c32346c7225\n"
".quad 0x3033202c35316c72,0x636f6c2e0a3b3237,0x3120303839203220,0x2e6f6c2e64616d0a\n"
".quad 0x346c722520343673,0x32346c7225202c33,0x202c326c7225202c,0x68730a3b346c7225\n"
".quad 0x7225203436622e6c,0x6c7225202c34346c,0x0a3b3233202c3334,0x203436732e726873\n"
".quad 0x25202c35346c7225,0x3233202c34346c72,0x3220636f6c2e0a3b,0x730a312030383920\n"
".quad 0x25203436622e6c68,0x7225202c36346c72,0x0a3b32202c35346c,0x203436732e646461\n"
".quad 0x25202c31316c7225,0x7225202c38316c72,0x6464610a3b36346c,0x6c7225203436732e\n"
".quad 0x316c7225202c3734,0x3b34383533202c35,0x203220636f6c2e0a,0x616d0a3120313839\n"
".quad 0x3436732e6f6c2e64,0x202c38346c722520,0x25202c37346c7225,0x6c7225202c326c72\n"
".quad 0x622e6c68730a3b34,0x39346c7225203436,0x2c38346c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x346c7225202c3035,0x2e0a3b3233202c39,0x3839203220636f6c\n"
".quad 0x2e6c68730a312031,0x356c722520343662,0x30356c7225202c31,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x316c7225202c3231,0x31356c7225202c38,0x36732e6464610a3b\n"
".quad 0x2c32356c72252034,0x202c35316c722520,0x6c2e0a3b36393034,0x323839203220636f\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c33356c,0x326c7225202c3235\n"
".quad 0x0a3b346c7225202c,0x203436622e6c6873,0x25202c34356c7225,0x3233202c33356c72\n"
".quad 0x36732e7268730a3b,0x2c35356c72252034,0x202c34356c722520,0x636f6c2e0a3b3233\n"
".quad 0x3120323839203220,0x3436622e6c68730a,0x202c36356c722520,0x32202c35356c7225\n"
".quad 0x36732e6464610a3b,0x2c33316c72252034,0x202c38316c722520,0x2e0a3b36356c7225\n"
".quad 0x3539203220636f6c,0x367025400a312034,0x3142422061726220,0x68730a0a3b345f38\n"
".quad 0x7225203436622e6c,0x6c7225202c37356c,0x730a3b3233202c35,0x25203436732e7268\n"
".quad 0x7225202c38356c72,0x3b3233202c37356c,0x203220636f6c2e0a,0x68730a3120363839\n"
".quad 0x7225203436622e6c,0x6c7225202c39356c,0x610a3b32202c3835,0x25203436732e6464\n"
".quad 0x7225202c30366c72,0x356c7225202c336c,0x6c672e646c0a3b39,0x3233662e6c61626f\n"
".quad 0x255b202c36662520,0x610a3b5d30366c72,0x25203233732e6464,0x327225202c313172\n"
".quad 0x6c2e0a3b312d202c,0x373839203220636f,0x752e7476630a3120,0x25203233752e3436\n"
".quad 0x7225202c31366c72,0x2e6464610a3b3131,0x366c722520343673,0x31366c7225202c32\n"
".quad 0x0a3b34323031202c,0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c383731\n"
".quad 0x685f645f524c3931,0x495f434442416279,0x536650707265746e,0x7261705f666d665f\n"
".quad 0x2e0a3b5d335f6d61,0x3839203220636f6c,0x2e64616d0a312037,0x25203436732e6f6c\n"
".quad 0x7225202c33366c72,0x6c7225202c32366c,0x6c7225202c383731,0x622e6c68730a3b34\n"
".quad 0x34366c7225203436,0x2c33366c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x366c7225202c3536,0x2e0a3b3233202c34,0x3839203220636f6c,0x2e6c68730a312037\n"
".quad 0x366c722520343662,0x35366c7225202c36,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x336c7225202c3736,0x3b36366c7225202c,0x626f6c672e646c0a,0x25203233662e6c61\n"
".quad 0x6c72255b202c3766,0x6f6c2e0a3b5d3736,0x2038383920322063,0x33732e6464610a31\n"
".quad 0x202c333172252032,0x0a3b31202c327225,0x2e3436752e747663,0x366c722520323375\n"
".quad 0x3b33317225202c38,0x3436732e6464610a,0x202c39366c722520,0x32202c38366c7225\n"
".quad 0x6f6c2e0a3b383430,0x2038383920322063,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x366c7225202c3037,0x37316c7225202c39,0x3b346c7225202c38,0x3436622e6c68730a\n"
".quad 0x202c31376c722520,0x33202c30376c7225,0x732e7268730a3b32,0x32376c7225203436\n"
".quad 0x2c31376c7225202c,0x6f6c2e0a3b323320,0x2038383920322063,0x36622e6c68730a31\n"
".quad 0x2c33376c72252034,0x202c32376c722520,0x732e6464610a3b32,0x34376c7225203436\n"
".quad 0x202c336c7225202c,0x6c0a3b33376c7225,0x6c61626f6c672e64,0x386625203233662e\n"
".quad 0x34376c72255b202c,0x732e6464610a3b5d,0x2c35317225203233,0x312d202c31722520\n"
".quad 0x3220636f6c2e0a3b,0x630a312039383920,0x33662e6e722e7476,0x6625203233732e32\n"
".quad 0x35317225202c3635,0x33662e6464610a3b,0x202c343566252032,0x6630202c36356625\n"
".quad 0x3030303030304633,0x33662e6464610a3b,0x202c313366252032,0x336630202c346625\n"
".quad 0x3b30303030303046,0x3233752e766f6d0a,0x30202c3631722520,0x2e786574090a0a3b\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x326625202c303266,0x2c32326625202c31\n"
".quad 0x202c7d3332662520,0x5f6665527865745b,0x66257b202c443166,0x31336625202c3435\n"
".quad 0x6c2e090a0a3b5d7d,0x303939203220636f,0x732e6464610a3120,0x2c37317225203233\n"
".quad 0x3b31202c31722520,0x2e6e722e7476630a,0x203233732e323366,0x7225202c37356625\n"
".quad 0x2e6464610a3b3731,0x3834662520323366,0x202c37356625202c,0x3030303046336630\n"
".quad 0x6574090a0a3b3030,0x2e34762e64322e78,0x203233662e323366,0x25202c363266257b\n"
".quad 0x326625202c373266,0x7d39326625202c38,0x65527865745b202c,0x7b202c4433665f66\n"
".quad 0x6625202c38346625,0x090a0a3b5d7d3133,0x39203220636f6c2e,0x7476630a31203139\n"
".quad 0x2e3233662e6e722e,0x3835662520323373,0x0a3b31317225202c,0x203233662e646461\n"
".quad 0x6625202c33346625,0x46336630202c3835,0x0a3b303030303030,0x64322e786574090a\n"
".quad 0x2e3233662e34762e,0x3366257b20323366,0x2c33336625202c32,0x25202c3433662520\n"
".quad 0x745b202c7d353366,0x35665f6665527865,0x343566257b202c44,0x5d7d33346625202c\n"
".quad 0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366,0x25202c383366257b\n"
".quad 0x346625202c393366,0x7d31346625202c30,0x65527865745b202c,0x7b202c4436665f66\n"
".quad 0x6625202c38346625,0x090a0a3b5d7d3334,0x39203220636f6c2e,0x7476630a31203339\n"
".quad 0x2e3233662e6e722e,0x3935662520323373,0x0a3b33317225202c,0x203233662e646461\n"
".quad 0x6625202c35356625,0x46336630202c3935,0x0a3b303030303030,0x64322e786574090a\n"
".quad 0x2e3233662e34762e,0x3466257b20323366,0x2c35346625202c34,0x25202c3634662520\n"
".quad 0x745b202c7d373466,0x37665f6665527865,0x383466257b202c44,0x5d7d35356625202c\n"
".quad 0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366,0x25202c303566257b\n"
".quad 0x356625202c313566,0x7d33356625202c32,0x65527865745b202c,0x7b202c4438665f66\n"
".quad 0x6625202c34356625,0x090a0a3b5d7d3535,0x39203220636f6c2e,0x7025400a31203639\n"
".quad 0x4242206172622031,0x2e0a0a3b335f3831,0x3031203220636f6c,0x6464610a31203031\n"
".quad 0x366625203233662e,0x202c366625202c30,0x64610a3b30326625,0x6625203233662e64\n"
".quad 0x30366625202c3136,0x610a3b376625202c,0x25203233662e6464,0x366625202c323666\n"
".quad 0x3b36326625202c31,0x3233662e6464610a,0x25202c3336662520,0x386625202c323666\n"
".quad 0x33662e6464610a3b,0x202c343666252032,0x6625202c33366625,0x2e6464610a3b3233\n"
".quad 0x3536662520323366,0x202c34366625202c,0x64610a3b38336625,0x6625203233662e64\n"
".quad 0x35366625202c3636,0x0a3b34346625202c,0x203233662e646461,0x6625202c37366625\n"
".quad 0x30356625202c3636,0x33662e6275730a3b,0x202c383666252032,0x6625202c30326625\n"
".quad 0x2e6464610a3b3632,0x3936662520323366,0x202c38366625202c,0x75730a3b32336625\n"
".quad 0x6625203233662e62,0x39366625202c3037,0x0a3b38336625202c,0x203233662e627573\n"
".quad 0x6625202c31376625,0x34346625202c3037,0x33662e6464610a3b,0x202c323766252032\n"
".quad 0x6625202c31376625,0x2e6275730a3b3035,0x3337662520323366,0x25202c376625202c\n"
".quad 0x2e6464610a3b3866,0x3437662520323366,0x202c33376625202c,0x64610a3b32336625\n"
".quad 0x6625203233662e64,0x34376625202c3537,0x0a3b38336625202c,0x203233662e627573\n"
".quad 0x6625202c36376625,0x34346625202c3537,0x33662e6275730a3b,0x202c373766252032\n"
".quad 0x6625202c36376625,0x2e6c756d0a3b3035,0x3837662520323366,0x202c37376625202c\n"
".quad 0x6d660a3b37376625,0x3233662e6e722e61,0x25202c3937662520,0x376625202c323766\n"
".quad 0x3b38376625202c32,0x3233662e766f6d0a,0x30202c3038662520,0x3030303043463366\n"
".quad 0x20636f6c2e0a3b30,0x3120303130312032,0x3233662e67656e0a,0x25202c3138662520\n"
".quad 0x616d660a3b393766,0x203233662e6e722e,0x6625202c32386625,0x30386625202c3138\n"
".quad 0x0a3b37366625202c,0x662e6e722e616d66,0x2c33386625203233,0x30202c3238662520\n"
".quad 0x3345383345454266,0x0a3b366625202c39,0x203233662e67656e,0x6625202c34386625\n"
".quad 0x702e646c0a3b3338,0x3233662e6d617261,0x202c333832662520,0x5f524c39315a5f5b\n"
".quad 0x4442416279685f64,0x707265746e495f43,0x5f666d665f536650,0x5d325f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x0a31203031303120,0x662e6e722e616d66,0x2c35386625203233\n"
".quad 0x25202c3438662520,0x6625202c33383266,0x662e766f6d0a3b36,0x2c36386625203233\n"
".quad 0x3030343034663020,0x6f6c2e0a3b303030,0x3031303120322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x32376625202c3738,0x303430346630202c,0x6625202c30303030\n"
".quad 0x2e6c756d0a3b3736,0x3838662520323366,0x202c32376625202c,0x3030303930346630\n"
".quad 0x2e616d660a3b3030,0x25203233662e6e72,0x386625202c393866,0x2c32376625202c38\n"
".quad 0x660a3b3738662520,0x33662e6e722e616d,0x202c303966252032,0x6625202c31386625\n"
".quad 0x39386625202c3038,0x33662e766f6d0a3b,0x202c313966252032,0x4538334544336630\n"
".quad 0x636f6c2e0a3b3933,0x2030313031203220,0x33662e67656e0a31,0x202c323966252032\n"
".quad 0x6d660a3b30396625,0x3233662e6e722e61,0x25202c3339662520,0x396625202c323966\n"
".quad 0x3b30326625202c31,0x3233662e67656e0a,0x25202c3439662520,0x616d660a3b333966\n"
".quad 0x203233662e6e722e,0x6625202c35396625,0x38326625202c3439,0x3b30326625202c33\n"
".quad 0x2e6e722e616d660a,0x3639662520323366,0x202c37376625202c,0x3030303430346630\n"
".quad 0x37366625202c3030,0x33662e6c756d0a3b,0x202c373966252032,0x6630202c37376625\n"
".quad 0x3030303030393034,0x6e722e616d660a3b,0x396625203233662e,0x2c37396625202c38\n"
".quad 0x25202c3737662520,0x616d660a3b363966,0x203233662e6e722e,0x6625202c39396625\n"
".quad 0x30386625202c3138,0x0a3b38396625202c,0x203233662e67656e,0x25202c3030316625\n"
".quad 0x616d660a3b393966,0x203233662e6e722e,0x25202c3130316625,0x6625202c30303166\n"
".quad 0x3b376625202c3139,0x3233662e67656e0a,0x202c323031662520,0x660a3b3130316625\n"
".quad 0x33662e6e722e616d,0x2c33303166252032,0x202c323031662520,0x25202c3338326625\n"
".quad 0x2e67656e0a3b3766,0x3031662520323366,0x3b32376625202c34,0x2e6e722e616d660a\n"
".quad 0x3031662520323366,0x3430316625202c35,0x202c36386625202c,0x6d660a3b37366625\n"
".quad 0x3233662e6e722e61,0x202c363031662520,0x6625202c38386625,0x30316625202c3237\n"
".quad 0x722e616d660a3b35,0x6625203233662e6e,0x386625202c373031,0x2c30386625202c31\n"
".quad 0x0a3b363031662520,0x203233662e67656e,0x25202c3830316625,0x6d660a3b37303166\n"
".quad 0x3233662e6e722e61,0x202c393031662520,0x25202c3830316625,0x326625202c313966\n"
".quad 0x662e67656e0a3b36,0x3031316625203233,0x3b3930316625202c,0x2e6e722e616d660a\n"
".quad 0x3131662520323366,0x3031316625202c31,0x2c3338326625202c,0x6e0a3b3632662520\n"
".quad 0x25203233662e6765,0x6625202c32313166,0x2e616d660a3b3737,0x25203233662e6e72\n"
".quad 0x6625202c33313166,0x386625202c323131,0x3b37366625202c36,0x2e6e722e616d660a\n"
".quad 0x3131662520323366,0x2c37396625202c34,0x25202c3737662520,0x6d660a3b33313166\n"
".quad 0x3233662e6e722e61,0x202c353131662520,0x6625202c31386625,0x31316625202c3038\n"
".quad 0x662e67656e0a3b34,0x3631316625203233,0x3b3531316625202c,0x2e6e722e616d660a\n"
".quad 0x3131662520323366,0x3631316625202c37,0x202c31396625202c,0x67656e0a3b386625\n"
".quad 0x316625203233662e,0x31316625202c3831,0x722e616d660a3b37,0x6625203233662e6e\n"
".quad 0x316625202c393131,0x38326625202c3831,0x0a3b386625202c33,0x203233662e646461\n"
".quad 0x25202c3032316625,0x376625202c323766,0x722e616d660a3b37,0x6625203233662e6e\n"
".quad 0x316625202c313231,0x30346630202c3032,0x202c303030303034,0x756d0a3b37366625\n"
".quad 0x6625203233662e6c,0x316625202c323231,0x30346630202c3032,0x0a3b303030303039\n"
".quad 0x662e6e722e616d66,0x3332316625203233,0x2c3232316625202c,0x202c303231662520\n"
".quad 0x660a3b3132316625,0x33662e6e722e616d,0x2c34323166252032,0x25202c3138662520\n"
".quad 0x316625202c303866,0x2e7476630a3b3332,0x203233662e343666,0x6625202c31646625\n"
".quad 0x766f6d0a3b343231,0x646625203436662e,0x3946336430202c32,0x3743313743313743\n"
".quad 0x2e0a3b4331443842,0x3031203220636f6c,0x7476630a31203031,0x3233662e3436662e\n"
".quad 0x25202c3364662520,0x67656e0a3b323366,0x646625203436662e,0x3b31646625202c34\n"
".quad 0x2e6e722e616d660a,0x3564662520343666,0x202c34646625202c,0x6625202c32646625\n"
".quad 0x2e7476630a3b3364,0x203233662e343666,0x6625202c36646625,0x67656e0a3b333832\n"
".quad 0x646625203436662e,0x3b36646625202c37,0x2e6e722e616d660a,0x3864662520343666\n"
".quad 0x202c37646625202c,0x6625202c35646625,0x2e7476630a3b3364,0x662e3233662e6e72\n"
".quad 0x3532316625203436,0x0a3b38646625202c,0x203233662e627573,0x25202c3632316625\n"
".quad 0x376625202c373766,0x20636f6c2e0a3b32,0x3120303130312032,0x2e6e722e616d660a\n"
".quad 0x3231662520323366,0x3632316625202c37,0x303430346630202c,0x6625202c30303030\n"
".quad 0x2e6c756d0a3b3736,0x3231662520323366,0x3632316625202c38,0x303930346630202c\n"
".quad 0x6d660a3b30303030,0x3233662e6e722e61,0x202c393231662520,0x25202c3832316625\n"
".quad 0x6625202c36323166,0x616d660a3b373231,0x203233662e6e722e,0x25202c3033316625\n"
".quad 0x386625202c313866,0x3932316625202c30,0x36662e7476630a3b,0x6625203233662e34\n"
".quad 0x33316625202c3964,0x662e7476630a3b30,0x25203233662e3436,0x6625202c30316466\n"
".quad 0x2e67656e0a3b3833,0x3164662520343666,0x3b39646625202c31,0x2e6e722e616d660a\n"
".quad 0x3164662520343666,0x3131646625202c32,0x202c32646625202c,0x660a3b3031646625\n"
".quad 0x36662e6e722e616d,0x2c33316466252034,0x25202c3764662520,0x6625202c32316466\n"
".quad 0x7476630a3b303164,0x2e3233662e6e722e,0x3331662520343666,0x3331646625202c31\n"
".quad 0x33662e6275730a3b,0x2c32333166252032,0x202c343031662520,0x6d660a3b37376625\n"
".quad 0x3233662e6e722e61,0x202c333331662520,0x30202c3233316625,0x3030303034303466\n"
".quad 0x3b37366625202c30,0x3233662e6c756d0a,0x202c343331662520,0x30202c3233316625\n"
".quad 0x3030303039303466,0x722e616d660a3b30,0x6625203233662e6e,0x316625202c353331\n"
".quad 0x33316625202c3433,0x3333316625202c32,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x31386625202c3633,0x202c30386625202c,0x630a3b3533316625,0x662e3436662e7476\n"
".quad 0x3431646625203233,0x3b3633316625202c,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x34346625202c3531,0x36662e67656e0a3b,0x2c36316466252034,0x0a3b343164662520\n"
".quad 0x662e6e722e616d66,0x3731646625203436,0x2c3631646625202c,0x25202c3264662520\n"
".quad 0x6d660a3b35316466,0x3436662e6e722e61,0x202c383164662520,0x6625202c37646625\n"
".quad 0x646625202c373164,0x2e7476630a3b3531,0x662e3233662e6e72,0x3733316625203436\n"
".quad 0x3b3831646625202c,0x3233662e6275730a,0x202c383331662520,0x6625202c32376625\n"
".quad 0x2e616d660a3b3737,0x25203233662e6e72,0x6625202c39333166,0x346630202c383331\n"
".quad 0x2c30303030303430,0x6d0a3b3736662520,0x25203233662e6c75,0x6625202c30343166\n"
".quad 0x346630202c383331,0x3b30303030303930,0x2e6e722e616d660a,0x3431662520323366\n"
".quad 0x3034316625202c31,0x2c3833316625202c,0x0a3b393331662520,0x662e6e722e616d66\n"
".quad 0x3234316625203233,0x202c31386625202c,0x6625202c30386625,0x7476630a3b313431\n"
".quad 0x3233662e3436662e,0x202c393164662520,0x630a3b3234316625,0x662e3436662e7476\n"
".quad 0x3032646625203233,0x0a3b30356625202c,0x203436662e67656e,0x25202c3132646625\n"
".quad 0x6d660a3b39316466,0x3436662e6e722e61,0x202c323264662520,0x25202c3132646625\n"
".quad 0x646625202c326466,0x2e616d660a3b3032,0x25203436662e6e72,0x6625202c33326466\n"
".quad 0x32646625202c3764,0x3032646625202c32,0x6e722e7476630a3b,0x3436662e3233662e\n"
".quad 0x202c333431662520,0x6c0a3b3332646625,0x2e6d617261702e64,0x316c722520343675\n"
".quad 0x315a5f5b202c3737,0x79685f645f524c39,0x6e495f4344424162,0x5f53665070726574\n"
".quad 0x617261705f666d66,0x6c2e0a3b5d335f6d,0x313539203220636f,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c37376c,0x316c7225202c3531,0x346c7225202c3737\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3437316c72,0x645f524c39315a5f\n"
".quad 0x434442416279685f,0x50707265746e495f,0x705f666d665f5366,0x3b5d315f6d617261\n"
".quad 0x6f742e617476630a,0x2e6c61626f6c672e,0x376c722520343675,0x37316c7225202c38\n"
".quad 0x622e6c68730a3b34,0x39376c7225203436,0x2c37376c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x376c7225202c3038,0x2e0a3b3233202c39,0x3739203220636f6c\n"
".quad 0x2e6c68730a312034,0x386c722520343662,0x30386c7225202c31,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x376c7225202c3238,0x31386c7225202c38,0x3220636f6c2e0a3b\n"
".quad 0x0a31203231303120,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d32386c72\n"
".quad 0x6f6c2e0a3b353866,0x2035373920322063,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x316c7225202c3438,0x37316c7225202c36,0x3b346c7225202c37,0x3436622e6c68730a\n"
".quad 0x202c35386c722520,0x33202c34386c7225,0x732e7268730a3b32,0x36386c7225203436\n"
".quad 0x2c35386c7225202c,0x6f6c2e0a3b323320,0x2035373920322063,0x36622e6c68730a31\n"
".quad 0x2c37386c72252034,0x202c36386c722520,0x732e6464610a3b32,0x38386c7225203436\n"
".quad 0x2c38376c7225202c,0x0a3b37386c722520,0x31203220636f6c2e,0x74730a3120333130\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x396625202c5d3838,0x20636f6c2e0a3b35\n"
".quad 0x0a31203637392032,0x732e6f6c2e64616d,0x30396c7225203436,0x2c32326c7225202c\n"
".quad 0x2c3737316c722520,0x730a3b346c722520,0x25203436622e6c68,0x7225202c31396c72\n"
".quad 0x3b3233202c30396c,0x3436732e7268730a,0x202c32396c722520,0x33202c31396c7225\n"
".quad 0x20636f6c2e0a3b32,0x0a31203637392032,0x203436622e6c6873,0x25202c33396c7225\n"
".quad 0x3b32202c32396c72,0x3436732e6464610a,0x202c34396c722520,0x25202c38376c7225\n"
".quad 0x6c2e0a3b33396c72,0x313031203220636f,0x672e74730a312034,0x33662e6c61626f6c\n"
".quad 0x34396c72255b2032,0x3330316625202c5d,0x3220636f6c2e0a3b,0x6d0a312037373920\n"
".quad 0x36732e6f6c2e6461,0x2c36396c72252034,0x202c37326c722520,0x202c3737316c7225\n"
".quad 0x68730a3b346c7225,0x7225203436622e6c,0x6c7225202c37396c,0x0a3b3233202c3639\n"
".quad 0x203436732e726873,0x25202c38396c7225,0x3233202c37396c72,0x3220636f6c2e0a3b\n"
".quad 0x730a312037373920,0x25203436622e6c68,0x7225202c39396c72,0x0a3b32202c38396c\n"
".quad 0x203436732e646461,0x202c3030316c7225,0x25202c38376c7225,0x6c2e0a3b39396c72\n"
".quad 0x313031203220636f,0x672e74730a312035,0x33662e6c61626f6c,0x30316c72255b2032\n"
".quad 0x31316625202c5d30,0x20636f6c2e0a3b31,0x0a31203837392032,0x732e6f6c2e64616d\n"
".quad 0x30316c7225203436,0x32336c7225202c32,0x3737316c7225202c,0x0a3b346c7225202c\n"
".quad 0x203436622e6c6873,0x202c3330316c7225,0x202c3230316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3430,0x0a3b3233202c3330,0x39203220636f6c2e\n"
".quad 0x6c68730a31203837,0x6c7225203436622e,0x6c7225202c353031,0x0a3b32202c343031\n"
".quad 0x203436732e646461,0x202c3630316c7225,0x25202c38376c7225,0x2e0a3b3530316c72\n"
".quad 0x3031203220636f6c,0x2e74730a31203631,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x316625202c5d3630,0x636f6c2e0a3b3931,0x3120393739203220,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x336c7225202c3830,0x37316c7225202c37,0x3b346c7225202c37\n"
".quad 0x3436622e6c68730a,0x2c3930316c722520,0x2c3830316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c303131,0x3b3233202c393031,0x203220636f6c2e0a\n"
".quad 0x68730a3120393739,0x7225203436622e6c,0x7225202c3131316c,0x3b32202c3031316c\n"
".quad 0x3436732e6464610a,0x2c3231316c722520,0x202c38376c722520,0x0a3b3131316c7225\n"
".quad 0x31203220636f6c2e,0x74730a3120373130,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d323131,0x6f6c2e0a3b353231,0x2030383920322063,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c343131,0x316c7225202c3234,0x346c7225202c3737\n"
".quad 0x36622e6c68730a3b,0x3531316c72252034,0x3431316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3631316c,0x3233202c3531316c,0x3220636f6c2e0a3b\n"
".quad 0x730a312030383920,0x25203436622e6c68,0x25202c3731316c72,0x32202c3631316c72\n"
".quad 0x36732e6464610a3b,0x3831316c72252034,0x2c38376c7225202c,0x3b3731316c722520\n"
".quad 0x203220636f6c2e0a,0x730a312038313031,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3831316c,0x6c2e0a3b31333166,0x313839203220636f,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3032316c,0x6c7225202c37346c,0x6c7225202c373731\n"
".quad 0x622e6c68730a3b34,0x32316c7225203436,0x32316c7225202c31,0x730a3b3233202c30\n"
".quad 0x25203436732e7268,0x25202c3232316c72,0x33202c3132316c72,0x20636f6c2e0a3b32\n"
".quad 0x0a31203138392032,0x203436622e6c6873,0x202c3332316c7225,0x202c3232316c7225\n"
".quad 0x732e6464610a3b32,0x32316c7225203436,0x38376c7225202c34,0x3332316c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203931303120,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3432316c72,0x2e0a3b3733316625,0x3031203220636f6c,0x2e74730a31203032\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x34316625202c5d33,0x20636f6c2e0a3b33\n"
".quad 0x3220333230312032,0x420a0a3b7465720a,0x6c0a3a335f383142,0x2e6d617261702e64\n"
".quad 0x316c722520343675,0x315a5f5b202c3637,0x79685f645f524c39,0x6e495f4344424162\n"
".quad 0x5f53665070726574,0x617261705f666d66,0x6c2e0a3b5d335f6d,0x353739203220636f\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3832316c,0x6c7225202c36316c\n"
".quad 0x6c7225202c363731,0x61702e646c0a3b34,0x203436752e6d6172,0x202c3337316c7225\n"
".quad 0x5f524c39315a5f5b,0x4442416279685f64,0x707265746e495f43,0x5f666d665f536650\n"
".quad 0x5d315f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e\n"
".quad 0x6c7225202c393231,0x6c68730a3b333731,0x6c7225203436622e,0x6c7225202c303331\n"
".quad 0x3b3233202c383231,0x3436732e7268730a,0x2c3133316c722520,0x2c3033316c722520\n"
".quad 0x6f6c2e0a3b323320,0x2035373920322063,0x36622e6c68730a31,0x3233316c72252034\n"
".quad 0x3133316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c333331\n"
".quad 0x6c7225202c393231,0x6f6c2e0a3b323331,0x2037393920322063,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x5d3333316c72255b,0x0a3b36326625202c,0x39203220636f6c2e\n"
".quad 0x64616d0a31203637,0x203436732e6f6c2e,0x202c3533316c7225,0x25202c32326c7225\n"
".quad 0x25202c3637316c72,0x6c68730a3b346c72,0x6c7225203436622e,0x6c7225202c363331\n"
".quad 0x3b3233202c353331,0x3436732e7268730a,0x2c3733316c722520,0x2c3633316c722520\n"
".quad 0x6f6c2e0a3b323320,0x2036373920322063,0x36622e6c68730a31,0x3833316c72252034\n"
".quad 0x3733316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c393331\n"
".quad 0x6c7225202c393231,0x6f6c2e0a3b383331,0x2038393920322063,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x5d3933316c72255b,0x2e0a3b386625202c,0x3739203220636f6c\n"
".quad 0x2e64616d0a312037,0x25203436732e6f6c,0x25202c3134316c72,0x7225202c37326c72\n"
".quad 0x7225202c3637316c,0x2e6c68730a3b346c,0x316c722520343662,0x316c7225202c3234\n"
".quad 0x0a3b3233202c3134,0x203436732e726873,0x202c3334316c7225,0x202c3234316c7225\n"
".quad 0x636f6c2e0a3b3233,0x3120373739203220,0x3436622e6c68730a,0x2c3434316c722520\n"
".quad 0x2c3334316c722520,0x2e6464610a3b3220,0x316c722520343673,0x316c7225202c3534\n"
".quad 0x316c7225202c3932,0x636f6c2e0a3b3434,0x3120393939203220,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3534316c7225,0x2e0a3b3032662520,0x3739203220636f6c\n"
".quad 0x2e64616d0a312038,0x25203436732e6f6c,0x25202c3734316c72,0x7225202c32336c72\n"
".quad 0x7225202c3637316c,0x2e6c68730a3b346c,0x316c722520343662,0x316c7225202c3834\n"
".quad 0x0a3b3233202c3734,0x203436732e726873,0x202c3934316c7225,0x202c3834316c7225\n"
".quad 0x636f6c2e0a3b3233,0x3120383739203220,0x3436622e6c68730a,0x2c3035316c722520\n"
".quad 0x2c3934316c722520,0x2e6464610a3b3220,0x316c722520343673,0x316c7225202c3135\n"
".quad 0x316c7225202c3932,0x636f6c2e0a3b3035,0x2030303031203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x5d3135316c72255b,0x2e0a3b376625202c,0x3739203220636f6c\n"
".quad 0x2e64616d0a312039,0x25203436732e6f6c,0x25202c3335316c72,0x7225202c37336c72\n"
".quad 0x7225202c3637316c,0x2e6c68730a3b346c,0x316c722520343662,0x316c7225202c3435\n"
".quad 0x0a3b3233202c3335,0x203436732e726873,0x202c3535316c7225,0x202c3435316c7225\n"
".quad 0x636f6c2e0a3b3233,0x3120393739203220,0x3436622e6c68730a,0x2c3635316c722520\n"
".quad 0x2c3535316c722520,0x2e6464610a3b3220,0x316c722520343673,0x316c7225202c3735\n"
".quad 0x316c7225202c3932,0x636f6c2e0a3b3635,0x2031303031203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x5d3735316c72255b,0x0a3b34346625202c,0x39203220636f6c2e\n"
".quad 0x64616d0a31203038,0x203436732e6f6c2e,0x202c3935316c7225,0x25202c32346c7225\n"
".quad 0x25202c3637316c72,0x6c68730a3b346c72,0x6c7225203436622e,0x6c7225202c303631\n"
".quad 0x3b3233202c393531,0x3436732e7268730a,0x2c3136316c722520,0x2c3036316c722520\n"
".quad 0x6f6c2e0a3b323320,0x2030383920322063,0x36622e6c68730a31,0x3236316c72252034\n"
".quad 0x3136316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c333631\n"
".quad 0x6c7225202c393231,0x6f6c2e0a3b323631,0x3230303120322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x3336316c72255b20,0x3b30356625202c5d,0x203220636f6c2e0a\n"
".quad 0x730a312033303031,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d32316c\n"
".quad 0x636f6c2e0a3b3233,0x2034303031203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x2c5d33316c72255b,0x2e0a3b3833662520,0x3031203220636f6c,0x7465720a32203332\n"
".quad 0x5f383142420a0a3b,0x20636f6c2e0a3a34,0x0a31203835392032,0x203233662e646461\n"
".quad 0x25202c3639316625,0x46336630202c3366,0x0a3b303030303030,0x203233662e646461\n"
".quad 0x25202c3739316625,0x46336630202c3566,0x0a3b303030303030,0x203233752e766f6d\n"
".quad 0x3b30202c31357225,0x322e786574090a0a,0x3233662e34762e64,0x66257b203233662e\n"
".quad 0x316625202c343431,0x34316625202c3534,0x3734316625202c36,0x527865745b202c7d\n"
".quad 0x202c4230665f6665,0x202c36393166257b,0x3b5d7d3739316625,0x786574090a090a0a\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x25202c3035316625,0x6625202c31353166\n"
".quad 0x316625202c323531,0x65745b202c7d3335,0x4231665f66655278,0x36393166257b202c\n"
".quad 0x7d3739316625202c,0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x2c36353166257b20,0x202c373531662520,0x25202c3835316625,0x5b202c7d39353166\n"
".quad 0x665f666552786574,0x3166257b202c4232,0x39316625202c3639,0x0a090a0a3b5d7d37\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x363166257b203233,0x3336316625202c32\n"
".quad 0x2c3436316625202c,0x2c7d353631662520,0x6665527865745b20,0x257b202c4233665f\n"
".quad 0x6625202c36393166,0x0a0a3b5d7d373931,0x322e786574090a09,0x3233662e34762e64\n"
".quad 0x66257b203233662e,0x316625202c383631,0x37316625202c3936,0x3137316625202c30\n"
".quad 0x527865745b202c7d,0x202c4234665f6665,0x202c36393166257b,0x3b5d7d3739316625\n"
".quad 0x786574090a090a0a,0x662e34762e64322e,0x7b203233662e3233,0x25202c3437316625\n"
".quad 0x6625202c35373166,0x316625202c363731,0x65745b202c7d3737,0x4235665f66655278\n"
".quad 0x36393166257b202c,0x7d3739316625202c,0x74090a090a0a3b5d,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x2c30383166257b20,0x202c313831662520,0x25202c3238316625\n"
".quad 0x5b202c7d33383166,0x665f666552786574,0x3166257b202c4236,0x39316625202c3639\n"
".quad 0x0a090a0a3b5d7d37,0x2e64322e78657409,0x662e3233662e3476,0x383166257b203233\n"
".quad 0x3738316625202c36,0x2c3838316625202c,0x2c7d393831662520,0x6665527865745b20\n"
".quad 0x257b202c4237665f,0x6625202c36393166,0x0a0a3b5d7d373931,0x322e786574090a09\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x316625202c323931,0x39316625202c3339\n"
".quad 0x3539316625202c34,0x527865745b202c7d,0x202c4238665f6665,0x202c36393166257b\n"
".quad 0x3b5d7d3739316625,0x20636f6c2e090a0a,0x0a31203936392032,0x203233662e646461\n"
".quad 0x25202c3839316625,0x6625202c34343166,0x6464610a3b303531,0x316625203233662e\n"
".quad 0x39316625202c3939,0x3635316625202c38,0x33662e6464610a3b,0x2c30303266252032\n"
".quad 0x202c393931662520,0x610a3b3236316625,0x25203233662e6464,0x6625202c31303266\n"
".quad 0x316625202c303032,0x2e6464610a3b3836,0x3032662520323366,0x3130326625202c32\n"
".quad 0x3b3437316625202c,0x3233662e6464610a,0x202c333032662520,0x25202c3230326625\n"
".quad 0x64610a3b30383166,0x6625203233662e64,0x326625202c343032,0x38316625202c3330\n"
".quad 0x662e6464610a3b36,0x3530326625203233,0x2c3430326625202c,0x0a3b323931662520\n"
".quad 0x39203220636f6c2e,0x6275730a31203037,0x326625203233662e,0x35316625202c3630\n"
".quad 0x3236316625202c30,0x33662e6464610a3b,0x2c37303266252032,0x202c363032662520\n"
".quad 0x730a3b3437316625,0x25203233662e6275,0x6625202c38303266,0x316625202c373032\n"
".quad 0x2e6275730a3b3038,0x3032662520323366,0x3830326625202c39,0x3b3638316625202c\n"
".quad 0x3233662e6464610a,0x202c303132662520,0x25202c3930326625,0x6c2e0a3b32393166\n"
".quad 0x313739203220636f,0x662e6275730a3120,0x3131326625203233,0x2c3635316625202c\n"
".quad 0x0a3b383631662520,0x203233662e646461,0x25202c3231326625,0x6625202c31313266\n"
".quad 0x6464610a3b343731,0x326625203233662e,0x31326625202c3331,0x3038316625202c32\n"
".quad 0x33662e6275730a3b,0x2c34313266252032,0x202c333132662520,0x730a3b3638316625\n"
".quad 0x25203233662e6275,0x6625202c35313266,0x316625202c343132,0x636f6c2e0a3b3239\n"
".quad 0x3120323739203220,0x3233662e6c756d0a,0x202c363132662520,0x25202c3531326625\n"
".quad 0x6d660a3b35313266,0x3233662e6e722e61,0x202c373132662520,0x25202c3031326625\n"
".quad 0x6625202c30313266,0x766f6d0a3b363132,0x326625203233662e,0x46336630202c3831\n"
".quad 0x0a3b303030303043,0x39203220636f6c2e,0x67656e0a31203537,0x326625203233662e\n"
".quad 0x31326625202c3931,0x20636f6c2e0a3b37,0x0a31203437392032,0x662e6e722e616d66\n"
".quad 0x3032326625203233,0x2c3931326625202c,0x202c383132662520,0x6d0a3b3530326625\n"
".quad 0x25203233662e6c75,0x6625202c31323266,0x336630202c303232,0x3b39334538334545\n"
".quad 0x3233662e766f6d0a,0x202c323232662520,0x3030303846336630,0x702e646c0a3b3030\n"
".quad 0x3233662e6d617261,0x202c343832662520,0x5f524c39315a5f5b,0x4442416279685f64\n"
".quad 0x707265746e495f43,0x5f666d665f536650,0x5d345f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x730a312034373920,0x25203233662e6275,0x6625202c33323266,0x326625202c323232\n"
".quad 0x2e6c756d0a3b3438,0x3232662520323366,0x3332326625202c34,0x3b3132326625202c\n"
".quad 0x2e6e722e616d660a,0x3232662520323366,0x3434316625202c35,0x2c3438326625202c\n"
".quad 0x0a3b343232662520,0x2e3436752e747663,0x316c722520323375,0x3b317225202c3436\n"
".quad 0x203220636f6c2e0a,0x76630a3120313539,0x33752e3436752e74,0x3536316c72252032\n"
".quad 0x6c0a3b327225202c,0x2e6d617261702e64,0x316c722520343675,0x315a5f5b202c3537\n"
".quad 0x79685f645f524c39,0x6e495f4344424162,0x5f53665070726574,0x617261705f666d66\n"
".quad 0x6c2e0a3b5d335f6d,0x313539203220636f,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3636316c,0x7225202c3536316c,0x7225202c3537316c,0x646c0a3b3436316c\n"
".quad 0x752e6d617261702e,0x37316c7225203436,0x39315a5f5b202c32,0x6279685f645f524c\n"
".quad 0x746e495f43444241,0x665f536650707265,0x6d617261705f666d,0x7476630a3b5d315f\n"
".quad 0x6f6c672e6f742e61,0x203436752e6c6162,0x202c3736316c7225,0x0a3b3237316c7225\n"
".quad 0x203436622e6c6873,0x202c3836316c7225,0x202c3636316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3936,0x0a3b3233202c3836,0x39203220636f6c2e\n"
".quad 0x6c68730a31203437,0x6c7225203436622e,0x6c7225202c303731,0x0a3b32202c393631\n"
".quad 0x203436732e646461,0x202c3137316c7225,0x202c3736316c7225,0x0a3b3037316c7225\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3137316c72,0x6d0a3b3532326625\n"
".quad 0x25203233662e766f,0x6630202c36323266,0x3030303030343034,0x3220636f6c2e0a3b\n"
".quad 0x660a312035373920,0x33662e6e722e616d,0x2c37323266252032,0x202c303132662520\n"
".quad 0x3030303430346630,0x30326625202c3030,0x662e6c756d0a3b35,0x3832326625203233\n"
".quad 0x2c3031326625202c,0x3030393034663020,0x616d660a3b303030,0x203233662e6e722e\n"
".quad 0x25202c3932326625,0x6625202c38323266,0x326625202c303132,0x2e616d660a3b3732\n"
".quad 0x25203233662e6e72,0x6625202c30333266,0x326625202c393132,0x32326625202c3831\n"
".quad 0x662e6c756d0a3b39,0x3133326625203233,0x2c3033326625202c,0x3833454433663020\n"
".quad 0x6c756d0a3b393345,0x326625203233662e,0x32326625202c3233,0x3133326625202c33\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x35316625202c3333,0x3438326625202c30\n"
".quad 0x3b3233326625202c,0x626f6c672e74730a,0x5b203233662e6c61,0x25202c5d366c7225\n"
".quad 0x6c2e0a3b33333266,0x363739203220636f,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x326625202c343332,0x30346630202c3531,0x202c303030303034,0x6d0a3b3530326625\n"
".quad 0x25203233662e6c75,0x6625202c35333266,0x346630202c353132,0x3b30303030303930\n"
".quad 0x2e6e722e616d660a,0x3332662520323366,0x3533326625202c36,0x2c3531326625202c\n"
".quad 0x0a3b343332662520,0x662e6e722e616d66,0x3733326625203233,0x2c3931326625202c\n"
".quad 0x202c383132662520,0x6d0a3b3633326625,0x25203233662e6c75,0x6625202c38333266\n"
".quad 0x336630202c373332,0x3b39334538334544,0x3233662e6c756d0a,0x202c393332662520\n"
".quad 0x25202c3332326625,0x6d660a3b38333266,0x3233662e6e722e61,0x202c303432662520\n"
".quad 0x25202c3635316625,0x6625202c34383266,0x2e74730a3b393332,0x662e6c61626f6c67\n"
".quad 0x376c72255b203233,0x3034326625202c5d,0x3220636f6c2e0a3b,0x6e0a312037373920\n"
".quad 0x25203233662e6765,0x6625202c31343266,0x616d660a3b303132,0x203233662e6e722e\n"
".quad 0x25202c3234326625,0x6625202c31343266,0x326625202c363232,0x2e616d660a3b3530\n"
".quad 0x25203233662e6e72,0x6625202c33343266,0x326625202c383232,0x34326625202c3031\n"
".quad 0x722e616d660a3b32,0x6625203233662e6e,0x326625202c343432,0x31326625202c3931\n"
".quad 0x3334326625202c38,0x33662e6c756d0a3b,0x2c35343266252032,0x202c343432662520\n"
".quad 0x4538334544336630,0x2e6c756d0a3b3933,0x3432662520323366,0x3332326625202c36\n"
".quad 0x3b3534326625202c,0x2e6e722e616d660a,0x3432662520323366,0x3236316625202c37\n"
".quad 0x2c3438326625202c,0x0a3b363432662520,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x6625202c5d386c72,0x6f6c2e0a3b373432,0x2038373920322063,0x33662e67656e0a31\n"
".quad 0x2c38343266252032,0x0a3b353132662520,0x662e6e722e616d66,0x3934326625203233\n"
".quad 0x2c3834326625202c,0x202c363232662520,0x660a3b3530326625,0x33662e6e722e616d\n"
".quad 0x2c30353266252032,0x202c353332662520,0x25202c3531326625,0x6d660a3b39343266\n"
".quad 0x3233662e6e722e61,0x202c313532662520,0x25202c3931326625,0x6625202c38313266\n"
".quad 0x6c756d0a3b303532,0x326625203233662e,0x35326625202c3235,0x4544336630202c31\n"
".quad 0x6d0a3b3933453833,0x25203233662e6c75,0x6625202c33353266,0x326625202c333232\n"
".quad 0x2e616d660a3b3235,0x25203233662e6e72,0x6625202c34353266,0x326625202c383631\n"
".quad 0x35326625202c3438,0x6c672e74730a3b33,0x3233662e6c61626f,0x2c5d396c72255b20\n"
".quad 0x0a3b343532662520,0x39203220636f6c2e,0x6c756d0a31203937,0x326625203233662e\n"
".quad 0x37316625202c3535,0x3438326625202c34,0x36662e7476630a3b,0x6625203233662e34\n"
".quad 0x326625202c343264,0x2e7476630a3b3535,0x203233662e343666,0x25202c3532646625\n"
".quad 0x64610a3b33323266,0x6625203233662e64,0x326625202c363532,0x31326625202c3031\n"
".quad 0x722e616d660a3b35,0x6625203233662e6e,0x326625202c373532,0x30346630202c3635\n"
".quad 0x202c303030303034,0x6d0a3b3530326625,0x25203233662e6c75,0x6625202c38353266\n"
".quad 0x346630202c363532,0x3b30303030303930,0x2e6e722e616d660a,0x3532662520323366\n"
".quad 0x3835326625202c39,0x2c3635326625202c,0x0a3b373532662520,0x662e6e722e616d66\n"
".quad 0x3036326625203233,0x2c3931326625202c,0x202c383132662520,0x630a3b3935326625\n"
".quad 0x662e3436662e7476,0x3632646625203233,0x3b3036326625202c,0x3436662e6c756d0a\n"
".quad 0x202c373264662520,0x30202c3632646625,0x4331374339463364,0x3144384237433137\n"
".quad 0x722e616d660a3b43,0x6625203436662e6e,0x646625202c383264,0x32646625202c3532\n"
".quad 0x3432646625202c37,0x6e722e7476630a3b,0x3436662e3233662e,0x202c313632662520\n"
".quad 0x730a3b3832646625,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d30316c\n"
".quad 0x6f6c2e0a3b313632,0x2030383920322063,0x33662e6c756d0a31,0x2c32363266252032\n"
".quad 0x202c303831662520,0x630a3b3438326625,0x662e3436662e7476,0x3932646625203233\n"
".quad 0x3b3236326625202c,0x3233662e6275730a,0x202c333632662520,0x25202c3531326625\n"
".quad 0x6c2e0a3b30313266,0x303839203220636f,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x326625202c343632,0x30346630202c3336,0x202c303030303034,0x6d0a3b3530326625\n"
".quad 0x25203233662e6c75,0x6625202c35363266,0x346630202c333632,0x3b30303030303930\n"
".quad 0x2e6e722e616d660a,0x3632662520323366,0x3536326625202c36,0x2c3336326625202c\n"
".quad 0x0a3b343632662520,0x662e6e722e616d66,0x3736326625203233,0x2c3931326625202c\n"
".quad 0x202c383132662520,0x630a3b3636326625,0x662e3436662e7476,0x3033646625203233\n"
".quad 0x3b3736326625202c,0x3436662e6c756d0a,0x202c313364662520,0x30202c3033646625\n"
".quad 0x4331374339463364,0x3144384237433137,0x722e616d660a3b43,0x6625203436662e6e\n"
".quad 0x646625202c323364,0x33646625202c3532,0x3932646625202c31,0x6e722e7476630a3b\n"
".quad 0x3436662e3233662e,0x202c383632662520,0x730a3b3233646625,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x6625202c5d31316c,0x6f6c2e0a3b383632,0x2031383920322063\n"
".quad 0x33662e6c756d0a31,0x2c39363266252032,0x202c363831662520,0x630a3b3438326625\n"
".quad 0x662e3436662e7476,0x3333646625203233,0x3b3936326625202c,0x3233662e6275730a\n"
".quad 0x202c303732662520,0x25202c3134326625,0x6d660a3b35313266,0x3233662e6e722e61\n"
".quad 0x202c313732662520,0x30202c3037326625,0x3030303034303466,0x3530326625202c30\n"
".quad 0x33662e6c756d0a3b,0x2c32373266252032,0x202c303732662520,0x3030303930346630\n"
".quad 0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c33373266,0x326625202c323732\n"
".quad 0x37326625202c3037,0x722e616d660a3b31,0x6625203233662e6e,0x326625202c343732\n"
".quad 0x31326625202c3931,0x3337326625202c38,0x36662e7476630a3b,0x6625203233662e34\n"
".quad 0x326625202c343364,0x2e6c756d0a3b3437,0x3364662520343666,0x3433646625202c35\n"
".quad 0x433946336430202c,0x4237433137433137,0x6d660a3b43314438,0x3436662e6e722e61\n"
".quad 0x202c363364662520,0x25202c3532646625,0x6625202c35336466,0x7476630a3b333364\n"
".quad 0x2e3233662e6e722e,0x3732662520343666,0x3633646625202c35,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x2c5d32316c72255b,0x0a3b353732662520,0x39203220636f6c2e\n"
".quad 0x6c756d0a31203238,0x326625203233662e,0x39316625202c3637,0x3438326625202c32\n"
".quad 0x36662e7476630a3b,0x6625203233662e34,0x326625202c373364,0x2e6275730a3b3637\n"
".quad 0x3732662520323366,0x3031326625202c37,0x3b3531326625202c,0x2e6e722e616d660a\n"
".quad 0x3732662520323366,0x3737326625202c38,0x303430346630202c,0x6625202c30303030\n"
".quad 0x6c756d0a3b353032,0x326625203233662e,0x37326625202c3937,0x3930346630202c37\n"
".quad 0x660a3b3030303030,0x33662e6e722e616d,0x2c30383266252032,0x202c393732662520\n"
".quad 0x25202c3737326625,0x6d660a3b38373266,0x3233662e6e722e61,0x202c313832662520\n"
".quad 0x25202c3931326625,0x6625202c38313266,0x7476630a3b303832,0x3233662e3436662e\n"
".quad 0x202c383364662520,0x6d0a3b3138326625,0x25203436662e6c75,0x6625202c39336466\n"
".quad 0x336430202c383364,0x3137433137433946,0x3b43314438423743,0x2e6e722e616d660a\n"
".quad 0x3464662520343666,0x3532646625202c30,0x2c3933646625202c,0x0a3b373364662520\n"
".quad 0x662e6e722e747663,0x25203436662e3233,0x6625202c32383266,0x2e74730a3b303464\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x38326625202c5d33,0x20636f6c2e0a3b32\n"
".quad 0x3220333230312032,0x0a7d0a3b7465720a,0x207972746e652e0a,0x645f524c32315a5f\n"
".quad 0x444341426279685f,0x0a286d665f536650,0x2e206d617261702e,0x32315a5f20343675\n"
".quad 0x6279685f645f524c,0x5f53665044434142,0x6d617261705f6d66,0x7261702e0a2c305f\n"
".quad 0x203436752e206d61,0x645f524c32315a5f,0x444341426279685f,0x705f6d665f536650\n"
".quad 0x0a2c315f6d617261,0x2e206d617261702e,0x32315a5f20323366,0x6279685f645f524c\n"
".quad 0x5f53665044434142,0x6d617261705f6d66,0x7261702e0a2c325f,0x203436752e206d61\n"
".quad 0x645f524c32315a5f,0x444341426279685f,0x705f6d665f536650,0x290a335f6d617261\n"
".quad 0x206765722e0a7b0a,0x3c6625203233662e,0x722e0a3b3e343431,0x203436662e206765\n"
".quad 0x3b3e34323c646625,0x702e206765722e0a,0x373c702520646572,0x206765722e0a3b3e\n"
".quad 0x3c7225203233732e,0x65722e0a3b3e3035,0x25203436732e2067,0x3b3e3333313c6c72\n"
".quad 0x61702e646c0a0a0a,0x203436752e6d6172,0x5b202c30316c7225,0x645f524c32315a5f\n"
".quad 0x444341426279685f,0x705f6d665f536650,0x3b5d305f6d617261,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x315a5f5b202c316c,0x79685f645f524c32,0x5366504443414262\n"
".quad 0x617261705f6d665f,0x646c0a3b5d315f6d,0x752e6d617261702e,0x2c326c7225203436\n"
".quad 0x524c32315a5f5b20,0x41426279685f645f,0x6d665f5366504443,0x335f6d617261705f\n"
".quad 0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c,0x316c7225202c336c\n"
".quad 0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e,0x30316c7225202c34\n"
".quad 0x3220636f6c2e0a3b,0x0a31203832303120,0x203233752e766f6d,0x746e25202c347225\n"
".quad 0x6f6d0a3b782e6469,0x7225203233752e76,0x6961746325202c35,0x766f6d0a3b782e64\n"
".quad 0x367225203233752e,0x782e64697425202c,0x6f6c2e64616d0a3b,0x317225203233732e\n"
".quad 0x25202c347225202c,0x3b367225202c3572,0x203220636f6c2e0a,0x6d0a312039323031\n"
".quad 0x25203233752e766f,0x69746e25202c3772,0x766f6d0a3b792e64,0x387225203233752e\n"
".quad 0x646961746325202c,0x2e766f6d0a3b792e,0x2c39722520323375,0x3b792e6469742520\n"
".quad 0x2e6f6c2e64616d0a,0x2c32722520323373,0x7225202c37722520,0x0a3b397225202c38\n"
".quad 0x31203220636f6c2e,0x76630a3120303330,0x3233662e6e722e74,0x316625203233732e\n"
".quad 0x0a3b317225202c32,0x662e6e722e616d66,0x2c33316625203233,0x30202c3231662520\n"
".quad 0x3030303038453366,0x4333346630202c30,0x2e0a3b3030304446,0x3031203220636f6c\n"
".quad 0x7476630a31203133,0x2e3233662e6e722e,0x2c32662520323373,0x6d660a3b32722520\n"
".quad 0x3233662e6e722e61,0x25202c3431662520,0x45336630202c3266,0x202c303030303038\n"
".quad 0x3044463933346630,0x2e7476630a3b3030,0x203233752e343675,0x7225202c356c7225\n"
".quad 0x20636f6c2e0a3b31,0x3120323330312032,0x3436732e7476630a,0x6c7225203233732e\n"
".quad 0x0a3b327225202c36,0x732e6f6c2e64616d,0x2c376c7225203436,0x25202c366c722520\n"
".quad 0x6c7225202c326c72,0x662e6464610a3b35,0x2c35316625203233,0x30202c3331662520\n"
".quad 0x3030434646334366,0x662e6464610a3b30,0x2c36316625203233,0x30202c3431662520\n"
".quad 0x3030434642334366,0x20636f6c2e0a3b30,0x6d0a312034372032,0x25203233662e6c75\n"
".quad 0x316625202c373166,0x3b36316625202c36,0x2e6e722e616d660a,0x3831662520323366\n"
".quad 0x202c35316625202c,0x6625202c35316625,0x707465730a3b3731,0x203233662e746c2e\n"
".quad 0x316625202c317025,0x3832346630202c38,0x610a3b3030303030,0x25203233732e6464\n"
".quad 0x2c317225202c3372,0x7465730a3b312d20,0x3233752e74672e70,0x7225202c32702520\n"
".quad 0x0a3b353637202c33,0x31203220636f6c2e,0x65730a3120353330,0x33732e746c2e7074\n"
".quad 0x25202c3370252032,0x6f0a3b31202c3272,0x2520646572702e72,0x2c327025202c3470\n"
".quad 0x6c2e0a3b33702520,0x333031203220636f,0x707465730a312035,0x203233732e74672e\n"
".quad 0x327225202c357025,0x6f0a3b303135202c,0x2520646572702e72,0x2c347025202c3670\n"
".quad 0x6c2e0a3b35702520,0x333031203220636f,0x367025400a312035,0x3142422061726220\n"
".quad 0x68730a0a3b345f39,0x7225203436622e6c,0x6c7225202c31316c,0x730a3b3233202c37\n"
".quad 0x25203436732e7268,0x7225202c32316c72,0x3b3233202c31316c,0x203220636f6c2e0a\n"
".quad 0x730a312030343031,0x25203436622e6c68,0x7225202c33316c72,0x0a3b32202c32316c\n"
".quad 0x203436732e646461,0x25202c34316c7225,0x6c7225202c346c72,0x672e646c0a3b3331\n"
".quad 0x33662e6c61626f6c,0x5b202c3366252032,0x0a3b5d34316c7225,0x203233732e646461\n"
".quad 0x7225202c31317225,0x2e0a3b312d202c32,0x3031203220636f6c,0x7476630a31203134\n"
".quad 0x3233752e3436752e,0x202c35316c722520,0x64610a3b31317225,0x7225203436732e64\n"
".quad 0x6c7225202c36316c,0x34323031202c3531,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3233316c72,0x645f524c32315a5f,0x444341426279685f,0x705f6d665f536650\n"
".quad 0x3b5d335f6d617261,0x203220636f6c2e0a,0x6d0a312031343031,0x36732e6f6c2e6461\n"
".quad 0x2c37316c72252034,0x202c36316c722520,0x202c3233316c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x6c7225202c38316c,0x0a3b3233202c3731,0x203436732e726873\n"
".quad 0x25202c39316c7225,0x3233202c38316c72,0x3220636f6c2e0a3b,0x0a31203134303120\n"
".quad 0x203436622e6c6873,0x25202c30326c7225,0x3b32202c39316c72,0x3436732e6464610a\n"
".quad 0x202c31326c722520,0x7225202c346c7225,0x2e646c0a3b30326c,0x662e6c61626f6c67\n"
".quad 0x202c346625203233,0x3b5d31326c72255b,0x203220636f6c2e0a,0x610a312032343031\n"
".quad 0x25203233732e6464,0x327225202c333172,0x7476630a3b31202c,0x3233752e3436752e\n"
".quad 0x202c32326c722520,0x64610a3b33317225,0x7225203436732e64,0x6c7225202c33326c\n"
".quad 0x38343032202c3232,0x3220636f6c2e0a3b,0x0a31203234303120,0x732e6f6c2e64616d\n"
".quad 0x34326c7225203436,0x2c33326c7225202c,0x2c3233316c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x7225202c35326c72,0x3b3233202c34326c,0x3436732e7268730a\n"
".quad 0x202c36326c722520,0x33202c35326c7225,0x20636f6c2e0a3b32,0x3120323430312032\n"
".quad 0x3436622e6c68730a,0x202c37326c722520,0x32202c36326c7225,0x36732e6464610a3b\n"
".quad 0x2c38326c72252034,0x25202c346c722520,0x646c0a3b37326c72,0x2e6c61626f6c672e\n"
".quad 0x2c35662520323366,0x5d38326c72255b20,0x3220636f6c2e0a3b,0x0a31203334303120\n"
".quad 0x662e6e722e747663,0x25203233732e3233,0x337225202c353566,0x33662e6464610a3b\n"
".quad 0x202c333566252032,0x6630202c35356625,0x3030303030304633,0x33662e6464610a3b\n"
".quad 0x202c303366252032,0x336630202c326625,0x3b30303030303046,0x3233752e766f6d0a\n"
".quad 0x30202c3531722520,0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x326625202c393166,0x2c31326625202c30,0x202c7d3232662520,0x5f6665527865745b\n"
".quad 0x66257b202c433166,0x30336625202c3335,0x6c2e090a0a3b5d7d,0x343031203220636f\n"
".quad 0x2e6464610a312034,0x3631722520323373,0x31202c317225202c,0x6e722e7476630a3b\n"
".quad 0x3233732e3233662e,0x25202c3635662520,0x6464610a3b363172,0x346625203233662e\n"
".quad 0x2c36356625202c37,0x3030304633663020,0x74090a0a3b303030,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x202c353266257b20,0x6625202c36326625,0x38326625202c3732\n"
".quad 0x527865745b202c7d,0x202c4333665f6665,0x25202c373466257b,0x0a0a3b5d7d303366\n"
".quad 0x203220636f6c2e09,0x630a312035343031,0x33662e6e722e7476,0x6625203233732e32\n"
".quad 0x31317225202c3735,0x33662e6464610a3b,0x202c323466252032,0x6630202c37356625\n"
".quad 0x3030303030304633,0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x336625202c313366,0x2c33336625202c32,0x202c7d3433662520,0x5f6665527865745b\n"
".quad 0x66257b202c433566,0x32346625202c3335,0x090a090a0a3b5d7d,0x762e64322e786574\n"
".quad 0x33662e3233662e34,0x2c373366257b2032,0x25202c3833662520,0x346625202c393366\n"
".quad 0x7865745b202c7d30,0x2c4336665f666552,0x202c373466257b20,0x0a3b5d7d32346625\n"
".quad 0x3220636f6c2e090a,0x0a31203734303120,0x662e6e722e747663,0x25203233732e3233\n"
".quad 0x317225202c383566,0x662e6464610a3b33,0x2c34356625203233,0x30202c3835662520\n"
".quad 0x3030303030463366,0x786574090a0a3b30,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x6625202c33346625,0x35346625202c3434,0x2c7d36346625202c,0x6665527865745b20\n"
".quad 0x257b202c4337665f,0x356625202c373466,0x0a090a0a3b5d7d34,0x2e64322e78657409\n"
".quad 0x662e3233662e3476,0x393466257b203233,0x202c30356625202c,0x6625202c31356625\n"
".quad 0x65745b202c7d3235,0x4338665f66655278,0x2c333566257b202c,0x3b5d7d3435662520\n"
".quad 0x732e646461090a0a,0x39326c7225203436,0x202c366c7225202c,0x6c2e0a3b34383533\n"
".quad 0x353031203220636f,0x2e64616d0a312036,0x25203436732e6f6c,0x7225202c30336c72\n"
".quad 0x6c7225202c39326c,0x6c7225202c323331,0x622e6c68730a3b35,0x31336c7225203436\n"
".quad 0x2c30336c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x336c7225202c3233\n"
".quad 0x2e0a3b3233202c31,0x3031203220636f6c,0x6c68730a31203635,0x6c7225203436622e\n"
".quad 0x336c7225202c3333,0x64610a3b32202c32,0x7225203436732e64,0x336c7225202c386c\n"
".quad 0x3b33336c7225202c,0x3436732e6464610a,0x202c34336c722520,0x3034202c366c7225\n"
".quad 0x636f6c2e0a3b3639,0x2037353031203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x336c7225202c3533,0x33316c7225202c34,0x3b356c7225202c32,0x3436622e6c68730a\n"
".quad 0x202c36336c722520,0x33202c35336c7225,0x732e7268730a3b32,0x37336c7225203436\n"
".quad 0x2c36336c7225202c,0x6f6c2e0a3b323320,0x3735303120322063,0x622e6c68730a3120\n"
".quad 0x38336c7225203436,0x2c37336c7225202c,0x2e6464610a3b3220,0x396c722520343673\n"
".quad 0x202c336c7225202c,0x2e0a3b38336c7225,0x3031203220636f6c,0x7025400a31203934\n"
".quad 0x4242206172622031,0x2e0a0a3b335f3931,0x3031203220636f6c,0x6464610a31203336\n"
".quad 0x356625203233662e,0x202c336625202c39,0x64610a3b39316625,0x6625203233662e64\n"
".quad 0x39356625202c3036,0x610a3b346625202c,0x25203233662e6464,0x366625202c313666\n"
".quad 0x3b35326625202c30,0x3233662e6464610a,0x25202c3236662520,0x356625202c313666\n"
".quad 0x33662e6464610a3b,0x202c333666252032,0x6625202c32366625,0x2e6464610a3b3133\n"
".quad 0x3436662520323366,0x202c33366625202c,0x64610a3b37336625,0x6625203233662e64\n"
".quad 0x34366625202c3536,0x0a3b33346625202c,0x203233662e646461,0x6625202c36366625\n"
".quad 0x39346625202c3536,0x33662e6275730a3b,0x202c373666252032,0x6625202c39316625\n"
".quad 0x2e6464610a3b3532,0x3836662520323366,0x202c37366625202c,0x75730a3b31336625\n"
".quad 0x6625203233662e62,0x38366625202c3936,0x0a3b37336625202c,0x203233662e627573\n"
".quad 0x6625202c30376625,0x33346625202c3936,0x33662e6464610a3b,0x202c313766252032\n"
".quad 0x6625202c30376625,0x2e6275730a3b3934,0x3237662520323366,0x25202c346625202c\n"
".quad 0x2e6464610a3b3566,0x3337662520323366,0x202c32376625202c,0x64610a3b31336625\n"
".quad 0x6625203233662e64,0x33376625202c3437,0x0a3b37336625202c,0x203233662e627573\n"
".quad 0x6625202c35376625,0x33346625202c3437,0x33662e6275730a3b,0x202c363766252032\n"
".quad 0x6625202c35376625,0x2e6c756d0a3b3934,0x3737662520323366,0x202c36376625202c\n"
".quad 0x6d660a3b36376625,0x3233662e6e722e61,0x25202c3837662520,0x376625202c313766\n"
".quad 0x3b37376625202c31,0x3233662e766f6d0a,0x30202c3937662520,0x3030303043463366\n"
".quad 0x20636f6c2e0a3b30,0x3120333630312032,0x3233662e67656e0a,0x25202c3038662520\n"
".quad 0x616d660a3b383766,0x203233662e6e722e,0x6625202c31386625,0x39376625202c3038\n"
".quad 0x0a3b36366625202c,0x662e6e722e616d66,0x2c32386625203233,0x30202c3138662520\n"
".quad 0x3345383345454266,0x0a3b336625202c39,0x203233662e67656e,0x6625202c33386625\n"
".quad 0x702e646c0a3b3238,0x3233662e6d617261,0x202c333431662520,0x5f524c32315a5f5b\n"
".quad 0x4341426279685f64,0x5f6d665f53665044,0x5d325f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x0a31203336303120,0x662e6e722e616d66,0x2c34386625203233,0x25202c3338662520\n"
".quad 0x6625202c33343166,0x662e766f6d0a3b33,0x2c35386625203233,0x3030343034663020\n"
".quad 0x6f6c2e0a3b303030,0x3336303120322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x31376625202c3638,0x303430346630202c,0x6625202c30303030,0x2e6c756d0a3b3636\n"
".quad 0x3738662520323366,0x202c31376625202c,0x3030303930346630,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x386625202c383866,0x2c31376625202c37,0x660a3b3638662520\n"
".quad 0x33662e6e722e616d,0x202c393866252032,0x6625202c30386625,0x38386625202c3937\n"
".quad 0x33662e766f6d0a3b,0x202c303966252032,0x4538334544336630,0x636f6c2e0a3b3933\n"
".quad 0x2033363031203220,0x33662e67656e0a31,0x202c313966252032,0x6d660a3b39386625\n"
".quad 0x3233662e6e722e61,0x25202c3239662520,0x396625202c313966,0x3b39316625202c30\n"
".quad 0x3233662e67656e0a,0x25202c3339662520,0x616d660a3b323966,0x203233662e6e722e\n"
".quad 0x6625202c34396625,0x34316625202c3339,0x3b39316625202c33,0x2e6e722e616d660a\n"
".quad 0x3539662520323366,0x202c36376625202c,0x3030303430346630,0x36366625202c3030\n"
".quad 0x33662e6c756d0a3b,0x202c363966252032,0x6630202c36376625,0x3030303030393034\n"
".quad 0x6e722e616d660a3b,0x396625203233662e,0x2c36396625202c37,0x25202c3637662520\n"
".quad 0x616d660a3b353966,0x203233662e6e722e,0x6625202c38396625,0x39376625202c3038\n"
".quad 0x0a3b37396625202c,0x203233662e67656e,0x6625202c39396625,0x2e616d660a3b3839\n"
".quad 0x25203233662e6e72,0x6625202c30303166,0x30396625202c3939,0x6e0a3b346625202c\n"
".quad 0x25203233662e6765,0x6625202c31303166,0x616d660a3b303031,0x203233662e6e722e\n"
".quad 0x25202c3230316625,0x6625202c31303166,0x346625202c333431,0x33662e67656e0a3b\n"
".quad 0x2c33303166252032,0x660a3b3137662520,0x33662e6e722e616d,0x2c34303166252032\n"
".quad 0x202c333031662520,0x6625202c35386625,0x2e616d660a3b3636,0x25203233662e6e72\n"
".quad 0x6625202c35303166,0x31376625202c3738,0x3b3430316625202c,0x2e6e722e616d660a\n"
".quad 0x3031662520323366,0x2c30386625202c36,0x25202c3937662520,0x656e0a3b35303166\n"
".quad 0x6625203233662e67,0x316625202c373031,0x2e616d660a3b3630,0x25203233662e6e72\n"
".quad 0x6625202c38303166,0x396625202c373031,0x3b35326625202c30,0x3233662e67656e0a\n"
".quad 0x202c393031662520,0x660a3b3830316625,0x33662e6e722e616d,0x2c30313166252032\n"
".quad 0x202c393031662520,0x25202c3334316625,0x67656e0a3b353266,0x316625203233662e\n"
".quad 0x36376625202c3131,0x6e722e616d660a3b,0x316625203233662e,0x31316625202c3231\n"
".quad 0x2c35386625202c31,0x660a3b3636662520,0x33662e6e722e616d,0x2c33313166252032\n"
".quad 0x25202c3639662520,0x316625202c363766,0x2e616d660a3b3231,0x25203233662e6e72\n"
".quad 0x6625202c34313166,0x39376625202c3038,0x3b3331316625202c,0x3233662e67656e0a\n"
".quad 0x202c353131662520,0x660a3b3431316625,0x33662e6e722e616d,0x2c36313166252032\n"
".quad 0x202c353131662520,0x6625202c30396625,0x662e67656e0a3b35,0x3731316625203233\n"
".quad 0x3b3631316625202c,0x2e6e722e616d660a,0x3131662520323366,0x3731316625202c38\n"
".quad 0x2c3334316625202c,0x64610a3b35662520,0x6625203233662e64,0x376625202c393131\n"
".quad 0x3b36376625202c31,0x2e6e722e616d660a,0x3231662520323366,0x3931316625202c30\n"
".quad 0x303430346630202c,0x6625202c30303030,0x2e6c756d0a3b3636,0x3231662520323366\n"
".quad 0x3931316625202c31,0x303930346630202c,0x6d660a3b30303030,0x3233662e6e722e61\n"
".quad 0x202c323231662520,0x25202c3132316625,0x6625202c39313166,0x616d660a3b303231\n"
".quad 0x203233662e6e722e,0x25202c3332316625,0x376625202c303866,0x3232316625202c39\n"
".quad 0x36662e7476630a3b,0x6625203233662e34,0x32316625202c3164,0x662e766f6d0a3b33\n"
".quad 0x2c32646625203436,0x3743394633643020,0x3842374331374331,0x6f6c2e0a3b433144\n"
".quad 0x3336303120322063,0x662e7476630a3120,0x25203233662e3436,0x336625202c336466\n"
".quad 0x662e67656e0a3b31,0x2c34646625203436,0x660a3b3164662520,0x36662e6e722e616d\n"
".quad 0x202c356466252034,0x6625202c34646625,0x33646625202c3264,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x34316625202c3664,0x662e67656e0a3b33,0x2c37646625203436\n"
".quad 0x660a3b3664662520,0x36662e6e722e616d,0x202c386466252034,0x6625202c37646625\n"
".quad 0x33646625202c3564,0x6e722e7476630a3b,0x3436662e3233662e,0x202c343231662520\n"
".quad 0x75730a3b38646625,0x6625203233662e62,0x376625202c353231,0x3b31376625202c36\n"
".quad 0x203220636f6c2e0a,0x660a312033363031,0x33662e6e722e616d,0x2c36323166252032\n"
".quad 0x202c353231662520,0x3030303430346630,0x36366625202c3030,0x33662e6c756d0a3b\n"
".quad 0x2c37323166252032,0x202c353231662520,0x3030303930346630,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x6625202c38323166,0x316625202c373231,0x32316625202c3532\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x386625202c393231,0x2c39376625202c30\n"
".quad 0x0a3b383231662520,0x2e3436662e747663,0x3964662520323366,0x3b3932316625202c\n"
".quad 0x3436662e7476630a,0x646625203233662e,0x37336625202c3031,0x36662e67656e0a3b\n"
".quad 0x2c31316466252034,0x660a3b3964662520,0x36662e6e722e616d,0x2c32316466252034\n"
".quad 0x202c313164662520,0x6625202c32646625,0x616d660a3b303164,0x203436662e6e722e\n"
".quad 0x25202c3331646625,0x646625202c376466,0x31646625202c3231,0x722e7476630a3b30\n"
".quad 0x36662e3233662e6e,0x2c30333166252034,0x0a3b333164662520,0x203233662e627573\n"
".quad 0x25202c3133316625,0x6625202c33303166,0x2e616d660a3b3637,0x25203233662e6e72\n"
".quad 0x6625202c32333166,0x346630202c313331,0x2c30303030303430,0x6d0a3b3636662520\n"
".quad 0x25203233662e6c75,0x6625202c33333166,0x346630202c313331,0x3b30303030303930\n"
".quad 0x2e6e722e616d660a,0x3331662520323366,0x3333316625202c34,0x2c3133316625202c\n"
".quad 0x0a3b323331662520,0x662e6e722e616d66,0x3533316625203233,0x202c30386625202c\n"
".quad 0x6625202c39376625,0x7476630a3b343331,0x3233662e3436662e,0x202c343164662520\n"
".quad 0x630a3b3533316625,0x662e3436662e7476,0x3531646625203233,0x0a3b33346625202c\n"
".quad 0x203436662e67656e,0x25202c3631646625,0x6d660a3b34316466,0x3436662e6e722e61\n"
".quad 0x202c373164662520,0x25202c3631646625,0x646625202c326466,0x2e616d660a3b3531\n"
".quad 0x25203436662e6e72,0x6625202c38316466,0x31646625202c3764,0x3531646625202c37\n"
".quad 0x6e722e7476630a3b,0x3436662e3233662e,0x202c363331662520,0x730a3b3831646625\n"
".quad 0x25203233662e6275,0x6625202c37333166,0x36376625202c3137,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x33316625202c3833,0x3430346630202c37,0x25202c3030303030\n"
".quad 0x6c756d0a3b363666,0x316625203233662e,0x33316625202c3933,0x3930346630202c37\n"
".quad 0x660a3b3030303030,0x33662e6e722e616d,0x2c30343166252032,0x202c393331662520\n"
".quad 0x25202c3733316625,0x6d660a3b38333166,0x3233662e6e722e61,0x202c313431662520\n"
".quad 0x6625202c30386625,0x34316625202c3937,0x662e7476630a3b30,0x25203233662e3436\n"
".quad 0x6625202c39316466,0x7476630a3b313431,0x3233662e3436662e,0x202c303264662520\n"
".quad 0x656e0a3b39346625,0x6625203436662e67,0x646625202c313264,0x2e616d660a3b3931\n"
".quad 0x25203436662e6e72,0x6625202c32326466,0x646625202c313264,0x3032646625202c32\n"
".quad 0x6e722e616d660a3b,0x646625203436662e,0x37646625202c3332,0x2c3232646625202c\n"
".quad 0x0a3b303264662520,0x662e6e722e747663,0x25203436662e3233,0x6625202c32343166\n"
".quad 0x2e646c0a3b333264,0x36752e6d61726170,0x3133316c72252034,0x4c32315a5f5b202c\n"
".quad 0x426279685f645f52,0x665f536650444341,0x5f6d617261705f6d,0x636f6c2e0a3b5d33\n"
".quad 0x2032333031203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x366c7225202c3134\n"
".quad 0x3133316c7225202c,0x0a3b356c7225202c,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x5a5f5b202c393231,0x685f645f524c3231,0x6650444341426279,0x7261705f6d665f53\n"
".quad 0x630a3b5d315f6d61,0x672e6f742e617476,0x36752e6c61626f6c,0x2c32346c72252034\n"
".quad 0x3b3932316c722520,0x3436622e6c68730a,0x202c33346c722520,0x33202c31346c7225\n"
".quad 0x732e7268730a3b32,0x34346c7225203436,0x2c33346c7225202c,0x6f6c2e0a3b323320\n"
".quad 0x3436303120322063,0x622e6c68730a3120,0x35346c7225203436,0x2c34346c7225202c\n"
".quad 0x2e6464610a3b3220,0x346c722520343673,0x32346c7225202c36,0x3b35346c7225202c\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d36346c7225,0x64610a3b34386625\n"
".quad 0x7225203436732e64,0x6c7225202c37346c,0x0a3b323135202c36,0x31203220636f6c2e\n"
".quad 0x616d0a3120303530,0x3436732e6f6c2e64,0x202c38346c722520,0x25202c37346c7225\n"
".quad 0x25202c3133316c72,0x6c68730a3b356c72,0x6c7225203436622e,0x346c7225202c3934\n"
".quad 0x730a3b3233202c38,0x25203436732e7268,0x7225202c30356c72,0x3b3233202c39346c\n"
".quad 0x203220636f6c2e0a,0x730a312030353031,0x25203436622e6c68,0x7225202c31356c72\n"
".quad 0x0a3b32202c30356c,0x203436732e646461,0x25202c32356c7225,0x7225202c32346c72\n"
".quad 0x6f6c2e0a3b31356c,0x3536303120322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x5d32356c72255b20,0x0a3b34396625202c,0x203436732e646461,0x25202c33356c7225\n"
".quad 0x323031202c366c72,0x20636f6c2e0a3b34,0x3120313530312032,0x2e6f6c2e64616d0a\n"
".quad 0x356c722520343673,0x33356c7225202c34,0x3133316c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x25202c35356c7225,0x3233202c34356c72,0x36732e7268730a3b\n"
".quad 0x2c36356c72252034,0x202c35356c722520,0x636f6c2e0a3b3233,0x2031353031203220\n"
".quad 0x36622e6c68730a31,0x2c37356c72252034,0x202c36356c722520,0x732e6464610a3b32\n"
".quad 0x38356c7225203436,0x2c32346c7225202c,0x0a3b37356c722520,0x31203220636f6c2e\n"
".quad 0x74730a3120363630,0x2e6c61626f6c672e,0x6c72255b20323366,0x316625202c5d3835\n"
".quad 0x2e6464610a3b3230,0x356c722520343673,0x2c366c7225202c39,0x2e0a3b3633353120\n"
".quad 0x3031203220636f6c,0x64616d0a31203235,0x203436732e6f6c2e,0x25202c30366c7225\n"
".quad 0x7225202c39356c72,0x7225202c3133316c,0x2e6c68730a3b356c,0x366c722520343662\n"
".quad 0x30366c7225202c31,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c32366c\n"
".quad 0x0a3b3233202c3136,0x31203220636f6c2e,0x68730a3120323530,0x7225203436622e6c\n"
".quad 0x6c7225202c33366c,0x610a3b32202c3236,0x25203436732e6464,0x7225202c34366c72\n"
".quad 0x6c7225202c32346c,0x636f6c2e0a3b3336,0x2037363031203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x2c5d34366c72255b,0x0a3b303131662520,0x203436732e646461\n"
".quad 0x25202c35366c7225,0x343032202c366c72,0x20636f6c2e0a3b38,0x3120333530312032\n"
".quad 0x2e6f6c2e64616d0a,0x366c722520343673,0x35366c7225202c36,0x3133316c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x25202c37366c7225,0x3233202c36366c72\n"
".quad 0x36732e7268730a3b,0x2c38366c72252034,0x202c37366c722520,0x636f6c2e0a3b3233\n"
".quad 0x2033353031203220,0x36622e6c68730a31,0x2c39366c72252034,0x202c38366c722520\n"
".quad 0x732e6464610a3b32,0x30376c7225203436,0x2c32346c7225202c,0x0a3b39366c722520\n"
".quad 0x31203220636f6c2e,0x74730a3120383630,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x316625202c5d3037,0x2e6464610a3b3831,0x376c722520343673,0x2c366c7225202c31\n"
".quad 0x2e0a3b3036353220,0x3031203220636f6c,0x64616d0a31203435,0x203436732e6f6c2e\n"
".quad 0x25202c32376c7225,0x7225202c31376c72,0x7225202c3133316c,0x2e6c68730a3b356c\n"
".quad 0x376c722520343662,0x32376c7225202c33,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c34376c,0x0a3b3233202c3337,0x31203220636f6c2e,0x68730a3120343530\n"
".quad 0x7225203436622e6c,0x6c7225202c35376c,0x610a3b32202c3437,0x25203436732e6464\n"
".quad 0x7225202c36376c72,0x6c7225202c32346c,0x636f6c2e0a3b3537,0x2039363031203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d36376c72255b,0x0a3b343231662520\n"
".quad 0x203436732e646461,0x25202c37376c7225,0x373033202c366c72,0x20636f6c2e0a3b32\n"
".quad 0x3120353530312032,0x2e6f6c2e64616d0a,0x376c722520343673,0x37376c7225202c38\n"
".quad 0x3133316c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x25202c39376c7225\n"
".quad 0x3233202c38376c72,0x36732e7268730a3b,0x2c30386c72252034,0x202c39376c722520\n"
".quad 0x636f6c2e0a3b3233,0x2035353031203220,0x36622e6c68730a31,0x2c31386c72252034\n"
".quad 0x202c30386c722520,0x732e6464610a3b32,0x32386c7225203436,0x2c32346c7225202c\n"
".quad 0x0a3b31386c722520,0x31203220636f6c2e,0x74730a3120303730,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x316625202c5d3238,0x636f6c2e0a3b3033,0x2036353031203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x326c7225202c3438,0x33316c7225202c39\n"
".quad 0x3b356c7225202c31,0x3436622e6c68730a,0x202c35386c722520,0x33202c34386c7225\n"
".quad 0x732e7268730a3b32,0x36386c7225203436,0x2c35386c7225202c,0x6f6c2e0a3b323320\n"
".quad 0x3635303120322063,0x622e6c68730a3120,0x37386c7225203436,0x2c36386c7225202c\n"
".quad 0x2e6464610a3b3220,0x386c722520343673,0x32346c7225202c38,0x3b37386c7225202c\n"
".quad 0x203220636f6c2e0a,0x730a312031373031,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x6625202c5d38386c,0x6f6c2e0a3b363331,0x3237303120322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x2c5d396c72255b20,0x0a3b323431662520,0x31203220636f6c2e\n"
".quad 0x65720a3220353730,0x393142420a0a3b74,0x2e6464610a3a335f,0x396c722520343673\n"
".quad 0x2c366c7225202c30,0x646c0a3b32313520,0x752e6d617261702e,0x33316c7225203436\n"
".quad 0x32315a5f5b202c30,0x6279685f645f524c,0x5f53665044434142,0x6d617261705f6d66\n"
".quad 0x6f6c2e0a3b5d335f,0x3035303120322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c32396c,0x316c7225202c3039,0x356c7225202c3033,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3832316c72,0x645f524c32315a5f,0x444341426279685f\n"
".quad 0x705f6d665f536650,0x3b5d315f6d617261,0x6f742e617476630a,0x2e6c61626f6c672e\n"
".quad 0x396c722520343675,0x32316c7225202c33,0x622e6c68730a3b38,0x34396c7225203436\n"
".quad 0x2c32396c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x396c7225202c3539\n"
".quad 0x2e0a3b3233202c34,0x3031203220636f6c,0x6c68730a31203035,0x6c7225203436622e\n"
".quad 0x396c7225202c3639,0x64610a3b32202c35,0x7225203436732e64,0x6c7225202c37396c\n"
".quad 0x396c7225202c3339,0x6c672e74730a3b36,0x3233662e6c61626f,0x5d37396c72255b20\n"
".quad 0x0a3b35326625202c,0x203436732e646461,0x25202c38396c7225,0x323031202c366c72\n"
".quad 0x20636f6c2e0a3b34,0x3120313530312032,0x2e6f6c2e64616d0a,0x396c722520343673\n"
".quad 0x38396c7225202c39,0x3033316c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3030316c7225,0x33202c39396c7225,0x732e7268730a3b32,0x30316c7225203436\n"
".quad 0x30316c7225202c31,0x2e0a3b3233202c30,0x3031203220636f6c,0x6c68730a31203135\n"
".quad 0x6c7225203436622e,0x6c7225202c323031,0x0a3b32202c313031,0x203436732e646461\n"
".quad 0x202c3330316c7225,0x25202c33396c7225,0x730a3b3230316c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3330316c,0x2e6464610a3b3566,0x316c722520343673\n"
".quad 0x366c7225202c3430,0x0a3b36333531202c,0x31203220636f6c2e,0x616d0a3120323530\n"
".quad 0x3436732e6f6c2e64,0x2c3530316c722520,0x2c3430316c722520,0x2c3033316c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3630316c72,0x33202c3530316c72\n"
".quad 0x732e7268730a3b32,0x30316c7225203436,0x30316c7225202c37,0x2e0a3b3233202c36\n"
".quad 0x3031203220636f6c,0x6c68730a31203235,0x6c7225203436622e,0x6c7225202c383031\n"
".quad 0x0a3b32202c373031,0x203436732e646461,0x202c3930316c7225,0x25202c33396c7225\n"
".quad 0x730a3b3830316c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3930316c\n"
".quad 0x6464610a3b393166,0x6c7225203436732e,0x6c7225202c303131,0x3b38343032202c36\n"
".quad 0x203220636f6c2e0a,0x6d0a312033353031,0x36732e6f6c2e6461,0x3131316c72252034\n"
".quad 0x3031316c7225202c,0x3033316c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3231316c7225,0x202c3131316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3331,0x0a3b3233202c3231,0x31203220636f6c2e,0x68730a3120333530\n"
".quad 0x7225203436622e6c,0x7225202c3431316c,0x3b32202c3331316c,0x3436732e6464610a\n"
".quad 0x2c3531316c722520,0x202c33396c722520,0x0a3b3431316c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3531316c72,0x6464610a3b346625,0x6c7225203436732e\n"
".quad 0x6c7225202c363131,0x3b30363532202c36,0x203220636f6c2e0a,0x6d0a312034353031\n"
".quad 0x36732e6f6c2e6461,0x3731316c72252034,0x3631316c7225202c,0x3033316c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3831316c7225,0x202c3731316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3931,0x0a3b3233202c3831\n"
".quad 0x31203220636f6c2e,0x68730a3120343530,0x7225203436622e6c,0x7225202c3032316c\n"
".quad 0x3b32202c3931316c,0x3436732e6464610a,0x2c3132316c722520,0x202c33396c722520\n"
".quad 0x0a3b3032316c7225,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3132316c72\n"
".quad 0x64610a3b33346625,0x7225203436732e64,0x7225202c3232316c,0x32373033202c366c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203535303120,0x732e6f6c2e64616d,0x32316c7225203436\n"
".quad 0x32316c7225202c33,0x33316c7225202c32,0x3b356c7225202c30,0x3436622e6c68730a\n"
".quad 0x2c3432316c722520,0x2c3332316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c353231,0x3b3233202c343231,0x203220636f6c2e0a,0x730a312035353031\n"
".quad 0x25203436622e6c68,0x25202c3632316c72,0x32202c3532316c72,0x36732e6464610a3b\n"
".quad 0x3732316c72252034,0x2c33396c7225202c,0x3b3632316c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3732316c7225,0x2e0a3b3934662520,0x3031203220636f6c\n"
".quad 0x2e74730a31203635,0x662e6c61626f6c67,0x386c72255b203233,0x3b31336625202c5d\n"
".quad 0x203220636f6c2e0a,0x730a312037353031,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x336625202c5d396c,0x393142420a0a3b37,0x636f6c2e0a3a345f,0x2035373031203220\n"
".quad 0x7d0a3b7465720a32,0x7972746e652e0a0a,0x5f524c33315a5f20,0x4341426279685f64\n"
".quad 0x6d665f5366503244,0x617261702e0a2869,0x5f203436752e206d,0x5f645f524c33315a\n"
".quad 0x3244434142627968,0x5f696d665f536650,0x2c305f6d61726170,0x206d617261702e0a\n"
".quad 0x315a5f203436752e,0x79685f645f524c33,0x6650324443414262,0x61705f696d665f53\n"
".quad 0x2e0a2c315f6d6172,0x662e206d61726170,0x4c33315a5f203233,0x426279685f645f52\n"
".quad 0x5f53665032444341,0x617261705f696d66,0x61702e0a2c325f6d,0x3436752e206d6172\n"
".quad 0x5f524c33315a5f20,0x4341426279685f64,0x6d665f5366503244,0x5f6d617261705f69\n"
".quad 0x617261702e0a2c33,0x5f203233752e206d,0x5f645f524c33315a,0x3244434142627968\n"
".quad 0x5f696d665f536650,0x0a345f6d61726170,0x6765722e0a7b0a29,0x6625203233662e20\n"
".quad 0x2e0a3b3e3434313c,0x3436662e20676572,0x3e34323c64662520,0x2e206765722e0a3b\n"
".quad 0x3c70252064657270,0x6765722e0a3b3e39,0x7225203233732e20,0x722e0a3b3e35353c\n"
".quad 0x203436732e206765,0x3e3333313c6c7225,0x702e646c0a0a0a3b,0x3436752e6d617261\n"
".quad 0x202c30316c722520,0x5f524c33315a5f5b,0x4341426279685f64,0x6d665f5366503244\n"
".quad 0x5f6d617261705f69,0x702e646c0a3b5d30,0x3436752e6d617261,0x5b202c316c722520\n"
".quad 0x645f524c33315a5f,0x444341426279685f,0x696d665f53665032,0x315f6d617261705f\n"
".quad 0x61702e646c0a3b5d,0x203436752e6d6172,0x5f5b202c326c7225,0x5f645f524c33315a\n"
".quad 0x3244434142627968,0x5f696d665f536650,0x5d335f6d61726170,0x7261702e646c0a3b\n"
".quad 0x25203233752e6d61,0x315a5f5b202c3372,0x79685f645f524c33,0x6650324443414262\n"
".quad 0x61705f696d665f53,0x0a3b5d345f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67\n"
".quad 0x2c336c7225203436,0x630a3b316c722520,0x672e6f742e617476,0x36752e6c61626f6c\n"
".quad 0x202c346c72252034,0x2e0a3b30316c7225,0x3031203220636f6c,0x766f6d0a31203138\n"
".quad 0x347225203233752e,0x2e6469746e25202c,0x752e766f6d0a3b78,0x202c357225203233\n"
".quad 0x782e646961746325,0x33752e766f6d0a3b,0x25202c3672252032,0x6d0a3b782e646974\n"
".quad 0x33732e6f6c2e6461,0x25202c3172252032,0x2c357225202c3472,0x6c2e0a3b36722520\n"
".quad 0x383031203220636f,0x2e766f6d0a312032,0x2c37722520323375,0x792e6469746e2520\n"
".quad 0x33752e766f6d0a3b,0x25202c3872252032,0x3b792e6469617463,0x3233752e766f6d0a\n"
".quad 0x7425202c39722520,0x616d0a3b792e6469,0x3233732e6f6c2e64,0x7225202c32722520\n"
".quad 0x202c387225202c37,0x6f6c2e0a3b397225,0x3338303120322063,0x722e7476630a3120\n"
".quad 0x33732e3233662e6e,0x202c323166252032,0x616d660a3b317225,0x203233662e6e722e\n"
".quad 0x6625202c33316625,0x45336630202c3231,0x202c303030303038,0x3044464333346630\n"
".quad 0x636f6c2e0a3b3030,0x2034383031203220,0x6e722e7476630a31,0x3233732e3233662e\n"
".quad 0x7225202c32662520,0x722e616d660a3b32,0x6625203233662e6e,0x2c326625202c3431\n"
".quad 0x3030384533663020,0x346630202c303030,0x3b30303044463933,0x3436752e7476630a\n"
".quad 0x6c7225203233752e,0x0a3b317225202c35,0x31203220636f6c2e,0x76630a3120353830\n"
".quad 0x33732e3436732e74,0x202c366c72252032,0x64616d0a3b327225,0x203436732e6f6c2e\n"
".quad 0x7225202c376c7225,0x326c7225202c366c,0x0a3b356c7225202c,0x203233662e646461\n"
".quad 0x6625202c35316625,0x33436630202c3331,0x0a3b303030434646,0x203233662e646461\n"
".quad 0x6625202c36316625,0x33436630202c3431,0x0a3b303030434642,0x37203220636f6c2e\n"
".quad 0x2e6c756d0a312034,0x3731662520323366,0x202c36316625202c,0x6d660a3b36316625\n"
".quad 0x3233662e6e722e61,0x25202c3831662520,0x316625202c353166,0x3b37316625202c35\n"
".quad 0x746c2e707465730a,0x317025203233662e,0x202c38316625202c,0x3030303832346630\n"
".quad 0x636f6c2e0a3b3030,0x2038383031203220,0x6c2e707465730a31,0x7025203233732e74\n"
".quad 0x202c317225202c32,0x766f6d0a3b337225,0x317225203233752e,0x0a3b373637202c30\n"
".quad 0x31203220636f6c2e,0x75730a3120383830,0x7225203233732e62,0x30317225202c3131\n"
".quad 0x730a3b337225202c,0x732e74672e707465,0x202c337025203233,0x317225202c317225\n"
".quad 0x72702e726f0a3b31,0x202c347025206465,0x337025202c327025,0x3220636f6c2e0a3b\n"
".quad 0x0a31203838303120,0x2e746c2e70746573,0x2c35702520323373,0x7225202c32722520\n"
".quad 0x72702e726f0a3b33,0x202c367025206465,0x357025202c347025,0x33752e766f6d0a3b\n"
".quad 0x202c323172252032,0x6f6c2e0a3b313135,0x3838303120322063,0x732e6275730a3120\n"
".quad 0x2c33317225203233,0x25202c3231722520,0x707465730a3b3372,0x203233732e74672e\n"
".quad 0x327225202c377025,0x0a3b33317225202c,0x20646572702e726f,0x367025202c387025\n"
".quad 0x2e0a3b377025202c,0x3031203220636f6c,0x7025400a31203838,0x4242206172622038\n"
".quad 0x730a0a3b345f3032,0x25203436622e6c68,0x7225202c31316c72,0x0a3b3233202c376c\n"
".quad 0x203436732e726873,0x25202c32316c7225,0x3233202c31316c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203339303120,0x203436622e6c6873,0x25202c33316c7225,0x3b32202c32316c72\n"
".quad 0x3436732e6464610a,0x202c34316c722520,0x7225202c346c7225,0x2e646c0a3b33316c\n"
".quad 0x662e6c61626f6c67,0x202c336625203233,0x3b5d34316c72255b,0x3233732e6464610a\n"
".quad 0x25202c3531722520,0x0a3b312d202c3272,0x31203220636f6c2e,0x76630a3120343930\n"
".quad 0x33752e3436752e74,0x2c35316c72252032,0x610a3b3531722520,0x25203436732e6464\n"
".quad 0x7225202c36316c72,0x323031202c35316c,0x61702e646c0a3b34,0x203436752e6d6172\n"
".quad 0x202c3233316c7225,0x5f524c33315a5f5b,0x4341426279685f64,0x6d665f5366503244\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d33,0x2034393031203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x316c7225202c3731,0x33316c7225202c36,0x3b356c7225202c32\n"
".quad 0x3436622e6c68730a,0x202c38316c722520,0x33202c37316c7225,0x732e7268730a3b32\n"
".quad 0x39316c7225203436,0x2c38316c7225202c,0x6f6c2e0a3b323320,0x3439303120322063\n"
".quad 0x622e6c68730a3120,0x30326c7225203436,0x2c39316c7225202c,0x2e6464610a3b3220\n"
".quad 0x326c722520343673,0x2c346c7225202c31,0x0a3b30326c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x326c72255b202c34,0x636f6c2e0a3b5d31,0x2035393031203220\n"
".quad 0x33732e6464610a31,0x202c373172252032,0x0a3b31202c327225,0x2e3436752e747663\n"
".quad 0x326c722520323375,0x3b37317225202c32,0x3436732e6464610a,0x202c33326c722520\n"
".quad 0x32202c32326c7225,0x6f6c2e0a3b383430,0x3539303120322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c34326c,0x316c7225202c3332,0x356c7225202c3233\n"
".quad 0x36622e6c68730a3b,0x2c35326c72252034,0x202c34326c722520,0x2e7268730a3b3233\n"
".quad 0x326c722520343673,0x35326c7225202c36,0x6c2e0a3b3233202c,0x393031203220636f\n"
".quad 0x2e6c68730a312035,0x326c722520343662,0x36326c7225202c37,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x346c7225202c3832,0x3b37326c7225202c,0x626f6c672e646c0a\n"
".quad 0x25203233662e6c61,0x6c72255b202c3566,0x6464610a3b5d3832,0x317225203233732e\n"
".quad 0x202c317225202c39,0x636f6c2e0a3b312d,0x2036393031203220,0x6e722e7476630a31\n"
".quad 0x3233732e3233662e,0x25202c3535662520,0x6464610a3b393172,0x356625203233662e\n"
".quad 0x2c35356625202c33,0x3030304633663020,0x6464610a3b303030,0x336625203233662e\n"
".quad 0x202c326625202c30,0x3030303046336630,0x2e766f6d0a3b3030,0x3032722520323375\n"
".quad 0x74090a0a3b30202c,0x34762e64322e7865,0x3233662e3233662e,0x202c393166257b20\n"
".quad 0x6625202c30326625,0x32326625202c3132,0x527865745b202c7d,0x202c4331665f6665\n"
".quad 0x25202c333566257b,0x0a0a3b5d7d303366,0x203220636f6c2e09,0x610a312037393031\n"
".quad 0x25203233732e6464,0x317225202c313272,0x7476630a3b31202c,0x2e3233662e6e722e\n"
".quad 0x3635662520323373,0x0a3b31327225202c,0x203233662e646461,0x6625202c37346625\n"
".quad 0x46336630202c3635,0x0a3b303030303030,0x64322e786574090a,0x2e3233662e34762e\n"
".quad 0x3266257b20323366,0x2c36326625202c35,0x25202c3732662520,0x745b202c7d383266\n"
".quad 0x33665f6665527865,0x373466257b202c43,0x5d7d30336625202c,0x636f6c2e090a0a3b\n"
".quad 0x2038393031203220,0x6e722e7476630a31,0x3233732e3233662e,0x25202c3735662520\n"
".quad 0x6464610a3b353172,0x346625203233662e,0x2c37356625202c32,0x3030304633663020\n"
".quad 0x74090a0a3b303030,0x34762e64322e7865,0x3233662e3233662e,0x202c313366257b20\n"
".quad 0x6625202c32336625,0x34336625202c3333,0x527865745b202c7d,0x202c4335665f6665\n"
".quad 0x25202c333566257b,0x0a0a3b5d7d323466,0x322e786574090a09,0x3233662e34762e64\n"
".quad 0x66257b203233662e,0x38336625202c3733,0x202c39336625202c,0x5b202c7d30346625\n"
".quad 0x665f666552786574,0x3466257b202c4336,0x7d32346625202c37,0x6f6c2e090a0a3b5d\n"
".quad 0x3030313120322063,0x722e7476630a3120,0x33732e3233662e6e,0x202c383566252032\n"
".quad 0x64610a3b37317225,0x6625203233662e64,0x38356625202c3435,0x303046336630202c\n"
".quad 0x090a0a3b30303030,0x762e64322e786574,0x33662e3233662e34,0x2c333466257b2032\n"
".quad 0x25202c3434662520,0x346625202c353466,0x7865745b202c7d36,0x2c4337665f666552\n"
".quad 0x202c373466257b20,0x0a3b5d7d34356625,0x2e786574090a090a,0x33662e34762e6432\n"
".quad 0x257b203233662e32,0x356625202c393466,0x2c31356625202c30,0x202c7d3235662520\n"
".quad 0x5f6665527865745b,0x66257b202c433866,0x34356625202c3335,0x6461090a0a3b5d7d\n"
".quad 0x7225203436732e64,0x6c7225202c39326c,0x3b34383533202c36,0x203220636f6c2e0a\n"
".quad 0x6d0a312039303131,0x36732e6f6c2e6461,0x2c30336c72252034,0x202c39326c722520\n"
".quad 0x202c3233316c7225,0x68730a3b356c7225,0x7225203436622e6c,0x6c7225202c31336c\n"
".quad 0x0a3b3233202c3033,0x203436732e726873,0x25202c32336c7225,0x3233202c31336c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203930313120,0x203436622e6c6873,0x25202c33336c7225\n"
".quad 0x3b32202c32336c72,0x3436732e6464610a,0x25202c386c722520,0x6c7225202c336c72\n"
".quad 0x2e6464610a3b3333,0x336c722520343673,0x2c366c7225202c34,0x2e0a3b3639303420\n"
".quad 0x3131203220636f6c,0x64616d0a31203031,0x203436732e6f6c2e,0x25202c35336c7225\n"
".quad 0x7225202c34336c72,0x7225202c3233316c,0x2e6c68730a3b356c,0x336c722520343662\n"
".quad 0x35336c7225202c36,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c37336c\n"
".quad 0x0a3b3233202c3633,0x31203220636f6c2e,0x68730a3120303131,0x7225203436622e6c\n"
".quad 0x6c7225202c38336c,0x610a3b32202c3733,0x25203436732e6464,0x6c7225202c396c72\n"
".quad 0x38336c7225202c33,0x3220636f6c2e0a3b,0x0a31203230313120,0x6172622031702540\n"
".quad 0x3b335f3032424220,0x3220636f6c2e0a0a,0x0a31203631313120,0x203233662e646461\n"
".quad 0x6625202c39356625,0x3b39316625202c33,0x3233662e6464610a,0x25202c3036662520\n"
".quad 0x346625202c393566,0x33662e6464610a3b,0x202c313666252032,0x6625202c30366625\n"
".quad 0x2e6464610a3b3532,0x3236662520323366,0x202c31366625202c,0x6464610a3b356625\n"
".quad 0x366625203233662e,0x2c32366625202c33,0x610a3b3133662520,0x25203233662e6464\n"
".quad 0x366625202c343666,0x3b37336625202c33,0x3233662e6464610a,0x25202c3536662520\n"
".quad 0x346625202c343666,0x662e6464610a3b33,0x2c36366625203233,0x25202c3536662520\n"
".quad 0x6275730a3b393466,0x366625203233662e,0x2c39316625202c37,0x610a3b3532662520\n"
".quad 0x25203233662e6464,0x366625202c383666,0x3b31336625202c37,0x3233662e6275730a\n"
".quad 0x25202c3936662520,0x336625202c383666,0x662e6275730a3b37,0x2c30376625203233\n"
".quad 0x25202c3936662520,0x6464610a3b333466,0x376625203233662e,0x2c30376625202c31\n"
".quad 0x730a3b3934662520,0x25203233662e6275,0x346625202c323766,0x610a3b356625202c\n"
".quad 0x25203233662e6464,0x376625202c333766,0x3b31336625202c32,0x3233662e6464610a\n"
".quad 0x25202c3437662520,0x336625202c333766,0x662e6275730a3b37,0x2c35376625203233\n"
".quad 0x25202c3437662520,0x6275730a3b333466,0x376625203233662e,0x2c35376625202c36\n"
".quad 0x6d0a3b3934662520,0x25203233662e6c75,0x376625202c373766,0x3b36376625202c36\n"
".quad 0x2e6e722e616d660a,0x3837662520323366,0x202c31376625202c,0x6625202c31376625\n"
".quad 0x2e766f6d0a3b3737,0x3937662520323366,0x304346336630202c,0x6c2e0a3b30303030\n"
".quad 0x313131203220636f,0x2e67656e0a312036,0x3038662520323366,0x0a3b38376625202c\n"
".quad 0x662e6e722e616d66,0x2c31386625203233,0x25202c3038662520,0x366625202c393766\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x31386625202c3238,0x334545426630202c\n"
".quad 0x6625202c39334538,0x662e67656e0a3b33,0x2c33386625203233,0x6c0a3b3238662520\n"
".quad 0x2e6d617261702e64,0x3431662520323366,0x33315a5f5b202c33,0x6279685f645f524c\n"
".quad 0x5366503244434142,0x7261705f696d665f,0x2e0a3b5d325f6d61,0x3131203220636f6c\n"
".quad 0x616d660a31203631,0x203233662e6e722e,0x6625202c34386625,0x34316625202c3338\n"
".quad 0x0a3b336625202c33,0x203233662e766f6d,0x6630202c35386625,0x3030303030343034\n"
".quad 0x3220636f6c2e0a3b,0x0a31203631313120,0x662e6e722e616d66,0x2c36386625203233\n"
".quad 0x30202c3137662520,0x3030303034303466,0x3b36366625202c30,0x3233662e6c756d0a\n"
".quad 0x25202c3738662520,0x346630202c313766,0x3b30303030303930,0x2e6e722e616d660a\n"
".quad 0x3838662520323366,0x202c37386625202c,0x6625202c31376625,0x2e616d660a3b3638\n"
".quad 0x25203233662e6e72,0x386625202c393866,0x2c39376625202c30,0x6d0a3b3838662520\n"
".quad 0x25203233662e766f,0x336630202c303966,0x3b39334538334544,0x203220636f6c2e0a\n"
".quad 0x6e0a312036313131,0x25203233662e6765,0x386625202c313966,0x722e616d660a3b39\n"
".quad 0x6625203233662e6e,0x31396625202c3239,0x202c30396625202c,0x656e0a3b39316625\n"
".quad 0x6625203233662e67,0x32396625202c3339,0x6e722e616d660a3b,0x396625203233662e\n"
".quad 0x2c33396625202c34,0x202c333431662520,0x6d660a3b39316625,0x3233662e6e722e61\n"
".quad 0x25202c3539662520,0x346630202c363766,0x2c30303030303430,0x6d0a3b3636662520\n"
".quad 0x25203233662e6c75,0x376625202c363966,0x3930346630202c36,0x660a3b3030303030\n"
".quad 0x33662e6e722e616d,0x202c373966252032,0x6625202c36396625,0x35396625202c3637\n"
".quad 0x6e722e616d660a3b,0x396625203233662e,0x2c30386625202c38,0x25202c3937662520\n"
".quad 0x67656e0a3b373966,0x396625203233662e,0x3b38396625202c39,0x2e6e722e616d660a\n"
".quad 0x3031662520323366,0x2c39396625202c30,0x25202c3039662520,0x2e67656e0a3b3466\n"
".quad 0x3031662520323366,0x3030316625202c31,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x30316625202c3230,0x3334316625202c31,0x6e0a3b346625202c,0x25203233662e6765\n"
".quad 0x6625202c33303166,0x2e616d660a3b3137,0x25203233662e6e72,0x6625202c34303166\n"
".quad 0x386625202c333031,0x3b36366625202c35,0x2e6e722e616d660a,0x3031662520323366\n"
".quad 0x2c37386625202c35,0x25202c3137662520,0x6d660a3b34303166,0x3233662e6e722e61\n"
".quad 0x202c363031662520,0x6625202c30386625,0x30316625202c3937,0x662e67656e0a3b35\n"
".quad 0x3730316625203233,0x3b3630316625202c,0x2e6e722e616d660a,0x3031662520323366\n"
".quad 0x3730316625202c38,0x202c30396625202c,0x656e0a3b35326625,0x6625203233662e67\n"
".quad 0x316625202c393031,0x2e616d660a3b3830,0x25203233662e6e72,0x6625202c30313166\n"
".quad 0x316625202c393031,0x35326625202c3334,0x33662e67656e0a3b,0x2c31313166252032\n"
".quad 0x660a3b3637662520,0x33662e6e722e616d,0x2c32313166252032,0x202c313131662520\n"
".quad 0x6625202c35386625,0x2e616d660a3b3636,0x25203233662e6e72,0x6625202c33313166\n"
".quad 0x36376625202c3639,0x3b3231316625202c,0x2e6e722e616d660a,0x3131662520323366\n"
".quad 0x2c30386625202c34,0x25202c3937662520,0x656e0a3b33313166,0x6625203233662e67\n"
".quad 0x316625202c353131,0x2e616d660a3b3431,0x25203233662e6e72,0x6625202c36313166\n"
".quad 0x396625202c353131,0x0a3b356625202c30,0x203233662e67656e,0x25202c3731316625\n"
".quad 0x6d660a3b36313166,0x3233662e6e722e61,0x202c383131662520,0x25202c3731316625\n"
".quad 0x6625202c33343166,0x662e6464610a3b35,0x3931316625203233,0x202c31376625202c\n"
".quad 0x6d660a3b36376625,0x3233662e6e722e61,0x202c303231662520,0x30202c3931316625\n"
".quad 0x3030303034303466,0x3b36366625202c30,0x3233662e6c756d0a,0x202c313231662520\n"
".quad 0x30202c3931316625,0x3030303039303466,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x316625202c323231,0x31316625202c3132,0x3032316625202c39,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x30386625202c3332,0x202c39376625202c,0x630a3b3232316625\n"
".quad 0x662e3436662e7476,0x2c31646625203233,0x0a3b333231662520,0x203436662e766f6d\n"
".quad 0x6430202c32646625,0x3743313743394633,0x4331443842374331,0x3220636f6c2e0a3b\n"
".quad 0x0a31203631313120,0x2e3436662e747663,0x3364662520323366,0x0a3b31336625202c\n"
".quad 0x203436662e67656e,0x6625202c34646625,0x2e616d660a3b3164,0x25203436662e6e72\n"
".quad 0x646625202c356466,0x2c32646625202c34,0x630a3b3364662520,0x662e3436662e7476\n"
".quad 0x2c36646625203233,0x0a3b333431662520,0x203436662e67656e,0x6625202c37646625\n"
".quad 0x2e616d660a3b3664,0x25203436662e6e72,0x646625202c386466,0x2c35646625202c37\n"
".quad 0x630a3b3364662520,0x33662e6e722e7476,0x6625203436662e32,0x646625202c343231\n"
".quad 0x662e6275730a3b38,0x3532316625203233,0x202c36376625202c,0x6c2e0a3b31376625\n"
".quad 0x313131203220636f,0x2e616d660a312036,0x25203233662e6e72,0x6625202c36323166\n"
".quad 0x346630202c353231,0x2c30303030303430,0x6d0a3b3636662520,0x25203233662e6c75\n"
".quad 0x6625202c37323166,0x346630202c353231,0x3b30303030303930,0x2e6e722e616d660a\n"
".quad 0x3231662520323366,0x3732316625202c38,0x2c3532316625202c,0x0a3b363231662520\n"
".quad 0x662e6e722e616d66,0x3932316625203233,0x202c30386625202c,0x6625202c39376625\n"
".quad 0x7476630a3b383231,0x3233662e3436662e,0x25202c3964662520,0x76630a3b39323166\n"
".quad 0x33662e3436662e74,0x2c30316466252032,0x6e0a3b3733662520,0x25203436662e6765\n"
".quad 0x6625202c31316466,0x2e616d660a3b3964,0x25203436662e6e72,0x6625202c32316466\n"
".quad 0x646625202c313164,0x3031646625202c32,0x6e722e616d660a3b,0x646625203436662e\n"
".quad 0x37646625202c3331,0x2c3231646625202c,0x0a3b303164662520,0x662e6e722e747663\n"
".quad 0x25203436662e3233,0x6625202c30333166,0x6275730a3b333164,0x316625203233662e\n"
".quad 0x30316625202c3133,0x3b36376625202c33,0x2e6e722e616d660a,0x3331662520323366\n"
".quad 0x3133316625202c32,0x303430346630202c,0x6625202c30303030,0x2e6c756d0a3b3636\n"
".quad 0x3331662520323366,0x3133316625202c33,0x303930346630202c,0x6d660a3b30303030\n"
".quad 0x3233662e6e722e61,0x202c343331662520,0x25202c3333316625,0x6625202c31333166\n"
".quad 0x616d660a3b323331,0x203233662e6e722e,0x25202c3533316625,0x376625202c303866\n"
".quad 0x3433316625202c39,0x36662e7476630a3b,0x6625203233662e34,0x316625202c343164\n"
".quad 0x2e7476630a3b3533,0x203233662e343666,0x25202c3531646625,0x67656e0a3b333466\n"
".quad 0x646625203436662e,0x31646625202c3631,0x722e616d660a3b34,0x6625203436662e6e\n"
".quad 0x646625202c373164,0x32646625202c3631,0x3b3531646625202c,0x2e6e722e616d660a\n"
".quad 0x3164662520343666,0x2c37646625202c38,0x202c373164662520,0x630a3b3531646625\n"
".quad 0x33662e6e722e7476,0x6625203436662e32,0x646625202c363331,0x2e6275730a3b3831\n"
".quad 0x3331662520323366,0x2c31376625202c37,0x660a3b3637662520,0x33662e6e722e616d\n"
".quad 0x2c38333166252032,0x202c373331662520,0x3030303430346630,0x36366625202c3030\n"
".quad 0x33662e6c756d0a3b,0x2c39333166252032,0x202c373331662520,0x3030303930346630\n"
".quad 0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c30343166,0x316625202c393331\n"
".quad 0x33316625202c3733,0x722e616d660a3b38,0x6625203233662e6e,0x386625202c313431\n"
".quad 0x2c39376625202c30,0x0a3b303431662520,0x2e3436662e747663,0x3164662520323366\n"
".quad 0x3134316625202c39,0x36662e7476630a3b,0x6625203233662e34,0x346625202c303264\n"
".quad 0x662e67656e0a3b39,0x3132646625203436,0x3b3931646625202c,0x2e6e722e616d660a\n"
".quad 0x3264662520343666,0x3132646625202c32,0x202c32646625202c,0x660a3b3032646625\n"
".quad 0x36662e6e722e616d,0x2c33326466252034,0x25202c3764662520,0x6625202c32326466\n"
".quad 0x7476630a3b303264,0x2e3233662e6e722e,0x3431662520343666,0x3332646625202c32\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3133316c72,0x645f524c33315a5f\n"
".quad 0x444341426279685f,0x696d665f53665032,0x335f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x3120353830312032,0x2e6f6c2e64616d0a,0x346c722520343673,0x2c366c7225202c31\n"
".quad 0x2c3133316c722520,0x6c0a3b356c722520,0x2e6d617261702e64,0x316c722520343675\n"
".quad 0x315a5f5b202c3932,0x79685f645f524c33,0x6650324443414262,0x61705f696d665f53\n"
".quad 0x0a3b5d315f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67,0x32346c7225203436\n"
".quad 0x3932316c7225202c,0x36622e6c68730a3b,0x2c33346c72252034,0x202c31346c722520\n"
".quad 0x2e7268730a3b3233,0x346c722520343673,0x33346c7225202c34,0x6c2e0a3b3233202c\n"
".quad 0x313131203220636f,0x2e6c68730a312037,0x346c722520343662,0x34346c7225202c35\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x346c7225202c3634,0x35346c7225202c32\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x2c5d36346c72255b,0x610a3b3438662520\n"
".quad 0x25203436732e6464,0x7225202c37346c72,0x3b323135202c366c,0x203220636f6c2e0a\n"
".quad 0x6d0a312033303131,0x36732e6f6c2e6461,0x2c38346c72252034,0x202c37346c722520\n"
".quad 0x202c3133316c7225,0x68730a3b356c7225,0x7225203436622e6c,0x6c7225202c39346c\n"
".quad 0x0a3b3233202c3834,0x203436732e726873,0x25202c30356c7225,0x3233202c39346c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203330313120,0x203436622e6c6873,0x25202c31356c7225\n"
".quad 0x3b32202c30356c72,0x3436732e6464610a,0x202c32356c722520,0x25202c32346c7225\n"
".quad 0x6c2e0a3b31356c72,0x313131203220636f,0x672e74730a312038,0x33662e6c61626f6c\n"
".quad 0x32356c72255b2032,0x3b34396625202c5d,0x3436732e6464610a,0x202c33356c722520\n"
".quad 0x3031202c366c7225,0x636f6c2e0a3b3432,0x2034303131203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x356c7225202c3435,0x33316c7225202c33,0x3b356c7225202c31\n"
".quad 0x3436622e6c68730a,0x202c35356c722520,0x33202c34356c7225,0x732e7268730a3b32\n"
".quad 0x36356c7225203436,0x2c35356c7225202c,0x6f6c2e0a3b323320,0x3430313120322063\n"
".quad 0x622e6c68730a3120,0x37356c7225203436,0x2c36356c7225202c,0x2e6464610a3b3220\n"
".quad 0x356c722520343673,0x32346c7225202c38,0x3b37356c7225202c,0x203220636f6c2e0a\n"
".quad 0x730a312039313131,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d38356c\n"
".quad 0x6464610a3b323031,0x6c7225203436732e,0x366c7225202c3935,0x0a3b36333531202c\n"
".quad 0x31203220636f6c2e,0x616d0a3120353031,0x3436732e6f6c2e64,0x202c30366c722520\n"
".quad 0x25202c39356c7225,0x25202c3133316c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x366c7225202c3136,0x730a3b3233202c30,0x25203436732e7268,0x7225202c32366c72\n"
".quad 0x3b3233202c31366c,0x203220636f6c2e0a,0x730a312035303131,0x25203436622e6c68\n"
".quad 0x7225202c33366c72,0x0a3b32202c32366c,0x203436732e646461,0x25202c34366c7225\n"
".quad 0x7225202c32346c72,0x6f6c2e0a3b33366c,0x3032313120322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x5d34366c72255b20,0x3b3031316625202c,0x3436732e6464610a\n"
".quad 0x202c35366c722520,0x3032202c366c7225,0x636f6c2e0a3b3834,0x2036303131203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x366c7225202c3636,0x33316c7225202c35\n"
".quad 0x3b356c7225202c31,0x3436622e6c68730a,0x202c37366c722520,0x33202c36366c7225\n"
".quad 0x732e7268730a3b32,0x38366c7225203436,0x2c37366c7225202c,0x6f6c2e0a3b323320\n"
".quad 0x3630313120322063,0x622e6c68730a3120,0x39366c7225203436,0x2c38366c7225202c\n"
".quad 0x2e6464610a3b3220,0x376c722520343673,0x32346c7225202c30,0x3b39366c7225202c\n"
".quad 0x203220636f6c2e0a,0x730a312031323131,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x6625202c5d30376c,0x6464610a3b383131,0x6c7225203436732e,0x366c7225202c3137\n"
".quad 0x0a3b30363532202c,0x31203220636f6c2e,0x616d0a3120373031,0x3436732e6f6c2e64\n"
".quad 0x202c32376c722520,0x25202c31376c7225,0x25202c3133316c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x376c7225202c3337,0x730a3b3233202c32,0x25203436732e7268\n"
".quad 0x7225202c34376c72,0x3b3233202c33376c,0x203220636f6c2e0a,0x730a312037303131\n"
".quad 0x25203436622e6c68,0x7225202c35376c72,0x0a3b32202c34376c,0x203436732e646461\n"
".quad 0x25202c36376c7225,0x7225202c32346c72,0x6f6c2e0a3b35376c,0x3232313120322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x5d36376c72255b20,0x3b3432316625202c\n"
".quad 0x3436732e6464610a,0x202c37376c722520,0x3033202c366c7225,0x636f6c2e0a3b3237\n"
".quad 0x2038303131203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x376c7225202c3837\n"
".quad 0x33316c7225202c37,0x3b356c7225202c31,0x3436622e6c68730a,0x202c39376c722520\n"
".quad 0x33202c38376c7225,0x732e7268730a3b32,0x30386c7225203436,0x2c39376c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x3830313120322063,0x622e6c68730a3120,0x31386c7225203436\n"
".quad 0x2c30386c7225202c,0x2e6464610a3b3220,0x386c722520343673,0x32346c7225202c32\n"
".quad 0x3b31386c7225202c,0x203220636f6c2e0a,0x730a312033323131,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x6625202c5d32386c,0x6f6c2e0a3b303331,0x3930313120322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c34386c,0x316c7225202c3932\n"
".quad 0x356c7225202c3133,0x36622e6c68730a3b,0x2c35386c72252034,0x202c34386c722520\n"
".quad 0x2e7268730a3b3233,0x386c722520343673,0x35386c7225202c36,0x6c2e0a3b3233202c\n"
".quad 0x303131203220636f,0x2e6c68730a312039,0x386c722520343662,0x36386c7225202c37\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x346c7225202c3838,0x37386c7225202c32\n"
".quad 0x3220636f6c2e0a3b,0x0a31203432313120,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x25202c5d38386c72,0x6c2e0a3b36333166,0x323131203220636f,0x672e74730a312035\n"
".quad 0x33662e6c61626f6c,0x5d396c72255b2032,0x3b3234316625202c,0x203220636f6c2e0a\n"
".quad 0x720a322038323131,0x3242420a0a3b7465,0x6464610a3a335f30,0x6c7225203436732e\n"
".quad 0x366c7225202c3039,0x6c0a3b323135202c,0x2e6d617261702e64,0x316c722520343675\n"
".quad 0x315a5f5b202c3033,0x79685f645f524c33,0x6650324443414262,0x61705f696d665f53\n"
".quad 0x0a3b5d335f6d6172,0x31203220636f6c2e,0x616d0a3120333031,0x3436732e6f6c2e64\n"
".quad 0x202c32396c722520,0x25202c30396c7225,0x25202c3033316c72,0x2e646c0a3b356c72\n"
".quad 0x36752e6d61726170,0x3832316c72252034,0x4c33315a5f5b202c,0x426279685f645f52\n"
".quad 0x5f53665032444341,0x617261705f696d66,0x76630a3b5d315f6d,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x202c33396c722520,0x0a3b3832316c7225,0x203436622e6c6873\n"
".quad 0x25202c34396c7225,0x3233202c32396c72,0x36732e7268730a3b,0x2c35396c72252034\n"
".quad 0x202c34396c722520,0x636f6c2e0a3b3233,0x2033303131203220,0x36622e6c68730a31\n"
".quad 0x2c36396c72252034,0x202c35396c722520,0x732e6464610a3b32,0x37396c7225203436\n"
".quad 0x2c33396c7225202c,0x0a3b36396c722520,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x25202c5d37396c72,0x6464610a3b353266,0x6c7225203436732e,0x366c7225202c3839\n"
".quad 0x0a3b34323031202c,0x31203220636f6c2e,0x616d0a3120343031,0x3436732e6f6c2e64\n"
".quad 0x202c39396c722520,0x25202c38396c7225,0x25202c3033316c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c303031,0x0a3b3233202c3939,0x203436732e726873\n"
".quad 0x202c3130316c7225,0x202c3030316c7225,0x636f6c2e0a3b3233,0x2034303131203220\n"
".quad 0x36622e6c68730a31,0x3230316c72252034,0x3130316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c333031,0x316c7225202c3339,0x672e74730a3b3230\n"
".quad 0x33662e6c61626f6c,0x30316c72255b2032,0x3b356625202c5d33,0x3436732e6464610a\n"
".quad 0x2c3430316c722520,0x31202c366c722520,0x6f6c2e0a3b363335,0x3530313120322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3530316c,0x7225202c3430316c\n"
".quad 0x7225202c3033316c,0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3630\n"
".quad 0x0a3b3233202c3530,0x203436732e726873,0x202c3730316c7225,0x202c3630316c7225\n"
".quad 0x636f6c2e0a3b3233,0x2035303131203220,0x36622e6c68730a31,0x3830316c72252034\n"
".quad 0x3730316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c393031\n"
".quad 0x316c7225202c3339,0x672e74730a3b3830,0x33662e6c61626f6c,0x30316c72255b2032\n"
".quad 0x39316625202c5d39,0x36732e6464610a3b,0x3031316c72252034,0x202c366c7225202c\n"
".quad 0x6c2e0a3b38343032,0x303131203220636f,0x2e64616d0a312036,0x25203436732e6f6c\n"
".quad 0x25202c3131316c72,0x25202c3031316c72,0x25202c3033316c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c323131,0x3b3233202c313131,0x3436732e7268730a\n"
".quad 0x2c3331316c722520,0x2c3231316c722520,0x6f6c2e0a3b323320,0x3630313120322063\n"
".quad 0x622e6c68730a3120,0x31316c7225203436,0x31316c7225202c34,0x64610a3b32202c33\n"
".quad 0x7225203436732e64,0x7225202c3531316c,0x6c7225202c33396c,0x2e74730a3b343131\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x346625202c5d3531,0x36732e6464610a3b\n"
".quad 0x3631316c72252034,0x202c366c7225202c,0x6c2e0a3b30363532,0x303131203220636f\n"
".quad 0x2e64616d0a312037,0x25203436732e6f6c,0x25202c3731316c72,0x25202c3631316c72\n"
".quad 0x25202c3033316c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c383131\n"
".quad 0x3b3233202c373131,0x3436732e7268730a,0x2c3931316c722520,0x2c3831316c722520\n"
".quad 0x6f6c2e0a3b323320,0x3730313120322063,0x622e6c68730a3120,0x32316c7225203436\n"
".quad 0x31316c7225202c30,0x64610a3b32202c39,0x7225203436732e64,0x7225202c3132316c\n"
".quad 0x6c7225202c33396c,0x2e74730a3b303231,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x346625202c5d3132,0x732e6464610a3b33,0x32316c7225203436,0x2c366c7225202c32\n"
".quad 0x2e0a3b3237303320,0x3131203220636f6c,0x64616d0a31203830,0x203436732e6f6c2e\n"
".quad 0x202c3332316c7225,0x202c3232316c7225,0x202c3033316c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3432316c,0x3233202c3332316c,0x36732e7268730a3b\n"
".quad 0x3532316c72252034,0x3432316c7225202c,0x6c2e0a3b3233202c,0x303131203220636f\n"
".quad 0x2e6c68730a312038,0x316c722520343662,0x316c7225202c3632,0x610a3b32202c3532\n"
".quad 0x25203436732e6464,0x25202c3732316c72,0x7225202c33396c72,0x74730a3b3632316c\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d373231,0x636f6c2e0a3b3934\n"
".quad 0x2039303131203220,0x6f6c672e74730a31,0x203233662e6c6162,0x202c5d386c72255b\n"
".quad 0x6c2e0a3b31336625,0x313131203220636f,0x672e74730a312030,0x33662e6c61626f6c\n"
".quad 0x5d396c72255b2032,0x0a3b37336625202c,0x3a345f303242420a,0x203220636f6c2e0a\n"
".quad 0x720a322038323131,0x2e0a0a7d0a3b7465,0x5a5f207972746e65,0x425f645f524c3031\n"
".quad 0x5f53665032444341,0x7261702e0a286d66,0x203436752e206d61,0x645f524c30315a5f\n"
".quad 0x665032444341425f,0x7261705f6d665f53,0x702e0a2c305f6d61,0x36752e206d617261\n"
".quad 0x524c30315a5f2034,0x32444341425f645f,0x705f6d665f536650,0x0a2c315f6d617261\n"
".quad 0x2e206d617261702e,0x30315a5f20323366,0x4341425f645f524c,0x6d665f5366503244\n"
".quad 0x325f6d617261705f,0x6d617261702e0a2c,0x5a5f203436752e20,0x425f645f524c3031\n"
".quad 0x5f53665032444341,0x6d617261705f6d66,0x2e0a7b0a290a335f,0x3233662e20676572\n"
".quad 0x3e3430313c662520,0x2e206765722e0a3b,0x3c64662520343666,0x65722e0a3b3e3432\n"
".quad 0x20646572702e2067,0x2e0a3b3e323c7025,0x3233732e20676572,0x3b3e35353c722520\n"
".quad 0x732e206765722e0a,0x313c6c7225203436,0x6c0a0a0a3b3e3037,0x2e6d617261702e64\n"
".quad 0x356c722520343675,0x4c30315a5f5b202c,0x444341425f645f52,0x5f6d665f53665032\n"
".quad 0x5d305f6d61726170,0x7261702e646c0a3b,0x25203436752e6d61,0x5a5f5b202c316c72\n"
".quad 0x425f645f524c3031,0x5f53665032444341,0x6d617261705f6d66,0x2e646c0a3b5d315f\n"
".quad 0x36752e6d61726170,0x202c326c72252034,0x5f524c30315a5f5b,0x5032444341425f64\n"
".quad 0x61705f6d665f5366,0x0a3b5d335f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67\n"
".quad 0x2c366c7225203436,0x2e0a3b316c722520,0x3131203220636f6c,0x766f6d0a31203333\n"
".quad 0x317225203233752e,0x2e6469746e25202c,0x752e766f6d0a3b78,0x202c327225203233\n"
".quad 0x782e646961746325,0x33752e766f6d0a3b,0x25202c3372252032,0x6d0a3b782e646974\n"
".quad 0x33732e6f6c2e6461,0x25202c3472252032,0x2c327225202c3172,0x6c2e0a3b33722520\n"
".quad 0x333131203220636f,0x2e766f6d0a312034,0x2c35722520323375,0x792e6469746e2520\n"
".quad 0x33752e766f6d0a3b,0x25202c3672252032,0x3b792e6469617463,0x3233752e766f6d0a\n"
".quad 0x7425202c37722520,0x616d0a3b792e6469,0x3233732e6f6c2e64,0x7225202c38722520\n"
".quad 0x202c367225202c35,0x6f6c2e0a3b377225,0x3533313120322063,0x722e7476630a3120\n"
".quad 0x33732e3233662e6e,0x202c313166252032,0x616d660a3b347225,0x203233662e6e722e\n"
".quad 0x6625202c32316625,0x45336630202c3131,0x202c303030303038,0x3044464333346630\n"
".quad 0x636f6c2e0a3b3030,0x2036333131203220,0x6e722e7476630a31,0x3233732e3233662e\n"
".quad 0x25202c3331662520,0x2e616d660a3b3872,0x25203233662e6e72,0x316625202c343166\n"
".quad 0x3845336630202c33,0x30202c3030303030,0x3030444639333466,0x752e7476630a3b30\n"
".quad 0x25203233752e3436,0x347225202c376c72,0x3220636f6c2e0a3b,0x0a31203733313120\n"
".quad 0x2e3436732e747663,0x386c722520323373,0x6d0a3b387225202c,0x36732e6f6c2e6461\n"
".quad 0x202c396c72252034,0x7225202c386c7225,0x376c7225202c326c,0x33662e6464610a3b\n"
".quad 0x202c353166252032,0x6630202c32316625,0x3030304346463343,0x33662e6464610a3b\n"
".quad 0x202c363166252032,0x6630202c34316625,0x3030304346423343,0x3220636f6c2e0a3b\n"
".quad 0x756d0a3120343720,0x6625203233662e6c,0x36316625202c3731,0x0a3b36316625202c\n"
".quad 0x662e6e722e616d66,0x2c38316625203233,0x25202c3531662520,0x316625202c353166\n"
".quad 0x2e707465730a3b37,0x25203233662e746c,0x38316625202c3170,0x303832346630202c\n"
".quad 0x76630a3b30303030,0x6c672e6f742e6174,0x3436752e6c61626f,0x202c30316c722520\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x6c7225202c31316c,0x730a3b3233202c39\n"
".quad 0x25203436732e7268,0x7225202c32316c72,0x3b3233202c31316c,0x203220636f6c2e0a\n"
".quad 0x730a312035343131,0x25203436622e6c68,0x7225202c33316c72,0x0a3b32202c32316c\n"
".quad 0x203436732e646461,0x25202c34316c7225,0x7225202c30316c72,0x2e646c0a3b33316c\n"
".quad 0x662e6c61626f6c67,0x202c326625203233,0x3b5d34316c72255b,0x3233732e6464610a\n"
".quad 0x25202c3031722520,0x0a3b312d202c3472,0x2e3436752e747663,0x316c722520323375\n"
".quad 0x3b30317225202c35,0x3436732e6464610a,0x202c36316c722520,0x3135202c386c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120363431312032,0x2e6f6c2e64616d0a,0x316c722520343673\n"
".quad 0x36316c7225202c37,0x202c326c7225202c,0x730a3b35316c7225,0x25203436622e6c68\n"
".quad 0x7225202c38316c72,0x3b3233202c37316c,0x3436732e7268730a,0x202c39316c722520\n"
".quad 0x33202c38316c7225,0x20636f6c2e0a3b32,0x3120363431312032,0x3436622e6c68730a\n"
".quad 0x202c30326c722520,0x32202c39316c7225,0x36732e6464610a3b,0x2c31326c72252034\n"
".quad 0x202c30316c722520,0x6c0a3b30326c7225,0x6c61626f6c672e64,0x336625203233662e\n"
".quad 0x31326c72255b202c,0x732e6464610a3b5d,0x2c32317225203233,0x312d202c38722520\n"
".quad 0x3220636f6c2e0a3b,0x0a31203734313120,0x2e3436732e747663,0x326c722520323373\n"
".quad 0x3b32317225202c32,0x3436732e6464610a,0x202c33326c722520,0x31202c32326c7225\n"
".quad 0x6f6c2e0a3b343230,0x3734313120322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c34326c,0x326c7225202c3332,0x0a3b376c7225202c,0x203436622e6c6873\n"
".quad 0x25202c35326c7225,0x3233202c34326c72,0x36732e7268730a3b,0x2c36326c72252034\n"
".quad 0x202c35326c722520,0x636f6c2e0a3b3233,0x2037343131203220,0x36622e6c68730a31\n"
".quad 0x2c37326c72252034,0x202c36326c722520,0x732e6464610a3b32,0x38326c7225203436\n"
".quad 0x2c30316c7225202c,0x0a3b37326c722520,0x61626f6c672e646c,0x6625203233662e6c\n"
".quad 0x326c72255b202c34,0x636f6c2e0a3b5d38,0x2038343131203220,0x33732e6464610a31\n"
".quad 0x202c343172252032,0x0a3b31202c347225,0x2e3436752e747663,0x326c722520323375\n"
".quad 0x3b34317225202c39,0x3436732e6464610a,0x202c30336c722520,0x3531202c386c7225\n"
".quad 0x636f6c2e0a3b3633,0x2038343131203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x336c7225202c3133,0x2c326c7225202c30,0x0a3b39326c722520,0x203436622e6c6873\n"
".quad 0x25202c32336c7225,0x3233202c31336c72,0x36732e7268730a3b,0x2c33336c72252034\n"
".quad 0x202c32336c722520,0x636f6c2e0a3b3233,0x2038343131203220,0x36622e6c68730a31\n"
".quad 0x2c34336c72252034,0x202c33336c722520,0x732e6464610a3b32,0x35336c7225203436\n"
".quad 0x2c30316c7225202c,0x0a3b34336c722520,0x61626f6c672e646c,0x6625203233662e6c\n"
".quad 0x336c72255b202c35,0x636f6c2e0a3b5d35,0x2039343131203220,0x33732e6464610a31\n"
".quad 0x202c363172252032,0x0a3b31202c387225,0x2e3436732e747663,0x336c722520323373\n"
".quad 0x3b36317225202c36,0x3436732e6464610a,0x202c37336c722520,0x32202c36336c7225\n"
".quad 0x6f6c2e0a3b383430,0x3934313120322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c38336c,0x326c7225202c3733,0x0a3b376c7225202c,0x203436622e6c6873\n"
".quad 0x25202c39336c7225,0x3233202c38336c72,0x36732e7268730a3b,0x2c30346c72252034\n"
".quad 0x202c39336c722520,0x636f6c2e0a3b3233,0x2039343131203220,0x36622e6c68730a31\n"
".quad 0x2c31346c72252034,0x202c30346c722520,0x732e6464610a3b32,0x32346c7225203436\n"
".quad 0x2c30316c7225202c,0x0a3b31346c722520,0x61626f6c672e646c,0x6625203233662e6c\n"
".quad 0x346c72255b202c36,0x2e6464610a3b5d32,0x346c722520343673,0x32326c7225202c33\n"
".quad 0x0a3b30363532202c,0x31203220636f6c2e,0x616d0a3120303531,0x3436732e6f6c2e64\n"
".quad 0x202c34346c722520,0x25202c33346c7225,0x6c7225202c326c72,0x2e6c68730a3b3531\n"
".quad 0x346c722520343662,0x34346c7225202c35,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c36346c,0x0a3b3233202c3534,0x31203220636f6c2e,0x68730a3120303531\n"
".quad 0x7225203436622e6c,0x6c7225202c37346c,0x610a3b32202c3634,0x25203436732e6464\n"
".quad 0x7225202c38346c72,0x6c7225202c30316c,0x672e646c0a3b3734,0x33662e6c61626f6c\n"
".quad 0x5b202c3766252032,0x0a3b5d38346c7225,0x203436732e646461,0x25202c39346c7225\n"
".quad 0x3033202c32326c72,0x636f6c2e0a3b3237,0x2031353131203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x346c7225202c3035,0x2c326c7225202c39,0x0a3b39326c722520\n"
".quad 0x203436622e6c6873,0x25202c31356c7225,0x3233202c30356c72,0x36732e7268730a3b\n"
".quad 0x2c32356c72252034,0x202c31356c722520,0x636f6c2e0a3b3233,0x2031353131203220\n"
".quad 0x36622e6c68730a31,0x2c33356c72252034,0x202c32356c722520,0x732e6464610a3b32\n"
".quad 0x34356c7225203436,0x2c30316c7225202c,0x0a3b33356c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x356c72255b202c38,0x2e6464610a3b5d34,0x356c722520343673\n"
".quad 0x36336c7225202c35,0x0a3b34383533202c,0x31203220636f6c2e,0x616d0a3120323531\n"
".quad 0x3436732e6f6c2e64,0x202c36356c722520,0x25202c35356c7225,0x6c7225202c326c72\n"
".quad 0x2e6c68730a3b3932,0x356c722520343662,0x36356c7225202c37,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c38356c,0x0a3b3233202c3735,0x31203220636f6c2e\n"
".quad 0x68730a3120323531,0x7225203436622e6c,0x6c7225202c39356c,0x610a3b32202c3835\n"
".quad 0x25203436732e6464,0x7225202c30366c72,0x6c7225202c30316c,0x672e646c0a3b3935\n"
".quad 0x33662e6c61626f6c,0x5b202c3966252032,0x0a3b5d30366c7225,0x203436732e646461\n"
".quad 0x25202c31366c7225,0x3034202c36336c72,0x636f6c2e0a3b3639,0x2033353131203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x366c7225202c3236,0x2c326c7225202c31\n"
".quad 0x0a3b35316c722520,0x203436622e6c6873,0x25202c33366c7225,0x3233202c32366c72\n"
".quad 0x36732e7268730a3b,0x2c34366c72252034,0x202c33366c722520,0x636f6c2e0a3b3233\n"
".quad 0x2033353131203220,0x36622e6c68730a31,0x2c35366c72252034,0x202c34366c722520\n"
".quad 0x732e6464610a3b32,0x36366c7225203436,0x2c30316c7225202c,0x0a3b35366c722520\n"
".quad 0x61626f6c672e646c,0x6625203233662e6c,0x6c72255b202c3031,0x6464610a3b5d3636\n"
".quad 0x6c7225203436732e,0x386c7225202c3736,0x0a3b34383533202c,0x31203220636f6c2e\n"
".quad 0x616d0a3120313631,0x3436732e6f6c2e64,0x202c38366c722520,0x25202c37366c7225\n"
".quad 0x6c7225202c326c72,0x622e6c68730a3b37,0x39366c7225203436,0x2c38366c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x366c7225202c3037,0x2e0a3b3233202c39\n"
".quad 0x3131203220636f6c,0x6c68730a31203136,0x6c7225203436622e,0x376c7225202c3137\n"
".quad 0x64610a3b32202c30,0x7225203436732e64,0x366c7225202c336c,0x3b31376c7225202c\n"
".quad 0x3436732e6464610a,0x202c32376c722520,0x3034202c386c7225,0x636f6c2e0a3b3639\n"
".quad 0x2032363131203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x376c7225202c3337\n"
".quad 0x2c326c7225202c32,0x730a3b376c722520,0x25203436622e6c68,0x7225202c34376c72\n"
".quad 0x3b3233202c33376c,0x3436732e7268730a,0x202c35376c722520,0x33202c34376c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120323631312032,0x3436622e6c68730a,0x202c36376c722520\n"
".quad 0x32202c35376c7225,0x36732e6464610a3b,0x202c346c72252034,0x7225202c366c7225\n"
".quad 0x6f6c2e0a3b36376c,0x3435313120322063,0x20317025400a3120,0x3132424220617262\n"
".quad 0x6f6c2e0a0a3b325f,0x3836313120322063,0x662e6464610a3120,0x2c39316625203233\n"
".quad 0x6625202c32662520,0x662e6464610a3b33,0x2c30326625203233,0x25202c3931662520\n"
".quad 0x2e6464610a3b3466,0x3132662520323366,0x202c30326625202c,0x6464610a3b356625\n"
".quad 0x326625203233662e,0x2c31326625202c32,0x64610a3b36662520,0x6625203233662e64\n"
".quad 0x32326625202c3332,0x610a3b376625202c,0x25203233662e6464,0x326625202c343266\n"
".quad 0x0a3b386625202c33,0x203233662e646461,0x6625202c35326625,0x3b396625202c3432\n"
".quad 0x3233662e6464610a,0x25202c3632662520,0x316625202c353266,0x662e6275730a3b30\n"
".quad 0x2c37326625203233,0x6625202c33662520,0x662e6464610a3b35,0x2c38326625203233\n"
".quad 0x25202c3732662520,0x2e6275730a3b3766,0x3932662520323366,0x202c38326625202c\n"
".quad 0x6275730a3b386625,0x336625203233662e,0x2c39326625202c30,0x64610a3b39662520\n"
".quad 0x6625203233662e64,0x30336625202c3133,0x0a3b30316625202c,0x203233662e627573\n"
".quad 0x6625202c32336625,0x0a3b366625202c34,0x203233662e646461,0x6625202c33336625\n"
".quad 0x3b376625202c3233,0x3233662e6464610a,0x25202c3433662520,0x386625202c333366\n"
".quad 0x33662e6275730a3b,0x202c353366252032,0x6625202c34336625,0x662e6275730a3b39\n"
".quad 0x2c36336625203233,0x25202c3533662520,0x6c756d0a3b303166,0x336625203233662e\n"
".quad 0x2c36336625202c37,0x660a3b3633662520,0x33662e6e722e616d,0x202c383366252032\n"
".quad 0x6625202c31336625,0x37336625202c3133,0x33662e766f6d0a3b,0x202c393366252032\n"
".quad 0x3030304346336630,0x636f6c2e0a3b3030,0x2038363131203220,0x33662e67656e0a31\n"
".quad 0x202c303466252032,0x6d660a3b38336625,0x3233662e6e722e61,0x25202c3134662520\n"
".quad 0x336625202c303466,0x3b36326625202c39,0x2e6e722e616d660a,0x3234662520323366\n"
".quad 0x202c31346625202c,0x4538334545426630,0x3b326625202c3933,0x3233662e67656e0a\n"
".quad 0x25202c3334662520,0x2e646c0a3b323466,0x33662e6d61726170,0x2c33303166252032\n"
".quad 0x524c30315a5f5b20,0x32444341425f645f,0x705f6d665f536650,0x3b5d325f6d617261\n"
".quad 0x203220636f6c2e0a,0x660a312038363131,0x33662e6e722e616d,0x202c343466252032\n"
".quad 0x6625202c33346625,0x326625202c333031,0x33662e766f6d0a3b,0x202c353466252032\n"
".quad 0x3030303430346630,0x636f6c2e0a3b3030,0x2038363131203220,0x6e722e616d660a31\n"
".quad 0x346625203233662e,0x2c31336625202c36,0x3030343034663020,0x326625202c303030\n"
".quad 0x662e6c756d0a3b36,0x2c37346625203233,0x30202c3133662520,0x3030303039303466\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x37346625202c3834,0x202c31336625202c\n"
".quad 0x6d660a3b36346625,0x3233662e6e722e61,0x25202c3934662520,0x336625202c303466\n"
".quad 0x3b38346625202c39,0x3233662e766f6d0a,0x30202c3035662520,0x3345383345443366\n"
".quad 0x20636f6c2e0a3b39,0x3120383631312032,0x3233662e67656e0a,0x25202c3135662520\n"
".quad 0x616d660a3b393466,0x203233662e6e722e,0x6625202c32356625,0x30356625202c3135\n"
".quad 0x6e0a3b336625202c,0x25203233662e6765,0x356625202c333566,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x33356625202c3435,0x2c3330316625202c,0x6d660a3b33662520\n"
".quad 0x3233662e6e722e61,0x25202c3535662520,0x346630202c363366,0x2c30303030303430\n"
".quad 0x6d0a3b3632662520,0x25203233662e6c75,0x336625202c363566,0x3930346630202c36\n"
".quad 0x660a3b3030303030,0x33662e6e722e616d,0x202c373566252032,0x6625202c36356625\n"
".quad 0x35356625202c3633,0x6e722e616d660a3b,0x356625203233662e,0x2c30346625202c38\n"
".quad 0x25202c3933662520,0x67656e0a3b373566,0x356625203233662e,0x3b38356625202c39\n"
".quad 0x2e6e722e616d660a,0x3036662520323366,0x202c39356625202c,0x6625202c30356625\n"
".quad 0x662e67656e0a3b34,0x2c31366625203233,0x660a3b3036662520,0x33662e6e722e616d\n"
".quad 0x202c323666252032,0x6625202c31366625,0x346625202c333031,0x33662e67656e0a3b\n"
".quad 0x202c333666252032,0x6d660a3b31336625,0x3233662e6e722e61,0x25202c3436662520\n"
".quad 0x346625202c333666,0x3b36326625202c35,0x2e6e722e616d660a,0x3536662520323366\n"
".quad 0x202c37346625202c,0x6625202c31336625,0x2e616d660a3b3436,0x25203233662e6e72\n"
".quad 0x346625202c363666,0x2c39336625202c30,0x6e0a3b3536662520,0x25203233662e6765\n"
".quad 0x366625202c373666,0x722e616d660a3b36,0x6625203233662e6e,0x37366625202c3836\n"
".quad 0x202c30356625202c,0x67656e0a3b356625,0x366625203233662e,0x3b38366625202c39\n"
".quad 0x2e6e722e616d660a,0x3037662520323366,0x202c39366625202c,0x25202c3330316625\n"
".quad 0x2e67656e0a3b3566,0x3137662520323366,0x0a3b36336625202c,0x662e6e722e616d66\n"
".quad 0x2c32376625203233,0x25202c3137662520,0x326625202c353466,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x36356625202c3337,0x202c36336625202c,0x6d660a3b32376625\n"
".quad 0x3233662e6e722e61,0x25202c3437662520,0x336625202c303466,0x3b33376625202c39\n"
".quad 0x3233662e67656e0a,0x25202c3537662520,0x616d660a3b343766,0x203233662e6e722e\n"
".quad 0x6625202c36376625,0x30356625202c3537,0x6e0a3b366625202c,0x25203233662e6765\n"
".quad 0x376625202c373766,0x722e616d660a3b36,0x6625203233662e6e,0x37376625202c3837\n"
".quad 0x2c3330316625202c,0x64610a3b36662520,0x6625203233662e64,0x31336625202c3937\n"
".quad 0x0a3b36336625202c,0x662e6e722e616d66,0x2c30386625203233,0x30202c3937662520\n"
".quad 0x3030303034303466,0x3b36326625202c30,0x3233662e6c756d0a,0x25202c3138662520\n"
".quad 0x346630202c393766,0x3b30303030303930,0x2e6e722e616d660a,0x3238662520323366\n"
".quad 0x202c31386625202c,0x6625202c39376625,0x2e616d660a3b3038,0x25203233662e6e72\n"
".quad 0x346625202c333866,0x2c39336625202c30,0x630a3b3238662520,0x662e3436662e7476\n"
".quad 0x2c31646625203233,0x6d0a3b3338662520,0x25203436662e766f,0x336430202c326466\n"
".quad 0x3137433137433946,0x3b43314438423743,0x203220636f6c2e0a,0x630a312038363131\n"
".quad 0x662e3436662e7476,0x2c33646625203233,0x656e0a3b37662520,0x6625203436662e67\n"
".quad 0x31646625202c3464,0x6e722e616d660a3b,0x646625203436662e,0x2c34646625202c35\n"
".quad 0x25202c3264662520,0x7476630a3b336466,0x3233662e3436662e,0x25202c3664662520\n"
".quad 0x656e0a3b33303166,0x6625203436662e67,0x36646625202c3764,0x6e722e616d660a3b\n"
".quad 0x646625203436662e,0x2c37646625202c38,0x25202c3564662520,0x7476630a3b336466\n"
".quad 0x2e3233662e6e722e,0x3438662520343666,0x0a3b38646625202c,0x203233662e627573\n"
".quad 0x6625202c35386625,0x31336625202c3633,0x3220636f6c2e0a3b,0x0a31203836313120\n"
".quad 0x662e6e722e616d66,0x2c36386625203233,0x30202c3538662520,0x3030303034303466\n"
".quad 0x3b36326625202c30,0x3233662e6c756d0a,0x25202c3738662520,0x346630202c353866\n"
".quad 0x3b30303030303930,0x2e6e722e616d660a,0x3838662520323366,0x202c37386625202c\n"
".quad 0x6625202c35386625,0x2e616d660a3b3638,0x25203233662e6e72,0x346625202c393866\n"
".quad 0x2c39336625202c30,0x630a3b3838662520,0x662e3436662e7476,0x2c39646625203233\n"
".quad 0x630a3b3938662520,0x662e3436662e7476,0x3031646625203233,0x6e0a3b386625202c\n"
".quad 0x25203436662e6765,0x6625202c31316466,0x2e616d660a3b3964,0x25203436662e6e72\n"
".quad 0x6625202c32316466,0x646625202c313164,0x3031646625202c32,0x6e722e616d660a3b\n"
".quad 0x646625203436662e,0x37646625202c3331,0x2c3231646625202c,0x0a3b303164662520\n"
".quad 0x662e6e722e747663,0x25203436662e3233,0x646625202c303966,0x2e6275730a3b3331\n"
".quad 0x3139662520323366,0x202c33366625202c,0x6d660a3b36336625,0x3233662e6e722e61\n"
".quad 0x25202c3239662520,0x346630202c313966,0x2c30303030303430,0x6d0a3b3632662520\n"
".quad 0x25203233662e6c75,0x396625202c333966,0x3930346630202c31,0x660a3b3030303030\n"
".quad 0x33662e6e722e616d,0x202c343966252032,0x6625202c33396625,0x32396625202c3139\n"
".quad 0x6e722e616d660a3b,0x396625203233662e,0x2c30346625202c35,0x25202c3933662520\n"
".quad 0x7476630a3b343966,0x3233662e3436662e,0x202c343164662520,0x76630a3b35396625\n"
".quad 0x33662e3436662e74,0x2c35316466252032,0x656e0a3b39662520,0x6625203436662e67\n"
".quad 0x646625202c363164,0x2e616d660a3b3431,0x25203436662e6e72,0x6625202c37316466\n"
".quad 0x646625202c363164,0x3531646625202c32,0x6e722e616d660a3b,0x646625203436662e\n"
".quad 0x37646625202c3831,0x2c3731646625202c,0x0a3b353164662520,0x662e6e722e747663\n"
".quad 0x25203436662e3233,0x646625202c363966,0x2e6275730a3b3831,0x3739662520323366\n"
".quad 0x202c31336625202c,0x6d660a3b36336625,0x3233662e6e722e61,0x25202c3839662520\n"
".quad 0x346630202c373966,0x2c30303030303430,0x6d0a3b3632662520,0x25203233662e6c75\n"
".quad 0x396625202c393966,0x3930346630202c37,0x660a3b3030303030,0x33662e6e722e616d\n"
".quad 0x2c30303166252032,0x25202c3939662520,0x396625202c373966,0x722e616d660a3b38\n"
".quad 0x6625203233662e6e,0x346625202c313031,0x2c39336625202c30,0x0a3b303031662520\n"
".quad 0x2e3436662e747663,0x3164662520323366,0x3130316625202c39,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x316625202c303264,0x662e67656e0a3b30,0x3132646625203436\n"
".quad 0x3b3931646625202c,0x2e6e722e616d660a,0x3264662520343666,0x3132646625202c32\n"
".quad 0x202c32646625202c,0x660a3b3032646625,0x36662e6e722e616d,0x2c33326466252034\n"
".quad 0x25202c3764662520,0x6625202c32326466,0x7476630a3b303264,0x2e3233662e6e722e\n"
".quad 0x3031662520343666,0x3332646625202c32,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3936316c72,0x645f524c30315a5f,0x665032444341425f,0x7261705f6d665f53\n"
".quad 0x2e0a3b5d335f6d61,0x3131203220636f6c,0x64616d0a31203733,0x203436732e6f6c2e\n"
".quad 0x25202c39376c7225,0x6c7225202c386c72,0x6c7225202c393631,0x61702e646c0a3b37\n"
".quad 0x203436752e6d6172,0x202c3736316c7225,0x5f524c30315a5f5b,0x5032444341425f64\n"
".quad 0x61705f6d665f5366,0x0a3b5d315f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67\n"
".quad 0x30386c7225203436,0x3736316c7225202c,0x36622e6c68730a3b,0x2c31386c72252034\n"
".quad 0x202c39376c722520,0x2e7268730a3b3233,0x386c722520343673,0x31386c7225202c32\n"
".quad 0x6c2e0a3b3233202c,0x363131203220636f,0x2e6c68730a312039,0x386c722520343662\n"
".quad 0x32386c7225202c33,0x6464610a3b32202c,0x6c7225203436732e,0x386c7225202c3438\n"
".quad 0x33386c7225202c30,0x6f6c672e74730a3b,0x203233662e6c6162,0x2c5d34386c72255b\n"
".quad 0x2e0a3b3434662520,0x3131203220636f6c,0x64616d0a31203535,0x203436732e6f6c2e\n"
".quad 0x25202c36386c7225,0x7225202c36316c72,0x7225202c3936316c,0x2e6c68730a3b376c\n"
".quad 0x386c722520343662,0x36386c7225202c37,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c38386c,0x0a3b3233202c3738,0x31203220636f6c2e,0x68730a3120353531\n"
".quad 0x7225203436622e6c,0x6c7225202c39386c,0x610a3b32202c3838,0x25203436732e6464\n"
".quad 0x7225202c30396c72,0x6c7225202c30386c,0x636f6c2e0a3b3938,0x2030373131203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d30396c72255b,0x610a3b3435662520\n"
".quad 0x25203436732e6464,0x7225202c31396c72,0x34323031202c386c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203635313120,0x732e6f6c2e64616d,0x32396c7225203436,0x2c31396c7225202c\n"
".quad 0x2c3936316c722520,0x730a3b376c722520,0x25203436622e6c68,0x7225202c33396c72\n"
".quad 0x3b3233202c32396c,0x3436732e7268730a,0x202c34396c722520,0x33202c33396c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120363531312032,0x3436622e6c68730a,0x202c35396c722520\n"
".quad 0x32202c34396c7225,0x36732e6464610a3b,0x2c36396c72252034,0x202c30386c722520\n"
".quad 0x2e0a3b35396c7225,0x3131203220636f6c,0x2e74730a31203137,0x662e6c61626f6c67\n"
".quad 0x396c72255b203233,0x32366625202c5d36,0x3220636f6c2e0a3b,0x0a31203735313120\n"
".quad 0x732e6f6c2e64616d,0x38396c7225203436,0x2c30336c7225202c,0x2c3936316c722520\n"
".quad 0x730a3b376c722520,0x25203436622e6c68,0x7225202c39396c72,0x3b3233202c38396c\n"
".quad 0x3436732e7268730a,0x2c3030316c722520,0x202c39396c722520,0x636f6c2e0a3b3233\n"
".quad 0x2037353131203220,0x36622e6c68730a31,0x3130316c72252034,0x3030316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c323031,0x316c7225202c3038\n"
".quad 0x636f6c2e0a3b3130,0x2032373131203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x5d3230316c72255b,0x0a3b30376625202c,0x203436732e646461,0x202c3330316c7225\n"
".quad 0x3032202c386c7225,0x636f6c2e0a3b3834,0x2038353131203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c343031,0x6c7225202c333031,0x6c7225202c393631\n"
".quad 0x622e6c68730a3b37,0x30316c7225203436,0x30316c7225202c35,0x730a3b3233202c34\n"
".quad 0x25203436732e7268,0x25202c3630316c72,0x33202c3530316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120383531312032,0x3436622e6c68730a,0x2c3730316c722520,0x2c3630316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x386c7225202c3830,0x30316c7225202c30\n"
".quad 0x20636f6c2e0a3b37,0x3120333731312032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3830316c7225,0x610a3b3837662520,0x25203436732e6464,0x25202c3930316c72\n"
".quad 0x363532202c386c72,0x20636f6c2e0a3b30,0x3120393531312032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3031,0x316c7225202c3930,0x376c7225202c3936\n"
".quad 0x36622e6c68730a3b,0x3131316c72252034,0x3031316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3231316c,0x3233202c3131316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203935313120,0x203436622e6c6873,0x202c3331316c7225,0x202c3231316c7225\n"
".quad 0x732e6464610a3b32,0x31316c7225203436,0x30386c7225202c34,0x3331316c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203437313120,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3431316c72,0x64610a3b34386625,0x7225203436732e64,0x7225202c3531316c\n"
".quad 0x32373033202c386c,0x3220636f6c2e0a3b,0x0a31203036313120,0x732e6f6c2e64616d\n"
".quad 0x31316c7225203436,0x31316c7225202c36,0x36316c7225202c35,0x3b376c7225202c39\n"
".quad 0x3436622e6c68730a,0x2c3731316c722520,0x2c3631316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c383131,0x3b3233202c373131,0x203220636f6c2e0a\n"
".quad 0x730a312030363131,0x25203436622e6c68,0x25202c3931316c72,0x32202c3831316c72\n"
".quad 0x36732e6464610a3b,0x3032316c72252034,0x2c30386c7225202c,0x3b3931316c722520\n"
".quad 0x203220636f6c2e0a,0x730a312035373131,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3032316c,0x6f6c2e0a3b303966,0x3136313120322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3232316c,0x6c7225202c37366c,0x6c7225202c393631\n"
".quad 0x622e6c68730a3b37,0x32316c7225203436,0x32316c7225202c33,0x730a3b3233202c32\n"
".quad 0x25203436732e7268,0x25202c3432316c72,0x33202c3332316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120313631312032,0x3436622e6c68730a,0x2c3532316c722520,0x2c3432316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x386c7225202c3632,0x32316c7225202c30\n"
".quad 0x20636f6c2e0a3b35,0x3120363731312032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3632316c7225,0x2e0a3b3639662520,0x3131203220636f6c,0x2e74730a31203737\n"
".quad 0x662e6c61626f6c67,0x346c72255b203233,0x3230316625202c5d,0x3220636f6c2e0a3b\n"
".quad 0x0a32203038313120,0x42420a0a3b746572,0x646c0a3a325f3132,0x752e6d617261702e\n"
".quad 0x36316c7225203436,0x30315a5f5b202c38,0x4341425f645f524c,0x6d665f5366503244\n"
".quad 0x335f6d617261705f,0x20636f6c2e0a3b5d,0x3120353531312032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3033,0x36316c7225202c36,0x3b376c7225202c38\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3636316c,0x5f645f524c30315a\n"
".quad 0x5366503244434142,0x617261705f6d665f,0x76630a3b5d315f6d,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x2c3133316c722520,0x3b3636316c722520,0x3436622e6c68730a\n"
".quad 0x2c3233316c722520,0x2c3033316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c333331,0x3b3233202c323331,0x203220636f6c2e0a,0x730a312035353131\n"
".quad 0x25203436622e6c68,0x25202c3433316c72,0x32202c3333316c72,0x36732e6464610a3b\n"
".quad 0x3533316c72252034,0x3133316c7225202c,0x3433316c7225202c,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x5d3533316c72255b,0x610a3b356625202c,0x25203436732e6464\n"
".quad 0x25202c3633316c72,0x323031202c386c72,0x20636f6c2e0a3b34,0x3120363531312032\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3733,0x316c7225202c3633\n"
".quad 0x376c7225202c3836,0x36622e6c68730a3b,0x3833316c72252034,0x3733316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3933316c,0x3233202c3833316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203635313120,0x203436622e6c6873,0x202c3034316c7225\n"
".quad 0x202c3933316c7225,0x732e6464610a3b32,0x34316c7225203436,0x33316c7225202c31\n"
".quad 0x34316c7225202c31,0x6c672e74730a3b30,0x3233662e6c61626f,0x3134316c72255b20\n"
".quad 0x0a3b366625202c5d,0x31203220636f6c2e,0x616d0a3120373531,0x3436732e6f6c2e64\n"
".quad 0x2c3334316c722520,0x202c30336c722520,0x202c3836316c7225,0x68730a3b376c7225\n"
".quad 0x7225203436622e6c,0x7225202c3434316c,0x3233202c3334316c,0x36732e7268730a3b\n"
".quad 0x3534316c72252034,0x3434316c7225202c,0x6c2e0a3b3233202c,0x353131203220636f\n"
".quad 0x2e6c68730a312037,0x316c722520343662,0x316c7225202c3634,0x610a3b32202c3534\n"
".quad 0x25203436732e6464,0x25202c3734316c72,0x25202c3133316c72,0x730a3b3634316c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3734316c,0x2e6464610a3b3366\n"
".quad 0x316c722520343673,0x386c7225202c3834,0x0a3b38343032202c,0x31203220636f6c2e\n"
".quad 0x616d0a3120383531,0x3436732e6f6c2e64,0x2c3934316c722520,0x2c3834316c722520\n"
".quad 0x2c3836316c722520,0x730a3b376c722520,0x25203436622e6c68,0x25202c3035316c72\n"
".quad 0x33202c3934316c72,0x732e7268730a3b32,0x35316c7225203436,0x35316c7225202c31\n"
".quad 0x2e0a3b3233202c30,0x3131203220636f6c,0x6c68730a31203835,0x6c7225203436622e\n"
".quad 0x6c7225202c323531,0x0a3b32202c313531,0x203436732e646461,0x202c3335316c7225\n"
".quad 0x202c3133316c7225,0x0a3b3235316c7225,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3335316c72,0x6464610a3b346625,0x6c7225203436732e,0x6c7225202c343531\n"
".quad 0x3b30363532202c38,0x203220636f6c2e0a,0x6d0a312039353131,0x36732e6f6c2e6461\n"
".quad 0x3535316c72252034,0x3435316c7225202c,0x3836316c7225202c,0x0a3b376c7225202c\n"
".quad 0x203436622e6c6873,0x202c3635316c7225,0x202c3535316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3735,0x0a3b3233202c3635,0x31203220636f6c2e\n"
".quad 0x68730a3120393531,0x7225203436622e6c,0x7225202c3835316c,0x3b32202c3735316c\n"
".quad 0x3436732e6464610a,0x2c3935316c722520,0x2c3133316c722520,0x3b3835316c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3935316c7225,0x64610a3b39662520\n"
".quad 0x7225203436732e64,0x7225202c3036316c,0x32373033202c386c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203036313120,0x732e6f6c2e64616d,0x36316c7225203436,0x36316c7225202c31\n"
".quad 0x36316c7225202c30,0x3b376c7225202c38,0x3436622e6c68730a,0x2c3236316c722520\n"
".quad 0x2c3136316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c333631\n"
".quad 0x3b3233202c323631,0x203220636f6c2e0a,0x730a312030363131,0x25203436622e6c68\n"
".quad 0x25202c3436316c72,0x32202c3336316c72,0x36732e6464610a3b,0x3536316c72252034\n"
".quad 0x3133316c7225202c,0x3436316c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x5d3536316c72255b,0x0a3b30316625202c,0x31203220636f6c2e,0x74730a3120313631\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x3b376625202c5d33,0x203220636f6c2e0a\n"
".quad 0x730a312032363131,0x6c61626f6c672e74,0x72255b203233662e,0x386625202c5d346c\n"
".quad 0x3220636f6c2e0a3b,0x0a32203038313120,0x0a0a7d0a3b746572,0x5f207972746e652e\n"
".quad 0x5f645f524c32315a,0x5043444142627968,0x0a28666d665f5366,0x2e206d617261702e\n"
".quad 0x32315a5f20343675,0x6279685f645f524c,0x5f53665043444142,0x617261705f666d66\n"
".quad 0x61702e0a2c305f6d,0x3436752e206d6172,0x5f524c32315a5f20,0x4441426279685f64\n"
".quad 0x666d665f53665043,0x315f6d617261705f,0x6d617261702e0a2c,0x5a5f203233662e20\n"
".quad 0x685f645f524c3231,0x6650434441426279,0x61705f666d665f53,0x2e0a2c325f6d6172\n"
".quad 0x752e206d61726170,0x4c32315a5f203436,0x426279685f645f52,0x665f536650434441\n"
".quad 0x6d617261705f666d,0x7261702e0a2c335f,0x203233662e206d61,0x645f524c32315a5f\n"
".quad 0x434441426279685f,0x5f666d665f536650,0x0a345f6d61726170,0x6765722e0a7b0a29\n"
".quad 0x6625203233662e20,0x2e0a3b3e3434313c,0x3436662e20676572,0x3e34323c64662520\n"
".quad 0x2e206765722e0a3b,0x3c70252064657270,0x6765722e0a3b3e37,0x7225203233732e20\n"
".quad 0x722e0a3b3e31353c,0x203436732e206765,0x3e3333313c6c7225,0x702e646c0a0a0a3b\n"
".quad 0x3436752e6d617261,0x202c30316c722520,0x5f524c32315a5f5b,0x4441426279685f64\n"
".quad 0x666d665f53665043,0x305f6d617261705f,0x61702e646c0a3b5d,0x203436752e6d6172\n"
".quad 0x5f5b202c316c7225,0x5f645f524c32315a,0x5043444142627968,0x705f666d665f5366\n"
".quad 0x3b5d315f6d617261,0x617261702e646c0a,0x7225203436752e6d,0x315a5f5b202c326c\n"
".quad 0x79685f645f524c32,0x5366504344414262,0x7261705f666d665f,0x630a3b5d335f6d61\n"
".quad 0x672e6f742e617476,0x36752e6c61626f6c,0x202c336c72252034,0x76630a3b316c7225\n"
".quad 0x6c672e6f742e6174,0x3436752e6c61626f,0x25202c346c722520,0x6c2e0a3b30316c72\n"
".quad 0x383131203220636f,0x2e766f6d0a312035,0x2c33722520323375,0x782e6469746e2520\n"
".quad 0x33752e766f6d0a3b,0x25202c3472252032,0x3b782e6469617463,0x3233752e766f6d0a\n"
".quad 0x7425202c35722520,0x616d0a3b782e6469,0x3233732e6f6c2e64,0x7225202c31722520\n"
".quad 0x202c347225202c33,0x6f6c2e0a3b357225,0x3638313120322063,0x752e766f6d0a3120\n"
".quad 0x202c367225203233,0x3b792e6469746e25,0x3233752e766f6d0a,0x6325202c37722520\n"
".quad 0x0a3b792e64696174,0x203233752e766f6d,0x697425202c387225,0x64616d0a3b792e64\n"
".quad 0x203233732e6f6c2e,0x367225202c327225,0x25202c377225202c,0x636f6c2e0a3b3872\n"
".quad 0x2037383131203220,0x6e722e7476630a31,0x3233732e3233662e,0x25202c3231662520\n"
".quad 0x2e616d660a3b3172,0x25203233662e6e72,0x316625202c333166,0x3845336630202c32\n"
".quad 0x30202c3030303030,0x3030444643333466,0x20636f6c2e0a3b30,0x3120383831312032\n"
".quad 0x2e6e722e7476630a,0x203233732e323366,0x327225202c326625,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x202c326625202c34,0x3030303845336630,0x33346630202c3030\n"
".quad 0x0a3b303030444639,0x2e3436752e747663,0x356c722520323375,0x2e0a3b317225202c\n"
".quad 0x3131203220636f6c,0x7476630a31203938,0x3233732e3436732e,0x25202c366c722520\n"
".quad 0x2e64616d0a3b3272,0x25203436732e6f6c,0x6c7225202c376c72,0x2c326c7225202c36\n"
".quad 0x610a3b356c722520,0x25203233662e6464,0x316625202c353166,0x4633436630202c33\n"
".quad 0x610a3b3030304346,0x25203233662e6464,0x316625202c363166,0x4233436630202c34\n"
".quad 0x2e0a3b3030304346,0x3437203220636f6c,0x662e6c756d0a3120,0x2c37316625203233\n"
".quad 0x25202c3631662520,0x616d660a3b363166,0x203233662e6e722e,0x6625202c38316625\n"
".quad 0x35316625202c3531,0x0a3b37316625202c,0x2e746c2e70746573,0x2c31702520323366\n"
".quad 0x30202c3831662520,0x3030303038323466,0x732e6464610a3b30,0x202c397225203233\n"
".quad 0x3b322d202c317225,0x74672e707465730a,0x327025203233752e,0x37202c397225202c\n"
".quad 0x636f6c2e0a3b3336,0x2033393131203220,0x6c2e707465730a31,0x7025203233732e74\n"
".quad 0x202c327225202c33,0x72702e726f0a3b32,0x202c347025206465,0x337025202c327025\n"
".quad 0x3220636f6c2e0a3b,0x0a31203339313120,0x2e74672e70746573,0x2c35702520323373\n"
".quad 0x3035202c32722520,0x72702e726f0a3b39,0x202c367025206465,0x357025202c347025\n"
".quad 0x3220636f6c2e0a3b,0x0a31203339313120,0x6172622036702540,0x3b345f3232424220\n"
".quad 0x36622e6c68730a0a,0x2c31316c72252034,0x33202c376c722520,0x732e7268730a3b32\n"
".quad 0x32316c7225203436,0x2c31316c7225202c,0x6f6c2e0a3b323320,0x3839313120322063\n"
".quad 0x622e6c68730a3120,0x33316c7225203436,0x2c32316c7225202c,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x2c346c7225202c34,0x0a3b33316c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x316c72255b202c33,0x2e6464610a3b5d34,0x3131722520323373\n"
".quad 0x2d202c327225202c,0x20636f6c2e0a3b31,0x3120393931312032,0x3436752e7476630a\n"
".quad 0x6c7225203233752e,0x31317225202c3531,0x36732e6464610a3b,0x2c36316c72252034\n"
".quad 0x202c35316c722520,0x646c0a3b34323031,0x752e6d617261702e,0x33316c7225203436\n"
".quad 0x32315a5f5b202c32,0x6279685f645f524c,0x5f53665043444142,0x617261705f666d66\n"
".quad 0x6c2e0a3b5d335f6d,0x393131203220636f,0x2e64616d0a312039,0x25203436732e6f6c\n"
".quad 0x7225202c37316c72,0x6c7225202c36316c,0x6c7225202c323331,0x622e6c68730a3b35\n"
".quad 0x38316c7225203436,0x2c37316c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x316c7225202c3931,0x2e0a3b3233202c38,0x3131203220636f6c,0x6c68730a31203939\n"
".quad 0x6c7225203436622e,0x316c7225202c3032,0x64610a3b32202c39,0x7225203436732e64\n"
".quad 0x6c7225202c31326c,0x30326c7225202c34,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x72255b202c346625,0x6c2e0a3b5d31326c,0x303231203220636f,0x2e6464610a312030\n"
".quad 0x3331722520323373,0x31202c327225202c,0x36752e7476630a3b,0x7225203233752e34\n"
".quad 0x317225202c32326c,0x732e6464610a3b33,0x33326c7225203436,0x2c32326c7225202c\n"
".quad 0x2e0a3b3834303220,0x3231203220636f6c,0x64616d0a31203030,0x203436732e6f6c2e\n"
".quad 0x25202c34326c7225,0x7225202c33326c72,0x7225202c3233316c,0x2e6c68730a3b356c\n"
".quad 0x326c722520343662,0x34326c7225202c35,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c36326c,0x0a3b3233202c3532,0x31203220636f6c2e,0x68730a3120303032\n"
".quad 0x7225203436622e6c,0x6c7225202c37326c,0x610a3b32202c3632,0x25203436732e6464\n"
".quad 0x7225202c38326c72,0x326c7225202c346c,0x6c672e646c0a3b37,0x3233662e6c61626f\n"
".quad 0x255b202c35662520,0x610a3b5d38326c72,0x25203233732e6464,0x317225202c353172\n"
".quad 0x6c2e0a3b312d202c,0x303231203220636f,0x2e7476630a312031,0x732e3233662e6e72\n"
".quad 0x2c35356625203233,0x610a3b3531722520,0x25203233662e6464,0x356625202c333566\n"
".quad 0x3046336630202c35,0x610a3b3030303030,0x25203233662e6464,0x326625202c303366\n"
".quad 0x303046336630202c,0x6f6d0a3b30303030,0x7225203233752e76,0x0a0a3b30202c3631\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x393166257b203233,0x202c30326625202c\n"
".quad 0x6625202c31326625,0x65745b202c7d3232,0x4431665f66655278,0x2c333566257b202c\n"
".quad 0x3b5d7d3033662520,0x20636f6c2e090a0a,0x3120323032312032,0x3233732e6464610a\n"
".quad 0x25202c3731722520,0x630a3b31202c3172,0x33662e6e722e7476,0x6625203233732e32\n"
".quad 0x37317225202c3635,0x33662e6464610a3b,0x202c373466252032,0x6630202c36356625\n"
".quad 0x3030303030304633,0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x326625202c353266,0x2c37326625202c36,0x202c7d3832662520,0x5f6665527865745b\n"
".quad 0x66257b202c443366,0x30336625202c3734,0x6c2e090a0a3b5d7d,0x303231203220636f\n"
".quad 0x2e7476630a312033,0x732e3233662e6e72,0x2c37356625203233,0x610a3b3131722520\n"
".quad 0x25203233662e6464,0x356625202c323466,0x3046336630202c37,0x0a0a3b3030303030\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x313366257b203233,0x202c32336625202c\n"
".quad 0x6625202c33336625,0x65745b202c7d3433,0x4435665f66655278,0x2c333566257b202c\n"
".quad 0x3b5d7d3234662520,0x786574090a090a0a,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x6625202c37336625,0x39336625202c3833,0x2c7d30346625202c,0x6665527865745b20\n"
".quad 0x257b202c4436665f,0x346625202c373466,0x2e090a0a3b5d7d32,0x3231203220636f6c\n"
".quad 0x7476630a31203530,0x2e3233662e6e722e,0x3835662520323373,0x0a3b33317225202c\n"
".quad 0x203233662e646461,0x6625202c34356625,0x46336630202c3835,0x0a3b303030303030\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3466257b20323366,0x2c34346625202c33\n"
".quad 0x25202c3534662520,0x745b202c7d363466,0x37665f6665527865,0x373466257b202c44\n"
".quad 0x5d7d34356625202c,0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366\n"
".quad 0x25202c393466257b,0x356625202c303566,0x7d32356625202c31,0x65527865745b202c\n"
".quad 0x7b202c4438665f66,0x6625202c33356625,0x090a0a3b5d7d3435,0x203436732e646461\n"
".quad 0x25202c39326c7225,0x383533202c366c72,0x20636f6c2e0a3b34,0x3120343132312032\n"
".quad 0x2e6f6c2e64616d0a,0x336c722520343673,0x39326c7225202c30,0x3233316c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x25202c31336c7225,0x3233202c30336c72\n"
".quad 0x36732e7268730a3b,0x2c32336c72252034,0x202c31336c722520,0x636f6c2e0a3b3233\n"
".quad 0x2034313231203220,0x36622e6c68730a31,0x2c33336c72252034,0x202c32336c722520\n"
".quad 0x732e6464610a3b32,0x2c386c7225203436,0x25202c336c722520,0x64610a3b33336c72\n"
".quad 0x7225203436732e64,0x6c7225202c34336c,0x3b36393034202c36,0x203220636f6c2e0a\n"
".quad 0x6d0a312035313231,0x36732e6f6c2e6461,0x2c35336c72252034,0x202c34336c722520\n"
".quad 0x202c3233316c7225,0x68730a3b356c7225,0x7225203436622e6c,0x6c7225202c36336c\n"
".quad 0x0a3b3233202c3533,0x203436732e726873,0x25202c37336c7225,0x3233202c36336c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203531323120,0x203436622e6c6873,0x25202c38336c7225\n"
".quad 0x3b32202c37336c72,0x3436732e6464610a,0x25202c396c722520,0x6c7225202c336c72\n"
".quad 0x636f6c2e0a3b3833,0x2037303231203220,0x6220317025400a31,0x5f32324242206172\n"
".quad 0x636f6c2e0a0a3b33,0x2031323231203220,0x33662e6464610a31,0x202c393566252032\n"
".quad 0x316625202c336625,0x662e6464610a3b39,0x2c30366625203233,0x25202c3935662520\n"
".quad 0x2e6464610a3b3466,0x3136662520323366,0x202c30366625202c,0x64610a3b35326625\n"
".quad 0x6625203233662e64,0x31366625202c3236,0x610a3b356625202c,0x25203233662e6464\n"
".quad 0x366625202c333666,0x3b31336625202c32,0x3233662e6464610a,0x25202c3436662520\n"
".quad 0x336625202c333666,0x662e6464610a3b37,0x2c35366625203233,0x25202c3436662520\n"
".quad 0x6464610a3b333466,0x366625203233662e,0x2c35366625202c36,0x730a3b3934662520\n"
".quad 0x25203233662e6275,0x316625202c373666,0x3b35326625202c39,0x3233662e6464610a\n"
".quad 0x25202c3836662520,0x336625202c373666,0x662e6275730a3b31,0x2c39366625203233\n"
".quad 0x25202c3836662520,0x6275730a3b373366,0x376625203233662e,0x2c39366625202c30\n"
".quad 0x610a3b3334662520,0x25203233662e6464,0x376625202c313766,0x3b39346625202c30\n"
".quad 0x3233662e6275730a,0x25202c3237662520,0x3b356625202c3466,0x3233662e6464610a\n"
".quad 0x25202c3337662520,0x336625202c323766,0x662e6464610a3b31,0x2c34376625203233\n"
".quad 0x25202c3337662520,0x6275730a3b373366,0x376625203233662e,0x2c34376625202c35\n"
".quad 0x730a3b3334662520,0x25203233662e6275,0x376625202c363766,0x3b39346625202c35\n"
".quad 0x3233662e6c756d0a,0x25202c3737662520,0x376625202c363766,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x31376625202c3837,0x202c31376625202c,0x6f6d0a3b37376625\n"
".quad 0x6625203233662e76,0x46336630202c3937,0x0a3b303030303043,0x31203220636f6c2e\n"
".quad 0x656e0a3120313232,0x6625203233662e67,0x38376625202c3038,0x6e722e616d660a3b\n"
".quad 0x386625203233662e,0x2c30386625202c31,0x25202c3937662520,0x616d660a3b363666\n"
".quad 0x203233662e6e722e,0x6625202c32386625,0x45426630202c3138,0x202c393345383345\n"
".quad 0x67656e0a3b336625,0x386625203233662e,0x3b32386625202c33,0x617261702e646c0a\n"
".quad 0x6625203233662e6d,0x5a5f5b202c333431,0x685f645f524c3231,0x6650434441426279\n"
".quad 0x61705f666d665f53,0x0a3b5d325f6d6172,0x31203220636f6c2e,0x6d660a3120313232\n"
".quad 0x3233662e6e722e61,0x25202c3438662520,0x316625202c333866,0x3b336625202c3334\n"
".quad 0x3233662e766f6d0a,0x30202c3538662520,0x3030303034303466,0x20636f6c2e0a3b30\n"
".quad 0x3120313232312032,0x2e6e722e616d660a,0x3638662520323366,0x202c31376625202c\n"
".quad 0x3030303430346630,0x36366625202c3030,0x33662e6c756d0a3b,0x202c373866252032\n"
".quad 0x6630202c31376625,0x3030303030393034,0x6e722e616d660a3b,0x386625203233662e\n"
".quad 0x2c37386625202c38,0x25202c3137662520,0x616d660a3b363866,0x203233662e6e722e\n"
".quad 0x6625202c39386625,0x39376625202c3038,0x0a3b38386625202c,0x203233662e766f6d\n"
".quad 0x6630202c30396625,0x3933453833454433,0x3220636f6c2e0a3b,0x0a31203132323120\n"
".quad 0x203233662e67656e,0x6625202c31396625,0x2e616d660a3b3938,0x25203233662e6e72\n"
".quad 0x396625202c323966,0x2c30396625202c31,0x6e0a3b3931662520,0x25203233662e6765\n"
".quad 0x396625202c333966,0x722e616d660a3b32,0x6625203233662e6e,0x33396625202c3439\n"
".quad 0x2c3334316625202c,0x660a3b3931662520,0x33662e6e722e616d,0x202c353966252032\n"
".quad 0x6630202c36376625,0x3030303030343034,0x0a3b36366625202c,0x203233662e6c756d\n"
".quad 0x6625202c36396625,0x30346630202c3637,0x0a3b303030303039,0x662e6e722e616d66\n"
".quad 0x2c37396625203233,0x25202c3639662520,0x396625202c363766,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x30386625202c3839,0x202c39376625202c,0x656e0a3b37396625\n"
".quad 0x6625203233662e67,0x38396625202c3939,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x39396625202c3030,0x202c30396625202c,0x67656e0a3b346625,0x316625203233662e\n"
".quad 0x30316625202c3130,0x722e616d660a3b30,0x6625203233662e6e,0x316625202c323031\n"
".quad 0x34316625202c3130,0x0a3b346625202c33,0x203233662e67656e,0x25202c3330316625\n"
".quad 0x616d660a3b313766,0x203233662e6e722e,0x25202c3430316625,0x6625202c33303166\n"
".quad 0x36366625202c3538,0x6e722e616d660a3b,0x316625203233662e,0x37386625202c3530\n"
".quad 0x202c31376625202c,0x660a3b3430316625,0x33662e6e722e616d,0x2c36303166252032\n"
".quad 0x25202c3038662520,0x316625202c393766,0x2e67656e0a3b3530,0x3031662520323366\n"
".quad 0x3630316625202c37,0x6e722e616d660a3b,0x316625203233662e,0x30316625202c3830\n"
".quad 0x2c30396625202c37,0x6e0a3b3532662520,0x25203233662e6765,0x6625202c39303166\n"
".quad 0x616d660a3b383031,0x203233662e6e722e,0x25202c3031316625,0x6625202c39303166\n"
".quad 0x326625202c333431,0x662e67656e0a3b35,0x3131316625203233,0x0a3b36376625202c\n"
".quad 0x662e6e722e616d66,0x3231316625203233,0x2c3131316625202c,0x25202c3538662520\n"
".quad 0x616d660a3b363666,0x203233662e6e722e,0x25202c3331316625,0x376625202c363966\n"
".quad 0x3231316625202c36,0x6e722e616d660a3b,0x316625203233662e,0x30386625202c3431\n"
".quad 0x202c39376625202c,0x6e0a3b3331316625,0x25203233662e6765,0x6625202c35313166\n"
".quad 0x616d660a3b343131,0x203233662e6e722e,0x25202c3631316625,0x6625202c35313166\n"
".quad 0x3b356625202c3039,0x3233662e67656e0a,0x202c373131662520,0x660a3b3631316625\n"
".quad 0x33662e6e722e616d,0x2c38313166252032,0x202c373131662520,0x25202c3334316625\n"
".quad 0x2e6464610a3b3566,0x3131662520323366,0x2c31376625202c39,0x660a3b3637662520\n"
".quad 0x33662e6e722e616d,0x2c30323166252032,0x202c393131662520,0x3030303430346630\n"
".quad 0x36366625202c3030,0x33662e6c756d0a3b,0x2c31323166252032,0x202c393131662520\n"
".quad 0x3030303930346630,0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c32323166\n"
".quad 0x316625202c313231,0x32316625202c3931,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x386625202c333231,0x2c39376625202c30,0x0a3b323231662520,0x2e3436662e747663\n"
".quad 0x3164662520323366,0x3b3332316625202c,0x3436662e766f6d0a,0x30202c3264662520\n"
".quad 0x4331374339463364,0x3144384237433137,0x20636f6c2e0a3b43,0x3120313232312032\n"
".quad 0x3436662e7476630a,0x646625203233662e,0x3b31336625202c33,0x3436662e67656e0a\n"
".quad 0x25202c3464662520,0x616d660a3b316466,0x203436662e6e722e,0x6625202c35646625\n"
".quad 0x32646625202c3464,0x0a3b33646625202c,0x2e3436662e747663,0x3664662520323366\n"
".quad 0x3b3334316625202c,0x3436662e67656e0a,0x25202c3764662520,0x616d660a3b366466\n"
".quad 0x203436662e6e722e,0x6625202c38646625,0x35646625202c3764,0x0a3b33646625202c\n"
".quad 0x662e6e722e747663,0x25203436662e3233,0x6625202c34323166,0x2e6275730a3b3864\n"
".quad 0x3231662520323366,0x2c36376625202c35,0x2e0a3b3137662520,0x3231203220636f6c\n"
".quad 0x616d660a31203132,0x203233662e6e722e,0x25202c3632316625,0x6630202c35323166\n"
".quad 0x3030303030343034,0x0a3b36366625202c,0x203233662e6c756d,0x25202c3732316625\n"
".quad 0x6630202c35323166,0x3030303030393034,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x32316625202c3832,0x3532316625202c37,0x3b3632316625202c,0x2e6e722e616d660a\n"
".quad 0x3231662520323366,0x2c30386625202c39,0x25202c3937662520,0x76630a3b38323166\n"
".quad 0x33662e3436662e74,0x202c396466252032,0x630a3b3932316625,0x662e3436662e7476\n"
".quad 0x3031646625203233,0x0a3b37336625202c,0x203436662e67656e,0x25202c3131646625\n"
".quad 0x616d660a3b396466,0x203436662e6e722e,0x25202c3231646625,0x6625202c31316466\n"
".quad 0x31646625202c3264,0x722e616d660a3b30,0x6625203436662e6e,0x646625202c333164\n"
".quad 0x3231646625202c37,0x3b3031646625202c,0x2e6e722e7476630a,0x203436662e323366\n"
".quad 0x25202c3033316625,0x75730a3b33316466,0x6625203233662e62,0x316625202c313331\n"
".quad 0x36376625202c3330,0x6e722e616d660a3b,0x316625203233662e,0x33316625202c3233\n"
".quad 0x3430346630202c31,0x25202c3030303030,0x6c756d0a3b363666,0x316625203233662e\n"
".quad 0x33316625202c3333,0x3930346630202c31,0x660a3b3030303030,0x33662e6e722e616d\n"
".quad 0x2c34333166252032,0x202c333331662520,0x25202c3133316625,0x6d660a3b32333166\n"
".quad 0x3233662e6e722e61,0x202c353331662520,0x6625202c30386625,0x33316625202c3937\n"
".quad 0x662e7476630a3b34,0x25203233662e3436,0x6625202c34316466,0x7476630a3b353331\n"
".quad 0x3233662e3436662e,0x202c353164662520,0x656e0a3b33346625,0x6625203436662e67\n"
".quad 0x646625202c363164,0x2e616d660a3b3431,0x25203436662e6e72,0x6625202c37316466\n"
".quad 0x646625202c363164,0x3531646625202c32,0x6e722e616d660a3b,0x646625203436662e\n"
".quad 0x37646625202c3831,0x2c3731646625202c,0x0a3b353164662520,0x662e6e722e747663\n"
".quad 0x25203436662e3233,0x6625202c36333166,0x6275730a3b383164,0x316625203233662e\n"
".quad 0x31376625202c3733,0x0a3b36376625202c,0x662e6e722e616d66,0x3833316625203233\n"
".quad 0x2c3733316625202c,0x3030343034663020,0x366625202c303030,0x662e6c756d0a3b36\n"
".quad 0x3933316625203233,0x2c3733316625202c,0x3030393034663020,0x616d660a3b303030\n"
".quad 0x203233662e6e722e,0x25202c3034316625,0x6625202c39333166,0x316625202c373331\n"
".quad 0x2e616d660a3b3833,0x25203233662e6e72,0x6625202c31343166,0x39376625202c3038\n"
".quad 0x3b3034316625202c,0x3436662e7476630a,0x646625203233662e,0x34316625202c3931\n"
".quad 0x662e7476630a3b31,0x25203233662e3436,0x6625202c30326466,0x2e67656e0a3b3934\n"
".quad 0x3264662520343666,0x3931646625202c31,0x6e722e616d660a3b,0x646625203436662e\n"
".quad 0x32646625202c3232,0x2c32646625202c31,0x0a3b303264662520,0x662e6e722e616d66\n"
".quad 0x3332646625203436,0x202c37646625202c,0x25202c3232646625,0x76630a3b30326466\n"
".quad 0x3233662e6e722e74,0x316625203436662e,0x32646625202c3234,0x61702e646c0a3b33\n"
".quad 0x203436752e6d6172,0x202c3133316c7225,0x5f524c32315a5f5b,0x4441426279685f64\n"
".quad 0x666d665f53665043,0x335f6d617261705f,0x20636f6c2e0a3b5d,0x3120393831312032\n"
".quad 0x2e6f6c2e64616d0a,0x346c722520343673,0x2c366c7225202c31,0x2c3133316c722520\n"
".quad 0x6c0a3b356c722520,0x2e6d617261702e64,0x316c722520343675,0x315a5f5b202c3932\n"
".quad 0x79685f645f524c32,0x5366504344414262,0x7261705f666d665f,0x630a3b5d315f6d61\n"
".quad 0x672e6f742e617476,0x36752e6c61626f6c,0x2c32346c72252034,0x3b3932316c722520\n"
".quad 0x3436622e6c68730a,0x202c33346c722520,0x33202c31346c7225,0x732e7268730a3b32\n"
".quad 0x34346c7225203436,0x2c33346c7225202c,0x6f6c2e0a3b323320,0x3332323120322063\n"
".quad 0x622e6c68730a3120,0x35346c7225203436,0x2c34346c7225202c,0x2e6464610a3b3220\n"
".quad 0x346c722520343673,0x32346c7225202c36,0x3b35346c7225202c,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x202c5d36346c7225,0x64610a3b34386625,0x7225203436732e64\n"
".quad 0x6c7225202c37346c,0x0a3b323135202c36,0x31203220636f6c2e,0x616d0a3120383032\n"
".quad 0x3436732e6f6c2e64,0x202c38346c722520,0x25202c37346c7225,0x25202c3133316c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x346c7225202c3934,0x730a3b3233202c38\n"
".quad 0x25203436732e7268,0x7225202c30356c72,0x3b3233202c39346c,0x203220636f6c2e0a\n"
".quad 0x730a312038303231,0x25203436622e6c68,0x7225202c31356c72,0x0a3b32202c30356c\n"
".quad 0x203436732e646461,0x25202c32356c7225,0x7225202c32346c72,0x6f6c2e0a3b31356c\n"
".quad 0x3432323120322063,0x6c672e74730a3120,0x3233662e6c61626f,0x5d32356c72255b20\n"
".quad 0x0a3b34396625202c,0x203436732e646461,0x25202c33356c7225,0x323031202c366c72\n"
".quad 0x20636f6c2e0a3b34,0x3120393032312032,0x2e6f6c2e64616d0a,0x356c722520343673\n"
".quad 0x33356c7225202c34,0x3133316c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x25202c35356c7225,0x3233202c34356c72,0x36732e7268730a3b,0x2c36356c72252034\n"
".quad 0x202c35356c722520,0x636f6c2e0a3b3233,0x2039303231203220,0x36622e6c68730a31\n"
".quad 0x2c37356c72252034,0x202c36356c722520,0x732e6464610a3b32,0x38356c7225203436\n"
".quad 0x2c32346c7225202c,0x0a3b37356c722520,0x31203220636f6c2e,0x74730a3120353232\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x316625202c5d3835,0x2e6464610a3b3230\n"
".quad 0x356c722520343673,0x2c366c7225202c39,0x2e0a3b3633353120,0x3231203220636f6c\n"
".quad 0x64616d0a31203031,0x203436732e6f6c2e,0x25202c30366c7225,0x7225202c39356c72\n"
".quad 0x7225202c3133316c,0x2e6c68730a3b356c,0x366c722520343662,0x30366c7225202c31\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c32366c,0x0a3b3233202c3136\n"
".quad 0x31203220636f6c2e,0x68730a3120303132,0x7225203436622e6c,0x6c7225202c33366c\n"
".quad 0x610a3b32202c3236,0x25203436732e6464,0x7225202c34366c72,0x6c7225202c32346c\n"
".quad 0x636f6c2e0a3b3336,0x2036323231203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x2c5d34366c72255b,0x0a3b303131662520,0x203436732e646461,0x25202c35366c7225\n"
".quad 0x343032202c366c72,0x20636f6c2e0a3b38,0x3120313132312032,0x2e6f6c2e64616d0a\n"
".quad 0x366c722520343673,0x35366c7225202c36,0x3133316c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x25202c37366c7225,0x3233202c36366c72,0x36732e7268730a3b\n"
".quad 0x2c38366c72252034,0x202c37366c722520,0x636f6c2e0a3b3233,0x2031313231203220\n"
".quad 0x36622e6c68730a31,0x2c39366c72252034,0x202c38366c722520,0x732e6464610a3b32\n"
".quad 0x30376c7225203436,0x2c32346c7225202c,0x0a3b39366c722520,0x31203220636f6c2e\n"
".quad 0x74730a3120373232,0x2e6c61626f6c672e,0x6c72255b20323366,0x316625202c5d3037\n"
".quad 0x2e6464610a3b3831,0x376c722520343673,0x2c366c7225202c31,0x2e0a3b3036353220\n"
".quad 0x3231203220636f6c,0x64616d0a31203231,0x203436732e6f6c2e,0x25202c32376c7225\n"
".quad 0x7225202c31376c72,0x7225202c3133316c,0x2e6c68730a3b356c,0x376c722520343662\n"
".quad 0x32376c7225202c33,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c34376c\n"
".quad 0x0a3b3233202c3337,0x31203220636f6c2e,0x68730a3120323132,0x7225203436622e6c\n"
".quad 0x6c7225202c35376c,0x610a3b32202c3437,0x25203436732e6464,0x7225202c36376c72\n"
".quad 0x6c7225202c32346c,0x636f6c2e0a3b3537,0x2038323231203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x2c5d36376c72255b,0x0a3b343231662520,0x203436732e646461\n"
".quad 0x25202c37376c7225,0x373033202c366c72,0x20636f6c2e0a3b32,0x3120333132312032\n"
".quad 0x2e6f6c2e64616d0a,0x376c722520343673,0x37376c7225202c38,0x3133316c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x25202c39376c7225,0x3233202c38376c72\n"
".quad 0x36732e7268730a3b,0x2c30386c72252034,0x202c39376c722520,0x636f6c2e0a3b3233\n"
".quad 0x2033313231203220,0x36622e6c68730a31,0x2c31386c72252034,0x202c30386c722520\n"
".quad 0x732e6464610a3b32,0x32386c7225203436,0x2c32346c7225202c,0x0a3b31386c722520\n"
".quad 0x31203220636f6c2e,0x74730a3120393232,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x316625202c5d3238,0x636f6c2e0a3b3033,0x2034313231203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x326c7225202c3438,0x33316c7225202c39,0x3b356c7225202c31\n"
".quad 0x3436622e6c68730a,0x202c35386c722520,0x33202c34386c7225,0x732e7268730a3b32\n"
".quad 0x36386c7225203436,0x2c35386c7225202c,0x6f6c2e0a3b323320,0x3431323120322063\n"
".quad 0x622e6c68730a3120,0x37386c7225203436,0x2c36386c7225202c,0x2e6464610a3b3220\n"
".quad 0x386c722520343673,0x32346c7225202c38,0x3b37386c7225202c,0x203220636f6c2e0a\n"
".quad 0x730a312030333231,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d38386c\n"
".quad 0x6f6c2e0a3b363331,0x3133323120322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x2c5d396c72255b20,0x0a3b323431662520,0x31203220636f6c2e,0x65720a3220343332\n"
".quad 0x323242420a0a3b74,0x2e6464610a3a335f,0x396c722520343673,0x2c366c7225202c30\n"
".quad 0x646c0a3b32313520,0x752e6d617261702e,0x33316c7225203436,0x32315a5f5b202c30\n"
".quad 0x6279685f645f524c,0x5f53665043444142,0x617261705f666d66,0x6c2e0a3b5d335f6d\n"
".quad 0x303231203220636f,0x2e64616d0a312038,0x25203436732e6f6c,0x7225202c32396c72\n"
".quad 0x6c7225202c30396c,0x6c7225202c303331,0x61702e646c0a3b35,0x203436752e6d6172\n"
".quad 0x202c3832316c7225,0x5f524c32315a5f5b,0x4441426279685f64,0x666d665f53665043\n"
".quad 0x315f6d617261705f,0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c\n"
".quad 0x6c7225202c33396c,0x6c68730a3b383231,0x6c7225203436622e,0x396c7225202c3439\n"
".quad 0x730a3b3233202c32,0x25203436732e7268,0x7225202c35396c72,0x3b3233202c34396c\n"
".quad 0x203220636f6c2e0a,0x730a312038303231,0x25203436622e6c68,0x7225202c36396c72\n"
".quad 0x0a3b32202c35396c,0x203436732e646461,0x25202c37396c7225,0x7225202c33396c72\n"
".quad 0x2e74730a3b36396c,0x662e6c61626f6c67,0x396c72255b203233,0x35326625202c5d37\n"
".quad 0x36732e6464610a3b,0x2c38396c72252034,0x31202c366c722520,0x6f6c2e0a3b343230\n"
".quad 0x3930323120322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c39396c\n"
".quad 0x316c7225202c3839,0x356c7225202c3033,0x36622e6c68730a3b,0x3030316c72252034\n"
".quad 0x2c39396c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c313031\n"
".quad 0x3b3233202c303031,0x203220636f6c2e0a,0x730a312039303231,0x25203436622e6c68\n"
".quad 0x25202c3230316c72,0x32202c3130316c72,0x36732e6464610a3b,0x3330316c72252034\n"
".quad 0x2c33396c7225202c,0x3b3230316c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3330316c7225,0x64610a3b35662520,0x7225203436732e64,0x7225202c3430316c\n"
".quad 0x36333531202c366c,0x3220636f6c2e0a3b,0x0a31203031323120,0x732e6f6c2e64616d\n"
".quad 0x30316c7225203436,0x30316c7225202c35,0x33316c7225202c34,0x3b356c7225202c30\n"
".quad 0x3436622e6c68730a,0x2c3630316c722520,0x2c3530316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c373031,0x3b3233202c363031,0x203220636f6c2e0a\n"
".quad 0x730a312030313231,0x25203436622e6c68,0x25202c3830316c72,0x32202c3730316c72\n"
".quad 0x36732e6464610a3b,0x3930316c72252034,0x2c33396c7225202c,0x3b3830316c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3930316c7225,0x610a3b3931662520\n"
".quad 0x25203436732e6464,0x25202c3031316c72,0x343032202c366c72,0x20636f6c2e0a3b38\n"
".quad 0x3120313132312032,0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3131\n"
".quad 0x316c7225202c3031,0x356c7225202c3033,0x36622e6c68730a3b,0x3231316c72252034\n"
".quad 0x3131316c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3331316c\n"
".quad 0x3233202c3231316c,0x3220636f6c2e0a3b,0x0a31203131323120,0x203436622e6c6873\n"
".quad 0x202c3431316c7225,0x202c3331316c7225,0x732e6464610a3b32,0x31316c7225203436\n"
".quad 0x33396c7225202c35,0x3431316c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x5d3531316c72255b,0x610a3b346625202c,0x25203436732e6464,0x25202c3631316c72\n"
".quad 0x363532202c366c72,0x20636f6c2e0a3b30,0x3120323132312032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3731,0x316c7225202c3631,0x356c7225202c3033\n"
".quad 0x36622e6c68730a3b,0x3831316c72252034,0x3731316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3931316c,0x3233202c3831316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203231323120,0x203436622e6c6873,0x202c3032316c7225,0x202c3931316c7225\n"
".quad 0x732e6464610a3b32,0x32316c7225203436,0x33396c7225202c31,0x3032316c7225202c\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3132316c72255b,0x0a3b33346625202c\n"
".quad 0x203436732e646461,0x202c3232316c7225,0x3033202c366c7225,0x636f6c2e0a3b3237\n"
".quad 0x2033313231203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c333231\n"
".quad 0x6c7225202c323231,0x6c7225202c303331,0x622e6c68730a3b35,0x32316c7225203436\n"
".quad 0x32316c7225202c34,0x730a3b3233202c33,0x25203436732e7268,0x25202c3532316c72\n"
".quad 0x33202c3432316c72,0x20636f6c2e0a3b32,0x3120333132312032,0x3436622e6c68730a\n"
".quad 0x2c3632316c722520,0x2c3532316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x396c7225202c3732,0x32316c7225202c33,0x6c672e74730a3b36,0x3233662e6c61626f\n"
".quad 0x3732316c72255b20,0x3b39346625202c5d,0x203220636f6c2e0a,0x730a312034313231\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x336625202c5d386c,0x20636f6c2e0a3b31\n"
".quad 0x3120353132312032,0x626f6c672e74730a,0x5b203233662e6c61,0x25202c5d396c7225\n"
".quad 0x42420a0a3b373366,0x6c2e0a3a345f3232,0x333231203220636f,0x3b7465720a322034\n"
".quad 0x746e652e0a0a7d0a,0x4c33315a5f207972,0x426279685f645f52,0x5f53665032434441\n"
".quad 0x702e0a2869666d66,0x36752e206d617261,0x524c33315a5f2034,0x41426279685f645f\n"
".quad 0x665f536650324344,0x617261705f69666d,0x61702e0a2c305f6d,0x3436752e206d6172\n"
".quad 0x5f524c33315a5f20,0x4441426279685f64,0x6d665f5366503243,0x6d617261705f6966\n"
".quad 0x7261702e0a2c315f,0x203233662e206d61,0x645f524c33315a5f,0x434441426279685f\n"
".quad 0x666d665f53665032,0x5f6d617261705f69,0x617261702e0a2c32,0x5f203436752e206d\n"
".quad 0x5f645f524c33315a,0x3243444142627968,0x69666d665f536650,0x335f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203233662e20,0x685f645f524c3331,0x5032434441426279\n"
".quad 0x5f69666d665f5366,0x2c345f6d61726170,0x206d617261702e0a,0x315a5f203233752e\n"
".quad 0x79685f645f524c33,0x6650324344414262,0x705f69666d665f53,0x290a355f6d617261\n"
".quad 0x206765722e0a7b0a,0x3c6625203233662e,0x722e0a3b3e343431,0x203436662e206765\n"
".quad 0x3b3e34323c646625,0x702e206765722e0a,0x393c702520646572,0x206765722e0a3b3e\n"
".quad 0x3c7225203233732e,0x65722e0a3b3e3535,0x25203436732e2067,0x3b3e3333313c6c72\n"
".quad 0x61702e646c0a0a0a,0x203436752e6d6172,0x5b202c30316c7225,0x645f524c33315a5f\n"
".quad 0x434441426279685f,0x666d665f53665032,0x5f6d617261705f69,0x702e646c0a3b5d30\n"
".quad 0x3436752e6d617261,0x5b202c316c722520,0x645f524c33315a5f,0x434441426279685f\n"
".quad 0x666d665f53665032,0x5f6d617261705f69,0x702e646c0a3b5d31,0x3436752e6d617261\n"
".quad 0x5b202c326c722520,0x645f524c33315a5f,0x434441426279685f,0x666d665f53665032\n"
".quad 0x5f6d617261705f69,0x702e646c0a3b5d33,0x3233752e6d617261,0x5f5b202c33722520\n"
".quad 0x5f645f524c33315a,0x3243444142627968,0x69666d665f536650,0x355f6d617261705f\n"
".quad 0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c,0x316c7225202c336c\n"
".quad 0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e,0x30316c7225202c34\n"
".quad 0x3220636f6c2e0a3b,0x0a31203833323120,0x203233752e766f6d,0x746e25202c347225\n"
".quad 0x6f6d0a3b782e6469,0x7225203233752e76,0x6961746325202c35,0x766f6d0a3b782e64\n"
".quad 0x367225203233752e,0x782e64697425202c,0x6f6c2e64616d0a3b,0x317225203233732e\n"
".quad 0x25202c347225202c,0x3b367225202c3572,0x203220636f6c2e0a,0x6d0a312039333231\n"
".quad 0x25203233752e766f,0x69746e25202c3772,0x766f6d0a3b792e64,0x387225203233752e\n"
".quad 0x646961746325202c,0x2e766f6d0a3b792e,0x2c39722520323375,0x3b792e6469742520\n"
".quad 0x2e6f6c2e64616d0a,0x2c32722520323373,0x7225202c37722520,0x0a3b397225202c38\n"
".quad 0x31203220636f6c2e,0x76630a3120303432,0x3233662e6e722e74,0x316625203233732e\n"
".quad 0x0a3b317225202c32,0x662e6e722e616d66,0x2c33316625203233,0x30202c3231662520\n"
".quad 0x3030303038453366,0x4333346630202c30,0x2e0a3b3030304446,0x3231203220636f6c\n"
".quad 0x7476630a31203134,0x2e3233662e6e722e,0x2c32662520323373,0x6d660a3b32722520\n"
".quad 0x3233662e6e722e61,0x25202c3431662520,0x45336630202c3266,0x202c303030303038\n"
".quad 0x3044463933346630,0x2e7476630a3b3030,0x203233752e343675,0x7225202c356c7225\n"
".quad 0x20636f6c2e0a3b31,0x3120323432312032,0x3436732e7476630a,0x6c7225203233732e\n"
".quad 0x0a3b327225202c36,0x732e6f6c2e64616d,0x2c376c7225203436,0x25202c366c722520\n"
".quad 0x6c7225202c326c72,0x662e6464610a3b35,0x2c35316625203233,0x30202c3331662520\n"
".quad 0x3030434646334366,0x662e6464610a3b30,0x2c36316625203233,0x30202c3431662520\n"
".quad 0x3030434642334366,0x20636f6c2e0a3b30,0x6d0a312034372032,0x25203233662e6c75\n"
".quad 0x316625202c373166,0x3b36316625202c36,0x2e6e722e616d660a,0x3831662520323366\n"
".quad 0x202c35316625202c,0x6625202c35316625,0x707465730a3b3731,0x203233662e746c2e\n"
".quad 0x316625202c317025,0x3832346630202c38,0x2e0a3b3030303030,0x3231203220636f6c\n"
".quad 0x7465730a31203634,0x3233732e746c2e70,0x7225202c32702520,0x0a3b337225202c31\n"
".quad 0x203233752e766f6d,0x3637202c30317225,0x20636f6c2e0a3b37,0x3120363432312032\n"
".quad 0x3233732e6275730a,0x25202c3131722520,0x337225202c303172,0x672e707465730a3b\n"
".quad 0x7025203233732e74,0x202c317225202c33,0x726f0a3b31317225,0x702520646572702e\n"
".quad 0x202c327025202c34,0x6f6c2e0a3b337025,0x3634323120322063,0x2e707465730a3120\n"
".quad 0x25203233732e746c,0x2c327225202c3570,0x726f0a3b33722520,0x702520646572702e\n"
".quad 0x202c347025202c36,0x766f6d0a3b357025,0x317225203233752e,0x0a3b313135202c32\n"
".quad 0x31203220636f6c2e,0x75730a3120363432,0x7225203233732e62,0x32317225202c3331\n"
".quad 0x730a3b337225202c,0x732e74672e707465,0x202c377025203233,0x317225202c327225\n"
".quad 0x72702e726f0a3b33,0x202c387025206465,0x377025202c367025,0x3220636f6c2e0a3b\n"
".quad 0x0a31203634323120,0x6172622038702540,0x3b345f3332424220,0x36622e6c68730a0a\n"
".quad 0x2c31316c72252034,0x33202c376c722520,0x732e7268730a3b32,0x32316c7225203436\n"
".quad 0x2c31316c7225202c,0x6f6c2e0a3b323320,0x3135323120322063,0x622e6c68730a3120\n"
".quad 0x33316c7225203436,0x2c32316c7225202c,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x2c346c7225202c34,0x0a3b33316c722520,0x61626f6c672e646c,0x6625203233662e6c\n"
".quad 0x316c72255b202c33,0x2e6464610a3b5d34,0x3531722520323373,0x2d202c327225202c\n"
".quad 0x20636f6c2e0a3b31,0x3120323532312032,0x3436752e7476630a,0x6c7225203233752e\n"
".quad 0x35317225202c3531,0x36732e6464610a3b,0x2c36316c72252034,0x202c35316c722520\n"
".quad 0x646c0a3b34323031,0x752e6d617261702e,0x33316c7225203436,0x33315a5f5b202c32\n"
".quad 0x6279685f645f524c,0x5366503243444142,0x61705f69666d665f,0x0a3b5d335f6d6172\n"
".quad 0x31203220636f6c2e,0x616d0a3120323532,0x3436732e6f6c2e64,0x202c37316c722520\n"
".quad 0x25202c36316c7225,0x25202c3233316c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x316c7225202c3831,0x730a3b3233202c37,0x25203436732e7268,0x7225202c39316c72\n"
".quad 0x3b3233202c38316c,0x203220636f6c2e0a,0x730a312032353231,0x25203436622e6c68\n"
".quad 0x7225202c30326c72,0x0a3b32202c39316c,0x203436732e646461,0x25202c31326c7225\n"
".quad 0x6c7225202c346c72,0x672e646c0a3b3032,0x33662e6c61626f6c,0x5b202c3466252032\n"
".quad 0x0a3b5d31326c7225,0x31203220636f6c2e,0x64610a3120333532,0x7225203233732e64\n"
".quad 0x2c327225202c3731,0x2e7476630a3b3120,0x203233752e343675,0x25202c32326c7225\n"
".quad 0x6464610a3b373172,0x6c7225203436732e,0x326c7225202c3332,0x3b38343032202c32\n"
".quad 0x203220636f6c2e0a,0x6d0a312033353231,0x36732e6f6c2e6461,0x2c34326c72252034\n"
".quad 0x202c33326c722520,0x202c3233316c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x6c7225202c35326c,0x0a3b3233202c3432,0x203436732e726873,0x25202c36326c7225\n"
".quad 0x3233202c35326c72,0x3220636f6c2e0a3b,0x0a31203335323120,0x203436622e6c6873\n"
".quad 0x25202c37326c7225,0x3b32202c36326c72,0x3436732e6464610a,0x202c38326c722520\n"
".quad 0x7225202c346c7225,0x2e646c0a3b37326c,0x662e6c61626f6c67,0x202c356625203233\n"
".quad 0x3b5d38326c72255b,0x3233732e6464610a,0x25202c3931722520,0x0a3b312d202c3172\n"
".quad 0x31203220636f6c2e,0x76630a3120343532,0x3233662e6e722e74,0x356625203233732e\n"
".quad 0x3b39317225202c35,0x3233662e6464610a,0x25202c3335662520,0x336630202c353566\n"
".quad 0x3b30303030303046,0x3233662e6464610a,0x25202c3033662520,0x46336630202c3266\n"
".quad 0x0a3b303030303030,0x203233752e766f6d,0x3b30202c30327225,0x322e786574090a0a\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x30326625202c3931,0x202c31326625202c\n"
".quad 0x5b202c7d32326625,0x665f666552786574,0x3566257b202c4431,0x7d30336625202c33\n"
".quad 0x6f6c2e090a0a3b5d,0x3535323120322063,0x732e6464610a3120,0x2c31327225203233\n"
".quad 0x3b31202c31722520,0x2e6e722e7476630a,0x203233732e323366,0x7225202c36356625\n"
".quad 0x2e6464610a3b3132,0x3734662520323366,0x202c36356625202c,0x3030303046336630\n"
".quad 0x6574090a0a3b3030,0x2e34762e64322e78,0x203233662e323366,0x25202c353266257b\n"
".quad 0x326625202c363266,0x7d38326625202c37,0x65527865745b202c,0x7b202c4433665f66\n"
".quad 0x6625202c37346625,0x090a0a3b5d7d3033,0x31203220636f6c2e,0x76630a3120363532\n"
".quad 0x3233662e6e722e74,0x356625203233732e,0x3b35317225202c37,0x3233662e6464610a\n"
".quad 0x25202c3234662520,0x336630202c373566,0x3b30303030303046,0x322e786574090a0a\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x32336625202c3133,0x202c33336625202c\n"
".quad 0x5b202c7d34336625,0x665f666552786574,0x3566257b202c4435,0x7d32346625202c33\n"
".quad 0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e,0x202c373366257b20\n"
".quad 0x6625202c38336625,0x30346625202c3933,0x527865745b202c7d,0x202c4436665f6665\n"
".quad 0x25202c373466257b,0x0a0a3b5d7d323466,0x203220636f6c2e09,0x630a312038353231\n"
".quad 0x33662e6e722e7476,0x6625203233732e32,0x37317225202c3835,0x33662e6464610a3b\n"
".quad 0x202c343566252032,0x6630202c38356625,0x3030303030304633,0x2e786574090a0a3b\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x346625202c333466,0x2c35346625202c34\n"
".quad 0x202c7d3634662520,0x5f6665527865745b,0x66257b202c443766,0x34356625202c3734\n"
".quad 0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34,0x2c393466257b2032\n"
".quad 0x25202c3035662520,0x356625202c313566,0x7865745b202c7d32,0x2c4438665f666552\n"
".quad 0x202c333566257b20,0x0a3b5d7d34356625,0x36732e646461090a,0x2c39326c72252034\n"
".quad 0x33202c366c722520,0x6f6c2e0a3b343835,0x3736323120322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c30336c,0x316c7225202c3932,0x356c7225202c3233\n"
".quad 0x36622e6c68730a3b,0x2c31336c72252034,0x202c30336c722520,0x2e7268730a3b3233\n"
".quad 0x336c722520343673,0x31336c7225202c32,0x6c2e0a3b3233202c,0x363231203220636f\n"
".quad 0x2e6c68730a312037,0x336c722520343662,0x32336c7225202c33,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x2c336c7225202c38,0x0a3b33336c722520,0x203436732e646461\n"
".quad 0x25202c34336c7225,0x393034202c366c72,0x20636f6c2e0a3b36,0x3120383632312032\n"
".quad 0x2e6f6c2e64616d0a,0x336c722520343673,0x34336c7225202c35,0x3233316c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x25202c36336c7225,0x3233202c35336c72\n"
".quad 0x36732e7268730a3b,0x2c37336c72252034,0x202c36336c722520,0x636f6c2e0a3b3233\n"
".quad 0x2038363231203220,0x36622e6c68730a31,0x2c38336c72252034,0x202c37336c722520\n"
".quad 0x732e6464610a3b32,0x2c396c7225203436,0x25202c336c722520,0x6c2e0a3b38336c72\n"
".quad 0x363231203220636f,0x317025400a312030,0x3242422061726220,0x6c2e0a0a3b335f33\n"
".quad 0x373231203220636f,0x2e6464610a312034,0x3935662520323366,0x25202c336625202c\n"
".quad 0x6464610a3b393166,0x366625203233662e,0x2c39356625202c30,0x64610a3b34662520\n"
".quad 0x6625203233662e64,0x30366625202c3136,0x0a3b35326625202c,0x203233662e646461\n"
".quad 0x6625202c32366625,0x3b356625202c3136,0x3233662e6464610a,0x25202c3336662520\n"
".quad 0x336625202c323666,0x662e6464610a3b31,0x2c34366625203233,0x25202c3336662520\n"
".quad 0x6464610a3b373366,0x366625203233662e,0x2c34366625202c35,0x610a3b3334662520\n"
".quad 0x25203233662e6464,0x366625202c363666,0x3b39346625202c35,0x3233662e6275730a\n"
".quad 0x25202c3736662520,0x326625202c393166,0x662e6464610a3b35,0x2c38366625203233\n"
".quad 0x25202c3736662520,0x6275730a3b313366,0x366625203233662e,0x2c38366625202c39\n"
".quad 0x730a3b3733662520,0x25203233662e6275,0x366625202c303766,0x3b33346625202c39\n"
".quad 0x3233662e6464610a,0x25202c3137662520,0x346625202c303766,0x662e6275730a3b39\n"
".quad 0x2c32376625203233,0x6625202c34662520,0x662e6464610a3b35,0x2c33376625203233\n"
".quad 0x25202c3237662520,0x6464610a3b313366,0x376625203233662e,0x2c33376625202c34\n"
".quad 0x730a3b3733662520,0x25203233662e6275,0x376625202c353766,0x3b33346625202c34\n"
".quad 0x3233662e6275730a,0x25202c3637662520,0x346625202c353766,0x662e6c756d0a3b39\n"
".quad 0x2c37376625203233,0x25202c3637662520,0x616d660a3b363766,0x203233662e6e722e\n"
".quad 0x6625202c38376625,0x31376625202c3137,0x0a3b37376625202c,0x203233662e766f6d\n"
".quad 0x6630202c39376625,0x3030303030434633,0x3220636f6c2e0a3b,0x0a31203437323120\n"
".quad 0x203233662e67656e,0x6625202c30386625,0x2e616d660a3b3837,0x25203233662e6e72\n"
".quad 0x386625202c313866,0x2c39376625202c30,0x660a3b3636662520,0x33662e6e722e616d\n"
".quad 0x202c323866252032,0x6630202c31386625,0x3933453833454542,0x6e0a3b336625202c\n"
".quad 0x25203233662e6765,0x386625202c333866,0x61702e646c0a3b32,0x203233662e6d6172\n"
".quad 0x5b202c3334316625,0x645f524c33315a5f,0x434441426279685f,0x666d665f53665032\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d32,0x2034373231203220,0x6e722e616d660a31\n"
".quad 0x386625203233662e,0x2c33386625202c34,0x202c333431662520,0x766f6d0a3b336625\n"
".quad 0x386625203233662e,0x3430346630202c35,0x2e0a3b3030303030,0x3231203220636f6c\n"
".quad 0x616d660a31203437,0x203233662e6e722e,0x6625202c36386625,0x30346630202c3137\n"
".quad 0x202c303030303034,0x756d0a3b36366625,0x6625203233662e6c,0x31376625202c3738\n"
".quad 0x303930346630202c,0x6d660a3b30303030,0x3233662e6e722e61,0x25202c3838662520\n"
".quad 0x376625202c373866,0x3b36386625202c31,0x2e6e722e616d660a,0x3938662520323366\n"
".quad 0x202c30386625202c,0x6625202c39376625,0x2e766f6d0a3b3838,0x3039662520323366\n"
".quad 0x334544336630202c,0x6c2e0a3b39334538,0x373231203220636f,0x2e67656e0a312034\n"
".quad 0x3139662520323366,0x0a3b39386625202c,0x662e6e722e616d66,0x2c32396625203233\n"
".quad 0x25202c3139662520,0x316625202c303966,0x662e67656e0a3b39,0x2c33396625203233\n"
".quad 0x660a3b3239662520,0x33662e6e722e616d,0x202c343966252032,0x6625202c33396625\n"
".quad 0x316625202c333431,0x722e616d660a3b39,0x6625203233662e6e,0x36376625202c3539\n"
".quad 0x303430346630202c,0x6625202c30303030,0x2e6c756d0a3b3636,0x3639662520323366\n"
".quad 0x202c36376625202c,0x3030303930346630,0x2e616d660a3b3030,0x25203233662e6e72\n"
".quad 0x396625202c373966,0x2c36376625202c36,0x660a3b3539662520,0x33662e6e722e616d\n"
".quad 0x202c383966252032,0x6625202c30386625,0x37396625202c3937,0x33662e67656e0a3b\n"
".quad 0x202c393966252032,0x6d660a3b38396625,0x3233662e6e722e61,0x202c303031662520\n"
".quad 0x6625202c39396625,0x3b346625202c3039,0x3233662e67656e0a,0x202c313031662520\n"
".quad 0x660a3b3030316625,0x33662e6e722e616d,0x2c32303166252032,0x202c313031662520\n"
".quad 0x25202c3334316625,0x2e67656e0a3b3466,0x3031662520323366,0x3b31376625202c33\n"
".quad 0x2e6e722e616d660a,0x3031662520323366,0x3330316625202c34,0x202c35386625202c\n"
".quad 0x6d660a3b36366625,0x3233662e6e722e61,0x202c353031662520,0x6625202c37386625\n"
".quad 0x30316625202c3137,0x722e616d660a3b34,0x6625203233662e6e,0x386625202c363031\n"
".quad 0x2c39376625202c30,0x0a3b353031662520,0x203233662e67656e,0x25202c3730316625\n"
".quad 0x6d660a3b36303166,0x3233662e6e722e61,0x202c383031662520,0x25202c3730316625\n"
".quad 0x326625202c303966,0x662e67656e0a3b35,0x3930316625203233,0x3b3830316625202c\n"
".quad 0x2e6e722e616d660a,0x3131662520323366,0x3930316625202c30,0x2c3334316625202c\n"
".quad 0x6e0a3b3532662520,0x25203233662e6765,0x6625202c31313166,0x2e616d660a3b3637\n"
".quad 0x25203233662e6e72,0x6625202c32313166,0x386625202c313131,0x3b36366625202c35\n"
".quad 0x2e6e722e616d660a,0x3131662520323366,0x2c36396625202c33,0x25202c3637662520\n"
".quad 0x6d660a3b32313166,0x3233662e6e722e61,0x202c343131662520,0x6625202c30386625\n"
".quad 0x31316625202c3937,0x662e67656e0a3b33,0x3531316625203233,0x3b3431316625202c\n"
".quad 0x2e6e722e616d660a,0x3131662520323366,0x3531316625202c36,0x202c30396625202c\n"
".quad 0x67656e0a3b356625,0x316625203233662e,0x31316625202c3731,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x316625202c383131,0x34316625202c3731,0x0a3b356625202c33\n"
".quad 0x203233662e646461,0x25202c3931316625,0x376625202c313766,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x316625202c303231,0x30346630202c3931,0x202c303030303034\n"
".quad 0x756d0a3b36366625,0x6625203233662e6c,0x316625202c313231,0x30346630202c3931\n"
".quad 0x0a3b303030303039,0x662e6e722e616d66,0x3232316625203233,0x2c3132316625202c\n"
".quad 0x202c393131662520,0x660a3b3032316625,0x33662e6e722e616d,0x2c33323166252032\n"
".quad 0x25202c3038662520,0x316625202c393766,0x2e7476630a3b3232,0x203233662e343666\n"
".quad 0x6625202c31646625,0x766f6d0a3b333231,0x646625203436662e,0x3946336430202c32\n"
".quad 0x3743313743313743,0x2e0a3b4331443842,0x3231203220636f6c,0x7476630a31203437\n"
".quad 0x3233662e3436662e,0x25202c3364662520,0x67656e0a3b313366,0x646625203436662e\n"
".quad 0x3b31646625202c34,0x2e6e722e616d660a,0x3564662520343666,0x202c34646625202c\n"
".quad 0x6625202c32646625,0x2e7476630a3b3364,0x203233662e343666,0x6625202c36646625\n"
".quad 0x67656e0a3b333431,0x646625203436662e,0x3b36646625202c37,0x2e6e722e616d660a\n"
".quad 0x3864662520343666,0x202c37646625202c,0x6625202c35646625,0x2e7476630a3b3364\n"
".quad 0x662e3233662e6e72,0x3432316625203436,0x0a3b38646625202c,0x203233662e627573\n"
".quad 0x25202c3532316625,0x376625202c363766,0x20636f6c2e0a3b31,0x3120343732312032\n"
".quad 0x2e6e722e616d660a,0x3231662520323366,0x3532316625202c36,0x303430346630202c\n"
".quad 0x6625202c30303030,0x2e6c756d0a3b3636,0x3231662520323366,0x3532316625202c37\n"
".quad 0x303930346630202c,0x6d660a3b30303030,0x3233662e6e722e61,0x202c383231662520\n"
".quad 0x25202c3732316625,0x6625202c35323166,0x616d660a3b363231,0x203233662e6e722e\n"
".quad 0x25202c3932316625,0x376625202c303866,0x3832316625202c39,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x32316625202c3964,0x662e7476630a3b39,0x25203233662e3436\n"
".quad 0x6625202c30316466,0x2e67656e0a3b3733,0x3164662520343666,0x3b39646625202c31\n"
".quad 0x2e6e722e616d660a,0x3164662520343666,0x3131646625202c32,0x202c32646625202c\n"
".quad 0x660a3b3031646625,0x36662e6e722e616d,0x2c33316466252034,0x25202c3764662520\n"
".quad 0x6625202c32316466,0x7476630a3b303164,0x2e3233662e6e722e,0x3331662520343666\n"
".quad 0x3331646625202c30,0x33662e6275730a3b,0x2c31333166252032,0x202c333031662520\n"
".quad 0x6d660a3b36376625,0x3233662e6e722e61,0x202c323331662520,0x30202c3133316625\n"
".quad 0x3030303034303466,0x3b36366625202c30,0x3233662e6c756d0a,0x202c333331662520\n"
".quad 0x30202c3133316625,0x3030303039303466,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x316625202c343331,0x33316625202c3333,0x3233316625202c31,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x30386625202c3533,0x202c39376625202c,0x630a3b3433316625\n"
".quad 0x662e3436662e7476,0x3431646625203233,0x3b3533316625202c,0x3436662e7476630a\n"
".quad 0x646625203233662e,0x33346625202c3531,0x36662e67656e0a3b,0x2c36316466252034\n"
".quad 0x0a3b343164662520,0x662e6e722e616d66,0x3731646625203436,0x2c3631646625202c\n"
".quad 0x25202c3264662520,0x6d660a3b35316466,0x3436662e6e722e61,0x202c383164662520\n"
".quad 0x6625202c37646625,0x646625202c373164,0x2e7476630a3b3531,0x662e3233662e6e72\n"
".quad 0x3633316625203436,0x3b3831646625202c,0x3233662e6275730a,0x202c373331662520\n"
".quad 0x6625202c31376625,0x2e616d660a3b3637,0x25203233662e6e72,0x6625202c38333166\n"
".quad 0x346630202c373331,0x2c30303030303430,0x6d0a3b3636662520,0x25203233662e6c75\n"
".quad 0x6625202c39333166,0x346630202c373331,0x3b30303030303930,0x2e6e722e616d660a\n"
".quad 0x3431662520323366,0x3933316625202c30,0x2c3733316625202c,0x0a3b383331662520\n"
".quad 0x662e6e722e616d66,0x3134316625203233,0x202c30386625202c,0x6625202c39376625\n"
".quad 0x7476630a3b303431,0x3233662e3436662e,0x202c393164662520,0x630a3b3134316625\n"
".quad 0x662e3436662e7476,0x3032646625203233,0x0a3b39346625202c,0x203436662e67656e\n"
".quad 0x25202c3132646625,0x6d660a3b39316466,0x3436662e6e722e61,0x202c323264662520\n"
".quad 0x25202c3132646625,0x646625202c326466,0x2e616d660a3b3032,0x25203436662e6e72\n"
".quad 0x6625202c33326466,0x32646625202c3764,0x3032646625202c32,0x6e722e7476630a3b\n"
".quad 0x3436662e3233662e,0x202c323431662520,0x6c0a3b3332646625,0x2e6d617261702e64\n"
".quad 0x316c722520343675,0x315a5f5b202c3133,0x79685f645f524c33,0x6650324344414262\n"
".quad 0x705f69666d665f53,0x3b5d335f6d617261,0x203220636f6c2e0a,0x6d0a312032343231\n"
".quad 0x36732e6f6c2e6461,0x2c31346c72252034,0x25202c366c722520,0x25202c3133316c72\n"
".quad 0x2e646c0a3b356c72,0x36752e6d61726170,0x3932316c72252034,0x4c33315a5f5b202c\n"
".quad 0x426279685f645f52,0x5f53665032434441,0x7261705f69666d66,0x630a3b5d315f6d61\n"
".quad 0x672e6f742e617476,0x36752e6c61626f6c,0x2c32346c72252034,0x3b3932316c722520\n"
".quad 0x3436622e6c68730a,0x202c33346c722520,0x33202c31346c7225,0x732e7268730a3b32\n"
".quad 0x34346c7225203436,0x2c33346c7225202c,0x6f6c2e0a3b323320,0x3637323120322063\n"
".quad 0x622e6c68730a3120,0x35346c7225203436,0x2c34346c7225202c,0x2e6464610a3b3220\n"
".quad 0x346c722520343673,0x32346c7225202c36,0x3b35346c7225202c,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x202c5d36346c7225,0x64610a3b34386625,0x7225203436732e64\n"
".quad 0x6c7225202c37346c,0x0a3b323135202c36,0x31203220636f6c2e,0x616d0a3120313632\n"
".quad 0x3436732e6f6c2e64,0x202c38346c722520,0x25202c37346c7225,0x25202c3133316c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x346c7225202c3934,0x730a3b3233202c38\n"
".quad 0x25203436732e7268,0x7225202c30356c72,0x3b3233202c39346c,0x203220636f6c2e0a\n"
".quad 0x730a312031363231,0x25203436622e6c68,0x7225202c31356c72,0x0a3b32202c30356c\n"
".quad 0x203436732e646461,0x25202c32356c7225,0x7225202c32346c72,0x6f6c2e0a3b31356c\n"
".quad 0x3737323120322063,0x6c672e74730a3120,0x3233662e6c61626f,0x5d32356c72255b20\n"
".quad 0x0a3b34396625202c,0x203436732e646461,0x25202c33356c7225,0x323031202c366c72\n"
".quad 0x20636f6c2e0a3b34,0x3120323632312032,0x2e6f6c2e64616d0a,0x356c722520343673\n"
".quad 0x33356c7225202c34,0x3133316c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x25202c35356c7225,0x3233202c34356c72,0x36732e7268730a3b,0x2c36356c72252034\n"
".quad 0x202c35356c722520,0x636f6c2e0a3b3233,0x2032363231203220,0x36622e6c68730a31\n"
".quad 0x2c37356c72252034,0x202c36356c722520,0x732e6464610a3b32,0x38356c7225203436\n"
".quad 0x2c32346c7225202c,0x0a3b37356c722520,0x31203220636f6c2e,0x74730a3120383732\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x316625202c5d3835,0x2e6464610a3b3230\n"
".quad 0x356c722520343673,0x2c366c7225202c39,0x2e0a3b3633353120,0x3231203220636f6c\n"
".quad 0x64616d0a31203336,0x203436732e6f6c2e,0x25202c30366c7225,0x7225202c39356c72\n"
".quad 0x7225202c3133316c,0x2e6c68730a3b356c,0x366c722520343662,0x30366c7225202c31\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c32366c,0x0a3b3233202c3136\n"
".quad 0x31203220636f6c2e,0x68730a3120333632,0x7225203436622e6c,0x6c7225202c33366c\n"
".quad 0x610a3b32202c3236,0x25203436732e6464,0x7225202c34366c72,0x6c7225202c32346c\n"
".quad 0x636f6c2e0a3b3336,0x2039373231203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x2c5d34366c72255b,0x0a3b303131662520,0x203436732e646461,0x25202c35366c7225\n"
".quad 0x343032202c366c72,0x20636f6c2e0a3b38,0x3120343632312032,0x2e6f6c2e64616d0a\n"
".quad 0x366c722520343673,0x35366c7225202c36,0x3133316c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x25202c37366c7225,0x3233202c36366c72,0x36732e7268730a3b\n"
".quad 0x2c38366c72252034,0x202c37366c722520,0x636f6c2e0a3b3233,0x2034363231203220\n"
".quad 0x36622e6c68730a31,0x2c39366c72252034,0x202c38366c722520,0x732e6464610a3b32\n"
".quad 0x30376c7225203436,0x2c32346c7225202c,0x0a3b39366c722520,0x31203220636f6c2e\n"
".quad 0x74730a3120303832,0x2e6c61626f6c672e,0x6c72255b20323366,0x316625202c5d3037\n"
".quad 0x2e6464610a3b3831,0x376c722520343673,0x2c366c7225202c31,0x2e0a3b3036353220\n"
".quad 0x3231203220636f6c,0x64616d0a31203536,0x203436732e6f6c2e,0x25202c32376c7225\n"
".quad 0x7225202c31376c72,0x7225202c3133316c,0x2e6c68730a3b356c,0x376c722520343662\n"
".quad 0x32376c7225202c33,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c34376c\n"
".quad 0x0a3b3233202c3337,0x31203220636f6c2e,0x68730a3120353632,0x7225203436622e6c\n"
".quad 0x6c7225202c35376c,0x610a3b32202c3437,0x25203436732e6464,0x7225202c36376c72\n"
".quad 0x6c7225202c32346c,0x636f6c2e0a3b3537,0x2031383231203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x2c5d36376c72255b,0x0a3b343231662520,0x203436732e646461\n"
".quad 0x25202c37376c7225,0x373033202c366c72,0x20636f6c2e0a3b32,0x3120363632312032\n"
".quad 0x2e6f6c2e64616d0a,0x376c722520343673,0x37376c7225202c38,0x3133316c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x25202c39376c7225,0x3233202c38376c72\n"
".quad 0x36732e7268730a3b,0x2c30386c72252034,0x202c39376c722520,0x636f6c2e0a3b3233\n"
".quad 0x2036363231203220,0x36622e6c68730a31,0x2c31386c72252034,0x202c30386c722520\n"
".quad 0x732e6464610a3b32,0x32386c7225203436,0x2c32346c7225202c,0x0a3b31386c722520\n"
".quad 0x31203220636f6c2e,0x74730a3120323832,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x316625202c5d3238,0x636f6c2e0a3b3033,0x2037363231203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x326c7225202c3438,0x33316c7225202c39,0x3b356c7225202c31\n"
".quad 0x3436622e6c68730a,0x202c35386c722520,0x33202c34386c7225,0x732e7268730a3b32\n"
".quad 0x36386c7225203436,0x2c35386c7225202c,0x6f6c2e0a3b323320,0x3736323120322063\n"
".quad 0x622e6c68730a3120,0x37386c7225203436,0x2c36386c7225202c,0x2e6464610a3b3220\n"
".quad 0x386c722520343673,0x32346c7225202c38,0x3b37386c7225202c,0x203220636f6c2e0a\n"
".quad 0x730a312033383231,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d38386c\n"
".quad 0x6f6c2e0a3b363331,0x3438323120322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x2c5d396c72255b20,0x0a3b323431662520,0x31203220636f6c2e,0x65720a3220373832\n"
".quad 0x333242420a0a3b74,0x2e6464610a3a335f,0x396c722520343673,0x2c366c7225202c30\n"
".quad 0x646c0a3b32313520,0x752e6d617261702e,0x33316c7225203436,0x33315a5f5b202c30\n"
".quad 0x6279685f645f524c,0x5366503243444142,0x61705f69666d665f,0x0a3b5d335f6d6172\n"
".quad 0x31203220636f6c2e,0x616d0a3120313632,0x3436732e6f6c2e64,0x202c32396c722520\n"
".quad 0x25202c30396c7225,0x25202c3033316c72,0x2e646c0a3b356c72,0x36752e6d61726170\n"
".quad 0x3832316c72252034,0x4c33315a5f5b202c,0x426279685f645f52,0x5f53665032434441\n"
".quad 0x7261705f69666d66,0x630a3b5d315f6d61,0x672e6f742e617476,0x36752e6c61626f6c\n"
".quad 0x2c33396c72252034,0x3b3832316c722520,0x3436622e6c68730a,0x202c34396c722520\n"
".quad 0x33202c32396c7225,0x732e7268730a3b32,0x35396c7225203436,0x2c34396c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x3136323120322063,0x622e6c68730a3120,0x36396c7225203436\n"
".quad 0x2c35396c7225202c,0x2e6464610a3b3220,0x396c722520343673,0x33396c7225202c37\n"
".quad 0x3b36396c7225202c,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d37396c7225\n"
".quad 0x64610a3b35326625,0x7225203436732e64,0x6c7225202c38396c,0x3b34323031202c36\n"
".quad 0x203220636f6c2e0a,0x6d0a312032363231,0x36732e6f6c2e6461,0x2c39396c72252034\n"
".quad 0x202c38396c722520,0x202c3033316c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3030316c,0x3b3233202c39396c,0x3436732e7268730a,0x2c3130316c722520\n"
".quad 0x2c3030316c722520,0x6f6c2e0a3b323320,0x3236323120322063,0x622e6c68730a3120\n"
".quad 0x30316c7225203436,0x30316c7225202c32,0x64610a3b32202c31,0x7225203436732e64\n"
".quad 0x7225202c3330316c,0x6c7225202c33396c,0x2e74730a3b323031,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x356625202c5d3330,0x36732e6464610a3b,0x3430316c72252034\n"
".quad 0x202c366c7225202c,0x6c2e0a3b36333531,0x363231203220636f,0x2e64616d0a312033\n"
".quad 0x25203436732e6f6c,0x25202c3530316c72,0x25202c3430316c72,0x25202c3033316c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c363031,0x3b3233202c353031\n"
".quad 0x3436732e7268730a,0x2c3730316c722520,0x2c3630316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3336323120322063,0x622e6c68730a3120,0x30316c7225203436,0x30316c7225202c38\n"
".quad 0x64610a3b32202c37,0x7225203436732e64,0x7225202c3930316c,0x6c7225202c33396c\n"
".quad 0x2e74730a3b383031,0x662e6c61626f6c67,0x316c72255b203233,0x316625202c5d3930\n"
".quad 0x732e6464610a3b39,0x31316c7225203436,0x2c366c7225202c30,0x2e0a3b3834303220\n"
".quad 0x3231203220636f6c,0x64616d0a31203436,0x203436732e6f6c2e,0x202c3131316c7225\n"
".quad 0x202c3031316c7225,0x202c3033316c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3231316c,0x3233202c3131316c,0x36732e7268730a3b,0x3331316c72252034\n"
".quad 0x3231316c7225202c,0x6c2e0a3b3233202c,0x363231203220636f,0x2e6c68730a312034\n"
".quad 0x316c722520343662,0x316c7225202c3431,0x610a3b32202c3331,0x25203436732e6464\n"
".quad 0x25202c3531316c72,0x7225202c33396c72,0x74730a3b3431316c,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d353131,0x732e6464610a3b34,0x31316c7225203436\n"
".quad 0x2c366c7225202c36,0x2e0a3b3036353220,0x3231203220636f6c,0x64616d0a31203536\n"
".quad 0x203436732e6f6c2e,0x202c3731316c7225,0x202c3631316c7225,0x202c3033316c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3831316c,0x3233202c3731316c\n"
".quad 0x36732e7268730a3b,0x3931316c72252034,0x3831316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x363231203220636f,0x2e6c68730a312035,0x316c722520343662,0x316c7225202c3032\n"
".quad 0x610a3b32202c3931,0x25203436732e6464,0x25202c3132316c72,0x7225202c33396c72\n"
".quad 0x74730a3b3032316c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d313231\n"
".quad 0x2e6464610a3b3334,0x316c722520343673,0x366c7225202c3232,0x0a3b32373033202c\n"
".quad 0x31203220636f6c2e,0x616d0a3120363632,0x3436732e6f6c2e64,0x2c3332316c722520\n"
".quad 0x2c3232316c722520,0x2c3033316c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3432316c72,0x33202c3332316c72,0x732e7268730a3b32,0x32316c7225203436\n"
".quad 0x32316c7225202c35,0x2e0a3b3233202c34,0x3231203220636f6c,0x6c68730a31203636\n"
".quad 0x6c7225203436622e,0x6c7225202c363231,0x0a3b32202c353231,0x203436732e646461\n"
".quad 0x202c3732316c7225,0x25202c33396c7225,0x730a3b3632316c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3732316c,0x6f6c2e0a3b393466,0x3736323120322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x2c5d386c72255b20,0x2e0a3b3133662520\n"
".quad 0x3231203220636f6c,0x2e74730a31203836,0x662e6c61626f6c67,0x396c72255b203233\n"
".quad 0x3b37336625202c5d,0x345f333242420a0a,0x3220636f6c2e0a3a,0x0a32203738323120\n"
".quad 0x0a0a7d0a3b746572,0x5f207972746e652e,0x5f645f524c30315a,0x5366503243444142\n"
".quad 0x702e0a28666d665f,0x36752e206d617261,0x524c30315a5f2034,0x32434441425f645f\n"
".quad 0x5f666d665f536650,0x2c305f6d61726170,0x206d617261702e0a,0x315a5f203436752e\n"
".quad 0x41425f645f524c30,0x665f536650324344,0x6d617261705f666d,0x7261702e0a2c315f\n"
".quad 0x203233662e206d61,0x645f524c30315a5f,0x665032434441425f,0x61705f666d665f53\n"
".quad 0x2e0a2c325f6d6172,0x752e206d61726170,0x4c30315a5f203436,0x434441425f645f52\n"
".quad 0x666d665f53665032,0x335f6d617261705f,0x6d617261702e0a2c,0x5a5f203233662e20\n"
".quad 0x425f645f524c3031,0x5f53665032434441,0x617261705f666d66,0x0a7b0a290a345f6d\n"
".quad 0x33662e206765722e,0x3430313c66252032,0x206765722e0a3b3e,0x646625203436662e\n"
".quad 0x722e0a3b3e34323c,0x646572702e206765,0x0a3b3e323c702520,0x33732e206765722e\n"
".quad 0x3e35353c72252032,0x2e206765722e0a3b,0x3c6c722520343673,0x0a0a0a3b3e303731\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x30315a5f5b202c35,0x4441425f645f524c\n"
".quad 0x6d665f5366503243,0x5f6d617261705f66,0x702e646c0a3b5d30,0x3436752e6d617261\n"
".quad 0x5b202c316c722520,0x645f524c30315a5f,0x665032434441425f,0x61705f666d665f53\n"
".quad 0x0a3b5d315f6d6172,0x6d617261702e646c,0x6c7225203436752e,0x30315a5f5b202c32\n"
".quad 0x4441425f645f524c,0x6d665f5366503243,0x5f6d617261705f66,0x617476630a3b5d33\n"
".quad 0x626f6c672e6f742e,0x25203436752e6c61,0x6c7225202c366c72,0x20636f6c2e0a3b31\n"
".quad 0x3120313932312032,0x3233752e766f6d0a,0x6e25202c31722520,0x6d0a3b782e646974\n"
".quad 0x25203233752e766f,0x61746325202c3272,0x6f6d0a3b782e6469,0x7225203233752e76\n"
".quad 0x2e64697425202c33,0x6c2e64616d0a3b78,0x7225203233732e6f,0x202c317225202c34\n"
".quad 0x337225202c327225,0x3220636f6c2e0a3b,0x0a31203239323120,0x203233752e766f6d\n"
".quad 0x746e25202c357225,0x6f6d0a3b792e6469,0x7225203233752e76,0x6961746325202c36\n"
".quad 0x766f6d0a3b792e64,0x377225203233752e,0x792e64697425202c,0x6f6c2e64616d0a3b\n"
".quad 0x387225203233732e,0x25202c357225202c,0x3b377225202c3672,0x203220636f6c2e0a\n"
".quad 0x630a312033393231,0x33662e6e722e7476,0x6625203233732e32,0x3b347225202c3131\n"
".quad 0x2e6e722e616d660a,0x3231662520323366,0x202c31316625202c,0x3030303845336630\n"
".quad 0x33346630202c3030,0x0a3b303030444643,0x31203220636f6c2e,0x76630a3120343932\n"
".quad 0x3233662e6e722e74,0x316625203233732e,0x0a3b387225202c33,0x662e6e722e616d66\n"
".quad 0x2c34316625203233,0x30202c3331662520,0x3030303038453366,0x3933346630202c30\n"
".quad 0x630a3b3030304446,0x752e3436752e7476,0x2c376c7225203233,0x6c2e0a3b34722520\n"
".quad 0x393231203220636f,0x2e7476630a312035,0x203233732e343673,0x7225202c386c7225\n"
".quad 0x6c2e64616d0a3b38,0x7225203436732e6f,0x386c7225202c396c,0x202c326c7225202c\n"
".quad 0x64610a3b376c7225,0x6625203233662e64,0x32316625202c3531,0x464633436630202c\n"
".quad 0x64610a3b30303043,0x6625203233662e64,0x34316625202c3631,0x464233436630202c\n"
".quad 0x6c2e0a3b30303043,0x203437203220636f,0x33662e6c756d0a31,0x202c373166252032\n"
".quad 0x6625202c36316625,0x2e616d660a3b3631,0x25203233662e6e72,0x316625202c383166\n"
".quad 0x2c35316625202c35,0x730a3b3731662520,0x662e746c2e707465,0x202c317025203233\n"
".quad 0x6630202c38316625,0x3030303030383234,0x742e617476630a3b,0x6c61626f6c672e6f\n"
".quad 0x6c7225203436752e,0x356c7225202c3031,0x36622e6c68730a3b,0x2c31316c72252034\n"
".quad 0x33202c396c722520,0x732e7268730a3b32,0x32316c7225203436,0x2c31316c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x3430333120322063,0x622e6c68730a3120,0x33316c7225203436\n"
".quad 0x2c32316c7225202c,0x2e6464610a3b3220,0x316c722520343673,0x30316c7225202c34\n"
".quad 0x3b33316c7225202c,0x626f6c672e646c0a,0x25203233662e6c61,0x6c72255b202c3266\n"
".quad 0x6464610a3b5d3431,0x317225203233732e,0x202c347225202c30,0x2e7476630a3b312d\n"
".quad 0x203233752e343675,0x25202c35316c7225,0x6464610a3b303172,0x6c7225203436732e\n"
".quad 0x386c7225202c3631,0x2e0a3b323135202c,0x3331203220636f6c,0x64616d0a31203530\n"
".quad 0x203436732e6f6c2e,0x25202c37316c7225,0x7225202c36316c72,0x316c7225202c326c\n"
".quad 0x622e6c68730a3b35,0x38316c7225203436,0x2c37316c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x316c7225202c3931,0x2e0a3b3233202c38,0x3331203220636f6c\n"
".quad 0x6c68730a31203530,0x6c7225203436622e,0x316c7225202c3032,0x64610a3b32202c39\n"
".quad 0x7225203436732e64,0x6c7225202c31326c,0x326c7225202c3031,0x6c672e646c0a3b30\n"
".quad 0x3233662e6c61626f,0x255b202c33662520,0x610a3b5d31326c72,0x25203233732e6464\n"
".quad 0x387225202c323172,0x6c2e0a3b312d202c,0x303331203220636f,0x2e7476630a312036\n"
".quad 0x203233732e343673,0x25202c32326c7225,0x6464610a3b323172,0x6c7225203436732e\n"
".quad 0x326c7225202c3332,0x3b34323031202c32,0x203220636f6c2e0a,0x6d0a312036303331\n"
".quad 0x36732e6f6c2e6461,0x2c34326c72252034,0x202c33326c722520,0x7225202c326c7225\n"
".quad 0x2e6c68730a3b376c,0x326c722520343662,0x34326c7225202c35,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c36326c,0x0a3b3233202c3532,0x31203220636f6c2e\n"
".quad 0x68730a3120363033,0x7225203436622e6c,0x6c7225202c37326c,0x610a3b32202c3632\n"
".quad 0x25203436732e6464,0x7225202c38326c72,0x6c7225202c30316c,0x672e646c0a3b3732\n"
".quad 0x33662e6c61626f6c,0x5b202c3466252032,0x0a3b5d38326c7225,0x31203220636f6c2e\n"
".quad 0x64610a3120373033,0x7225203233732e64,0x2c347225202c3431,0x2e7476630a3b3120\n"
".quad 0x203233752e343675,0x25202c39326c7225,0x6464610a3b343172,0x6c7225203436732e\n"
".quad 0x386c7225202c3033,0x0a3b36333531202c,0x31203220636f6c2e,0x616d0a3120373033\n"
".quad 0x3436732e6f6c2e64,0x202c31336c722520,0x25202c30336c7225,0x6c7225202c326c72\n"
".quad 0x2e6c68730a3b3932,0x336c722520343662,0x31336c7225202c32,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c33336c,0x0a3b3233202c3233,0x31203220636f6c2e\n"
".quad 0x68730a3120373033,0x7225203436622e6c,0x6c7225202c34336c,0x610a3b32202c3333\n"
".quad 0x25203436732e6464,0x7225202c35336c72,0x6c7225202c30316c,0x672e646c0a3b3433\n"
".quad 0x33662e6c61626f6c,0x5b202c3566252032,0x0a3b5d35336c7225,0x31203220636f6c2e\n"
".quad 0x64610a3120383033,0x7225203233732e64,0x2c387225202c3631,0x2e7476630a3b3120\n"
".quad 0x203233732e343673,0x25202c36336c7225,0x6464610a3b363172,0x6c7225203436732e\n"
".quad 0x336c7225202c3733,0x3b38343032202c36,0x203220636f6c2e0a,0x6d0a312038303331\n"
".quad 0x36732e6f6c2e6461,0x2c38336c72252034,0x202c37336c722520,0x7225202c326c7225\n"
".quad 0x2e6c68730a3b376c,0x336c722520343662,0x38336c7225202c39,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c30346c,0x0a3b3233202c3933,0x31203220636f6c2e\n"
".quad 0x68730a3120383033,0x7225203436622e6c,0x6c7225202c31346c,0x610a3b32202c3034\n"
".quad 0x25203436732e6464,0x7225202c32346c72,0x6c7225202c30316c,0x672e646c0a3b3134\n"
".quad 0x33662e6c61626f6c,0x5b202c3666252032,0x0a3b5d32346c7225,0x203436732e646461\n"
".quad 0x25202c33346c7225,0x3532202c32326c72,0x636f6c2e0a3b3036,0x2039303331203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x346c7225202c3434,0x2c326c7225202c33\n"
".quad 0x0a3b35316c722520,0x203436622e6c6873,0x25202c35346c7225,0x3233202c34346c72\n"
".quad 0x36732e7268730a3b,0x2c36346c72252034,0x202c35346c722520,0x636f6c2e0a3b3233\n"
".quad 0x2039303331203220,0x36622e6c68730a31,0x2c37346c72252034,0x202c36346c722520\n"
".quad 0x732e6464610a3b32,0x38346c7225203436,0x2c30316c7225202c,0x0a3b37346c722520\n"
".quad 0x61626f6c672e646c,0x6625203233662e6c,0x346c72255b202c37,0x2e6464610a3b5d38\n"
".quad 0x346c722520343673,0x32326c7225202c39,0x0a3b32373033202c,0x31203220636f6c2e\n"
".quad 0x616d0a3120303133,0x3436732e6f6c2e64,0x202c30356c722520,0x25202c39346c7225\n"
".quad 0x6c7225202c326c72,0x2e6c68730a3b3932,0x356c722520343662,0x30356c7225202c31\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c32356c,0x0a3b3233202c3135\n"
".quad 0x31203220636f6c2e,0x68730a3120303133,0x7225203436622e6c,0x6c7225202c33356c\n"
".quad 0x610a3b32202c3235,0x25203436732e6464,0x7225202c34356c72,0x6c7225202c30316c\n"
".quad 0x672e646c0a3b3335,0x33662e6c61626f6c,0x5b202c3866252032,0x0a3b5d34356c7225\n"
".quad 0x203436732e646461,0x25202c35356c7225,0x3533202c36336c72,0x636f6c2e0a3b3438\n"
".quad 0x2031313331203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x356c7225202c3635\n"
".quad 0x2c326c7225202c35,0x0a3b39326c722520,0x203436622e6c6873,0x25202c37356c7225\n"
".quad 0x3233202c36356c72,0x36732e7268730a3b,0x2c38356c72252034,0x202c37356c722520\n"
".quad 0x636f6c2e0a3b3233,0x2031313331203220,0x36622e6c68730a31,0x2c39356c72252034\n"
".quad 0x202c38356c722520,0x732e6464610a3b32,0x30366c7225203436,0x2c30316c7225202c\n"
".quad 0x0a3b39356c722520,0x61626f6c672e646c,0x6625203233662e6c,0x366c72255b202c39\n"
".quad 0x2e6464610a3b5d30,0x366c722520343673,0x36336c7225202c31,0x0a3b36393034202c\n"
".quad 0x31203220636f6c2e,0x616d0a3120323133,0x3436732e6f6c2e64,0x202c32366c722520\n"
".quad 0x25202c31366c7225,0x6c7225202c326c72,0x2e6c68730a3b3531,0x366c722520343662\n"
".quad 0x32366c7225202c33,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c34366c\n"
".quad 0x0a3b3233202c3336,0x31203220636f6c2e,0x68730a3120323133,0x7225203436622e6c\n"
".quad 0x6c7225202c35366c,0x610a3b32202c3436,0x25203436732e6464,0x7225202c36366c72\n"
".quad 0x6c7225202c30316c,0x672e646c0a3b3536,0x33662e6c61626f6c,0x202c303166252032\n"
".quad 0x3b5d36366c72255b,0x3436732e6464610a,0x202c37366c722520,0x3533202c386c7225\n"
".quad 0x636f6c2e0a3b3438,0x2030323331203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x366c7225202c3836,0x2c326c7225202c37,0x730a3b376c722520,0x25203436622e6c68\n"
".quad 0x7225202c39366c72,0x3b3233202c38366c,0x3436732e7268730a,0x202c30376c722520\n"
".quad 0x33202c39366c7225,0x20636f6c2e0a3b32,0x3120303233312032,0x3436622e6c68730a\n"
".quad 0x202c31376c722520,0x32202c30376c7225,0x36732e6464610a3b,0x202c336c72252034\n"
".quad 0x7225202c366c7225,0x6464610a3b31376c,0x6c7225203436732e,0x386c7225202c3237\n"
".quad 0x0a3b36393034202c,0x31203220636f6c2e,0x616d0a3120313233,0x3436732e6f6c2e64\n"
".quad 0x202c33376c722520,0x25202c32376c7225,0x6c7225202c326c72,0x622e6c68730a3b37\n"
".quad 0x34376c7225203436,0x2c33376c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x376c7225202c3537,0x2e0a3b3233202c34,0x3331203220636f6c,0x6c68730a31203132\n"
".quad 0x6c7225203436622e,0x376c7225202c3637,0x64610a3b32202c35,0x7225203436732e64\n"
".quad 0x366c7225202c346c,0x3b36376c7225202c,0x203220636f6c2e0a,0x400a312033313331\n"
".quad 0x2061726220317025,0x0a3b325f34324242,0x203220636f6c2e0a,0x610a312037323331\n"
".quad 0x25203233662e6464,0x326625202c393166,0x610a3b336625202c,0x25203233662e6464\n"
".quad 0x316625202c303266,0x0a3b346625202c39,0x203233662e646461,0x6625202c31326625\n"
".quad 0x3b356625202c3032,0x3233662e6464610a,0x25202c3232662520,0x366625202c313266\n"
".quad 0x33662e6464610a3b,0x202c333266252032,0x6625202c32326625,0x662e6464610a3b37\n"
".quad 0x2c34326625203233,0x25202c3332662520,0x2e6464610a3b3866,0x3532662520323366\n"
".quad 0x202c34326625202c,0x6464610a3b396625,0x326625203233662e,0x2c35326625202c36\n"
".quad 0x730a3b3031662520,0x25203233662e6275,0x336625202c373266,0x610a3b356625202c\n"
".quad 0x25203233662e6464,0x326625202c383266,0x0a3b376625202c37,0x203233662e627573\n"
".quad 0x6625202c39326625,0x3b386625202c3832,0x3233662e6275730a,0x25202c3033662520\n"
".quad 0x396625202c393266,0x33662e6464610a3b,0x202c313366252032,0x6625202c30336625\n"
".quad 0x2e6275730a3b3031,0x3233662520323366,0x25202c346625202c,0x2e6464610a3b3666\n"
".quad 0x3333662520323366,0x202c32336625202c,0x6464610a3b376625,0x336625203233662e\n"
".quad 0x2c33336625202c34,0x75730a3b38662520,0x6625203233662e62,0x34336625202c3533\n"
".quad 0x730a3b396625202c,0x25203233662e6275,0x336625202c363366,0x3b30316625202c35\n"
".quad 0x3233662e6c756d0a,0x25202c3733662520,0x336625202c363366,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x31336625202c3833,0x202c31336625202c,0x6f6d0a3b37336625\n"
".quad 0x6625203233662e76,0x46336630202c3933,0x0a3b303030303043,0x31203220636f6c2e\n"
".quad 0x656e0a3120373233,0x6625203233662e67,0x38336625202c3034,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x2c30346625202c31,0x25202c3933662520,0x616d660a3b363266\n"
".quad 0x203233662e6e722e,0x6625202c32346625,0x45426630202c3134,0x202c393345383345\n"
".quad 0x67656e0a3b326625,0x346625203233662e,0x3b32346625202c33,0x617261702e646c0a\n"
".quad 0x6625203233662e6d,0x5a5f5b202c333031,0x425f645f524c3031,0x5f53665032434441\n"
".quad 0x617261705f666d66,0x6c2e0a3b5d325f6d,0x323331203220636f,0x2e616d660a312037\n"
".quad 0x25203233662e6e72,0x346625202c343466,0x3330316625202c33,0x6d0a3b326625202c\n"
".quad 0x25203233662e766f,0x346630202c353466,0x3b30303030303430,0x203220636f6c2e0a\n"
".quad 0x660a312037323331,0x33662e6e722e616d,0x202c363466252032,0x6630202c31336625\n"
".quad 0x3030303030343034,0x0a3b36326625202c,0x203233662e6c756d,0x6625202c37346625\n"
".quad 0x30346630202c3133,0x0a3b303030303039,0x662e6e722e616d66,0x2c38346625203233\n"
".quad 0x25202c3734662520,0x346625202c313366,0x722e616d660a3b36,0x6625203233662e6e\n"
".quad 0x30346625202c3934,0x202c39336625202c,0x6f6d0a3b38346625,0x6625203233662e76\n"
".quad 0x44336630202c3035,0x0a3b393345383345,0x31203220636f6c2e,0x656e0a3120373233\n"
".quad 0x6625203233662e67,0x39346625202c3135,0x6e722e616d660a3b,0x356625203233662e\n"
".quad 0x2c31356625202c32,0x25202c3035662520,0x2e67656e0a3b3366,0x3335662520323366\n"
".quad 0x0a3b32356625202c,0x662e6e722e616d66,0x2c34356625203233,0x25202c3335662520\n"
".quad 0x6625202c33303166,0x722e616d660a3b33,0x6625203233662e6e,0x36336625202c3535\n"
".quad 0x303430346630202c,0x6625202c30303030,0x2e6c756d0a3b3632,0x3635662520323366\n"
".quad 0x202c36336625202c,0x3030303930346630,0x2e616d660a3b3030,0x25203233662e6e72\n"
".quad 0x356625202c373566,0x2c36336625202c36,0x660a3b3535662520,0x33662e6e722e616d\n"
".quad 0x202c383566252032,0x6625202c30346625,0x37356625202c3933,0x33662e67656e0a3b\n"
".quad 0x202c393566252032,0x6d660a3b38356625,0x3233662e6e722e61,0x25202c3036662520\n"
".quad 0x356625202c393566,0x0a3b346625202c30,0x203233662e67656e,0x6625202c31366625\n"
".quad 0x2e616d660a3b3036,0x25203233662e6e72,0x366625202c323666,0x3330316625202c31\n"
".quad 0x6e0a3b346625202c,0x25203233662e6765,0x336625202c333666,0x722e616d660a3b31\n"
".quad 0x6625203233662e6e,0x33366625202c3436,0x202c35346625202c,0x6d660a3b36326625\n"
".quad 0x3233662e6e722e61,0x25202c3536662520,0x336625202c373466,0x3b34366625202c31\n"
".quad 0x2e6e722e616d660a,0x3636662520323366,0x202c30346625202c,0x6625202c39336625\n"
".quad 0x2e67656e0a3b3536,0x3736662520323366,0x0a3b36366625202c,0x662e6e722e616d66\n"
".quad 0x2c38366625203233,0x25202c3736662520,0x356625202c303566,0x33662e67656e0a3b\n"
".quad 0x202c393666252032,0x6d660a3b38366625,0x3233662e6e722e61,0x25202c3037662520\n"
".quad 0x316625202c393666,0x3b356625202c3330,0x3233662e67656e0a,0x25202c3137662520\n"
".quad 0x616d660a3b363366,0x203233662e6e722e,0x6625202c32376625,0x35346625202c3137\n"
".quad 0x0a3b36326625202c,0x662e6e722e616d66,0x2c33376625203233,0x25202c3635662520\n"
".quad 0x376625202c363366,0x722e616d660a3b32,0x6625203233662e6e,0x30346625202c3437\n"
".quad 0x202c39336625202c,0x656e0a3b33376625,0x6625203233662e67,0x34376625202c3537\n"
".quad 0x6e722e616d660a3b,0x376625203233662e,0x2c35376625202c36,0x25202c3035662520\n"
".quad 0x2e67656e0a3b3666,0x3737662520323366,0x0a3b36376625202c,0x662e6e722e616d66\n"
".quad 0x2c38376625203233,0x25202c3737662520,0x6625202c33303166,0x662e6464610a3b36\n"
".quad 0x2c39376625203233,0x25202c3133662520,0x616d660a3b363366,0x203233662e6e722e\n"
".quad 0x6625202c30386625,0x30346630202c3937,0x202c303030303034,0x756d0a3b36326625\n"
".quad 0x6625203233662e6c,0x39376625202c3138,0x303930346630202c,0x6d660a3b30303030\n"
".quad 0x3233662e6e722e61,0x25202c3238662520,0x376625202c313866,0x3b30386625202c39\n"
".quad 0x2e6e722e616d660a,0x3338662520323366,0x202c30346625202c,0x6625202c39336625\n"
".quad 0x2e7476630a3b3238,0x203233662e343666,0x6625202c31646625,0x2e766f6d0a3b3338\n"
".quad 0x3264662520343666,0x433946336430202c,0x4237433137433137,0x6c2e0a3b43314438\n"
".quad 0x323331203220636f,0x2e7476630a312037,0x203233662e343666,0x6625202c33646625\n"
".quad 0x662e67656e0a3b37,0x2c34646625203436,0x660a3b3164662520,0x36662e6e722e616d\n"
".quad 0x202c356466252034,0x6625202c34646625,0x33646625202c3264,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x30316625202c3664,0x662e67656e0a3b33,0x2c37646625203436\n"
".quad 0x660a3b3664662520,0x36662e6e722e616d,0x202c386466252034,0x6625202c37646625\n"
".quad 0x33646625202c3564,0x6e722e7476630a3b,0x3436662e3233662e,0x25202c3438662520\n"
".quad 0x6275730a3b386466,0x386625203233662e,0x2c36336625202c35,0x2e0a3b3133662520\n"
".quad 0x3331203220636f6c,0x616d660a31203732,0x203233662e6e722e,0x6625202c36386625\n"
".quad 0x30346630202c3538,0x202c303030303034,0x756d0a3b36326625,0x6625203233662e6c\n"
".quad 0x35386625202c3738,0x303930346630202c,0x6d660a3b30303030,0x3233662e6e722e61\n"
".quad 0x25202c3838662520,0x386625202c373866,0x3b36386625202c35,0x2e6e722e616d660a\n"
".quad 0x3938662520323366,0x202c30346625202c,0x6625202c39336625,0x2e7476630a3b3838\n"
".quad 0x203233662e343666,0x6625202c39646625,0x2e7476630a3b3938,0x203233662e343666\n"
".quad 0x25202c3031646625,0x2e67656e0a3b3866,0x3164662520343666,0x3b39646625202c31\n"
".quad 0x2e6e722e616d660a,0x3164662520343666,0x3131646625202c32,0x202c32646625202c\n"
".quad 0x660a3b3031646625,0x36662e6e722e616d,0x2c33316466252034,0x25202c3764662520\n"
".quad 0x6625202c32316466,0x7476630a3b303164,0x2e3233662e6e722e,0x3039662520343666\n"
".quad 0x3b3331646625202c,0x3233662e6275730a,0x25202c3139662520,0x336625202c333666\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x31396625202c3239,0x303430346630202c\n"
".quad 0x6625202c30303030,0x2e6c756d0a3b3632,0x3339662520323366,0x202c31396625202c\n"
".quad 0x3030303930346630,0x2e616d660a3b3030,0x25203233662e6e72,0x396625202c343966\n"
".quad 0x2c31396625202c33,0x660a3b3239662520,0x33662e6e722e616d,0x202c353966252032\n"
".quad 0x6625202c30346625,0x34396625202c3933,0x36662e7476630a3b,0x6625203233662e34\n"
".quad 0x396625202c343164,0x662e7476630a3b35,0x25203233662e3436,0x6625202c35316466\n"
".quad 0x662e67656e0a3b39,0x3631646625203436,0x3b3431646625202c,0x2e6e722e616d660a\n"
".quad 0x3164662520343666,0x3631646625202c37,0x202c32646625202c,0x660a3b3531646625\n"
".quad 0x36662e6e722e616d,0x2c38316466252034,0x25202c3764662520,0x6625202c37316466\n"
".quad 0x7476630a3b353164,0x2e3233662e6e722e,0x3639662520343666,0x3b3831646625202c\n"
".quad 0x3233662e6275730a,0x25202c3739662520,0x336625202c313366,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x37396625202c3839,0x303430346630202c,0x6625202c30303030\n"
".quad 0x2e6c756d0a3b3632,0x3939662520323366,0x202c37396625202c,0x3030303930346630\n"
".quad 0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c30303166,0x37396625202c3939\n"
".quad 0x0a3b38396625202c,0x662e6e722e616d66,0x3130316625203233,0x202c30346625202c\n"
".quad 0x6625202c39336625,0x7476630a3b303031,0x3233662e3436662e,0x202c393164662520\n"
".quad 0x630a3b3130316625,0x662e3436662e7476,0x3032646625203233,0x0a3b30316625202c\n"
".quad 0x203436662e67656e,0x25202c3132646625,0x6d660a3b39316466,0x3436662e6e722e61\n"
".quad 0x202c323264662520,0x25202c3132646625,0x646625202c326466,0x2e616d660a3b3032\n"
".quad 0x25203436662e6e72,0x6625202c33326466,0x32646625202c3764,0x3032646625202c32\n"
".quad 0x6e722e7476630a3b,0x3436662e3233662e,0x202c323031662520,0x6c0a3b3332646625\n"
".quad 0x2e6d617261702e64,0x316c722520343675,0x315a5f5b202c3936,0x41425f645f524c30\n"
".quad 0x665f536650324344,0x6d617261705f666d,0x6f6c2e0a3b5d335f,0x3539323120322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c39376c,0x36316c7225202c38\n"
".quad 0x3b376c7225202c39,0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3736316c\n"
".quad 0x5f645f524c30315a,0x5366503243444142,0x7261705f666d665f,0x630a3b5d315f6d61\n"
".quad 0x672e6f742e617476,0x36752e6c61626f6c,0x2c30386c72252034,0x3b3736316c722520\n"
".quad 0x3436622e6c68730a,0x202c31386c722520,0x33202c39376c7225,0x732e7268730a3b32\n"
".quad 0x32386c7225203436,0x2c31386c7225202c,0x6f6c2e0a3b323320,0x3932333120322063\n"
".quad 0x622e6c68730a3120,0x33386c7225203436,0x2c32386c7225202c,0x2e6464610a3b3220\n"
".quad 0x386c722520343673,0x30386c7225202c34,0x3b33386c7225202c,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x202c5d34386c7225,0x6c2e0a3b34346625,0x313331203220636f\n"
".quad 0x2e64616d0a312034,0x25203436732e6f6c,0x7225202c36386c72,0x6c7225202c36316c\n"
".quad 0x6c7225202c393631,0x622e6c68730a3b37,0x37386c7225203436,0x2c36386c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x386c7225202c3838,0x2e0a3b3233202c37\n"
".quad 0x3331203220636f6c,0x6c68730a31203431,0x6c7225203436622e,0x386c7225202c3938\n"
".quad 0x64610a3b32202c38,0x7225203436732e64,0x6c7225202c30396c,0x386c7225202c3038\n"
".quad 0x20636f6c2e0a3b39,0x3120303333312032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d30396c7225,0x64610a3b34356625,0x7225203436732e64,0x6c7225202c31396c\n"
".quad 0x3b34323031202c38,0x203220636f6c2e0a,0x6d0a312035313331,0x36732e6f6c2e6461\n"
".quad 0x2c32396c72252034,0x202c31396c722520,0x202c3936316c7225,0x68730a3b376c7225\n"
".quad 0x7225203436622e6c,0x6c7225202c33396c,0x0a3b3233202c3239,0x203436732e726873\n"
".quad 0x25202c34396c7225,0x3233202c33396c72,0x3220636f6c2e0a3b,0x0a31203531333120\n"
".quad 0x203436622e6c6873,0x25202c35396c7225,0x3b32202c34396c72,0x3436732e6464610a\n"
".quad 0x202c36396c722520,0x25202c30386c7225,0x6c2e0a3b35396c72,0x333331203220636f\n"
".quad 0x672e74730a312031,0x33662e6c61626f6c,0x36396c72255b2032,0x3b32366625202c5d\n"
".quad 0x203220636f6c2e0a,0x6d0a312036313331,0x36732e6f6c2e6461,0x2c38396c72252034\n"
".quad 0x202c30336c722520,0x202c3936316c7225,0x68730a3b376c7225,0x7225203436622e6c\n"
".quad 0x6c7225202c39396c,0x0a3b3233202c3839,0x203436732e726873,0x202c3030316c7225\n"
".quad 0x33202c39396c7225,0x20636f6c2e0a3b32,0x3120363133312032,0x3436622e6c68730a\n"
".quad 0x2c3130316c722520,0x2c3030316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x386c7225202c3230,0x30316c7225202c30,0x20636f6c2e0a3b31,0x3120323333312032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3230316c7225,0x610a3b3037662520\n"
".quad 0x25203436732e6464,0x25202c3330316c72,0x343032202c386c72,0x20636f6c2e0a3b38\n"
".quad 0x3120373133312032,0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3430\n"
".quad 0x316c7225202c3330,0x376c7225202c3936,0x36622e6c68730a3b,0x3530316c72252034\n"
".quad 0x3430316c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3630316c\n"
".quad 0x3233202c3530316c,0x3220636f6c2e0a3b,0x0a31203731333120,0x203436622e6c6873\n"
".quad 0x202c3730316c7225,0x202c3630316c7225,0x732e6464610a3b32,0x30316c7225203436\n"
".quad 0x30386c7225202c38,0x3730316c7225202c,0x3220636f6c2e0a3b,0x0a31203333333120\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3830316c72,0x64610a3b38376625\n"
".quad 0x7225203436732e64,0x7225202c3930316c,0x30363532202c386c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203831333120,0x732e6f6c2e64616d,0x31316c7225203436,0x30316c7225202c30\n"
".quad 0x36316c7225202c39,0x3b376c7225202c39,0x3436622e6c68730a,0x2c3131316c722520\n"
".quad 0x2c3031316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c323131\n"
".quad 0x3b3233202c313131,0x203220636f6c2e0a,0x730a312038313331,0x25203436622e6c68\n"
".quad 0x25202c3331316c72,0x32202c3231316c72,0x36732e6464610a3b,0x3431316c72252034\n"
".quad 0x2c30386c7225202c,0x3b3331316c722520,0x203220636f6c2e0a,0x730a312034333331\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3431316c,0x6464610a3b343866\n"
".quad 0x6c7225203436732e,0x6c7225202c353131,0x3b32373033202c38,0x203220636f6c2e0a\n"
".quad 0x6d0a312039313331,0x36732e6f6c2e6461,0x3631316c72252034,0x3531316c7225202c\n"
".quad 0x3936316c7225202c,0x0a3b376c7225202c,0x203436622e6c6873,0x202c3731316c7225\n"
".quad 0x202c3631316c7225,0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3831\n"
".quad 0x0a3b3233202c3731,0x31203220636f6c2e,0x68730a3120393133,0x7225203436622e6c\n"
".quad 0x7225202c3931316c,0x3b32202c3831316c,0x3436732e6464610a,0x2c3032316c722520\n"
".quad 0x202c30386c722520,0x0a3b3931316c7225,0x31203220636f6c2e,0x74730a3120353333\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d303231,0x636f6c2e0a3b3039\n"
".quad 0x2030323331203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c323231\n"
".quad 0x316c7225202c3736,0x376c7225202c3936,0x36622e6c68730a3b,0x3332316c72252034\n"
".quad 0x3232316c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3432316c\n"
".quad 0x3233202c3332316c,0x3220636f6c2e0a3b,0x0a31203032333120,0x203436622e6c6873\n"
".quad 0x202c3532316c7225,0x202c3432316c7225,0x732e6464610a3b32,0x32316c7225203436\n"
".quad 0x30386c7225202c36,0x3532316c7225202c,0x3220636f6c2e0a3b,0x0a31203633333120\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3632316c72,0x6c2e0a3b36396625\n"
".quad 0x333331203220636f,0x672e74730a312037,0x33662e6c61626f6c,0x5d346c72255b2032\n"
".quad 0x3b3230316625202c,0x203220636f6c2e0a,0x720a322030343331,0x3242420a0a3b7465\n"
".quad 0x2e646c0a3a325f34,0x36752e6d61726170,0x3836316c72252034,0x4c30315a5f5b202c\n"
".quad 0x434441425f645f52,0x666d665f53665032,0x335f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x3120343133312032,0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3033\n"
".quad 0x36316c7225202c36,0x3b376c7225202c38,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5f5b202c3636316c,0x5f645f524c30315a,0x5366503243444142,0x7261705f666d665f\n"
".quad 0x630a3b5d315f6d61,0x672e6f742e617476,0x36752e6c61626f6c,0x3133316c72252034\n"
".quad 0x3636316c7225202c,0x36622e6c68730a3b,0x3233316c72252034,0x3033316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3333316c,0x3233202c3233316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203431333120,0x203436622e6c6873,0x202c3433316c7225\n"
".quad 0x202c3333316c7225,0x732e6464610a3b32,0x33316c7225203436,0x33316c7225202c35\n"
".quad 0x33316c7225202c31,0x6c672e74730a3b34,0x3233662e6c61626f,0x3533316c72255b20\n"
".quad 0x0a3b356625202c5d,0x203436732e646461,0x202c3633316c7225,0x3031202c386c7225\n"
".quad 0x636f6c2e0a3b3432,0x2035313331203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c373331,0x6c7225202c363331,0x6c7225202c383631,0x622e6c68730a3b37\n"
".quad 0x33316c7225203436,0x33316c7225202c38,0x730a3b3233202c37,0x25203436732e7268\n"
".quad 0x25202c3933316c72,0x33202c3833316c72,0x20636f6c2e0a3b32,0x3120353133312032\n"
".quad 0x3436622e6c68730a,0x2c3034316c722520,0x2c3933316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x316c7225202c3134,0x316c7225202c3133,0x672e74730a3b3034\n"
".quad 0x33662e6c61626f6c,0x34316c72255b2032,0x3b366625202c5d31,0x203220636f6c2e0a\n"
".quad 0x6d0a312036313331,0x36732e6f6c2e6461,0x3334316c72252034,0x2c30336c7225202c\n"
".quad 0x2c3836316c722520,0x730a3b376c722520,0x25203436622e6c68,0x25202c3434316c72\n"
".quad 0x33202c3334316c72,0x732e7268730a3b32,0x34316c7225203436,0x34316c7225202c35\n"
".quad 0x2e0a3b3233202c34,0x3331203220636f6c,0x6c68730a31203631,0x6c7225203436622e\n"
".quad 0x6c7225202c363431,0x0a3b32202c353431,0x203436732e646461,0x202c3734316c7225\n"
".quad 0x202c3133316c7225,0x0a3b3634316c7225,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3734316c72,0x6464610a3b336625,0x6c7225203436732e,0x6c7225202c383431\n"
".quad 0x3b38343032202c38,0x203220636f6c2e0a,0x6d0a312037313331,0x36732e6f6c2e6461\n"
".quad 0x3934316c72252034,0x3834316c7225202c,0x3836316c7225202c,0x0a3b376c7225202c\n"
".quad 0x203436622e6c6873,0x202c3035316c7225,0x202c3934316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3135,0x0a3b3233202c3035,0x31203220636f6c2e\n"
".quad 0x68730a3120373133,0x7225203436622e6c,0x7225202c3235316c,0x3b32202c3135316c\n"
".quad 0x3436732e6464610a,0x2c3335316c722520,0x2c3133316c722520,0x3b3235316c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3335316c7225,0x64610a3b34662520\n"
".quad 0x7225203436732e64,0x7225202c3435316c,0x30363532202c386c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203831333120,0x732e6f6c2e64616d,0x35316c7225203436,0x35316c7225202c35\n"
".quad 0x36316c7225202c34,0x3b376c7225202c38,0x3436622e6c68730a,0x2c3635316c722520\n"
".quad 0x2c3535316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c373531\n"
".quad 0x3b3233202c363531,0x203220636f6c2e0a,0x730a312038313331,0x25203436622e6c68\n"
".quad 0x25202c3835316c72,0x32202c3735316c72,0x36732e6464610a3b,0x3935316c72252034\n"
".quad 0x3133316c7225202c,0x3835316c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x5d3935316c72255b,0x610a3b396625202c,0x25203436732e6464,0x25202c3036316c72\n"
".quad 0x373033202c386c72,0x20636f6c2e0a3b32,0x3120393133312032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3136,0x316c7225202c3036,0x376c7225202c3836\n"
".quad 0x36622e6c68730a3b,0x3236316c72252034,0x3136316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3336316c,0x3233202c3236316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203931333120,0x203436622e6c6873,0x202c3436316c7225,0x202c3336316c7225\n"
".quad 0x732e6464610a3b32,0x36316c7225203436,0x33316c7225202c35,0x36316c7225202c31\n"
".quad 0x6c672e74730a3b34,0x3233662e6c61626f,0x3536316c72255b20,0x3b30316625202c5d\n"
".quad 0x203220636f6c2e0a,0x730a312030323331,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x376625202c5d336c,0x3220636f6c2e0a3b,0x0a31203132333120,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x6625202c5d346c72,0x20636f6c2e0a3b38,0x3220303433312032\n"
".quad 0x0a7d0a3b7465720a,0x207972746e652e0a,0x645f524c39315a5f,0x434441426279685f\n"
".quad 0x50707265746e495f,0x0a28666d665f5366,0x2e206d617261702e,0x39315a5f20343675\n"
".quad 0x6279685f645f524c,0x746e495f43444142,0x665f536650707265,0x6d617261705f666d\n"
".quad 0x7261702e0a2c305f,0x203436752e206d61,0x645f524c39315a5f,0x434441426279685f\n"
".quad 0x50707265746e495f,0x705f666d665f5366,0x0a2c315f6d617261,0x2e206d617261702e\n"
".quad 0x39315a5f20323366,0x6279685f645f524c,0x746e495f43444142,0x665f536650707265\n"
".quad 0x6d617261705f666d,0x7261702e0a2c325f,0x203436752e206d61,0x645f524c39315a5f\n"
".quad 0x434441426279685f,0x50707265746e495f,0x705f666d665f5366,0x0a2c335f6d617261\n"
".quad 0x2e206d617261702e,0x39315a5f20323366,0x6279685f645f524c,0x746e495f43444142\n"
".quad 0x665f536650707265,0x6d617261705f666d,0x2e0a7b0a290a345f,0x3233662e20676572\n"
".quad 0x3e3538323c662520,0x2e206765722e0a3b,0x3c64662520343666,0x65722e0a3b3e3134\n"
".quad 0x20646572702e2067,0x2e0a3b3e373c7025,0x3233732e20676572,0x3b3e39363c722520\n"
".quad 0x732e206765722e0a,0x313c6c7225203436,0x6c0a0a0a3b3e3937,0x2e6d617261702e64\n"
".quad 0x316c722520343675,0x39315a5f5b202c34,0x6279685f645f524c,0x746e495f43444142\n"
".quad 0x665f536650707265,0x6d617261705f666d,0x2e646c0a3b5d305f,0x36752e6d61726170\n"
".quad 0x202c316c72252034,0x5f524c39315a5f5b,0x4441426279685f64,0x707265746e495f43\n"
".quad 0x5f666d665f536650,0x5d315f6d61726170,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5a5f5b202c326c72,0x685f645f524c3931,0x495f434441426279,0x536650707265746e\n"
".quad 0x7261705f666d665f,0x630a3b5d335f6d61,0x672e6f742e617476,0x36752e6c61626f6c\n"
".quad 0x202c336c72252034,0x2e0a3b34316c7225,0x3331203220636f6c,0x766f6d0a31203534\n"
".quad 0x337225203233752e,0x2e6469746e25202c,0x752e766f6d0a3b78,0x202c347225203233\n"
".quad 0x782e646961746325,0x33752e766f6d0a3b,0x25202c3572252032,0x6d0a3b782e646974\n"
".quad 0x33732e6f6c2e6461,0x25202c3172252032,0x2c347225202c3372,0x6c2e0a3b35722520\n"
".quad 0x343331203220636f,0x2e766f6d0a312036,0x2c36722520323375,0x792e6469746e2520\n"
".quad 0x33752e766f6d0a3b,0x25202c3772252032,0x3b792e6469617463,0x3233752e766f6d0a\n"
".quad 0x7425202c38722520,0x616d0a3b792e6469,0x3233732e6f6c2e64,0x7225202c32722520\n"
".quad 0x202c377225202c36,0x6f6c2e0a3b387225,0x3734333120322063,0x722e7476630a3120\n"
".quad 0x33732e3233662e6e,0x202c353166252032,0x616d660a3b317225,0x203233662e6e722e\n"
".quad 0x316625202c336625,0x3845336630202c35,0x30202c3030303030,0x3030444643333466\n"
".quad 0x20636f6c2e0a3b30,0x3120383433312032,0x2e6e722e7476630a,0x203233732e323366\n"
".quad 0x327225202c346625,0x6e722e616d660a3b,0x356625203233662e,0x30202c346625202c\n"
".quad 0x3030303038453366,0x3933346630202c30,0x630a3b3030304446,0x752e3436752e7476\n"
".quad 0x2c346c7225203233,0x6c2e0a3b31722520,0x343331203220636f,0x2e7476630a312039\n"
".quad 0x203233732e343673,0x25202c35316c7225,0x2e64616d0a3b3272,0x25203436732e6f6c\n"
".quad 0x6c7225202c356c72,0x326c7225202c3531,0x0a3b346c7225202c,0x203233662e646461\n"
".quad 0x6625202c36316625,0x4633436630202c33,0x610a3b3030304346,0x25203233662e6464\n"
".quad 0x356625202c373166,0x464233436630202c,0x6c2e0a3b30303043,0x203437203220636f\n"
".quad 0x33662e6c756d0a31,0x202c383166252032,0x6625202c37316625,0x2e616d660a3b3731\n"
".quad 0x25203233662e6e72,0x316625202c393166,0x2c36316625202c36,0x730a3b3831662520\n"
".quad 0x662e746c2e707465,0x202c317025203233,0x6630202c39316625,0x3030303030383234\n"
".quad 0x33732e6464610a3b,0x25202c3972252032,0x0a3b342d202c3172,0x2e74672e70746573\n"
".quad 0x2c32702520323375,0x3537202c39722520,0x20636f6c2e0a3b39,0x3120333533312032\n"
".quad 0x746c2e707465730a,0x337025203233732e,0x34202c327225202c,0x6572702e726f0a3b\n"
".quad 0x25202c3470252064,0x3b337025202c3270,0x203220636f6c2e0a,0x730a312033353331\n"
".quad 0x732e74672e707465,0x202c357025203233,0x373035202c327225,0x6572702e726f0a3b\n"
".quad 0x25202c3670252064,0x3b357025202c3470,0x3436732e6464610a,0x202c36316c722520\n"
".quad 0x35202c35316c7225,0x636f6c2e0a3b3231,0x2034373331203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x316c7225202c3731,0x2c326c7225202c36,0x630a3b346c722520\n"
".quad 0x672e6f742e617476,0x36752e6c61626f6c,0x2c38316c72252034,0x730a3b316c722520\n"
".quad 0x25203436622e6c68,0x7225202c39316c72,0x3b3233202c37316c,0x3436732e7268730a\n"
".quad 0x202c30326c722520,0x33202c39316c7225,0x20636f6c2e0a3b32,0x3120343733312032\n"
".quad 0x3436622e6c68730a,0x202c31326c722520,0x32202c30326c7225,0x36732e6464610a3b\n"
".quad 0x202c366c72252034,0x25202c38316c7225,0x64610a3b31326c72,0x7225203436732e64\n"
".quad 0x6c7225202c32326c,0x34323031202c3531,0x3220636f6c2e0a3b,0x0a31203537333120\n"
".quad 0x732e6f6c2e64616d,0x33326c7225203436,0x2c32326c7225202c,0x25202c326c722520\n"
".quad 0x6c68730a3b346c72,0x6c7225203436622e,0x326c7225202c3432,0x730a3b3233202c33\n"
".quad 0x25203436732e7268,0x7225202c35326c72,0x3b3233202c34326c,0x203220636f6c2e0a\n"
".quad 0x730a312035373331,0x25203436622e6c68,0x7225202c36326c72,0x0a3b32202c35326c\n"
".quad 0x203436732e646461,0x7225202c376c7225,0x6c7225202c38316c,0x2e6464610a3b3632\n"
".quad 0x326c722520343673,0x35316c7225202c37,0x0a3b36333531202c,0x31203220636f6c2e\n"
".quad 0x616d0a3120363733,0x3436732e6f6c2e64,0x202c38326c722520,0x25202c37326c7225\n"
".quad 0x6c7225202c326c72,0x622e6c68730a3b34,0x39326c7225203436,0x2c38326c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x326c7225202c3033,0x2e0a3b3233202c39\n"
".quad 0x3331203220636f6c,0x6c68730a31203637,0x6c7225203436622e,0x336c7225202c3133\n"
".quad 0x64610a3b32202c30,0x7225203436732e64,0x316c7225202c386c,0x31336c7225202c38\n"
".quad 0x36732e6464610a3b,0x2c32336c72252034,0x202c35316c722520,0x6c2e0a3b38343032\n"
".quad 0x373331203220636f,0x2e64616d0a312037,0x25203436732e6f6c,0x7225202c33336c72\n"
".quad 0x6c7225202c32336c,0x3b346c7225202c32,0x3436622e6c68730a,0x202c34336c722520\n"
".quad 0x33202c33336c7225,0x732e7268730a3b32,0x35336c7225203436,0x2c34336c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x3737333120322063,0x622e6c68730a3120,0x36336c7225203436\n"
".quad 0x2c35336c7225202c,0x2e6464610a3b3220,0x396c722520343673,0x2c38316c7225202c\n"
".quad 0x0a3b36336c722520,0x203436732e646461,0x25202c37336c7225,0x3532202c35316c72\n"
".quad 0x636f6c2e0a3b3036,0x2038373331203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x336c7225202c3833,0x2c326c7225202c37,0x730a3b346c722520,0x25203436622e6c68\n"
".quad 0x7225202c39336c72,0x3b3233202c38336c,0x3436732e7268730a,0x202c30346c722520\n"
".quad 0x33202c39336c7225,0x20636f6c2e0a3b32,0x3120383733312032,0x3436622e6c68730a\n"
".quad 0x202c31346c722520,0x32202c30346c7225,0x36732e6464610a3b,0x2c30316c72252034\n"
".quad 0x202c38316c722520,0x610a3b31346c7225,0x25203436732e6464,0x7225202c32346c72\n"
".quad 0x373033202c35316c,0x20636f6c2e0a3b32,0x3120393733312032,0x2e6f6c2e64616d0a\n"
".quad 0x346c722520343673,0x32346c7225202c33,0x202c326c7225202c,0x68730a3b346c7225\n"
".quad 0x7225203436622e6c,0x6c7225202c34346c,0x0a3b3233202c3334,0x203436732e726873\n"
".quad 0x25202c35346c7225,0x3233202c34346c72,0x3220636f6c2e0a3b,0x0a31203937333120\n"
".quad 0x203436622e6c6873,0x25202c36346c7225,0x3b32202c35346c72,0x3436732e6464610a\n"
".quad 0x202c31316c722520,0x25202c38316c7225,0x64610a3b36346c72,0x7225203436732e64\n"
".quad 0x6c7225202c37346c,0x34383533202c3531,0x3220636f6c2e0a3b,0x0a31203038333120\n"
".quad 0x732e6f6c2e64616d,0x38346c7225203436,0x2c37346c7225202c,0x25202c326c722520\n"
".quad 0x6c68730a3b346c72,0x6c7225203436622e,0x346c7225202c3934,0x730a3b3233202c38\n"
".quad 0x25203436732e7268,0x7225202c30356c72,0x3b3233202c39346c,0x203220636f6c2e0a\n"
".quad 0x730a312030383331,0x25203436622e6c68,0x7225202c31356c72,0x0a3b32202c30356c\n"
".quad 0x203436732e646461,0x25202c32316c7225,0x7225202c38316c72,0x6464610a3b31356c\n"
".quad 0x6c7225203436732e,0x316c7225202c3235,0x3b36393034202c35,0x203220636f6c2e0a\n"
".quad 0x6d0a312031383331,0x36732e6f6c2e6461,0x2c33356c72252034,0x202c32356c722520\n"
".quad 0x7225202c326c7225,0x2e6c68730a3b346c,0x356c722520343662,0x33356c7225202c34\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c35356c,0x0a3b3233202c3435\n"
".quad 0x31203220636f6c2e,0x68730a3120313833,0x7225203436622e6c,0x6c7225202c36356c\n"
".quad 0x610a3b32202c3535,0x25203436732e6464,0x7225202c33316c72,0x6c7225202c38316c\n"
".quad 0x636f6c2e0a3b3635,0x2033353331203220,0x6220367025400a31,0x5f35324242206172\n"
".quad 0x2e6c68730a0a3b34,0x356c722520343662,0x2c356c7225202c37,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x356c7225202c3835,0x2e0a3b3233202c37,0x3331203220636f6c\n"
".quad 0x6c68730a31203538,0x6c7225203436622e,0x356c7225202c3935,0x64610a3b32202c38\n"
".quad 0x7225203436732e64,0x6c7225202c30366c,0x39356c7225202c33,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c366625,0x64610a3b5d30366c,0x7225203233732e64\n"
".quad 0x2c327225202c3131,0x6f6c2e0a3b312d20,0x3638333120322063,0x752e7476630a3120\n"
".quad 0x25203233752e3436,0x7225202c31366c72,0x2e6464610a3b3131,0x366c722520343673\n"
".quad 0x31366c7225202c32,0x0a3b34323031202c,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x5a5f5b202c383731,0x685f645f524c3931,0x495f434441426279,0x536650707265746e\n"
".quad 0x7261705f666d665f,0x2e0a3b5d335f6d61,0x3331203220636f6c,0x64616d0a31203638\n"
".quad 0x203436732e6f6c2e,0x25202c33366c7225,0x7225202c32366c72,0x7225202c3837316c\n"
".quad 0x2e6c68730a3b346c,0x366c722520343662,0x33366c7225202c34,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c35366c,0x0a3b3233202c3436,0x31203220636f6c2e\n"
".quad 0x68730a3120363833,0x7225203436622e6c,0x6c7225202c36366c,0x610a3b32202c3536\n"
".quad 0x25203436732e6464,0x7225202c37366c72,0x366c7225202c336c,0x6c672e646c0a3b36\n"
".quad 0x3233662e6c61626f,0x255b202c37662520,0x2e0a3b5d37366c72,0x3331203220636f6c\n"
".quad 0x6464610a31203738,0x317225203233732e,0x202c327225202c33,0x752e7476630a3b31\n"
".quad 0x25203233752e3436,0x7225202c38366c72,0x2e6464610a3b3331,0x366c722520343673\n"
".quad 0x38366c7225202c39,0x0a3b38343032202c,0x31203220636f6c2e,0x616d0a3120373833\n"
".quad 0x3436732e6f6c2e64,0x202c30376c722520,0x25202c39366c7225,0x25202c3837316c72\n"
".quad 0x6c68730a3b346c72,0x6c7225203436622e,0x376c7225202c3137,0x730a3b3233202c30\n"
".quad 0x25203436732e7268,0x7225202c32376c72,0x3b3233202c31376c,0x203220636f6c2e0a\n"
".quad 0x730a312037383331,0x25203436622e6c68,0x7225202c33376c72,0x0a3b32202c32376c\n"
".quad 0x203436732e646461,0x25202c34376c7225,0x6c7225202c336c72,0x672e646c0a3b3337\n"
".quad 0x33662e6c61626f6c,0x5b202c3866252032,0x0a3b5d34376c7225,0x203233732e646461\n"
".quad 0x7225202c35317225,0x2e0a3b312d202c31,0x3331203220636f6c,0x7476630a31203838\n"
".quad 0x2e3233662e6e722e,0x3635662520323373,0x0a3b35317225202c,0x203233662e646461\n"
".quad 0x6625202c34356625,0x46336630202c3635,0x0a3b303030303030,0x203233662e646461\n"
".quad 0x6625202c31336625,0x3046336630202c34,0x6d0a3b3030303030,0x25203233752e766f\n"
".quad 0x0a3b30202c363172,0x64322e786574090a,0x2e3233662e34762e,0x3266257b20323366\n"
".quad 0x2c31326625202c30,0x25202c3232662520,0x745b202c7d333266,0x31665f6665527865\n"
".quad 0x343566257b202c44,0x5d7d31336625202c,0x636f6c2e090a0a3b,0x2039383331203220\n"
".quad 0x33732e6464610a31,0x202c373172252032,0x0a3b31202c317225,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x317225202c373566,0x662e6464610a3b37,0x2c38346625203233\n"
".quad 0x30202c3735662520,0x3030303030463366,0x786574090a0a3b30,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x6625202c36326625,0x38326625202c3732,0x2c7d39326625202c\n"
".quad 0x6665527865745b20,0x257b202c4433665f,0x336625202c383466,0x2e090a0a3b5d7d31\n"
".quad 0x3331203220636f6c,0x7476630a31203039,0x2e3233662e6e722e,0x3835662520323373\n"
".quad 0x0a3b31317225202c,0x203233662e646461,0x6625202c33346625,0x46336630202c3835\n"
".quad 0x0a3b303030303030,0x64322e786574090a,0x2e3233662e34762e,0x3366257b20323366\n"
".quad 0x2c33336625202c32,0x25202c3433662520,0x745b202c7d353366,0x35665f6665527865\n"
".quad 0x343566257b202c44,0x5d7d33346625202c,0x6574090a090a0a3b,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x25202c383366257b,0x346625202c393366,0x7d31346625202c30\n"
".quad 0x65527865745b202c,0x7b202c4436665f66,0x6625202c38346625,0x090a0a3b5d7d3334\n"
".quad 0x31203220636f6c2e,0x76630a3120323933,0x3233662e6e722e74,0x356625203233732e\n"
".quad 0x3b33317225202c39,0x3233662e6464610a,0x25202c3535662520,0x336630202c393566\n"
".quad 0x3b30303030303046,0x322e786574090a0a,0x3233662e34762e64,0x66257b203233662e\n"
".quad 0x35346625202c3434,0x202c36346625202c,0x5b202c7d37346625,0x665f666552786574\n"
".quad 0x3466257b202c4437,0x7d35356625202c38,0x74090a090a0a3b5d,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x202c303566257b20,0x6625202c31356625,0x33356625202c3235\n"
".quad 0x527865745b202c7d,0x202c4438665f6665,0x25202c343566257b,0x0a0a3b5d7d353566\n"
".quad 0x203220636f6c2e09,0x400a312034393331,0x2061726220317025,0x0a3b335f35324242\n"
".quad 0x203220636f6c2e0a,0x610a312038303431,0x25203233662e6464,0x366625202c303666\n"
".quad 0x0a3b30326625202c,0x203233662e646461,0x6625202c31366625,0x3b376625202c3036\n"
".quad 0x3233662e6464610a,0x25202c3236662520,0x326625202c313666,0x662e6464610a3b36\n"
".quad 0x2c33366625203233,0x25202c3236662520,0x2e6464610a3b3866,0x3436662520323366\n"
".quad 0x202c33366625202c,0x64610a3b32336625,0x6625203233662e64,0x34366625202c3536\n"
".quad 0x0a3b38336625202c,0x203233662e646461,0x6625202c36366625,0x34346625202c3536\n"
".quad 0x33662e6464610a3b,0x202c373666252032,0x6625202c36366625,0x2e6275730a3b3035\n"
".quad 0x3836662520323366,0x202c30326625202c,0x64610a3b36326625,0x6625203233662e64\n"
".quad 0x38366625202c3936,0x0a3b32336625202c,0x203233662e627573,0x6625202c30376625\n"
".quad 0x38336625202c3936,0x33662e6275730a3b,0x202c313766252032,0x6625202c30376625\n"
".quad 0x2e6464610a3b3434,0x3237662520323366,0x202c31376625202c,0x75730a3b30356625\n"
".quad 0x6625203233662e62,0x2c376625202c3337,0x64610a3b38662520,0x6625203233662e64\n"
".quad 0x33376625202c3437,0x0a3b32336625202c,0x203233662e646461,0x6625202c35376625\n"
".quad 0x38336625202c3437,0x33662e6275730a3b,0x202c363766252032,0x6625202c35376625\n"
".quad 0x2e6275730a3b3434,0x3737662520323366,0x202c36376625202c,0x756d0a3b30356625\n"
".quad 0x6625203233662e6c,0x37376625202c3837,0x0a3b37376625202c,0x662e6e722e616d66\n"
".quad 0x2c39376625203233,0x25202c3237662520,0x376625202c323766,0x662e766f6d0a3b38\n"
".quad 0x2c30386625203233,0x3030434633663020,0x6f6c2e0a3b303030,0x3830343120322063\n"
".quad 0x662e67656e0a3120,0x2c31386625203233,0x660a3b3937662520,0x33662e6e722e616d\n"
".quad 0x202c323866252032,0x6625202c31386625,0x37366625202c3038,0x6e722e616d660a3b\n"
".quad 0x386625203233662e,0x2c32386625202c33,0x3833454542663020,0x366625202c393345\n"
".quad 0x33662e67656e0a3b,0x202c343866252032,0x646c0a3b33386625,0x662e6d617261702e\n"
".quad 0x3338326625203233,0x4c39315a5f5b202c,0x426279685f645f52,0x65746e495f434441\n"
".quad 0x6d665f5366507072,0x5f6d617261705f66,0x636f6c2e0a3b5d32,0x2038303431203220\n"
".quad 0x6e722e616d660a31,0x386625203233662e,0x2c34386625202c35,0x202c333832662520\n"
".quad 0x766f6d0a3b366625,0x386625203233662e,0x3430346630202c36,0x2e0a3b3030303030\n"
".quad 0x3431203220636f6c,0x616d660a31203830,0x203233662e6e722e,0x6625202c37386625\n"
".quad 0x30346630202c3237,0x202c303030303034,0x756d0a3b37366625,0x6625203233662e6c\n"
".quad 0x32376625202c3838,0x303930346630202c,0x6d660a3b30303030,0x3233662e6e722e61\n"
".quad 0x25202c3938662520,0x376625202c383866,0x3b37386625202c32,0x2e6e722e616d660a\n"
".quad 0x3039662520323366,0x202c31386625202c,0x6625202c30386625,0x2e766f6d0a3b3938\n"
".quad 0x3139662520323366,0x334544336630202c,0x6c2e0a3b39334538,0x303431203220636f\n"
".quad 0x2e67656e0a312038,0x3239662520323366,0x0a3b30396625202c,0x662e6e722e616d66\n"
".quad 0x2c33396625203233,0x25202c3239662520,0x326625202c313966,0x662e67656e0a3b30\n"
".quad 0x2c34396625203233,0x660a3b3339662520,0x33662e6e722e616d,0x202c353966252032\n"
".quad 0x6625202c34396625,0x326625202c333832,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x37376625202c3639,0x303430346630202c,0x6625202c30303030,0x2e6c756d0a3b3736\n"
".quad 0x3739662520323366,0x202c37376625202c,0x3030303930346630,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x396625202c383966,0x2c37376625202c37,0x660a3b3639662520\n"
".quad 0x33662e6e722e616d,0x202c393966252032,0x6625202c31386625,0x38396625202c3038\n"
".quad 0x33662e67656e0a3b,0x2c30303166252032,0x660a3b3939662520,0x33662e6e722e616d\n"
".quad 0x2c31303166252032,0x202c303031662520,0x6625202c31396625,0x662e67656e0a3b37\n"
".quad 0x3230316625203233,0x3b3130316625202c,0x2e6e722e616d660a,0x3031662520323366\n"
".quad 0x3230316625202c33,0x2c3338326625202c,0x656e0a3b37662520,0x6625203233662e67\n"
".quad 0x376625202c343031,0x722e616d660a3b32,0x6625203233662e6e,0x316625202c353031\n"
".quad 0x36386625202c3430,0x0a3b37366625202c,0x662e6e722e616d66,0x3630316625203233\n"
".quad 0x202c38386625202c,0x6625202c32376625,0x616d660a3b353031,0x203233662e6e722e\n"
".quad 0x25202c3730316625,0x386625202c313866,0x3630316625202c30,0x33662e67656e0a3b\n"
".quad 0x2c38303166252032,0x0a3b373031662520,0x662e6e722e616d66,0x3930316625203233\n"
".quad 0x2c3830316625202c,0x25202c3139662520,0x67656e0a3b363266,0x316625203233662e\n"
".quad 0x30316625202c3031,0x722e616d660a3b39,0x6625203233662e6e,0x316625202c313131\n"
".quad 0x38326625202c3031,0x3b36326625202c33,0x3233662e67656e0a,0x202c323131662520\n"
".quad 0x6d660a3b37376625,0x3233662e6e722e61,0x202c333131662520,0x25202c3231316625\n"
".quad 0x366625202c363866,0x722e616d660a3b37,0x6625203233662e6e,0x396625202c343131\n"
".quad 0x2c37376625202c37,0x0a3b333131662520,0x662e6e722e616d66,0x3531316625203233\n"
".quad 0x202c31386625202c,0x6625202c30386625,0x67656e0a3b343131,0x316625203233662e\n"
".quad 0x31316625202c3631,0x722e616d660a3b35,0x6625203233662e6e,0x316625202c373131\n"
".quad 0x31396625202c3631,0x6e0a3b386625202c,0x25203233662e6765,0x6625202c38313166\n"
".quad 0x616d660a3b373131,0x203233662e6e722e,0x25202c3931316625,0x6625202c38313166\n"
".quad 0x386625202c333832,0x33662e6464610a3b,0x2c30323166252032,0x25202c3237662520\n"
".quad 0x616d660a3b373766,0x203233662e6e722e,0x25202c3132316625,0x6630202c30323166\n"
".quad 0x3030303030343034,0x0a3b37366625202c,0x203233662e6c756d,0x25202c3232316625\n"
".quad 0x6630202c30323166,0x3030303030393034,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x32316625202c3332,0x3032316625202c32,0x3b3132316625202c,0x2e6e722e616d660a\n"
".quad 0x3231662520323366,0x2c31386625202c34,0x25202c3038662520,0x76630a3b33323166\n"
".quad 0x33662e3436662e74,0x202c316466252032,0x6d0a3b3432316625,0x25203436662e766f\n"
".quad 0x336430202c326466,0x3137433137433946,0x3b43314438423743,0x203220636f6c2e0a\n"
".quad 0x630a312038303431,0x662e3436662e7476,0x2c33646625203233,0x6e0a3b3233662520\n"
".quad 0x25203436662e6765,0x646625202c346466,0x722e616d660a3b31,0x6625203436662e6e\n"
".quad 0x34646625202c3564,0x202c32646625202c,0x76630a3b33646625,0x33662e3436662e74\n"
".quad 0x202c366466252032,0x6e0a3b3338326625,0x25203436662e6765,0x646625202c376466\n"
".quad 0x722e616d660a3b36,0x6625203436662e6e,0x37646625202c3864,0x202c35646625202c\n"
".quad 0x76630a3b33646625,0x3233662e6e722e74,0x316625203436662e,0x38646625202c3532\n"
".quad 0x33662e6275730a3b,0x2c36323166252032,0x25202c3737662520,0x6f6c2e0a3b323766\n"
".quad 0x3830343120322063,0x722e616d660a3120,0x6625203233662e6e,0x316625202c373231\n"
".quad 0x30346630202c3632,0x202c303030303034,0x756d0a3b37366625,0x6625203233662e6c\n"
".quad 0x316625202c383231,0x30346630202c3632,0x0a3b303030303039,0x662e6e722e616d66\n"
".quad 0x3932316625203233,0x2c3832316625202c,0x202c363231662520,0x660a3b3732316625\n"
".quad 0x33662e6e722e616d,0x2c30333166252032,0x25202c3138662520,0x316625202c303866\n"
".quad 0x2e7476630a3b3932,0x203233662e343666,0x6625202c39646625,0x7476630a3b303331\n"
".quad 0x3233662e3436662e,0x202c303164662520,0x656e0a3b38336625,0x6625203436662e67\n"
".quad 0x646625202c313164,0x722e616d660a3b39,0x6625203436662e6e,0x646625202c323164\n"
".quad 0x32646625202c3131,0x3b3031646625202c,0x2e6e722e616d660a,0x3164662520343666\n"
".quad 0x2c37646625202c33,0x202c323164662520,0x630a3b3031646625,0x33662e6e722e7476\n"
".quad 0x6625203436662e32,0x646625202c313331,0x2e6275730a3b3331,0x3331662520323366\n"
".quad 0x3430316625202c32,0x0a3b37376625202c,0x662e6e722e616d66,0x3333316625203233\n"
".quad 0x2c3233316625202c,0x3030343034663020,0x366625202c303030,0x662e6c756d0a3b37\n"
".quad 0x3433316625203233,0x2c3233316625202c,0x3030393034663020,0x616d660a3b303030\n"
".quad 0x203233662e6e722e,0x25202c3533316625,0x6625202c34333166,0x316625202c323331\n"
".quad 0x2e616d660a3b3333,0x25203233662e6e72,0x6625202c36333166,0x30386625202c3138\n"
".quad 0x3b3533316625202c,0x3436662e7476630a,0x646625203233662e,0x33316625202c3431\n"
".quad 0x662e7476630a3b36,0x25203233662e3436,0x6625202c35316466,0x2e67656e0a3b3434\n"
".quad 0x3164662520343666,0x3431646625202c36,0x6e722e616d660a3b,0x646625203436662e\n"
".quad 0x31646625202c3731,0x2c32646625202c36,0x0a3b353164662520,0x662e6e722e616d66\n"
".quad 0x3831646625203436,0x202c37646625202c,0x25202c3731646625,0x76630a3b35316466\n"
".quad 0x3233662e6e722e74,0x316625203436662e,0x31646625202c3733,0x662e6275730a3b38\n"
".quad 0x3833316625203233,0x202c32376625202c,0x6d660a3b37376625,0x3233662e6e722e61\n"
".quad 0x202c393331662520,0x30202c3833316625,0x3030303034303466,0x3b37366625202c30\n"
".quad 0x3233662e6c756d0a,0x202c303431662520,0x30202c3833316625,0x3030303039303466\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x316625202c313431,0x33316625202c3034\n"
".quad 0x3933316625202c38,0x6e722e616d660a3b,0x316625203233662e,0x31386625202c3234\n"
".quad 0x202c30386625202c,0x630a3b3134316625,0x662e3436662e7476,0x3931646625203233\n"
".quad 0x3b3234316625202c,0x3436662e7476630a,0x646625203233662e,0x30356625202c3032\n"
".quad 0x36662e67656e0a3b,0x2c31326466252034,0x0a3b393164662520,0x662e6e722e616d66\n"
".quad 0x3232646625203436,0x2c3132646625202c,0x25202c3264662520,0x6d660a3b30326466\n"
".quad 0x3436662e6e722e61,0x202c333264662520,0x6625202c37646625,0x646625202c323264\n"
".quad 0x2e7476630a3b3032,0x662e3233662e6e72,0x3334316625203436,0x3b3332646625202c\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3737316c,0x5f645f524c39315a\n"
".quad 0x5f43444142627968,0x6650707265746e49,0x61705f666d665f53,0x0a3b5d335f6d6172\n"
".quad 0x31203220636f6c2e,0x616d0a3120393433,0x3436732e6f6c2e64,0x202c37376c722520\n"
".quad 0x25202c35316c7225,0x25202c3737316c72,0x2e646c0a3b346c72,0x36752e6d61726170\n"
".quad 0x3437316c72252034,0x4c39315a5f5b202c,0x426279685f645f52,0x65746e495f434441\n"
".quad 0x6d665f5366507072,0x5f6d617261705f66,0x617476630a3b5d31,0x626f6c672e6f742e\n"
".quad 0x25203436752e6c61,0x7225202c38376c72,0x68730a3b3437316c,0x7225203436622e6c\n"
".quad 0x6c7225202c39376c,0x0a3b3233202c3737,0x203436732e726873,0x25202c30386c7225\n"
".quad 0x3233202c39376c72,0x3220636f6c2e0a3b,0x0a31203337333120,0x203436622e6c6873\n"
".quad 0x25202c31386c7225,0x3b32202c30386c72,0x3436732e6464610a,0x202c32386c722520\n"
".quad 0x25202c38376c7225,0x6c2e0a3b31386c72,0x313431203220636f,0x672e74730a312030\n"
".quad 0x33662e6c61626f6c,0x32386c72255b2032,0x3b35386625202c5d,0x203220636f6c2e0a\n"
".quad 0x6d0a312034373331,0x36732e6f6c2e6461,0x2c34386c72252034,0x202c36316c722520\n"
".quad 0x202c3737316c7225,0x68730a3b346c7225,0x7225203436622e6c,0x6c7225202c35386c\n"
".quad 0x0a3b3233202c3438,0x203436732e726873,0x25202c36386c7225,0x3233202c35386c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203437333120,0x203436622e6c6873,0x25202c37386c7225\n"
".quad 0x3b32202c36386c72,0x3436732e6464610a,0x202c38386c722520,0x25202c38376c7225\n"
".quad 0x6c2e0a3b37386c72,0x313431203220636f,0x672e74730a312031,0x33662e6c61626f6c\n"
".quad 0x38386c72255b2032,0x3b35396625202c5d,0x203220636f6c2e0a,0x6d0a312035373331\n"
".quad 0x36732e6f6c2e6461,0x2c30396c72252034,0x202c32326c722520,0x202c3737316c7225\n"
".quad 0x68730a3b346c7225,0x7225203436622e6c,0x6c7225202c31396c,0x0a3b3233202c3039\n"
".quad 0x203436732e726873,0x25202c32396c7225,0x3233202c31396c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203537333120,0x203436622e6c6873,0x25202c33396c7225,0x3b32202c32396c72\n"
".quad 0x3436732e6464610a,0x202c34396c722520,0x25202c38376c7225,0x6c2e0a3b33396c72\n"
".quad 0x313431203220636f,0x672e74730a312032,0x33662e6c61626f6c,0x34396c72255b2032\n"
".quad 0x3330316625202c5d,0x3220636f6c2e0a3b,0x0a31203637333120,0x732e6f6c2e64616d\n"
".quad 0x36396c7225203436,0x2c37326c7225202c,0x2c3737316c722520,0x730a3b346c722520\n"
".quad 0x25203436622e6c68,0x7225202c37396c72,0x3b3233202c36396c,0x3436732e7268730a\n"
".quad 0x202c38396c722520,0x33202c37396c7225,0x20636f6c2e0a3b32,0x3120363733312032\n"
".quad 0x3436622e6c68730a,0x202c39396c722520,0x32202c38396c7225,0x36732e6464610a3b\n"
".quad 0x3030316c72252034,0x2c38376c7225202c,0x0a3b39396c722520,0x31203220636f6c2e\n"
".quad 0x74730a3120333134,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d303031\n"
".quad 0x6f6c2e0a3b313131,0x3737333120322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3230316c,0x6c7225202c32336c,0x6c7225202c373731,0x622e6c68730a3b34\n"
".quad 0x30316c7225203436,0x30316c7225202c33,0x730a3b3233202c32,0x25203436732e7268\n"
".quad 0x25202c3430316c72,0x33202c3330316c72,0x20636f6c2e0a3b32,0x3120373733312032\n"
".quad 0x3436622e6c68730a,0x2c3530316c722520,0x2c3430316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x376c7225202c3630,0x30316c7225202c38,0x20636f6c2e0a3b35\n"
".quad 0x3120343134312032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3630316c7225\n"
".quad 0x0a3b393131662520,0x31203220636f6c2e,0x616d0a3120383733,0x3436732e6f6c2e64\n"
".quad 0x2c3830316c722520,0x202c37336c722520,0x202c3737316c7225,0x68730a3b346c7225\n"
".quad 0x7225203436622e6c,0x7225202c3930316c,0x3233202c3830316c,0x36732e7268730a3b\n"
".quad 0x3031316c72252034,0x3930316c7225202c,0x6c2e0a3b3233202c,0x373331203220636f\n"
".quad 0x2e6c68730a312038,0x316c722520343662,0x316c7225202c3131,0x610a3b32202c3031\n"
".quad 0x25203436732e6464,0x25202c3231316c72,0x7225202c38376c72,0x6c2e0a3b3131316c\n"
".quad 0x313431203220636f,0x672e74730a312035,0x33662e6c61626f6c,0x31316c72255b2032\n"
".quad 0x32316625202c5d32,0x20636f6c2e0a3b35,0x3120393733312032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x346c7225202c3431,0x37316c7225202c32,0x3b346c7225202c37\n"
".quad 0x3436622e6c68730a,0x2c3531316c722520,0x2c3431316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c363131,0x3b3233202c353131,0x203220636f6c2e0a\n"
".quad 0x730a312039373331,0x25203436622e6c68,0x25202c3731316c72,0x32202c3631316c72\n"
".quad 0x36732e6464610a3b,0x3831316c72252034,0x2c38376c7225202c,0x3b3731316c722520\n"
".quad 0x203220636f6c2e0a,0x730a312036313431,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3831316c,0x6c2e0a3b31333166,0x383331203220636f,0x2e64616d0a312030\n"
".quad 0x25203436732e6f6c,0x25202c3032316c72,0x7225202c37346c72,0x7225202c3737316c\n"
".quad 0x2e6c68730a3b346c,0x316c722520343662,0x316c7225202c3132,0x0a3b3233202c3032\n"
".quad 0x203436732e726873,0x202c3232316c7225,0x202c3132316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2030383331203220,0x36622e6c68730a31,0x3332316c72252034,0x3232316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c343231,0x316c7225202c3837\n"
".quad 0x636f6c2e0a3b3332,0x2037313431203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x5d3432316c72255b,0x3b3733316625202c,0x203220636f6c2e0a,0x730a312038313431\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d33316c,0x6f6c2e0a3b333431\n"
".quad 0x3132343120322063,0x0a3b7465720a3220,0x3a335f353242420a,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3637316c,0x5f645f524c39315a,0x5f43444142627968\n"
".quad 0x6650707265746e49,0x61705f666d665f53,0x0a3b5d335f6d6172,0x31203220636f6c2e\n"
".quad 0x616d0a3120343733,0x3436732e6f6c2e64,0x2c3832316c722520,0x202c36316c722520\n"
".quad 0x202c3637316c7225,0x646c0a3b346c7225,0x752e6d617261702e,0x37316c7225203436\n"
".quad 0x39315a5f5b202c33,0x6279685f645f524c,0x746e495f43444142,0x665f536650707265\n"
".quad 0x6d617261705f666d,0x7476630a3b5d315f,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x202c3932316c7225,0x0a3b3337316c7225,0x203436622e6c6873,0x202c3033316c7225\n"
".quad 0x202c3832316c7225,0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3133\n"
".quad 0x0a3b3233202c3033,0x31203220636f6c2e,0x68730a3120343733,0x7225203436622e6c\n"
".quad 0x7225202c3233316c,0x3b32202c3133316c,0x3436732e6464610a,0x2c3333316c722520\n"
".quad 0x2c3932316c722520,0x3b3233316c722520,0x203220636f6c2e0a,0x730a312035393331\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3333316c,0x6f6c2e0a3b363266\n"
".quad 0x3537333120322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3533316c\n"
".quad 0x6c7225202c32326c,0x6c7225202c363731,0x622e6c68730a3b34,0x33316c7225203436\n"
".quad 0x33316c7225202c36,0x730a3b3233202c35,0x25203436732e7268,0x25202c3733316c72\n"
".quad 0x33202c3633316c72,0x20636f6c2e0a3b32,0x3120353733312032,0x3436622e6c68730a\n"
".quad 0x2c3833316c722520,0x2c3733316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x316c7225202c3933,0x316c7225202c3932,0x636f6c2e0a3b3833,0x2036393331203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3933316c72255b,0x2e0a3b386625202c\n"
".quad 0x3331203220636f6c,0x64616d0a31203637,0x203436732e6f6c2e,0x202c3134316c7225\n"
".quad 0x25202c37326c7225,0x25202c3637316c72,0x6c68730a3b346c72,0x6c7225203436622e\n"
".quad 0x6c7225202c323431,0x3b3233202c313431,0x3436732e7268730a,0x2c3334316c722520\n"
".quad 0x2c3234316c722520,0x6f6c2e0a3b323320,0x3637333120322063,0x622e6c68730a3120\n"
".quad 0x34316c7225203436,0x34316c7225202c34,0x64610a3b32202c33,0x7225203436732e64\n"
".quad 0x7225202c3534316c,0x7225202c3932316c,0x6c2e0a3b3434316c,0x393331203220636f\n"
".quad 0x672e74730a312037,0x33662e6c61626f6c,0x34316c72255b2032,0x30326625202c5d35\n"
".quad 0x3220636f6c2e0a3b,0x0a31203737333120,0x732e6f6c2e64616d,0x34316c7225203436\n"
".quad 0x32336c7225202c37,0x3637316c7225202c,0x0a3b346c7225202c,0x203436622e6c6873\n"
".quad 0x202c3834316c7225,0x202c3734316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3934,0x0a3b3233202c3834,0x31203220636f6c2e,0x68730a3120373733\n"
".quad 0x7225203436622e6c,0x7225202c3035316c,0x3b32202c3934316c,0x3436732e6464610a\n"
".quad 0x2c3135316c722520,0x2c3932316c722520,0x3b3035316c722520,0x203220636f6c2e0a\n"
".quad 0x730a312038393331,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3135316c\n"
".quad 0x636f6c2e0a3b3766,0x2038373331203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c333531,0x316c7225202c3733,0x346c7225202c3637,0x36622e6c68730a3b\n"
".quad 0x3435316c72252034,0x3335316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3535316c,0x3233202c3435316c,0x3220636f6c2e0a3b,0x0a31203837333120\n"
".quad 0x203436622e6c6873,0x202c3635316c7225,0x202c3535316c7225,0x732e6464610a3b32\n"
".quad 0x35316c7225203436,0x32316c7225202c37,0x35316c7225202c39,0x20636f6c2e0a3b36\n"
".quad 0x3120393933312032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3735316c7225\n"
".quad 0x2e0a3b3434662520,0x3331203220636f6c,0x64616d0a31203937,0x203436732e6f6c2e\n"
".quad 0x202c3935316c7225,0x25202c32346c7225,0x25202c3637316c72,0x6c68730a3b346c72\n"
".quad 0x6c7225203436622e,0x6c7225202c303631,0x3b3233202c393531,0x3436732e7268730a\n"
".quad 0x2c3136316c722520,0x2c3036316c722520,0x6f6c2e0a3b323320,0x3937333120322063\n"
".quad 0x622e6c68730a3120,0x36316c7225203436,0x36316c7225202c32,0x64610a3b32202c31\n"
".quad 0x7225203436732e64,0x7225202c3336316c,0x7225202c3932316c,0x6c2e0a3b3236316c\n"
".quad 0x303431203220636f,0x672e74730a312030,0x33662e6c61626f6c,0x36316c72255b2032\n"
".quad 0x30356625202c5d33,0x3220636f6c2e0a3b,0x0a31203130343120,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x25202c5d32316c72,0x6f6c2e0a3b323366,0x3230343120322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x5d33316c72255b20,0x0a3b38336625202c\n"
".quad 0x31203220636f6c2e,0x65720a3220313234,0x353242420a0a3b74,0x636f6c2e0a3a345f\n"
".quad 0x2037353331203220,0x33662e6464610a31,0x2c36393166252032,0x6630202c33662520\n"
".quad 0x3030303030304633,0x33662e6464610a3b,0x2c37393166252032,0x6630202c35662520\n"
".quad 0x3030303030304633,0x33752e766f6d0a3b,0x202c313572252032,0x786574090a0a3b30\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x25202c3434316625,0x6625202c35343166\n"
".quad 0x316625202c363431,0x65745b202c7d3734,0x4130665f66655278,0x36393166257b202c\n"
".quad 0x7d3739316625202c,0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x2c30353166257b20,0x202c313531662520,0x25202c3235316625,0x5b202c7d33353166\n"
".quad 0x665f666552786574,0x3166257b202c4131,0x39316625202c3639,0x0a090a0a3b5d7d37\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x353166257b203233,0x3735316625202c36\n"
".quad 0x2c3835316625202c,0x2c7d393531662520,0x6665527865745b20,0x257b202c4132665f\n"
".quad 0x6625202c36393166,0x0a0a3b5d7d373931,0x322e786574090a09,0x3233662e34762e64\n"
".quad 0x66257b203233662e,0x316625202c323631,0x36316625202c3336,0x3536316625202c34\n"
".quad 0x527865745b202c7d,0x202c4133665f6665,0x202c36393166257b,0x3b5d7d3739316625\n"
".quad 0x786574090a090a0a,0x662e34762e64322e,0x7b203233662e3233,0x25202c3836316625\n"
".quad 0x6625202c39363166,0x316625202c303731,0x65745b202c7d3137,0x4134665f66655278\n"
".quad 0x36393166257b202c,0x7d3739316625202c,0x74090a090a0a3b5d,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x2c34373166257b20,0x202c353731662520,0x25202c3637316625\n"
".quad 0x5b202c7d37373166,0x665f666552786574,0x3166257b202c4135,0x39316625202c3639\n"
".quad 0x0a090a0a3b5d7d37,0x2e64322e78657409,0x662e3233662e3476,0x383166257b203233\n"
".quad 0x3138316625202c30,0x2c3238316625202c,0x2c7d333831662520,0x6665527865745b20\n"
".quad 0x257b202c4136665f,0x6625202c36393166,0x0a0a3b5d7d373931,0x322e786574090a09\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x316625202c363831,0x38316625202c3738\n"
".quad 0x3938316625202c38,0x527865745b202c7d,0x202c4137665f6665,0x202c36393166257b\n"
".quad 0x3b5d7d3739316625,0x786574090a090a0a,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x25202c3239316625,0x6625202c33393166,0x316625202c343931,0x65745b202c7d3539\n"
".quad 0x4138665f66655278,0x36393166257b202c,0x7d3739316625202c,0x6f6c2e090a0a3b5d\n"
".quad 0x3836333120322063,0x662e6464610a3120,0x3839316625203233,0x2c3434316625202c\n"
".quad 0x0a3b303531662520,0x203233662e646461,0x25202c3939316625,0x6625202c38393166\n"
".quad 0x6464610a3b363531,0x326625203233662e,0x39316625202c3030,0x3236316625202c39\n"
".quad 0x33662e6464610a3b,0x2c31303266252032,0x202c303032662520,0x610a3b3836316625\n"
".quad 0x25203233662e6464,0x6625202c32303266,0x316625202c313032,0x2e6464610a3b3437\n"
".quad 0x3032662520323366,0x3230326625202c33,0x3b3038316625202c,0x3233662e6464610a\n"
".quad 0x202c343032662520,0x25202c3330326625,0x64610a3b36383166,0x6625203233662e64\n"
".quad 0x326625202c353032,0x39316625202c3430,0x20636f6c2e0a3b32,0x3120393633312032\n"
".quad 0x3233662e6275730a,0x202c363032662520,0x25202c3035316625,0x64610a3b32363166\n"
".quad 0x6625203233662e64,0x326625202c373032,0x37316625202c3630,0x662e6275730a3b34\n"
".quad 0x3830326625203233,0x2c3730326625202c,0x0a3b303831662520,0x203233662e627573\n"
".quad 0x25202c3930326625,0x6625202c38303266,0x6464610a3b363831,0x326625203233662e\n"
".quad 0x30326625202c3031,0x3239316625202c39,0x3220636f6c2e0a3b,0x0a31203037333120\n"
".quad 0x203233662e627573,0x25202c3131326625,0x6625202c36353166,0x6464610a3b383631\n"
".quad 0x326625203233662e,0x31326625202c3231,0x3437316625202c31,0x33662e6464610a3b\n"
".quad 0x2c33313266252032,0x202c323132662520,0x730a3b3038316625,0x25203233662e6275\n"
".quad 0x6625202c34313266,0x316625202c333132,0x2e6275730a3b3638,0x3132662520323366\n"
".quad 0x3431326625202c35,0x3b3239316625202c,0x203220636f6c2e0a,0x6d0a312031373331\n"
".quad 0x25203233662e6c75,0x6625202c36313266,0x326625202c353132,0x2e616d660a3b3531\n"
".quad 0x25203233662e6e72,0x6625202c37313266,0x326625202c303132,0x31326625202c3031\n"
".quad 0x662e766f6d0a3b36,0x3831326625203233,0x304346336630202c,0x6c2e0a3b30303030\n"
".quad 0x373331203220636f,0x2e67656e0a312034,0x3132662520323366,0x3731326625202c39\n"
".quad 0x3220636f6c2e0a3b,0x0a31203337333120,0x662e6e722e616d66,0x3032326625203233\n"
".quad 0x2c3931326625202c,0x202c383132662520,0x6d0a3b3530326625,0x25203233662e6c75\n"
".quad 0x6625202c31323266,0x336630202c303232,0x3b39334538334545,0x3233662e766f6d0a\n"
".quad 0x202c323232662520,0x3030303846336630,0x702e646c0a3b3030,0x3233662e6d617261\n"
".quad 0x202c343832662520,0x5f524c39315a5f5b,0x4441426279685f64,0x707265746e495f43\n"
".quad 0x5f666d665f536650,0x5d345f6d61726170,0x3220636f6c2e0a3b,0x0a31203337333120\n"
".quad 0x203233662e627573,0x25202c3332326625,0x6625202c32323266,0x6c756d0a3b343832\n"
".quad 0x326625203233662e,0x32326625202c3432,0x3132326625202c33,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x34316625202c3532,0x3438326625202c34,0x3b3432326625202c\n"
".quad 0x3436752e7476630a,0x6c7225203233752e,0x317225202c343631,0x3220636f6c2e0a3b\n"
".quad 0x0a31203934333120,0x2e3436752e747663,0x316c722520323375,0x3b327225202c3536\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3537316c,0x5f645f524c39315a\n"
".quad 0x5f43444142627968,0x6650707265746e49,0x61705f666d665f53,0x0a3b5d335f6d6172\n"
".quad 0x31203220636f6c2e,0x616d0a3120393433,0x3436732e6f6c2e64,0x2c3636316c722520\n"
".quad 0x2c3536316c722520,0x2c3537316c722520,0x3b3436316c722520,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3237316c,0x5f645f524c39315a,0x5f43444142627968\n"
".quad 0x6650707265746e49,0x61705f666d665f53,0x0a3b5d315f6d6172,0x2e6f742e61747663\n"
".quad 0x752e6c61626f6c67,0x36316c7225203436,0x37316c7225202c37,0x622e6c68730a3b32\n"
".quad 0x36316c7225203436,0x36316c7225202c38,0x730a3b3233202c36,0x25203436732e7268\n"
".quad 0x25202c3936316c72,0x33202c3836316c72,0x20636f6c2e0a3b32,0x3120333733312032\n"
".quad 0x3436622e6c68730a,0x2c3037316c722520,0x2c3936316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x316c7225202c3137,0x316c7225202c3736,0x672e74730a3b3037\n"
".quad 0x33662e6c61626f6c,0x37316c72255b2032,0x32326625202c5d31,0x662e766f6d0a3b35\n"
".quad 0x3632326625203233,0x303430346630202c,0x6c2e0a3b30303030,0x373331203220636f\n"
".quad 0x2e616d660a312034,0x25203233662e6e72,0x6625202c37323266,0x346630202c303132\n"
".quad 0x2c30303030303430,0x0a3b353032662520,0x203233662e6c756d,0x25202c3832326625\n"
".quad 0x6630202c30313266,0x3030303030393034,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x32326625202c3932,0x3031326625202c38,0x3b3732326625202c,0x2e6e722e616d660a\n"
".quad 0x3332662520323366,0x3931326625202c30,0x2c3831326625202c,0x0a3b393232662520\n"
".quad 0x203233662e6c756d,0x25202c3133326625,0x6630202c30333266,0x3933453833454433\n"
".quad 0x33662e6c756d0a3b,0x2c32333266252032,0x202c333232662520,0x660a3b3133326625\n"
".quad 0x33662e6e722e616d,0x2c33333266252032,0x202c303531662520,0x25202c3438326625\n"
".quad 0x74730a3b32333266,0x2e6c61626f6c672e,0x6c72255b20323366,0x33326625202c5d36\n"
".quad 0x20636f6c2e0a3b33,0x3120353733312032,0x2e6e722e616d660a,0x3332662520323366\n"
".quad 0x3531326625202c34,0x303430346630202c,0x6625202c30303030,0x6c756d0a3b353032\n"
".quad 0x326625203233662e,0x31326625202c3533,0x3930346630202c35,0x660a3b3030303030\n"
".quad 0x33662e6e722e616d,0x2c36333266252032,0x202c353332662520,0x25202c3531326625\n"
".quad 0x6d660a3b34333266,0x3233662e6e722e61,0x202c373332662520,0x25202c3931326625\n"
".quad 0x6625202c38313266,0x6c756d0a3b363332,0x326625203233662e,0x33326625202c3833\n"
".quad 0x4544336630202c37,0x6d0a3b3933453833,0x25203233662e6c75,0x6625202c39333266\n"
".quad 0x326625202c333232,0x2e616d660a3b3833,0x25203233662e6e72,0x6625202c30343266\n"
".quad 0x326625202c363531,0x33326625202c3438,0x6c672e74730a3b39,0x3233662e6c61626f\n"
".quad 0x2c5d376c72255b20,0x0a3b303432662520,0x31203220636f6c2e,0x656e0a3120363733\n"
".quad 0x6625203233662e67,0x326625202c313432,0x2e616d660a3b3031,0x25203233662e6e72\n"
".quad 0x6625202c32343266,0x326625202c313432,0x30326625202c3632,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x326625202c333432,0x31326625202c3832,0x3234326625202c30\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x31326625202c3434,0x3831326625202c39\n"
".quad 0x3b3334326625202c,0x3233662e6c756d0a,0x202c353432662520,0x30202c3434326625\n"
".quad 0x3345383345443366,0x662e6c756d0a3b39,0x3634326625203233,0x2c3332326625202c\n"
".quad 0x0a3b353432662520,0x662e6e722e616d66,0x3734326625203233,0x2c3236316625202c\n"
".quad 0x202c343832662520,0x730a3b3634326625,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x326625202c5d386c,0x636f6c2e0a3b3734,0x2037373331203220,0x33662e67656e0a31\n"
".quad 0x2c38343266252032,0x0a3b353132662520,0x662e6e722e616d66,0x3934326625203233\n"
".quad 0x2c3834326625202c,0x202c363232662520,0x660a3b3530326625,0x33662e6e722e616d\n"
".quad 0x2c30353266252032,0x202c353332662520,0x25202c3531326625,0x6d660a3b39343266\n"
".quad 0x3233662e6e722e61,0x202c313532662520,0x25202c3931326625,0x6625202c38313266\n"
".quad 0x6c756d0a3b303532,0x326625203233662e,0x35326625202c3235,0x4544336630202c31\n"
".quad 0x6d0a3b3933453833,0x25203233662e6c75,0x6625202c33353266,0x326625202c333232\n"
".quad 0x2e616d660a3b3235,0x25203233662e6e72,0x6625202c34353266,0x326625202c383631\n"
".quad 0x35326625202c3438,0x6c672e74730a3b33,0x3233662e6c61626f,0x2c5d396c72255b20\n"
".quad 0x0a3b343532662520,0x31203220636f6c2e,0x756d0a3120383733,0x6625203233662e6c\n"
".quad 0x316625202c353532,0x38326625202c3437,0x662e7476630a3b34,0x25203233662e3436\n"
".quad 0x6625202c34326466,0x7476630a3b353532,0x3233662e3436662e,0x202c353264662520\n"
".quad 0x610a3b3332326625,0x25203233662e6464,0x6625202c36353266,0x326625202c303132\n"
".quad 0x2e616d660a3b3531,0x25203233662e6e72,0x6625202c37353266,0x346630202c363532\n"
".quad 0x2c30303030303430,0x0a3b353032662520,0x203233662e6c756d,0x25202c3835326625\n"
".quad 0x6630202c36353266,0x3030303030393034,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x35326625202c3935,0x3635326625202c38,0x3b3735326625202c,0x2e6e722e616d660a\n"
".quad 0x3632662520323366,0x3931326625202c30,0x2c3831326625202c,0x0a3b393532662520\n"
".quad 0x2e3436662e747663,0x3264662520323366,0x3036326625202c36,0x36662e6c756d0a3b\n"
".quad 0x2c37326466252034,0x202c363264662520,0x3137433946336430,0x4438423743313743\n"
".quad 0x2e616d660a3b4331,0x25203436662e6e72,0x6625202c38326466,0x646625202c353264\n"
".quad 0x32646625202c3732,0x722e7476630a3b34,0x36662e3233662e6e,0x2c31363266252034\n"
".quad 0x0a3b383264662520,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d30316c72\n"
".quad 0x6c2e0a3b31363266,0x373331203220636f,0x2e6c756d0a312039,0x3632662520323366\n"
".quad 0x3038316625202c32,0x3b3438326625202c,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x36326625202c3932,0x662e6275730a3b32,0x3336326625203233,0x2c3531326625202c\n"
".quad 0x0a3b303132662520,0x31203220636f6c2e,0x6d660a3120393733,0x3233662e6e722e61\n"
".quad 0x202c343632662520,0x30202c3336326625,0x3030303034303466,0x3530326625202c30\n"
".quad 0x33662e6c756d0a3b,0x2c35363266252032,0x202c333632662520,0x3030303930346630\n"
".quad 0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c36363266,0x326625202c353632\n"
".quad 0x36326625202c3336,0x722e616d660a3b34,0x6625203233662e6e,0x326625202c373632\n"
".quad 0x31326625202c3931,0x3636326625202c38,0x36662e7476630a3b,0x6625203233662e34\n"
".quad 0x326625202c303364,0x2e6c756d0a3b3736,0x3364662520343666,0x3033646625202c31\n"
".quad 0x433946336430202c,0x4237433137433137,0x6d660a3b43314438,0x3436662e6e722e61\n"
".quad 0x202c323364662520,0x25202c3532646625,0x6625202c31336466,0x7476630a3b393264\n"
".quad 0x2e3233662e6e722e,0x3632662520343666,0x3233646625202c38,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x2c5d31316c72255b,0x0a3b383632662520,0x31203220636f6c2e\n"
".quad 0x756d0a3120303833,0x6625203233662e6c,0x316625202c393632,0x38326625202c3638\n"
".quad 0x662e7476630a3b34,0x25203233662e3436,0x6625202c33336466,0x6275730a3b393632\n"
".quad 0x326625203233662e,0x34326625202c3037,0x3531326625202c31,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x37326625202c3137,0x3430346630202c30,0x25202c3030303030\n"
".quad 0x756d0a3b35303266,0x6625203233662e6c,0x326625202c323732,0x30346630202c3037\n"
".quad 0x0a3b303030303039,0x662e6e722e616d66,0x3337326625203233,0x2c3237326625202c\n"
".quad 0x202c303732662520,0x660a3b3137326625,0x33662e6e722e616d,0x2c34373266252032\n"
".quad 0x202c393132662520,0x25202c3831326625,0x76630a3b33373266,0x33662e3436662e74\n"
".quad 0x2c34336466252032,0x0a3b343732662520,0x203436662e6c756d,0x25202c3533646625\n"
".quad 0x6430202c34336466,0x3743313743394633,0x4331443842374331,0x6e722e616d660a3b\n"
".quad 0x646625203436662e,0x32646625202c3633,0x3533646625202c35,0x3b3333646625202c\n"
".quad 0x2e6e722e7476630a,0x203436662e323366,0x25202c3537326625,0x74730a3b36336466\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x326625202c5d3231,0x636f6c2e0a3b3537\n"
".quad 0x2031383331203220,0x33662e6c756d0a31,0x2c36373266252032,0x202c323931662520\n"
".quad 0x630a3b3438326625,0x662e3436662e7476,0x3733646625203233,0x3b3637326625202c\n"
".quad 0x3233662e6275730a,0x202c373732662520,0x25202c3031326625,0x6d660a3b35313266\n"
".quad 0x3233662e6e722e61,0x202c383732662520,0x30202c3737326625,0x3030303034303466\n"
".quad 0x3530326625202c30,0x33662e6c756d0a3b,0x2c39373266252032,0x202c373732662520\n"
".quad 0x3030303930346630,0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c30383266\n"
".quad 0x326625202c393732,0x37326625202c3737,0x722e616d660a3b38,0x6625203233662e6e\n"
".quad 0x326625202c313832,0x31326625202c3931,0x3038326625202c38,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x326625202c383364,0x2e6c756d0a3b3138,0x3364662520343666\n"
".quad 0x3833646625202c39,0x433946336430202c,0x4237433137433137,0x6d660a3b43314438\n"
".quad 0x3436662e6e722e61,0x202c303464662520,0x25202c3532646625,0x6625202c39336466\n"
".quad 0x7476630a3b373364,0x2e3233662e6e722e,0x3832662520343666,0x3034646625202c32\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x2c5d33316c72255b,0x0a3b323832662520\n"
".quad 0x31203220636f6c2e,0x65720a3220313234,0x652e0a0a7d0a3b74,0x395a5f207972746e\n"
".quad 0x4342415f645f524c,0x286d665f53665044,0x206d617261702e0a,0x395a5f203436752e\n"
".quad 0x4342415f645f524c,0x5f6d665f53665044,0x2c305f6d61726170,0x206d617261702e0a\n"
".quad 0x395a5f203436752e,0x4342415f645f524c,0x5f6d665f53665044,0x2c315f6d61726170\n"
".quad 0x206d617261702e0a,0x395a5f203233662e,0x4342415f645f524c,0x5f6d665f53665044\n"
".quad 0x2c325f6d61726170,0x206d617261702e0a,0x395a5f203436752e,0x4342415f645f524c\n"
".quad 0x5f6d665f53665044,0x0a335f6d61726170,0x6765722e0a7b0a29,0x6625203233662e20\n"
".quad 0x2e0a3b3e3430313c,0x3436662e20676572,0x3e34323c64662520,0x2e206765722e0a3b\n"
".quad 0x3c70252064657270,0x6765722e0a3b3e32,0x7225203233732e20,0x722e0a3b3e35353c\n"
".quad 0x203436732e206765,0x3e3037313c6c7225,0x702e646c0a0a0a3b,0x3436752e6d617261\n"
".quad 0x5b202c356c722520,0x5f645f524c395a5f,0x5f53665044434241,0x6d617261705f6d66\n"
".quad 0x2e646c0a3b5d305f,0x36752e6d61726170,0x202c316c72252034,0x645f524c395a5f5b\n"
".quad 0x536650444342415f,0x617261705f6d665f,0x646c0a3b5d315f6d,0x752e6d617261702e\n"
".quad 0x2c326c7225203436,0x5f524c395a5f5b20,0x6650444342415f64,0x7261705f6d665f53\n"
".quad 0x630a3b5d335f6d61,0x672e6f742e617476,0x36752e6c61626f6c,0x202c366c72252034\n"
".quad 0x6c2e0a3b316c7225,0x323431203220636f,0x2e766f6d0a312036,0x2c31722520323375\n"
".quad 0x782e6469746e2520,0x33752e766f6d0a3b,0x25202c3272252032,0x3b782e6469617463\n"
".quad 0x3233752e766f6d0a,0x7425202c33722520,0x616d0a3b782e6469,0x3233732e6f6c2e64\n"
".quad 0x7225202c34722520,0x202c327225202c31,0x6f6c2e0a3b337225,0x3732343120322063\n"
".quad 0x752e766f6d0a3120,0x202c357225203233,0x3b792e6469746e25,0x3233752e766f6d0a\n"
".quad 0x6325202c36722520,0x0a3b792e64696174,0x203233752e766f6d,0x697425202c377225\n"
".quad 0x64616d0a3b792e64,0x203233732e6f6c2e,0x357225202c387225,0x25202c367225202c\n"
".quad 0x636f6c2e0a3b3772,0x2038323431203220,0x6e722e7476630a31,0x3233732e3233662e\n"
".quad 0x25202c3131662520,0x2e616d660a3b3472,0x25203233662e6e72,0x316625202c323166\n"
".quad 0x3845336630202c31,0x30202c3030303030,0x3030444643333466,0x20636f6c2e0a3b30\n"
".quad 0x3120393234312032,0x2e6e722e7476630a,0x203233732e323366,0x7225202c33316625\n"
".quad 0x722e616d660a3b38,0x6625203233662e6e,0x33316625202c3431,0x303845336630202c\n"
".quad 0x6630202c30303030,0x3030304446393334,0x36752e7476630a3b,0x7225203233752e34\n"
".quad 0x3b347225202c376c,0x203220636f6c2e0a,0x630a312030333431,0x732e3436732e7476\n"
".quad 0x2c386c7225203233,0x616d0a3b38722520,0x3436732e6f6c2e64,0x25202c396c722520\n"
".quad 0x6c7225202c386c72,0x3b376c7225202c32,0x3233662e6464610a,0x25202c3531662520\n"
".quad 0x436630202c323166,0x3b30303043464633,0x3233662e6464610a,0x25202c3631662520\n"
".quad 0x436630202c343166,0x3b30303043464233,0x203220636f6c2e0a,0x6c756d0a31203437\n"
".quad 0x316625203233662e,0x2c36316625202c37,0x660a3b3631662520,0x33662e6e722e616d\n"
".quad 0x202c383166252032,0x6625202c35316625,0x37316625202c3531,0x6c2e707465730a3b\n"
".quad 0x7025203233662e74,0x2c38316625202c31,0x3030383234663020,0x7476630a3b303030\n"
".quad 0x6f6c672e6f742e61,0x203436752e6c6162,0x25202c30316c7225,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x396c7225202c3131,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c32316c,0x0a3b3233202c3131,0x31203220636f6c2e,0x68730a3120383334\n"
".quad 0x7225203436622e6c,0x6c7225202c33316c,0x610a3b32202c3231,0x25203436732e6464\n"
".quad 0x7225202c34316c72,0x6c7225202c30316c,0x672e646c0a3b3331,0x33662e6c61626f6c\n"
".quad 0x5b202c3266252032,0x0a3b5d34316c7225,0x203233732e646461,0x7225202c30317225\n"
".quad 0x630a3b312d202c34,0x752e3436752e7476,0x35316c7225203233,0x0a3b30317225202c\n"
".quad 0x203436732e646461,0x25202c36316c7225,0x323135202c386c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203933343120,0x732e6f6c2e64616d,0x37316c7225203436,0x2c36316c7225202c\n"
".quad 0x25202c326c722520,0x68730a3b35316c72,0x7225203436622e6c,0x6c7225202c38316c\n"
".quad 0x0a3b3233202c3731,0x203436732e726873,0x25202c39316c7225,0x3233202c38316c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203933343120,0x203436622e6c6873,0x25202c30326c7225\n"
".quad 0x3b32202c39316c72,0x3436732e6464610a,0x202c31326c722520,0x25202c30316c7225\n"
".quad 0x646c0a3b30326c72,0x2e6c61626f6c672e,0x2c33662520323366,0x5d31326c72255b20\n"
".quad 0x33732e6464610a3b,0x202c323172252032,0x3b312d202c387225,0x203220636f6c2e0a\n"
".quad 0x630a312030343431,0x732e3436732e7476,0x32326c7225203233,0x0a3b32317225202c\n"
".quad 0x203436732e646461,0x25202c33326c7225,0x3031202c32326c72,0x636f6c2e0a3b3432\n"
".quad 0x2030343431203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x326c7225202c3432\n"
".quad 0x2c326c7225202c33,0x730a3b376c722520,0x25203436622e6c68,0x7225202c35326c72\n"
".quad 0x3b3233202c34326c,0x3436732e7268730a,0x202c36326c722520,0x33202c35326c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120303434312032,0x3436622e6c68730a,0x202c37326c722520\n"
".quad 0x32202c36326c7225,0x36732e6464610a3b,0x2c38326c72252034,0x202c30316c722520\n"
".quad 0x6c0a3b37326c7225,0x6c61626f6c672e64,0x346625203233662e,0x38326c72255b202c\n"
".quad 0x20636f6c2e0a3b5d,0x3120313434312032,0x3233732e6464610a,0x25202c3431722520\n"
".quad 0x630a3b31202c3472,0x752e3436752e7476,0x39326c7225203233,0x0a3b34317225202c\n"
".quad 0x203436732e646461,0x25202c30336c7225,0x333531202c386c72,0x20636f6c2e0a3b36\n"
".quad 0x3120313434312032,0x2e6f6c2e64616d0a,0x336c722520343673,0x30336c7225202c31\n"
".quad 0x202c326c7225202c,0x730a3b39326c7225,0x25203436622e6c68,0x7225202c32336c72\n"
".quad 0x3b3233202c31336c,0x3436732e7268730a,0x202c33336c722520,0x33202c32336c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120313434312032,0x3436622e6c68730a,0x202c34336c722520\n"
".quad 0x32202c33336c7225,0x36732e6464610a3b,0x2c35336c72252034,0x202c30316c722520\n"
".quad 0x6c0a3b34336c7225,0x6c61626f6c672e64,0x356625203233662e,0x35336c72255b202c\n"
".quad 0x20636f6c2e0a3b5d,0x3120323434312032,0x3233732e6464610a,0x25202c3631722520\n"
".quad 0x630a3b31202c3872,0x732e3436732e7476,0x36336c7225203233,0x0a3b36317225202c\n"
".quad 0x203436732e646461,0x25202c37336c7225,0x3032202c36336c72,0x636f6c2e0a3b3834\n"
".quad 0x2032343431203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x336c7225202c3833\n"
".quad 0x2c326c7225202c37,0x730a3b376c722520,0x25203436622e6c68,0x7225202c39336c72\n"
".quad 0x3b3233202c38336c,0x3436732e7268730a,0x202c30346c722520,0x33202c39336c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120323434312032,0x3436622e6c68730a,0x202c31346c722520\n"
".quad 0x32202c30346c7225,0x36732e6464610a3b,0x2c32346c72252034,0x202c30316c722520\n"
".quad 0x6c0a3b31346c7225,0x6c61626f6c672e64,0x366625203233662e,0x32346c72255b202c\n"
".quad 0x732e6464610a3b5d,0x33346c7225203436,0x2c32326c7225202c,0x2e0a3b3036353220\n"
".quad 0x3431203220636f6c,0x64616d0a31203334,0x203436732e6f6c2e,0x25202c34346c7225\n"
".quad 0x7225202c33346c72,0x316c7225202c326c,0x622e6c68730a3b35,0x35346c7225203436\n"
".quad 0x2c34346c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x346c7225202c3634\n"
".quad 0x2e0a3b3233202c35,0x3431203220636f6c,0x6c68730a31203334,0x6c7225203436622e\n"
".quad 0x346c7225202c3734,0x64610a3b32202c36,0x7225203436732e64,0x6c7225202c38346c\n"
".quad 0x346c7225202c3031,0x6c672e646c0a3b37,0x3233662e6c61626f,0x255b202c37662520\n"
".quad 0x610a3b5d38346c72,0x25203436732e6464,0x7225202c39346c72,0x373033202c32326c\n"
".quad 0x20636f6c2e0a3b32,0x3120343434312032,0x2e6f6c2e64616d0a,0x356c722520343673\n"
".quad 0x39346c7225202c30,0x202c326c7225202c,0x730a3b39326c7225,0x25203436622e6c68\n"
".quad 0x7225202c31356c72,0x3b3233202c30356c,0x3436732e7268730a,0x202c32356c722520\n"
".quad 0x33202c31356c7225,0x20636f6c2e0a3b32,0x3120343434312032,0x3436622e6c68730a\n"
".quad 0x202c33356c722520,0x32202c32356c7225,0x36732e6464610a3b,0x2c34356c72252034\n"
".quad 0x202c30316c722520,0x6c0a3b33356c7225,0x6c61626f6c672e64,0x386625203233662e\n"
".quad 0x34356c72255b202c,0x732e6464610a3b5d,0x35356c7225203436,0x2c36336c7225202c\n"
".quad 0x2e0a3b3438353320,0x3431203220636f6c,0x64616d0a31203534,0x203436732e6f6c2e\n"
".quad 0x25202c36356c7225,0x7225202c35356c72,0x326c7225202c326c,0x622e6c68730a3b39\n"
".quad 0x37356c7225203436,0x2c36356c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x356c7225202c3835,0x2e0a3b3233202c37,0x3431203220636f6c,0x6c68730a31203534\n"
".quad 0x6c7225203436622e,0x356c7225202c3935,0x64610a3b32202c38,0x7225203436732e64\n"
".quad 0x6c7225202c30366c,0x356c7225202c3031,0x6c672e646c0a3b39,0x3233662e6c61626f\n"
".quad 0x255b202c39662520,0x610a3b5d30366c72,0x25203436732e6464,0x7225202c31366c72\n"
".quad 0x393034202c36336c,0x20636f6c2e0a3b36,0x3120363434312032,0x2e6f6c2e64616d0a\n"
".quad 0x366c722520343673,0x31366c7225202c32,0x202c326c7225202c,0x730a3b35316c7225\n"
".quad 0x25203436622e6c68,0x7225202c33366c72,0x3b3233202c32366c,0x3436732e7268730a\n"
".quad 0x202c34366c722520,0x33202c33366c7225,0x20636f6c2e0a3b32,0x3120363434312032\n"
".quad 0x3436622e6c68730a,0x202c35366c722520,0x32202c34366c7225,0x36732e6464610a3b\n"
".quad 0x2c36366c72252034,0x202c30316c722520,0x6c0a3b35366c7225,0x6c61626f6c672e64\n"
".quad 0x316625203233662e,0x366c72255b202c30,0x2e6464610a3b5d36,0x366c722520343673\n"
".quad 0x2c386c7225202c37,0x2e0a3b3438353320,0x3431203220636f6c,0x64616d0a31203435\n"
".quad 0x203436732e6f6c2e,0x25202c38366c7225,0x7225202c37366c72,0x376c7225202c326c\n"
".quad 0x36622e6c68730a3b,0x2c39366c72252034,0x202c38366c722520,0x2e7268730a3b3233\n"
".quad 0x376c722520343673,0x39366c7225202c30,0x6c2e0a3b3233202c,0x353431203220636f\n"
".quad 0x2e6c68730a312034,0x376c722520343662,0x30376c7225202c31,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x2c366c7225202c33,0x0a3b31376c722520,0x203436732e646461\n"
".quad 0x25202c32376c7225,0x393034202c386c72,0x20636f6c2e0a3b36,0x3120353534312032\n"
".quad 0x2e6f6c2e64616d0a,0x376c722520343673,0x32376c7225202c33,0x202c326c7225202c\n"
".quad 0x68730a3b376c7225,0x7225203436622e6c,0x6c7225202c34376c,0x0a3b3233202c3337\n"
".quad 0x203436732e726873,0x25202c35376c7225,0x3233202c34376c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203535343120,0x203436622e6c6873,0x25202c36376c7225,0x3b32202c35376c72\n"
".quad 0x3436732e6464610a,0x25202c346c722520,0x6c7225202c366c72,0x636f6c2e0a3b3637\n"
".quad 0x2037343431203220,0x6220317025400a31,0x5f36324242206172,0x636f6c2e0a0a3b32\n"
".quad 0x2031363431203220,0x33662e6464610a31,0x202c393166252032,0x336625202c326625\n"
".quad 0x33662e6464610a3b,0x202c303266252032,0x6625202c39316625,0x662e6464610a3b34\n"
".quad 0x2c31326625203233,0x25202c3032662520,0x2e6464610a3b3566,0x3232662520323366\n"
".quad 0x202c31326625202c,0x6464610a3b366625,0x326625203233662e,0x2c32326625202c33\n"
".quad 0x64610a3b37662520,0x6625203233662e64,0x33326625202c3432,0x610a3b386625202c\n"
".quad 0x25203233662e6464,0x326625202c353266,0x0a3b396625202c34,0x203233662e646461\n"
".quad 0x6625202c36326625,0x30316625202c3532,0x33662e6275730a3b,0x202c373266252032\n"
".quad 0x356625202c336625,0x33662e6464610a3b,0x202c383266252032,0x6625202c37326625\n"
".quad 0x662e6275730a3b37,0x2c39326625203233,0x25202c3832662520,0x2e6275730a3b3866\n"
".quad 0x3033662520323366,0x202c39326625202c,0x6464610a3b396625,0x336625203233662e\n"
".quad 0x2c30336625202c31,0x730a3b3031662520,0x25203233662e6275,0x346625202c323366\n"
".quad 0x610a3b366625202c,0x25203233662e6464,0x336625202c333366,0x0a3b376625202c32\n"
".quad 0x203233662e646461,0x6625202c34336625,0x3b386625202c3333,0x3233662e6275730a\n"
".quad 0x25202c3533662520,0x396625202c343366,0x33662e6275730a3b,0x202c363366252032\n"
".quad 0x6625202c35336625,0x2e6c756d0a3b3031,0x3733662520323366,0x202c36336625202c\n"
".quad 0x6d660a3b36336625,0x3233662e6e722e61,0x25202c3833662520,0x336625202c313366\n"
".quad 0x3b37336625202c31,0x3233662e766f6d0a,0x30202c3933662520,0x3030303043463366\n"
".quad 0x20636f6c2e0a3b30,0x3120313634312032,0x3233662e67656e0a,0x25202c3034662520\n"
".quad 0x616d660a3b383366,0x203233662e6e722e,0x6625202c31346625,0x39336625202c3034\n"
".quad 0x0a3b36326625202c,0x662e6e722e616d66,0x2c32346625203233,0x30202c3134662520\n"
".quad 0x3345383345454266,0x0a3b326625202c39,0x203233662e67656e,0x6625202c33346625\n"
".quad 0x702e646c0a3b3234,0x3233662e6d617261,0x202c333031662520,0x645f524c395a5f5b\n"
".quad 0x536650444342415f,0x617261705f6d665f,0x6c2e0a3b5d325f6d,0x363431203220636f\n"
".quad 0x2e616d660a312031,0x25203233662e6e72,0x346625202c343466,0x3330316625202c33\n"
".quad 0x6d0a3b326625202c,0x25203233662e766f,0x346630202c353466,0x3b30303030303430\n"
".quad 0x203220636f6c2e0a,0x660a312031363431,0x33662e6e722e616d,0x202c363466252032\n"
".quad 0x6630202c31336625,0x3030303030343034,0x0a3b36326625202c,0x203233662e6c756d\n"
".quad 0x6625202c37346625,0x30346630202c3133,0x0a3b303030303039,0x662e6e722e616d66\n"
".quad 0x2c38346625203233,0x25202c3734662520,0x346625202c313366,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x30346625202c3934,0x202c39336625202c,0x6f6d0a3b38346625\n"
".quad 0x6625203233662e76,0x44336630202c3035,0x0a3b393345383345,0x31203220636f6c2e\n"
".quad 0x656e0a3120313634,0x6625203233662e67,0x39346625202c3135,0x6e722e616d660a3b\n"
".quad 0x356625203233662e,0x2c31356625202c32,0x25202c3035662520,0x2e67656e0a3b3366\n"
".quad 0x3335662520323366,0x0a3b32356625202c,0x662e6e722e616d66,0x2c34356625203233\n"
".quad 0x25202c3335662520,0x6625202c33303166,0x722e616d660a3b33,0x6625203233662e6e\n"
".quad 0x36336625202c3535,0x303430346630202c,0x6625202c30303030,0x2e6c756d0a3b3632\n"
".quad 0x3635662520323366,0x202c36336625202c,0x3030303930346630,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x356625202c373566,0x2c36336625202c36,0x660a3b3535662520\n"
".quad 0x33662e6e722e616d,0x202c383566252032,0x6625202c30346625,0x37356625202c3933\n"
".quad 0x33662e67656e0a3b,0x202c393566252032,0x6d660a3b38356625,0x3233662e6e722e61\n"
".quad 0x25202c3036662520,0x356625202c393566,0x0a3b346625202c30,0x203233662e67656e\n"
".quad 0x6625202c31366625,0x2e616d660a3b3036,0x25203233662e6e72,0x366625202c323666\n"
".quad 0x3330316625202c31,0x6e0a3b346625202c,0x25203233662e6765,0x336625202c333666\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x33366625202c3436,0x202c35346625202c\n"
".quad 0x6d660a3b36326625,0x3233662e6e722e61,0x25202c3536662520,0x336625202c373466\n"
".quad 0x3b34366625202c31,0x2e6e722e616d660a,0x3636662520323366,0x202c30346625202c\n"
".quad 0x6625202c39336625,0x2e67656e0a3b3536,0x3736662520323366,0x0a3b36366625202c\n"
".quad 0x662e6e722e616d66,0x2c38366625203233,0x25202c3736662520,0x356625202c303566\n"
".quad 0x33662e67656e0a3b,0x202c393666252032,0x6d660a3b38366625,0x3233662e6e722e61\n"
".quad 0x25202c3037662520,0x316625202c393666,0x3b356625202c3330,0x3233662e67656e0a\n"
".quad 0x25202c3137662520,0x616d660a3b363366,0x203233662e6e722e,0x6625202c32376625\n"
".quad 0x35346625202c3137,0x0a3b36326625202c,0x662e6e722e616d66,0x2c33376625203233\n"
".quad 0x25202c3635662520,0x376625202c363366,0x722e616d660a3b32,0x6625203233662e6e\n"
".quad 0x30346625202c3437,0x202c39336625202c,0x656e0a3b33376625,0x6625203233662e67\n"
".quad 0x34376625202c3537,0x6e722e616d660a3b,0x376625203233662e,0x2c35376625202c36\n"
".quad 0x25202c3035662520,0x2e67656e0a3b3666,0x3737662520323366,0x0a3b36376625202c\n"
".quad 0x662e6e722e616d66,0x2c38376625203233,0x25202c3737662520,0x6625202c33303166\n"
".quad 0x662e6464610a3b36,0x2c39376625203233,0x25202c3133662520,0x616d660a3b363366\n"
".quad 0x203233662e6e722e,0x6625202c30386625,0x30346630202c3937,0x202c303030303034\n"
".quad 0x756d0a3b36326625,0x6625203233662e6c,0x39376625202c3138,0x303930346630202c\n"
".quad 0x6d660a3b30303030,0x3233662e6e722e61,0x25202c3238662520,0x376625202c313866\n"
".quad 0x3b30386625202c39,0x2e6e722e616d660a,0x3338662520323366,0x202c30346625202c\n"
".quad 0x6625202c39336625,0x2e7476630a3b3238,0x203233662e343666,0x6625202c31646625\n"
".quad 0x2e766f6d0a3b3338,0x3264662520343666,0x433946336430202c,0x4237433137433137\n"
".quad 0x6c2e0a3b43314438,0x363431203220636f,0x2e7476630a312031,0x203233662e343666\n"
".quad 0x6625202c33646625,0x662e67656e0a3b37,0x2c34646625203436,0x660a3b3164662520\n"
".quad 0x36662e6e722e616d,0x202c356466252034,0x6625202c34646625,0x33646625202c3264\n"
".quad 0x36662e7476630a3b,0x6625203233662e34,0x30316625202c3664,0x662e67656e0a3b33\n"
".quad 0x2c37646625203436,0x660a3b3664662520,0x36662e6e722e616d,0x202c386466252034\n"
".quad 0x6625202c37646625,0x33646625202c3564,0x6e722e7476630a3b,0x3436662e3233662e\n"
".quad 0x25202c3438662520,0x6275730a3b386466,0x386625203233662e,0x2c36336625202c35\n"
".quad 0x2e0a3b3133662520,0x3431203220636f6c,0x616d660a31203136,0x203233662e6e722e\n"
".quad 0x6625202c36386625,0x30346630202c3538,0x202c303030303034,0x756d0a3b36326625\n"
".quad 0x6625203233662e6c,0x35386625202c3738,0x303930346630202c,0x6d660a3b30303030\n"
".quad 0x3233662e6e722e61,0x25202c3838662520,0x386625202c373866,0x3b36386625202c35\n"
".quad 0x2e6e722e616d660a,0x3938662520323366,0x202c30346625202c,0x6625202c39336625\n"
".quad 0x2e7476630a3b3838,0x203233662e343666,0x6625202c39646625,0x2e7476630a3b3938\n"
".quad 0x203233662e343666,0x25202c3031646625,0x2e67656e0a3b3866,0x3164662520343666\n"
".quad 0x3b39646625202c31,0x2e6e722e616d660a,0x3164662520343666,0x3131646625202c32\n"
".quad 0x202c32646625202c,0x660a3b3031646625,0x36662e6e722e616d,0x2c33316466252034\n"
".quad 0x25202c3764662520,0x6625202c32316466,0x7476630a3b303164,0x2e3233662e6e722e\n"
".quad 0x3039662520343666,0x3b3331646625202c,0x3233662e6275730a,0x25202c3139662520\n"
".quad 0x336625202c333666,0x722e616d660a3b36,0x6625203233662e6e,0x31396625202c3239\n"
".quad 0x303430346630202c,0x6625202c30303030,0x2e6c756d0a3b3632,0x3339662520323366\n"
".quad 0x202c31396625202c,0x3030303930346630,0x2e616d660a3b3030,0x25203233662e6e72\n"
".quad 0x396625202c343966,0x2c31396625202c33,0x660a3b3239662520,0x33662e6e722e616d\n"
".quad 0x202c353966252032,0x6625202c30346625,0x34396625202c3933,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x396625202c343164,0x662e7476630a3b35,0x25203233662e3436\n"
".quad 0x6625202c35316466,0x662e67656e0a3b39,0x3631646625203436,0x3b3431646625202c\n"
".quad 0x2e6e722e616d660a,0x3164662520343666,0x3631646625202c37,0x202c32646625202c\n"
".quad 0x660a3b3531646625,0x36662e6e722e616d,0x2c38316466252034,0x25202c3764662520\n"
".quad 0x6625202c37316466,0x7476630a3b353164,0x2e3233662e6e722e,0x3639662520343666\n"
".quad 0x3b3831646625202c,0x3233662e6275730a,0x25202c3739662520,0x336625202c313366\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x37396625202c3839,0x303430346630202c\n"
".quad 0x6625202c30303030,0x2e6c756d0a3b3632,0x3939662520323366,0x202c37396625202c\n"
".quad 0x3030303930346630,0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c30303166\n"
".quad 0x37396625202c3939,0x0a3b38396625202c,0x662e6e722e616d66,0x3130316625203233\n"
".quad 0x202c30346625202c,0x6625202c39336625,0x7476630a3b303031,0x3233662e3436662e\n"
".quad 0x202c393164662520,0x630a3b3130316625,0x662e3436662e7476,0x3032646625203233\n"
".quad 0x0a3b30316625202c,0x203436662e67656e,0x25202c3132646625,0x6d660a3b39316466\n"
".quad 0x3436662e6e722e61,0x202c323264662520,0x25202c3132646625,0x646625202c326466\n"
".quad 0x2e616d660a3b3032,0x25203436662e6e72,0x6625202c33326466,0x32646625202c3764\n"
".quad 0x3032646625202c32,0x6e722e7476630a3b,0x3436662e3233662e,0x202c323031662520\n"
".quad 0x6c0a3b3332646625,0x2e6d617261702e64,0x316c722520343675,0x395a5f5b202c3936\n"
".quad 0x4342415f645f524c,0x5f6d665f53665044,0x5d335f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x0a31203033343120,0x732e6f6c2e64616d,0x39376c7225203436,0x202c386c7225202c\n"
".quad 0x202c3936316c7225,0x646c0a3b376c7225,0x752e6d617261702e,0x36316c7225203436\n"
".quad 0x4c395a5f5b202c37,0x444342415f645f52,0x705f6d665f536650,0x3b5d315f6d617261\n"
".quad 0x6f742e617476630a,0x2e6c61626f6c672e,0x386c722520343675,0x36316c7225202c30\n"
".quad 0x622e6c68730a3b37,0x31386c7225203436,0x2c39376c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x386c7225202c3238,0x2e0a3b3233202c31,0x3431203220636f6c\n"
".quad 0x6c68730a31203236,0x6c7225203436622e,0x386c7225202c3338,0x64610a3b32202c32\n"
".quad 0x7225203436732e64,0x6c7225202c34386c,0x386c7225202c3038,0x6c672e74730a3b33\n"
".quad 0x3233662e6c61626f,0x5d34386c72255b20,0x0a3b34346625202c,0x31203220636f6c2e\n"
".quad 0x616d0a3120383434,0x3436732e6f6c2e64,0x202c36386c722520,0x25202c36316c7225\n"
".quad 0x25202c3936316c72,0x6c68730a3b376c72,0x6c7225203436622e,0x386c7225202c3738\n"
".quad 0x730a3b3233202c36,0x25203436732e7268,0x7225202c38386c72,0x3b3233202c37386c\n"
".quad 0x203220636f6c2e0a,0x730a312038343431,0x25203436622e6c68,0x7225202c39386c72\n"
".quad 0x0a3b32202c38386c,0x203436732e646461,0x25202c30396c7225,0x7225202c30386c72\n"
".quad 0x6f6c2e0a3b39386c,0x3336343120322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x5d30396c72255b20,0x0a3b34356625202c,0x203436732e646461,0x25202c31396c7225\n"
".quad 0x323031202c386c72,0x20636f6c2e0a3b34,0x3120393434312032,0x2e6f6c2e64616d0a\n"
".quad 0x396c722520343673,0x31396c7225202c32,0x3936316c7225202c,0x0a3b376c7225202c\n"
".quad 0x203436622e6c6873,0x25202c33396c7225,0x3233202c32396c72,0x36732e7268730a3b\n"
".quad 0x2c34396c72252034,0x202c33396c722520,0x636f6c2e0a3b3233,0x2039343431203220\n"
".quad 0x36622e6c68730a31,0x2c35396c72252034,0x202c34396c722520,0x732e6464610a3b32\n"
".quad 0x36396c7225203436,0x2c30386c7225202c,0x0a3b35396c722520,0x31203220636f6c2e\n"
".quad 0x74730a3120343634,0x2e6c61626f6c672e,0x6c72255b20323366,0x366625202c5d3639\n"
".quad 0x20636f6c2e0a3b32,0x3120303534312032,0x2e6f6c2e64616d0a,0x396c722520343673\n"
".quad 0x30336c7225202c38,0x3936316c7225202c,0x0a3b376c7225202c,0x203436622e6c6873\n"
".quad 0x25202c39396c7225,0x3233202c38396c72,0x36732e7268730a3b,0x3030316c72252034\n"
".quad 0x2c39396c7225202c,0x6f6c2e0a3b323320,0x3035343120322063,0x622e6c68730a3120\n"
".quad 0x30316c7225203436,0x30316c7225202c31,0x64610a3b32202c30,0x7225203436732e64\n"
".quad 0x7225202c3230316c,0x6c7225202c30386c,0x6f6c2e0a3b313031,0x3536343120322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3230316c72255b20,0x3b30376625202c5d\n"
".quad 0x3436732e6464610a,0x2c3330316c722520,0x32202c386c722520,0x6f6c2e0a3b383430\n"
".quad 0x3135343120322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3430316c\n"
".quad 0x7225202c3330316c,0x7225202c3936316c,0x2e6c68730a3b376c,0x316c722520343662\n"
".quad 0x316c7225202c3530,0x0a3b3233202c3430,0x203436732e726873,0x202c3630316c7225\n"
".quad 0x202c3530316c7225,0x636f6c2e0a3b3233,0x2031353431203220,0x36622e6c68730a31\n"
".quad 0x3730316c72252034,0x3630316c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c383031,0x316c7225202c3038,0x636f6c2e0a3b3730,0x2036363431203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3830316c72255b,0x0a3b38376625202c\n"
".quad 0x203436732e646461,0x202c3930316c7225,0x3532202c386c7225,0x636f6c2e0a3b3036\n"
".quad 0x2032353431203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c303131\n"
".quad 0x6c7225202c393031,0x6c7225202c393631,0x622e6c68730a3b37,0x31316c7225203436\n"
".quad 0x31316c7225202c31,0x730a3b3233202c30,0x25203436732e7268,0x25202c3231316c72\n"
".quad 0x33202c3131316c72,0x20636f6c2e0a3b32,0x3120323534312032,0x3436622e6c68730a\n"
".quad 0x2c3331316c722520,0x2c3231316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x386c7225202c3431,0x31316c7225202c30,0x20636f6c2e0a3b33,0x3120373634312032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3431316c7225,0x610a3b3438662520\n"
".quad 0x25203436732e6464,0x25202c3531316c72,0x373033202c386c72,0x20636f6c2e0a3b32\n"
".quad 0x3120333534312032,0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3631\n"
".quad 0x316c7225202c3531,0x376c7225202c3936,0x36622e6c68730a3b,0x3731316c72252034\n"
".quad 0x3631316c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3831316c\n"
".quad 0x3233202c3731316c,0x3220636f6c2e0a3b,0x0a31203335343120,0x203436622e6c6873\n"
".quad 0x202c3931316c7225,0x202c3831316c7225,0x732e6464610a3b32,0x32316c7225203436\n"
".quad 0x30386c7225202c30,0x3931316c7225202c,0x3220636f6c2e0a3b,0x0a31203836343120\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3032316c72,0x6c2e0a3b30396625\n"
".quad 0x353431203220636f,0x2e64616d0a312034,0x25203436732e6f6c,0x25202c3232316c72\n"
".quad 0x7225202c37366c72,0x7225202c3936316c,0x2e6c68730a3b376c,0x316c722520343662\n"
".quad 0x316c7225202c3332,0x0a3b3233202c3232,0x203436732e726873,0x202c3432316c7225\n"
".quad 0x202c3332316c7225,0x636f6c2e0a3b3233,0x2034353431203220,0x36622e6c68730a31\n"
".quad 0x3532316c72252034,0x3432316c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c363231,0x316c7225202c3038,0x636f6c2e0a3b3532,0x2039363431203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3632316c72255b,0x0a3b36396625202c\n"
".quad 0x31203220636f6c2e,0x74730a3120303734,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x30316625202c5d34,0x20636f6c2e0a3b32,0x3220333734312032,0x420a0a3b7465720a\n"
".quad 0x6c0a3a325f363242,0x2e6d617261702e64,0x316c722520343675,0x395a5f5b202c3836\n"
".quad 0x4342415f645f524c,0x5f6d665f53665044,0x5d335f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x0a31203834343120,0x732e6f6c2e64616d,0x33316c7225203436,0x36316c7225202c30\n"
".quad 0x3836316c7225202c,0x0a3b376c7225202c,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x5a5f5b202c363631,0x42415f645f524c39,0x6d665f5366504443,0x315f6d617261705f\n"
".quad 0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c,0x7225202c3133316c\n"
".quad 0x68730a3b3636316c,0x7225203436622e6c,0x7225202c3233316c,0x3233202c3033316c\n"
".quad 0x36732e7268730a3b,0x3333316c72252034,0x3233316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x343431203220636f,0x2e6c68730a312038,0x316c722520343662,0x316c7225202c3433\n"
".quad 0x610a3b32202c3333,0x25203436732e6464,0x25202c3533316c72,0x25202c3133316c72\n"
".quad 0x730a3b3433316c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3533316c\n"
".quad 0x2e6464610a3b3566,0x316c722520343673,0x386c7225202c3633,0x0a3b34323031202c\n"
".quad 0x31203220636f6c2e,0x616d0a3120393434,0x3436732e6f6c2e64,0x2c3733316c722520\n"
".quad 0x2c3633316c722520,0x2c3836316c722520,0x730a3b376c722520,0x25203436622e6c68\n"
".quad 0x25202c3833316c72,0x33202c3733316c72,0x732e7268730a3b32,0x33316c7225203436\n"
".quad 0x33316c7225202c39,0x2e0a3b3233202c38,0x3431203220636f6c,0x6c68730a31203934\n"
".quad 0x6c7225203436622e,0x6c7225202c303431,0x0a3b32202c393331,0x203436732e646461\n"
".quad 0x202c3134316c7225,0x202c3133316c7225,0x0a3b3034316c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3134316c72,0x6f6c2e0a3b366625,0x3035343120322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3334316c,0x6c7225202c30336c\n"
".quad 0x6c7225202c383631,0x622e6c68730a3b37,0x34316c7225203436,0x34316c7225202c34\n"
".quad 0x730a3b3233202c33,0x25203436732e7268,0x25202c3534316c72,0x33202c3434316c72\n"
".quad 0x20636f6c2e0a3b32,0x3120303534312032,0x3436622e6c68730a,0x2c3634316c722520\n"
".quad 0x2c3534316c722520,0x2e6464610a3b3220,0x316c722520343673,0x316c7225202c3734\n"
".quad 0x316c7225202c3133,0x672e74730a3b3634,0x33662e6c61626f6c,0x34316c72255b2032\n"
".quad 0x3b336625202c5d37,0x3436732e6464610a,0x2c3834316c722520,0x32202c386c722520\n"
".quad 0x6f6c2e0a3b383430,0x3135343120322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3934316c,0x7225202c3834316c,0x7225202c3836316c,0x2e6c68730a3b376c\n"
".quad 0x316c722520343662,0x316c7225202c3035,0x0a3b3233202c3934,0x203436732e726873\n"
".quad 0x202c3135316c7225,0x202c3035316c7225,0x636f6c2e0a3b3233,0x2031353431203220\n"
".quad 0x36622e6c68730a31,0x3235316c72252034,0x3135316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c333531,0x6c7225202c313331,0x2e74730a3b323531\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x346625202c5d3335,0x36732e6464610a3b\n"
".quad 0x3435316c72252034,0x202c386c7225202c,0x6c2e0a3b30363532,0x353431203220636f\n"
".quad 0x2e64616d0a312032,0x25203436732e6f6c,0x25202c3535316c72,0x25202c3435316c72\n"
".quad 0x25202c3836316c72,0x6c68730a3b376c72,0x6c7225203436622e,0x6c7225202c363531\n"
".quad 0x3b3233202c353531,0x3436732e7268730a,0x2c3735316c722520,0x2c3635316c722520\n"
".quad 0x6f6c2e0a3b323320,0x3235343120322063,0x622e6c68730a3120,0x35316c7225203436\n"
".quad 0x35316c7225202c38,0x64610a3b32202c37,0x7225203436732e64,0x7225202c3935316c\n"
".quad 0x7225202c3133316c,0x74730a3b3835316c,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d393531,0x732e6464610a3b39,0x36316c7225203436,0x2c386c7225202c30\n"
".quad 0x2e0a3b3237303320,0x3431203220636f6c,0x64616d0a31203335,0x203436732e6f6c2e\n"
".quad 0x202c3136316c7225,0x202c3036316c7225,0x202c3836316c7225,0x68730a3b376c7225\n"
".quad 0x7225203436622e6c,0x7225202c3236316c,0x3233202c3136316c,0x36732e7268730a3b\n"
".quad 0x3336316c72252034,0x3236316c7225202c,0x6c2e0a3b3233202c,0x353431203220636f\n"
".quad 0x2e6c68730a312033,0x316c722520343662,0x316c7225202c3436,0x610a3b32202c3336\n"
".quad 0x25203436732e6464,0x25202c3536316c72,0x25202c3133316c72,0x730a3b3436316c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3536316c,0x6f6c2e0a3b303166\n"
".quad 0x3435343120322063,0x6c672e74730a3120,0x3233662e6c61626f,0x2c5d336c72255b20\n"
".quad 0x6c2e0a3b37662520,0x353431203220636f,0x672e74730a312035,0x33662e6c61626f6c\n"
".quad 0x5d346c72255b2032,0x2e0a3b386625202c,0x3431203220636f6c,0x7465720a32203337\n"
".quad 0x6e652e0a0a7d0a3b,0x30315a5f20797274,0x4342415f645f524c,0x6d665f5366503244\n"
".quad 0x6d617261702e0a28,0x5a5f203436752e20,0x415f645f524c3031,0x5f53665032444342\n"
".quad 0x6d617261705f6d66,0x7261702e0a2c305f,0x203436752e206d61,0x645f524c30315a5f\n"
".quad 0x665032444342415f,0x7261705f6d665f53,0x702e0a2c315f6d61,0x33662e206d617261\n"
".quad 0x524c30315a5f2032,0x32444342415f645f,0x705f6d665f536650,0x0a2c325f6d617261\n"
".quad 0x2e206d617261702e,0x30315a5f20343675,0x4342415f645f524c,0x6d665f5366503244\n"
".quad 0x335f6d617261705f,0x65722e0a7b0a290a,0x25203233662e2067,0x0a3b3e3430313c66\n"
".quad 0x36662e206765722e,0x34323c6466252034,0x206765722e0a3b3e,0x702520646572702e\n"
".quad 0x65722e0a3b3e323c,0x25203233732e2067,0x2e0a3b3e35353c72,0x3436732e20676572\n"
".quad 0x3037313c6c722520,0x2e646c0a0a0a3b3e,0x36752e6d61726170,0x202c356c72252034\n"
".quad 0x5f524c30315a5f5b,0x5032444342415f64,0x61705f6d665f5366,0x0a3b5d305f6d6172\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x30315a5f5b202c31,0x4342415f645f524c\n"
".quad 0x6d665f5366503244,0x315f6d617261705f,0x61702e646c0a3b5d,0x203436752e6d6172\n"
".quad 0x5f5b202c326c7225,0x5f645f524c30315a,0x5366503244434241,0x617261705f6d665f\n"
".quad 0x76630a3b5d335f6d,0x6c672e6f742e6174,0x3436752e6c61626f,0x25202c366c722520\n"
".quad 0x6f6c2e0a3b316c72,0x3737343120322063,0x752e766f6d0a3120,0x202c317225203233\n"
".quad 0x3b782e6469746e25,0x3233752e766f6d0a,0x6325202c32722520,0x0a3b782e64696174\n"
".quad 0x203233752e766f6d,0x697425202c337225,0x64616d0a3b782e64,0x203233732e6f6c2e\n"
".quad 0x317225202c347225,0x25202c327225202c,0x636f6c2e0a3b3372,0x2038373431203220\n"
".quad 0x33752e766f6d0a31,0x25202c3572252032,0x0a3b792e6469746e,0x203233752e766f6d\n"
".quad 0x746325202c367225,0x6d0a3b792e646961,0x25203233752e766f,0x64697425202c3772\n"
".quad 0x2e64616d0a3b792e,0x25203233732e6f6c,0x2c357225202c3872,0x7225202c36722520\n"
".quad 0x20636f6c2e0a3b37,0x3120393734312032,0x2e6e722e7476630a,0x203233732e323366\n"
".quad 0x7225202c31316625,0x722e616d660a3b34,0x6625203233662e6e,0x31316625202c3231\n"
".quad 0x303845336630202c,0x6630202c30303030,0x3030304446433334,0x3220636f6c2e0a3b\n"
".quad 0x0a31203038343120,0x662e6e722e747663,0x25203233732e3233,0x387225202c333166\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x2c33316625202c34,0x3030384533663020\n"
".quad 0x346630202c303030,0x3b30303044463933,0x3436752e7476630a,0x6c7225203233752e\n"
".quad 0x0a3b347225202c37,0x31203220636f6c2e,0x76630a3120313834,0x33732e3436732e74\n"
".quad 0x202c386c72252032,0x64616d0a3b387225,0x203436732e6f6c2e,0x7225202c396c7225\n"
".quad 0x326c7225202c386c,0x0a3b376c7225202c,0x203233662e646461,0x6625202c35316625\n"
".quad 0x33436630202c3231,0x0a3b303030434646,0x203233662e646461,0x6625202c36316625\n"
".quad 0x33436630202c3431,0x0a3b303030434642,0x37203220636f6c2e,0x2e6c756d0a312034\n"
".quad 0x3731662520323366,0x202c36316625202c,0x6d660a3b36316625,0x3233662e6e722e61\n"
".quad 0x25202c3831662520,0x316625202c353166,0x3b37316625202c35,0x746c2e707465730a\n"
".quad 0x317025203233662e,0x202c38316625202c,0x3030303832346630,0x617476630a3b3030\n"
".quad 0x626f6c672e6f742e,0x25203436752e6c61,0x7225202c30316c72,0x2e6c68730a3b356c\n"
".quad 0x316c722520343662,0x2c396c7225202c31,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x316c7225202c3231,0x2e0a3b3233202c31,0x3431203220636f6c,0x6c68730a31203938\n"
".quad 0x6c7225203436622e,0x316c7225202c3331,0x64610a3b32202c32,0x7225203436732e64\n"
".quad 0x6c7225202c34316c,0x316c7225202c3031,0x6c672e646c0a3b33,0x3233662e6c61626f\n"
".quad 0x255b202c32662520,0x610a3b5d34316c72,0x25203233732e6464,0x347225202c303172\n"
".quad 0x76630a3b312d202c,0x33752e3436752e74,0x2c35316c72252032,0x610a3b3031722520\n"
".quad 0x25203436732e6464,0x7225202c36316c72,0x3b323135202c386c,0x203220636f6c2e0a\n"
".quad 0x6d0a312030393431,0x36732e6f6c2e6461,0x2c37316c72252034,0x202c36316c722520\n"
".quad 0x7225202c326c7225,0x6c68730a3b35316c,0x6c7225203436622e,0x316c7225202c3831\n"
".quad 0x730a3b3233202c37,0x25203436732e7268,0x7225202c39316c72,0x3b3233202c38316c\n"
".quad 0x203220636f6c2e0a,0x730a312030393431,0x25203436622e6c68,0x7225202c30326c72\n"
".quad 0x0a3b32202c39316c,0x203436732e646461,0x25202c31326c7225,0x7225202c30316c72\n"
".quad 0x2e646c0a3b30326c,0x662e6c61626f6c67,0x202c336625203233,0x3b5d31326c72255b\n"
".quad 0x3233732e6464610a,0x25202c3231722520,0x0a3b312d202c3872,0x31203220636f6c2e\n"
".quad 0x76630a3120313934,0x33732e3436732e74,0x2c32326c72252032,0x610a3b3231722520\n"
".quad 0x25203436732e6464,0x7225202c33326c72,0x323031202c32326c,0x20636f6c2e0a3b34\n"
".quad 0x3120313934312032,0x2e6f6c2e64616d0a,0x326c722520343673,0x33326c7225202c34\n"
".quad 0x202c326c7225202c,0x68730a3b376c7225,0x7225203436622e6c,0x6c7225202c35326c\n"
".quad 0x0a3b3233202c3432,0x203436732e726873,0x25202c36326c7225,0x3233202c35326c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203139343120,0x203436622e6c6873,0x25202c37326c7225\n"
".quad 0x3b32202c36326c72,0x3436732e6464610a,0x202c38326c722520,0x25202c30316c7225\n"
".quad 0x646c0a3b37326c72,0x2e6c61626f6c672e,0x2c34662520323366,0x5d38326c72255b20\n"
".quad 0x3220636f6c2e0a3b,0x0a31203239343120,0x203233732e646461,0x7225202c34317225\n"
".quad 0x76630a3b31202c34,0x33752e3436752e74,0x2c39326c72252032,0x610a3b3431722520\n"
".quad 0x25203436732e6464,0x7225202c30336c72,0x36333531202c386c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203239343120,0x732e6f6c2e64616d,0x31336c7225203436,0x2c30336c7225202c\n"
".quad 0x25202c326c722520,0x68730a3b39326c72,0x7225203436622e6c,0x6c7225202c32336c\n"
".quad 0x0a3b3233202c3133,0x203436732e726873,0x25202c33336c7225,0x3233202c32336c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203239343120,0x203436622e6c6873,0x25202c34336c7225\n"
".quad 0x3b32202c33336c72,0x3436732e6464610a,0x202c35336c722520,0x25202c30316c7225\n"
".quad 0x646c0a3b34336c72,0x2e6c61626f6c672e,0x2c35662520323366,0x5d35336c72255b20\n"
".quad 0x3220636f6c2e0a3b,0x0a31203339343120,0x203233732e646461,0x7225202c36317225\n"
".quad 0x76630a3b31202c38,0x33732e3436732e74,0x2c36336c72252032,0x610a3b3631722520\n"
".quad 0x25203436732e6464,0x7225202c37336c72,0x343032202c36336c,0x20636f6c2e0a3b38\n"
".quad 0x3120333934312032,0x2e6f6c2e64616d0a,0x336c722520343673,0x37336c7225202c38\n"
".quad 0x202c326c7225202c,0x68730a3b376c7225,0x7225203436622e6c,0x6c7225202c39336c\n"
".quad 0x0a3b3233202c3833,0x203436732e726873,0x25202c30346c7225,0x3233202c39336c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203339343120,0x203436622e6c6873,0x25202c31346c7225\n"
".quad 0x3b32202c30346c72,0x3436732e6464610a,0x202c32346c722520,0x25202c30316c7225\n"
".quad 0x646c0a3b31346c72,0x2e6c61626f6c672e,0x2c36662520323366,0x5d32346c72255b20\n"
".quad 0x36732e6464610a3b,0x2c33346c72252034,0x202c32326c722520,0x6c2e0a3b30363532\n"
".quad 0x393431203220636f,0x2e64616d0a312034,0x25203436732e6f6c,0x7225202c34346c72\n"
".quad 0x6c7225202c33346c,0x35316c7225202c32,0x36622e6c68730a3b,0x2c35346c72252034\n"
".quad 0x202c34346c722520,0x2e7268730a3b3233,0x346c722520343673,0x35346c7225202c36\n"
".quad 0x6c2e0a3b3233202c,0x393431203220636f,0x2e6c68730a312034,0x346c722520343662\n"
".quad 0x36346c7225202c37,0x6464610a3b32202c,0x6c7225203436732e,0x316c7225202c3834\n"
".quad 0x37346c7225202c30,0x6f6c672e646c0a3b,0x203233662e6c6162,0x72255b202c376625\n"
".quad 0x64610a3b5d38346c,0x7225203436732e64,0x6c7225202c39346c,0x32373033202c3232\n"
".quad 0x3220636f6c2e0a3b,0x0a31203539343120,0x732e6f6c2e64616d,0x30356c7225203436\n"
".quad 0x2c39346c7225202c,0x25202c326c722520,0x68730a3b39326c72,0x7225203436622e6c\n"
".quad 0x6c7225202c31356c,0x0a3b3233202c3035,0x203436732e726873,0x25202c32356c7225\n"
".quad 0x3233202c31356c72,0x3220636f6c2e0a3b,0x0a31203539343120,0x203436622e6c6873\n"
".quad 0x25202c33356c7225,0x3b32202c32356c72,0x3436732e6464610a,0x202c34356c722520\n"
".quad 0x25202c30316c7225,0x646c0a3b33356c72,0x2e6c61626f6c672e,0x2c38662520323366\n"
".quad 0x5d34356c72255b20,0x36732e6464610a3b,0x2c35356c72252034,0x202c36336c722520\n"
".quad 0x6c2e0a3b34383533,0x393431203220636f,0x2e64616d0a312036,0x25203436732e6f6c\n"
".quad 0x7225202c36356c72,0x6c7225202c35356c,0x39326c7225202c32,0x36622e6c68730a3b\n"
".quad 0x2c37356c72252034,0x202c36356c722520,0x2e7268730a3b3233,0x356c722520343673\n"
".quad 0x37356c7225202c38,0x6c2e0a3b3233202c,0x393431203220636f,0x2e6c68730a312036\n"
".quad 0x356c722520343662,0x38356c7225202c39,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x316c7225202c3036,0x39356c7225202c30,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x72255b202c396625,0x64610a3b5d30366c,0x7225203436732e64,0x6c7225202c31366c\n"
".quad 0x36393034202c3633,0x3220636f6c2e0a3b,0x0a31203739343120,0x732e6f6c2e64616d\n"
".quad 0x32366c7225203436,0x2c31366c7225202c,0x25202c326c722520,0x68730a3b35316c72\n"
".quad 0x7225203436622e6c,0x6c7225202c33366c,0x0a3b3233202c3236,0x203436732e726873\n"
".quad 0x25202c34366c7225,0x3233202c33366c72,0x3220636f6c2e0a3b,0x0a31203739343120\n"
".quad 0x203436622e6c6873,0x25202c35366c7225,0x3b32202c34366c72,0x3436732e6464610a\n"
".quad 0x202c36366c722520,0x25202c30316c7225,0x646c0a3b35366c72,0x2e6c61626f6c672e\n"
".quad 0x3031662520323366,0x36366c72255b202c,0x732e6464610a3b5d,0x37366c7225203436\n"
".quad 0x202c386c7225202c,0x6c2e0a3b34383533,0x303531203220636f,0x2e64616d0a312035\n"
".quad 0x25203436732e6f6c,0x7225202c38366c72,0x6c7225202c37366c,0x3b376c7225202c32\n"
".quad 0x3436622e6c68730a,0x202c39366c722520,0x33202c38366c7225,0x732e7268730a3b32\n"
".quad 0x30376c7225203436,0x2c39366c7225202c,0x6f6c2e0a3b323320,0x3530353120322063\n"
".quad 0x622e6c68730a3120,0x31376c7225203436,0x2c30376c7225202c,0x2e6464610a3b3220\n"
".quad 0x336c722520343673,0x202c366c7225202c,0x610a3b31376c7225,0x25203436732e6464\n"
".quad 0x7225202c32376c72,0x36393034202c386c,0x3220636f6c2e0a3b,0x0a31203630353120\n"
".quad 0x732e6f6c2e64616d,0x33376c7225203436,0x2c32376c7225202c,0x25202c326c722520\n"
".quad 0x6c68730a3b376c72,0x6c7225203436622e,0x376c7225202c3437,0x730a3b3233202c33\n"
".quad 0x25203436732e7268,0x7225202c35376c72,0x3b3233202c34376c,0x203220636f6c2e0a\n"
".quad 0x730a312036303531,0x25203436622e6c68,0x7225202c36376c72,0x0a3b32202c35376c\n"
".quad 0x203436732e646461,0x7225202c346c7225,0x376c7225202c366c,0x20636f6c2e0a3b36\n"
".quad 0x3120383934312032,0x726220317025400a,0x325f373242422061,0x20636f6c2e0a0a3b\n"
".quad 0x3120323135312032,0x3233662e6464610a,0x25202c3931662520,0x3b336625202c3266\n"
".quad 0x3233662e6464610a,0x25202c3032662520,0x346625202c393166,0x33662e6464610a3b\n"
".quad 0x202c313266252032,0x6625202c30326625,0x662e6464610a3b35,0x2c32326625203233\n"
".quad 0x25202c3132662520,0x2e6464610a3b3666,0x3332662520323366,0x202c32326625202c\n"
".quad 0x6464610a3b376625,0x326625203233662e,0x2c33326625202c34,0x64610a3b38662520\n"
".quad 0x6625203233662e64,0x34326625202c3532,0x610a3b396625202c,0x25203233662e6464\n"
".quad 0x326625202c363266,0x3b30316625202c35,0x3233662e6275730a,0x25202c3732662520\n"
".quad 0x3b356625202c3366,0x3233662e6464610a,0x25202c3832662520,0x376625202c373266\n"
".quad 0x33662e6275730a3b,0x202c393266252032,0x6625202c38326625,0x662e6275730a3b38\n"
".quad 0x2c30336625203233,0x25202c3932662520,0x2e6464610a3b3966,0x3133662520323366\n"
".quad 0x202c30336625202c,0x75730a3b30316625,0x6625203233662e62,0x2c346625202c3233\n"
".quad 0x64610a3b36662520,0x6625203233662e64,0x32336625202c3333,0x610a3b376625202c\n"
".quad 0x25203233662e6464,0x336625202c343366,0x0a3b386625202c33,0x203233662e627573\n"
".quad 0x6625202c35336625,0x3b396625202c3433,0x3233662e6275730a,0x25202c3633662520\n"
".quad 0x316625202c353366,0x662e6c756d0a3b30,0x2c37336625203233,0x25202c3633662520\n"
".quad 0x616d660a3b363366,0x203233662e6e722e,0x6625202c38336625,0x31336625202c3133\n"
".quad 0x0a3b37336625202c,0x203233662e766f6d,0x6630202c39336625,0x3030303030434633\n"
".quad 0x3220636f6c2e0a3b,0x0a31203231353120,0x203233662e67656e,0x6625202c30346625\n"
".quad 0x2e616d660a3b3833,0x25203233662e6e72,0x346625202c313466,0x2c39336625202c30\n"
".quad 0x660a3b3632662520,0x33662e6e722e616d,0x202c323466252032,0x6630202c31346625\n"
".quad 0x3933453833454542,0x6e0a3b326625202c,0x25203233662e6765,0x346625202c333466\n"
".quad 0x61702e646c0a3b32,0x203233662e6d6172,0x5b202c3330316625,0x645f524c30315a5f\n"
".quad 0x665032444342415f,0x7261705f6d665f53,0x2e0a3b5d325f6d61,0x3531203220636f6c\n"
".quad 0x616d660a31203231,0x203233662e6e722e,0x6625202c34346625,0x30316625202c3334\n"
".quad 0x0a3b326625202c33,0x203233662e766f6d,0x6630202c35346625,0x3030303030343034\n"
".quad 0x3220636f6c2e0a3b,0x0a31203231353120,0x662e6e722e616d66,0x2c36346625203233\n"
".quad 0x30202c3133662520,0x3030303034303466,0x3b36326625202c30,0x3233662e6c756d0a\n"
".quad 0x25202c3734662520,0x346630202c313366,0x3b30303030303930,0x2e6e722e616d660a\n"
".quad 0x3834662520323366,0x202c37346625202c,0x6625202c31336625,0x2e616d660a3b3634\n"
".quad 0x25203233662e6e72,0x346625202c393466,0x2c39336625202c30,0x6d0a3b3834662520\n"
".quad 0x25203233662e766f,0x336630202c303566,0x3b39334538334544,0x203220636f6c2e0a\n"
".quad 0x6e0a312032313531,0x25203233662e6765,0x346625202c313566,0x722e616d660a3b39\n"
".quad 0x6625203233662e6e,0x31356625202c3235,0x202c30356625202c,0x67656e0a3b336625\n"
".quad 0x356625203233662e,0x3b32356625202c33,0x2e6e722e616d660a,0x3435662520323366\n"
".quad 0x202c33356625202c,0x25202c3330316625,0x2e616d660a3b3366,0x25203233662e6e72\n"
".quad 0x336625202c353566,0x3430346630202c36,0x25202c3030303030,0x6c756d0a3b363266\n"
".quad 0x356625203233662e,0x2c36336625202c36,0x3030393034663020,0x616d660a3b303030\n"
".quad 0x203233662e6e722e,0x6625202c37356625,0x36336625202c3635,0x0a3b35356625202c\n"
".quad 0x662e6e722e616d66,0x2c38356625203233,0x25202c3034662520,0x356625202c393366\n"
".quad 0x662e67656e0a3b37,0x2c39356625203233,0x660a3b3835662520,0x33662e6e722e616d\n"
".quad 0x202c303666252032,0x6625202c39356625,0x3b346625202c3035,0x3233662e67656e0a\n"
".quad 0x25202c3136662520,0x616d660a3b303666,0x203233662e6e722e,0x6625202c32366625\n"
".quad 0x30316625202c3136,0x0a3b346625202c33,0x203233662e67656e,0x6625202c33366625\n"
".quad 0x2e616d660a3b3133,0x25203233662e6e72,0x366625202c343666,0x2c35346625202c33\n"
".quad 0x660a3b3632662520,0x33662e6e722e616d,0x202c353666252032,0x6625202c37346625\n"
".quad 0x34366625202c3133,0x6e722e616d660a3b,0x366625203233662e,0x2c30346625202c36\n"
".quad 0x25202c3933662520,0x67656e0a3b353666,0x366625203233662e,0x3b36366625202c37\n"
".quad 0x2e6e722e616d660a,0x3836662520323366,0x202c37366625202c,0x6625202c30356625\n"
".quad 0x662e67656e0a3b35,0x2c39366625203233,0x660a3b3836662520,0x33662e6e722e616d\n"
".quad 0x202c303766252032,0x6625202c39366625,0x356625202c333031,0x33662e67656e0a3b\n"
".quad 0x202c313766252032,0x6d660a3b36336625,0x3233662e6e722e61,0x25202c3237662520\n"
".quad 0x346625202c313766,0x3b36326625202c35,0x2e6e722e616d660a,0x3337662520323366\n"
".quad 0x202c36356625202c,0x6625202c36336625,0x2e616d660a3b3237,0x25203233662e6e72\n"
".quad 0x346625202c343766,0x2c39336625202c30,0x6e0a3b3337662520,0x25203233662e6765\n"
".quad 0x376625202c353766,0x722e616d660a3b34,0x6625203233662e6e,0x35376625202c3637\n"
".quad 0x202c30356625202c,0x67656e0a3b366625,0x376625203233662e,0x3b36376625202c37\n"
".quad 0x2e6e722e616d660a,0x3837662520323366,0x202c37376625202c,0x25202c3330316625\n"
".quad 0x2e6464610a3b3666,0x3937662520323366,0x202c31336625202c,0x6d660a3b36336625\n"
".quad 0x3233662e6e722e61,0x25202c3038662520,0x346630202c393766,0x2c30303030303430\n"
".quad 0x6d0a3b3632662520,0x25203233662e6c75,0x376625202c313866,0x3930346630202c39\n"
".quad 0x660a3b3030303030,0x33662e6e722e616d,0x202c323866252032,0x6625202c31386625\n"
".quad 0x30386625202c3937,0x6e722e616d660a3b,0x386625203233662e,0x2c30346625202c33\n"
".quad 0x25202c3933662520,0x7476630a3b323866,0x3233662e3436662e,0x25202c3164662520\n"
".quad 0x766f6d0a3b333866,0x646625203436662e,0x3946336430202c32,0x3743313743313743\n"
".quad 0x2e0a3b4331443842,0x3531203220636f6c,0x7476630a31203231,0x3233662e3436662e\n"
".quad 0x25202c3364662520,0x2e67656e0a3b3766,0x3464662520343666,0x0a3b31646625202c\n"
".quad 0x662e6e722e616d66,0x2c35646625203436,0x25202c3464662520,0x646625202c326466\n"
".quad 0x662e7476630a3b33,0x25203233662e3436,0x316625202c366466,0x2e67656e0a3b3330\n"
".quad 0x3764662520343666,0x0a3b36646625202c,0x662e6e722e616d66,0x2c38646625203436\n"
".quad 0x25202c3764662520,0x646625202c356466,0x722e7476630a3b33,0x36662e3233662e6e\n"
".quad 0x202c343866252034,0x75730a3b38646625,0x6625203233662e62,0x36336625202c3538\n"
".quad 0x0a3b31336625202c,0x31203220636f6c2e,0x6d660a3120323135,0x3233662e6e722e61\n"
".quad 0x25202c3638662520,0x346630202c353866,0x2c30303030303430,0x6d0a3b3632662520\n"
".quad 0x25203233662e6c75,0x386625202c373866,0x3930346630202c35,0x660a3b3030303030\n"
".quad 0x33662e6e722e616d,0x202c383866252032,0x6625202c37386625,0x36386625202c3538\n"
".quad 0x6e722e616d660a3b,0x386625203233662e,0x2c30346625202c39,0x25202c3933662520\n"
".quad 0x7476630a3b383866,0x3233662e3436662e,0x25202c3964662520,0x7476630a3b393866\n"
".quad 0x3233662e3436662e,0x202c303164662520,0x67656e0a3b386625,0x646625203436662e\n"
".quad 0x39646625202c3131,0x6e722e616d660a3b,0x646625203436662e,0x31646625202c3231\n"
".quad 0x2c32646625202c31,0x0a3b303164662520,0x662e6e722e616d66,0x3331646625203436\n"
".quad 0x202c37646625202c,0x25202c3231646625,0x76630a3b30316466,0x3233662e6e722e74\n"
".quad 0x396625203436662e,0x3331646625202c30,0x33662e6275730a3b,0x202c313966252032\n"
".quad 0x6625202c33366625,0x2e616d660a3b3633,0x25203233662e6e72,0x396625202c323966\n"
".quad 0x3430346630202c31,0x25202c3030303030,0x6c756d0a3b363266,0x396625203233662e\n"
".quad 0x2c31396625202c33,0x3030393034663020,0x616d660a3b303030,0x203233662e6e722e\n"
".quad 0x6625202c34396625,0x31396625202c3339,0x0a3b32396625202c,0x662e6e722e616d66\n"
".quad 0x2c35396625203233,0x25202c3034662520,0x396625202c393366,0x662e7476630a3b34\n"
".quad 0x25203233662e3436,0x6625202c34316466,0x2e7476630a3b3539,0x203233662e343666\n"
".quad 0x25202c3531646625,0x2e67656e0a3b3966,0x3164662520343666,0x3431646625202c36\n"
".quad 0x6e722e616d660a3b,0x646625203436662e,0x31646625202c3731,0x2c32646625202c36\n"
".quad 0x0a3b353164662520,0x662e6e722e616d66,0x3831646625203436,0x202c37646625202c\n"
".quad 0x25202c3731646625,0x76630a3b35316466,0x3233662e6e722e74,0x396625203436662e\n"
".quad 0x3831646625202c36,0x33662e6275730a3b,0x202c373966252032,0x6625202c31336625\n"
".quad 0x2e616d660a3b3633,0x25203233662e6e72,0x396625202c383966,0x3430346630202c37\n"
".quad 0x25202c3030303030,0x6c756d0a3b363266,0x396625203233662e,0x2c37396625202c39\n"
".quad 0x3030393034663020,0x616d660a3b303030,0x203233662e6e722e,0x25202c3030316625\n"
".quad 0x396625202c393966,0x3b38396625202c37,0x2e6e722e616d660a,0x3031662520323366\n"
".quad 0x2c30346625202c31,0x25202c3933662520,0x76630a3b30303166,0x33662e3436662e74\n"
".quad 0x2c39316466252032,0x0a3b313031662520,0x2e3436662e747663,0x3264662520323366\n"
".quad 0x3b30316625202c30,0x3436662e67656e0a,0x202c313264662520,0x660a3b3931646625\n"
".quad 0x36662e6e722e616d,0x2c32326466252034,0x202c313264662520,0x6625202c32646625\n"
".quad 0x616d660a3b303264,0x203436662e6e722e,0x25202c3332646625,0x646625202c376466\n"
".quad 0x32646625202c3232,0x722e7476630a3b30,0x36662e3233662e6e,0x2c32303166252034\n"
".quad 0x0a3b333264662520,0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c393631\n"
".quad 0x415f645f524c3031,0x5f53665032444342,0x6d617261705f6d66,0x6f6c2e0a3b5d335f\n"
".quad 0x3138343120322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c39376c\n"
".quad 0x36316c7225202c38,0x3b376c7225202c39,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5f5b202c3736316c,0x5f645f524c30315a,0x5366503244434241,0x617261705f6d665f\n"
".quad 0x76630a3b5d315f6d,0x6c672e6f742e6174,0x3436752e6c61626f,0x202c30386c722520\n"
".quad 0x0a3b3736316c7225,0x203436622e6c6873,0x25202c31386c7225,0x3233202c39376c72\n"
".quad 0x36732e7268730a3b,0x2c32386c72252034,0x202c31386c722520,0x636f6c2e0a3b3233\n"
".quad 0x2033313531203220,0x36622e6c68730a31,0x2c33386c72252034,0x202c32386c722520\n"
".quad 0x732e6464610a3b32,0x34386c7225203436,0x2c30386c7225202c,0x0a3b33386c722520\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d34386c72,0x6f6c2e0a3b343466\n"
".quad 0x3939343120322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c36386c\n"
".quad 0x316c7225202c3631,0x376c7225202c3936,0x36622e6c68730a3b,0x2c37386c72252034\n"
".quad 0x202c36386c722520,0x2e7268730a3b3233,0x386c722520343673,0x37386c7225202c38\n"
".quad 0x6c2e0a3b3233202c,0x393431203220636f,0x2e6c68730a312039,0x386c722520343662\n"
".quad 0x38386c7225202c39,0x6464610a3b32202c,0x6c7225203436732e,0x386c7225202c3039\n"
".quad 0x39386c7225202c30,0x3220636f6c2e0a3b,0x0a31203431353120,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x25202c5d30396c72,0x6464610a3b343566,0x6c7225203436732e\n"
".quad 0x386c7225202c3139,0x0a3b34323031202c,0x31203220636f6c2e,0x616d0a3120303035\n"
".quad 0x3436732e6f6c2e64,0x202c32396c722520,0x25202c31396c7225,0x25202c3936316c72\n"
".quad 0x6c68730a3b376c72,0x6c7225203436622e,0x396c7225202c3339,0x730a3b3233202c32\n"
".quad 0x25203436732e7268,0x7225202c34396c72,0x3b3233202c33396c,0x203220636f6c2e0a\n"
".quad 0x730a312030303531,0x25203436622e6c68,0x7225202c35396c72,0x0a3b32202c34396c\n"
".quad 0x203436732e646461,0x25202c36396c7225,0x7225202c30386c72,0x6f6c2e0a3b35396c\n"
".quad 0x3531353120322063,0x6c672e74730a3120,0x3233662e6c61626f,0x5d36396c72255b20\n"
".quad 0x0a3b32366625202c,0x31203220636f6c2e,0x616d0a3120313035,0x3436732e6f6c2e64\n"
".quad 0x202c38396c722520,0x25202c30336c7225,0x25202c3936316c72,0x6c68730a3b376c72\n"
".quad 0x6c7225203436622e,0x396c7225202c3939,0x730a3b3233202c38,0x25203436732e7268\n"
".quad 0x25202c3030316c72,0x3233202c39396c72,0x3220636f6c2e0a3b,0x0a31203130353120\n"
".quad 0x203436622e6c6873,0x202c3130316c7225,0x202c3030316c7225,0x732e6464610a3b32\n"
".quad 0x30316c7225203436,0x30386c7225202c32,0x3130316c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203631353120,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3230316c72\n"
".quad 0x64610a3b30376625,0x7225203436732e64,0x7225202c3330316c,0x38343032202c386c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203230353120,0x732e6f6c2e64616d,0x30316c7225203436\n"
".quad 0x30316c7225202c34,0x36316c7225202c33,0x3b376c7225202c39,0x3436622e6c68730a\n"
".quad 0x2c3530316c722520,0x2c3430316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c363031,0x3b3233202c353031,0x203220636f6c2e0a,0x730a312032303531\n"
".quad 0x25203436622e6c68,0x25202c3730316c72,0x32202c3630316c72,0x36732e6464610a3b\n"
".quad 0x3830316c72252034,0x2c30386c7225202c,0x3b3730316c722520,0x203220636f6c2e0a\n"
".quad 0x730a312037313531,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3830316c\n"
".quad 0x6464610a3b383766,0x6c7225203436732e,0x6c7225202c393031,0x3b30363532202c38\n"
".quad 0x203220636f6c2e0a,0x6d0a312033303531,0x36732e6f6c2e6461,0x3031316c72252034\n"
".quad 0x3930316c7225202c,0x3936316c7225202c,0x0a3b376c7225202c,0x203436622e6c6873\n"
".quad 0x202c3131316c7225,0x202c3031316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3231,0x0a3b3233202c3131,0x31203220636f6c2e,0x68730a3120333035\n"
".quad 0x7225203436622e6c,0x7225202c3331316c,0x3b32202c3231316c,0x3436732e6464610a\n"
".quad 0x2c3431316c722520,0x202c30386c722520,0x0a3b3331316c7225,0x31203220636f6c2e\n"
".quad 0x74730a3120383135,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d343131\n"
".quad 0x2e6464610a3b3438,0x316c722520343673,0x386c7225202c3531,0x0a3b32373033202c\n"
".quad 0x31203220636f6c2e,0x616d0a3120343035,0x3436732e6f6c2e64,0x2c3631316c722520\n"
".quad 0x2c3531316c722520,0x2c3936316c722520,0x730a3b376c722520,0x25203436622e6c68\n"
".quad 0x25202c3731316c72,0x33202c3631316c72,0x732e7268730a3b32,0x31316c7225203436\n"
".quad 0x31316c7225202c38,0x2e0a3b3233202c37,0x3531203220636f6c,0x6c68730a31203430\n"
".quad 0x6c7225203436622e,0x6c7225202c393131,0x0a3b32202c383131,0x203436732e646461\n"
".quad 0x202c3032316c7225,0x25202c30386c7225,0x2e0a3b3931316c72,0x3531203220636f6c\n"
".quad 0x2e74730a31203931,0x662e6c61626f6c67,0x316c72255b203233,0x396625202c5d3032\n"
".quad 0x20636f6c2e0a3b30,0x3120353035312032,0x2e6f6c2e64616d0a,0x316c722520343673\n"
".quad 0x366c7225202c3232,0x36316c7225202c37,0x3b376c7225202c39,0x3436622e6c68730a\n"
".quad 0x2c3332316c722520,0x2c3232316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c343231,0x3b3233202c333231,0x203220636f6c2e0a,0x730a312035303531\n"
".quad 0x25203436622e6c68,0x25202c3532316c72,0x32202c3432316c72,0x36732e6464610a3b\n"
".quad 0x3632316c72252034,0x2c30386c7225202c,0x3b3532316c722520,0x203220636f6c2e0a\n"
".quad 0x730a312030323531,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3632316c\n"
".quad 0x6f6c2e0a3b363966,0x3132353120322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x2c5d346c72255b20,0x0a3b323031662520,0x31203220636f6c2e,0x65720a3220343235\n"
".quad 0x373242420a0a3b74,0x702e646c0a3a325f,0x3436752e6d617261,0x2c3836316c722520\n"
".quad 0x524c30315a5f5b20,0x32444342415f645f,0x705f6d665f536650,0x3b5d335f6d617261\n"
".quad 0x203220636f6c2e0a,0x6d0a312039393431,0x36732e6f6c2e6461,0x3033316c72252034\n"
".quad 0x2c36316c7225202c,0x2c3836316c722520,0x6c0a3b376c722520,0x2e6d617261702e64\n"
".quad 0x316c722520343675,0x315a5f5b202c3636,0x42415f645f524c30,0x665f536650324443\n"
".quad 0x5f6d617261705f6d,0x617476630a3b5d31,0x626f6c672e6f742e,0x25203436752e6c61\n"
".quad 0x25202c3133316c72,0x730a3b3636316c72,0x25203436622e6c68,0x25202c3233316c72\n"
".quad 0x33202c3033316c72,0x732e7268730a3b32,0x33316c7225203436,0x33316c7225202c33\n"
".quad 0x2e0a3b3233202c32,0x3431203220636f6c,0x6c68730a31203939,0x6c7225203436622e\n"
".quad 0x6c7225202c343331,0x0a3b32202c333331,0x203436732e646461,0x202c3533316c7225\n"
".quad 0x202c3133316c7225,0x0a3b3433316c7225,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3533316c72,0x6464610a3b356625,0x6c7225203436732e,0x6c7225202c363331\n"
".quad 0x3b34323031202c38,0x203220636f6c2e0a,0x6d0a312030303531,0x36732e6f6c2e6461\n"
".quad 0x3733316c72252034,0x3633316c7225202c,0x3836316c7225202c,0x0a3b376c7225202c\n"
".quad 0x203436622e6c6873,0x202c3833316c7225,0x202c3733316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3933,0x0a3b3233202c3833,0x31203220636f6c2e\n"
".quad 0x68730a3120303035,0x7225203436622e6c,0x7225202c3034316c,0x3b32202c3933316c\n"
".quad 0x3436732e6464610a,0x2c3134316c722520,0x2c3133316c722520,0x3b3034316c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3134316c7225,0x6c2e0a3b36662520\n"
".quad 0x303531203220636f,0x2e64616d0a312031,0x25203436732e6f6c,0x25202c3334316c72\n"
".quad 0x7225202c30336c72,0x7225202c3836316c,0x2e6c68730a3b376c,0x316c722520343662\n"
".quad 0x316c7225202c3434,0x0a3b3233202c3334,0x203436732e726873,0x202c3534316c7225\n"
".quad 0x202c3434316c7225,0x636f6c2e0a3b3233,0x2031303531203220,0x36622e6c68730a31\n"
".quad 0x3634316c72252034,0x3534316c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c373431,0x6c7225202c313331,0x2e74730a3b363431,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x336625202c5d3734,0x36732e6464610a3b,0x3834316c72252034\n"
".quad 0x202c386c7225202c,0x6c2e0a3b38343032,0x303531203220636f,0x2e64616d0a312032\n"
".quad 0x25203436732e6f6c,0x25202c3934316c72,0x25202c3834316c72,0x25202c3836316c72\n"
".quad 0x6c68730a3b376c72,0x6c7225203436622e,0x6c7225202c303531,0x3b3233202c393431\n"
".quad 0x3436732e7268730a,0x2c3135316c722520,0x2c3035316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3230353120322063,0x622e6c68730a3120,0x35316c7225203436,0x35316c7225202c32\n"
".quad 0x64610a3b32202c31,0x7225203436732e64,0x7225202c3335316c,0x7225202c3133316c\n"
".quad 0x74730a3b3235316c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d333531\n"
".quad 0x732e6464610a3b34,0x35316c7225203436,0x2c386c7225202c34,0x2e0a3b3036353220\n"
".quad 0x3531203220636f6c,0x64616d0a31203330,0x203436732e6f6c2e,0x202c3535316c7225\n"
".quad 0x202c3435316c7225,0x202c3836316c7225,0x68730a3b376c7225,0x7225203436622e6c\n"
".quad 0x7225202c3635316c,0x3233202c3535316c,0x36732e7268730a3b,0x3735316c72252034\n"
".quad 0x3635316c7225202c,0x6c2e0a3b3233202c,0x303531203220636f,0x2e6c68730a312033\n"
".quad 0x316c722520343662,0x316c7225202c3835,0x610a3b32202c3735,0x25203436732e6464\n"
".quad 0x25202c3935316c72,0x25202c3133316c72,0x730a3b3835316c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3935316c,0x2e6464610a3b3966,0x316c722520343673\n"
".quad 0x386c7225202c3036,0x0a3b32373033202c,0x31203220636f6c2e,0x616d0a3120343035\n"
".quad 0x3436732e6f6c2e64,0x2c3136316c722520,0x2c3036316c722520,0x2c3836316c722520\n"
".quad 0x730a3b376c722520,0x25203436622e6c68,0x25202c3236316c72,0x33202c3136316c72\n"
".quad 0x732e7268730a3b32,0x36316c7225203436,0x36316c7225202c33,0x2e0a3b3233202c32\n"
".quad 0x3531203220636f6c,0x6c68730a31203430,0x6c7225203436622e,0x6c7225202c343631\n"
".quad 0x0a3b32202c333631,0x203436732e646461,0x202c3536316c7225,0x202c3133316c7225\n"
".quad 0x0a3b3436316c7225,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3536316c72\n"
".quad 0x6c2e0a3b30316625,0x303531203220636f,0x672e74730a312035,0x33662e6c61626f6c\n"
".quad 0x5d336c72255b2032,0x2e0a3b376625202c,0x3531203220636f6c,0x2e74730a31203630\n"
".quad 0x662e6c61626f6c67,0x346c72255b203233,0x0a3b386625202c5d,0x31203220636f6c2e\n"
".quad 0x65720a3220343235,0x652e0a0a7d0a3b74,0x395a5f207972746e,0x4442415f645f524c\n"
".quad 0x666d665f53665043,0x6d617261702e0a28,0x5a5f203436752e20,0x42415f645f524c39\n"
".quad 0x6d665f5366504344,0x5f6d617261705f66,0x617261702e0a2c30,0x5f203436752e206d\n"
".quad 0x415f645f524c395a,0x665f536650434442,0x6d617261705f666d,0x7261702e0a2c315f\n"
".quad 0x203233662e206d61,0x5f645f524c395a5f,0x5f53665043444241,0x617261705f666d66\n"
".quad 0x61702e0a2c325f6d,0x3436752e206d6172,0x645f524c395a5f20,0x536650434442415f\n"
".quad 0x7261705f666d665f,0x702e0a2c335f6d61,0x33662e206d617261,0x5f524c395a5f2032\n"
".quad 0x6650434442415f64,0x61705f666d665f53,0x0a290a345f6d6172,0x2e206765722e0a7b\n"
".quad 0x323c662520323366,0x65722e0a3b3e3534,0x25203436662e2067,0x0a3b3e31343c6466\n"
".quad 0x72702e206765722e,0x34313c7025206465,0x206765722e0a3b3e,0x3c7225203233732e\n"
".quad 0x722e0a3b3e313631,0x203436732e206765,0x3e3538323c6c7225,0x702e646c0a0a0a3b\n"
".quad 0x3436752e6d617261,0x5b202c326c722520,0x5f645f524c395a5f,0x5f53665043444241\n"
".quad 0x617261705f666d66,0x646c0a3b5d315f6d,0x752e6d617261702e,0x2c336c7225203436\n"
".quad 0x5f524c395a5f5b20,0x6650434442415f64,0x61705f666d665f53,0x0a3b5d335f6d6172\n"
".quad 0x2e6f742e61747663,0x752e6c61626f6c67,0x35326c7225203436,0x0a3b326c7225202c\n"
".quad 0x31203220636f6c2e,0x6f6d0a3120393235,0x7225203233752e76,0x6469746e25202c35\n"
".quad 0x2e766f6d0a3b782e,0x2c36722520323375,0x2e64696174632520,0x752e766f6d0a3b78\n"
".quad 0x202c327225203233,0x0a3b782e64697425,0x732e6f6c2e64616d,0x202c377225203233\n"
".quad 0x367225202c357225,0x2e0a3b327225202c,0x3531203220636f6c,0x766f6d0a31203033\n"
".quad 0x387225203233752e,0x2e6469746e25202c,0x752e766f6d0a3b79,0x202c397225203233\n"
".quad 0x792e646961746325,0x33752e766f6d0a3b,0x25202c3472252032,0x6d0a3b792e646974\n"
".quad 0x33732e6f6c2e6461,0x202c303172252032,0x397225202c387225,0x2e0a3b347225202c\n"
".quad 0x3531203220636f6c,0x7476630a31203133,0x2e3233662e6e722e,0x3431662520323373\n"
".quad 0x660a3b377225202c,0x33662e6e722e616d,0x25202c3366252032,0x336630202c343166\n"
".quad 0x2c30303030303845,0x4446433334663020,0x6f6c2e0a3b303030,0x3233353120322063\n"
".quad 0x722e7476630a3120,0x33732e3233662e6e,0x202c353166252032,0x6d660a3b30317225\n"
".quad 0x3233662e6e722e61,0x6625202c34662520,0x45336630202c3531,0x202c303030303038\n"
".quad 0x3044463933346630,0x2e6464610a3b3030,0x3631662520323366,0x30202c336625202c\n"
".quad 0x3030434646334366,0x662e6464610a3b30,0x2c37316625203233,0x6630202c34662520\n"
".quad 0x3030304346423343,0x3220636f6c2e0a3b,0x756d0a3120343720,0x6625203233662e6c\n"
".quad 0x37316625202c3831,0x0a3b37316625202c,0x662e6e722e616d66,0x2c39316625203233\n"
".quad 0x25202c3631662520,0x316625202c363166,0x2e707465730a3b38,0x25203233662e746c\n"
".quad 0x39316625202c3170,0x303832346630202c,0x76630a3b30303030,0x33752e3436752e74\n"
".quad 0x2c36326c72252032,0x6c2e0a3b37722520,0x333531203220636f,0x2e7476630a312034\n"
".quad 0x203233732e343673,0x25202c37326c7225,0x6464610a3b303172,0x317225203233732e\n"
".quad 0x202c377225202c31,0x707465730a3b322d,0x203233752e74672e,0x317225202c327025\n"
".quad 0x0a3b333637202c31,0x31203220636f6c2e,0x65730a3120373335,0x33732e746c2e7074\n"
".quad 0x25202c3370252032,0x0a3b32202c303172,0x20646572702e726f,0x327025202c347025\n"
".quad 0x2e0a3b337025202c,0x3531203220636f6c,0x7465730a31203733,0x3233732e74672e70\n"
".quad 0x7225202c35702520,0x3b393035202c3031,0x646572702e726f0a,0x7025202c36702520\n"
".quad 0x0a3b357025202c34,0x203436732e646461,0x25202c38326c7225,0x3135202c37326c72\n"
".quad 0x20636f6c2e0a3b32,0x3120373535312032,0x2e6f6c2e64616d0a,0x326c722520343673\n"
".quad 0x38326c7225202c39,0x202c336c7225202c,0x730a3b36326c7225,0x25203436622e6c68\n"
".quad 0x7225202c30336c72,0x3b3233202c39326c,0x3436732e7268730a,0x202c31336c722520\n"
".quad 0x33202c30336c7225,0x20636f6c2e0a3b32,0x3120373535312032,0x3436622e6c68730a\n"
".quad 0x202c32336c722520,0x32202c31336c7225,0x36732e6464610a3b,0x202c346c72252034\n"
".quad 0x25202c35326c7225,0x64610a3b32336c72,0x7225203436732e64,0x6c7225202c33336c\n"
".quad 0x34323031202c3732,0x3220636f6c2e0a3b,0x0a31203835353120,0x732e6f6c2e64616d\n"
".quad 0x34336c7225203436,0x2c33336c7225202c,0x25202c336c722520,0x68730a3b36326c72\n"
".quad 0x7225203436622e6c,0x6c7225202c35336c,0x0a3b3233202c3433,0x203436732e726873\n"
".quad 0x25202c36336c7225,0x3233202c35336c72,0x3220636f6c2e0a3b,0x0a31203835353120\n"
".quad 0x203436622e6c6873,0x25202c37336c7225,0x3b32202c36336c72,0x3436732e6464610a\n"
".quad 0x25202c356c722520,0x7225202c35326c72,0x6464610a3b37336c,0x6c7225203436732e\n"
".quad 0x326c7225202c3833,0x3b36333531202c37,0x203220636f6c2e0a,0x6d0a312039353531\n"
".quad 0x36732e6f6c2e6461,0x2c39336c72252034,0x202c38336c722520,0x7225202c336c7225\n"
".quad 0x6c68730a3b36326c,0x6c7225203436622e,0x336c7225202c3034,0x730a3b3233202c39\n"
".quad 0x25203436732e7268,0x7225202c31346c72,0x3b3233202c30346c,0x203220636f6c2e0a\n"
".quad 0x730a312039353531,0x25203436622e6c68,0x7225202c32346c72,0x0a3b32202c31346c\n"
".quad 0x203436732e646461,0x7225202c366c7225,0x6c7225202c35326c,0x2e6464610a3b3234\n"
".quad 0x346c722520343673,0x37326c7225202c33,0x0a3b38343032202c,0x31203220636f6c2e\n"
".quad 0x616d0a3120303635,0x3436732e6f6c2e64,0x202c34346c722520,0x25202c33346c7225\n"
".quad 0x6c7225202c336c72,0x2e6c68730a3b3632,0x346c722520343662,0x34346c7225202c35\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c36346c,0x0a3b3233202c3534\n"
".quad 0x31203220636f6c2e,0x68730a3120303635,0x7225203436622e6c,0x6c7225202c37346c\n"
".quad 0x610a3b32202c3634,0x25203436732e6464,0x6c7225202c376c72,0x346c7225202c3532\n"
".quad 0x732e6464610a3b37,0x38346c7225203436,0x2c37326c7225202c,0x2e0a3b3036353220\n"
".quad 0x3531203220636f6c,0x64616d0a31203136,0x203436732e6f6c2e,0x25202c39346c7225\n"
".quad 0x7225202c38346c72,0x326c7225202c336c,0x622e6c68730a3b36,0x30356c7225203436\n"
".quad 0x2c39346c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x356c7225202c3135\n"
".quad 0x2e0a3b3233202c30,0x3531203220636f6c,0x6c68730a31203136,0x6c7225203436622e\n"
".quad 0x356c7225202c3235,0x64610a3b32202c31,0x7225203436732e64,0x326c7225202c386c\n"
".quad 0x32356c7225202c35,0x36732e6464610a3b,0x2c33356c72252034,0x202c37326c722520\n"
".quad 0x6c2e0a3b32373033,0x363531203220636f,0x2e64616d0a312032,0x25203436732e6f6c\n"
".quad 0x7225202c34356c72,0x6c7225202c33356c,0x36326c7225202c33,0x36622e6c68730a3b\n"
".quad 0x2c35356c72252034,0x202c34356c722520,0x2e7268730a3b3233,0x356c722520343673\n"
".quad 0x35356c7225202c36,0x6c2e0a3b3233202c,0x363531203220636f,0x2e6c68730a312032\n"
".quad 0x356c722520343662,0x36356c7225202c37,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x35326c7225202c39,0x3b37356c7225202c,0x3436732e6464610a,0x202c38356c722520\n"
".quad 0x33202c37326c7225,0x6f6c2e0a3b343835,0x3336353120322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c39356c,0x336c7225202c3835,0x3b36326c7225202c\n"
".quad 0x3436622e6c68730a,0x202c30366c722520,0x33202c39356c7225,0x732e7268730a3b32\n"
".quad 0x31366c7225203436,0x2c30366c7225202c,0x6f6c2e0a3b323320,0x3336353120322063\n"
".quad 0x622e6c68730a3120,0x32366c7225203436,0x2c31366c7225202c,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x35326c7225202c30,0x3b32366c7225202c,0x3436732e6464610a\n"
".quad 0x202c33366c722520,0x34202c37326c7225,0x6f6c2e0a3b363930,0x3436353120322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c34366c,0x336c7225202c3336\n"
".quad 0x3b36326c7225202c,0x3436622e6c68730a,0x202c35366c722520,0x33202c34366c7225\n"
".quad 0x732e7268730a3b32,0x36366c7225203436,0x2c35366c7225202c,0x6f6c2e0a3b323320\n"
".quad 0x3436353120322063,0x622e6c68730a3120,0x37366c7225203436,0x2c36366c7225202c\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x35326c7225202c31,0x3b37366c7225202c\n"
".quad 0x203220636f6c2e0a,0x400a312037333531,0x2061726220367025,0x3b32325f38324242\n"
".quad 0x36752e7476630a0a,0x7225203233752e34,0x377225202c38366c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203433353120,0x2e3436752e747663,0x366c722520323375,0x3b30317225202c39\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3837326c,0x415f645f524c395a\n"
".quad 0x665f536650434442,0x6d617261705f666d,0x6f6c2e0a3b5d335f,0x3433353120322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c30376c,0x326c7225202c3936\n"
".quad 0x366c7225202c3837,0x61702e646c0a3b38,0x203436752e6d6172,0x202c3536326c7225\n"
".quad 0x645f524c395a5f5b,0x536650434442415f,0x7261705f666d665f,0x630a3b5d305f6d61\n"
".quad 0x672e6f742e617476,0x36752e6c61626f6c,0x2c31376c72252034,0x3b3536326c722520\n"
".quad 0x3436622e6c68730a,0x202c32376c722520,0x33202c30376c7225,0x732e7268730a3b32\n"
".quad 0x33376c7225203436,0x2c32376c7225202c,0x6f6c2e0a3b323320,0x3638353120322063\n"
".quad 0x622e6c68730a3120,0x34376c7225203436,0x2c33376c7225202c,0x2e6464610a3b3220\n"
".quad 0x376c722520343673,0x31376c7225202c35,0x3b34376c7225202c,0x626f6c672e646c0a\n"
".quad 0x25203233662e6c61,0x6c72255b202c3566,0x6464610a3b5d3537,0x327225203233732e\n"
".quad 0x202c377225202c31,0x636f6c2e0a3b312d,0x3120363633203220,0x74672e707465730a\n"
".quad 0x377025203233732e,0x202c31327225202c,0x377025400a3b312d,0x3242422061726220\n"
".quad 0x6f6d0a0a3b335f38,0x7225203436752e76,0x3b30202c3937326c,0x696e752e6172620a\n"
".quad 0x3b345f3832424220,0x335f383242420a0a,0x36732e7476630a3a,0x7225203233732e34\n"
".quad 0x7225202c3937326c,0x3242420a0a3b3132,0x6464610a3a345f38,0x6c7225203436732e\n"
".quad 0x366c7225202c3837,0x0a3b323135202c39,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x5a5f5b202c373732,0x42415f645f524c39,0x6d665f5366504344,0x5f6d617261705f66\n"
".quad 0x636f6c2e0a3b5d33,0x2037383531203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x376c7225202c3937,0x37326c7225202c38,0x37326c7225202c37,0x61702e646c0a3b39\n"
".quad 0x203436752e6d6172,0x202c3436326c7225,0x645f524c395a5f5b,0x536650434442415f\n"
".quad 0x7261705f666d665f,0x630a3b5d305f6d61,0x672e6f742e617476,0x36752e6c61626f6c\n"
".quad 0x2c30386c72252034,0x3b3436326c722520,0x3436622e6c68730a,0x202c31386c722520\n"
".quad 0x33202c39376c7225,0x732e7268730a3b32,0x32386c7225203436,0x2c31386c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x3738353120322063,0x622e6c68730a3120,0x33386c7225203436\n"
".quad 0x2c32386c7225202c,0x2e6464610a3b3220,0x386c722520343673,0x30386c7225202c34\n"
".quad 0x3b33386c7225202c,0x626f6c672e646c0a,0x25203233662e6c61,0x6c72255b202c3666\n"
".quad 0x6f6c2e0a3b5d3438,0x3838353120322063,0x732e6464610a3120,0x2c36337225203233\n"
".quad 0x3b31202c37722520,0x203220636f6c2e0a,0x65730a3120313633,0x33732e746c2e7074\n"
".quad 0x25202c3870252032,0x323031202c363372,0x20387025400a3b34,0x3832424220617262\n"
".quad 0x766f6d0a0a3b365f,0x6c7225203436752e,0x323031202c303832,0x752e6172620a3b33\n"
".quad 0x5f3832424220696e,0x383242420a0a3b37,0x2e7476630a3a365f,0x203233732e343673\n"
".quad 0x202c3038326c7225,0x420a0a3b36337225,0x610a3a375f383242,0x25203436732e6464\n"
".quad 0x7225202c37386c72,0x333531202c39366c,0x61702e646c0a3b36,0x203436752e6d6172\n"
".quad 0x202c3637326c7225,0x645f524c395a5f5b,0x536650434442415f,0x7261705f666d665f\n"
".quad 0x2e0a3b5d335f6d61,0x3531203220636f6c,0x64616d0a31203838,0x203436732e6f6c2e\n"
".quad 0x25202c38386c7225,0x7225202c37386c72,0x7225202c3637326c,0x646c0a3b3038326c\n"
".quad 0x752e6d617261702e,0x36326c7225203436,0x4c395a5f5b202c33,0x434442415f645f52\n"
".quad 0x5f666d665f536650,0x5d305f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f\n"
".quad 0x6c7225203436752e,0x326c7225202c3938,0x2e6c68730a3b3336,0x396c722520343662\n"
".quad 0x38386c7225202c30,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c31396c\n"
".quad 0x0a3b3233202c3039,0x31203220636f6c2e,0x68730a3120383835,0x7225203436622e6c\n"
".quad 0x6c7225202c32396c,0x610a3b32202c3139,0x25203436732e6464,0x7225202c33396c72\n"
".quad 0x6c7225202c39386c,0x672e646c0a3b3239,0x33662e6c61626f6c,0x5b202c3766252032\n"
".quad 0x0a3b5d33396c7225,0x203233732e646461,0x7225202c37347225,0x0a3b312d202c3031\n"
".quad 0x31203220636f6c2e,0x76630a3120393835,0x33752e3436752e74,0x2c34396c72252032\n"
".quad 0x610a3b3734722520,0x25203436732e6464,0x7225202c35396c72,0x323031202c34396c\n"
".quad 0x20636f6c2e0a3b34,0x3120393835312032,0x2e6f6c2e64616d0a,0x396c722520343673\n"
".quad 0x35396c7225202c37,0x3637326c7225202c,0x3b38366c7225202c,0x3436622e6c68730a\n"
".quad 0x202c38396c722520,0x33202c37396c7225,0x732e7268730a3b32,0x39396c7225203436\n"
".quad 0x2c38396c7225202c,0x6f6c2e0a3b323320,0x3938353120322063,0x622e6c68730a3120\n"
".quad 0x30316c7225203436,0x39396c7225202c30,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c313031,0x316c7225202c3938,0x672e646c0a3b3030,0x33662e6c61626f6c\n"
".quad 0x5b202c3866252032,0x3b5d3130316c7225,0x203220636f6c2e0a,0x25400a3120363633\n"
".quad 0x4220617262203770,0x0a0a3b395f383242,0x203436752e766f6d,0x202c3138326c7225\n"
".quad 0x752e6172620a3b30,0x5f3832424220696e,0x3242420a0a3b3031,0x7476630a3a395f38\n"
".quad 0x3233732e3436732e,0x2c3138326c722520,0x0a0a3b3132722520,0x3a30315f38324242\n"
".quad 0x3436732e6464610a,0x2c3430316c722520,0x202c34396c722520,0x646c0a3b30363532\n"
".quad 0x752e6d617261702e,0x37326c7225203436,0x4c395a5f5b202c35,0x434442415f645f52\n"
".quad 0x5f666d665f536650,0x5d335f6d61726170,0x3220636f6c2e0a3b,0x0a31203039353120\n"
".quad 0x732e6f6c2e64616d,0x30316c7225203436,0x30316c7225202c35,0x37326c7225202c34\n"
".quad 0x38326c7225202c35,0x61702e646c0a3b31,0x203436752e6d6172,0x202c3236326c7225\n"
".quad 0x645f524c395a5f5b,0x536650434442415f,0x7261705f666d665f,0x630a3b5d305f6d61\n"
".quad 0x672e6f742e617476,0x36752e6c61626f6c,0x3630316c72252034,0x3236326c7225202c\n"
".quad 0x36622e6c68730a3b,0x3730316c72252034,0x3530316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3830316c,0x3233202c3730316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203039353120,0x203436622e6c6873,0x202c3930316c7225,0x202c3830316c7225\n"
".quad 0x732e6464610a3b32,0x31316c7225203436,0x30316c7225202c30,0x30316c7225202c36\n"
".quad 0x6c672e646c0a3b39,0x3233662e6c61626f,0x255b202c39662520,0x0a3b5d3031316c72\n"
".quad 0x33203220636f6c2e,0x7025400a31203136,0x4242206172622038,0x0a0a3b32315f3832\n"
".quad 0x203436752e766f6d,0x202c3238326c7225,0x72620a3b33323031,0x424220696e752e61\n"
".quad 0x0a0a3b33315f3832,0x3a32315f38324242,0x3436732e7476630a,0x6c7225203233732e\n"
".quad 0x337225202c323832,0x383242420a0a3b36,0x6464610a3a33315f,0x6c7225203436732e\n"
".quad 0x6c7225202c333131,0x32373033202c3439,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3437326c72,0x5f645f524c395a5f,0x5f53665043444241,0x617261705f666d66\n"
".quad 0x6c2e0a3b5d335f6d,0x393531203220636f,0x2e64616d0a312031,0x25203436732e6f6c\n"
".quad 0x25202c3431316c72,0x25202c3331316c72,0x25202c3437326c72,0x6c0a3b3238326c72\n"
".quad 0x2e6d617261702e64,0x326c722520343675,0x395a5f5b202c3136,0x4442415f645f524c\n"
".quad 0x666d665f53665043,0x305f6d617261705f,0x2e617476630a3b5d,0x61626f6c672e6f74\n"
".quad 0x7225203436752e6c,0x7225202c3531316c,0x68730a3b3136326c,0x7225203436622e6c\n"
".quad 0x7225202c3631316c,0x3233202c3431316c,0x36732e7268730a3b,0x3731316c72252034\n"
".quad 0x3631316c7225202c,0x6c2e0a3b3233202c,0x393531203220636f,0x2e6c68730a312031\n"
".quad 0x316c722520343662,0x316c7225202c3831,0x610a3b32202c3731,0x25203436732e6464\n"
".quad 0x25202c3931316c72,0x25202c3531316c72,0x6c0a3b3831316c72,0x6c61626f6c672e64\n"
".quad 0x316625203233662e,0x316c72255b202c30,0x6f6c2e0a3b5d3931,0x3239353120322063\n"
".quad 0x732e6464610a3120,0x2c31387225203233,0x31202c3031722520,0x36732e7476630a3b\n"
".quad 0x7225203233732e34,0x387225202c30326c,0x732e6464610a3b31,0x32316c7225203436\n"
".quad 0x30326c7225202c30,0x0a3b38343032202c,0x31203220636f6c2e,0x616d0a3120323935\n"
".quad 0x3436732e6f6c2e64,0x2c3232316c722520,0x2c3032316c722520,0x2c3437326c722520\n"
".quad 0x0a3b38366c722520,0x203436622e6c6873,0x202c3332316c7225,0x202c3232316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3432,0x0a3b3233202c3332\n"
".quad 0x31203220636f6c2e,0x68730a3120323935,0x7225203436622e6c,0x7225202c3532316c\n"
".quad 0x3b32202c3432316c,0x3436732e6464610a,0x2c3632316c722520,0x2c3531316c722520\n"
".quad 0x3b3532316c722520,0x626f6c672e646c0a,0x25203233662e6c61,0x72255b202c313166\n"
".quad 0x2e0a3b5d3632316c,0x3633203220636f6c,0x387025400a312031,0x3242422061726220\n"
".quad 0x6d0a0a3b35315f38,0x25203436752e766f,0x31202c3338326c72,0x6172620a3b333230\n"
".quad 0x32424220696e752e,0x420a0a3b36315f38,0x0a3a35315f383242,0x2e3436732e747663\n"
".quad 0x326c722520323373,0x36337225202c3338,0x5f383242420a0a3b,0x2e6464610a3a3631\n"
".quad 0x316c722520343673,0x326c7225202c3832,0x3b34383533202c30,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3337326c,0x415f645f524c395a,0x665f536650434442\n"
".quad 0x6d617261705f666d,0x6f6c2e0a3b5d335f,0x3339353120322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3932316c,0x7225202c3832316c,0x7225202c3337326c\n"
".quad 0x646c0a3b3338326c,0x752e6d617261702e,0x36326c7225203436,0x4c395a5f5b202c30\n"
".quad 0x434442415f645f52,0x5f666d665f536650,0x5d305f6d61726170,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x6c7225202c303331,0x6c68730a3b303632\n"
".quad 0x6c7225203436622e,0x6c7225202c313331,0x3b3233202c393231,0x3436732e7268730a\n"
".quad 0x2c3233316c722520,0x2c3133316c722520,0x6f6c2e0a3b323320,0x3339353120322063\n"
".quad 0x622e6c68730a3120,0x33316c7225203436,0x33316c7225202c33,0x64610a3b32202c32\n"
".quad 0x7225203436732e64,0x7225202c3433316c,0x7225202c3033316c,0x646c0a3b3333316c\n"
".quad 0x2e6c61626f6c672e,0x3231662520323366,0x33316c72255b202c,0x636f6c2e0a3b5d34\n"
".quad 0x3120363633203220,0x726220377025400a,0x315f383242422061,0x2e766f6d0a0a3b38\n"
".quad 0x326c722520343675,0x620a3b30202c3438,0x4220696e752e6172,0x0a3b39315f383242\n"
".quad 0x38315f383242420a,0x36732e7476630a3a,0x7225203233732e34,0x7225202c3438326c\n"
".quad 0x3242420a0a3b3132,0x6c2e0a3a39315f38,0x313633203220636f,0x2e707465730a3120\n"
".quad 0x25203233732e746c,0x387225202c333170,0x0a3b383637202c31,0x203436732e646461\n"
".quad 0x202c3633316c7225,0x34202c30326c7225,0x6c65730a3b363930,0x7225203436622e70\n"
".quad 0x7225202c3733316c,0x3834202c3633316c,0x33317025202c3336,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3237326c72,0x5f645f524c395a5f,0x5f53665043444241\n"
".quad 0x617261705f666d66,0x6c2e0a3b5d335f6d,0x393531203220636f,0x2e64616d0a312034\n"
".quad 0x25203436732e6f6c,0x25202c3833316c72,0x25202c3733316c72,0x25202c3237326c72\n"
".quad 0x6c0a3b3438326c72,0x2e6d617261702e64,0x326c722520343675,0x395a5f5b202c3935\n"
".quad 0x4442415f645f524c,0x666d665f53665043,0x305f6d617261705f,0x2e617476630a3b5d\n"
".quad 0x61626f6c672e6f74,0x7225203436752e6c,0x7225202c3933316c,0x68730a3b3935326c\n"
".quad 0x7225203436622e6c,0x7225202c3034316c,0x3233202c3833316c,0x36732e7268730a3b\n"
".quad 0x3134316c72252034,0x3034316c7225202c,0x6c2e0a3b3233202c,0x393531203220636f\n"
".quad 0x2e6c68730a312034,0x316c722520343662,0x316c7225202c3234,0x610a3b32202c3134\n"
".quad 0x25203436732e6464,0x25202c3334316c72,0x25202c3933316c72,0x6c0a3b3234316c72\n"
".quad 0x6c61626f6c672e64,0x316625203233662e,0x316c72255b202c33,0x6f6c2e0a3b5d3334\n"
".quad 0x3539353120322063,0x20317025400a3120,0x3832424220617262,0x6c2e0a0a3b31325f\n"
".quad 0x303631203220636f,0x2e6464610a312039,0x3032662520323366,0x25202c356625202c\n"
".quad 0x2e6464610a3b3666,0x3132662520323366,0x202c30326625202c,0x6464610a3b386625\n"
".quad 0x326625203233662e,0x2c31326625202c32,0x64610a3b37662520,0x6625203233662e64\n"
".quad 0x32326625202c3332,0x0a3b31316625202c,0x203233662e646461,0x6625202c34326625\n"
".quad 0x3b396625202c3332,0x3233662e6464610a,0x25202c3532662520,0x316625202c343266\n"
".quad 0x662e6464610a3b30,0x2c36326625203233,0x25202c3532662520,0x6464610a3b323166\n"
".quad 0x326625203233662e,0x2c36326625202c37,0x730a3b3331662520,0x25203233662e6275\n"
".quad 0x366625202c383266,0x610a3b376625202c,0x25203233662e6464,0x326625202c393266\n"
".quad 0x0a3b396625202c38,0x203233662e627573,0x6625202c30336625,0x30316625202c3932\n"
".quad 0x33662e6275730a3b,0x202c313366252032,0x6625202c30336625,0x2e6464610a3b3231\n"
".quad 0x3233662520323366,0x202c31336625202c,0x75730a3b33316625,0x6625203233662e62\n"
".quad 0x2c386625202c3333,0x610a3b3131662520,0x25203233662e6464,0x336625202c343366\n"
".quad 0x0a3b396625202c33,0x203233662e646461,0x6625202c35336625,0x30316625202c3433\n"
".quad 0x33662e6275730a3b,0x202c363366252032,0x6625202c35336625,0x2e6275730a3b3231\n"
".quad 0x3733662520323366,0x202c36336625202c,0x756d0a3b33316625,0x6625203233662e6c\n"
".quad 0x37336625202c3833,0x0a3b37336625202c,0x662e6e722e616d66,0x2c39336625203233\n"
".quad 0x25202c3233662520,0x336625202c323366,0x662e766f6d0a3b38,0x2c30346625203233\n"
".quad 0x3030434633663020,0x6f6c2e0a3b303030,0x3930363120322063,0x662e67656e0a3120\n"
".quad 0x2c31346625203233,0x660a3b3933662520,0x33662e6e722e616d,0x202c323466252032\n"
".quad 0x6625202c31346625,0x37326625202c3034,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x2c32346625202c33,0x3833454542663020,0x356625202c393345,0x33662e67656e0a3b\n"
".quad 0x202c343466252032,0x646c0a3b33346625,0x662e6d617261702e,0x3334326625203233\n"
".quad 0x524c395a5f5b202c,0x50434442415f645f,0x705f666d665f5366,0x3b5d325f6d617261\n"
".quad 0x203220636f6c2e0a,0x660a312039303631,0x33662e6e722e616d,0x202c353466252032\n"
".quad 0x6625202c34346625,0x356625202c333432,0x33662e766f6d0a3b,0x202c363466252032\n"
".quad 0x3030303430346630,0x636f6c2e0a3b3030,0x2039303631203220,0x6e722e616d660a31\n"
".quad 0x346625203233662e,0x2c32336625202c37,0x3030343034663020,0x326625202c303030\n"
".quad 0x662e6c756d0a3b37,0x2c38346625203233,0x30202c3233662520,0x3030303039303466\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x38346625202c3934,0x202c32336625202c\n"
".quad 0x6d660a3b37346625,0x3233662e6e722e61,0x25202c3035662520,0x346625202c313466\n"
".quad 0x3b39346625202c30,0x3233662e766f6d0a,0x30202c3135662520,0x3345383345443366\n"
".quad 0x20636f6c2e0a3b39,0x3120393036312032,0x3233662e67656e0a,0x25202c3235662520\n"
".quad 0x616d660a3b303566,0x203233662e6e722e,0x6625202c33356625,0x31356625202c3235\n"
".quad 0x6e0a3b366625202c,0x25203233662e6765,0x356625202c343566,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x34356625202c3535,0x2c3334326625202c,0x6d660a3b36662520\n"
".quad 0x3233662e6e722e61,0x25202c3635662520,0x346630202c373366,0x2c30303030303430\n"
".quad 0x6d0a3b3732662520,0x25203233662e6c75,0x336625202c373566,0x3930346630202c37\n"
".quad 0x660a3b3030303030,0x33662e6e722e616d,0x202c383566252032,0x6625202c37356625\n"
".quad 0x36356625202c3733,0x6e722e616d660a3b,0x356625203233662e,0x2c31346625202c39\n"
".quad 0x25202c3034662520,0x67656e0a3b383566,0x366625203233662e,0x3b39356625202c30\n"
".quad 0x2e6e722e616d660a,0x3136662520323366,0x202c30366625202c,0x6625202c31356625\n"
".quad 0x662e67656e0a3b38,0x2c32366625203233,0x660a3b3136662520,0x33662e6e722e616d\n"
".quad 0x202c333666252032,0x6625202c32366625,0x386625202c333432,0x33662e67656e0a3b\n"
".quad 0x202c343666252032,0x6d660a3b32336625,0x3233662e6e722e61,0x25202c3536662520\n"
".quad 0x346625202c343666,0x3b37326625202c36,0x2e6e722e616d660a,0x3636662520323366\n"
".quad 0x202c38346625202c,0x6625202c32336625,0x2e616d660a3b3536,0x25203233662e6e72\n"
".quad 0x346625202c373666,0x2c30346625202c31,0x6e0a3b3636662520,0x25203233662e6765\n"
".quad 0x366625202c383666,0x722e616d660a3b37,0x6625203233662e6e,0x38366625202c3936\n"
".quad 0x202c31356625202c,0x67656e0a3b376625,0x376625203233662e,0x3b39366625202c30\n"
".quad 0x2e6e722e616d660a,0x3137662520323366,0x202c30376625202c,0x25202c3334326625\n"
".quad 0x2e67656e0a3b3766,0x3237662520323366,0x0a3b37336625202c,0x662e6e722e616d66\n"
".quad 0x2c33376625203233,0x25202c3237662520,0x326625202c363466,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x37356625202c3437,0x202c37336625202c,0x6d660a3b33376625\n"
".quad 0x3233662e6e722e61,0x25202c3537662520,0x346625202c313466,0x3b34376625202c30\n"
".quad 0x3233662e67656e0a,0x25202c3637662520,0x616d660a3b353766,0x203233662e6e722e\n"
".quad 0x6625202c37376625,0x31356625202c3637,0x0a3b31316625202c,0x203233662e67656e\n"
".quad 0x6625202c38376625,0x2e616d660a3b3737,0x25203233662e6e72,0x376625202c393766\n"
".quad 0x3334326625202c38,0x0a3b31316625202c,0x203233662e646461,0x6625202c30386625\n"
".quad 0x37336625202c3233,0x6e722e616d660a3b,0x386625203233662e,0x2c30386625202c31\n"
".quad 0x3030343034663020,0x326625202c303030,0x662e6c756d0a3b37,0x2c32386625203233\n"
".quad 0x30202c3038662520,0x3030303039303466,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x32386625202c3338,0x202c30386625202c,0x6d660a3b31386625,0x3233662e6e722e61\n"
".quad 0x25202c3438662520,0x346625202c313466,0x3b33386625202c30,0x3436662e7476630a\n"
".quad 0x646625203233662e,0x3b34386625202c31,0x3436662e766f6d0a,0x30202c3264662520\n"
".quad 0x4331374339463364,0x3144384237433137,0x20636f6c2e0a3b43,0x3120393036312032\n"
".quad 0x3436662e7476630a,0x646625203233662e,0x0a3b396625202c33,0x203436662e67656e\n"
".quad 0x6625202c34646625,0x2e616d660a3b3164,0x25203436662e6e72,0x646625202c356466\n"
".quad 0x2c32646625202c34,0x630a3b3364662520,0x662e3436662e7476,0x2c36646625203233\n"
".quad 0x0a3b333432662520,0x203436662e67656e,0x6625202c37646625,0x2e616d660a3b3664\n"
".quad 0x25203436662e6e72,0x646625202c386466,0x2c35646625202c37,0x630a3b3364662520\n"
".quad 0x33662e6e722e7476,0x6625203436662e32,0x38646625202c3538,0x33662e6275730a3b\n"
".quad 0x202c363866252032,0x6625202c37336625,0x636f6c2e0a3b3233,0x2039303631203220\n"
".quad 0x6e722e616d660a31,0x386625203233662e,0x2c36386625202c37,0x3030343034663020\n"
".quad 0x326625202c303030,0x662e6c756d0a3b37,0x2c38386625203233,0x30202c3638662520\n"
".quad 0x3030303039303466,0x722e616d660a3b30,0x6625203233662e6e,0x38386625202c3938\n"
".quad 0x202c36386625202c,0x6d660a3b37386625,0x3233662e6e722e61,0x25202c3039662520\n"
".quad 0x346625202c313466,0x3b39386625202c30,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x3b30396625202c39,0x3436662e7476630a,0x646625203233662e,0x30316625202c3031\n"
".quad 0x36662e67656e0a3b,0x2c31316466252034,0x660a3b3964662520,0x36662e6e722e616d\n"
".quad 0x2c32316466252034,0x202c313164662520,0x6625202c32646625,0x616d660a3b303164\n"
".quad 0x203436662e6e722e,0x25202c3331646625,0x646625202c376466,0x31646625202c3231\n"
".quad 0x722e7476630a3b30,0x36662e3233662e6e,0x202c313966252034,0x730a3b3331646625\n"
".quad 0x25203233662e6275,0x366625202c323966,0x3b37336625202c34,0x2e6e722e616d660a\n"
".quad 0x3339662520323366,0x202c32396625202c,0x3030303430346630,0x37326625202c3030\n"
".quad 0x33662e6c756d0a3b,0x202c343966252032,0x6630202c32396625,0x3030303030393034\n"
".quad 0x6e722e616d660a3b,0x396625203233662e,0x2c34396625202c35,0x25202c3239662520\n"
".quad 0x616d660a3b333966,0x203233662e6e722e,0x6625202c36396625,0x30346625202c3134\n"
".quad 0x0a3b35396625202c,0x2e3436662e747663,0x3164662520323366,0x3b36396625202c34\n"
".quad 0x3436662e7476630a,0x646625203233662e,0x32316625202c3531,0x36662e67656e0a3b\n"
".quad 0x2c36316466252034,0x0a3b343164662520,0x662e6e722e616d66,0x3731646625203436\n"
".quad 0x2c3631646625202c,0x25202c3264662520,0x6d660a3b35316466,0x3436662e6e722e61\n"
".quad 0x202c383164662520,0x6625202c37646625,0x646625202c373164,0x2e7476630a3b3531\n"
".quad 0x662e3233662e6e72,0x2c37396625203436,0x0a3b383164662520,0x203233662e627573\n"
".quad 0x6625202c38396625,0x37336625202c3233,0x6e722e616d660a3b,0x396625203233662e\n"
".quad 0x2c38396625202c39,0x3030343034663020,0x326625202c303030,0x662e6c756d0a3b37\n"
".quad 0x3030316625203233,0x202c38396625202c,0x3030303930346630,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x6625202c31303166,0x396625202c303031,0x3b39396625202c38\n"
".quad 0x2e6e722e616d660a,0x3031662520323366,0x2c31346625202c32,0x25202c3034662520\n"
".quad 0x76630a3b31303166,0x33662e3436662e74,0x2c39316466252032,0x0a3b323031662520\n"
".quad 0x2e3436662e747663,0x3264662520323366,0x3b33316625202c30,0x3436662e67656e0a\n"
".quad 0x202c313264662520,0x660a3b3931646625,0x36662e6e722e616d,0x2c32326466252034\n"
".quad 0x202c313264662520,0x6625202c32646625,0x616d660a3b303264,0x203436662e6e722e\n"
".quad 0x25202c3332646625,0x646625202c376466,0x32646625202c3232,0x722e7476630a3b30\n"
".quad 0x36662e3233662e6e,0x2c33303166252034,0x0a3b333264662520,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c313732,0x42415f645f524c39,0x6d665f5366504344\n"
".quad 0x5f6d617261705f66,0x636f6c2e0a3b5d33,0x2034333531203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c363431,0x326c7225202c3732,0x326c7225202c3137\n"
".quad 0x61702e646c0a3b36,0x203436752e6d6172,0x202c3836326c7225,0x645f524c395a5f5b\n"
".quad 0x536650434442415f,0x7261705f666d665f,0x630a3b5d315f6d61,0x672e6f742e617476\n"
".quad 0x36752e6c61626f6c,0x3734316c72252034,0x3836326c7225202c,0x36622e6c68730a3b\n"
".quad 0x3834316c72252034,0x3634316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3934316c,0x3233202c3834316c,0x3220636f6c2e0a3b,0x0a31203635353120\n"
".quad 0x203436622e6c6873,0x202c3035316c7225,0x202c3934316c7225,0x732e6464610a3b32\n"
".quad 0x35316c7225203436,0x34316c7225202c31,0x35316c7225202c37,0x20636f6c2e0a3b30\n"
".quad 0x3120313136312032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3135316c7225\n"
".quad 0x2e0a3b3534662520,0x3531203220636f6c,0x64616d0a31203735,0x203436732e6f6c2e\n"
".quad 0x202c3335316c7225,0x25202c38326c7225,0x25202c3137326c72,0x68730a3b36326c72\n"
".quad 0x7225203436622e6c,0x7225202c3435316c,0x3233202c3335316c,0x36732e7268730a3b\n"
".quad 0x3535316c72252034,0x3435316c7225202c,0x6c2e0a3b3233202c,0x353531203220636f\n"
".quad 0x2e6c68730a312037,0x316c722520343662,0x316c7225202c3635,0x610a3b32202c3535\n"
".quad 0x25203436732e6464,0x25202c3735316c72,0x25202c3734316c72,0x2e0a3b3635316c72\n"
".quad 0x3631203220636f6c,0x2e74730a31203231,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x356625202c5d3735,0x20636f6c2e0a3b35,0x3120383535312032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x336c7225202c3935,0x37326c7225202c33,0x36326c7225202c31\n"
".quad 0x36622e6c68730a3b,0x3036316c72252034,0x3935316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3136316c,0x3233202c3036316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203835353120,0x203436622e6c6873,0x202c3236316c7225,0x202c3136316c7225\n"
".quad 0x732e6464610a3b32,0x36316c7225203436,0x34316c7225202c33,0x36316c7225202c37\n"
".quad 0x20636f6c2e0a3b32,0x3120333136312032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3336316c7225,0x2e0a3b3336662520,0x3531203220636f6c,0x64616d0a31203935\n"
".quad 0x203436732e6f6c2e,0x202c3536316c7225,0x25202c38336c7225,0x25202c3137326c72\n"
".quad 0x68730a3b36326c72,0x7225203436622e6c,0x7225202c3636316c,0x3233202c3536316c\n"
".quad 0x36732e7268730a3b,0x3736316c72252034,0x3636316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x353531203220636f,0x2e6c68730a312039,0x316c722520343662,0x316c7225202c3836\n"
".quad 0x610a3b32202c3736,0x25203436732e6464,0x25202c3936316c72,0x25202c3734316c72\n"
".quad 0x2e0a3b3836316c72,0x3631203220636f6c,0x2e74730a31203431,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x376625202c5d3936,0x20636f6c2e0a3b31,0x3120303635312032\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x346c7225202c3137,0x37326c7225202c33\n"
".quad 0x36326c7225202c31,0x36622e6c68730a3b,0x3237316c72252034,0x3137316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3337316c,0x3233202c3237316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203036353120,0x203436622e6c6873,0x202c3437316c7225\n"
".quad 0x202c3337316c7225,0x732e6464610a3b32,0x37316c7225203436,0x34316c7225202c35\n"
".quad 0x37316c7225202c37,0x20636f6c2e0a3b34,0x3120353136312032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3537316c7225,0x2e0a3b3937662520,0x3531203220636f6c\n"
".quad 0x64616d0a31203136,0x203436732e6f6c2e,0x202c3737316c7225,0x25202c38346c7225\n"
".quad 0x25202c3137326c72,0x68730a3b36326c72,0x7225203436622e6c,0x7225202c3837316c\n"
".quad 0x3233202c3737316c,0x36732e7268730a3b,0x3937316c72252034,0x3837316c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x363531203220636f,0x2e6c68730a312031,0x316c722520343662\n"
".quad 0x316c7225202c3038,0x610a3b32202c3937,0x25203436732e6464,0x25202c3138316c72\n"
".quad 0x25202c3734316c72,0x2e0a3b3038316c72,0x3631203220636f6c,0x2e74730a31203631\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x386625202c5d3138,0x20636f6c2e0a3b35\n"
".quad 0x3120323635312032,0x2e6f6c2e64616d0a,0x316c722520343673,0x356c7225202c3338\n"
".quad 0x37326c7225202c33,0x36326c7225202c31,0x36622e6c68730a3b,0x3438316c72252034\n"
".quad 0x3338316c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3538316c\n"
".quad 0x3233202c3438316c,0x3220636f6c2e0a3b,0x0a31203236353120,0x203436622e6c6873\n"
".quad 0x202c3638316c7225,0x202c3538316c7225,0x732e6464610a3b32,0x38316c7225203436\n"
".quad 0x34316c7225202c37,0x38316c7225202c37,0x20636f6c2e0a3b36,0x3120373136312032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3738316c7225,0x2e0a3b3139662520\n"
".quad 0x3531203220636f6c,0x64616d0a31203336,0x203436732e6f6c2e,0x202c3938316c7225\n"
".quad 0x25202c38356c7225,0x25202c3137326c72,0x68730a3b36326c72,0x7225203436622e6c\n"
".quad 0x7225202c3039316c,0x3233202c3938316c,0x36732e7268730a3b,0x3139316c72252034\n"
".quad 0x3039316c7225202c,0x6c2e0a3b3233202c,0x363531203220636f,0x2e6c68730a312033\n"
".quad 0x316c722520343662,0x316c7225202c3239,0x610a3b32202c3139,0x25203436732e6464\n"
".quad 0x25202c3339316c72,0x25202c3734316c72,0x2e0a3b3239316c72,0x3631203220636f6c\n"
".quad 0x2e74730a31203831,0x662e6c61626f6c67,0x316c72255b203233,0x396625202c5d3339\n"
".quad 0x20636f6c2e0a3b37,0x3120343635312032,0x2e6f6c2e64616d0a,0x316c722520343673\n"
".quad 0x366c7225202c3539,0x37326c7225202c33,0x36326c7225202c31,0x36622e6c68730a3b\n"
".quad 0x3639316c72252034,0x3539316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3739316c,0x3233202c3639316c,0x3220636f6c2e0a3b,0x0a31203436353120\n"
".quad 0x203436622e6c6873,0x202c3839316c7225,0x202c3739316c7225,0x732e6464610a3b32\n"
".quad 0x39316c7225203436,0x34316c7225202c39,0x39316c7225202c37,0x20636f6c2e0a3b38\n"
".quad 0x3120393136312032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3939316c7225\n"
".quad 0x0a3b333031662520,0x31203220636f6c2e,0x65720a3220323236,0x383242420a0a3b74\n"
".quad 0x2e646c0a3a31325f,0x36752e6d61726170,0x3037326c72252034,0x524c395a5f5b202c\n"
".quad 0x50434442415f645f,0x705f666d665f5366,0x3b5d335f6d617261,0x203220636f6c2e0a\n"
".quad 0x6d0a312037353531,0x36732e6f6c2e6461,0x3330326c72252034,0x2c38326c7225202c\n"
".quad 0x2c3037326c722520,0x0a3b36326c722520,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x5a5f5b202c373632,0x42415f645f524c39,0x6d665f5366504344,0x5f6d617261705f66\n"
".quad 0x617476630a3b5d31,0x626f6c672e6f742e,0x25203436752e6c61,0x25202c3430326c72\n"
".quad 0x730a3b3736326c72,0x25203436622e6c68,0x25202c3530326c72,0x33202c3330326c72\n"
".quad 0x732e7268730a3b32,0x30326c7225203436,0x30326c7225202c36,0x2e0a3b3233202c35\n"
".quad 0x3531203220636f6c,0x6c68730a31203735,0x6c7225203436622e,0x6c7225202c373032\n"
".quad 0x0a3b32202c363032,0x203436732e646461,0x202c3830326c7225,0x202c3430326c7225\n"
".quad 0x0a3b3730326c7225,0x31203220636f6c2e,0x74730a3120363935,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d383032,0x20636f6c2e0a3b37,0x3120383535312032\n"
".quad 0x2e6f6c2e64616d0a,0x326c722520343673,0x336c7225202c3031,0x37326c7225202c33\n"
".quad 0x36326c7225202c30,0x36622e6c68730a3b,0x3131326c72252034,0x3031326c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3231326c,0x3233202c3131326c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203835353120,0x203436622e6c6873,0x202c3331326c7225\n"
".quad 0x202c3231326c7225,0x732e6464610a3b32,0x31326c7225203436,0x30326c7225202c34\n"
".quad 0x31326c7225202c34,0x20636f6c2e0a3b33,0x3120373935312032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3431326c7225,0x2e0a3b3131662520,0x3531203220636f6c\n"
".quad 0x64616d0a31203935,0x203436732e6f6c2e,0x202c3631326c7225,0x25202c38336c7225\n"
".quad 0x25202c3037326c72,0x68730a3b36326c72,0x7225203436622e6c,0x7225202c3731326c\n"
".quad 0x3233202c3631326c,0x36732e7268730a3b,0x3831326c72252034,0x3731326c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x353531203220636f,0x2e6c68730a312039,0x326c722520343662\n"
".quad 0x326c7225202c3931,0x610a3b32202c3831,0x25203436732e6464,0x25202c3032326c72\n"
".quad 0x25202c3430326c72,0x2e0a3b3931326c72,0x3531203220636f6c,0x2e74730a31203839\n"
".quad 0x662e6c61626f6c67,0x326c72255b203233,0x366625202c5d3032,0x3220636f6c2e0a3b\n"
".quad 0x0a31203036353120,0x732e6f6c2e64616d,0x32326c7225203436,0x33346c7225202c32\n"
".quad 0x3037326c7225202c,0x3b36326c7225202c,0x3436622e6c68730a,0x2c3332326c722520\n"
".quad 0x2c3232326c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c343232\n"
".quad 0x3b3233202c333232,0x203220636f6c2e0a,0x730a312030363531,0x25203436622e6c68\n"
".quad 0x25202c3532326c72,0x32202c3432326c72,0x36732e6464610a3b,0x3632326c72252034\n"
".quad 0x3430326c7225202c,0x3532326c7225202c,0x3220636f6c2e0a3b,0x0a31203939353120\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3632326c72,0x6f6c2e0a3b386625\n"
".quad 0x3136353120322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3832326c\n"
".quad 0x6c7225202c38346c,0x6c7225202c303732,0x2e6c68730a3b3632,0x326c722520343662\n"
".quad 0x326c7225202c3932,0x0a3b3233202c3832,0x203436732e726873,0x202c3033326c7225\n"
".quad 0x202c3932326c7225,0x636f6c2e0a3b3233,0x2031363531203220,0x36622e6c68730a31\n"
".quad 0x3133326c72252034,0x3033326c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c323332,0x6c7225202c343032,0x6f6c2e0a3b313332,0x3030363120322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3233326c72255b20,0x3b32316625202c5d\n"
".quad 0x203220636f6c2e0a,0x6d0a312032363531,0x36732e6f6c2e6461,0x3433326c72252034\n"
".quad 0x2c33356c7225202c,0x2c3037326c722520,0x0a3b36326c722520,0x203436622e6c6873\n"
".quad 0x202c3533326c7225,0x202c3433326c7225,0x2e7268730a3b3233,0x326c722520343673\n"
".quad 0x326c7225202c3633,0x0a3b3233202c3533,0x31203220636f6c2e,0x68730a3120323635\n"
".quad 0x7225203436622e6c,0x7225202c3733326c,0x3b32202c3633326c,0x3436732e6464610a\n"
".quad 0x2c3833326c722520,0x2c3430326c722520,0x3b3733326c722520,0x203220636f6c2e0a\n"
".quad 0x730a312031303631,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3833326c\n"
".quad 0x6f6c2e0a3b333166,0x3336353120322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3034326c,0x6c7225202c38356c,0x6c7225202c303732,0x2e6c68730a3b3632\n"
".quad 0x326c722520343662,0x326c7225202c3134,0x0a3b3233202c3034,0x203436732e726873\n"
".quad 0x202c3234326c7225,0x202c3134326c7225,0x636f6c2e0a3b3233,0x2033363531203220\n"
".quad 0x36622e6c68730a31,0x3334326c72252034,0x3234326c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c343432,0x6c7225202c343032,0x6f6c2e0a3b333432\n"
".quad 0x3230363120322063,0x6c672e74730a3120,0x3233662e6c61626f,0x3434326c72255b20\n"
".quad 0x0a3b396625202c5d,0x31203220636f6c2e,0x616d0a3120343635,0x3436732e6f6c2e64\n"
".quad 0x2c3634326c722520,0x202c33366c722520,0x202c3037326c7225,0x730a3b36326c7225\n"
".quad 0x25203436622e6c68,0x25202c3734326c72,0x33202c3634326c72,0x732e7268730a3b32\n"
".quad 0x34326c7225203436,0x34326c7225202c38,0x2e0a3b3233202c37,0x3531203220636f6c\n"
".quad 0x6c68730a31203436,0x6c7225203436622e,0x6c7225202c393432,0x0a3b32202c383432\n"
".quad 0x203436732e646461,0x202c3035326c7225,0x202c3430326c7225,0x0a3b3934326c7225\n"
".quad 0x31203220636f6c2e,0x74730a3120333036,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d303532,0x636f6c2e0a3b3031,0x2032323631203220,0x0a0a3b7465720a32\n"
".quad 0x3a32325f38324242,0x203220636f6c2e0a,0x610a312030343531,0x25203233662e6464\n"
".quad 0x6625202c36353166,0x3046336630202c33,0x610a3b3030303030,0x25203233662e6464\n"
".quad 0x6625202c37353166,0x3046336630202c34,0x6d0a3b3030303030,0x25203233752e766f\n"
".quad 0x3b30202c33343172,0x322e786574090a0a,0x3233662e34762e64,0x66257b203233662e\n"
".quad 0x316625202c343031,0x30316625202c3530,0x3730316625202c36,0x527865745b202c7d\n"
".quad 0x202c4230665f6665,0x202c36353166257b,0x3b5d7d3735316625,0x786574090a090a0a\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x25202c3031316625,0x6625202c31313166\n"
".quad 0x316625202c323131,0x65745b202c7d3331,0x4231665f66655278,0x36353166257b202c\n"
".quad 0x7d3735316625202c,0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x2c36313166257b20,0x202c373131662520,0x25202c3831316625,0x5b202c7d39313166\n"
".quad 0x665f666552786574,0x3166257b202c4232,0x35316625202c3635,0x0a090a0a3b5d7d37\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x323166257b203233,0x3332316625202c32\n"
".quad 0x2c3432316625202c,0x2c7d353231662520,0x6665527865745b20,0x257b202c4233665f\n"
".quad 0x6625202c36353166,0x0a0a3b5d7d373531,0x322e786574090a09,0x3233662e34762e64\n"
".quad 0x66257b203233662e,0x316625202c383231,0x33316625202c3932,0x3133316625202c30\n"
".quad 0x527865745b202c7d,0x202c4234665f6665,0x202c36353166257b,0x3b5d7d3735316625\n"
".quad 0x786574090a090a0a,0x662e34762e64322e,0x7b203233662e3233,0x25202c3433316625\n"
".quad 0x6625202c35333166,0x316625202c363331,0x65745b202c7d3733,0x4235665f66655278\n"
".quad 0x36353166257b202c,0x7d3735316625202c,0x74090a090a0a3b5d,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x2c30343166257b20,0x202c313431662520,0x25202c3234316625\n"
".quad 0x5b202c7d33343166,0x665f666552786574,0x3166257b202c4236,0x35316625202c3635\n"
".quad 0x0a090a0a3b5d7d37,0x2e64322e78657409,0x662e3233662e3476,0x343166257b203233\n"
".quad 0x3734316625202c36,0x2c3834316625202c,0x2c7d393431662520,0x6665527865745b20\n"
".quad 0x257b202c4237665f,0x6625202c36353166,0x0a0a3b5d7d373531,0x322e786574090a09\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x316625202c323531,0x35316625202c3335\n"
".quad 0x3535316625202c34,0x527865745b202c7d,0x202c4238665f6665,0x202c36353166257b\n"
".quad 0x3b5d7d3735316625,0x20636f6c2e090a0a,0x3120313535312032,0x3233662e6464610a\n"
".quad 0x202c383531662520,0x25202c3430316625,0x64610a3b30313166,0x6625203233662e64\n"
".quad 0x316625202c393531,0x31316625202c3835,0x662e6464610a3b36,0x3036316625203233\n"
".quad 0x2c3935316625202c,0x0a3b323231662520,0x203233662e646461,0x25202c3136316625\n"
".quad 0x6625202c30363166,0x6464610a3b383231,0x316625203233662e,0x36316625202c3236\n"
".quad 0x3433316625202c31,0x33662e6464610a3b,0x2c33363166252032,0x202c323631662520\n"
".quad 0x610a3b3034316625,0x25203233662e6464,0x6625202c34363166,0x316625202c333631\n"
".quad 0x2e6464610a3b3634,0x3631662520323366,0x3436316625202c35,0x3b3235316625202c\n"
".quad 0x203220636f6c2e0a,0x730a312032353531,0x25203233662e6275,0x6625202c36363166\n"
".quad 0x316625202c303131,0x2e6464610a3b3232,0x3631662520323366,0x3636316625202c37\n"
".quad 0x3b3433316625202c,0x3233662e6275730a,0x202c383631662520,0x25202c3736316625\n"
".quad 0x75730a3b30343166,0x6625203233662e62,0x316625202c393631,0x34316625202c3836\n"
".quad 0x662e6464610a3b36,0x3037316625203233,0x2c3936316625202c,0x0a3b323531662520\n"
".quad 0x31203220636f6c2e,0x75730a3120333535,0x6625203233662e62,0x316625202c313731\n"
".quad 0x32316625202c3631,0x662e6464610a3b38,0x3237316625203233,0x2c3137316625202c\n"
".quad 0x0a3b343331662520,0x203233662e646461,0x25202c3337316625,0x6625202c32373166\n"
".quad 0x6275730a3b303431,0x316625203233662e,0x37316625202c3437,0x3634316625202c33\n"
".quad 0x33662e6275730a3b,0x2c35373166252032,0x202c343731662520,0x2e0a3b3235316625\n"
".quad 0x3531203220636f6c,0x6c756d0a31203435,0x316625203233662e,0x37316625202c3637\n"
".quad 0x3537316625202c35,0x6e722e616d660a3b,0x316625203233662e,0x37316625202c3737\n"
".quad 0x3037316625202c30,0x3b3637316625202c,0x3233662e766f6d0a,0x202c383731662520\n"
".quad 0x3030304346336630,0x636f6c2e0a3b3030,0x2037353531203220,0x33662e67656e0a31\n"
".quad 0x2c39373166252032,0x0a3b373731662520,0x31203220636f6c2e,0x6d660a3120363535\n"
".quad 0x3233662e6e722e61,0x202c303831662520,0x25202c3937316625,0x6625202c38373166\n"
".quad 0x6c756d0a3b353631,0x316625203233662e,0x38316625202c3138,0x4545336630202c30\n"
".quad 0x6d0a3b3933453833,0x25203233662e766f,0x6630202c32383166,0x3030303030384633\n"
".quad 0x7261702e646c0a3b,0x25203233662e6d61,0x5f5b202c34343266,0x415f645f524c395a\n"
".quad 0x665f536650434442,0x6d617261705f666d,0x6f6c2e0a3b5d345f,0x3635353120322063\n"
".quad 0x662e6275730a3120,0x3338316625203233,0x2c3238316625202c,0x0a3b343432662520\n"
".quad 0x203233662e6c756d,0x25202c3438316625,0x6625202c33383166,0x616d660a3b313831\n"
".quad 0x203233662e6e722e,0x25202c3538316625,0x6625202c34303166,0x316625202c343432\n"
".quad 0x2e7476630a3b3438,0x203233752e343675,0x202c3135326c7225,0x6f6c2e0a3b377225\n"
".quad 0x3433353120322063,0x752e7476630a3120,0x25203233752e3436,0x25202c3235326c72\n"
".quad 0x2e646c0a3b303172,0x36752e6d61726170,0x3936326c72252034,0x524c395a5f5b202c\n"
".quad 0x50434442415f645f,0x705f666d665f5366,0x3b5d335f6d617261,0x203220636f6c2e0a\n"
".quad 0x6d0a312034333531,0x36732e6f6c2e6461,0x3335326c72252034,0x3235326c7225202c\n"
".quad 0x3936326c7225202c,0x3135326c7225202c,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3636326c72,0x5f645f524c395a5f,0x5f53665043444241,0x617261705f666d66\n"
".quad 0x76630a3b5d315f6d,0x6c672e6f742e6174,0x3436752e6c61626f,0x2c3435326c722520\n"
".quad 0x3b3636326c722520,0x3436622e6c68730a,0x2c3535326c722520,0x2c3335326c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c363532,0x3b3233202c353532\n"
".quad 0x203220636f6c2e0a,0x730a312036353531,0x25203436622e6c68,0x25202c3735326c72\n"
".quad 0x32202c3635326c72,0x36732e6464610a3b,0x3835326c72252034,0x3435326c7225202c\n"
".quad 0x3735326c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3835326c72255b\n"
".quad 0x3b3538316625202c,0x3233662e766f6d0a,0x202c363831662520,0x3030303430346630\n"
".quad 0x636f6c2e0a3b3030,0x2037353531203220,0x6e722e616d660a31,0x316625203233662e\n"
".quad 0x37316625202c3738,0x3430346630202c30,0x25202c3030303030,0x756d0a3b35363166\n"
".quad 0x6625203233662e6c,0x316625202c383831,0x30346630202c3037,0x0a3b303030303039\n"
".quad 0x662e6e722e616d66,0x3938316625203233,0x2c3838316625202c,0x202c303731662520\n"
".quad 0x660a3b3738316625,0x33662e6e722e616d,0x2c30393166252032,0x202c393731662520\n"
".quad 0x25202c3837316625,0x756d0a3b39383166,0x6625203233662e6c,0x316625202c313931\n"
".quad 0x44336630202c3039,0x0a3b393345383345,0x203233662e6c756d,0x25202c3239316625\n"
".quad 0x6625202c33383166,0x616d660a3b313931,0x203233662e6e722e,0x25202c3339316625\n"
".quad 0x6625202c30313166,0x316625202c343432,0x672e74730a3b3239,0x33662e6c61626f6c\n"
".quad 0x5d346c72255b2032,0x3b3339316625202c,0x203220636f6c2e0a,0x660a312038353531\n"
".quad 0x33662e6e722e616d,0x2c34393166252032,0x202c353731662520,0x3030303430346630\n"
".quad 0x36316625202c3030,0x662e6c756d0a3b35,0x3539316625203233,0x2c3537316625202c\n"
".quad 0x3030393034663020,0x616d660a3b303030,0x203233662e6e722e,0x25202c3639316625\n"
".quad 0x6625202c35393166,0x316625202c353731,0x2e616d660a3b3439,0x25203233662e6e72\n"
".quad 0x6625202c37393166,0x316625202c393731,0x39316625202c3837,0x662e6c756d0a3b36\n"
".quad 0x3839316625203233,0x2c3739316625202c,0x3833454433663020,0x6c756d0a3b393345\n"
".quad 0x316625203233662e,0x38316625202c3939,0x3839316625202c33,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x31316625202c3030,0x3434326625202c36,0x3b3939316625202c\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x25202c5d356c7225,0x6c2e0a3b30303266\n"
".quad 0x353531203220636f,0x2e67656e0a312039,0x3032662520323366,0x3037316625202c31\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x30326625202c3230,0x3638316625202c31\n"
".quad 0x3b3536316625202c,0x2e6e722e616d660a,0x3032662520323366,0x3838316625202c33\n"
".quad 0x2c3037316625202c,0x0a3b323032662520,0x662e6e722e616d66,0x3430326625203233\n"
".quad 0x2c3937316625202c,0x202c383731662520,0x6d0a3b3330326625,0x25203233662e6c75\n"
".quad 0x6625202c35303266,0x336630202c343032,0x3b39334538334544,0x3233662e6c756d0a\n"
".quad 0x202c363032662520,0x25202c3338316625,0x6d660a3b35303266,0x3233662e6e722e61\n"
".quad 0x202c373032662520,0x25202c3232316625,0x6625202c34343266,0x2e74730a3b363032\n"
".quad 0x662e6c61626f6c67,0x366c72255b203233,0x3730326625202c5d,0x3220636f6c2e0a3b\n"
".quad 0x0a31203036353120,0x203233662e67656e,0x25202c3830326625,0x6d660a3b35373166\n"
".quad 0x3233662e6e722e61,0x202c393032662520,0x25202c3830326625,0x6625202c36383166\n"
".quad 0x616d660a3b353631,0x203233662e6e722e,0x25202c3031326625,0x6625202c35393166\n"
".quad 0x326625202c353731,0x2e616d660a3b3930,0x25203233662e6e72,0x6625202c31313266\n"
".quad 0x316625202c393731,0x31326625202c3837,0x662e6c756d0a3b30,0x3231326625203233\n"
".quad 0x2c3131326625202c,0x3833454433663020,0x6c756d0a3b393345,0x326625203233662e\n"
".quad 0x38316625202c3331,0x3231326625202c33,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x32316625202c3431,0x3434326625202c38,0x3b3331326625202c,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x25202c5d376c7225,0x6c2e0a3b34313266,0x363531203220636f\n"
".quad 0x2e6c756d0a312031,0x3132662520323366,0x3433316625202c35,0x3b3434326625202c\n"
".quad 0x3436662e7476630a,0x646625203233662e,0x31326625202c3432,0x662e7476630a3b35\n"
".quad 0x25203233662e3436,0x6625202c35326466,0x6464610a3b333831,0x326625203233662e\n"
".quad 0x37316625202c3631,0x3537316625202c30,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x31326625202c3731,0x3430346630202c36,0x25202c3030303030,0x756d0a3b35363166\n"
".quad 0x6625203233662e6c,0x326625202c383132,0x30346630202c3631,0x0a3b303030303039\n"
".quad 0x662e6e722e616d66,0x3931326625203233,0x2c3831326625202c,0x202c363132662520\n"
".quad 0x660a3b3731326625,0x33662e6e722e616d,0x2c30323266252032,0x202c393731662520\n"
".quad 0x25202c3837316625,0x76630a3b39313266,0x33662e3436662e74,0x2c36326466252032\n"
".quad 0x0a3b303232662520,0x203436662e6c756d,0x25202c3732646625,0x6430202c36326466\n"
".quad 0x3743313743394633,0x4331443842374331,0x6e722e616d660a3b,0x646625203436662e\n"
".quad 0x32646625202c3832,0x3732646625202c35,0x3b3432646625202c,0x2e6e722e7476630a\n"
".quad 0x203436662e323366,0x25202c3132326625,0x74730a3b38326466,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x32326625202c5d38,0x20636f6c2e0a3b31,0x3120323635312032\n"
".quad 0x3233662e6c756d0a,0x202c323232662520,0x25202c3034316625,0x76630a3b34343266\n"
".quad 0x33662e3436662e74,0x2c39326466252032,0x0a3b323232662520,0x203233662e627573\n"
".quad 0x25202c3332326625,0x6625202c35373166,0x6f6c2e0a3b303731,0x3236353120322063\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x326625202c343232,0x30346630202c3332\n"
".quad 0x202c303030303034,0x6d0a3b3536316625,0x25203233662e6c75,0x6625202c35323266\n"
".quad 0x346630202c333232,0x3b30303030303930,0x2e6e722e616d660a,0x3232662520323366\n"
".quad 0x3532326625202c36,0x2c3332326625202c,0x0a3b343232662520,0x662e6e722e616d66\n"
".quad 0x3732326625203233,0x2c3937316625202c,0x202c383731662520,0x630a3b3632326625\n"
".quad 0x662e3436662e7476,0x3033646625203233,0x3b3732326625202c,0x3436662e6c756d0a\n"
".quad 0x202c313364662520,0x30202c3033646625,0x4331374339463364,0x3144384237433137\n"
".quad 0x722e616d660a3b43,0x6625203436662e6e,0x646625202c323364,0x33646625202c3532\n"
".quad 0x3932646625202c31,0x6e722e7476630a3b,0x3436662e3233662e,0x202c383232662520\n"
".quad 0x730a3b3233646625,0x6c61626f6c672e74,0x72255b203233662e,0x326625202c5d396c\n"
".quad 0x636f6c2e0a3b3832,0x2033363531203220,0x33662e6c756d0a31,0x2c39323266252032\n"
".quad 0x202c363431662520,0x630a3b3434326625,0x662e3436662e7476,0x3333646625203233\n"
".quad 0x3b3932326625202c,0x3233662e6275730a,0x202c303332662520,0x25202c3130326625\n"
".quad 0x6d660a3b35373166,0x3233662e6e722e61,0x202c313332662520,0x30202c3033326625\n"
".quad 0x3030303034303466,0x3536316625202c30,0x33662e6c756d0a3b,0x2c32333266252032\n"
".quad 0x202c303332662520,0x3030303930346630,0x2e616d660a3b3030,0x25203233662e6e72\n"
".quad 0x6625202c33333266,0x326625202c323332,0x33326625202c3033,0x722e616d660a3b31\n"
".quad 0x6625203233662e6e,0x316625202c343332,0x37316625202c3937,0x3333326625202c38\n"
".quad 0x36662e7476630a3b,0x6625203233662e34,0x326625202c343364,0x2e6c756d0a3b3433\n"
".quad 0x3364662520343666,0x3433646625202c35,0x433946336430202c,0x4237433137433137\n"
".quad 0x6d660a3b43314438,0x3436662e6e722e61,0x202c363364662520,0x25202c3532646625\n"
".quad 0x6625202c35336466,0x7476630a3b333364,0x2e3233662e6e722e,0x3332662520343666\n"
".quad 0x3633646625202c35,0x6f6c672e74730a3b,0x203233662e6c6162,0x2c5d30316c72255b\n"
".quad 0x0a3b353332662520,0x31203220636f6c2e,0x756d0a3120343635,0x6625203233662e6c\n"
".quad 0x316625202c363332,0x34326625202c3235,0x662e7476630a3b34,0x25203233662e3436\n"
".quad 0x6625202c37336466,0x6275730a3b363332,0x326625203233662e,0x37316625202c3733\n"
".quad 0x3537316625202c30,0x6e722e616d660a3b,0x326625203233662e,0x33326625202c3833\n"
".quad 0x3430346630202c37,0x25202c3030303030,0x756d0a3b35363166,0x6625203233662e6c\n"
".quad 0x326625202c393332,0x30346630202c3733,0x0a3b303030303039,0x662e6e722e616d66\n"
".quad 0x3034326625203233,0x2c3933326625202c,0x202c373332662520,0x660a3b3833326625\n"
".quad 0x33662e6e722e616d,0x2c31343266252032,0x202c393731662520,0x25202c3837316625\n"
".quad 0x76630a3b30343266,0x33662e3436662e74,0x2c38336466252032,0x0a3b313432662520\n"
".quad 0x203436662e6c756d,0x25202c3933646625,0x6430202c38336466,0x3743313743394633\n"
".quad 0x4331443842374331,0x6e722e616d660a3b,0x646625203436662e,0x32646625202c3034\n"
".quad 0x3933646625202c35,0x3b3733646625202c,0x2e6e722e7476630a,0x203436662e323366\n"
".quad 0x25202c3234326625,0x74730a3b30346466,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x326625202c5d3131,0x636f6c2e0a3b3234,0x2032323631203220,0x7d0a3b7465720a32\n"
".quad 0x7972746e652e0a0a,0x645f524c395a5f20,0x536650444341425f,0x61702e0a286d665f\n"
".quad 0x3436752e206d6172,0x645f524c395a5f20,0x536650444341425f,0x617261705f6d665f\n"
".quad 0x61702e0a2c305f6d,0x3436752e206d6172,0x645f524c395a5f20,0x536650444341425f\n"
".quad 0x617261705f6d665f,0x61702e0a2c315f6d,0x3233662e206d6172,0x645f524c395a5f20\n"
".quad 0x536650444341425f,0x617261705f6d665f,0x61702e0a2c325f6d,0x3436752e206d6172\n"
".quad 0x645f524c395a5f20,0x536650444341425f,0x617261705f6d665f,0x0a7b0a290a335f6d\n"
".quad 0x33662e206765722e,0x3430313c66252032,0x206765722e0a3b3e,0x646625203436662e\n"
".quad 0x722e0a3b3e34323c,0x646572702e206765,0x0a3b3e323c702520,0x33732e206765722e\n"
".quad 0x3e35353c72252032,0x2e206765722e0a3b,0x3c6c722520343673,0x0a0a0a3b3e303731\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x4c395a5f5b202c35,0x444341425f645f52\n"
".quad 0x705f6d665f536650,0x3b5d305f6d617261,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x395a5f5b202c316c,0x4341425f645f524c,0x5f6d665f53665044,0x5d315f6d61726170\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5a5f5b202c326c72,0x41425f645f524c39\n"
".quad 0x6d665f5366504443,0x335f6d617261705f,0x2e617476630a3b5d,0x61626f6c672e6f74\n"
".quad 0x7225203436752e6c,0x316c7225202c366c,0x3220636f6c2e0a3b,0x0a31203732363120\n"
".quad 0x203233752e766f6d,0x746e25202c317225,0x6f6d0a3b782e6469,0x7225203233752e76\n"
".quad 0x6961746325202c32,0x766f6d0a3b782e64,0x337225203233752e,0x782e64697425202c\n"
".quad 0x6f6c2e64616d0a3b,0x347225203233732e,0x25202c317225202c,0x3b337225202c3272\n"
".quad 0x203220636f6c2e0a,0x6d0a312038323631,0x25203233752e766f,0x69746e25202c3572\n"
".quad 0x766f6d0a3b792e64,0x367225203233752e,0x646961746325202c,0x2e766f6d0a3b792e\n"
".quad 0x2c37722520323375,0x3b792e6469742520,0x2e6f6c2e64616d0a,0x2c38722520323373\n"
".quad 0x7225202c35722520,0x0a3b377225202c36,0x31203220636f6c2e,0x76630a3120393236\n"
".quad 0x3233662e6e722e74,0x316625203233732e,0x0a3b347225202c31,0x662e6e722e616d66\n"
".quad 0x2c32316625203233,0x30202c3131662520,0x3030303038453366,0x4333346630202c30\n"
".quad 0x2e0a3b3030304446,0x3631203220636f6c,0x7476630a31203033,0x2e3233662e6e722e\n"
".quad 0x3331662520323373,0x660a3b387225202c,0x33662e6e722e616d,0x202c343166252032\n"
".quad 0x6630202c33316625,0x3030303030384533,0x463933346630202c,0x76630a3b30303044\n"
".quad 0x33752e3436752e74,0x202c376c72252032,0x6f6c2e0a3b347225,0x3133363120322063\n"
".quad 0x732e7476630a3120,0x25203233732e3436,0x387225202c386c72,0x6f6c2e64616d0a3b\n"
".quad 0x6c7225203436732e,0x2c386c7225202c39,0x25202c326c722520,0x6464610a3b376c72\n"
".quad 0x316625203233662e,0x2c32316625202c35,0x4346463343663020,0x6464610a3b303030\n"
".quad 0x316625203233662e,0x2c34316625202c36,0x4346423343663020,0x6f6c2e0a3b303030\n"
".quad 0x3120343720322063,0x3233662e6c756d0a,0x25202c3731662520,0x316625202c363166\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x35316625202c3831,0x202c35316625202c\n"
".quad 0x65730a3b37316625,0x33662e746c2e7074,0x25202c3170252032,0x346630202c383166\n"
".quad 0x3b30303030303832,0x6f742e617476630a,0x2e6c61626f6c672e,0x316c722520343675\n"
".quad 0x3b356c7225202c30,0x3436622e6c68730a,0x202c31316c722520,0x3233202c396c7225\n"
".quad 0x36732e7268730a3b,0x2c32316c72252034,0x202c31316c722520,0x636f6c2e0a3b3233\n"
".quad 0x2039333631203220,0x36622e6c68730a31,0x2c33316c72252034,0x202c32316c722520\n"
".quad 0x732e6464610a3b32,0x34316c7225203436,0x2c30316c7225202c,0x0a3b33316c722520\n"
".quad 0x61626f6c672e646c,0x6625203233662e6c,0x316c72255b202c32,0x2e6464610a3b5d34\n"
".quad 0x3031722520323373,0x2d202c347225202c,0x752e7476630a3b31,0x25203233752e3436\n"
".quad 0x7225202c35316c72,0x2e6464610a3b3031,0x316c722520343673,0x2c386c7225202c36\n"
".quad 0x6c2e0a3b32313520,0x343631203220636f,0x2e64616d0a312030,0x25203436732e6f6c\n"
".quad 0x7225202c37316c72,0x6c7225202c36316c,0x35316c7225202c32,0x36622e6c68730a3b\n"
".quad 0x2c38316c72252034,0x202c37316c722520,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x38316c7225202c39,0x6c2e0a3b3233202c,0x343631203220636f,0x2e6c68730a312030\n"
".quad 0x326c722520343662,0x39316c7225202c30,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x316c7225202c3132,0x30326c7225202c30,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x72255b202c336625,0x6c2e0a3b5d31326c,0x343631203220636f,0x2e6464610a312031\n"
".quad 0x3231722520323373,0x31202c347225202c,0x36752e7476630a3b,0x7225203233752e34\n"
".quad 0x317225202c32326c,0x732e6464610a3b32,0x33326c7225203436,0x202c386c7225202c\n"
".quad 0x6c2e0a3b36333531,0x343631203220636f,0x2e64616d0a312031,0x25203436732e6f6c\n"
".quad 0x7225202c34326c72,0x6c7225202c33326c,0x32326c7225202c32,0x36622e6c68730a3b\n"
".quad 0x2c35326c72252034,0x202c34326c722520,0x2e7268730a3b3233,0x326c722520343673\n"
".quad 0x35326c7225202c36,0x6c2e0a3b3233202c,0x343631203220636f,0x2e6c68730a312031\n"
".quad 0x326c722520343662,0x36326c7225202c37,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x316c7225202c3832,0x37326c7225202c30,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x72255b202c346625,0x64610a3b5d38326c,0x7225203233732e64,0x2c387225202c3431\n"
".quad 0x6f6c2e0a3b312d20,0x3234363120322063,0x732e7476630a3120,0x25203233732e3436\n"
".quad 0x7225202c39326c72,0x2e6464610a3b3431,0x336c722520343673,0x39326c7225202c30\n"
".quad 0x0a3b34323031202c,0x31203220636f6c2e,0x616d0a3120323436,0x3436732e6f6c2e64\n"
".quad 0x202c31336c722520,0x25202c30336c7225,0x6c7225202c326c72,0x622e6c68730a3b37\n"
".quad 0x32336c7225203436,0x2c31336c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x336c7225202c3333,0x2e0a3b3233202c32,0x3631203220636f6c,0x6c68730a31203234\n"
".quad 0x6c7225203436622e,0x336c7225202c3433,0x64610a3b32202c33,0x7225203436732e64\n"
".quad 0x6c7225202c35336c,0x336c7225202c3031,0x6c672e646c0a3b34,0x3233662e6c61626f\n"
".quad 0x255b202c35662520,0x610a3b5d35336c72,0x25203436732e6464,0x7225202c36336c72\n"
".quad 0x363532202c39326c,0x20636f6c2e0a3b30,0x3120333436312032,0x2e6f6c2e64616d0a\n"
".quad 0x336c722520343673,0x36336c7225202c37,0x202c326c7225202c,0x730a3b35316c7225\n"
".quad 0x25203436622e6c68,0x7225202c38336c72,0x3b3233202c37336c,0x3436732e7268730a\n"
".quad 0x202c39336c722520,0x33202c38336c7225,0x20636f6c2e0a3b32,0x3120333436312032\n"
".quad 0x3436622e6c68730a,0x202c30346c722520,0x32202c39336c7225,0x36732e6464610a3b\n"
".quad 0x2c31346c72252034,0x202c30316c722520,0x6c0a3b30346c7225,0x6c61626f6c672e64\n"
".quad 0x366625203233662e,0x31346c72255b202c,0x732e6464610a3b5d,0x32346c7225203436\n"
".quad 0x2c39326c7225202c,0x2e0a3b3237303320,0x3631203220636f6c,0x64616d0a31203434\n"
".quad 0x203436732e6f6c2e,0x25202c33346c7225,0x7225202c32346c72,0x326c7225202c326c\n"
".quad 0x622e6c68730a3b32,0x34346c7225203436,0x2c33346c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x346c7225202c3534,0x2e0a3b3233202c34,0x3631203220636f6c\n"
".quad 0x6c68730a31203434,0x6c7225203436622e,0x346c7225202c3634,0x64610a3b32202c35\n"
".quad 0x7225203436732e64,0x6c7225202c37346c,0x346c7225202c3031,0x6c672e646c0a3b36\n"
".quad 0x3233662e6c61626f,0x255b202c37662520,0x2e0a3b5d37346c72,0x3631203220636f6c\n"
".quad 0x6464610a31203534,0x317225203233732e,0x202c387225202c38,0x732e7476630a3b31\n"
".quad 0x25203233732e3436,0x7225202c38346c72,0x2e6464610a3b3831,0x346c722520343673\n"
".quad 0x38346c7225202c39,0x0a3b38343032202c,0x31203220636f6c2e,0x616d0a3120353436\n"
".quad 0x3436732e6f6c2e64,0x202c30356c722520,0x25202c39346c7225,0x6c7225202c326c72\n"
".quad 0x622e6c68730a3b37,0x31356c7225203436,0x2c30356c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x356c7225202c3235,0x2e0a3b3233202c31,0x3631203220636f6c\n"
".quad 0x6c68730a31203534,0x6c7225203436622e,0x356c7225202c3335,0x64610a3b32202c32\n"
".quad 0x7225203436732e64,0x6c7225202c34356c,0x356c7225202c3031,0x6c672e646c0a3b33\n"
".quad 0x3233662e6c61626f,0x255b202c38662520,0x610a3b5d34356c72,0x25203436732e6464\n"
".quad 0x7225202c35356c72,0x383533202c38346c,0x20636f6c2e0a3b34,0x3120363436312032\n"
".quad 0x2e6f6c2e64616d0a,0x356c722520343673,0x35356c7225202c36,0x202c326c7225202c\n"
".quad 0x730a3b32326c7225,0x25203436622e6c68,0x7225202c37356c72,0x3b3233202c36356c\n"
".quad 0x3436732e7268730a,0x202c38356c722520,0x33202c37356c7225,0x20636f6c2e0a3b32\n"
".quad 0x3120363436312032,0x3436622e6c68730a,0x202c39356c722520,0x32202c38356c7225\n"
".quad 0x36732e6464610a3b,0x2c30366c72252034,0x202c30316c722520,0x6c0a3b39356c7225\n"
".quad 0x6c61626f6c672e64,0x396625203233662e,0x30366c72255b202c,0x732e6464610a3b5d\n"
".quad 0x31366c7225203436,0x2c38346c7225202c,0x2e0a3b3639303420,0x3631203220636f6c\n"
".quad 0x64616d0a31203734,0x203436732e6f6c2e,0x25202c32366c7225,0x7225202c31366c72\n"
".quad 0x316c7225202c326c,0x622e6c68730a3b35,0x33366c7225203436,0x2c32366c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x366c7225202c3436,0x2e0a3b3233202c33\n"
".quad 0x3631203220636f6c,0x6c68730a31203734,0x6c7225203436622e,0x366c7225202c3536\n"
".quad 0x64610a3b32202c34,0x7225203436732e64,0x6c7225202c36366c,0x366c7225202c3031\n"
".quad 0x6c672e646c0a3b35,0x3233662e6c61626f,0x5b202c3031662520,0x0a3b5d36366c7225\n"
".quad 0x203436732e646461,0x25202c37366c7225,0x383533202c386c72,0x20636f6c2e0a3b34\n"
".quad 0x3120353536312032,0x2e6f6c2e64616d0a,0x366c722520343673,0x37366c7225202c38\n"
".quad 0x202c326c7225202c,0x68730a3b376c7225,0x7225203436622e6c,0x6c7225202c39366c\n"
".quad 0x0a3b3233202c3836,0x203436732e726873,0x25202c30376c7225,0x3233202c39366c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203535363120,0x203436622e6c6873,0x25202c31376c7225\n"
".quad 0x3b32202c30376c72,0x3436732e6464610a,0x25202c336c722520,0x6c7225202c366c72\n"
".quad 0x2e6464610a3b3137,0x376c722520343673,0x2c386c7225202c32,0x2e0a3b3639303420\n"
".quad 0x3631203220636f6c,0x64616d0a31203635,0x203436732e6f6c2e,0x25202c33376c7225\n"
".quad 0x7225202c32376c72,0x376c7225202c326c,0x36622e6c68730a3b,0x2c34376c72252034\n"
".quad 0x202c33376c722520,0x2e7268730a3b3233,0x376c722520343673,0x34376c7225202c35\n"
".quad 0x6c2e0a3b3233202c,0x353631203220636f,0x2e6c68730a312036,0x376c722520343662\n"
".quad 0x35376c7225202c36,0x6464610a3b32202c,0x6c7225203436732e,0x2c366c7225202c34\n"
".quad 0x0a3b36376c722520,0x31203220636f6c2e,0x25400a3120383436,0x4220617262203170\n"
".quad 0x0a0a3b325f393242,0x31203220636f6c2e,0x64610a3120323636,0x6625203233662e64\n"
".quad 0x2c326625202c3931,0x64610a3b33662520,0x6625203233662e64,0x39316625202c3032\n"
".quad 0x610a3b356625202c,0x25203233662e6464,0x326625202c313266,0x0a3b346625202c30\n"
".quad 0x203233662e646461,0x6625202c32326625,0x3b386625202c3132,0x3233662e6464610a\n"
".quad 0x25202c3332662520,0x366625202c323266,0x33662e6464610a3b,0x202c343266252032\n"
".quad 0x6625202c33326625,0x662e6464610a3b37,0x2c35326625203233,0x25202c3432662520\n"
".quad 0x2e6464610a3b3966,0x3632662520323366,0x202c35326625202c,0x75730a3b30316625\n"
".quad 0x6625203233662e62,0x2c336625202c3732,0x64610a3b34662520,0x6625203233662e64\n"
".quad 0x37326625202c3832,0x730a3b366625202c,0x25203233662e6275,0x326625202c393266\n"
".quad 0x0a3b376625202c38,0x203233662e627573,0x6625202c30336625,0x3b396625202c3932\n"
".quad 0x3233662e6464610a,0x25202c3133662520,0x316625202c303366,0x662e6275730a3b30\n"
".quad 0x2c32336625203233,0x6625202c35662520,0x662e6464610a3b38,0x2c33336625203233\n"
".quad 0x25202c3233662520,0x2e6464610a3b3666,0x3433662520323366,0x202c33336625202c\n"
".quad 0x6275730a3b376625,0x336625203233662e,0x2c34336625202c35,0x75730a3b39662520\n"
".quad 0x6625203233662e62,0x35336625202c3633,0x0a3b30316625202c,0x203233662e6c756d\n"
".quad 0x6625202c37336625,0x36336625202c3633,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x2c31336625202c38,0x25202c3133662520,0x766f6d0a3b373366,0x336625203233662e\n"
".quad 0x4346336630202c39,0x2e0a3b3030303030,0x3631203220636f6c,0x67656e0a31203236\n"
".quad 0x346625203233662e,0x3b38336625202c30,0x2e6e722e616d660a,0x3134662520323366\n"
".quad 0x202c30346625202c,0x6625202c39336625,0x2e616d660a3b3632,0x25203233662e6e72\n"
".quad 0x346625202c323466,0x4545426630202c31,0x25202c3933453833,0x2e67656e0a3b3266\n"
".quad 0x3334662520323366,0x0a3b32346625202c,0x6d617261702e646c,0x316625203233662e\n"
".quad 0x395a5f5b202c3330,0x4341425f645f524c,0x5f6d665f53665044,0x5d325f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x0a31203236363120,0x662e6e722e616d66,0x2c34346625203233\n"
".quad 0x25202c3334662520,0x6625202c33303166,0x662e766f6d0a3b32,0x2c35346625203233\n"
".quad 0x3030343034663020,0x6f6c2e0a3b303030,0x3236363120322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x31336625202c3634,0x303430346630202c,0x6625202c30303030\n"
".quad 0x2e6c756d0a3b3632,0x3734662520323366,0x202c31336625202c,0x3030303930346630\n"
".quad 0x2e616d660a3b3030,0x25203233662e6e72,0x346625202c383466,0x2c31336625202c37\n"
".quad 0x660a3b3634662520,0x33662e6e722e616d,0x202c393466252032,0x6625202c30346625\n"
".quad 0x38346625202c3933,0x33662e766f6d0a3b,0x202c303566252032,0x4538334544336630\n"
".quad 0x636f6c2e0a3b3933,0x2032363631203220,0x33662e67656e0a31,0x202c313566252032\n"
".quad 0x6d660a3b39346625,0x3233662e6e722e61,0x25202c3235662520,0x356625202c313566\n"
".quad 0x0a3b336625202c30,0x203233662e67656e,0x6625202c33356625,0x2e616d660a3b3235\n"
".quad 0x25203233662e6e72,0x356625202c343566,0x3330316625202c33,0x660a3b336625202c\n"
".quad 0x33662e6e722e616d,0x202c353566252032,0x6630202c36336625,0x3030303030343034\n"
".quad 0x0a3b36326625202c,0x203233662e6c756d,0x6625202c36356625,0x30346630202c3633\n"
".quad 0x0a3b303030303039,0x662e6e722e616d66,0x2c37356625203233,0x25202c3635662520\n"
".quad 0x356625202c363366,0x722e616d660a3b35,0x6625203233662e6e,0x30346625202c3835\n"
".quad 0x202c39336625202c,0x656e0a3b37356625,0x6625203233662e67,0x38356625202c3935\n"
".quad 0x6e722e616d660a3b,0x366625203233662e,0x2c39356625202c30,0x25202c3035662520\n"
".quad 0x2e67656e0a3b3566,0x3136662520323366,0x0a3b30366625202c,0x662e6e722e616d66\n"
".quad 0x2c32366625203233,0x25202c3136662520,0x6625202c33303166,0x662e67656e0a3b35\n"
".quad 0x2c33366625203233,0x660a3b3133662520,0x33662e6e722e616d,0x202c343666252032\n"
".quad 0x6625202c33366625,0x36326625202c3534,0x6e722e616d660a3b,0x366625203233662e\n"
".quad 0x2c37346625202c35,0x25202c3133662520,0x616d660a3b343666,0x203233662e6e722e\n"
".quad 0x6625202c36366625,0x39336625202c3034,0x0a3b35366625202c,0x203233662e67656e\n"
".quad 0x6625202c37366625,0x2e616d660a3b3636,0x25203233662e6e72,0x366625202c383666\n"
".quad 0x2c30356625202c37,0x656e0a3b34662520,0x6625203233662e67,0x38366625202c3936\n"
".quad 0x6e722e616d660a3b,0x376625203233662e,0x2c39366625202c30,0x202c333031662520\n"
".quad 0x67656e0a3b346625,0x376625203233662e,0x3b36336625202c31,0x2e6e722e616d660a\n"
".quad 0x3237662520323366,0x202c31376625202c,0x6625202c35346625,0x2e616d660a3b3632\n"
".quad 0x25203233662e6e72,0x356625202c333766,0x2c36336625202c36,0x660a3b3237662520\n"
".quad 0x33662e6e722e616d,0x202c343766252032,0x6625202c30346625,0x33376625202c3933\n"
".quad 0x33662e67656e0a3b,0x202c353766252032,0x6d660a3b34376625,0x3233662e6e722e61\n"
".quad 0x25202c3637662520,0x356625202c353766,0x0a3b386625202c30,0x203233662e67656e\n"
".quad 0x6625202c37376625,0x2e616d660a3b3637,0x25203233662e6e72,0x376625202c383766\n"
".quad 0x3330316625202c37,0x610a3b386625202c,0x25203233662e6464,0x336625202c393766\n"
".quad 0x3b36336625202c31,0x2e6e722e616d660a,0x3038662520323366,0x202c39376625202c\n"
".quad 0x3030303430346630,0x36326625202c3030,0x33662e6c756d0a3b,0x202c313866252032\n"
".quad 0x6630202c39376625,0x3030303030393034,0x6e722e616d660a3b,0x386625203233662e\n"
".quad 0x2c31386625202c32,0x25202c3937662520,0x616d660a3b303866,0x203233662e6e722e\n"
".quad 0x6625202c33386625,0x39336625202c3034,0x0a3b32386625202c,0x2e3436662e747663\n"
".quad 0x3164662520323366,0x0a3b33386625202c,0x203436662e766f6d,0x6430202c32646625\n"
".quad 0x3743313743394633,0x4331443842374331,0x3220636f6c2e0a3b,0x0a31203236363120\n"
".quad 0x2e3436662e747663,0x3364662520323366,0x6e0a3b366625202c,0x25203436662e6765\n"
".quad 0x646625202c346466,0x722e616d660a3b31,0x6625203436662e6e,0x34646625202c3564\n"
".quad 0x202c32646625202c,0x76630a3b33646625,0x33662e3436662e74,0x202c366466252032\n"
".quad 0x6e0a3b3330316625,0x25203436662e6765,0x646625202c376466,0x722e616d660a3b36\n"
".quad 0x6625203436662e6e,0x37646625202c3864,0x202c35646625202c,0x76630a3b33646625\n"
".quad 0x3233662e6e722e74,0x386625203436662e,0x3b38646625202c34,0x3233662e6275730a\n"
".quad 0x25202c3538662520,0x336625202c363366,0x20636f6c2e0a3b31,0x3120323636312032\n"
".quad 0x2e6e722e616d660a,0x3638662520323366,0x202c35386625202c,0x3030303430346630\n"
".quad 0x36326625202c3030,0x33662e6c756d0a3b,0x202c373866252032,0x6630202c35386625\n"
".quad 0x3030303030393034,0x6e722e616d660a3b,0x386625203233662e,0x2c37386625202c38\n"
".quad 0x25202c3538662520,0x616d660a3b363866,0x203233662e6e722e,0x6625202c39386625\n"
".quad 0x39336625202c3034,0x0a3b38386625202c,0x2e3436662e747663,0x3964662520323366\n"
".quad 0x0a3b39386625202c,0x2e3436662e747663,0x3164662520323366,0x0a3b376625202c30\n"
".quad 0x203436662e67656e,0x25202c3131646625,0x616d660a3b396466,0x203436662e6e722e\n"
".quad 0x25202c3231646625,0x6625202c31316466,0x31646625202c3264,0x722e616d660a3b30\n"
".quad 0x6625203436662e6e,0x646625202c333164,0x3231646625202c37,0x3b3031646625202c\n"
".quad 0x2e6e722e7476630a,0x203436662e323366,0x6625202c30396625,0x6275730a3b333164\n"
".quad 0x396625203233662e,0x2c33366625202c31,0x660a3b3633662520,0x33662e6e722e616d\n"
".quad 0x202c323966252032,0x6630202c31396625,0x3030303030343034,0x0a3b36326625202c\n"
".quad 0x203233662e6c756d,0x6625202c33396625,0x30346630202c3139,0x0a3b303030303039\n"
".quad 0x662e6e722e616d66,0x2c34396625203233,0x25202c3339662520,0x396625202c313966\n"
".quad 0x722e616d660a3b32,0x6625203233662e6e,0x30346625202c3539,0x202c39336625202c\n"
".quad 0x76630a3b34396625,0x33662e3436662e74,0x2c34316466252032,0x630a3b3539662520\n"
".quad 0x662e3436662e7476,0x3531646625203233,0x6e0a3b396625202c,0x25203436662e6765\n"
".quad 0x6625202c36316466,0x616d660a3b343164,0x203436662e6e722e,0x25202c3731646625\n"
".quad 0x6625202c36316466,0x31646625202c3264,0x722e616d660a3b35,0x6625203436662e6e\n"
".quad 0x646625202c383164,0x3731646625202c37,0x3b3531646625202c,0x2e6e722e7476630a\n"
".quad 0x203436662e323366,0x6625202c36396625,0x6275730a3b383164,0x396625203233662e\n"
".quad 0x2c31336625202c37,0x660a3b3633662520,0x33662e6e722e616d,0x202c383966252032\n"
".quad 0x6630202c37396625,0x3030303030343034,0x0a3b36326625202c,0x203233662e6c756d\n"
".quad 0x6625202c39396625,0x30346630202c3739,0x0a3b303030303039,0x662e6e722e616d66\n"
".quad 0x3030316625203233,0x202c39396625202c,0x6625202c37396625,0x2e616d660a3b3839\n"
".quad 0x25203233662e6e72,0x6625202c31303166,0x39336625202c3034,0x3b3030316625202c\n"
".quad 0x3436662e7476630a,0x646625203233662e,0x30316625202c3931,0x662e7476630a3b31\n"
".quad 0x25203233662e3436,0x6625202c30326466,0x2e67656e0a3b3031,0x3264662520343666\n"
".quad 0x3931646625202c31,0x6e722e616d660a3b,0x646625203436662e,0x32646625202c3232\n"
".quad 0x2c32646625202c31,0x0a3b303264662520,0x662e6e722e616d66,0x3332646625203436\n"
".quad 0x202c37646625202c,0x25202c3232646625,0x76630a3b30326466,0x3233662e6e722e74\n"
".quad 0x316625203436662e,0x32646625202c3230,0x61702e646c0a3b33,0x203436752e6d6172\n"
".quad 0x202c3936316c7225,0x645f524c395a5f5b,0x536650444341425f,0x617261705f6d665f\n"
".quad 0x6c2e0a3b5d335f6d,0x333631203220636f,0x2e64616d0a312031,0x25203436732e6f6c\n"
".quad 0x7225202c39376c72,0x316c7225202c386c,0x376c7225202c3936,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3736316c72,0x5f645f524c395a5f,0x5f53665044434142\n"
".quad 0x6d617261705f6d66,0x7476630a3b5d315f,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x25202c30386c7225,0x730a3b3736316c72,0x25203436622e6c68,0x7225202c31386c72\n"
".quad 0x3b3233202c39376c,0x3436732e7268730a,0x202c32386c722520,0x33202c31386c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120333636312032,0x3436622e6c68730a,0x202c33386c722520\n"
".quad 0x32202c32386c7225,0x36732e6464610a3b,0x2c34386c72252034,0x202c30386c722520\n"
".quad 0x730a3b33386c7225,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d34386c\n"
".quad 0x636f6c2e0a3b3434,0x2039343631203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x316c7225202c3638,0x36316c7225202c36,0x3b376c7225202c39,0x3436622e6c68730a\n"
".quad 0x202c37386c722520,0x33202c36386c7225,0x732e7268730a3b32,0x38386c7225203436\n"
".quad 0x2c37386c7225202c,0x6f6c2e0a3b323320,0x3934363120322063,0x622e6c68730a3120\n"
".quad 0x39386c7225203436,0x2c38386c7225202c,0x2e6464610a3b3220,0x396c722520343673\n"
".quad 0x30386c7225202c30,0x3b39386c7225202c,0x203220636f6c2e0a,0x730a312034363631\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d30396c,0x2e6464610a3b3435\n"
".quad 0x396c722520343673,0x2c386c7225202c31,0x2e0a3b3432303120,0x3631203220636f6c\n"
".quad 0x64616d0a31203035,0x203436732e6f6c2e,0x25202c32396c7225,0x7225202c31396c72\n"
".quad 0x7225202c3936316c,0x2e6c68730a3b376c,0x396c722520343662,0x32396c7225202c33\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c34396c,0x0a3b3233202c3339\n"
".quad 0x31203220636f6c2e,0x68730a3120303536,0x7225203436622e6c,0x6c7225202c35396c\n"
".quad 0x610a3b32202c3439,0x25203436732e6464,0x7225202c36396c72,0x6c7225202c30386c\n"
".quad 0x636f6c2e0a3b3539,0x2035363631203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x2c5d36396c72255b,0x2e0a3b3236662520,0x3631203220636f6c,0x64616d0a31203135\n"
".quad 0x203436732e6f6c2e,0x25202c38396c7225,0x7225202c33326c72,0x7225202c3936316c\n"
".quad 0x2e6c68730a3b376c,0x396c722520343662,0x38396c7225202c39,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3030316c,0x3b3233202c39396c,0x203220636f6c2e0a\n"
".quad 0x730a312031353631,0x25203436622e6c68,0x25202c3130316c72,0x32202c3030316c72\n"
".quad 0x36732e6464610a3b,0x3230316c72252034,0x2c30386c7225202c,0x3b3130316c722520\n"
".quad 0x203220636f6c2e0a,0x730a312036363631,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3230316c,0x6464610a3b303766,0x6c7225203436732e,0x6c7225202c333031\n"
".quad 0x3b38343032202c38,0x203220636f6c2e0a,0x6d0a312032353631,0x36732e6f6c2e6461\n"
".quad 0x3430316c72252034,0x3330316c7225202c,0x3936316c7225202c,0x0a3b376c7225202c\n"
".quad 0x203436622e6c6873,0x202c3530316c7225,0x202c3430316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3630,0x0a3b3233202c3530,0x31203220636f6c2e\n"
".quad 0x68730a3120323536,0x7225203436622e6c,0x7225202c3730316c,0x3b32202c3630316c\n"
".quad 0x3436732e6464610a,0x2c3830316c722520,0x202c30386c722520,0x0a3b3730316c7225\n"
".quad 0x31203220636f6c2e,0x74730a3120373636,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d383031,0x2e6464610a3b3837,0x316c722520343673,0x386c7225202c3930\n"
".quad 0x0a3b30363532202c,0x31203220636f6c2e,0x616d0a3120333536,0x3436732e6f6c2e64\n"
".quad 0x2c3031316c722520,0x2c3930316c722520,0x2c3936316c722520,0x730a3b376c722520\n"
".quad 0x25203436622e6c68,0x25202c3131316c72,0x33202c3031316c72,0x732e7268730a3b32\n"
".quad 0x31316c7225203436,0x31316c7225202c32,0x2e0a3b3233202c31,0x3631203220636f6c\n"
".quad 0x6c68730a31203335,0x6c7225203436622e,0x6c7225202c333131,0x0a3b32202c323131\n"
".quad 0x203436732e646461,0x202c3431316c7225,0x25202c30386c7225,0x2e0a3b3331316c72\n"
".quad 0x3631203220636f6c,0x2e74730a31203836,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x386625202c5d3431,0x732e6464610a3b34,0x31316c7225203436,0x2c386c7225202c35\n"
".quad 0x2e0a3b3237303320,0x3631203220636f6c,0x64616d0a31203435,0x203436732e6f6c2e\n"
".quad 0x202c3631316c7225,0x202c3531316c7225,0x202c3936316c7225,0x68730a3b376c7225\n"
".quad 0x7225203436622e6c,0x7225202c3731316c,0x3233202c3631316c,0x36732e7268730a3b\n"
".quad 0x3831316c72252034,0x3731316c7225202c,0x6c2e0a3b3233202c,0x353631203220636f\n"
".quad 0x2e6c68730a312034,0x316c722520343662,0x316c7225202c3931,0x610a3b32202c3831\n"
".quad 0x25203436732e6464,0x25202c3032316c72,0x7225202c30386c72,0x6c2e0a3b3931316c\n"
".quad 0x363631203220636f,0x672e74730a312039,0x33662e6c61626f6c,0x32316c72255b2032\n"
".quad 0x30396625202c5d30,0x3220636f6c2e0a3b,0x0a31203535363120,0x732e6f6c2e64616d\n"
".quad 0x32316c7225203436,0x37366c7225202c32,0x3936316c7225202c,0x0a3b376c7225202c\n"
".quad 0x203436622e6c6873,0x202c3332316c7225,0x202c3232316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3432,0x0a3b3233202c3332,0x31203220636f6c2e\n"
".quad 0x68730a3120353536,0x7225203436622e6c,0x7225202c3532316c,0x3b32202c3432316c\n"
".quad 0x3436732e6464610a,0x2c3632316c722520,0x202c30386c722520,0x0a3b3532316c7225\n"
".quad 0x31203220636f6c2e,0x74730a3120303736,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d363231,0x636f6c2e0a3b3639,0x2031373631203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x202c5d346c72255b,0x2e0a3b3230316625,0x3631203220636f6c\n"
".quad 0x7465720a32203437,0x5f393242420a0a3b,0x61702e646c0a3a32,0x203436752e6d6172\n"
".quad 0x202c3836316c7225,0x645f524c395a5f5b,0x536650444341425f,0x617261705f6d665f\n"
".quad 0x6c2e0a3b5d335f6d,0x343631203220636f,0x2e64616d0a312039,0x25203436732e6f6c\n"
".quad 0x25202c3033316c72,0x7225202c36316c72,0x7225202c3836316c,0x702e646c0a3b376c\n"
".quad 0x3436752e6d617261,0x2c3636316c722520,0x5f524c395a5f5b20,0x6650444341425f64\n"
".quad 0x7261705f6d665f53,0x630a3b5d315f6d61,0x672e6f742e617476,0x36752e6c61626f6c\n"
".quad 0x3133316c72252034,0x3636316c7225202c,0x36622e6c68730a3b,0x3233316c72252034\n"
".quad 0x3033316c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3333316c\n"
".quad 0x3233202c3233316c,0x3220636f6c2e0a3b,0x0a31203934363120,0x203436622e6c6873\n"
".quad 0x202c3433316c7225,0x202c3333316c7225,0x732e6464610a3b32,0x33316c7225203436\n"
".quad 0x33316c7225202c35,0x33316c7225202c31,0x6c672e74730a3b34,0x3233662e6c61626f\n"
".quad 0x3533316c72255b20,0x0a3b346625202c5d,0x203436732e646461,0x202c3633316c7225\n"
".quad 0x3031202c386c7225,0x636f6c2e0a3b3432,0x2030353631203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c373331,0x6c7225202c363331,0x6c7225202c383631\n"
".quad 0x622e6c68730a3b37,0x33316c7225203436,0x33316c7225202c38,0x730a3b3233202c37\n"
".quad 0x25203436732e7268,0x25202c3933316c72,0x33202c3833316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120303536312032,0x3436622e6c68730a,0x2c3034316c722520,0x2c3933316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x316c7225202c3134,0x316c7225202c3133\n"
".quad 0x672e74730a3b3034,0x33662e6c61626f6c,0x34316c72255b2032,0x3b386625202c5d31\n"
".quad 0x203220636f6c2e0a,0x6d0a312031353631,0x36732e6f6c2e6461,0x3334316c72252034\n"
".quad 0x2c33326c7225202c,0x2c3836316c722520,0x730a3b376c722520,0x25203436622e6c68\n"
".quad 0x25202c3434316c72,0x33202c3334316c72,0x732e7268730a3b32,0x34316c7225203436\n"
".quad 0x34316c7225202c35,0x2e0a3b3233202c34,0x3631203220636f6c,0x6c68730a31203135\n"
".quad 0x6c7225203436622e,0x6c7225202c363431,0x0a3b32202c353431,0x203436732e646461\n"
".quad 0x202c3734316c7225,0x202c3133316c7225,0x0a3b3634316c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3734316c72,0x6464610a3b336625,0x6c7225203436732e\n"
".quad 0x6c7225202c383431,0x3b38343032202c38,0x203220636f6c2e0a,0x6d0a312032353631\n"
".quad 0x36732e6f6c2e6461,0x3934316c72252034,0x3834316c7225202c,0x3836316c7225202c\n"
".quad 0x0a3b376c7225202c,0x203436622e6c6873,0x202c3035316c7225,0x202c3934316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3135,0x0a3b3233202c3035\n"
".quad 0x31203220636f6c2e,0x68730a3120323536,0x7225203436622e6c,0x7225202c3235316c\n"
".quad 0x3b32202c3135316c,0x3436732e6464610a,0x2c3335316c722520,0x2c3133316c722520\n"
".quad 0x3b3235316c722520,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3335316c7225\n"
".quad 0x64610a3b35662520,0x7225203436732e64,0x7225202c3435316c,0x30363532202c386c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203335363120,0x732e6f6c2e64616d,0x35316c7225203436\n"
".quad 0x35316c7225202c35,0x36316c7225202c34,0x3b376c7225202c38,0x3436622e6c68730a\n"
".quad 0x2c3635316c722520,0x2c3535316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c373531,0x3b3233202c363531,0x203220636f6c2e0a,0x730a312033353631\n"
".quad 0x25203436622e6c68,0x25202c3835316c72,0x32202c3735316c72,0x36732e6464610a3b\n"
".quad 0x3935316c72252034,0x3133316c7225202c,0x3835316c7225202c,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x5d3935316c72255b,0x610a3b396625202c,0x25203436732e6464\n"
".quad 0x25202c3036316c72,0x373033202c386c72,0x20636f6c2e0a3b32,0x3120343536312032\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3136,0x316c7225202c3036\n"
".quad 0x376c7225202c3836,0x36622e6c68730a3b,0x3236316c72252034,0x3136316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3336316c,0x3233202c3236316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203435363120,0x203436622e6c6873,0x202c3436316c7225\n"
".quad 0x202c3336316c7225,0x732e6464610a3b32,0x36316c7225203436,0x33316c7225202c35\n"
".quad 0x36316c7225202c31,0x6c672e74730a3b34,0x3233662e6c61626f,0x3536316c72255b20\n"
".quad 0x3b30316625202c5d,0x203220636f6c2e0a,0x730a312035353631,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x366625202c5d336c,0x3220636f6c2e0a3b,0x0a31203635363120\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x6625202c5d346c72,0x20636f6c2e0a3b37\n"
".quad 0x3220343736312032,0x0a7d0a3b7465720a,0x207972746e652e0a,0x645f524c36315a5f\n"
".quad 0x6e495f434441425f,0x5f53665070726574,0x61702e0a28666d66,0x3436752e206d6172\n"
".quad 0x5f524c36315a5f20,0x495f434441425f64,0x536650707265746e,0x7261705f666d665f\n"
".quad 0x702e0a2c305f6d61,0x36752e206d617261,0x524c36315a5f2034,0x5f434441425f645f\n"
".quad 0x6650707265746e49,0x61705f666d665f53,0x2e0a2c315f6d6172,0x662e206d61726170\n"
".quad 0x4c36315a5f203233,0x434441425f645f52,0x50707265746e495f,0x705f666d665f5366\n"
".quad 0x0a2c325f6d617261,0x2e206d617261702e,0x36315a5f20343675,0x4441425f645f524c\n"
".quad 0x707265746e495f43,0x5f666d665f536650,0x2c335f6d61726170,0x206d617261702e0a\n"
".quad 0x315a5f203233662e,0x41425f645f524c36,0x7265746e495f4344,0x666d665f53665070\n"
".quad 0x345f6d617261705f,0x65722e0a7b0a290a,0x25203233662e2067,0x0a3b3e3534323c66\n"
".quad 0x36662e206765722e,0x31343c6466252034,0x206765722e0a3b3e,0x702520646572702e\n"
".quad 0x65722e0a3b3e373c,0x25203233732e2067,0x2e0a3b3e34373c72,0x3436732e20676572\n"
".quad 0x3731323c6c722520,0x2e646c0a0a0a3b3e,0x36752e6d61726170,0x2c35316c72252034\n"
".quad 0x524c36315a5f5b20,0x5f434441425f645f,0x6650707265746e49,0x61705f666d665f53\n"
".quad 0x0a3b5d305f6d6172,0x6d617261702e646c,0x6c7225203436752e,0x36315a5f5b202c31\n"
".quad 0x4441425f645f524c,0x707265746e495f43,0x5f666d665f536650,0x5d315f6d61726170\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5a5f5b202c326c72,0x425f645f524c3631\n"
".quad 0x65746e495f434441,0x6d665f5366507072,0x5f6d617261705f66,0x617476630a3b5d33\n"
".quad 0x626f6c672e6f742e,0x25203436752e6c61,0x6c7225202c336c72,0x636f6c2e0a3b3531\n"
".quad 0x2039373631203220,0x33752e766f6d0a31,0x25202c3372252032,0x0a3b782e6469746e\n"
".quad 0x203233752e766f6d,0x746325202c347225,0x6d0a3b782e646961,0x25203233752e766f\n"
".quad 0x64697425202c3572,0x2e64616d0a3b782e,0x25203233732e6f6c,0x2c337225202c3172\n"
".quad 0x7225202c34722520,0x20636f6c2e0a3b35,0x3120303836312032,0x3233752e766f6d0a\n"
".quad 0x6e25202c36722520,0x6d0a3b792e646974,0x25203233752e766f,0x61746325202c3772\n"
".quad 0x6f6d0a3b792e6469,0x7225203233752e76,0x2e64697425202c38,0x6c2e64616d0a3b79\n"
".quad 0x7225203233732e6f,0x202c367225202c32,0x387225202c377225,0x3220636f6c2e0a3b\n"
".quad 0x0a31203138363120,0x662e6e722e747663,0x25203233732e3233,0x317225202c343166\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x202c34316625202c,0x3030303845336630\n"
".quad 0x33346630202c3030,0x0a3b303030444643,0x31203220636f6c2e,0x76630a3120323836\n"
".quad 0x3233662e6e722e74,0x316625203233732e,0x0a3b327225202c35,0x662e6e722e616d66\n"
".quad 0x202c346625203233,0x6630202c35316625,0x3030303030384533,0x463933346630202c\n"
".quad 0x76630a3b30303044,0x33752e3436752e74,0x202c346c72252032,0x6f6c2e0a3b317225\n"
".quad 0x3338363120322063,0x732e7476630a3120,0x25203233732e3436,0x327225202c356c72\n"
".quad 0x6f6c2e64616d0a3b,0x6c7225203436732e,0x2c356c7225202c36,0x25202c326c722520\n"
".quad 0x6464610a3b346c72,0x316625203233662e,0x202c336625202c36,0x3043464633436630\n"
".quad 0x2e6464610a3b3030,0x3731662520323366,0x30202c346625202c,0x3030434642334366\n"
".quad 0x20636f6c2e0a3b30,0x6d0a312034372032,0x25203233662e6c75,0x316625202c383166\n"
".quad 0x3b37316625202c37,0x2e6e722e616d660a,0x3931662520323366,0x202c36316625202c\n"
".quad 0x6625202c36316625,0x707465730a3b3831,0x203233662e746c2e,0x316625202c317025\n"
".quad 0x3832346630202c39,0x610a3b3030303030,0x25203233732e6464,0x2c317225202c3972\n"
".quad 0x7465730a3b342d20,0x3233752e74672e70,0x7225202c32702520,0x0a3b393537202c39\n"
".quad 0x31203220636f6c2e,0x65730a3120383836,0x33732e746c2e7074,0x25202c3370252032\n"
".quad 0x6f0a3b34202c3272,0x2520646572702e72,0x2c327025202c3470,0x6c2e0a3b33702520\n"
".quad 0x383631203220636f,0x707465730a312038,0x203233732e74672e,0x327225202c357025\n"
".quad 0x6f0a3b373035202c,0x2520646572702e72,0x2c347025202c3670,0x64610a3b35702520\n"
".quad 0x7225203436732e64,0x6c7225202c36316c,0x0a3b323135202c35,0x31203220636f6c2e\n"
".quad 0x616d0a3120383037,0x3436732e6f6c2e64,0x202c37316c722520,0x25202c36316c7225\n"
".quad 0x6c7225202c326c72,0x2e617476630a3b34,0x61626f6c672e6f74,0x7225203436752e6c\n"
".quad 0x6c7225202c38316c,0x622e6c68730a3b31,0x39316c7225203436,0x2c37316c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x316c7225202c3032,0x2e0a3b3233202c39\n"
".quad 0x3731203220636f6c,0x6c68730a31203830,0x6c7225203436622e,0x326c7225202c3132\n"
".quad 0x64610a3b32202c30,0x7225203436732e64,0x316c7225202c376c,0x31326c7225202c38\n"
".quad 0x36732e6464610a3b,0x2c32326c72252034,0x31202c356c722520,0x6f6c2e0a3b343230\n"
".quad 0x3930373120322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c33326c\n"
".quad 0x326c7225202c3232,0x0a3b346c7225202c,0x203436622e6c6873,0x25202c34326c7225\n"
".quad 0x3233202c33326c72,0x36732e7268730a3b,0x2c35326c72252034,0x202c34326c722520\n"
".quad 0x636f6c2e0a3b3233,0x2039303731203220,0x36622e6c68730a31,0x2c36326c72252034\n"
".quad 0x202c35326c722520,0x732e6464610a3b32,0x2c386c7225203436,0x202c38316c722520\n"
".quad 0x610a3b36326c7225,0x25203436732e6464,0x7225202c37326c72,0x36333531202c356c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203031373120,0x732e6f6c2e64616d,0x38326c7225203436\n"
".quad 0x2c37326c7225202c,0x25202c326c722520,0x6c68730a3b346c72,0x6c7225203436622e\n"
".quad 0x326c7225202c3932,0x730a3b3233202c38,0x25203436732e7268,0x7225202c30336c72\n"
".quad 0x3b3233202c39326c,0x203220636f6c2e0a,0x730a312030313731,0x25203436622e6c68\n"
".quad 0x7225202c31336c72,0x0a3b32202c30336c,0x203436732e646461,0x7225202c396c7225\n"
".quad 0x6c7225202c38316c,0x2e6464610a3b3133,0x336c722520343673,0x2c356c7225202c32\n"
".quad 0x2e0a3b3834303220,0x3731203220636f6c,0x64616d0a31203131,0x203436732e6f6c2e\n"
".quad 0x25202c33336c7225,0x7225202c32336c72,0x346c7225202c326c,0x36622e6c68730a3b\n"
".quad 0x2c34336c72252034,0x202c33336c722520,0x2e7268730a3b3233,0x336c722520343673\n"
".quad 0x34336c7225202c35,0x6c2e0a3b3233202c,0x313731203220636f,0x2e6c68730a312031\n"
".quad 0x336c722520343662,0x35336c7225202c36,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x316c7225202c3031,0x36336c7225202c38,0x36732e6464610a3b,0x2c37336c72252034\n"
".quad 0x32202c356c722520,0x6f6c2e0a3b303635,0x3231373120322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c38336c,0x326c7225202c3733,0x0a3b346c7225202c\n"
".quad 0x203436622e6c6873,0x25202c39336c7225,0x3233202c38336c72,0x36732e7268730a3b\n"
".quad 0x2c30346c72252034,0x202c39336c722520,0x636f6c2e0a3b3233,0x2032313731203220\n"
".quad 0x36622e6c68730a31,0x2c31346c72252034,0x202c30346c722520,0x732e6464610a3b32\n"
".quad 0x31316c7225203436,0x2c38316c7225202c,0x0a3b31346c722520,0x203436732e646461\n"
".quad 0x25202c32346c7225,0x373033202c356c72,0x20636f6c2e0a3b32,0x3120333137312032\n"
".quad 0x2e6f6c2e64616d0a,0x346c722520343673,0x32346c7225202c33,0x202c326c7225202c\n"
".quad 0x68730a3b346c7225,0x7225203436622e6c,0x6c7225202c34346c,0x0a3b3233202c3334\n"
".quad 0x203436732e726873,0x25202c35346c7225,0x3233202c34346c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203331373120,0x203436622e6c6873,0x25202c36346c7225,0x3b32202c35346c72\n"
".quad 0x3436732e6464610a,0x202c32316c722520,0x25202c38316c7225,0x64610a3b36346c72\n"
".quad 0x7225203436732e64,0x6c7225202c37346c,0x3b34383533202c35,0x203220636f6c2e0a\n"
".quad 0x6d0a312034313731,0x36732e6f6c2e6461,0x2c38346c72252034,0x202c37346c722520\n"
".quad 0x7225202c326c7225,0x2e6c68730a3b346c,0x346c722520343662,0x38346c7225202c39\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c30356c,0x0a3b3233202c3934\n"
".quad 0x31203220636f6c2e,0x68730a3120343137,0x7225203436622e6c,0x6c7225202c31356c\n"
".quad 0x610a3b32202c3035,0x25203436732e6464,0x7225202c33316c72,0x6c7225202c38316c\n"
".quad 0x2e6464610a3b3135,0x356c722520343673,0x2c356c7225202c32,0x2e0a3b3639303420\n"
".quad 0x3731203220636f6c,0x64616d0a31203531,0x203436732e6f6c2e,0x25202c33356c7225\n"
".quad 0x7225202c32356c72,0x346c7225202c326c,0x36622e6c68730a3b,0x2c34356c72252034\n"
".quad 0x202c33356c722520,0x2e7268730a3b3233,0x356c722520343673,0x34356c7225202c35\n"
".quad 0x6c2e0a3b3233202c,0x313731203220636f,0x2e6c68730a312035,0x356c722520343662\n"
".quad 0x35356c7225202c36,0x6464610a3b32202c,0x6c7225203436732e,0x316c7225202c3431\n"
".quad 0x36356c7225202c38,0x3220636f6c2e0a3b,0x0a31203838363120,0x6172622036702540\n"
".quad 0x3b345f3033424220,0x36622e6c68730a0a,0x2c37356c72252034,0x33202c366c722520\n"
".quad 0x732e7268730a3b32,0x38356c7225203436,0x2c37356c7225202c,0x6f6c2e0a3b323320\n"
".quad 0x3733373120322063,0x622e6c68730a3120,0x39356c7225203436,0x2c38356c7225202c\n"
".quad 0x2e6464610a3b3220,0x366c722520343673,0x2c336c7225202c30,0x0a3b39356c722520\n"
".quad 0x61626f6c672e646c,0x6625203233662e6c,0x366c72255b202c35,0x2e6464610a3b5d30\n"
".quad 0x3131722520323373,0x2d202c317225202c,0x752e7476630a3b31,0x25203233752e3436\n"
".quad 0x7225202c31366c72,0x702e646c0a3b3131,0x3436752e6d617261,0x2c3631326c722520\n"
".quad 0x524c36315a5f5b20,0x5f434441425f645f,0x6650707265746e49,0x61705f666d665f53\n"
".quad 0x0a3b5d335f6d6172,0x31203220636f6c2e,0x616d0a3120383337,0x3436732e6f6c2e64\n"
".quad 0x202c33366c722520,0x25202c36316c7225,0x25202c3631326c72,0x68730a3b31366c72\n"
".quad 0x7225203436622e6c,0x6c7225202c34366c,0x0a3b3233202c3336,0x203436732e726873\n"
".quad 0x25202c35366c7225,0x3233202c34366c72,0x3220636f6c2e0a3b,0x0a31203833373120\n"
".quad 0x203436622e6c6873,0x25202c36366c7225,0x3b32202c35366c72,0x3436732e6464610a\n"
".quad 0x202c37366c722520,0x7225202c336c7225,0x2e646c0a3b36366c,0x662e6c61626f6c67\n"
".quad 0x202c366625203233,0x3b5d37366c72255b,0x203220636f6c2e0a,0x610a312039333731\n"
".quad 0x25203233732e6464,0x317225202c333172,0x7476630a3b31202c,0x3233752e3436752e\n"
".quad 0x202c38366c722520,0x6c2e0a3b33317225,0x333731203220636f,0x2e64616d0a312039\n"
".quad 0x25203436732e6f6c,0x7225202c30376c72,0x6c7225202c37326c,0x6c7225202c363132\n"
".quad 0x2e6c68730a3b3836,0x376c722520343662,0x30376c7225202c31,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c32376c,0x0a3b3233202c3137,0x31203220636f6c2e\n"
".quad 0x68730a3120393337,0x7225203436622e6c,0x6c7225202c33376c,0x610a3b32202c3237\n"
".quad 0x25203436732e6464,0x7225202c34376c72,0x376c7225202c336c,0x6c672e646c0a3b33\n"
".quad 0x3233662e6c61626f,0x255b202c37662520,0x610a3b5d34376c72,0x25203233732e6464\n"
".quad 0x327225202c353172,0x6c2e0a3b312d202c,0x343731203220636f,0x2e7476630a312030\n"
".quad 0x203233732e343673,0x25202c35376c7225,0x6464610a3b353172,0x6c7225203436732e\n"
".quad 0x376c7225202c3637,0x3b34323031202c35,0x203220636f6c2e0a,0x6d0a312030343731\n"
".quad 0x36732e6f6c2e6461,0x2c37376c72252034,0x202c36376c722520,0x202c3631326c7225\n"
".quad 0x68730a3b346c7225,0x7225203436622e6c,0x6c7225202c38376c,0x0a3b3233202c3737\n"
".quad 0x203436732e726873,0x25202c39376c7225,0x3233202c38376c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203034373120,0x203436622e6c6873,0x25202c30386c7225,0x3b32202c39376c72\n"
".quad 0x3436732e6464610a,0x202c31386c722520,0x7225202c336c7225,0x2e646c0a3b30386c\n"
".quad 0x662e6c61626f6c67,0x202c386625203233,0x3b5d31386c72255b,0x3436732e6464610a\n"
".quad 0x202c32386c722520,0x32202c35376c7225,0x6f6c2e0a3b303635,0x3134373120322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c33386c,0x326c7225202c3238\n"
".quad 0x366c7225202c3631,0x622e6c68730a3b31,0x34386c7225203436,0x2c33386c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x386c7225202c3538,0x2e0a3b3233202c34\n"
".quad 0x3731203220636f6c,0x6c68730a31203134,0x6c7225203436622e,0x386c7225202c3638\n"
".quad 0x64610a3b32202c35,0x7225203436732e64,0x6c7225202c37386c,0x36386c7225202c33\n"
".quad 0x6f6c672e646c0a3b,0x203233662e6c6162,0x72255b202c396625,0x64610a3b5d37386c\n"
".quad 0x7225203436732e64,0x6c7225202c38386c,0x32373033202c3537,0x3220636f6c2e0a3b\n"
".quad 0x0a31203234373120,0x732e6f6c2e64616d,0x39386c7225203436,0x2c38386c7225202c\n"
".quad 0x2c3631326c722520,0x0a3b38366c722520,0x203436622e6c6873,0x25202c30396c7225\n"
".quad 0x3233202c39386c72,0x36732e7268730a3b,0x2c31396c72252034,0x202c30396c722520\n"
".quad 0x636f6c2e0a3b3233,0x2032343731203220,0x36622e6c68730a31,0x2c32396c72252034\n"
".quad 0x202c31396c722520,0x732e6464610a3b32,0x33396c7225203436,0x202c336c7225202c\n"
".quad 0x6c0a3b32396c7225,0x6c61626f6c672e64,0x316625203233662e,0x396c72255b202c30\n"
".quad 0x636f6c2e0a3b5d33,0x2033343731203220,0x33732e6464610a31,0x202c393172252032\n"
".quad 0x0a3b31202c327225,0x2e3436732e747663,0x396c722520323373,0x3b39317225202c34\n"
".quad 0x3436732e6464610a,0x202c35396c722520,0x32202c34396c7225,0x6f6c2e0a3b383430\n"
".quad 0x3334373120322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c36396c\n"
".quad 0x326c7225202c3539,0x346c7225202c3631,0x36622e6c68730a3b,0x2c37396c72252034\n"
".quad 0x202c36396c722520,0x2e7268730a3b3233,0x396c722520343673,0x37396c7225202c38\n"
".quad 0x6c2e0a3b3233202c,0x343731203220636f,0x2e6c68730a312033,0x396c722520343662\n"
".quad 0x38396c7225202c39,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c303031\n"
".quad 0x39396c7225202c33,0x6f6c672e646c0a3b,0x203233662e6c6162,0x255b202c31316625\n"
".quad 0x0a3b5d3030316c72,0x203436732e646461,0x202c3130316c7225,0x33202c34396c7225\n"
".quad 0x6f6c2e0a3b343835,0x3434373120322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3230316c,0x7225202c3130316c,0x7225202c3631326c,0x6c68730a3b38366c\n"
".quad 0x6c7225203436622e,0x6c7225202c333031,0x3b3233202c323031,0x3436732e7268730a\n"
".quad 0x2c3430316c722520,0x2c3330316c722520,0x6f6c2e0a3b323320,0x3434373120322063\n"
".quad 0x622e6c68730a3120,0x30316c7225203436,0x30316c7225202c35,0x64610a3b32202c34\n"
".quad 0x7225203436732e64,0x7225202c3630316c,0x316c7225202c336c,0x672e646c0a3b3530\n"
".quad 0x33662e6c61626f6c,0x202c323166252032,0x5d3630316c72255b,0x36732e6464610a3b\n"
".quad 0x3730316c72252034,0x2c34396c7225202c,0x2e0a3b3639303420,0x3731203220636f6c\n"
".quad 0x64616d0a31203534,0x203436732e6f6c2e,0x202c3830316c7225,0x202c3730316c7225\n"
".quad 0x202c3631326c7225,0x730a3b31366c7225,0x25203436622e6c68,0x25202c3930316c72\n"
".quad 0x33202c3830316c72,0x732e7268730a3b32,0x31316c7225203436,0x30316c7225202c30\n"
".quad 0x2e0a3b3233202c39,0x3731203220636f6c,0x6c68730a31203534,0x6c7225203436622e\n"
".quad 0x6c7225202c313131,0x0a3b32202c303131,0x203436732e646461,0x202c3231316c7225\n"
".quad 0x7225202c336c7225,0x646c0a3b3131316c,0x2e6c61626f6c672e,0x3331662520323366\n"
".quad 0x31316c72255b202c,0x636f6c2e0a3b5d32,0x2036343731203220,0x6220317025400a31\n"
".quad 0x5f30334242206172,0x636f6c2e0a0a3b33,0x2030363731203220,0x33662e6464610a31\n"
".quad 0x202c303266252032,0x366625202c356625,0x33662e6464610a3b,0x202c313266252032\n"
".quad 0x6625202c30326625,0x662e6464610a3b38,0x2c32326625203233,0x25202c3132662520\n"
".quad 0x2e6464610a3b3766,0x3332662520323366,0x202c32326625202c,0x64610a3b31316625\n"
".quad 0x6625203233662e64,0x33326625202c3432,0x610a3b396625202c,0x25203233662e6464\n"
".quad 0x326625202c353266,0x3b30316625202c34,0x3233662e6464610a,0x25202c3632662520\n"
".quad 0x316625202c353266,0x662e6464610a3b32,0x2c37326625203233,0x25202c3632662520\n"
".quad 0x6275730a3b333166,0x326625203233662e,0x202c366625202c38,0x6464610a3b376625\n"
".quad 0x326625203233662e,0x2c38326625202c39,0x75730a3b39662520,0x6625203233662e62\n"
".quad 0x39326625202c3033,0x0a3b30316625202c,0x203233662e627573,0x6625202c31336625\n"
".quad 0x32316625202c3033,0x33662e6464610a3b,0x202c323366252032,0x6625202c31336625\n"
".quad 0x2e6275730a3b3331,0x3333662520323366,0x25202c386625202c,0x6464610a3b313166\n"
".quad 0x336625203233662e,0x2c33336625202c34,0x64610a3b39662520,0x6625203233662e64\n"
".quad 0x34336625202c3533,0x0a3b30316625202c,0x203233662e627573,0x6625202c36336625\n"
".quad 0x32316625202c3533,0x33662e6275730a3b,0x202c373366252032,0x6625202c36336625\n"
".quad 0x2e6c756d0a3b3331,0x3833662520323366,0x202c37336625202c,0x6d660a3b37336625\n"
".quad 0x3233662e6e722e61,0x25202c3933662520,0x336625202c323366,0x3b38336625202c32\n"
".quad 0x3233662e766f6d0a,0x30202c3034662520,0x3030303043463366,0x20636f6c2e0a3b30\n"
".quad 0x3120303637312032,0x3233662e67656e0a,0x25202c3134662520,0x616d660a3b393366\n"
".quad 0x203233662e6e722e,0x6625202c32346625,0x30346625202c3134,0x0a3b37326625202c\n"
".quad 0x662e6e722e616d66,0x2c33346625203233,0x30202c3234662520,0x3345383345454266\n"
".quad 0x0a3b356625202c39,0x203233662e67656e,0x6625202c34346625,0x702e646c0a3b3334\n"
".quad 0x3233662e6d617261,0x202c333432662520,0x5f524c36315a5f5b,0x495f434441425f64\n"
".quad 0x536650707265746e,0x7261705f666d665f,0x2e0a3b5d325f6d61,0x3731203220636f6c\n"
".quad 0x616d660a31203036,0x203233662e6e722e,0x6625202c35346625,0x34326625202c3434\n"
".quad 0x0a3b356625202c33,0x203233662e766f6d,0x6630202c36346625,0x3030303030343034\n"
".quad 0x3220636f6c2e0a3b,0x0a31203036373120,0x662e6e722e616d66,0x2c37346625203233\n"
".quad 0x30202c3233662520,0x3030303034303466,0x3b37326625202c30,0x3233662e6c756d0a\n"
".quad 0x25202c3834662520,0x346630202c323366,0x3b30303030303930,0x2e6e722e616d660a\n"
".quad 0x3934662520323366,0x202c38346625202c,0x6625202c32336625,0x2e616d660a3b3734\n"
".quad 0x25203233662e6e72,0x346625202c303566,0x2c30346625202c31,0x6d0a3b3934662520\n"
".quad 0x25203233662e766f,0x336630202c313566,0x3b39334538334544,0x203220636f6c2e0a\n"
".quad 0x6e0a312030363731,0x25203233662e6765,0x356625202c323566,0x722e616d660a3b30\n"
".quad 0x6625203233662e6e,0x32356625202c3335,0x202c31356625202c,0x67656e0a3b366625\n"
".quad 0x356625203233662e,0x3b33356625202c34,0x2e6e722e616d660a,0x3535662520323366\n"
".quad 0x202c34356625202c,0x25202c3334326625,0x2e616d660a3b3666,0x25203233662e6e72\n"
".quad 0x336625202c363566,0x3430346630202c37,0x25202c3030303030,0x6c756d0a3b373266\n"
".quad 0x356625203233662e,0x2c37336625202c37,0x3030393034663020,0x616d660a3b303030\n"
".quad 0x203233662e6e722e,0x6625202c38356625,0x37336625202c3735,0x0a3b36356625202c\n"
".quad 0x662e6e722e616d66,0x2c39356625203233,0x25202c3134662520,0x356625202c303466\n"
".quad 0x662e67656e0a3b38,0x2c30366625203233,0x660a3b3935662520,0x33662e6e722e616d\n"
".quad 0x202c313666252032,0x6625202c30366625,0x3b386625202c3135,0x3233662e67656e0a\n"
".quad 0x25202c3236662520,0x616d660a3b313666,0x203233662e6e722e,0x6625202c33366625\n"
".quad 0x34326625202c3236,0x0a3b386625202c33,0x203233662e67656e,0x6625202c34366625\n"
".quad 0x2e616d660a3b3233,0x25203233662e6e72,0x366625202c353666,0x2c36346625202c34\n"
".quad 0x660a3b3732662520,0x33662e6e722e616d,0x202c363666252032,0x6625202c38346625\n"
".quad 0x35366625202c3233,0x6e722e616d660a3b,0x366625203233662e,0x2c31346625202c37\n"
".quad 0x25202c3034662520,0x67656e0a3b363666,0x366625203233662e,0x3b37366625202c38\n"
".quad 0x2e6e722e616d660a,0x3936662520323366,0x202c38366625202c,0x6625202c31356625\n"
".quad 0x662e67656e0a3b37,0x2c30376625203233,0x660a3b3936662520,0x33662e6e722e616d\n"
".quad 0x202c313766252032,0x6625202c30376625,0x376625202c333432,0x33662e67656e0a3b\n"
".quad 0x202c323766252032,0x6d660a3b37336625,0x3233662e6e722e61,0x25202c3337662520\n"
".quad 0x346625202c323766,0x3b37326625202c36,0x2e6e722e616d660a,0x3437662520323366\n"
".quad 0x202c37356625202c,0x6625202c37336625,0x2e616d660a3b3337,0x25203233662e6e72\n"
".quad 0x346625202c353766,0x2c30346625202c31,0x6e0a3b3437662520,0x25203233662e6765\n"
".quad 0x376625202c363766,0x722e616d660a3b35,0x6625203233662e6e,0x36376625202c3737\n"
".quad 0x202c31356625202c,0x656e0a3b31316625,0x6625203233662e67,0x37376625202c3837\n"
".quad 0x6e722e616d660a3b,0x376625203233662e,0x2c38376625202c39,0x202c333432662520\n"
".quad 0x64610a3b31316625,0x6625203233662e64,0x32336625202c3038,0x0a3b37336625202c\n"
".quad 0x662e6e722e616d66,0x2c31386625203233,0x30202c3038662520,0x3030303034303466\n"
".quad 0x3b37326625202c30,0x3233662e6c756d0a,0x25202c3238662520,0x346630202c303866\n"
".quad 0x3b30303030303930,0x2e6e722e616d660a,0x3338662520323366,0x202c32386625202c\n"
".quad 0x6625202c30386625,0x2e616d660a3b3138,0x25203233662e6e72,0x346625202c343866\n"
".quad 0x2c30346625202c31,0x630a3b3338662520,0x662e3436662e7476,0x2c31646625203233\n"
".quad 0x6d0a3b3438662520,0x25203436662e766f,0x336430202c326466,0x3137433137433946\n"
".quad 0x3b43314438423743,0x203220636f6c2e0a,0x630a312030363731,0x662e3436662e7476\n"
".quad 0x2c33646625203233,0x656e0a3b39662520,0x6625203436662e67,0x31646625202c3464\n"
".quad 0x6e722e616d660a3b,0x646625203436662e,0x2c34646625202c35,0x25202c3264662520\n"
".quad 0x7476630a3b336466,0x3233662e3436662e,0x25202c3664662520,0x656e0a3b33343266\n"
".quad 0x6625203436662e67,0x36646625202c3764,0x6e722e616d660a3b,0x646625203436662e\n"
".quad 0x2c37646625202c38,0x25202c3564662520,0x7476630a3b336466,0x2e3233662e6e722e\n"
".quad 0x3538662520343666,0x0a3b38646625202c,0x203233662e627573,0x6625202c36386625\n"
".quad 0x32336625202c3733,0x3220636f6c2e0a3b,0x0a31203036373120,0x662e6e722e616d66\n"
".quad 0x2c37386625203233,0x30202c3638662520,0x3030303034303466,0x3b37326625202c30\n"
".quad 0x3233662e6c756d0a,0x25202c3838662520,0x346630202c363866,0x3b30303030303930\n"
".quad 0x2e6e722e616d660a,0x3938662520323366,0x202c38386625202c,0x6625202c36386625\n"
".quad 0x2e616d660a3b3738,0x25203233662e6e72,0x346625202c303966,0x2c30346625202c31\n"
".quad 0x630a3b3938662520,0x662e3436662e7476,0x2c39646625203233,0x630a3b3039662520\n"
".quad 0x662e3436662e7476,0x3031646625203233,0x0a3b30316625202c,0x203436662e67656e\n"
".quad 0x25202c3131646625,0x616d660a3b396466,0x203436662e6e722e,0x25202c3231646625\n"
".quad 0x6625202c31316466,0x31646625202c3264,0x722e616d660a3b30,0x6625203436662e6e\n"
".quad 0x646625202c333164,0x3231646625202c37,0x3b3031646625202c,0x2e6e722e7476630a\n"
".quad 0x203436662e323366,0x6625202c31396625,0x6275730a3b333164,0x396625203233662e\n"
".quad 0x2c34366625202c32,0x660a3b3733662520,0x33662e6e722e616d,0x202c333966252032\n"
".quad 0x6630202c32396625,0x3030303030343034,0x0a3b37326625202c,0x203233662e6c756d\n"
".quad 0x6625202c34396625,0x30346630202c3239,0x0a3b303030303039,0x662e6e722e616d66\n"
".quad 0x2c35396625203233,0x25202c3439662520,0x396625202c323966,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x31346625202c3639,0x202c30346625202c,0x76630a3b35396625\n"
".quad 0x33662e3436662e74,0x2c34316466252032,0x630a3b3639662520,0x662e3436662e7476\n"
".quad 0x3531646625203233,0x0a3b32316625202c,0x203436662e67656e,0x25202c3631646625\n"
".quad 0x6d660a3b34316466,0x3436662e6e722e61,0x202c373164662520,0x25202c3631646625\n"
".quad 0x646625202c326466,0x2e616d660a3b3531,0x25203436662e6e72,0x6625202c38316466\n"
".quad 0x31646625202c3764,0x3531646625202c37,0x6e722e7476630a3b,0x3436662e3233662e\n"
".quad 0x25202c3739662520,0x75730a3b38316466,0x6625203233662e62,0x32336625202c3839\n"
".quad 0x0a3b37336625202c,0x662e6e722e616d66,0x2c39396625203233,0x30202c3839662520\n"
".quad 0x3030303034303466,0x3b37326625202c30,0x3233662e6c756d0a,0x202c303031662520\n"
".quad 0x6630202c38396625,0x3030303030393034,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x30316625202c3130,0x2c38396625202c30,0x660a3b3939662520,0x33662e6e722e616d\n"
".quad 0x2c32303166252032,0x25202c3134662520,0x316625202c303466,0x2e7476630a3b3130\n"
".quad 0x203233662e343666,0x25202c3931646625,0x76630a3b32303166,0x33662e3436662e74\n"
".quad 0x2c30326466252032,0x6e0a3b3331662520,0x25203436662e6765,0x6625202c31326466\n"
".quad 0x616d660a3b393164,0x203436662e6e722e,0x25202c3232646625,0x6625202c31326466\n"
".quad 0x32646625202c3264,0x722e616d660a3b30,0x6625203436662e6e,0x646625202c333264\n"
".quad 0x3232646625202c37,0x3b3032646625202c,0x2e6e722e7476630a,0x203436662e323366\n"
".quad 0x25202c3330316625,0x646c0a3b33326466,0x752e6d617261702e,0x31326c7225203436\n"
".quad 0x36315a5f5b202c35,0x4441425f645f524c,0x707265746e495f43,0x5f666d665f536650\n"
".quad 0x5d335f6d61726170,0x3220636f6c2e0a3b,0x0a31203338363120,0x732e6f6c2e64616d\n"
".quad 0x31316c7225203436,0x2c356c7225202c35,0x2c3531326c722520,0x6c0a3b346c722520\n"
".quad 0x2e6d617261702e64,0x326c722520343675,0x315a5f5b202c3231,0x41425f645f524c36\n"
".quad 0x7265746e495f4344,0x666d665f53665070,0x315f6d617261705f,0x2e617476630a3b5d\n"
".quad 0x61626f6c672e6f74,0x7225203436752e6c,0x7225202c3631316c,0x68730a3b3231326c\n"
".quad 0x7225203436622e6c,0x7225202c3731316c,0x3233202c3531316c,0x36732e7268730a3b\n"
".quad 0x3831316c72252034,0x3731316c7225202c,0x6c2e0a3b3233202c,0x303731203220636f\n"
".quad 0x2e6c68730a312037,0x316c722520343662,0x316c7225202c3931,0x610a3b32202c3831\n"
".quad 0x25203436732e6464,0x25202c3032316c72,0x25202c3631316c72,0x2e0a3b3931316c72\n"
".quad 0x3731203220636f6c,0x2e74730a31203236,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x346625202c5d3032,0x20636f6c2e0a3b35,0x3120383037312032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3232,0x31326c7225202c36,0x3b346c7225202c35\n"
".quad 0x3436622e6c68730a,0x2c3332316c722520,0x2c3232316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c343231,0x3b3233202c333231,0x203220636f6c2e0a\n"
".quad 0x730a312038303731,0x25203436622e6c68,0x25202c3532316c72,0x32202c3432316c72\n"
".quad 0x36732e6464610a3b,0x3632316c72252034,0x3631316c7225202c,0x3532316c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203336373120,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3632316c72,0x6c2e0a3b35356625,0x303731203220636f,0x2e64616d0a312039\n"
".quad 0x25203436732e6f6c,0x25202c3832316c72,0x7225202c32326c72,0x7225202c3531326c\n"
".quad 0x2e6c68730a3b346c,0x316c722520343662,0x316c7225202c3932,0x0a3b3233202c3832\n"
".quad 0x203436732e726873,0x202c3033316c7225,0x202c3932316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2039303731203220,0x36622e6c68730a31,0x3133316c72252034,0x3033316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c323331,0x6c7225202c363131\n"
".quad 0x6f6c2e0a3b313331,0x3436373120322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3233316c72255b20,0x3b33366625202c5d,0x203220636f6c2e0a,0x6d0a312030313731\n"
".quad 0x36732e6f6c2e6461,0x3433316c72252034,0x2c37326c7225202c,0x2c3531326c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3533316c72,0x33202c3433316c72\n"
".quad 0x732e7268730a3b32,0x33316c7225203436,0x33316c7225202c36,0x2e0a3b3233202c35\n"
".quad 0x3731203220636f6c,0x6c68730a31203031,0x6c7225203436622e,0x6c7225202c373331\n"
".quad 0x0a3b32202c363331,0x203436732e646461,0x202c3833316c7225,0x202c3631316c7225\n"
".quad 0x0a3b3733316c7225,0x31203220636f6c2e,0x74730a3120353637,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d383331,0x636f6c2e0a3b3137,0x2031313731203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c303431,0x326c7225202c3233\n"
".quad 0x346c7225202c3531,0x36622e6c68730a3b,0x3134316c72252034,0x3034316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3234316c,0x3233202c3134316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203131373120,0x203436622e6c6873,0x202c3334316c7225\n"
".quad 0x202c3234316c7225,0x732e6464610a3b32,0x34316c7225203436,0x31316c7225202c34\n"
".quad 0x34316c7225202c36,0x20636f6c2e0a3b33,0x3120363637312032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3434316c7225,0x2e0a3b3937662520,0x3731203220636f6c\n"
".quad 0x64616d0a31203231,0x203436732e6f6c2e,0x202c3634316c7225,0x25202c37336c7225\n"
".quad 0x25202c3531326c72,0x6c68730a3b346c72,0x6c7225203436622e,0x6c7225202c373431\n"
".quad 0x3b3233202c363431,0x3436732e7268730a,0x2c3834316c722520,0x2c3734316c722520\n"
".quad 0x6f6c2e0a3b323320,0x3231373120322063,0x622e6c68730a3120,0x34316c7225203436\n"
".quad 0x34316c7225202c39,0x64610a3b32202c38,0x7225203436732e64,0x7225202c3035316c\n"
".quad 0x7225202c3631316c,0x6c2e0a3b3934316c,0x363731203220636f,0x672e74730a312037\n"
".quad 0x33662e6c61626f6c,0x35316c72255b2032,0x35386625202c5d30,0x3220636f6c2e0a3b\n"
".quad 0x0a31203331373120,0x732e6f6c2e64616d,0x35316c7225203436,0x32346c7225202c32\n"
".quad 0x3531326c7225202c,0x0a3b346c7225202c,0x203436622e6c6873,0x202c3335316c7225\n"
".quad 0x202c3235316c7225,0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3435\n"
".quad 0x0a3b3233202c3335,0x31203220636f6c2e,0x68730a3120333137,0x7225203436622e6c\n"
".quad 0x7225202c3535316c,0x3b32202c3435316c,0x3436732e6464610a,0x2c3635316c722520\n"
".quad 0x2c3631316c722520,0x3b3535316c722520,0x203220636f6c2e0a,0x730a312038363731\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3635316c,0x6f6c2e0a3b313966\n"
".quad 0x3431373120322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3835316c\n"
".quad 0x6c7225202c37346c,0x6c7225202c353132,0x622e6c68730a3b34,0x35316c7225203436\n"
".quad 0x35316c7225202c39,0x730a3b3233202c38,0x25203436732e7268,0x25202c3036316c72\n"
".quad 0x33202c3935316c72,0x20636f6c2e0a3b32,0x3120343137312032,0x3436622e6c68730a\n"
".quad 0x2c3136316c722520,0x2c3036316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x316c7225202c3236,0x316c7225202c3631,0x636f6c2e0a3b3136,0x2039363731203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3236316c72255b,0x0a3b37396625202c\n"
".quad 0x31203220636f6c2e,0x74730a3120303737,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x316625202c5d3431,0x636f6c2e0a3b3330,0x2033373731203220,0x0a0a3b7465720a32\n"
".quad 0x0a3a335f30334242,0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c343132\n"
".quad 0x425f645f524c3631,0x65746e495f434441,0x6d665f5366507072,0x5f6d617261705f66\n"
".quad 0x636f6c2e0a3b5d33,0x2038303731203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c363631,0x326c7225202c3631,0x346c7225202c3431,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3131326c72,0x645f524c36315a5f,0x6e495f434441425f\n"
".quad 0x5f53665070726574,0x617261705f666d66,0x76630a3b5d315f6d,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x2c3736316c722520,0x3b3131326c722520,0x3436622e6c68730a\n"
".quad 0x2c3836316c722520,0x2c3636316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c393631,0x3b3233202c383631,0x203220636f6c2e0a,0x730a312038303731\n"
".quad 0x25203436622e6c68,0x25202c3037316c72,0x32202c3936316c72,0x36732e6464610a3b\n"
".quad 0x3137316c72252034,0x3736316c7225202c,0x3037316c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203734373120,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3137316c72\n"
".quad 0x6f6c2e0a3b376625,0x3930373120322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3337316c,0x6c7225202c32326c,0x6c7225202c343132,0x622e6c68730a3b34\n"
".quad 0x37316c7225203436,0x37316c7225202c34,0x730a3b3233202c33,0x25203436732e7268\n"
".quad 0x25202c3537316c72,0x33202c3437316c72,0x20636f6c2e0a3b32,0x3120393037312032\n"
".quad 0x3436622e6c68730a,0x2c3637316c722520,0x2c3537316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x316c7225202c3737,0x316c7225202c3736,0x636f6c2e0a3b3637\n"
".quad 0x2038343731203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3737316c72255b\n"
".quad 0x0a3b31316625202c,0x31203220636f6c2e,0x616d0a3120303137,0x3436732e6f6c2e64\n"
".quad 0x2c3937316c722520,0x202c37326c722520,0x202c3431326c7225,0x68730a3b346c7225\n"
".quad 0x7225203436622e6c,0x7225202c3038316c,0x3233202c3937316c,0x36732e7268730a3b\n"
".quad 0x3138316c72252034,0x3038316c7225202c,0x6c2e0a3b3233202c,0x313731203220636f\n"
".quad 0x2e6c68730a312030,0x316c722520343662,0x316c7225202c3238,0x610a3b32202c3138\n"
".quad 0x25203436732e6464,0x25202c3338316c72,0x25202c3736316c72,0x2e0a3b3238316c72\n"
".quad 0x3731203220636f6c,0x2e74730a31203934,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x366625202c5d3338,0x3220636f6c2e0a3b,0x0a31203131373120,0x732e6f6c2e64616d\n"
".quad 0x38316c7225203436,0x32336c7225202c35,0x3431326c7225202c,0x0a3b346c7225202c\n"
".quad 0x203436622e6c6873,0x202c3638316c7225,0x202c3538316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3738,0x0a3b3233202c3638,0x31203220636f6c2e\n"
".quad 0x68730a3120313137,0x7225203436622e6c,0x7225202c3838316c,0x3b32202c3738316c\n"
".quad 0x3436732e6464610a,0x2c3938316c722520,0x2c3736316c722520,0x3b3838316c722520\n"
".quad 0x203220636f6c2e0a,0x730a312030353731,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3938316c,0x636f6c2e0a3b3866,0x2032313731203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c313931,0x326c7225202c3733,0x346c7225202c3431\n"
".quad 0x36622e6c68730a3b,0x3239316c72252034,0x3139316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3339316c,0x3233202c3239316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203231373120,0x203436622e6c6873,0x202c3439316c7225,0x202c3339316c7225\n"
".quad 0x732e6464610a3b32,0x39316c7225203436,0x36316c7225202c35,0x39316c7225202c37\n"
".quad 0x20636f6c2e0a3b34,0x3120313537312032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3539316c7225,0x2e0a3b3231662520,0x3731203220636f6c,0x64616d0a31203331\n"
".quad 0x203436732e6f6c2e,0x202c3739316c7225,0x25202c32346c7225,0x25202c3431326c72\n"
".quad 0x6c68730a3b346c72,0x6c7225203436622e,0x6c7225202c383931,0x3b3233202c373931\n"
".quad 0x3436732e7268730a,0x2c3939316c722520,0x2c3839316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3331373120322063,0x622e6c68730a3120,0x30326c7225203436,0x39316c7225202c30\n"
".quad 0x64610a3b32202c39,0x7225203436732e64,0x7225202c3130326c,0x7225202c3736316c\n"
".quad 0x6c2e0a3b3030326c,0x353731203220636f,0x672e74730a312032,0x33662e6c61626f6c\n"
".quad 0x30326c72255b2032,0x33316625202c5d31,0x3220636f6c2e0a3b,0x0a31203335373120\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d33316c72,0x636f6c2e0a3b3966\n"
".quad 0x2034353731203220,0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d34316c72255b\n"
".quad 0x2e0a3b3031662520,0x3731203220636f6c,0x7465720a32203337,0x5f303342420a0a3b\n"
".quad 0x20636f6c2e0a3a34,0x3120313936312032,0x3233662e6464610a,0x202c363531662520\n"
".quad 0x336630202c336625,0x3b30303030303046,0x3233662e6464610a,0x202c373531662520\n"
".quad 0x336630202c346625,0x3b30303030303046,0x3233752e766f6d0a,0x30202c3635722520\n"
".quad 0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32,0x6625202c34303166\n"
".quad 0x316625202c353031,0x30316625202c3630,0x7865745b202c7d37,0x2c4130665f666552\n"
".quad 0x2c36353166257b20,0x5d7d373531662520,0x6574090a090a0a3b,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x202c30313166257b,0x25202c3131316625,0x6625202c32313166\n"
".quad 0x745b202c7d333131,0x31665f6665527865,0x353166257b202c41,0x3735316625202c36\n"
".quad 0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34,0x36313166257b2032\n"
".quad 0x2c3731316625202c,0x202c383131662520,0x202c7d3931316625,0x5f6665527865745b\n"
".quad 0x66257b202c413266,0x316625202c363531,0x090a0a3b5d7d3735,0x64322e786574090a\n"
".quad 0x2e3233662e34762e,0x3166257b20323366,0x32316625202c3232,0x3432316625202c33\n"
".quad 0x7d3532316625202c,0x65527865745b202c,0x7b202c4133665f66,0x25202c3635316625\n"
".quad 0x0a3b5d7d37353166,0x2e786574090a090a,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x6625202c38323166,0x316625202c393231,0x33316625202c3033,0x7865745b202c7d31\n"
".quad 0x2c4134665f666552,0x2c36353166257b20,0x5d7d373531662520,0x6574090a090a0a3b\n"
".quad 0x2e34762e64322e78,0x203233662e323366,0x202c34333166257b,0x25202c3533316625\n"
".quad 0x6625202c36333166,0x745b202c7d373331,0x35665f6665527865,0x353166257b202c41\n"
".quad 0x3735316625202c36,0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x30343166257b2032,0x2c3134316625202c,0x202c323431662520,0x202c7d3334316625\n"
".quad 0x5f6665527865745b,0x66257b202c413666,0x316625202c363531,0x090a0a3b5d7d3735\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3166257b20323366,0x34316625202c3634\n"
".quad 0x3834316625202c37,0x7d3934316625202c,0x65527865745b202c,0x7b202c4137665f66\n"
".quad 0x25202c3635316625,0x0a3b5d7d37353166,0x2e786574090a090a,0x33662e34762e6432\n"
".quad 0x257b203233662e32,0x6625202c32353166,0x316625202c333531,0x35316625202c3435\n"
".quad 0x7865745b202c7d35,0x2c4138665f666552,0x2c36353166257b20,0x5d7d373531662520\n"
".quad 0x636f6c2e090a0a3b,0x2032303731203220,0x33662e6464610a31,0x2c38353166252032\n"
".quad 0x202c343031662520,0x610a3b3031316625,0x25203233662e6464,0x6625202c39353166\n"
".quad 0x316625202c383531,0x2e6464610a3b3631,0x3631662520323366,0x3935316625202c30\n"
".quad 0x3b3232316625202c,0x3233662e6464610a,0x202c313631662520,0x25202c3036316625\n"
".quad 0x64610a3b38323166,0x6625203233662e64,0x316625202c323631,0x33316625202c3136\n"
".quad 0x662e6464610a3b34,0x3336316625203233,0x2c3236316625202c,0x0a3b303431662520\n"
".quad 0x203233662e646461,0x25202c3436316625,0x6625202c33363166,0x6464610a3b363431\n"
".quad 0x316625203233662e,0x36316625202c3536,0x3235316625202c34,0x3220636f6c2e0a3b\n"
".quad 0x0a31203330373120,0x203233662e627573,0x25202c3636316625,0x6625202c30313166\n"
".quad 0x6464610a3b323231,0x316625203233662e,0x36316625202c3736,0x3433316625202c36\n"
".quad 0x33662e6275730a3b,0x2c38363166252032,0x202c373631662520,0x730a3b3034316625\n"
".quad 0x25203233662e6275,0x6625202c39363166,0x316625202c383631,0x2e6464610a3b3634\n"
".quad 0x3731662520323366,0x3936316625202c30,0x3b3235316625202c,0x203220636f6c2e0a\n"
".quad 0x730a312034303731,0x25203233662e6275,0x6625202c31373166,0x316625202c363131\n"
".quad 0x2e6464610a3b3832,0x3731662520323366,0x3137316625202c32,0x3b3433316625202c\n"
".quad 0x3233662e6464610a,0x202c333731662520,0x25202c3237316625,0x75730a3b30343166\n"
".quad 0x6625203233662e62,0x316625202c343731,0x34316625202c3337,0x662e6275730a3b36\n"
".quad 0x3537316625203233,0x2c3437316625202c,0x0a3b323531662520,0x31203220636f6c2e\n"
".quad 0x756d0a3120353037,0x6625203233662e6c,0x316625202c363731,0x37316625202c3537\n"
".quad 0x722e616d660a3b35,0x6625203233662e6e,0x316625202c373731,0x37316625202c3037\n"
".quad 0x3637316625202c30,0x33662e766f6d0a3b,0x2c38373166252032,0x3030434633663020\n"
".quad 0x6f6c2e0a3b303030,0x3830373120322063,0x662e67656e0a3120,0x3937316625203233\n"
".quad 0x3b3737316625202c,0x203220636f6c2e0a,0x660a312037303731,0x33662e6e722e616d\n"
".quad 0x2c30383166252032,0x202c393731662520,0x25202c3837316625,0x756d0a3b35363166\n"
".quad 0x6625203233662e6c,0x316625202c313831,0x45336630202c3038,0x0a3b393345383345\n"
".quad 0x203233662e766f6d,0x30202c3238316625,0x3030303038463366,0x61702e646c0a3b30\n"
".quad 0x203233662e6d6172,0x5b202c3434326625,0x645f524c36315a5f,0x6e495f434441425f\n"
".quad 0x5f53665070726574,0x617261705f666d66,0x6c2e0a3b5d345f6d,0x303731203220636f\n"
".quad 0x2e6275730a312037,0x3831662520323366,0x3238316625202c33,0x3b3434326625202c\n"
".quad 0x3233662e6c756d0a,0x202c343831662520,0x25202c3338316625,0x6d660a3b31383166\n"
".quad 0x3233662e6e722e61,0x202c353831662520,0x25202c3430316625,0x6625202c34343266\n"
".quad 0x7476630a3b343831,0x3233752e3436752e,0x2c3230326c722520,0x6c2e0a3b31722520\n"
".quad 0x383631203220636f,0x2e7476630a312033,0x203233752e343675,0x202c3330326c7225\n"
".quad 0x2e646c0a3b327225,0x36752e6d61726170,0x3331326c72252034,0x4c36315a5f5b202c\n"
".quad 0x434441425f645f52,0x50707265746e495f,0x705f666d665f5366,0x3b5d335f6d617261\n"
".quad 0x203220636f6c2e0a,0x6d0a312033383631,0x36732e6f6c2e6461,0x3430326c72252034\n"
".quad 0x3330326c7225202c,0x3331326c7225202c,0x3230326c7225202c,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3031326c72,0x645f524c36315a5f,0x6e495f434441425f\n"
".quad 0x5f53665070726574,0x617261705f666d66,0x76630a3b5d315f6d,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x2c3530326c722520,0x3b3031326c722520,0x3436622e6c68730a\n"
".quad 0x2c3630326c722520,0x2c3430326c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c373032,0x3b3233202c363032,0x203220636f6c2e0a,0x730a312037303731\n"
".quad 0x25203436622e6c68,0x25202c3830326c72,0x32202c3730326c72,0x36732e6464610a3b\n"
".quad 0x3930326c72252034,0x3530326c7225202c,0x3830326c7225202c,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x5d3930326c72255b,0x3b3538316625202c,0x3233662e766f6d0a\n"
".quad 0x202c363831662520,0x3030303430346630,0x636f6c2e0a3b3030,0x2038303731203220\n"
".quad 0x6e722e616d660a31,0x316625203233662e,0x37316625202c3738,0x3430346630202c30\n"
".quad 0x25202c3030303030,0x756d0a3b35363166,0x6625203233662e6c,0x316625202c383831\n"
".quad 0x30346630202c3037,0x0a3b303030303039,0x662e6e722e616d66,0x3938316625203233\n"
".quad 0x2c3838316625202c,0x202c303731662520,0x660a3b3738316625,0x33662e6e722e616d\n"
".quad 0x2c30393166252032,0x202c393731662520,0x25202c3837316625,0x756d0a3b39383166\n"
".quad 0x6625203233662e6c,0x316625202c313931,0x44336630202c3039,0x0a3b393345383345\n"
".quad 0x203233662e6c756d,0x25202c3239316625,0x6625202c33383166,0x616d660a3b313931\n"
".quad 0x203233662e6e722e,0x25202c3339316625,0x6625202c30313166,0x316625202c343432\n"
".quad 0x672e74730a3b3239,0x33662e6c61626f6c,0x5d376c72255b2032,0x3b3339316625202c\n"
".quad 0x203220636f6c2e0a,0x660a312039303731,0x33662e6e722e616d,0x2c34393166252032\n"
".quad 0x202c353731662520,0x3030303430346630,0x36316625202c3030,0x662e6c756d0a3b35\n"
".quad 0x3539316625203233,0x2c3537316625202c,0x3030393034663020,0x616d660a3b303030\n"
".quad 0x203233662e6e722e,0x25202c3639316625,0x6625202c35393166,0x316625202c353731\n"
".quad 0x2e616d660a3b3439,0x25203233662e6e72,0x6625202c37393166,0x316625202c393731\n"
".quad 0x39316625202c3837,0x662e6c756d0a3b36,0x3839316625203233,0x2c3739316625202c\n"
".quad 0x3833454433663020,0x6c756d0a3b393345,0x316625203233662e,0x38316625202c3939\n"
".quad 0x3839316625202c33,0x6e722e616d660a3b,0x326625203233662e,0x31316625202c3030\n"
".quad 0x3434326625202c36,0x3b3939316625202c,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x25202c5d386c7225,0x6c2e0a3b30303266,0x313731203220636f,0x2e67656e0a312030\n"
".quad 0x3032662520323366,0x3037316625202c31,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x30326625202c3230,0x3638316625202c31,0x3b3536316625202c,0x2e6e722e616d660a\n"
".quad 0x3032662520323366,0x3838316625202c33,0x2c3037316625202c,0x0a3b323032662520\n"
".quad 0x662e6e722e616d66,0x3430326625203233,0x2c3937316625202c,0x202c383731662520\n"
".quad 0x6d0a3b3330326625,0x25203233662e6c75,0x6625202c35303266,0x336630202c343032\n"
".quad 0x3b39334538334544,0x3233662e6c756d0a,0x202c363032662520,0x25202c3338316625\n"
".quad 0x6d660a3b35303266,0x3233662e6e722e61,0x202c373032662520,0x25202c3232316625\n"
".quad 0x6625202c34343266,0x2e74730a3b363032,0x662e6c61626f6c67,0x396c72255b203233\n"
".quad 0x3730326625202c5d,0x3220636f6c2e0a3b,0x0a31203131373120,0x203233662e67656e\n"
".quad 0x25202c3830326625,0x6d660a3b35373166,0x3233662e6e722e61,0x202c393032662520\n"
".quad 0x25202c3830326625,0x6625202c36383166,0x616d660a3b353631,0x203233662e6e722e\n"
".quad 0x25202c3031326625,0x6625202c35393166,0x326625202c353731,0x2e616d660a3b3930\n"
".quad 0x25203233662e6e72,0x6625202c31313266,0x316625202c393731,0x31326625202c3837\n"
".quad 0x662e6c756d0a3b30,0x3231326625203233,0x2c3131326625202c,0x3833454433663020\n"
".quad 0x6c756d0a3b393345,0x326625203233662e,0x38316625202c3331,0x3231326625202c33\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x32316625202c3431,0x3434326625202c38\n"
".quad 0x3b3331326625202c,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d30316c7225\n"
".quad 0x2e0a3b3431326625,0x3731203220636f6c,0x6c756d0a31203231,0x326625203233662e\n"
".quad 0x33316625202c3531,0x3434326625202c34,0x36662e7476630a3b,0x6625203233662e34\n"
".quad 0x326625202c343264,0x2e7476630a3b3531,0x203233662e343666,0x25202c3532646625\n"
".quad 0x64610a3b33383166,0x6625203233662e64,0x316625202c363132,0x37316625202c3037\n"
".quad 0x722e616d660a3b35,0x6625203233662e6e,0x326625202c373132,0x30346630202c3631\n"
".quad 0x202c303030303034,0x6d0a3b3536316625,0x25203233662e6c75,0x6625202c38313266\n"
".quad 0x346630202c363132,0x3b30303030303930,0x2e6e722e616d660a,0x3132662520323366\n"
".quad 0x3831326625202c39,0x2c3631326625202c,0x0a3b373132662520,0x662e6e722e616d66\n"
".quad 0x3032326625203233,0x2c3937316625202c,0x202c383731662520,0x630a3b3931326625\n"
".quad 0x662e3436662e7476,0x3632646625203233,0x3b3032326625202c,0x3436662e6c756d0a\n"
".quad 0x202c373264662520,0x30202c3632646625,0x4331374339463364,0x3144384237433137\n"
".quad 0x722e616d660a3b43,0x6625203436662e6e,0x646625202c383264,0x32646625202c3532\n"
".quad 0x3432646625202c37,0x6e722e7476630a3b,0x3436662e3233662e,0x202c313232662520\n"
".quad 0x730a3b3832646625,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d31316c\n"
".quad 0x6f6c2e0a3b313232,0x3331373120322063,0x662e6c756d0a3120,0x3232326625203233\n"
".quad 0x2c3034316625202c,0x0a3b343432662520,0x2e3436662e747663,0x3264662520323366\n"
".quad 0x3232326625202c39,0x33662e6275730a3b,0x2c33323266252032,0x202c353731662520\n"
".quad 0x2e0a3b3037316625,0x3731203220636f6c,0x616d660a31203331,0x203233662e6e722e\n"
".quad 0x25202c3432326625,0x6630202c33323266,0x3030303030343034,0x3b3536316625202c\n"
".quad 0x3233662e6c756d0a,0x202c353232662520,0x30202c3332326625,0x3030303039303466\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x326625202c363232,0x32326625202c3532\n"
".quad 0x3432326625202c33,0x6e722e616d660a3b,0x326625203233662e,0x37316625202c3732\n"
".quad 0x3837316625202c39,0x3b3632326625202c,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x32326625202c3033,0x662e6c756d0a3b37,0x3133646625203436,0x2c3033646625202c\n"
".quad 0x3743394633643020,0x3842374331374331,0x616d660a3b433144,0x203436662e6e722e\n"
".quad 0x25202c3233646625,0x6625202c35326466,0x646625202c313364,0x2e7476630a3b3932\n"
".quad 0x662e3233662e6e72,0x3832326625203436,0x3b3233646625202c,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x202c5d32316c7225,0x2e0a3b3832326625,0x3731203220636f6c\n"
".quad 0x6c756d0a31203431,0x326625203233662e,0x34316625202c3932,0x3434326625202c36\n"
".quad 0x36662e7476630a3b,0x6625203233662e34,0x326625202c333364,0x2e6275730a3b3932\n"
".quad 0x3332662520323366,0x3130326625202c30,0x3b3537316625202c,0x2e6e722e616d660a\n"
".quad 0x3332662520323366,0x3033326625202c31,0x303430346630202c,0x6625202c30303030\n"
".quad 0x6c756d0a3b353631,0x326625203233662e,0x33326625202c3233,0x3930346630202c30\n"
".quad 0x660a3b3030303030,0x33662e6e722e616d,0x2c33333266252032,0x202c323332662520\n"
".quad 0x25202c3033326625,0x6d660a3b31333266,0x3233662e6e722e61,0x202c343332662520\n"
".quad 0x25202c3937316625,0x6625202c38373166,0x7476630a3b333332,0x3233662e3436662e\n"
".quad 0x202c343364662520,0x6d0a3b3433326625,0x25203436662e6c75,0x6625202c35336466\n"
".quad 0x336430202c343364,0x3137433137433946,0x3b43314438423743,0x2e6e722e616d660a\n"
".quad 0x3364662520343666,0x3532646625202c36,0x2c3533646625202c,0x0a3b333364662520\n"
".quad 0x662e6e722e747663,0x25203436662e3233,0x6625202c35333266,0x2e74730a3b363364\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x33326625202c5d33,0x20636f6c2e0a3b35\n"
".quad 0x3120353137312032,0x3233662e6c756d0a,0x202c363332662520,0x25202c3235316625\n"
".quad 0x76630a3b34343266,0x33662e3436662e74,0x2c37336466252032,0x0a3b363332662520\n"
".quad 0x203233662e627573,0x25202c3733326625,0x6625202c30373166,0x616d660a3b353731\n"
".quad 0x203233662e6e722e,0x25202c3833326625,0x6630202c37333266,0x3030303030343034\n"
".quad 0x3b3536316625202c,0x3233662e6c756d0a,0x202c393332662520,0x30202c3733326625\n"
".quad 0x3030303039303466,0x722e616d660a3b30,0x6625203233662e6e,0x326625202c303432\n"
".quad 0x33326625202c3933,0x3833326625202c37,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x37316625202c3134,0x3837316625202c39,0x3b3034326625202c,0x3436662e7476630a\n"
".quad 0x646625203233662e,0x34326625202c3833,0x662e6c756d0a3b31,0x3933646625203436\n"
".quad 0x2c3833646625202c,0x3743394633643020,0x3842374331374331,0x616d660a3b433144\n"
".quad 0x203436662e6e722e,0x25202c3034646625,0x6625202c35326466,0x646625202c393364\n"
".quad 0x2e7476630a3b3733,0x662e3233662e6e72,0x3234326625203436,0x3b3034646625202c\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d34316c7225,0x2e0a3b3234326625\n"
".quad 0x3731203220636f6c,0x7465720a32203337,0x6e652e0a0a7d0a3b,0x32315a5f20797274\n"
".quad 0x69735f645f74726d,0x5f536650656c676e,0x7261702e0a286d66,0x203436752e206d61\n"
".quad 0x5f74726d32315a5f,0x656c676e69735f64,0x705f6d665f536650,0x0a2c305f6d617261\n"
".quad 0x2e206d617261702e,0x32315a5f20343675,0x69735f645f74726d,0x5f536650656c676e\n"
".quad 0x6d617261705f6d66,0x7261702e0a2c315f,0x203233662e206d61,0x5f74726d32315a5f\n"
".quad 0x656c676e69735f64,0x705f6d665f536650,0x0a2c325f6d617261,0x2e206d617261702e\n"
".quad 0x32315a5f20343675,0x69735f645f74726d,0x5f536650656c676e,0x6d617261705f6d66\n"
".quad 0x2e0a7b0a290a335f,0x3233662e20676572,0x3e3231323c662520,0x2e206765722e0a3b\n"
".quad 0x3c64662520343666,0x65722e0a3b3e3432,0x20646572702e2067,0x0a3b3e37313c7025\n"
".quad 0x33732e206765722e,0x3e37393c72252032,0x2e206765722e0a3b,0x3c6c722520343673\n"
".quad 0x0a0a0a3b3e363831,0x6d617261702e646c,0x6c7225203436752e,0x32315a5f5b202c31\n"
".quad 0x69735f645f74726d,0x5f536650656c676e,0x6d617261705f6d66,0x2e646c0a3b5d305f\n"
".quad 0x36752e6d61726170,0x202c336c72252034,0x74726d32315a5f5b,0x6c676e69735f645f\n"
".quad 0x5f6d665f53665065,0x5d335f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f\n"
".quad 0x6c7225203436752e,0x3b316c7225202c34,0x203220636f6c2e0a,0x6d0a312037373731\n"
".quad 0x25203233752e766f,0x69746e25202c3472,0x766f6d0a3b782e64,0x357225203233752e\n"
".quad 0x646961746325202c,0x2e766f6d0a3b782e,0x2c36722520323375,0x3b782e6469742520\n"
".quad 0x2e6f6c2e64616d0a,0x2c31722520323373,0x7225202c34722520,0x0a3b367225202c35\n"
".quad 0x31203220636f6c2e,0x6f6d0a3120383737,0x7225203233752e76,0x6469746e25202c37\n"
".quad 0x2e766f6d0a3b792e,0x2c38722520323375,0x2e64696174632520,0x752e766f6d0a3b79\n"
".quad 0x202c397225203233,0x0a3b792e64697425,0x732e6f6c2e64616d,0x202c327225203233\n"
".quad 0x387225202c377225,0x630a3b397225202c,0x752e3436752e7476,0x2c356c7225203233\n"
".quad 0x6c2e0a3b31722520,0x373731203220636f,0x2e7476630a312039,0x203233732e343673\n"
".quad 0x7225202c366c7225,0x6c2e64616d0a3b32,0x7225203436732e6f,0x366c7225202c376c\n"
".quad 0x202c336c7225202c,0x6c2e0a3b356c7225,0x203238203220636f,0x6e722e7476630a31\n"
".quad 0x3233732e3233662e,0x7225202c32662520,0x2e707465730a3b31,0x25203233662e746c\n"
".quad 0x2c326625202c3170,0x4343434433663020,0x7025400a3b444343,0x4242206172622031\n"
".quad 0x0a0a3b30315f3133,0x203233752e766f6d,0x3031202c30317225,0x636f6c2e0a3b3432\n"
".quad 0x0a31203438203220,0x203233732e627573,0x7225202c31317225,0x3b317225202c3031\n"
".quad 0x2e6e722e7476630a,0x203233732e323366,0x7225202c36336625,0x707465730a3b3131\n"
".quad 0x203233662e746c2e,0x336625202c327025,0x3846336630202c36,0x400a3b4443434343\n"
".quad 0x2061726220327025,0x0a3b395f31334242,0x3233752e766f6d0a,0x37202c3231722520\n"
".quad 0x636f6c2e0a3b3836,0x0a31203638203220,0x203233732e627573,0x7225202c33317225\n"
".quad 0x3b327225202c3231,0x2e6e722e7476630a,0x203233732e323366,0x7225202c37336625\n"
".quad 0x707465730a3b3331,0x203233662e746c2e,0x336625202c337025,0x3846336630202c37\n"
".quad 0x400a3b4443434343,0x2061726220337025,0x0a3b385f31334242,0x203220636f6c2e0a\n"
".quad 0x7476630a31203838,0x2e3233662e6e722e,0x2c33662520323373,0x65730a3b32722520\n"
".quad 0x33662e746c2e7074,0x25202c3470252032,0x44336630202c3366,0x0a3b444343434343\n"
".quad 0x6172622034702540,0x3b375f3133424220,0x33662e6464610a0a,0x202c383366252032\n"
".quad 0x436630202c326625,0x3b30303043464633,0x3233662e6464610a,0x25202c3933662520\n"
".quad 0x33436630202c3366,0x0a3b303030434642,0x39203220636f6c2e,0x2e6c756d0a312030\n"
".quad 0x3034662520323366,0x202c39336625202c,0x6d660a3b39336625,0x3233662e6e722e61\n"
".quad 0x25202c3134662520,0x336625202c383366,0x3b30346625202c38,0x746c2e707465730a\n"
".quad 0x357025203233662e,0x202c31346625202c,0x3030303832346630,0x357025400a3b3030\n"
".quad 0x3342422061726220,0x6f6d0a0a3b365f31,0x7225203233752e76,0x620a3b30202c3639\n"
".quad 0x4220696e752e6172,0x0a3b31315f313342,0x3a365f313342420a,0x3233752e766f6d0a\n"
".quad 0x31202c3639722520,0x752e6172620a3b30,0x5f3133424220696e,0x3342420a0a3b3131\n"
".quad 0x766f6d0a3a375f31,0x397225203233752e,0x620a3b3231202c36,0x4220696e752e6172\n"
".quad 0x0a3b31315f313342,0x3a385f313342420a,0x3233752e766f6d0a,0x31202c3639722520\n"
".quad 0x752e6172620a3b31,0x5f3133424220696e,0x3342420a0a3b3131,0x766f6d0a3a395f31\n"
".quad 0x397225203233752e,0x72620a3b32202c36,0x424220696e752e61,0x0a0a3b31315f3133\n"
".quad 0x3a30315f31334242,0x3233752e766f6d0a,0x33202c3639722520,0x5f313342420a0a3b\n"
".quad 0x2e6c68730a3a3131,0x316c722520343662,0x2c376c7225202c30,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x316c7225202c3131,0x2e0a3b3233202c30,0x3731203220636f6c\n"
".quad 0x6c68730a31203638,0x6c7225203436622e,0x316c7225202c3231,0x64610a3b32202c31\n"
".quad 0x7225203436732e64,0x6c7225202c33316c,0x32316c7225202c34,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c346625,0x64610a3b5d33316c,0x7225203233732e64\n"
".quad 0x2c317225202c3132,0x7476630a3b312d20,0x3233752e3436752e,0x202c34316c722520\n"
".quad 0x64610a3b31327225,0x7225203436732e64,0x6c7225202c35316c,0x0a3b383637202c36\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c353831,0x5f645f74726d3231\n"
".quad 0x6650656c676e6973,0x7261705f6d665f53,0x2e0a3b5d335f6d61,0x3731203220636f6c\n"
".quad 0x64616d0a31203738,0x203436732e6f6c2e,0x25202c36316c7225,0x7225202c35316c72\n"
".quad 0x7225202c3538316c,0x6c68730a3b34316c,0x6c7225203436622e,0x316c7225202c3731\n"
".quad 0x730a3b3233202c36,0x25203436732e7268,0x7225202c38316c72,0x3b3233202c37316c\n"
".quad 0x203220636f6c2e0a,0x730a312037383731,0x25203436622e6c68,0x7225202c39316c72\n"
".quad 0x0a3b32202c38316c,0x203436732e646461,0x25202c30326c7225,0x6c7225202c346c72\n"
".quad 0x672e646c0a3b3931,0x33662e6c61626f6c,0x2c31313266252032,0x5d30326c72255b20\n"
".quad 0x3220636f6c2e0a3b,0x0a31203838373120,0x203233732e646461,0x7225202c33327225\n"
".quad 0x76630a3b31202c31,0x33752e3436752e74,0x2c31326c72252032,0x610a3b3332722520\n"
".quad 0x25203436732e6464,0x7225202c32326c72,0x34303332202c366c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203838373120,0x732e6f6c2e64616d,0x33326c7225203436,0x2c32326c7225202c\n"
".quad 0x2c3538316c722520,0x0a3b31326c722520,0x203436622e6c6873,0x25202c34326c7225\n"
".quad 0x3233202c33326c72,0x36732e7268730a3b,0x2c35326c72252034,0x202c34326c722520\n"
".quad 0x636f6c2e0a3b3233,0x2038383731203220,0x36622e6c68730a31,0x2c36326c72252034\n"
".quad 0x202c35326c722520,0x732e6464610a3b32,0x37326c7225203436,0x202c346c7225202c\n"
".quad 0x6c0a3b36326c7225,0x6c61626f6c672e64,0x316625203233662e,0x6c72255b202c3438\n"
".quad 0x6464610a3b5d3732,0x327225203233732e,0x202c327225202c35,0x636f6c2e0a3b312d\n"
".quad 0x2039383731203220,0x36732e7476630a31,0x7225203233732e34,0x327225202c38326c\n"
".quad 0x732e6464610a3b35,0x39326c7225203436,0x2c38326c7225202c,0x2e0a3b3633353120\n"
".quad 0x3731203220636f6c,0x64616d0a31203938,0x203436732e6f6c2e,0x25202c30336c7225\n"
".quad 0x7225202c39326c72,0x7225202c3538316c,0x2e6c68730a3b356c,0x336c722520343662\n"
".quad 0x30336c7225202c31,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c32336c\n"
".quad 0x0a3b3233202c3133,0x31203220636f6c2e,0x68730a3120393837,0x7225203436622e6c\n"
".quad 0x6c7225202c33336c,0x610a3b32202c3233,0x25203436732e6464,0x7225202c34336c72\n"
".quad 0x336c7225202c346c,0x6c672e646c0a3b33,0x3233662e6c61626f,0x255b202c37662520\n"
".quad 0x610a3b5d34336c72,0x25203436732e6464,0x7225202c35336c72,0x343833202c38326c\n"
".quad 0x20636f6c2e0a3b30,0x3120303937312032,0x2e6f6c2e64616d0a,0x336c722520343673\n"
".quad 0x35336c7225202c36,0x3538316c7225202c,0x3b34316c7225202c,0x3436622e6c68730a\n"
".quad 0x202c37336c722520,0x33202c36336c7225,0x732e7268730a3b32,0x38336c7225203436\n"
".quad 0x2c37336c7225202c,0x6f6c2e0a3b323320,0x3039373120322063,0x622e6c68730a3120\n"
".quad 0x39336c7225203436,0x2c38336c7225202c,0x2e6464610a3b3220,0x346c722520343673\n"
".quad 0x2c346c7225202c30,0x0a3b39336c722520,0x61626f6c672e646c,0x6625203233662e6c\n"
".quad 0x346c72255b202c38,0x2e6464610a3b5d30,0x346c722520343673,0x38326c7225202c31\n"
".quad 0x0a3b38303634202c,0x31203220636f6c2e,0x616d0a3120313937,0x3436732e6f6c2e64\n"
".quad 0x202c32346c722520,0x25202c31346c7225,0x25202c3538316c72,0x68730a3b31326c72\n"
".quad 0x7225203436622e6c,0x6c7225202c33346c,0x0a3b3233202c3234,0x203436732e726873\n"
".quad 0x25202c34346c7225,0x3233202c33346c72,0x3220636f6c2e0a3b,0x0a31203139373120\n"
".quad 0x203436622e6c6873,0x25202c35346c7225,0x3b32202c34346c72,0x3436732e6464610a\n"
".quad 0x202c36346c722520,0x7225202c346c7225,0x2e646c0a3b35346c,0x662e6c61626f6c67\n"
".quad 0x202c396625203233,0x3b5d36346c72255b,0x203220636f6c2e0a,0x610a312032393731\n"
".quad 0x25203233732e6464,0x327225202c393272,0x7476630a3b31202c,0x3233732e3436732e\n"
".quad 0x202c37346c722520,0x64610a3b39327225,0x7225203436732e64,0x6c7225202c38346c\n"
".quad 0x32373033202c3734,0x3220636f6c2e0a3b,0x0a31203239373120,0x732e6f6c2e64616d\n"
".quad 0x39346c7225203436,0x2c38346c7225202c,0x2c3538316c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x7225202c30356c72,0x3b3233202c39346c,0x3436732e7268730a\n"
".quad 0x202c31356c722520,0x33202c30356c7225,0x20636f6c2e0a3b32,0x3120323937312032\n"
".quad 0x3436622e6c68730a,0x202c32356c722520,0x32202c31356c7225,0x36732e6464610a3b\n"
".quad 0x2c33356c72252034,0x25202c346c722520,0x646c0a3b32356c72,0x2e6c61626f6c672e\n"
".quad 0x3031662520323366,0x33356c72255b202c,0x732e6464610a3b5d,0x34356c7225203436\n"
".quad 0x2c37346c7225202c,0x2e0a3b3637333520,0x3731203220636f6c,0x64616d0a31203339\n"
".quad 0x203436732e6f6c2e,0x25202c35356c7225,0x7225202c34356c72,0x7225202c3538316c\n"
".quad 0x6c68730a3b31326c,0x6c7225203436622e,0x356c7225202c3635,0x730a3b3233202c35\n"
".quad 0x25203436732e7268,0x7225202c37356c72,0x3b3233202c36356c,0x203220636f6c2e0a\n"
".quad 0x730a312033393731,0x25203436622e6c68,0x7225202c38356c72,0x0a3b32202c37356c\n"
".quad 0x203436732e646461,0x25202c39356c7225,0x6c7225202c346c72,0x672e646c0a3b3835\n"
".quad 0x33662e6c61626f6c,0x202c313166252032,0x3b5d39356c72255b,0x203220636f6c2e0a\n"
".quad 0x730a312034393731,0x732e71652e707465,0x202c367025203233,0x373637202c327225\n"
".quad 0x6220367025400a3b,0x5f31334242206172,0x6f6c2e0a0a3b3331,0x3239373120322063\n"
".quad 0x752e7476630a3120,0x25203233752e3436,0x7225202c30366c72,0x2e6464610a3b3932\n"
".quad 0x366c722520343673,0x30366c7225202c31,0x0a3b34343136202c,0x2e3436752e747663\n"
".quad 0x366c722520323375,0x3b31327225202c32,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5f5b202c3438316c,0x645f74726d32315a,0x50656c676e69735f,0x61705f6d665f5366\n"
".quad 0x0a3b5d335f6d6172,0x31203220636f6c2e,0x616d0a3120353937,0x3436732e6f6c2e64\n"
".quad 0x202c33366c722520,0x25202c31366c7225,0x25202c3438316c72,0x646c0a3b32366c72\n"
".quad 0x752e6d617261702e,0x37316c7225203436,0x32315a5f5b202c37,0x69735f645f74726d\n"
".quad 0x5f536650656c676e,0x6d617261705f6d66,0x7476630a3b5d305f,0x6f6c672e6f742e61\n"
".quad 0x203436752e6c6162,0x25202c34366c7225,0x730a3b3737316c72,0x25203436622e6c68\n"
".quad 0x7225202c35366c72,0x3b3233202c33366c,0x3436732e7268730a,0x202c36366c722520\n"
".quad 0x33202c35366c7225,0x20636f6c2e0a3b32,0x3120353937312032,0x3436622e6c68730a\n"
".quad 0x202c37366c722520,0x32202c36366c7225,0x36732e6464610a3b,0x2c38366c72252034\n"
".quad 0x202c34366c722520,0x6c0a3b37366c7225,0x6c61626f6c672e64,0x316625203233662e\n"
".quad 0x6c72255b202c3338,0x42420a0a3b5d3836,0x6d0a3a33315f3133,0x25203233662e766f\n"
".quad 0x316625202c333166,0x2e6464610a3b3338,0x376c722520343673,0x2c366c7225202c31\n"
".quad 0x6c0a3b3637333520,0x2e6d617261702e64,0x316c722520343675,0x315a5f5b202c3338\n"
".quad 0x735f645f74726d32,0x536650656c676e69,0x617261705f6d665f,0x6c2e0a3b5d335f6d\n"
".quad 0x333831203220636f,0x2e64616d0a312032,0x25203436732e6f6c,0x7225202c32376c72\n"
".quad 0x6c7225202c31376c,0x6c7225202c333831,0x61702e646c0a3b35,0x203436752e6d6172\n"
".quad 0x202c3038316c7225,0x74726d32315a5f5b,0x6c676e69735f645f,0x5f6d665f53665065\n"
".quad 0x5d315f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e\n"
".quad 0x316c7225202c3337,0x2e6c68730a3b3038,0x376c722520343662,0x32376c7225202c34\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c35376c,0x0a3b3233202c3437\n"
".quad 0x31203220636f6c2e,0x68730a3120323338,0x7225203436622e6c,0x6c7225202c36376c\n"
".quad 0x610a3b32202c3537,0x25203436732e6464,0x6c7225202c386c72,0x376c7225202c3337\n"
".quad 0x732e6464610a3b36,0x37376c7225203436,0x202c366c7225202c,0x6c2e0a3b34343136\n"
".quad 0x333831203220636f,0x2e64616d0a312033,0x25203436732e6f6c,0x7225202c38376c72\n"
".quad 0x6c7225202c37376c,0x6c7225202c333831,0x622e6c68730a3b35,0x39376c7225203436\n"
".quad 0x2c38376c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x376c7225202c3038\n"
".quad 0x2e0a3b3233202c39,0x3831203220636f6c,0x6c68730a31203333,0x6c7225203436622e\n"
".quad 0x386c7225202c3138,0x64610a3b32202c30,0x7225203436732e64,0x376c7225202c396c\n"
".quad 0x31386c7225202c33,0x652e707465730a3b,0x7025203233732e71,0x2c36397225202c37\n"
".quad 0x377025400a3b3120,0x3342422061726220,0x730a0a3b35315f31,0x732e656e2e707465\n"
".quad 0x202c387025203233,0x3031202c36397225,0x6220387025400a3b,0x5f31334242206172\n"
".quad 0x3342420a0a3b3631,0x646c0a3a35315f31,0x752e6d617261702e,0x38316c7225203436\n"
".quad 0x32315a5f5b202c32,0x69735f645f74726d,0x5f536650656c676e,0x6d617261705f6d66\n"
".quad 0x6f6c2e0a3b5d335f,0x3632383120322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c35386c,0x316c7225202c3531,0x356c7225202c3238,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3937316c72,0x5f74726d32315a5f,0x656c676e69735f64\n"
".quad 0x705f6d665f536650,0x3b5d315f6d617261,0x6f742e617476630a,0x2e6c61626f6c672e\n"
".quad 0x386c722520343675,0x37316c7225202c36,0x622e6c68730a3b39,0x37386c7225203436\n"
".quad 0x2c35386c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x386c7225202c3838\n"
".quad 0x2e0a3b3233202c37,0x3831203220636f6c,0x6c68730a31203632,0x6c7225203436622e\n"
".quad 0x386c7225202c3938,0x64610a3b32202c38,0x7225203436732e64,0x6c7225202c30396c\n"
".quad 0x386c7225202c3638,0x20636f6c2e0a3b39,0x3120373038312032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x202c5d30396c7225,0x610a3b3438316625,0x25203436732e6464\n"
".quad 0x7225202c31396c72,0x36333531202c366c,0x3220636f6c2e0a3b,0x0a31203732383120\n"
".quad 0x732e6f6c2e64616d,0x32396c7225203436,0x2c31396c7225202c,0x2c3238316c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x7225202c33396c72,0x3b3233202c32396c\n"
".quad 0x3436732e7268730a,0x202c34396c722520,0x33202c33396c7225,0x20636f6c2e0a3b32\n"
".quad 0x3120373238312032,0x3436622e6c68730a,0x202c35396c722520,0x32202c34396c7225\n"
".quad 0x36732e6464610a3b,0x2c36396c72252034,0x202c36386c722520,0x2e0a3b35396c7225\n"
".quad 0x3831203220636f6c,0x2e74730a31203830,0x662e6c61626f6c67,0x396c72255b203233\n"
".quad 0x30316625202c5d36,0x3220636f6c2e0a3b,0x0a31203832383120,0x732e6f6c2e64616d\n"
".quad 0x38396c7225203436,0x2c32326c7225202c,0x2c3238316c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x7225202c39396c72,0x3b3233202c38396c,0x3436732e7268730a\n"
".quad 0x2c3030316c722520,0x202c39396c722520,0x636f6c2e0a3b3233,0x2038323831203220\n"
".quad 0x36622e6c68730a31,0x3130316c72252034,0x3030316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c323031,0x316c7225202c3638,0x636f6c2e0a3b3130\n"
".quad 0x2039303831203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3230316c72255b\n"
".quad 0x3b3131326625202c,0x3436732e6464610a,0x2c3330316c722520,0x33202c366c722520\n"
".quad 0x6f6c2e0a3b323730,0x3932383120322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3430316c,0x7225202c3330316c,0x7225202c3238316c,0x2e6c68730a3b356c\n"
".quad 0x316c722520343662,0x316c7225202c3530,0x0a3b3233202c3430,0x203436732e726873\n"
".quad 0x202c3630316c7225,0x202c3530316c7225,0x636f6c2e0a3b3233,0x2039323831203220\n"
".quad 0x36622e6c68730a31,0x3730316c72252034,0x3630316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c383031,0x316c7225202c3638,0x636f6c2e0a3b3730\n"
".quad 0x2030313831203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3830316c72255b\n"
".quad 0x610a3b376625202c,0x25203436732e6464,0x25202c3930316c72,0x343833202c366c72\n"
".quad 0x20636f6c2e0a3b30,0x3120303338312032,0x2e6f6c2e64616d0a,0x316c722520343673\n"
".quad 0x316c7225202c3031,0x316c7225202c3930,0x356c7225202c3238,0x36622e6c68730a3b\n"
".quad 0x3131316c72252034,0x3031316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3231316c,0x3233202c3131316c,0x3220636f6c2e0a3b,0x0a31203033383120\n"
".quad 0x203436622e6c6873,0x202c3331316c7225,0x202c3231316c7225,0x732e6464610a3b32\n"
".quad 0x31316c7225203436,0x36386c7225202c34,0x3331316c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203131383120,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3431316c72\n"
".quad 0x64610a3b31316625,0x7225203436732e64,0x7225202c3531316c,0x38303634202c366c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203133383120,0x732e6f6c2e64616d,0x31316c7225203436\n"
".quad 0x31316c7225202c36,0x38316c7225202c35,0x3b356c7225202c32,0x3436622e6c68730a\n"
".quad 0x2c3731316c722520,0x2c3631316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c383131,0x3b3233202c373131,0x203220636f6c2e0a,0x730a312031333831\n"
".quad 0x25203436622e6c68,0x25202c3931316c72,0x32202c3831316c72,0x36732e6464610a3b\n"
".quad 0x3032316c72252034,0x2c36386c7225202c,0x3b3931316c722520,0x203220636f6c2e0a\n"
".quad 0x730a312032313831,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3032316c\n"
".quad 0x6f6c2e0a3b333166,0x3331383120322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x2c5d386c72255b20,0x6c2e0a3b38662520,0x313831203220636f,0x672e74730a312034\n"
".quad 0x33662e6c61626f6c,0x5d396c72255b2032,0x2e0a3b396625202c,0x3831203220636f6c\n"
".quad 0x7465720a32203733,0x5f313342420a0a3b,0x636f6c2e0a3a3631,0x3120363932203220\n"
".quad 0x71652e707465730a,0x397025203233732e,0x202c36397225202c,0x20397025400a3b32\n"
".quad 0x3133424220617262,0x6c2e0a0a3b39325f,0x303033203220636f,0x2e707465730a3120\n"
".quad 0x25203233732e7165,0x397225202c303170,0x25400a3b33202c36,0x2061726220303170\n"
".quad 0x3b33325f31334242,0x3220636f6c2e0a0a,0x730a312034303320,0x732e71652e707465\n"
".quad 0x2c31317025203233,0x31202c3639722520,0x31317025400a3b31,0x3342422061726220\n"
".quad 0x2e0a0a3b32325f31,0x3133203220636f6c,0x707465730a312030,0x203233732e71652e\n"
".quad 0x7225202c32317025,0x0a3b3231202c3639,0x7262203231702540,0x325f313342422061\n"
".quad 0x2e766f6d0a0a3b31,0x3631662520323366,0x3b31316625202c33,0x3233662e766f6d0a\n"
".quad 0x202c323631662520,0x766f6d0a3b396625,0x316625203233662e,0x33316625202c3038\n"
".quad 0x33662e766f6d0a3b,0x2c39373166252032,0x6f6d0a3b38662520,0x6625203233662e76\n"
".quad 0x316625202c363032,0x662e766f6d0a3b30,0x3530326625203233,0x620a3b376625202c\n"
".quad 0x4220696e752e6172,0x0a3b35335f313342,0x31325f313342420a,0x33662e766f6d0a3a\n"
".quad 0x2c33363166252032,0x6d0a3b3131662520,0x25203233662e766f,0x6625202c32363166\n"
".quad 0x2e766f6d0a3b3131,0x3731662520323366,0x3b33316625202c39,0x3233662e766f6d0a\n"
".quad 0x202c303831662520,0x6f6d0a3b33316625,0x6625203233662e76,0x316625202c353032\n"
".quad 0x662e766f6d0a3b30,0x3630326625203233,0x0a3b30316625202c,0x20696e752e617262\n"
".quad 0x3b35335f31334242,0x325f313342420a0a,0x662e766f6d0a3a32,0x3336316625203233\n"
".quad 0x6d0a3b396625202c,0x25203233662e766f,0x6625202c32363166,0x662e766f6d0a3b39\n"
".quad 0x3937316625203233,0x6d0a3b386625202c,0x25203233662e766f,0x6625202c30383166\n"
".quad 0x662e766f6d0a3b38,0x3530326625203233,0x6d0a3b376625202c,0x25203233662e766f\n"
".quad 0x6625202c36303266,0x752e6172620a3b37,0x5f3133424220696e,0x3342420a0a3b3533\n"
".quad 0x6c2e0a3a33325f31,0x303732203220636f,0x2e707465730a3120,0x25203233732e7165\n"
".quad 0x327225202c333170,0x7025400a3b30202c,0x4220617262203331,0x0a3b37325f313342\n"
".quad 0x203220636f6c2e0a,0x25400a3120343732,0x4220617262203670,0x0a3b36325f313342\n"
".quad 0x3233662e766f6d0a,0x202c353631662520,0x6f6d0a3b31316625,0x6625203233662e76\n"
".quad 0x396625202c343631,0x33662e766f6d0a3b,0x2c30313266252032,0x6d0a3b3031662520\n"
".quad 0x25203233662e766f,0x6625202c39303266,0x752e6172620a3b37,0x5f3133424220696e\n"
".quad 0x3342420a0a3b3832,0x6f6d0a3a36325f31,0x6625203233662e76,0x396625202c343631\n"
".quad 0x33662e766f6d0a3b,0x2c35363166252032,0x6f6d0a3b39662520,0x6625203233662e76\n"
".quad 0x376625202c393032,0x33662e766f6d0a3b,0x2c30313266252032,0x72620a3b37662520\n"
".quad 0x424220696e752e61,0x0a0a3b38325f3133,0x3a37325f31334242,0x3233662e766f6d0a\n"
".quad 0x202c343631662520,0x6f6d0a3b31316625,0x6625203233662e76,0x316625202c353631\n"
".quad 0x662e766f6d0a3b31,0x3930326625203233,0x0a3b30316625202c,0x203233662e766f6d\n"
".quad 0x25202c3031326625,0x42420a0a3b303166,0x6d0a3a38325f3133,0x25203233662e766f\n"
".quad 0x6625202c36303266,0x766f6d0a3b303132,0x326625203233662e,0x30326625202c3530\n"
".quad 0x662e766f6d0a3b39,0x3336316625203233,0x3b3536316625202c,0x3233662e766f6d0a\n"
".quad 0x202c323631662520,0x6d0a3b3436316625,0x25203233662e766f,0x336630202c333466\n"
".quad 0x3b41303744334144,0x203220636f6c2e0a,0x6d660a3120313832,0x3233662e6e722e61\n"
".quad 0x202c313132662520,0x6630202c33346625,0x4241414141324633,0x3b3438316625202c\n"
".quad 0x203220636f6c2e0a,0x75730a3120323832,0x6625203233662e62,0x30326625202c3434\n"
".quad 0x3630326625202c35,0x33662e766f6d0a3b,0x202c353466252032,0x3030303046336630\n"
".quad 0x636f6c2e0a3b3030,0x3120323832203220,0x3233662e67656e0a,0x25202c3634662520\n"
".quad 0x616d660a3b343466,0x203233662e6e722e,0x6625202c37346625,0x35346625202c3634\n"
".quad 0x3b3336316625202c,0x2e6e722e616d660a,0x3731662520323366,0x2c33346625202c39\n"
".quad 0x4141324533663020,0x346625202c424141,0x20636f6c2e0a3b37,0x0a31203338322032\n"
".quad 0x662e6e722e616d66,0x2c38346625203233,0x30202c3434662520,0x3030303030463366\n"
".quad 0x3236316625202c30,0x6e722e616d660a3b,0x316625203233662e,0x33346625202c3038\n"
".quad 0x413245336630202c,0x6625202c42414141,0x2e6172620a3b3834,0x3133424220696e75\n"
".quad 0x42420a0a3b35335f,0x2e0a3a39325f3133,0x3432203220636f6c,0x707465730a312037\n"
".quad 0x203233732e71652e,0x7225202c35317025,0x25400a3b30202c32,0x2061726220353170\n"
".quad 0x3b33335f31334242,0x3220636f6c2e0a0a,0x400a312031353220,0x2061726220367025\n"
".quad 0x3b32335f31334242,0x33662e766f6d0a0a,0x2c32383166252032,0x6d0a3b3331662520\n"
".quad 0x25203233662e766f,0x6625202c31383166,0x662e766f6d0a3b38,0x3830326625203233\n"
".quad 0x0a3b30316625202c,0x203233662e766f6d,0x25202c3730326625,0x2e6172620a3b3766\n"
".quad 0x3133424220696e75,0x42420a0a3b34335f,0x6d0a3a32335f3133,0x25203233662e766f\n"
".quad 0x6625202c32383166,0x662e766f6d0a3b38,0x3138316625203233,0x6d0a3b386625202c\n"
".quad 0x25203233662e766f,0x6625202c38303266,0x662e766f6d0a3b37,0x3730326625203233\n"
".quad 0x620a3b376625202c,0x4220696e752e6172,0x0a3b34335f313342,0x33335f313342420a\n"
".quad 0x33662e766f6d0a3a,0x2c32383166252032,0x6d0a3b3331662520,0x25203233662e766f\n"
".quad 0x6625202c31383166,0x2e766f6d0a3b3331,0x3032662520323366,0x3b30316625202c38\n"
".quad 0x3233662e766f6d0a,0x202c373032662520,0x420a0a3b30316625,0x0a3a34335f313342\n"
".quad 0x203233662e766f6d,0x25202c3630326625,0x6f6d0a3b38303266,0x6625203233662e76\n"
".quad 0x326625202c353032,0x2e766f6d0a3b3730,0x3831662520323366,0x3238316625202c30\n"
".quad 0x33662e766f6d0a3b,0x2c39373166252032,0x0a3b313831662520,0x32203220636f6c2e\n"
".quad 0x6464610a31203835,0x346625203233662e,0x202c346625202c39,0x610a3b3530326625\n"
".quad 0x25203233662e6464,0x346625202c303566,0x3630326625202c39,0x33662e6464610a3b\n"
".quad 0x202c313566252032,0x25202c3131326625,0x64610a3b31313266,0x6625203233662e64\n"
".quad 0x30356625202c3235,0x0a3b31356625202c,0x203233662e646461,0x6625202c33356625\n"
".quad 0x316625202c393731,0x2e6464610a3b3937,0x3435662520323366,0x202c32356625202c\n"
".quad 0x64610a3b33356625,0x6625203233662e64,0x38316625202c3535,0x3038316625202c30\n"
".quad 0x33662e6464610a3b,0x202c363566252032,0x6625202c34356625,0x2e6464610a3b3535\n"
".quad 0x3735662520323366,0x202c36356625202c,0x3030303846426630,0x636f6c2e0a3b3030\n"
".quad 0x3120303632203220,0x2e6e722e616d660a,0x3831662520323366,0x2c37356625202c34\n"
".quad 0x4141324642663020,0x326625202c424141,0x636f6c2e0a3b3131,0x3120313632203220\n"
".quad 0x3233662e6275730a,0x25202c3835662520,0x6625202c35303266,0x766f6d0a3b363032\n"
".quad 0x356625203233662e,0x3046336630202c39,0x2e0a3b3030303030,0x3632203220636f6c\n"
".quad 0x2e616d660a312031,0x25203233662e6e72,0x356625202c303666,0x3046336630202c38\n"
".quad 0x25202c3030303030,0x6f6d0a3b39373166,0x6625203233662e76,0x45336630202c3136\n"
".quad 0x0a3b424141414132,0x32203220636f6c2e,0x67656e0a31203136,0x366625203233662e\n"
".quad 0x3b37356625202c32,0x2e6e722e616d660a,0x3631662520323366,0x2c32366625202c33\n"
".quad 0x25202c3136662520,0x6f6c2e0a3b303666,0x2032363220322063,0x33662e67656e0a31\n"
".quad 0x202c333666252032,0x6d660a3b38356625,0x3233662e6e722e61,0x25202c3436662520\n"
".quad 0x356625202c333666,0x3038316625202c39,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x32366625202c3236,0x202c31366625202c,0x420a0a3b34366625,0x0a3a35335f313342\n"
".quad 0x31203220636f6c2e,0x64610a3120333238,0x6625203233662e64,0x2c346625202c3536\n"
".quad 0x0a3b313132662520,0x203233662e646461,0x6625202c36366625,0x30326625202c3536\n"
".quad 0x662e6464610a3b35,0x2c37366625203233,0x25202c3636662520,0x64610a3b34383166\n"
".quad 0x6625203233662e64,0x37366625202c3836,0x3b3630326625202c,0x3233662e6464610a\n"
".quad 0x25202c3936662520,0x316625202c383666,0x2e6464610a3b3937,0x3037662520323366\n"
".quad 0x202c39366625202c,0x610a3b3236316625,0x25203233662e6464,0x376625202c313766\n"
".quad 0x3336316625202c30,0x33662e6464610a3b,0x202c323766252032,0x6625202c31376625\n"
".quad 0x6275730a3b303831,0x376625203233662e,0x3131326625202c33,0x3b3438316625202c\n"
".quad 0x3233662e6464610a,0x25202c3437662520,0x316625202c333766,0x2e6275730a3b3937\n"
".quad 0x3537662520323366,0x202c34376625202c,0x730a3b3236316625,0x25203233662e6275\n"
".quad 0x376625202c363766,0x3336316625202c35,0x33662e6464610a3b,0x202c373766252032\n"
".quad 0x6625202c36376625,0x6275730a3b303831,0x376625203233662e,0x3530326625202c38\n"
".quad 0x3b3630326625202c,0x3233662e6464610a,0x25202c3937662520,0x316625202c383766\n"
".quad 0x2e6464610a3b3937,0x3038662520323366,0x202c39376625202c,0x730a3b3236316625\n"
".quad 0x25203233662e6275,0x386625202c313866,0x3336316625202c30,0x33662e6275730a3b\n"
".quad 0x202c323866252032,0x6625202c31386625,0x6c756d0a3b303831,0x386625203233662e\n"
".quad 0x2c32386625202c33,0x660a3b3238662520,0x33662e6e722e616d,0x202c343866252032\n"
".quad 0x6625202c37376625,0x33386625202c3737,0x33662e766f6d0a3b,0x202c353866252032\n"
".quad 0x3030304346336630,0x636f6c2e0a3b3030,0x2033323831203220,0x33662e67656e0a31\n"
".quad 0x202c363866252032,0x6d660a3b34386625,0x3233662e6e722e61,0x25202c3738662520\n"
".quad 0x386625202c363866,0x3b32376625202c35,0x2e6e722e616d660a,0x3838662520323366\n"
".quad 0x202c37386625202c,0x4538334545426630,0x3b346625202c3933,0x3233662e67656e0a\n"
".quad 0x25202c3938662520,0x2e646c0a3b383866,0x33662e6d61726170,0x2c39343166252032\n"
".quad 0x726d32315a5f5b20,0x676e69735f645f74,0x6d665f536650656c,0x325f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x3120333238312032,0x2e6e722e616d660a,0x3039662520323366\n"
".quad 0x202c39386625202c,0x25202c3934316625,0x2e766f6d0a3b3466,0x3139662520323366\n"
".quad 0x303430346630202c,0x6c2e0a3b30303030,0x323831203220636f,0x2e616d660a312033\n"
".quad 0x25203233662e6e72,0x376625202c323966,0x3430346630202c37,0x25202c3030303030\n"
".quad 0x6c756d0a3b323766,0x396625203233662e,0x2c37376625202c33,0x3030393034663020\n"
".quad 0x616d660a3b303030,0x203233662e6e722e,0x6625202c34396625,0x37376625202c3339\n"
".quad 0x0a3b32396625202c,0x662e6e722e616d66,0x2c35396625203233,0x25202c3638662520\n"
".quad 0x396625202c353866,0x662e766f6d0a3b34,0x2c36396625203233,0x3833454433663020\n"
".quad 0x6f6c2e0a3b393345,0x3332383120322063,0x662e67656e0a3120,0x2c37396625203233\n"
".quad 0x660a3b3539662520,0x33662e6e722e616d,0x202c383966252032,0x6625202c37396625\n"
".quad 0x31326625202c3639,0x662e67656e0a3b31,0x2c39396625203233,0x660a3b3839662520\n"
".quad 0x33662e6e722e616d,0x2c30303166252032,0x25202c3939662520,0x6625202c39343166\n"
".quad 0x616d660a3b313132,0x203233662e6e722e,0x25202c3130316625,0x346630202c323866\n"
".quad 0x2c30303030303430,0x6d0a3b3237662520,0x25203233662e6c75,0x6625202c32303166\n"
".quad 0x30346630202c3238,0x0a3b303030303039,0x662e6e722e616d66,0x3330316625203233\n"
".quad 0x2c3230316625202c,0x25202c3238662520,0x6d660a3b31303166,0x3233662e6e722e61\n"
".quad 0x202c343031662520,0x6625202c36386625,0x30316625202c3538,0x662e67656e0a3b33\n"
".quad 0x3530316625203233,0x3b3430316625202c,0x2e6e722e616d660a,0x3031662520323366\n"
".quad 0x3530316625202c36,0x202c36396625202c,0x6e0a3b3530326625,0x25203233662e6765\n"
".quad 0x6625202c37303166,0x616d660a3b363031,0x203233662e6e722e,0x25202c3830316625\n"
".quad 0x6625202c37303166,0x326625202c393431,0x2e67656e0a3b3530,0x3031662520323366\n"
".quad 0x3b37376625202c39,0x2e6e722e616d660a,0x3131662520323366,0x3930316625202c30\n"
".quad 0x202c31396625202c,0x6d660a3b32376625,0x3233662e6e722e61,0x202c313131662520\n"
".quad 0x6625202c33396625,0x31316625202c3737,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x386625202c323131,0x2c35386625202c36,0x0a3b313131662520,0x203233662e67656e\n"
".quad 0x25202c3331316625,0x6d660a3b32313166,0x3233662e6e722e61,0x202c343131662520\n"
".quad 0x25202c3331316625,0x316625202c363966,0x2e67656e0a3b3438,0x3131662520323366\n"
".quad 0x3431316625202c35,0x6e722e616d660a3b,0x316625203233662e,0x31316625202c3631\n"
".quad 0x3934316625202c35,0x3b3438316625202c,0x3233662e67656e0a,0x202c373131662520\n"
".quad 0x6d660a3b32386625,0x3233662e6e722e61,0x202c383131662520,0x25202c3731316625\n"
".quad 0x376625202c313966,0x722e616d660a3b32,0x6625203233662e6e,0x316625202c393131\n"
".quad 0x32386625202c3230,0x3b3831316625202c,0x2e6e722e616d660a,0x3231662520323366\n"
".quad 0x2c36386625202c30,0x25202c3538662520,0x656e0a3b39313166,0x6625203233662e67\n"
".quad 0x316625202c313231,0x2e616d660a3b3032,0x25203233662e6e72,0x6625202c32323166\n"
".quad 0x396625202c313231,0x3630326625202c36,0x33662e67656e0a3b,0x2c33323166252032\n"
".quad 0x0a3b323231662520,0x662e6e722e616d66,0x3432316625203233,0x2c3332316625202c\n"
".quad 0x202c393431662520,0x610a3b3630326625,0x25203233662e6464,0x6625202c35323166\n"
".quad 0x32386625202c3737,0x6e722e616d660a3b,0x316625203233662e,0x32316625202c3632\n"
".quad 0x3430346630202c35,0x25202c3030303030,0x6c756d0a3b323766,0x316625203233662e\n"
".quad 0x32316625202c3732,0x3930346630202c35,0x660a3b3030303030,0x33662e6e722e616d\n"
".quad 0x2c38323166252032,0x202c373231662520,0x25202c3532316625,0x6d660a3b36323166\n"
".quad 0x3233662e6e722e61,0x202c393231662520,0x6625202c36386625,0x32316625202c3538\n"
".quad 0x662e7476630a3b38,0x25203233662e3436,0x316625202c316466,0x2e766f6d0a3b3932\n"
".quad 0x3264662520343666,0x433946336430202c,0x4237433137433137,0x6c2e0a3b43314438\n"
".quad 0x323831203220636f,0x2e7476630a312033,0x203233662e343666,0x6625202c33646625\n"
".quad 0x67656e0a3b393731,0x646625203436662e,0x3b31646625202c34,0x2e6e722e616d660a\n"
".quad 0x3564662520343666,0x202c34646625202c,0x6625202c32646625,0x2e7476630a3b3364\n"
".quad 0x203233662e343666,0x6625202c36646625,0x67656e0a3b393431,0x646625203436662e\n"
".quad 0x3b36646625202c37,0x2e6e722e616d660a,0x3864662520343666,0x202c37646625202c\n"
".quad 0x6625202c35646625,0x2e7476630a3b3364,0x662e3233662e6e72,0x3033316625203436\n"
".quad 0x0a3b38646625202c,0x203233662e627573,0x25202c3133316625,0x376625202c323866\n"
".quad 0x20636f6c2e0a3b37,0x3120333238312032,0x2e6e722e616d660a,0x3331662520323366\n"
".quad 0x3133316625202c32,0x303430346630202c,0x6625202c30303030,0x2e6c756d0a3b3237\n"
".quad 0x3331662520323366,0x3133316625202c33,0x303930346630202c,0x6d660a3b30303030\n"
".quad 0x3233662e6e722e61,0x202c343331662520,0x25202c3333316625,0x6625202c31333166\n"
".quad 0x616d660a3b323331,0x203233662e6e722e,0x25202c3533316625,0x386625202c363866\n"
".quad 0x3433316625202c35,0x36662e7476630a3b,0x6625203233662e34,0x33316625202c3964\n"
".quad 0x662e7476630a3b35,0x25203233662e3436,0x6625202c30316466,0x67656e0a3b323631\n"
".quad 0x646625203436662e,0x39646625202c3131,0x6e722e616d660a3b,0x646625203436662e\n"
".quad 0x31646625202c3231,0x2c32646625202c31,0x0a3b303164662520,0x662e6e722e616d66\n"
".quad 0x3331646625203436,0x202c37646625202c,0x25202c3231646625,0x76630a3b30316466\n"
".quad 0x3233662e6e722e74,0x316625203436662e,0x31646625202c3633,0x662e6275730a3b33\n"
".quad 0x3733316625203233,0x2c3930316625202c,0x660a3b3238662520,0x33662e6e722e616d\n"
".quad 0x2c38333166252032,0x202c373331662520,0x3030303430346630,0x32376625202c3030\n"
".quad 0x33662e6c756d0a3b,0x2c39333166252032,0x202c373331662520,0x3030303930346630\n"
".quad 0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c30343166,0x316625202c393331\n"
".quad 0x33316625202c3733,0x722e616d660a3b38,0x6625203233662e6e,0x386625202c313431\n"
".quad 0x2c35386625202c36,0x0a3b303431662520,0x2e3436662e747663,0x3164662520323366\n"
".quad 0x3134316625202c34,0x36662e7476630a3b,0x6625203233662e34,0x316625202c353164\n"
".quad 0x2e67656e0a3b3336,0x3164662520343666,0x3431646625202c36,0x6e722e616d660a3b\n"
".quad 0x646625203436662e,0x31646625202c3731,0x2c32646625202c36,0x0a3b353164662520\n"
".quad 0x662e6e722e616d66,0x3831646625203436,0x202c37646625202c,0x25202c3731646625\n"
".quad 0x76630a3b35316466,0x3233662e6e722e74,0x316625203436662e,0x31646625202c3234\n"
".quad 0x662e6275730a3b38,0x3334316625203233,0x202c37376625202c,0x6d660a3b32386625\n"
".quad 0x3233662e6e722e61,0x202c343431662520,0x30202c3334316625,0x3030303034303466\n"
".quad 0x3b32376625202c30,0x3233662e6c756d0a,0x202c353431662520,0x30202c3334316625\n"
".quad 0x3030303039303466,0x722e616d660a3b30,0x6625203233662e6e,0x316625202c363431\n"
".quad 0x34316625202c3534,0x3434316625202c33,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x36386625202c3734,0x202c35386625202c,0x630a3b3634316625,0x662e3436662e7476\n"
".quad 0x3931646625203233,0x3b3734316625202c,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x38316625202c3032,0x662e67656e0a3b30,0x3132646625203436,0x3b3931646625202c\n"
".quad 0x2e6e722e616d660a,0x3264662520343666,0x3132646625202c32,0x202c32646625202c\n"
".quad 0x660a3b3032646625,0x36662e6e722e616d,0x2c33326466252034,0x25202c3764662520\n"
".quad 0x6625202c32326466,0x7476630a3b303264,0x2e3233662e6e722e,0x3431662520343666\n"
".quad 0x3332646625202c38,0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3138316c72\n"
".quad 0x5f74726d32315a5f,0x656c676e69735f64,0x705f6d665f536650,0x3b5d335f6d617261\n"
".quad 0x203220636f6c2e0a,0x6d0a312039373731,0x36732e6f6c2e6461,0x3332316c72252034\n"
".quad 0x202c366c7225202c,0x202c3138316c7225,0x646c0a3b356c7225,0x752e6d617261702e\n"
".quad 0x37316c7225203436,0x32315a5f5b202c38,0x69735f645f74726d,0x5f536650656c676e\n"
".quad 0x6d617261705f6d66,0x7476630a3b5d315f,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x202c3432316c7225,0x0a3b3837316c7225,0x203436622e6c6873,0x202c3532316c7225\n"
".quad 0x202c3332316c7225,0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3632\n"
".quad 0x0a3b3233202c3532,0x31203220636f6c2e,0x68730a3120353238,0x7225203436622e6c\n"
".quad 0x7225202c3732316c,0x3b32202c3632316c,0x3436732e6464610a,0x2c3832316c722520\n"
".quad 0x2c3432316c722520,0x3b3732316c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3832316c7225,0x2e0a3b3039662520,0x3831203220636f6c,0x64616d0a31203632\n"
".quad 0x203436732e6f6c2e,0x202c3033316c7225,0x25202c35316c7225,0x25202c3138316c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c313331,0x3b3233202c303331\n"
".quad 0x3436732e7268730a,0x2c3233316c722520,0x2c3133316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3632383120322063,0x622e6c68730a3120,0x33316c7225203436,0x33316c7225202c33\n"
".quad 0x64610a3b32202c32,0x7225203436732e64,0x7225202c3433316c,0x7225202c3432316c\n"
".quad 0x74730a3b3333316c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d343331\n"
".quad 0x6464610a3b303031,0x6c7225203436732e,0x6c7225202c353331,0x3b36333531202c36\n"
".quad 0x203220636f6c2e0a,0x6d0a312037323831,0x36732e6f6c2e6461,0x3633316c72252034\n"
".quad 0x3533316c7225202c,0x3138316c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3733316c7225,0x202c3633316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3833,0x0a3b3233202c3733,0x31203220636f6c2e,0x68730a3120373238\n"
".quad 0x7225203436622e6c,0x7225202c3933316c,0x3b32202c3833316c,0x3436732e6464610a\n"
".quad 0x2c3034316c722520,0x2c3432316c722520,0x3b3933316c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3034316c7225,0x0a3b383031662520,0x31203220636f6c2e\n"
".quad 0x616d0a3120383238,0x3436732e6f6c2e64,0x2c3234316c722520,0x202c32326c722520\n"
".quad 0x202c3138316c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3334316c\n"
".quad 0x3233202c3234316c,0x36732e7268730a3b,0x3434316c72252034,0x3334316c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x323831203220636f,0x2e6c68730a312038,0x316c722520343662\n"
".quad 0x316c7225202c3534,0x610a3b32202c3434,0x25203436732e6464,0x25202c3634316c72\n"
".quad 0x25202c3432316c72,0x730a3b3534316c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3634316c,0x64610a3b36313166,0x7225203436732e64,0x7225202c3734316c\n"
".quad 0x32373033202c366c,0x3220636f6c2e0a3b,0x0a31203932383120,0x732e6f6c2e64616d\n"
".quad 0x34316c7225203436,0x34316c7225202c38,0x38316c7225202c37,0x3b356c7225202c31\n"
".quad 0x3436622e6c68730a,0x2c3934316c722520,0x2c3834316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c303531,0x3b3233202c393431,0x203220636f6c2e0a\n"
".quad 0x730a312039323831,0x25203436622e6c68,0x25202c3135316c72,0x32202c3035316c72\n"
".quad 0x36732e6464610a3b,0x3235316c72252034,0x3432316c7225202c,0x3135316c7225202c\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3235316c72255b,0x3b3432316625202c\n"
".quad 0x3436732e6464610a,0x2c3335316c722520,0x33202c366c722520,0x6f6c2e0a3b303438\n"
".quad 0x3033383120322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3435316c\n"
".quad 0x7225202c3335316c,0x7225202c3138316c,0x2e6c68730a3b356c,0x316c722520343662\n"
".quad 0x316c7225202c3535,0x0a3b3233202c3435,0x203436732e726873,0x202c3635316c7225\n"
".quad 0x202c3535316c7225,0x636f6c2e0a3b3233,0x2030333831203220,0x36622e6c68730a31\n"
".quad 0x3735316c72252034,0x3635316c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c383531,0x6c7225202c343231,0x2e74730a3b373531,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x316625202c5d3835,0x2e6464610a3b3033,0x316c722520343673\n"
".quad 0x366c7225202c3935,0x0a3b38303634202c,0x31203220636f6c2e,0x616d0a3120313338\n"
".quad 0x3436732e6f6c2e64,0x2c3036316c722520,0x2c3935316c722520,0x2c3138316c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3136316c72,0x33202c3036316c72\n"
".quad 0x732e7268730a3b32,0x36316c7225203436,0x36316c7225202c32,0x2e0a3b3233202c31\n"
".quad 0x3831203220636f6c,0x6c68730a31203133,0x6c7225203436622e,0x6c7225202c333631\n"
".quad 0x0a3b32202c323631,0x203436732e646461,0x202c3436316c7225,0x202c3432316c7225\n"
".quad 0x0a3b3336316c7225,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3436316c72\n"
".quad 0x2e0a3b3633316625,0x3831203220636f6c,0x64616d0a31203233,0x203436732e6f6c2e\n"
".quad 0x202c3636316c7225,0x25202c31376c7225,0x25202c3138316c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c373631,0x3b3233202c363631,0x3436732e7268730a\n"
".quad 0x2c3836316c722520,0x2c3736316c722520,0x6f6c2e0a3b323320,0x3233383120322063\n"
".quad 0x622e6c68730a3120,0x36316c7225203436,0x36316c7225202c39,0x64610a3b32202c38\n"
".quad 0x7225203436732e64,0x7225202c3037316c,0x7225202c3432316c,0x74730a3b3936316c\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d303731,0x6f6c2e0a3b323431\n"
".quad 0x3333383120322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3237316c\n"
".quad 0x6c7225202c37376c,0x6c7225202c313831,0x622e6c68730a3b35,0x37316c7225203436\n"
".quad 0x37316c7225202c33,0x730a3b3233202c32,0x25203436732e7268,0x25202c3437316c72\n"
".quad 0x33202c3337316c72,0x20636f6c2e0a3b32,0x3120333338312032,0x3436622e6c68730a\n"
".quad 0x2c3537316c722520,0x2c3437316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x316c7225202c3637,0x316c7225202c3432,0x672e74730a3b3537,0x33662e6c61626f6c\n"
".quad 0x37316c72255b2032,0x34316625202c5d36,0x20636f6c2e0a3b38,0x3220373338312032\n"
".quad 0x0a7d0a3b7465720a,0x207972746e652e0a,0x5f74726d38315a5f,0x656c676e69735f64\n"
".quad 0x66506563726f665f,0x5f535f536d665f53,0x617261702e0a2869,0x5f203436752e206d\n"
".quad 0x645f74726d38315a,0x5f656c676e69735f,0x5366506563726f66,0x695f535f536d665f\n"
".quad 0x305f6d617261705f,0x6d617261702e0a2c,0x5a5f203436752e20,0x5f645f74726d3831\n"
".quad 0x665f656c676e6973,0x5f5366506563726f,0x5f695f535f536d66,0x2c315f6d61726170\n"
".quad 0x206d617261702e0a,0x315a5f203233662e,0x735f645f74726d38,0x6f665f656c676e69\n"
".quad 0x665f536650656372,0x705f695f535f536d,0x0a2c325f6d617261,0x2e206d617261702e\n"
".quad 0x38315a5f20343675,0x69735f645f74726d,0x726f665f656c676e,0x6d665f5366506563\n"
".quad 0x61705f695f535f53,0x2e0a2c335f6d6172,0x752e206d61726170,0x6d38315a5f203436\n"
".quad 0x6e69735f645f7472,0x63726f665f656c67,0x536d665f53665065,0x7261705f695f535f\n"
".quad 0x702e0a2c345f6d61,0x36752e206d617261,0x726d38315a5f2034,0x676e69735f645f74\n"
".quad 0x6563726f665f656c,0x5f536d665f536650,0x617261705f695f53,0x61702e0a2c355f6d\n"
".quad 0x3233752e206d6172,0x74726d38315a5f20,0x6c676e69735f645f,0x506563726f665f65\n"
".quad 0x535f536d665f5366,0x6d617261705f695f,0x2e0a7b0a290a365f,0x3233662e20676572\n"
".quad 0x3e3334323c662520,0x2e206765722e0a3b,0x3c64662520343666,0x65722e0a3b3e3432\n"
".quad 0x20646572702e2067,0x0a3b3e38323c7025,0x33732e206765722e,0x3333313c72252032\n"
".quad 0x206765722e0a3b3e,0x6c7225203436732e,0x0a0a3b3e3633323c,0x6465726168732e09\n"
".quad 0x206e67696c612e20,0x5f5f2038622e2034,0x636f6c5f61647563,0x335f7261765f6c61\n"
".quad 0x5f32335f39373837,0x736e6f635f6e6f6e,0x355b586d75735f74,0x2e090a0a3b5d3231\n"
".quad 0x2e20646572616873,0x2034206e67696c61,0x75635f5f2038622e,0x6c61636f6c5f6164\n"
".quad 0x3837335f7261765f,0x6f6e5f33345f3937,0x5f74736e6f635f6e,0x3231355b596d7573\n"
".quad 0x68732e090a0a3b5d,0x6c612e2064657261,0x622e2034206e6769,0x616475635f5f2038\n"
".quad 0x765f6c61636f6c5f,0x30383837335f7261,0x5f6e6f6e5f30335f,0x68635f74736e6f63\n"
".quad 0x0a3b5d345b6b6365,0x617261702e646c0a,0x7225203436752e6d,0x315a5f5b202c316c\n"
".quad 0x735f645f74726d38,0x6f665f656c676e69,0x665f536650656372,0x705f695f535f536d\n"
".quad 0x3b5d305f6d617261,0x617261702e646c0a,0x7225203436752e6d,0x315a5f5b202c336c\n"
".quad 0x735f645f74726d38,0x6f665f656c676e69,0x665f536650656372,0x705f695f535f536d\n"
".quad 0x3b5d335f6d617261,0x6f742e617476630a,0x2e6c61626f6c672e,0x346c722520343675\n"
".quad 0x0a3b316c7225202c,0x31203220636f6c2e,0x6f6d0a3120323438,0x7225203233752e76\n"
".quad 0x6469746e25202c36,0x2e766f6d0a3b782e,0x2c37722520323375,0x2e64696174632520\n"
".quad 0x752e766f6d0a3b78,0x202c387225203233,0x0a3b782e64697425,0x732e6f6c2e64616d\n"
".quad 0x202c317225203233,0x377225202c367225,0x2e0a3b387225202c,0x3831203220636f6c\n"
".quad 0x766f6d0a31203334,0x397225203233752e,0x2e6469746e25202c,0x752e766f6d0a3b79\n"
".quad 0x2c30317225203233,0x2e64696174632520,0x752e766f6d0a3b79,0x2c31317225203233\n"
".quad 0x3b792e6469742520,0x2e6f6c2e64616d0a,0x2c32722520323373,0x7225202c39722520\n"
".quad 0x31317225202c3031,0x36752e7476630a3b,0x7225203233752e34,0x3b317225202c356c\n"
".quad 0x203220636f6c2e0a,0x630a312034343831,0x732e3436732e7476,0x2c366c7225203233\n"
".quad 0x616d0a3b32722520,0x3436732e6f6c2e64,0x25202c376c722520,0x6c7225202c366c72\n"
".quad 0x3b356c7225202c33,0x203220636f6c2e0a,0x7476630a31203238,0x2e3233662e6e722e\n"
".quad 0x2c32662520323373,0x65730a3b31722520,0x33662e746c2e7074,0x25202c3370252032\n"
".quad 0x44336630202c3266,0x0a3b444343434343,0x6172622033702540,0x30315f3233424220\n"
".quad 0x752e766f6d0a0a3b,0x2c32317225203233,0x2e0a3b3432303120,0x3438203220636f6c\n"
".quad 0x732e6275730a3120,0x2c33317225203233,0x25202c3231722520,0x2e7476630a3b3172\n"
".quad 0x732e3233662e6e72,0x2c31346625203233,0x730a3b3331722520,0x662e746c2e707465\n"
".quad 0x202c347025203233,0x6630202c31346625,0x4443434343384633,0x6220347025400a3b\n"
".quad 0x5f32334242206172,0x2e766f6d0a0a3b39,0x3431722520323375,0x2e0a3b383637202c\n"
".quad 0x3638203220636f6c,0x732e6275730a3120,0x2c35317225203233,0x25202c3431722520\n"
".quad 0x2e7476630a3b3272,0x732e3233662e6e72,0x2c32346625203233,0x730a3b3531722520\n"
".quad 0x662e746c2e707465,0x202c357025203233,0x6630202c32346625,0x4443434343384633\n"
".quad 0x6220357025400a3b,0x5f32334242206172,0x636f6c2e0a0a3b38,0x0a31203838203220\n"
".quad 0x662e6e722e747663,0x25203233732e3233,0x3b327225202c3366,0x746c2e707465730a\n"
".quad 0x367025203233662e,0x30202c336625202c,0x4343434343443366,0x20367025400a3b44\n"
".quad 0x3233424220617262,0x6464610a0a3b375f,0x346625203233662e,0x202c326625202c33\n"
".quad 0x3043464633436630,0x2e6464610a3b3030,0x3434662520323366,0x30202c336625202c\n"
".quad 0x3030434642334366,0x20636f6c2e0a3b30,0x6d0a312030392032,0x25203233662e6c75\n"
".quad 0x346625202c353466,0x3b34346625202c34,0x2e6e722e616d660a,0x3634662520323366\n"
".quad 0x202c33346625202c,0x6625202c33346625,0x707465730a3b3534,0x203233662e746c2e\n"
".quad 0x346625202c377025,0x3832346630202c36,0x400a3b3030303030,0x2061726220377025\n"
".quad 0x0a3b365f32334242,0x3233752e766f6d0a,0x202c323331722520,0x752e6172620a3b30\n"
".quad 0x5f3233424220696e,0x3342420a0a3b3131,0x766f6d0a3a365f32,0x317225203233752e\n"
".quad 0x0a3b3031202c3233,0x20696e752e617262,0x3b31315f32334242,0x375f323342420a0a\n"
".quad 0x33752e766f6d0a3a,0x2c32333172252032,0x6172620a3b323120,0x33424220696e752e\n"
".quad 0x420a0a3b31315f32,0x6d0a3a385f323342,0x25203233752e766f,0x3131202c32333172\n"
".quad 0x6e752e6172620a3b,0x315f323342422069,0x323342420a0a3b31,0x2e766f6d0a3a395f\n"
".quad 0x3331722520323375,0x72620a3b32202c32,0x424220696e752e61,0x0a0a3b31315f3233\n"
".quad 0x3a30315f32334242,0x3233752e766f6d0a,0x202c323331722520,0x323342420a0a3b33\n"
".quad 0x766f6d0a3a31315f,0x327225203233752e,0x6c2e0a3b30202c32,0x353831203220636f\n"
".quad 0x732e74730a312030,0x33752e6465726168,0x6475635f5f5b2032,0x5f6c61636f6c5f61\n"
".quad 0x383837335f726176,0x6e6f6e5f30335f30,0x635f74736e6f635f,0x25202c5d6b636568\n"
".quad 0x6f6c2e0a3b323272,0x3135383120322063,0x732e7261620a3120,0x610a3b3020636e79\n"
".quad 0x25203233732e6464,0x317225202c333272,0x0a3b3731342d202c,0x2e746c2e70746573\n"
".quad 0x2c38702520323375,0x31202c3332722520,0x707465730a3b3039,0x203233732e74672e\n"
".quad 0x327225202c397025,0x610a3b303233202c,0x20646572702e646e,0x7025202c30317025\n"
".quad 0x0a3b397025202c38,0x2e746c2e70746573,0x3131702520323373,0x34202c327225202c\n"
".quad 0x2e646e610a3b3734,0x3170252064657270,0x2c30317025202c32,0x2e0a3b3131702520\n"
".quad 0x3831203220636f6c,0x7465730a31203335,0x3233732e74672e70,0x25202c3331702520\n"
".quad 0x33323031202c3172,0x6572702e726f0a3b,0x202c343170252064,0x7025202c32317025\n"
".quad 0x636f6c2e0a3b3331,0x2033353831203220,0x2034317025400a31,0x3233424220617262\n"
".quad 0x68730a0a3b38355f,0x7225203436622e6c,0x6c7225202c32326c,0x730a3b3233202c37\n"
".quad 0x25203436732e7268,0x7225202c33326c72,0x3b3233202c32326c,0x203220636f6c2e0a\n"
".quad 0x730a312036353831,0x25203436622e6c68,0x7225202c34326c72,0x0a3b32202c33326c\n"
".quad 0x203436732e646461,0x25202c35326c7225,0x6c7225202c346c72,0x672e646c0a3b3432\n"
".quad 0x33662e6c61626f6c,0x5b202c3466252032,0x0a3b5d35326c7225,0x203233732e646461\n"
".quad 0x317225202c347225,0x6c2e0a3b312d202c,0x363633203220636f,0x2e707465730a3120\n"
".quad 0x25203233732e7467,0x2c347225202c3170,0x7025400a3b312d20,0x4242206172622031\n"
".quad 0x0a0a3b34315f3233,0x203436752e766f6d,0x202c3033326c7225,0x752e6172620a3b30\n"
".quad 0x5f3233424220696e,0x3342420a0a3b3531,0x76630a3a34315f32,0x33732e3436732e74\n"
".quad 0x3033326c72252032,0x0a0a3b347225202c,0x3a35315f32334242,0x3436732e6464610a\n"
".quad 0x202c37326c722520,0x3637202c366c7225,0x61702e646c0a3b38,0x203436752e6d6172\n"
".quad 0x202c3932326c7225,0x74726d38315a5f5b,0x6c676e69735f645f,0x506563726f665f65\n"
".quad 0x535f536d665f5366,0x6d617261705f695f,0x6f6c2e0a3b5d335f,0x3735383120322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c38326c,0x326c7225202c3732\n"
".quad 0x326c7225202c3932,0x2e6c68730a3b3033,0x326c722520343662,0x38326c7225202c39\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c30336c,0x0a3b3233202c3932\n"
".quad 0x31203220636f6c2e,0x68730a3120373538,0x7225203436622e6c,0x6c7225202c31336c\n"
".quad 0x610a3b32202c3033,0x25203436732e6464,0x7225202c32336c72,0x336c7225202c346c\n"
".quad 0x6c672e646c0a3b31,0x3233662e6c61626f,0x202c323731662520,0x3b5d32336c72255b\n"
".quad 0x203220636f6c2e0a,0x610a312038353831,0x25203233732e6464,0x2c317225202c3572\n"
".quad 0x636f6c2e0a3b3120,0x3120313633203220,0x746c2e707465730a,0x327025203233732e\n"
".quad 0x31202c357225202c,0x7025400a3b343230,0x4242206172622032,0x0a0a3b37315f3233\n"
".quad 0x203436752e766f6d,0x202c3133326c7225,0x72620a3b33323031,0x424220696e752e61\n"
".quad 0x0a0a3b38315f3233,0x3a37315f32334242,0x3436732e7476630a,0x6c7225203233732e\n"
".quad 0x357225202c313332,0x5f323342420a0a3b,0x2e6464610a3a3831,0x336c722520343673\n"
".quad 0x2c366c7225202c34,0x6c0a3b3430333220,0x2e6d617261702e64,0x326c722520343675\n"
".quad 0x315a5f5b202c3832,0x735f645f74726d38,0x6f665f656c676e69,0x665f536650656372\n"
".quad 0x705f695f535f536d,0x3b5d335f6d617261,0x203220636f6c2e0a,0x6d0a312038353831\n"
".quad 0x36732e6f6c2e6461,0x2c35336c72252034,0x202c34336c722520,0x202c3832326c7225\n"
".quad 0x0a3b3133326c7225,0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c383132\n"
".quad 0x5f645f74726d3831,0x665f656c676e6973,0x5f5366506563726f,0x5f695f535f536d66\n"
".quad 0x5d305f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e\n"
".quad 0x326c7225202c3633,0x2e6c68730a3b3831,0x336c722520343662,0x35336c7225202c37\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c38336c,0x0a3b3233202c3733\n"
".quad 0x31203220636f6c2e,0x68730a3120383538,0x7225203436622e6c,0x6c7225202c39336c\n"
".quad 0x610a3b32202c3833,0x25203436732e6464,0x7225202c30346c72,0x6c7225202c36336c\n"
".quad 0x672e646c0a3b3933,0x33662e6c61626f6c,0x2c31373166252032,0x5d30346c72255b20\n"
".quad 0x33732e6464610a3b,0x202c373272252032,0x3b312d202c327225,0x203220636f6c2e0a\n"
".quad 0x630a312039353831,0x732e3436732e7476,0x32316c7225203233,0x0a3b37327225202c\n"
".quad 0x203436732e646461,0x25202c31346c7225,0x3531202c32316c72,0x636f6c2e0a3b3633\n"
".quad 0x2039353831203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x346c7225202c3234\n"
".quad 0x32326c7225202c31,0x3b356c7225202c38,0x3436622e6c68730a,0x202c33346c722520\n"
".quad 0x33202c32346c7225,0x732e7268730a3b32,0x34346c7225203436,0x2c33346c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x3935383120322063,0x622e6c68730a3120,0x35346c7225203436\n"
".quad 0x2c34346c7225202c,0x2e6464610a3b3220,0x346c722520343673,0x36336c7225202c36\n"
".quad 0x3b35346c7225202c,0x626f6c672e646c0a,0x25203233662e6c61,0x6c72255b202c3766\n"
".quad 0x6f6c2e0a3b5d3634,0x2036363320322063,0x6220317025400a31,0x5f32334242206172\n"
".quad 0x766f6d0a0a3b3032,0x6c7225203436752e,0x0a3b30202c323332,0x20696e752e617262\n"
".quad 0x3b31325f32334242,0x325f323342420a0a,0x732e7476630a3a30,0x25203233732e3436\n"
".quad 0x25202c3233326c72,0x3342420a0a3b3472,0x64610a3a31325f32,0x7225203436732e64\n"
".quad 0x6c7225202c38346c,0x30343833202c3231,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3732326c72,0x5f74726d38315a5f,0x656c676e69735f64,0x66506563726f665f\n"
".quad 0x5f535f536d665f53,0x5f6d617261705f69,0x636f6c2e0a3b5d33,0x2030363831203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x346c7225202c3934,0x32326c7225202c38\n"
".quad 0x33326c7225202c37,0x61702e646c0a3b32,0x203436752e6d6172,0x202c3731326c7225\n"
".quad 0x74726d38315a5f5b,0x6c676e69735f645f,0x506563726f665f65,0x535f536d665f5366\n"
".quad 0x6d617261705f695f,0x7476630a3b5d305f,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x25202c30356c7225,0x730a3b3731326c72,0x25203436622e6c68,0x7225202c31356c72\n"
".quad 0x3b3233202c39346c,0x3436732e7268730a,0x202c32356c722520,0x33202c31356c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120303638312032,0x3436622e6c68730a,0x202c33356c722520\n"
".quad 0x32202c32356c7225,0x36732e6464610a3b,0x2c34356c72252034,0x202c30356c722520\n"
".quad 0x6c0a3b33356c7225,0x6c61626f6c672e64,0x386625203233662e,0x34356c72255b202c\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203136332032,0x6172622032702540,0x33325f3233424220\n"
".quad 0x752e766f6d0a0a3b,0x33326c7225203436,0x3b33323031202c33,0x696e752e6172620a\n"
".quad 0x34325f3233424220,0x5f323342420a0a3b,0x2e7476630a3a3332,0x203233732e343673\n"
".quad 0x202c3333326c7225,0x42420a0a3b357225,0x610a3a34325f3233,0x25203436732e6464\n"
".quad 0x7225202c36356c72,0x303634202c32316c,0x61702e646c0a3b38,0x203436752e6d6172\n"
".quad 0x202c3632326c7225,0x74726d38315a5f5b,0x6c676e69735f645f,0x506563726f665f65\n"
".quad 0x535f536d665f5366,0x6d617261705f695f,0x6f6c2e0a3b5d335f,0x3136383120322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c37356c,0x326c7225202c3635\n"
".quad 0x326c7225202c3632,0x702e646c0a3b3333,0x3436752e6d617261,0x2c3631326c722520\n"
".quad 0x726d38315a5f5b20,0x676e69735f645f74,0x6563726f665f656c,0x5f536d665f536650\n"
".quad 0x617261705f695f53,0x76630a3b5d305f6d,0x6c672e6f742e6174,0x3436752e6c61626f\n"
".quad 0x202c38356c722520,0x0a3b3631326c7225,0x203436622e6c6873,0x25202c39356c7225\n"
".quad 0x3233202c37356c72,0x36732e7268730a3b,0x2c30366c72252034,0x202c39356c722520\n"
".quad 0x636f6c2e0a3b3233,0x2031363831203220,0x36622e6c68730a31,0x2c31366c72252034\n"
".quad 0x202c30366c722520,0x732e6464610a3b32,0x32366c7225203436,0x2c38356c7225202c\n"
".quad 0x0a3b31366c722520,0x61626f6c672e646c,0x6625203233662e6c,0x72255b202c393831\n"
".quad 0x6c2e0a3b5d32366c,0x363831203220636f,0x2e6464610a312032,0x3133722520323373\n"
".quad 0x31202c327225202c,0x36752e7476630a3b,0x7225203233752e34,0x337225202c33366c\n"
".quad 0x732e6464610a3b31,0x34366c7225203436,0x2c33366c7225202c,0x630a3b3237303320\n"
".quad 0x752e3436752e7476,0x35366c7225203233,0x2e0a3b317225202c,0x3831203220636f6c\n"
".quad 0x64616d0a31203236,0x203436732e6f6c2e,0x25202c36366c7225,0x7225202c34366c72\n"
".quad 0x7225202c3632326c,0x6c68730a3b35366c,0x6c7225203436622e,0x366c7225202c3736\n"
".quad 0x730a3b3233202c36,0x25203436732e7268,0x7225202c38366c72,0x3b3233202c37366c\n"
".quad 0x203220636f6c2e0a,0x730a312032363831,0x25203436622e6c68,0x7225202c39366c72\n"
".quad 0x0a3b32202c38366c,0x203436732e646461,0x25202c30376c7225,0x7225202c38356c72\n"
".quad 0x2e646c0a3b39366c,0x662e6c61626f6c67,0x2c30316625203233,0x5d30376c72255b20\n"
".quad 0x3220636f6c2e0a3b,0x400a312031363320,0x2061726220327025,0x3b36325f32334242\n"
".quad 0x36752e766f6d0a0a,0x3433326c72252034,0x0a3b33323031202c,0x20696e752e617262\n"
".quad 0x3b37325f32334242,0x325f323342420a0a,0x732e7476630a3a36,0x25203233732e3436\n"
".quad 0x25202c3433326c72,0x3342420a0a3b3572,0x64610a3a37325f32,0x7225203436732e64\n"
".quad 0x6c7225202c33376c,0x36373335202c3336,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3532326c72,0x5f74726d38315a5f,0x656c676e69735f64,0x66506563726f665f\n"
".quad 0x5f535f536d665f53,0x5f6d617261705f69,0x636f6c2e0a3b5d33,0x2033363831203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x376c7225202c3437,0x32326c7225202c33\n"
".quad 0x33326c7225202c35,0x61702e646c0a3b34,0x203436752e6d6172,0x202c3531326c7225\n"
".quad 0x74726d38315a5f5b,0x6c676e69735f645f,0x506563726f665f65,0x535f536d665f5366\n"
".quad 0x6d617261705f695f,0x7476630a3b5d305f,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x25202c35376c7225,0x730a3b3531326c72,0x25203436622e6c68,0x7225202c36376c72\n"
".quad 0x3b3233202c34376c,0x3436732e7268730a,0x202c37376c722520,0x33202c36376c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120333638312032,0x3436622e6c68730a,0x202c38376c722520\n"
".quad 0x32202c37376c7225,0x36732e6464610a3b,0x2c39376c72252034,0x202c35376c722520\n"
".quad 0x6c0a3b38376c7225,0x6c61626f6c672e64,0x316625203233662e,0x6c72255b202c3039\n"
".quad 0x6f6c2e0a3b5d3937,0x2036363320322063,0x6220317025400a31,0x5f32334242206172\n"
".quad 0x766f6d0a0a3b3932,0x6c7225203436752e,0x0a3b30202c353332,0x20696e752e617262\n"
".quad 0x3b30335f32334242,0x325f323342420a0a,0x732e7476630a3a39,0x25203233732e3436\n"
".quad 0x25202c3533326c72,0x3342420a0a3b3472,0x64610a3a30335f32,0x7225203436732e64\n"
".quad 0x6c7225202c32386c,0x34343136202c3336,0x3220636f6c2e0a3b,0x730a312031363320\n"
".quad 0x732e746c2e707465,0x2c36317025203233,0x37202c3133722520,0x706c65730a3b3836\n"
".quad 0x6c7225203436622e,0x386c7225202c3338,0x2c31313936202c32,0x6c0a3b3631702520\n"
".quad 0x2e6d617261702e64,0x326c722520343675,0x315a5f5b202c3432,0x735f645f74726d38\n"
".quad 0x6f665f656c676e69,0x665f536650656372,0x705f695f535f536d,0x3b5d335f6d617261\n"
".quad 0x203220636f6c2e0a,0x6d0a312034363831,0x36732e6f6c2e6461,0x2c34386c72252034\n"
".quad 0x202c33386c722520,0x202c3432326c7225,0x0a3b3533326c7225,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c343132,0x5f645f74726d3831,0x665f656c676e6973\n"
".quad 0x5f5366506563726f,0x5f695f535f536d66,0x5d305f6d61726170,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x326c7225202c3538,0x2e6c68730a3b3431\n"
".quad 0x386c722520343662,0x34386c7225202c36,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c37386c,0x0a3b3233202c3638,0x31203220636f6c2e,0x68730a3120343638\n"
".quad 0x7225203436622e6c,0x6c7225202c38386c,0x610a3b32202c3738,0x25203436732e6464\n"
".quad 0x7225202c39386c72,0x6c7225202c35386c,0x672e646c0a3b3838,0x33662e6c61626f6c\n"
".quad 0x202c323166252032,0x3b5d39386c72255b,0x203220636f6c2e0a,0x630a312034343831\n"
".quad 0x752e3436752e7476,0x30396c7225203233,0x610a3b327225202c,0x25203436732e6464\n"
".quad 0x7225202c31396c72,0x343136202c30396c,0x20636f6c2e0a3b34,0x3120333139312032\n"
".quad 0x2e6f6c2e64616d0a,0x396c722520343673,0x31396c7225202c33,0x3432326c7225202c\n"
".quad 0x3b35366c7225202c,0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3132326c\n"
".quad 0x645f74726d38315a,0x5f656c676e69735f,0x5366506563726f66,0x695f535f536d665f\n"
".quad 0x315f6d617261705f,0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c\n"
".quad 0x6c7225202c34396c,0x6c68730a3b313232,0x6c7225203436622e,0x396c7225202c3539\n"
".quad 0x730a3b3233202c33,0x25203436732e7268,0x7225202c36396c72,0x3b3233202c35396c\n"
".quad 0x203220636f6c2e0a,0x730a312033313931,0x25203436622e6c68,0x7225202c37396c72\n"
".quad 0x0a3b32202c36396c,0x203436732e646461,0x25202c31326c7225,0x7225202c34396c72\n"
".quad 0x7465730a3b37396c,0x3233732e71652e70,0x25202c3731702520,0x3b31202c32333172\n"
".quad 0x622037317025400a,0x5f32334242206172,0x7465730a0a3b3233,0x3233732e656e2e70\n"
".quad 0x25202c3831702520,0x3031202c32333172,0x2038317025400a3b,0x3233424220617262\n"
".quad 0x42420a0a3b36335f,0x2e0a3a32335f3233,0x3831203220636f6c,0x7465730a31203636\n"
".quad 0x3233732e71652e70,0x25202c3931702520,0x3031202c32333172,0x2039317025400a3b\n"
".quad 0x3233424220617262,0x6c2e0a0a3b34335f,0x343831203220636f,0x2e766f6d0a312032\n"
".quad 0x3331722520323375,0x2e64697425202c30,0x772e6c756d0a3b78,0x203233752e656469\n"
".quad 0x25202c38396c7225,0x3b34202c30333172,0x3436752e766f6d0a,0x202c39396c722520\n"
".quad 0x6c5f616475635f5f,0x7261765f6c61636f,0x335f39373837335f,0x6f635f6e6f6e5f32\n"
".quad 0x586d75735f74736e,0x36732e6464610a3b,0x3030316c72252034,0x2c39396c7225202c\n"
".quad 0x0a3b38396c722520,0x31203220636f6c2e,0x74730a3120333738,0x2e6465726168732e\n"
".quad 0x6c72255b20323375,0x7225202c5d303031,0x2e766f6d0a3b3232,0x316c722520343675\n"
".quad 0x75635f5f202c3130,0x6c61636f6c5f6164,0x3837335f7261765f,0x6f6e5f33345f3937\n"
".quad 0x5f74736e6f635f6e,0x64610a3b596d7573,0x7225203436732e64,0x7225202c3230316c\n"
".quad 0x7225202c3130316c,0x6f6c2e0a3b38396c,0x3437383120322063,0x68732e74730a3120\n"
".quad 0x3233752e64657261,0x3230316c72255b20,0x3b32327225202c5d,0x696e752e6172620a\n"
".quad 0x35335f3233424220,0x5f323342420a0a3b,0x2e766f6d0a3a3433,0x3237722520323375\n"
".quad 0x6f6c2e0a3b31202c,0x3736383120322063,0x68732e74730a3120,0x3233752e64657261\n"
".quad 0x616475635f5f5b20,0x765f6c61636f6c5f,0x30383837335f7261,0x5f6e6f6e5f30335f\n"
".quad 0x68635f74736e6f63,0x7225202c5d6b6365,0x636f6c2e0a3b3237,0x2039363831203220\n"
".quad 0x33662e6464610a31,0x202c373466252032,0x25202c3237316625,0x6d660a3b32373166\n"
".quad 0x3233662e6e722e61,0x25202c3834662520,0x6630202c31373166,0x3030303030303043\n"
".quad 0x0a3b37346625202c,0x203233662e646461,0x6625202c39346625,0x0a3b386625202c38\n"
".quad 0x203233662e646461,0x6625202c30356625,0x39346625202c3834,0x33662e6464610a3b\n"
".quad 0x202c313566252032,0x6625202c32316625,0x2e6464610a3b3231,0x3235662520323366\n"
".quad 0x202c30356625202c,0x64610a3b31356625,0x6625203233662e64,0x38316625202c3335\n"
".quad 0x3938316625202c39,0x33662e6275730a3b,0x202c343566252032,0x6625202c32356625\n"
".quad 0x2e6464610a3b3335,0x3535662520323366,0x2c3039316625202c,0x0a3b303931662520\n"
".quad 0x203233662e627573,0x6625202c36356625,0x35356625202c3435,0x3220636f6c2e0a3b\n"
".quad 0x0a31203234383120,0x203233752e766f6d,0x25202c3932317225,0x6d0a3b782e646974\n"
".quad 0x2e656469772e6c75,0x316c722520323375,0x32317225202c3330,0x6f6d0a3b34202c39\n"
".quad 0x7225203436752e76,0x5f5f202c3430316c,0x636f6c5f61647563,0x335f7261765f6c61\n"
".quad 0x5f32335f39373837,0x736e6f635f6e6f6e,0x0a3b586d75735f74,0x203436732e646461\n"
".quad 0x202c3530316c7225,0x202c3430316c7225,0x0a3b3330316c7225,0x31203220636f6c2e\n"
".quad 0x74730a3120393638,0x2e6465726168732e,0x6c72255b20323366,0x6625202c5d353031\n"
".quad 0x636f6c2e0a3b3635,0x2030373831203220,0x33662e6464610a31,0x202c373566252032\n"
".quad 0x6625202c30316625,0x2e6464610a3b3031,0x3835662520323366,0x25202c376625202c\n"
".quad 0x2e6275730a3b3766,0x3935662520323366,0x202c38356625202c,0x64610a3b37356625\n"
".quad 0x6625203233662e64,0x39356625202c3036,0x0a3b39346625202c,0x203233662e627573\n"
".quad 0x6625202c31366625,0x31356625202c3036,0x33662e6464610a3b,0x202c323666252032\n"
".quad 0x6625202c31366625,0x2e6275730a3b3335,0x3336662520323366,0x202c32366625202c\n"
".quad 0x6f6d0a3b35356625,0x7225203436752e76,0x5f5f202c3630316c,0x636f6c5f61647563\n"
".quad 0x335f7261765f6c61,0x5f33345f39373837,0x736e6f635f6e6f6e,0x0a3b596d75735f74\n"
".quad 0x203436732e646461,0x202c3730316c7225,0x202c3630316c7225,0x0a3b3330316c7225\n"
".quad 0x31203220636f6c2e,0x74730a3120303738,0x2e6465726168732e,0x6c72255b20323366\n"
".quad 0x6625202c5d373031,0x3342420a0a3b3336,0x646c0a3a35335f32,0x752e6d617261702e\n"
".quad 0x32326c7225203436,0x38315a5f5b202c33,0x69735f645f74726d,0x726f665f656c676e\n"
".quad 0x6d665f5366506563,0x61705f695f535f53,0x0a3b5d335f6d6172,0x31203220636f6c2e\n"
".quad 0x616d0a3120363039,0x3436732e6f6c2e64,0x2c3131316c722520,0x202c37326c722520\n"
".quad 0x202c3332326c7225,0x646c0a3b356c7225,0x752e6d617261702e,0x32326c7225203436\n"
".quad 0x38315a5f5b202c30,0x69735f645f74726d,0x726f665f656c676e,0x6d665f5366506563\n"
".quad 0x61705f695f535f53,0x0a3b5d315f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67\n"
".quad 0x31316c7225203436,0x32326c7225202c32,0x622e6c68730a3b30,0x31316c7225203436\n"
".quad 0x31316c7225202c33,0x730a3b3233202c31,0x25203436732e7268,0x25202c3431316c72\n"
".quad 0x33202c3331316c72,0x20636f6c2e0a3b32,0x3120363039312032,0x3436622e6c68730a\n"
".quad 0x2c3531316c722520,0x2c3431316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x316c7225202c3631,0x316c7225202c3231,0x636f6c2e0a3b3531,0x2037373831203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3631316c72255b,0x3b3137316625202c\n"
".quad 0x3436732e6464610a,0x2c3731316c722520,0x31202c366c722520,0x6f6c2e0a3b363335\n"
".quad 0x3730393120322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3831316c\n"
".quad 0x7225202c3731316c,0x7225202c3332326c,0x2e6c68730a3b356c,0x316c722520343662\n"
".quad 0x316c7225202c3931,0x0a3b3233202c3831,0x203436732e726873,0x202c3032316c7225\n"
".quad 0x202c3931316c7225,0x636f6c2e0a3b3233,0x2037303931203220,0x36622e6c68730a31\n"
".quad 0x3132316c72252034,0x3032316c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c323231,0x6c7225202c323131,0x6f6c2e0a3b313231,0x3837383120322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3232316c72255b20,0x3b30316625202c5d\n"
".quad 0x203220636f6c2e0a,0x6d0a312038303931,0x36732e6f6c2e6461,0x3432316c72252034\n"
".quad 0x2c34336c7225202c,0x2c3332326c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3532316c72,0x33202c3432316c72,0x732e7268730a3b32,0x32316c7225203436\n"
".quad 0x32316c7225202c36,0x2e0a3b3233202c35,0x3931203220636f6c,0x6c68730a31203830\n"
".quad 0x6c7225203436622e,0x6c7225202c373231,0x0a3b32202c363231,0x203436732e646461\n"
".quad 0x202c3832316c7225,0x202c3231316c7225,0x0a3b3732316c7225,0x31203220636f6c2e\n"
".quad 0x74730a3120393738,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d383231\n"
".quad 0x6464610a3b323731,0x6c7225203436732e,0x6c7225202c393231,0x3b32373033202c36\n"
".quad 0x203220636f6c2e0a,0x6d0a312039303931,0x36732e6f6c2e6461,0x3033316c72252034\n"
".quad 0x3932316c7225202c,0x3332326c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3133316c7225,0x202c3033316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3233,0x0a3b3233202c3133,0x31203220636f6c2e,0x68730a3120393039\n"
".quad 0x7225203436622e6c,0x7225202c3333316c,0x3b32202c3233316c,0x3436732e6464610a\n"
".quad 0x2c3433316c722520,0x2c3231316c722520,0x3b3333316c722520,0x203220636f6c2e0a\n"
".quad 0x730a312030383831,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3433316c\n"
".quad 0x2e6464610a3b3766,0x316c722520343673,0x366c7225202c3533,0x0a3b30343833202c\n"
".quad 0x31203220636f6c2e,0x616d0a3120303139,0x3436732e6f6c2e64,0x2c3633316c722520\n"
".quad 0x2c3533316c722520,0x2c3332326c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3733316c72,0x33202c3633316c72,0x732e7268730a3b32,0x33316c7225203436\n"
".quad 0x33316c7225202c38,0x2e0a3b3233202c37,0x3931203220636f6c,0x6c68730a31203031\n"
".quad 0x6c7225203436622e,0x6c7225202c393331,0x0a3b32202c383331,0x203436732e646461\n"
".quad 0x202c3034316c7225,0x202c3231316c7225,0x0a3b3933316c7225,0x31203220636f6c2e\n"
".quad 0x74730a3120313838,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d303431\n"
".quad 0x6464610a3b303931,0x6c7225203436732e,0x6c7225202c313431,0x3b38303634202c36\n"
".quad 0x203220636f6c2e0a,0x6d0a312031313931,0x36732e6f6c2e6461,0x3234316c72252034\n"
".quad 0x3134316c7225202c,0x3332326c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3334316c7225,0x202c3234316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3434,0x0a3b3233202c3334,0x31203220636f6c2e,0x68730a3120313139\n"
".quad 0x7225203436622e6c,0x7225202c3534316c,0x3b32202c3434316c,0x3436732e6464610a\n"
".quad 0x2c3634316c722520,0x2c3231316c722520,0x3b3534316c722520,0x203220636f6c2e0a\n"
".quad 0x730a312032383831,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3634316c\n"
".quad 0x6464610a3b323166,0x6c7225203436732e,0x6c7225202c373431,0x3b36373335202c36\n"
".quad 0x203220636f6c2e0a,0x6d0a312032313931,0x36732e6f6c2e6461,0x3834316c72252034\n"
".quad 0x3734316c7225202c,0x3332326c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3934316c7225,0x202c3834316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3035,0x0a3b3233202c3934,0x31203220636f6c2e,0x68730a3120323139\n"
".quad 0x7225203436622e6c,0x7225202c3135316c,0x3b32202c3035316c,0x3436732e6464610a\n"
".quad 0x2c3235316c722520,0x2c3231316c722520,0x3b3135316c722520,0x203220636f6c2e0a\n"
".quad 0x730a312033383831,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3235316c\n"
".quad 0x636f6c2e0a3b3866,0x2034383831203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x2c5d31326c72255b,0x0a3b393831662520,0x20696e752e617262,0x3b37355f32334242\n"
".quad 0x335f323342420a0a,0x20636f6c2e0a3a36,0x3120323438312032,0x3233752e766f6d0a\n"
".quad 0x202c313331722520,0x0a3b782e64697425,0x656469772e6c756d,0x6c7225203233752e\n"
".quad 0x317225202c333531,0x6d0a3b34202c3133,0x25203436752e766f,0x5f202c3435316c72\n"
".quad 0x6f6c5f616475635f,0x5f7261765f6c6163,0x32335f3937383733,0x6e6f635f6e6f6e5f\n"
".quad 0x3b586d75735f7473,0x3436732e6464610a,0x2c3535316c722520,0x2c3435316c722520\n"
".quad 0x3b3335316c722520,0x203220636f6c2e0a,0x730a312037383831,0x6465726168732e74\n"
".quad 0x72255b203233752e,0x25202c5d3535316c,0x766f6d0a3b323272,0x6c7225203436752e\n"
".quad 0x635f5f202c363531,0x61636f6c5f616475,0x37335f7261765f6c,0x6e5f33345f393738\n"
".quad 0x74736e6f635f6e6f,0x610a3b596d75735f,0x25203436732e6464,0x25202c3735316c72\n"
".quad 0x25202c3635316c72,0x2e0a3b3335316c72,0x3831203220636f6c,0x2e74730a31203838\n"
".quad 0x752e646572616873,0x316c72255b203233,0x327225202c5d3735,0x20636f6c2e0a3b32\n"
".quad 0x0a31203432332032,0x2e71652e70746573,0x3032702520323373,0x2c3233317225202c\n"
".quad 0x327025400a3b3220,0x4242206172622030,0x0a0a3b35345f3233,0x33203220636f6c2e\n"
".quad 0x7465730a31203832,0x3233732e71652e70,0x25202c3132702520,0x3b33202c32333172\n"
".quad 0x622031327025400a,0x5f32334242206172,0x766f6d0a0a3b3933,0x326625203233662e\n"
".quad 0x32316625202c3031,0x33662e766f6d0a3b,0x2c39303266252032,0x6f6d0a3b38662520\n"
".quad 0x6625203233662e76,0x316625202c383332,0x662e766f6d0a3b30,0x3733326625203233\n"
".quad 0x620a3b376625202c,0x4220696e752e6172,0x0a3b31355f323342,0x39335f323342420a\n"
".quad 0x3220636f6c2e0a3a,0x730a312030373220,0x732e71652e707465,0x2c32327025203233\n"
".quad 0x3b30202c32722520,0x622032327025400a,0x5f32334242206172,0x6f6c2e0a0a3b3334\n"
".quad 0x2034373220322063,0x652e707465730a31,0x7025203233732e71,0x2c327225202c3332\n"
".quad 0x25400a3b37363720,0x2061726220333270,0x3b32345f32334242,0x33662e766f6d0a0a\n"
".quad 0x2c32393166252032,0x0a3b303931662520,0x203233662e766f6d,0x25202c3139316625\n"
".quad 0x6f6d0a3b39383166,0x6625203233662e76,0x316625202c323432,0x662e766f6d0a3b30\n"
".quad 0x3134326625203233,0x620a3b376625202c,0x4220696e752e6172,0x0a3b34345f323342\n"
".quad 0x32345f323342420a,0x33662e766f6d0a3a,0x2c31393166252032,0x0a3b393831662520\n"
".quad 0x203233662e766f6d,0x25202c3239316625,0x6f6d0a3b39383166,0x6625203233662e76\n"
".quad 0x376625202c313432,0x33662e766f6d0a3b,0x2c32343266252032,0x72620a3b37662520\n"
".quad 0x424220696e752e61,0x0a0a3b34345f3233,0x3a33345f32334242,0x3233662e766f6d0a\n"
".quad 0x202c313931662520,0x6d0a3b3039316625,0x25203233662e766f,0x6625202c32393166\n"
".quad 0x766f6d0a3b303931,0x326625203233662e,0x30316625202c3134,0x33662e766f6d0a3b\n"
".quad 0x2c32343266252032,0x0a0a3b3031662520,0x3a34345f32334242,0x3233662e766f6d0a\n"
".quad 0x202c383332662520,0x6d0a3b3234326625,0x25203233662e766f,0x6625202c37333266\n"
".quad 0x766f6d0a3b313432,0x316625203233662e,0x39316625202c3039,0x662e766f6d0a3b32\n"
".quad 0x3938316625203233,0x3b3139316625202c,0x3233662e766f6d0a,0x30202c3436662520\n"
".quad 0x3037443341443366,0x20636f6c2e0a3b41,0x0a31203138322032,0x662e6e722e616d66\n"
".quad 0x3237316625203233,0x202c34366625202c,0x4141413246336630,0x37316625202c4241\n"
".quad 0x20636f6c2e0a3b31,0x0a31203238322032,0x203233662e627573,0x6625202c35366625\n"
".quad 0x326625202c373332,0x2e766f6d0a3b3833,0x3636662520323366,0x303046336630202c\n"
".quad 0x6c2e0a3b30303030,0x323832203220636f,0x662e67656e0a3120,0x2c37366625203233\n"
".quad 0x660a3b3536662520,0x33662e6e722e616d,0x202c383666252032,0x6625202c37366625\n"
".quad 0x39316625202c3636,0x722e616d660a3b30,0x6625203233662e6e,0x366625202c393032\n"
".quad 0x3245336630202c34,0x25202c4241414141,0x6f6c2e0a3b383666,0x2033383220322063\n"
".quad 0x6e722e616d660a31,0x366625203233662e,0x2c35366625202c39,0x3030304633663020\n"
".quad 0x316625202c303030,0x2e616d660a3b3938,0x25203233662e6e72,0x6625202c30313266\n"
".quad 0x45336630202c3436,0x202c424141414132,0x72620a3b39366625,0x424220696e752e61\n"
".quad 0x0a0a3b31355f3233,0x3a35345f32334242,0x203220636f6c2e0a,0x65730a3120373432\n"
".quad 0x33732e71652e7074,0x202c343270252032,0x0a3b30202c327225,0x7262203432702540\n"
".quad 0x345f323342422061,0x636f6c2e0a0a3b39,0x3120313532203220,0x71652e707465730a\n"
".quad 0x327025203233732e,0x202c327225202c35,0x7025400a3b373637,0x4220617262203532\n"
".quad 0x0a3b38345f323342,0x3233662e766f6d0a,0x202c323132662520,0x6f6d0a3b32316625\n"
".quad 0x6625203233662e76,0x386625202c313132,0x33662e766f6d0a3b,0x2c30343266252032\n"
".quad 0x6d0a3b3031662520,0x25203233662e766f,0x6625202c39333266,0x752e6172620a3b37\n"
".quad 0x5f3233424220696e,0x3342420a0a3b3035,0x6f6d0a3a38345f32,0x6625203233662e76\n"
".quad 0x386625202c323132,0x33662e766f6d0a3b,0x2c31313266252032,0x6f6d0a3b38662520\n"
".quad 0x6625203233662e76,0x376625202c303432,0x33662e766f6d0a3b,0x2c39333266252032\n"
".quad 0x72620a3b37662520,0x424220696e752e61,0x0a0a3b30355f3233,0x3a39345f32334242\n"
".quad 0x3233662e766f6d0a,0x202c323132662520,0x6f6d0a3b32316625,0x6625203233662e76\n"
".quad 0x316625202c313132,0x662e766f6d0a3b32,0x3034326625203233,0x0a3b30316625202c\n"
".quad 0x203233662e766f6d,0x25202c3933326625,0x42420a0a3b303166,0x6d0a3a30355f3233\n"
".quad 0x25203233662e766f,0x6625202c38333266,0x766f6d0a3b303432,0x326625203233662e\n"
".quad 0x33326625202c3733,0x662e766f6d0a3b39,0x3031326625203233,0x3b3231326625202c\n"
".quad 0x3233662e766f6d0a,0x202c393032662520,0x2e0a3b3131326625,0x3532203220636f6c\n"
".quad 0x2e6464610a312038,0x3037662520323366,0x25202c346625202c,0x64610a3b37333266\n"
".quad 0x6625203233662e64,0x30376625202c3137,0x3b3833326625202c,0x3233662e6464610a\n"
".quad 0x25202c3237662520,0x6625202c32373166,0x6464610a3b323731,0x376625203233662e\n"
".quad 0x2c31376625202c33,0x610a3b3237662520,0x25203233662e6464,0x326625202c343766\n"
".quad 0x30326625202c3930,0x662e6464610a3b39,0x2c35376625203233,0x25202c3337662520\n"
".quad 0x6464610a3b343766,0x376625203233662e,0x3031326625202c36,0x3b3031326625202c\n"
".quad 0x3233662e6464610a,0x25202c3737662520,0x376625202c353766,0x662e6464610a3b36\n"
".quad 0x2c38376625203233,0x30202c3737662520,0x3030303038464266,0x20636f6c2e0a3b30\n"
".quad 0x0a31203036322032,0x662e6e722e616d66,0x3137316625203233,0x202c38376625202c\n"
".quad 0x4141413246426630,0x37316625202c4241,0x20636f6c2e0a3b32,0x0a31203136322032\n"
".quad 0x203233662e627573,0x6625202c39376625,0x326625202c373332,0x2e766f6d0a3b3833\n"
".quad 0x3038662520323366,0x303046336630202c,0x6c2e0a3b30303030,0x313632203220636f\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x39376625202c3138,0x303046336630202c\n"
".quad 0x6625202c30303030,0x766f6d0a3b393032,0x386625203233662e,0x3245336630202c32\n"
".quad 0x2e0a3b4241414141,0x3632203220636f6c,0x2e67656e0a312031,0x3338662520323366\n"
".quad 0x0a3b38376625202c,0x662e6e722e616d66,0x3039316625203233,0x202c33386625202c\n"
".quad 0x6625202c32386625,0x636f6c2e0a3b3138,0x3120323632203220,0x3233662e67656e0a\n"
".quad 0x25202c3438662520,0x616d660a3b393766,0x203233662e6e722e,0x6625202c35386625\n"
".quad 0x30386625202c3438,0x3b3031326625202c,0x2e6e722e616d660a,0x3831662520323366\n"
".quad 0x2c33386625202c39,0x25202c3238662520,0x42420a0a3b353866,0x6d0a3a31355f3233\n"
".quad 0x25203233662e766f,0x326625202c313366,0x2e766f6d0a3b3833,0x3333662520323366\n"
".quad 0x3b3733326625202c,0x3233662e766f6d0a,0x25202c3732662520,0x6f6d0a3b30313266\n"
".quad 0x6625203233662e76,0x30326625202c3033,0x662e766f6d0a3b39,0x2c38326625203233\n"
".quad 0x0a3b303931662520,0x203233662e766f6d,0x6625202c39326625,0x6f6c2e0a3b393831\n"
".quad 0x2032333320322063,0x652e707465730a31,0x7025203233732e71,0x33317225202c3632\n"
".quad 0x400a3b3131202c32,0x6172622036327025,0x35355f3233424220,0x20636f6c2e0a0a3b\n"
".quad 0x0a31203833332032,0x2e71652e70746573,0x3732702520323373,0x2c3233317225202c\n"
".quad 0x7025400a3b323120,0x4220617262203732,0x0a3b34355f323342,0x3233662e766f6d0a\n"
".quad 0x202c353731662520,0x6f6d0a3b39326625,0x6625203233662e76,0x326625202c383831\n"
".quad 0x662e766f6d0a3b38,0x3738316625203233,0x3b3537316625202c,0x3233662e766f6d0a\n"
".quad 0x202c353931662520,0x6f6d0a3b30336625,0x6625203233662e76,0x326625202c383032\n"
".quad 0x662e766f6d0a3b37,0x3730326625203233,0x3b3539316625202c,0x3233662e766f6d0a\n"
".quad 0x202c353132662520,0x6f6d0a3b33336625,0x6625203233662e76,0x336625202c363332\n"
".quad 0x662e766f6d0a3b31,0x3533326625203233,0x3b3531326625202c,0x696e752e6172620a\n"
".quad 0x36355f3233424220,0x5f323342420a0a3b,0x2e766f6d0a3a3435,0x3831662520323366\n"
".quad 0x3b38326625202c38,0x3233662e766f6d0a,0x202c373831662520,0x6f6d0a3b38326625\n"
".quad 0x6625203233662e76,0x326625202c383032,0x662e766f6d0a3b37,0x3730326625203233\n"
".quad 0x0a3b37326625202c,0x203233662e766f6d,0x25202c3633326625,0x766f6d0a3b313366\n"
".quad 0x326625203233662e,0x31336625202c3533,0x6e752e6172620a3b,0x355f323342422069\n"
".quad 0x323342420a0a3b36,0x766f6d0a3a35355f,0x316625203233662e,0x39326625202c3838\n"
".quad 0x33662e766f6d0a3b,0x2c37383166252032,0x6d0a3b3932662520,0x25203233662e766f\n"
".quad 0x6625202c38303266,0x2e766f6d0a3b3033,0x3032662520323366,0x3b30336625202c37\n"
".quad 0x3233662e766f6d0a,0x202c363332662520,0x6f6d0a3b33336625,0x6625203233662e76\n"
".quad 0x336625202c353332,0x323342420a0a3b33,0x6f6c2e0a3a36355f,0x3330393120322063\n"
".quad 0x662e6464610a3120,0x2c36386625203233,0x6625202c34662520,0x6464610a3b323731\n"
".quad 0x386625203233662e,0x2c36386625202c37,0x0a3b353332662520,0x203233662e646461\n"
".quad 0x6625202c38386625,0x37316625202c3738,0x662e6464610a3b31,0x2c39386625203233\n"
".quad 0x25202c3838662520,0x64610a3b36333266,0x6625203233662e64,0x39386625202c3039\n"
".quad 0x3b3730326625202c,0x3233662e6464610a,0x25202c3139662520,0x316625202c303966\n"
".quad 0x2e6464610a3b3738,0x3239662520323366,0x202c31396625202c,0x610a3b3838316625\n"
".quad 0x25203233662e6464,0x396625202c333966,0x3830326625202c32,0x33662e6275730a3b\n"
".quad 0x202c343966252032,0x25202c3237316625,0x64610a3b31373166,0x6625203233662e64\n"
".quad 0x34396625202c3539,0x3b3730326625202c,0x3233662e6275730a,0x25202c3639662520\n"
".quad 0x316625202c353966,0x2e6275730a3b3738,0x3739662520323366,0x202c36396625202c\n"
".quad 0x610a3b3838316625,0x25203233662e6464,0x396625202c383966,0x3830326625202c37\n"
".quad 0x33662e6275730a3b,0x202c393966252032,0x25202c3533326625,0x64610a3b36333266\n"
".quad 0x6625203233662e64,0x396625202c303031,0x3730326625202c39,0x33662e6464610a3b\n"
".quad 0x2c31303166252032,0x202c303031662520,0x730a3b3738316625,0x25203233662e6275\n"
".quad 0x6625202c32303166,0x316625202c313031,0x2e6275730a3b3838,0x3031662520323366\n"
".quad 0x3230316625202c33,0x3b3830326625202c,0x3233662e6c756d0a,0x202c343031662520\n"
".quad 0x25202c3330316625,0x6d660a3b33303166,0x3233662e6e722e61,0x202c353031662520\n"
".quad 0x6625202c38396625,0x30316625202c3839,0x662e766f6d0a3b34,0x3630316625203233\n"
".quad 0x304346336630202c,0x6c2e0a3b30303030,0x303931203220636f,0x2e67656e0a312033\n"
".quad 0x3031662520323366,0x3530316625202c37,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x30316625202c3830,0x3630316625202c37,0x0a3b33396625202c,0x662e6e722e616d66\n"
".quad 0x3930316625203233,0x2c3830316625202c,0x3833454542663020,0x346625202c393345\n"
".quad 0x33662e67656e0a3b,0x2c30313166252032,0x0a3b393031662520,0x6d617261702e646c\n"
".quad 0x316625203233662e,0x315a5f5b202c3037,0x735f645f74726d38,0x6f665f656c676e69\n"
".quad 0x665f536650656372,0x705f695f535f536d,0x3b5d325f6d617261,0x203220636f6c2e0a\n"
".quad 0x660a312033303931,0x33662e6e722e616d,0x2c31313166252032,0x202c303131662520\n"
".quad 0x25202c3037316625,0x2e766f6d0a3b3466,0x3131662520323366,0x3430346630202c32\n"
".quad 0x2e0a3b3030303030,0x3931203220636f6c,0x616d660a31203330,0x203233662e6e722e\n"
".quad 0x25202c3331316625,0x346630202c383966,0x2c30303030303430,0x6d0a3b3339662520\n"
".quad 0x25203233662e6c75,0x6625202c34313166,0x30346630202c3839,0x0a3b303030303039\n"
".quad 0x662e6e722e616d66,0x3531316625203233,0x2c3431316625202c,0x25202c3839662520\n"
".quad 0x6d660a3b33313166,0x3233662e6e722e61,0x202c363131662520,0x25202c3730316625\n"
".quad 0x6625202c36303166,0x766f6d0a3b353131,0x316625203233662e,0x44336630202c3731\n"
".quad 0x0a3b393345383345,0x31203220636f6c2e,0x656e0a3120333039,0x6625203233662e67\n"
".quad 0x316625202c383131,0x2e616d660a3b3631,0x25203233662e6e72,0x6625202c39313166\n"
".quad 0x316625202c383131,0x37316625202c3731,0x662e67656e0a3b32,0x3032316625203233\n"
".quad 0x3b3931316625202c,0x2e6e722e616d660a,0x3231662520323366,0x3032316625202c31\n"
".quad 0x2c3037316625202c,0x0a3b323731662520,0x662e6e722e616d66,0x3232316625203233\n"
".quad 0x2c3330316625202c,0x3030343034663020,0x396625202c303030,0x662e6c756d0a3b33\n"
".quad 0x3332316625203233,0x2c3330316625202c,0x3030393034663020,0x616d660a3b303030\n"
".quad 0x203233662e6e722e,0x25202c3432316625,0x6625202c33323166,0x316625202c333031\n"
".quad 0x2e616d660a3b3232,0x25203233662e6e72,0x6625202c35323166,0x316625202c373031\n"
".quad 0x32316625202c3630,0x662e67656e0a3b34,0x3632316625203233,0x3b3532316625202c\n"
".quad 0x2e6e722e616d660a,0x3231662520323366,0x3632316625202c37,0x2c3731316625202c\n"
".quad 0x0a3b353332662520,0x203233662e67656e,0x25202c3832316625,0x6d660a3b37323166\n"
".quad 0x3233662e6e722e61,0x202c393231662520,0x25202c3832316625,0x6625202c30373166\n"
".quad 0x67656e0a3b353332,0x316625203233662e,0x38396625202c3033,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x33316625202c3133,0x3231316625202c30,0x0a3b33396625202c\n"
".quad 0x662e6e722e616d66,0x3233316625203233,0x2c3431316625202c,0x25202c3839662520\n"
".quad 0x6d660a3b31333166,0x3233662e6e722e61,0x202c333331662520,0x25202c3730316625\n"
".quad 0x6625202c36303166,0x67656e0a3b323331,0x316625203233662e,0x33316625202c3433\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x316625202c353331,0x31316625202c3433\n"
".quad 0x3137316625202c37,0x33662e67656e0a3b,0x2c36333166252032,0x0a3b353331662520\n"
".quad 0x662e6e722e616d66,0x3733316625203233,0x2c3633316625202c,0x202c303731662520\n"
".quad 0x6e0a3b3137316625,0x25203233662e6765,0x6625202c38333166,0x616d660a3b333031\n"
".quad 0x203233662e6e722e,0x25202c3933316625,0x6625202c38333166,0x396625202c323131\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x316625202c303431,0x30316625202c3332\n"
".quad 0x3933316625202c33,0x6e722e616d660a3b,0x316625203233662e,0x30316625202c3134\n"
".quad 0x3630316625202c37,0x3b3034316625202c,0x3233662e67656e0a,0x202c323431662520\n"
".quad 0x660a3b3134316625,0x33662e6e722e616d,0x2c33343166252032,0x202c323431662520\n"
".quad 0x25202c3731316625,0x656e0a3b36333266,0x6625203233662e67,0x316625202c343431\n"
".quad 0x2e616d660a3b3334,0x25203233662e6e72,0x6625202c35343166,0x316625202c343431\n"
".quad 0x33326625202c3037,0x662e6464610a3b36,0x3634316625203233,0x202c38396625202c\n"
".quad 0x660a3b3330316625,0x33662e6e722e616d,0x2c37343166252032,0x202c363431662520\n"
".quad 0x3030303430346630,0x33396625202c3030,0x33662e6c756d0a3b,0x2c38343166252032\n"
".quad 0x202c363431662520,0x3030303930346630,0x2e616d660a3b3030,0x25203233662e6e72\n"
".quad 0x6625202c39343166,0x316625202c383431,0x34316625202c3634,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x316625202c303531,0x30316625202c3730,0x3934316625202c36\n"
".quad 0x36662e7476630a3b,0x6625203233662e34,0x35316625202c3164,0x662e766f6d0a3b30\n"
".quad 0x2c32646625203436,0x3743394633643020,0x3842374331374331,0x6f6c2e0a3b433144\n"
".quad 0x3330393120322063,0x662e7476630a3120,0x25203233662e3436,0x326625202c336466\n"
".quad 0x2e67656e0a3b3730,0x3464662520343666,0x0a3b31646625202c,0x662e6e722e616d66\n"
".quad 0x2c35646625203436,0x25202c3464662520,0x646625202c326466,0x662e7476630a3b33\n"
".quad 0x25203233662e3436,0x316625202c366466,0x2e67656e0a3b3037,0x3764662520343666\n"
".quad 0x0a3b36646625202c,0x662e6e722e616d66,0x2c38646625203436,0x25202c3764662520\n"
".quad 0x646625202c356466,0x722e7476630a3b33,0x36662e3233662e6e,0x2c31353166252034\n"
".quad 0x730a3b3864662520,0x25203233662e6275,0x6625202c32353166,0x396625202c333031\n"
".quad 0x20636f6c2e0a3b38,0x3120333039312032,0x2e6e722e616d660a,0x3531662520323366\n"
".quad 0x3235316625202c33,0x303430346630202c,0x6625202c30303030,0x2e6c756d0a3b3339\n"
".quad 0x3531662520323366,0x3235316625202c34,0x303930346630202c,0x6d660a3b30303030\n"
".quad 0x3233662e6e722e61,0x202c353531662520,0x25202c3435316625,0x6625202c32353166\n"
".quad 0x616d660a3b333531,0x203233662e6e722e,0x25202c3635316625,0x6625202c37303166\n"
".quad 0x316625202c363031,0x2e7476630a3b3535,0x203233662e343666,0x6625202c39646625\n"
".quad 0x7476630a3b363531,0x3233662e3436662e,0x202c303164662520,0x6e0a3b3738316625\n"
".quad 0x25203436662e6765,0x6625202c31316466,0x2e616d660a3b3964,0x25203436662e6e72\n"
".quad 0x6625202c32316466,0x646625202c313164,0x3031646625202c32,0x6e722e616d660a3b\n"
".quad 0x646625203436662e,0x37646625202c3331,0x2c3231646625202c,0x0a3b303164662520\n"
".quad 0x662e6e722e747663,0x25203436662e3233,0x6625202c37353166,0x6275730a3b333164\n"
".quad 0x316625203233662e,0x33316625202c3835,0x3330316625202c30,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x35316625202c3935,0x3430346630202c38,0x25202c3030303030\n"
".quad 0x6c756d0a3b333966,0x316625203233662e,0x35316625202c3036,0x3930346630202c38\n"
".quad 0x660a3b3030303030,0x33662e6e722e616d,0x2c31363166252032,0x202c303631662520\n"
".quad 0x25202c3835316625,0x6d660a3b39353166,0x3233662e6e722e61,0x202c323631662520\n"
".quad 0x25202c3730316625,0x6625202c36303166,0x7476630a3b313631,0x3233662e3436662e\n"
".quad 0x202c343164662520,0x630a3b3236316625,0x662e3436662e7476,0x3531646625203233\n"
".quad 0x3b3838316625202c,0x3436662e67656e0a,0x202c363164662520,0x660a3b3431646625\n"
".quad 0x36662e6e722e616d,0x2c37316466252034,0x202c363164662520,0x6625202c32646625\n"
".quad 0x616d660a3b353164,0x203436662e6e722e,0x25202c3831646625,0x646625202c376466\n"
".quad 0x31646625202c3731,0x722e7476630a3b35,0x36662e3233662e6e,0x2c33363166252034\n"
".quad 0x0a3b383164662520,0x203233662e627573,0x25202c3436316625,0x316625202c383966\n"
".quad 0x2e616d660a3b3330,0x25203233662e6e72,0x6625202c35363166,0x346630202c343631\n"
".quad 0x2c30303030303430,0x6d0a3b3339662520,0x25203233662e6c75,0x6625202c36363166\n"
".quad 0x346630202c343631,0x3b30303030303930,0x2e6e722e616d660a,0x3631662520323366\n"
".quad 0x3636316625202c37,0x2c3436316625202c,0x0a3b353631662520,0x662e6e722e616d66\n"
".quad 0x3836316625203233,0x2c3730316625202c,0x202c363031662520,0x630a3b3736316625\n"
".quad 0x662e3436662e7476,0x3931646625203233,0x3b3836316625202c,0x3436662e7476630a\n"
".quad 0x646625203233662e,0x30326625202c3032,0x662e67656e0a3b38,0x3132646625203436\n"
".quad 0x3b3931646625202c,0x2e6e722e616d660a,0x3264662520343666,0x3132646625202c32\n"
".quad 0x202c32646625202c,0x660a3b3032646625,0x36662e6e722e616d,0x2c33326466252034\n"
".quad 0x25202c3764662520,0x6625202c32326466,0x7476630a3b303264,0x2e3233662e6e722e\n"
".quad 0x3631662520343666,0x3332646625202c39,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3232326c72,0x5f74726d38315a5f,0x656c676e69735f64,0x66506563726f665f\n"
".quad 0x5f535f536d665f53,0x5f6d617261705f69,0x636f6c2e0a3b5d33,0x2034343831203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c303631,0x32326c7225202c36\n"
".quad 0x3b356c7225202c32,0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3931326c\n"
".quad 0x645f74726d38315a,0x5f656c676e69735f,0x5366506563726f66,0x695f535f536d665f\n"
".quad 0x315f6d617261705f,0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c\n"
".quad 0x7225202c3136316c,0x68730a3b3931326c,0x7225203436622e6c,0x7225202c3236316c\n"
".quad 0x3233202c3036316c,0x36732e7268730a3b,0x3336316c72252034,0x3236316c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x303931203220636f,0x2e6c68730a312035,0x316c722520343662\n"
".quad 0x316c7225202c3436,0x610a3b32202c3336,0x25203436732e6464,0x25202c3536316c72\n"
".quad 0x25202c3136316c72,0x730a3b3436316c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3536316c,0x6c2e0a3b31313166,0x303931203220636f,0x2e64616d0a312036\n"
".quad 0x25203436732e6f6c,0x25202c3736316c72,0x7225202c37326c72,0x7225202c3232326c\n"
".quad 0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3836,0x0a3b3233202c3736\n"
".quad 0x203436732e726873,0x202c3936316c7225,0x202c3836316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2036303931203220,0x36622e6c68730a31,0x3037316c72252034,0x3936316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c313731,0x6c7225202c313631\n"
".quad 0x2e74730a3b303731,0x662e6c61626f6c67,0x316c72255b203233,0x316625202c5d3137\n"
".quad 0x2e6464610a3b3132,0x316c722520343673,0x366c7225202c3237,0x0a3b36333531202c\n"
".quad 0x31203220636f6c2e,0x616d0a3120373039,0x3436732e6f6c2e64,0x2c3337316c722520\n"
".quad 0x2c3237316c722520,0x2c3232326c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3437316c72,0x33202c3337316c72,0x732e7268730a3b32,0x37316c7225203436\n"
".quad 0x37316c7225202c35,0x2e0a3b3233202c34,0x3931203220636f6c,0x6c68730a31203730\n"
".quad 0x6c7225203436622e,0x6c7225202c363731,0x0a3b32202c353731,0x203436732e646461\n"
".quad 0x202c3737316c7225,0x202c3136316c7225,0x0a3b3637316c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3737316c72,0x2e0a3b3932316625,0x3931203220636f6c\n"
".quad 0x64616d0a31203830,0x203436732e6f6c2e,0x202c3937316c7225,0x25202c34336c7225\n"
".quad 0x25202c3232326c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c303831\n"
".quad 0x3b3233202c393731,0x3436732e7268730a,0x2c3138316c722520,0x2c3038316c722520\n"
".quad 0x6f6c2e0a3b323320,0x3830393120322063,0x622e6c68730a3120,0x38316c7225203436\n"
".quad 0x38316c7225202c32,0x64610a3b32202c31,0x7225203436732e64,0x7225202c3338316c\n"
".quad 0x7225202c3136316c,0x74730a3b3238316c,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d333831,0x6464610a3b373331,0x6c7225203436732e,0x6c7225202c343831\n"
".quad 0x3b32373033202c36,0x203220636f6c2e0a,0x6d0a312039303931,0x36732e6f6c2e6461\n"
".quad 0x3538316c72252034,0x3438316c7225202c,0x3232326c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3638316c7225,0x202c3538316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3738,0x0a3b3233202c3638,0x31203220636f6c2e\n"
".quad 0x68730a3120393039,0x7225203436622e6c,0x7225202c3838316c,0x3b32202c3738316c\n"
".quad 0x3436732e6464610a,0x2c3938316c722520,0x2c3136316c722520,0x3b3838316c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3938316c7225,0x0a3b353431662520\n"
".quad 0x203436732e646461,0x202c3039316c7225,0x3833202c366c7225,0x636f6c2e0a3b3034\n"
".quad 0x2030313931203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c313931\n"
".quad 0x6c7225202c303931,0x6c7225202c323232,0x622e6c68730a3b35,0x39316c7225203436\n"
".quad 0x39316c7225202c32,0x730a3b3233202c31,0x25203436732e7268,0x25202c3339316c72\n"
".quad 0x33202c3239316c72,0x20636f6c2e0a3b32,0x3120303139312032,0x3436622e6c68730a\n"
".quad 0x2c3439316c722520,0x2c3339316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x316c7225202c3539,0x316c7225202c3136,0x672e74730a3b3439,0x33662e6c61626f6c\n"
".quad 0x39316c72255b2032,0x35316625202c5d35,0x732e6464610a3b31,0x39316c7225203436\n"
".quad 0x2c366c7225202c36,0x2e0a3b3830363420,0x3931203220636f6c,0x64616d0a31203131\n"
".quad 0x203436732e6f6c2e,0x202c3739316c7225,0x202c3639316c7225,0x202c3232326c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3839316c,0x3233202c3739316c\n"
".quad 0x36732e7268730a3b,0x3939316c72252034,0x3839316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x313931203220636f,0x2e6c68730a312031,0x326c722520343662,0x316c7225202c3030\n"
".quad 0x610a3b32202c3939,0x25203436732e6464,0x25202c3130326c72,0x25202c3136316c72\n"
".quad 0x730a3b3030326c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3130326c\n"
".quad 0x64610a3b37353166,0x7225203436732e64,0x7225202c3230326c,0x36373335202c366c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203231393120,0x732e6f6c2e64616d,0x30326c7225203436\n"
".quad 0x30326c7225202c33,0x32326c7225202c32,0x3b356c7225202c32,0x3436622e6c68730a\n"
".quad 0x2c3430326c722520,0x2c3330326c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c353032,0x3b3233202c343032,0x203220636f6c2e0a,0x730a312032313931\n"
".quad 0x25203436622e6c68,0x25202c3630326c72,0x32202c3530326c72,0x36732e6464610a3b\n"
".quad 0x3730326c72252034,0x3136316c7225202c,0x3630326c7225202c,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x5d3730326c72255b,0x3b3336316625202c,0x3436732e6464610a\n"
".quad 0x2c3830326c722520,0x36202c366c722520,0x6f6c2e0a3b343431,0x3331393120322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3930326c,0x7225202c3830326c\n"
".quad 0x7225202c3232326c,0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3031\n"
".quad 0x0a3b3233202c3930,0x203436732e726873,0x202c3131326c7225,0x202c3031326c7225\n"
".quad 0x636f6c2e0a3b3233,0x2033313931203220,0x36622e6c68730a31,0x3231326c72252034\n"
".quad 0x3131326c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c333132\n"
".quad 0x6c7225202c313631,0x2e74730a3b323132,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x316625202c5d3331,0x3342420a0a3b3936,0x6c2e0a3a37355f32,0x313931203220636f\n"
".quad 0x2e7261620a312036,0x0a3b3020636e7973,0x38355f323342420a,0x3220636f6c2e0a3a\n"
".quad 0x0a32203533393120,0x0a0a7d0a3b746572,0x5f207972746e652e,0x645f74726d37315a\n"
".quad 0x665f42416279685f,0x5f5366506563726f,0x28695f535f536d66,0x206d617261702e0a\n"
".quad 0x315a5f203436752e,0x685f645f74726d37,0x726f665f42416279,0x6d665f5366506563\n"
".quad 0x61705f695f535f53,0x2e0a2c305f6d6172,0x752e206d61726170,0x6d37315a5f203436\n"
".quad 0x6279685f645f7472,0x6563726f665f4241,0x5f536d665f536650,0x617261705f695f53\n"
".quad 0x61702e0a2c315f6d,0x3233662e206d6172,0x74726d37315a5f20,0x42416279685f645f\n"
".quad 0x66506563726f665f,0x5f535f536d665f53,0x5f6d617261705f69,0x617261702e0a2c32\n"
".quad 0x5f203436752e206d,0x645f74726d37315a,0x665f42416279685f,0x5f5366506563726f\n"
".quad 0x5f695f535f536d66,0x2c335f6d61726170,0x206d617261702e0a,0x315a5f203436752e\n"
".quad 0x685f645f74726d37,0x726f665f42416279,0x6d665f5366506563,0x61705f695f535f53\n"
".quad 0x2e0a2c345f6d6172,0x752e206d61726170,0x6d37315a5f203436,0x6279685f645f7472\n"
".quad 0x6563726f665f4241,0x5f536d665f536650,0x617261705f695f53,0x61702e0a2c355f6d\n"
".quad 0x3233752e206d6172,0x74726d37315a5f20,0x42416279685f645f,0x66506563726f665f\n"
".quad 0x5f535f536d665f53,0x5f6d617261705f69,0x722e0a7b0a290a36,0x203233662e206765\n"
".quad 0x3b3e3338323c6625,0x662e206765722e0a,0x323c646625203436,0x6765722e0a3b3e34\n"
".quad 0x2520646572702e20,0x2e0a3b3e34323c70,0x3233732e20676572,0x3e3131313c722520\n"
".quad 0x2e206765722e0a3b,0x3c6c722520343673,0x090a0a3b3e383531,0x206465726168732e\n"
".quad 0x34206e67696c612e,0x635f5f2038622e20,0x61636f6c5f616475,0x37335f7261765f6c\n"
".quad 0x6e5f32335f363639,0x74736e6f635f6e6f,0x31355b586d75735f,0x732e090a0a3b5d32\n"
".quad 0x612e206465726168,0x2e2034206e67696c,0x6475635f5f203862,0x5f6c61636f6c5f61\n"
".quad 0x363937335f726176,0x6e6f6e5f33345f36,0x735f74736e6f635f,0x5d3231355b596d75\n"
".quad 0x6168732e090a0a3b,0x696c612e20646572,0x38622e2034206e67,0x5f616475635f5f20\n"
".quad 0x61765f6c61636f6c,0x5f37363937335f72,0x635f6e6f6e5f3033,0x6568635f74736e6f\n"
".quad 0x0a0a3b5d345b6b63,0x6d617261702e646c,0x6c7225203436752e,0x37315a5f5b202c37\n"
".quad 0x79685f645f74726d,0x63726f665f424162,0x536d665f53665065,0x7261705f695f535f\n"
".quad 0x6c0a3b5d305f6d61,0x2e6d617261702e64,0x326c722520343675,0x6d37315a5f5b202c\n"
".quad 0x6279685f645f7472,0x6563726f665f4241,0x5f536d665f536650,0x617261705f695f53\n"
".quad 0x76630a3b5d335f6d,0x6c672e6f742e6174,0x3436752e6c61626f,0x25202c336c722520\n"
".quad 0x6f6c2e0a3b376c72,0x3933393120322063,0x752e766f6d0a3120,0x202c347225203233\n"
".quad 0x3b782e6469746e25,0x3233752e766f6d0a,0x6325202c35722520,0x0a3b782e64696174\n"
".quad 0x203233752e766f6d,0x697425202c367225,0x64616d0a3b782e64,0x203233732e6f6c2e\n"
".quad 0x347225202c317225,0x25202c357225202c,0x636f6c2e0a3b3672,0x2030343931203220\n"
".quad 0x33752e766f6d0a31,0x25202c3772252032,0x0a3b792e6469746e,0x203233752e766f6d\n"
".quad 0x746325202c387225,0x6d0a3b792e646961,0x25203233752e766f,0x64697425202c3972\n"
".quad 0x2e64616d0a3b792e,0x25203233732e6f6c,0x2c377225202c3272,0x7225202c38722520\n"
".quad 0x752e7476630a3b39,0x25203233752e3436,0x317225202c346c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203134393120,0x2e3436732e747663,0x386c722520323373,0x6d0a3b327225202c\n"
".quad 0x36732e6f6c2e6461,0x202c356c72252034,0x7225202c386c7225,0x346c7225202c326c\n"
".quad 0x33752e766f6d0a3b,0x2c30313172252032,0x636f6c2e0a3b3020,0x2035343931203220\n"
".quad 0x6168732e74730a31,0x203233752e646572,0x5f616475635f5f5b,0x61765f6c61636f6c\n"
".quad 0x5f37363937335f72,0x635f6e6f6e5f3033,0x6568635f74736e6f,0x317225202c5d6b63\n"
".quad 0x636f6c2e0a3b3031,0x2036343931203220,0x79732e7261620a31,0x64610a3b3020636e\n"
".quad 0x7225203233732e64,0x2c317225202c3131,0x730a3b3731342d20,0x752e746c2e707465\n"
".quad 0x202c317025203233,0x3931202c31317225,0x2e707465730a3b30,0x25203233732e7467\n"
".quad 0x2c327225202c3270,0x6e610a3b30323320,0x2520646572702e64,0x2c317025202c3370\n"
".quad 0x65730a3b32702520,0x33732e746c2e7074,0x25202c3470252032,0x3b373434202c3272\n"
".quad 0x6572702e646e610a,0x25202c3570252064,0x3b347025202c3370,0x203220636f6c2e0a\n"
".quad 0x730a312038343931,0x732e74672e707465,0x202c367025203233,0x323031202c317225\n"
".quad 0x72702e726f0a3b33,0x202c377025206465,0x367025202c357025,0x3220636f6c2e0a3b\n"
".quad 0x0a31203834393120,0x6172622037702540,0x39335f3333424220,0x622e6c68730a0a3b\n"
".quad 0x2c396c7225203436,0x33202c356c722520,0x732e7268730a3b32,0x30316c7225203436\n"
".quad 0x202c396c7225202c,0x636f6c2e0a3b3233,0x2032353931203220,0x36622e6c68730a31\n"
".quad 0x2c31316c72252034,0x202c30316c722520,0x732e6464610a3b32,0x32316c7225203436\n"
".quad 0x202c336c7225202c,0x6c0a3b31316c7225,0x6c61626f6c672e64,0x326625203233662e\n"
".quad 0x32316c72255b202c,0x732e6464610a3b5d,0x2c33317225203233,0x312d202c32722520\n"
".quad 0x3220636f6c2e0a3b,0x0a31203335393120,0x2e3436752e747663,0x316c722520323375\n"
".quad 0x3b33317225202c33,0x3436732e6464610a,0x202c34316c722520,0x31202c33316c7225\n"
".quad 0x2e646c0a3b363335,0x36752e6d61726170,0x3735316c72252034,0x6d37315a5f5b202c\n"
".quad 0x6279685f645f7472,0x6563726f665f4241,0x5f536d665f536650,0x617261705f695f53\n"
".quad 0x6c2e0a3b5d335f6d,0x353931203220636f,0x2e64616d0a312033,0x25203436732e6f6c\n"
".quad 0x7225202c35316c72,0x6c7225202c34316c,0x6c7225202c373531,0x622e6c68730a3b34\n"
".quad 0x36316c7225203436,0x2c35316c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x316c7225202c3731,0x2e0a3b3233202c36,0x3931203220636f6c,0x6c68730a31203335\n"
".quad 0x6c7225203436622e,0x316c7225202c3831,0x64610a3b32202c37,0x7225203436732e64\n"
".quad 0x6c7225202c39316c,0x38316c7225202c33,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x72255b202c336625,0x6c2e0a3b5d39316c,0x353931203220636f,0x2e6464610a312034\n"
".quad 0x3531722520323373,0x31202c327225202c,0x36752e7476630a3b,0x7225203233752e34\n"
".quad 0x317225202c30326c,0x732e6464610a3b35,0x31326c7225203436,0x2c30326c7225202c\n"
".quad 0x2e0a3b3237303320,0x3931203220636f6c,0x64616d0a31203435,0x203436732e6f6c2e\n"
".quad 0x25202c32326c7225,0x7225202c31326c72,0x7225202c3735316c,0x2e6c68730a3b346c\n"
".quad 0x326c722520343662,0x32326c7225202c33,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c34326c,0x0a3b3233202c3332,0x31203220636f6c2e,0x68730a3120343539\n"
".quad 0x7225203436622e6c,0x6c7225202c35326c,0x610a3b32202c3432,0x25203436732e6464\n"
".quad 0x7225202c36326c72,0x326c7225202c336c,0x6c672e646c0a3b35,0x3233662e6c61626f\n"
".quad 0x255b202c34662520,0x610a3b5d36326c72,0x25203233732e6464,0x317225202c373172\n"
".quad 0x6c2e0a3b312d202c,0x363931203220636f,0x2e7476630a312032,0x732e3233662e6e72\n"
".quad 0x2c37376625203233,0x610a3b3731722520,0x25203233662e6464,0x376625202c353766\n"
".quad 0x3046336630202c37,0x630a3b3030303030,0x33662e6e722e7476,0x6625203233732e32\n"
".quad 0x0a3b327225202c35,0x203233662e646461,0x6625202c32356625,0x3046336630202c35\n"
".quad 0x0a0a3b3030303030,0x2e64322e78657409,0x662e3233662e3476,0x313466257b203233\n"
".quad 0x202c32346625202c,0x6625202c33346625,0x65745b202c7d3434,0x4131665f66655278\n"
".quad 0x2c353766257b202c,0x3b5d7d3235662520,0x20636f6c2e090a0a,0x3120333639312032\n"
".quad 0x3233732e6464610a,0x25202c3931722520,0x630a3b31202c3172,0x33662e6e722e7476\n"
".quad 0x6625203233732e32,0x39317225202c3837,0x33662e6464610a3b,0x202c393666252032\n"
".quad 0x6630202c38376625,0x3030303030304633,0x2e786574090a0a3b,0x33662e34762e6432\n"
".quad 0x257b203233662e32,0x346625202c373466,0x2c39346625202c38,0x202c7d3035662520\n"
".quad 0x5f6665527865745b,0x66257b202c413366,0x32356625202c3936,0x6c2e090a0a3b5d7d\n"
".quad 0x363931203220636f,0x2e7476630a312034,0x732e3233662e6e72,0x2c39376625203233\n"
".quad 0x610a3b3331722520,0x25203233662e6464,0x376625202c343666,0x3046336630202c39\n"
".quad 0x0a0a3b3030303030,0x2e64322e78657409,0x662e3233662e3476,0x333566257b203233\n"
".quad 0x202c34356625202c,0x6625202c35356625,0x65745b202c7d3635,0x4135665f66655278\n"
".quad 0x2c353766257b202c,0x3b5d7d3436662520,0x786574090a090a0a,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x6625202c39356625,0x31366625202c3036,0x2c7d32366625202c\n"
".quad 0x6665527865745b20,0x257b202c4136665f,0x366625202c393666,0x2e090a0a3b5d7d34\n"
".quad 0x3931203220636f6c,0x7476630a31203636,0x2e3233662e6e722e,0x3038662520323373\n"
".quad 0x0a3b35317225202c,0x203233662e646461,0x6625202c36376625,0x46336630202c3038\n"
".quad 0x0a3b303030303030,0x64322e786574090a,0x2e3233662e34762e,0x3666257b20323366\n"
".quad 0x2c36366625202c35,0x25202c3736662520,0x745b202c7d383666,0x37665f6665527865\n"
".quad 0x393666257b202c41,0x5d7d36376625202c,0x6574090a090a0a3b,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x25202c313766257b,0x376625202c323766,0x7d34376625202c33\n"
".quad 0x65527865745b202c,0x7b202c4138665f66,0x6625202c35376625,0x090a0a3b5d7d3637\n"
".quad 0x38203220636f6c2e,0x2e7476630a312032,0x732e3233662e6e72,0x2c32316625203233\n"
".quad 0x65730a3b31722520,0x33662e746c2e7074,0x25202c3870252032,0x336630202c323166\n"
".quad 0x3b44434343434344,0x203220636f6c2e0a,0x6d0a312037363931,0x25203233662e766f\n"
".quad 0x376625202c313166,0x20636f6c2e0a3b31,0x3120363639312032,0x3233662e766f6d0a\n"
".quad 0x202c303332662520,0x6c2e0a3b35366625,0x363931203220636f,0x2e766f6d0a312035\n"
".quad 0x3232662520323366,0x3b39356625202c39,0x203220636f6c2e0a,0x6d0a312034363931\n"
".quad 0x25203233662e766f,0x33356625202c3866,0x3220636f6c2e0a3b,0x0a31203336393120\n"
".quad 0x203233662e766f6d,0x25202c3131326625,0x6f6c2e0a3b373466,0x3236393120322063\n"
".quad 0x662e766f6d0a3120,0x3231326625203233,0x0a3b31346625202c,0x38203220636f6c2e\n"
".quad 0x387025400a312032,0x3342422061726220,0x6d0a0a3b30315f33,0x25203233752e766f\n"
".quad 0x323031202c343272,0x20636f6c2e0a3b34,0x730a312034382032,0x25203233732e6275\n"
".quad 0x327225202c353272,0x0a3b317225202c34,0x662e6e722e747663,0x25203233732e3233\n"
".quad 0x327225202c313866,0x2e707465730a3b35,0x25203233662e746c,0x31386625202c3970\n"
".quad 0x433846336630202c,0x25400a3b44434343,0x4220617262203970,0x0a0a3b395f333342\n"
".quad 0x203233752e766f6d,0x3637202c30337225,0x20636f6c2e0a3b38,0x730a312036382032\n"
".quad 0x25203233732e6275,0x337225202c313372,0x0a3b327225202c30,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x337225202c323866,0x2e707465730a3b31,0x25203233662e746c\n"
".quad 0x386625202c303170,0x3846336630202c32,0x400a3b4443434343,0x6172622030317025\n"
".quad 0x3b385f3333424220,0x3220636f6c2e0a0a,0x65730a3120383820,0x33662e746c2e7074\n"
".quad 0x202c313170252032,0x336630202c356625,0x3b44434343434344,0x622031317025400a\n"
".quad 0x5f33334242206172,0x2e6464610a0a3b37,0x3338662520323366,0x202c32316625202c\n"
".quad 0x3043464633436630,0x2e6464610a3b3030,0x3438662520323366,0x30202c356625202c\n"
".quad 0x3030434642334366,0x20636f6c2e0a3b30,0x6d0a312030392032,0x25203233662e6c75\n"
".quad 0x386625202c353866,0x3b34386625202c34,0x2e6e722e616d660a,0x3638662520323366\n"
".quad 0x202c33386625202c,0x6625202c33386625,0x707465730a3b3538,0x203233662e746c2e\n"
".quad 0x6625202c32317025,0x32346630202c3638,0x0a3b303030303038,0x7262203231702540\n"
".quad 0x365f333342422061,0x6e752e6172620a3b,0x315f333342422069,0x333342420a0a3b31\n"
".quad 0x2e766f6d0a3a365f,0x3131722520323375,0x620a3b3031202c30,0x4220696e752e6172\n"
".quad 0x0a3b31315f333342,0x3a375f333342420a,0x3233752e766f6d0a,0x202c303131722520\n"
".quad 0x2e6172620a3b3231,0x3333424220696e75,0x42420a0a3b31315f,0x6f6d0a3a385f3333\n"
".quad 0x7225203233752e76,0x3b3131202c303131,0x696e752e6172620a,0x31315f3333424220\n"
".quad 0x5f333342420a0a3b,0x752e766f6d0a3a39,0x3031317225203233,0x6172620a3b32202c\n"
".quad 0x33424220696e752e,0x420a0a3b31315f33,0x0a3a30315f333342,0x203233752e766f6d\n"
".quad 0x33202c3031317225,0x5f333342420a0a3b,0x636f6c2e0a3a3131,0x2031343931203220\n"
".quad 0x36752e7476630a31,0x7225203233752e34,0x327225202c37326c,0x36732e6464610a3b\n"
".quad 0x2c38326c72252034,0x202c37326c722520,0x76630a3b34343136,0x33752e3436752e74\n"
".quad 0x2c39326c72252032,0x646c0a3b31722520,0x752e6d617261702e,0x35316c7225203436\n"
".quad 0x37315a5f5b202c36,0x79685f645f74726d,0x63726f665f424162,0x536d665f53665065\n"
".quad 0x7261705f695f535f,0x2e0a3b5d335f6d61,0x3032203220636f6c,0x64616d0a31203832\n"
".quad 0x203436732e6f6c2e,0x25202c30336c7225,0x7225202c38326c72,0x7225202c3635316c\n"
".quad 0x2e646c0a3b39326c,0x36752e6d61726170,0x3335316c72252034,0x6d37315a5f5b202c\n"
".quad 0x6279685f645f7472,0x6563726f665f4241,0x5f536d665f536650,0x617261705f695f53\n"
".quad 0x76630a3b5d315f6d,0x6c672e6f742e6174,0x3436752e6c61626f,0x202c31336c722520\n"
".quad 0x0a3b3335316c7225,0x203436622e6c6873,0x25202c32336c7225,0x3233202c30336c72\n"
".quad 0x36732e7268730a3b,0x2c33336c72252034,0x202c32336c722520,0x636f6c2e0a3b3233\n"
".quad 0x2038323032203220,0x36622e6c68730a31,0x2c34336c72252034,0x202c33336c722520\n"
".quad 0x732e6464610a3b32,0x2c366c7225203436,0x202c31336c722520,0x730a3b34336c7225\n"
".quad 0x732e71652e707465,0x2c33317025203233,0x202c303131722520,0x33317025400a3b31\n"
".quad 0x3342422061726220,0x730a0a3b33315f33,0x732e656e2e707465,0x2c34317025203233\n"
".quad 0x202c303131722520,0x317025400a3b3031,0x4242206172622034,0x0a0a3b37315f3333\n"
".quad 0x3a33315f33334242,0x203220636f6c2e0a,0x730a312031373931,0x732e71652e707465\n"
".quad 0x2c35317025203233,0x202c303131722520,0x317025400a3b3031,0x4242206172622035\n"
".quad 0x0a0a3b35315f3333,0x31203220636f6c2e,0x6f6d0a3120393339,0x7225203233752e76\n"
".quad 0x697425202c383031,0x6c756d0a3b782e64,0x33752e656469772e,0x2c35336c72252032\n"
".quad 0x202c383031722520,0x752e766f6d0a3b34,0x36336c7225203436,0x616475635f5f202c\n"
".quad 0x765f6c61636f6c5f,0x36363937335f7261,0x5f6e6f6e5f32335f,0x75735f74736e6f63\n"
".quad 0x2e6464610a3b586d,0x336c722520343673,0x36336c7225202c37,0x3b35336c7225202c\n"
".quad 0x3233752e766f6d0a,0x30202c3734722520,0x3220636f6c2e0a3b,0x0a31203737393120\n"
".quad 0x65726168732e7473,0x255b203233752e64,0x25202c5d37336c72,0x766f6d0a3b373472\n"
".quad 0x6c7225203436752e,0x75635f5f202c3833,0x6c61636f6c5f6164,0x3937335f7261765f\n"
".quad 0x6f6e5f33345f3636,0x5f74736e6f635f6e,0x64610a3b596d7573,0x7225203436732e64\n"
".quad 0x6c7225202c39336c,0x336c7225202c3833,0x20636f6c2e0a3b35,0x3120383739312032\n"
".quad 0x726168732e74730a,0x5b203233752e6465,0x202c5d39336c7225,0x72620a3b37347225\n"
".quad 0x424220696e752e61,0x0a0a3b36315f3333,0x3a35315f33334242,0x3233752e766f6d0a\n"
".quad 0x31202c3035722520,0x3220636f6c2e0a3b,0x0a31203237393120,0x65726168732e7473\n"
".quad 0x5f5b203233752e64,0x6f6c5f616475635f,0x5f7261765f6c6163,0x30335f3736393733\n"
".quad 0x6e6f635f6e6f6e5f,0x6b636568635f7473,0x3b30357225202c5d,0x203220636f6c2e0a\n"
".quad 0x610a312033373931,0x25203233662e6464,0x346625202c373866,0x3b31346625202c31\n"
".quad 0x2e6e722e616d660a,0x3838662520323366,0x202c37346625202c,0x3030303030436630\n"
".quad 0x37386625202c3030,0x33662e6464610a3b,0x202c393866252032,0x6625202c33356625\n"
".quad 0x2e6464610a3b3335,0x3039662520323366,0x202c38386625202c,0x64610a3b39386625\n"
".quad 0x6625203233662e64,0x31376625202c3139,0x0a3b31376625202c,0x203233662e646461\n"
".quad 0x6625202c32396625,0x31396625202c3039,0x33662e6464610a3b,0x202c333966252032\n"
".quad 0x6625202c39356625,0x2e6275730a3b3935,0x3439662520323366,0x202c32396625202c\n"
".quad 0x64610a3b33396625,0x6625203233662e64,0x35366625202c3539,0x0a3b35366625202c\n"
".quad 0x203233662e627573,0x6625202c36396625,0x35396625202c3439,0x3220636f6c2e0a3b\n"
".quad 0x0a31203933393120,0x203233752e766f6d,0x25202c3730317225,0x6d0a3b782e646974\n"
".quad 0x2e656469772e6c75,0x346c722520323375,0x3730317225202c30,0x766f6d0a3b34202c\n"
".quad 0x6c7225203436752e,0x75635f5f202c3134,0x6c61636f6c5f6164,0x3937335f7261765f\n"
".quad 0x6f6e5f32335f3636,0x5f74736e6f635f6e,0x64610a3b586d7573,0x7225203436732e64\n"
".quad 0x6c7225202c32346c,0x346c7225202c3134,0x20636f6c2e0a3b30,0x3120333739312032\n"
".quad 0x726168732e74730a,0x5b203233662e6465,0x202c5d32346c7225,0x6c2e0a3b36396625\n"
".quad 0x373931203220636f,0x2e6464610a312034,0x3739662520323366,0x25202c346625202c\n"
".quad 0x2e6464610a3b3466,0x3839662520323366,0x25202c336625202c,0x2e6275730a3b3366\n"
".quad 0x3939662520323366,0x202c38396625202c,0x64610a3b37396625,0x6625203233662e64\n"
".quad 0x396625202c303031,0x3b39386625202c39,0x3233662e6275730a,0x202c313031662520\n"
".quad 0x25202c3030316625,0x6464610a3b313966,0x316625203233662e,0x30316625202c3230\n"
".quad 0x3b33396625202c31,0x3233662e6275730a,0x202c333031662520,0x25202c3230316625\n"
".quad 0x766f6d0a3b353966,0x6c7225203436752e,0x75635f5f202c3334,0x6c61636f6c5f6164\n"
".quad 0x3937335f7261765f,0x6f6e5f33345f3636,0x5f74736e6f635f6e,0x64610a3b596d7573\n"
".quad 0x7225203436732e64,0x6c7225202c34346c,0x346c7225202c3334,0x20636f6c2e0a3b30\n"
".quad 0x3120343739312032,0x726168732e74730a,0x5b203233662e6465,0x202c5d34346c7225\n"
".quad 0x0a0a3b3330316625,0x3a36315f33334242,0x3436732e6464610a,0x202c36346c722520\n"
".quad 0x3637202c386c7225,0x61702e646c0a3b38,0x203436752e6d6172,0x202c3535316c7225\n"
".quad 0x74726d37315a5f5b,0x42416279685f645f,0x66506563726f665f,0x5f535f536d665f53\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d33,0x2031323032203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x346c7225202c3834,0x35316c7225202c36,0x3b346c7225202c35\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3235316c,0x645f74726d37315a\n"
".quad 0x665f42416279685f,0x5f5366506563726f,0x5f695f535f536d66,0x5d315f6d61726170\n"
".quad 0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e,0x316c7225202c3934\n"
".quad 0x2e6c68730a3b3235,0x356c722520343662,0x38346c7225202c30,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c31356c,0x0a3b3233202c3035,0x32203220636f6c2e\n"
".quad 0x68730a3120313230,0x7225203436622e6c,0x6c7225202c32356c,0x610a3b32202c3135\n"
".quad 0x25203436732e6464,0x7225202c33356c72,0x6c7225202c39346c,0x636f6c2e0a3b3235\n"
".quad 0x2030383931203220,0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d33356c72255b\n"
".quad 0x610a3b3734662520,0x25203436732e6464,0x7225202c34356c72,0x36333531202c386c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203232303220,0x732e6f6c2e64616d,0x35356c7225203436\n"
".quad 0x2c34356c7225202c,0x2c3535316c722520,0x730a3b346c722520,0x25203436622e6c68\n"
".quad 0x7225202c36356c72,0x3b3233202c35356c,0x3436732e7268730a,0x202c37356c722520\n"
".quad 0x33202c36356c7225,0x20636f6c2e0a3b32,0x3120323230322032,0x3436622e6c68730a\n"
".quad 0x202c38356c722520,0x32202c37356c7225,0x36732e6464610a3b,0x2c39356c72252034\n"
".quad 0x202c39346c722520,0x2e0a3b38356c7225,0x3931203220636f6c,0x2e74730a31203138\n"
".quad 0x662e6c61626f6c67,0x356c72255b203233,0x3b346625202c5d39,0x3436732e6464610a\n"
".quad 0x202c30366c722520,0x3332202c386c7225,0x636f6c2e0a3b3430,0x2033323032203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x366c7225202c3136,0x35316c7225202c30\n"
".quad 0x3b346c7225202c35,0x3436622e6c68730a,0x202c32366c722520,0x33202c31366c7225\n"
".quad 0x732e7268730a3b32,0x33366c7225203436,0x2c32366c7225202c,0x6f6c2e0a3b323320\n"
".quad 0x3332303220322063,0x622e6c68730a3120,0x34366c7225203436,0x2c33366c7225202c\n"
".quad 0x2e6464610a3b3220,0x366c722520343673,0x39346c7225202c35,0x3b34366c7225202c\n"
".quad 0x203220636f6c2e0a,0x730a312032383931,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x6625202c5d35366c,0x2e6464610a3b3134,0x366c722520343673,0x2c386c7225202c36\n"
".quad 0x2e0a3b3237303320,0x3032203220636f6c,0x64616d0a31203432,0x203436732e6f6c2e\n"
".quad 0x25202c37366c7225,0x7225202c36366c72,0x7225202c3535316c,0x2e6c68730a3b346c\n"
".quad 0x366c722520343662,0x37366c7225202c38,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c39366c,0x0a3b3233202c3836,0x32203220636f6c2e,0x68730a3120343230\n"
".quad 0x7225203436622e6c,0x6c7225202c30376c,0x610a3b32202c3936,0x25203436732e6464\n"
".quad 0x7225202c31376c72,0x6c7225202c39346c,0x636f6c2e0a3b3037,0x2033383931203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d31376c72255b,0x64610a3b33662520\n"
".quad 0x7225203436732e64,0x6c7225202c32376c,0x3b30343833202c38,0x203220636f6c2e0a\n"
".quad 0x6d0a312035323032,0x36732e6f6c2e6461,0x2c33376c72252034,0x202c32376c722520\n"
".quad 0x202c3535316c7225,0x68730a3b346c7225,0x7225203436622e6c,0x6c7225202c34376c\n"
".quad 0x0a3b3233202c3337,0x203436732e726873,0x25202c35376c7225,0x3233202c34376c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203532303220,0x203436622e6c6873,0x25202c36376c7225\n"
".quad 0x3b32202c35376c72,0x3436732e6464610a,0x202c37376c722520,0x25202c39346c7225\n"
".quad 0x6c2e0a3b36376c72,0x383931203220636f,0x672e74730a312034,0x33662e6c61626f6c\n"
".quad 0x37376c72255b2032,0x3b35366625202c5d,0x3436732e6464610a,0x202c38376c722520\n"
".quad 0x3634202c386c7225,0x636f6c2e0a3b3830,0x2036323032203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x376c7225202c3937,0x35316c7225202c38,0x3b346c7225202c35\n"
".quad 0x3436622e6c68730a,0x202c30386c722520,0x33202c39376c7225,0x732e7268730a3b32\n"
".quad 0x31386c7225203436,0x2c30386c7225202c,0x6f6c2e0a3b323320,0x3632303220322063\n"
".quad 0x622e6c68730a3120,0x32386c7225203436,0x2c31386c7225202c,0x2e6464610a3b3220\n"
".quad 0x386c722520343673,0x39346c7225202c33,0x3b32386c7225202c,0x203220636f6c2e0a\n"
".quad 0x730a312035383931,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d33386c\n"
".quad 0x2e6464610a3b3137,0x386c722520343673,0x2c386c7225202c34,0x2e0a3b3637333520\n"
".quad 0x3032203220636f6c,0x64616d0a31203732,0x203436732e6f6c2e,0x25202c35386c7225\n"
".quad 0x7225202c34386c72,0x7225202c3535316c,0x2e6c68730a3b346c,0x386c722520343662\n"
".quad 0x35386c7225202c36,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c37386c\n"
".quad 0x0a3b3233202c3638,0x32203220636f6c2e,0x68730a3120373230,0x7225203436622e6c\n"
".quad 0x6c7225202c38386c,0x610a3b32202c3738,0x25203436732e6464,0x7225202c39386c72\n"
".quad 0x6c7225202c39346c,0x636f6c2e0a3b3838,0x2036383931203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x2c5d39386c72255b,0x2e0a3b3335662520,0x3931203220636f6c\n"
".quad 0x2e74730a31203738,0x662e6c61626f6c67,0x366c72255b203233,0x3b39356625202c5d\n"
".quad 0x696e752e6172620a,0x38335f3333424220,0x5f333342420a0a3b,0x636f6c2e0a3a3731\n"
".quad 0x2039333931203220,0x33752e766f6d0a31,0x2c39303172252032,0x3b782e6469742520\n"
".quad 0x6469772e6c756d0a,0x7225203233752e65,0x317225202c30396c,0x6d0a3b34202c3930\n"
".quad 0x25203436752e766f,0x5f5f202c31396c72,0x636f6c5f61647563,0x335f7261765f6c61\n"
".quad 0x5f32335f36363937,0x736e6f635f6e6f6e,0x0a3b586d75735f74,0x203436732e646461\n"
".quad 0x25202c32396c7225,0x7225202c31396c72,0x766f6d0a3b30396c,0x377225203233752e\n"
".quad 0x6c2e0a3b30202c31,0x393931203220636f,0x732e74730a312030,0x33752e6465726168\n"
".quad 0x32396c72255b2032,0x3b31377225202c5d,0x3436752e766f6d0a,0x202c33396c722520\n"
".quad 0x6c5f616475635f5f,0x7261765f6c61636f,0x345f36363937335f,0x6f635f6e6f6e5f33\n"
".quad 0x596d75735f74736e,0x36732e6464610a3b,0x2c34396c72252034,0x202c33396c722520\n"
".quad 0x2e0a3b30396c7225,0x3931203220636f6c,0x2e74730a31203139,0x752e646572616873\n"
".quad 0x396c72255b203233,0x31377225202c5d34,0x3220636f6c2e0a3b,0x730a312034323320\n"
".quad 0x732e71652e707465,0x2c36317025203233,0x202c303131722520,0x36317025400a3b32\n"
".quad 0x3342422061726220,0x2e0a0a3b36325f33,0x3233203220636f6c,0x707465730a312038\n"
".quad 0x203233732e71652e,0x7225202c37317025,0x0a3b33202c303131,0x7262203731702540\n"
".quad 0x325f333342422061,0x2e766f6d0a0a3b30,0x3532662520323366,0x3b31316625202c30\n"
".quad 0x3233662e766f6d0a,0x202c393432662520,0x766f6d0a3b386625,0x326625203233662e\n"
".quad 0x3b346625202c3837,0x3233662e766f6d0a,0x202c373732662520,0x6172620a3b336625\n"
".quad 0x33424220696e752e,0x420a0a3b32335f33,0x0a3a30325f333342,0x32203220636f6c2e\n"
".quad 0x7465730a31203037,0x3233732e71652e70,0x25202c3831702520,0x400a3b30202c3272\n"
".quad 0x6172622038317025,0x34325f3333424220,0x20636f6c2e0a0a3b,0x0a31203437322032\n"
".quad 0x2e71652e70746573,0x3931702520323373,0x37202c327225202c,0x317025400a3b3736\n"
".quad 0x4242206172622039,0x0a0a3b33325f3333,0x203233662e766f6d,0x25202c3233326625\n"
".quad 0x6f6d0a3b30333266,0x6625203233662e76,0x326625202c313332,0x2e766f6d0a3b3932\n"
".quad 0x3832662520323366,0x0a3b346625202c32,0x203233662e766f6d,0x25202c3138326625\n"
".quad 0x2e6172620a3b3366,0x3333424220696e75,0x42420a0a3b35325f,0x6d0a3a33325f3333\n"
".quad 0x25203233662e766f,0x6625202c31333266,0x766f6d0a3b393232,0x326625203233662e\n"
".quad 0x32326625202c3233,0x662e766f6d0a3b39,0x3138326625203233,0x6d0a3b336625202c\n"
".quad 0x25203233662e766f,0x6625202c32383266,0x752e6172620a3b33,0x5f3333424220696e\n"
".quad 0x3342420a0a3b3532,0x6f6d0a3a34325f33,0x6625203233662e76,0x326625202c313332\n"
".quad 0x2e766f6d0a3b3033,0x3332662520323366,0x3033326625202c32,0x33662e766f6d0a3b\n"
".quad 0x2c31383266252032,0x6f6d0a3b34662520,0x6625203233662e76,0x346625202c323832\n"
".quad 0x5f333342420a0a3b,0x2e766f6d0a3a3532,0x3732662520323366,0x3238326625202c38\n"
".quad 0x33662e766f6d0a3b,0x2c37373266252032,0x0a3b313832662520,0x203233662e766f6d\n"
".quad 0x25202c3033326625,0x6f6d0a3b32333266,0x6625203233662e76,0x326625202c393232\n"
".quad 0x2e766f6d0a3b3133,0x3031662520323366,0x4144336630202c34,0x2e0a3b4130374433\n"
".quad 0x3832203220636f6c,0x2e616d660a312031,0x25203233662e6e72,0x6625202c32313266\n"
".quad 0x336630202c343031,0x2c42414141413246,0x2e0a3b3734662520,0x3832203220636f6c\n"
".quad 0x2e6275730a312032,0x3031662520323366,0x3737326625202c35,0x3b3837326625202c\n"
".quad 0x3233662e766f6d0a,0x202c363031662520,0x3030303046336630,0x636f6c2e0a3b3030\n"
".quad 0x3120323832203220,0x3233662e67656e0a,0x202c373031662520,0x660a3b3530316625\n"
".quad 0x33662e6e722e616d,0x2c38303166252032,0x202c373031662520,0x25202c3630316625\n"
".quad 0x6d660a3b30333266,0x3233662e6e722e61,0x202c393432662520,0x30202c3430316625\n"
".quad 0x4141414132453366,0x3830316625202c42,0x3220636f6c2e0a3b,0x660a312033383220\n"
".quad 0x33662e6e722e616d,0x2c39303166252032,0x202c353031662520,0x3030303046336630\n"
".quad 0x32326625202c3030,0x722e616d660a3b39,0x6625203233662e6e,0x316625202c303532\n"
".quad 0x45336630202c3430,0x202c424141414132,0x620a3b3930316625,0x4220696e752e6172\n"
".quad 0x0a3b32335f333342,0x36325f333342420a,0x3220636f6c2e0a3a,0x730a312037343220\n"
".quad 0x732e71652e707465,0x2c30327025203233,0x3b30202c32722520,0x622030327025400a\n"
".quad 0x5f33334242206172,0x6f6c2e0a0a3b3033,0x2031353220322063,0x652e707465730a31\n"
".quad 0x7025203233732e71,0x2c327225202c3132,0x25400a3b37363720,0x2061726220313270\n"
".quad 0x3b39325f33334242,0x33662e766f6d0a0a,0x2c32353266252032,0x6d0a3b3131662520\n"
".quad 0x25203233662e766f,0x6625202c31353266,0x662e766f6d0a3b38,0x3038326625203233\n"
".quad 0x6d0a3b346625202c,0x25203233662e766f,0x6625202c39373266,0x752e6172620a3b33\n"
".quad 0x5f3333424220696e,0x3342420a0a3b3133,0x6f6d0a3a39325f33,0x6625203233662e76\n"
".quad 0x386625202c323532,0x33662e766f6d0a3b,0x2c31353266252032,0x6f6d0a3b38662520\n"
".quad 0x6625203233662e76,0x336625202c303832,0x33662e766f6d0a3b,0x2c39373266252032\n"
".quad 0x72620a3b33662520,0x424220696e752e61,0x0a0a3b31335f3333,0x3a30335f33334242\n"
".quad 0x3233662e766f6d0a,0x202c323532662520,0x6f6d0a3b31316625,0x6625203233662e76\n"
".quad 0x316625202c313532,0x662e766f6d0a3b31,0x3038326625203233,0x6d0a3b346625202c\n"
".quad 0x25203233662e766f,0x6625202c39373266,0x333342420a0a3b34,0x766f6d0a3a31335f\n"
".quad 0x326625203233662e,0x38326625202c3837,0x662e766f6d0a3b30,0x3737326625203233\n"
".quad 0x3b3937326625202c,0x3233662e766f6d0a,0x202c303532662520,0x6d0a3b3235326625\n"
".quad 0x25203233662e766f,0x6625202c39343266,0x6f6c2e0a3b313532,0x2038353220322063\n"
".quad 0x33662e6464610a31,0x2c30313166252032,0x6625202c32662520,0x6464610a3b373732\n"
".quad 0x316625203233662e,0x31316625202c3131,0x3837326625202c30,0x33662e6464610a3b\n"
".quad 0x2c32313166252032,0x25202c3134662520,0x6464610a3b313466,0x316625203233662e\n"
".quad 0x31316625202c3331,0x3231316625202c31,0x33662e6464610a3b,0x2c34313166252032\n"
".quad 0x202c393432662520,0x610a3b3934326625,0x25203233662e6464,0x6625202c35313166\n"
".quad 0x316625202c333131,0x2e6464610a3b3431,0x3131662520323366,0x3035326625202c36\n"
".quad 0x3b3035326625202c,0x3233662e6464610a,0x202c373131662520,0x25202c3531316625\n"
".quad 0x64610a3b36313166,0x6625203233662e64,0x316625202c383131,0x46426630202c3731\n"
".quad 0x0a3b303030303038,0x32203220636f6c2e,0x616d660a31203036,0x203233662e6e722e\n"
".quad 0x25202c3131326625,0x6630202c38313166,0x4241414141324642,0x0a3b31346625202c\n"
".quad 0x32203220636f6c2e,0x6275730a31203136,0x316625203233662e,0x37326625202c3931\n"
".quad 0x3837326625202c37,0x33662e766f6d0a3b,0x2c30323166252032,0x3030304633663020\n"
".quad 0x6f6c2e0a3b303030,0x2031363220322063,0x6e722e616d660a31,0x316625203233662e\n"
".quad 0x31316625202c3132,0x3046336630202c39,0x25202c3030303030,0x6f6d0a3b39343266\n"
".quad 0x6625203233662e76,0x336630202c323231,0x3b42414141413245,0x203220636f6c2e0a\n"
".quad 0x656e0a3120313632,0x6625203233662e67,0x316625202c333231,0x2e616d660a3b3831\n"
".quad 0x25203233662e6e72,0x6625202c30333266,0x316625202c333231,0x32316625202c3232\n"
".quad 0x20636f6c2e0a3b31,0x0a31203236322032,0x203233662e67656e,0x25202c3432316625\n"
".quad 0x6d660a3b39313166,0x3233662e6e722e61,0x202c353231662520,0x25202c3432316625\n"
".quad 0x6625202c30323166,0x616d660a3b303532,0x203233662e6e722e,0x25202c3932326625\n"
".quad 0x6625202c33323166,0x316625202c323231,0x3342420a0a3b3532,0x6f6d0a3a32335f33\n"
".quad 0x6625203233662e76,0x37326625202c3133,0x662e766f6d0a3b38,0x2c33336625203233\n"
".quad 0x0a3b373732662520,0x203233662e766f6d,0x6625202c37326625,0x766f6d0a3b303532\n"
".quad 0x336625203233662e,0x3934326625202c30,0x33662e766f6d0a3b,0x202c383266252032\n"
".quad 0x6d0a3b3033326625,0x25203233662e766f,0x326625202c393266,0x636f6c2e0a3b3932\n"
".quad 0x3120323333203220,0x71652e707465730a,0x327025203233732e,0x3031317225202c32\n"
".quad 0x25400a3b3131202c,0x2061726220323270,0x3b36335f33334242,0x3220636f6c2e0a0a\n"
".quad 0x730a312038333320,0x732e71652e707465,0x2c33327025203233,0x202c303131722520\n"
".quad 0x327025400a3b3231,0x4242206172622033,0x0a0a3b35335f3333,0x203233662e766f6d\n"
".quad 0x25202c3531326625,0x766f6d0a3b393266,0x326625203233662e,0x38326625202c3832\n"
".quad 0x33662e766f6d0a3b,0x2c37323266252032,0x0a3b353132662520,0x203233662e766f6d\n"
".quad 0x25202c3533326625,0x766f6d0a3b303366,0x326625203233662e,0x37326625202c3834\n"
".quad 0x33662e766f6d0a3b,0x2c37343266252032,0x0a3b353332662520,0x203233662e766f6d\n"
".quad 0x25202c3535326625,0x766f6d0a3b333366,0x326625203233662e,0x31336625202c3637\n"
".quad 0x33662e766f6d0a3b,0x2c35373266252032,0x0a3b353532662520,0x20696e752e617262\n"
".quad 0x3b37335f33334242,0x335f333342420a0a,0x662e766f6d0a3a35,0x3832326625203233\n"
".quad 0x0a3b38326625202c,0x203233662e766f6d,0x25202c3732326625,0x766f6d0a3b383266\n"
".quad 0x326625203233662e,0x37326625202c3834,0x33662e766f6d0a3b,0x2c37343266252032\n"
".quad 0x6d0a3b3732662520,0x25203233662e766f,0x6625202c36373266,0x2e766f6d0a3b3133\n"
".quad 0x3732662520323366,0x3b31336625202c35,0x696e752e6172620a,0x37335f3333424220\n"
".quad 0x5f333342420a0a3b,0x2e766f6d0a3a3633,0x3232662520323366,0x3b39326625202c38\n"
".quad 0x3233662e766f6d0a,0x202c373232662520,0x6f6d0a3b39326625,0x6625203233662e76\n"
".quad 0x336625202c383432,0x662e766f6d0a3b30,0x3734326625203233,0x0a3b30336625202c\n"
".quad 0x203233662e766f6d,0x25202c3637326625,0x766f6d0a3b333366,0x326625203233662e\n"
".quad 0x33336625202c3537,0x5f333342420a0a3b,0x636f6c2e0a3a3733,0x2038313032203220\n"
".quad 0x33662e6464610a31,0x2c36323166252032,0x6625202c32662520,0x6464610a3b323132\n"
".quad 0x316625203233662e,0x32316625202c3732,0x3537326625202c36,0x33662e6464610a3b\n"
".quad 0x2c38323166252032,0x202c373231662520,0x610a3b3131326625,0x25203233662e6464\n"
".quad 0x6625202c39323166,0x326625202c383231,0x2e6464610a3b3637,0x3331662520323366\n"
".quad 0x3932316625202c30,0x3b3734326625202c,0x3233662e6464610a,0x202c313331662520\n"
".quad 0x25202c3033316625,0x64610a3b37323266,0x6625203233662e64,0x316625202c323331\n"
".quad 0x32326625202c3133,0x662e6464610a3b38,0x3333316625203233,0x2c3233316625202c\n"
".quad 0x0a3b383432662520,0x203233662e627573,0x25202c3433316625,0x6625202c32313266\n"
".quad 0x6464610a3b313132,0x316625203233662e,0x33316625202c3533,0x3734326625202c34\n"
".quad 0x33662e6275730a3b,0x2c36333166252032,0x202c353331662520,0x730a3b3732326625\n"
".quad 0x25203233662e6275,0x6625202c37333166,0x326625202c363331,0x2e6464610a3b3832\n"
".quad 0x3331662520323366,0x3733316625202c38,0x3b3834326625202c,0x3233662e6275730a\n"
".quad 0x202c393331662520,0x25202c3537326625,0x64610a3b36373266,0x6625203233662e64\n"
".quad 0x316625202c303431,0x34326625202c3933,0x662e6464610a3b37,0x3134316625203233\n"
".quad 0x2c3034316625202c,0x0a3b373232662520,0x203233662e627573,0x25202c3234316625\n"
".quad 0x6625202c31343166,0x6275730a3b383232,0x316625203233662e,0x34316625202c3334\n"
".quad 0x3834326625202c32,0x33662e6c756d0a3b,0x2c34343166252032,0x202c333431662520\n"
".quad 0x660a3b3334316625,0x33662e6e722e616d,0x2c35343166252032,0x202c383331662520\n"
".quad 0x25202c3833316625,0x6f6d0a3b34343166,0x6625203233662e76,0x336630202c363431\n"
".quad 0x3b30303030304346,0x203220636f6c2e0a,0x6e0a312038313032,0x25203233662e6765\n"
".quad 0x6625202c37343166,0x616d660a3b353431,0x203233662e6e722e,0x25202c3834316625\n"
".quad 0x6625202c37343166,0x316625202c363431,0x2e616d660a3b3333,0x25203233662e6e72\n"
".quad 0x6625202c39343166,0x426630202c383431,0x2c39334538334545,0x656e0a3b32662520\n"
".quad 0x6625203233662e67,0x316625202c303531,0x702e646c0a3b3934,0x3233662e6d617261\n"
".quad 0x202c303132662520,0x74726d37315a5f5b,0x42416279685f645f,0x66506563726f665f\n"
".quad 0x5f535f536d665f53,0x5f6d617261705f69,0x636f6c2e0a3b5d32,0x2038313032203220\n"
".quad 0x6e722e616d660a31,0x316625203233662e,0x35316625202c3135,0x3031326625202c30\n"
".quad 0x6d0a3b326625202c,0x25203233662e766f,0x6630202c32353166,0x3030303030343034\n"
".quad 0x3220636f6c2e0a3b,0x0a31203831303220,0x662e6e722e616d66,0x3335316625203233\n"
".quad 0x2c3833316625202c,0x3030343034663020,0x316625202c303030,0x2e6c756d0a3b3333\n"
".quad 0x3531662520323366,0x3833316625202c34,0x303930346630202c,0x6d660a3b30303030\n"
".quad 0x3233662e6e722e61,0x202c353531662520,0x25202c3435316625,0x6625202c38333166\n"
".quad 0x616d660a3b333531,0x203233662e6e722e,0x25202c3635316625,0x6625202c37343166\n"
".quad 0x316625202c363431,0x2e766f6d0a3b3535,0x3531662520323366,0x4544336630202c37\n"
".quad 0x2e0a3b3933453833,0x3032203220636f6c,0x67656e0a31203831,0x316625203233662e\n"
".quad 0x35316625202c3835,0x722e616d660a3b36,0x6625203233662e6e,0x316625202c393531\n"
".quad 0x35316625202c3835,0x3231326625202c37,0x33662e67656e0a3b,0x2c30363166252032\n"
".quad 0x0a3b393531662520,0x662e6e722e616d66,0x3136316625203233,0x2c3036316625202c\n"
".quad 0x202c303132662520,0x660a3b3231326625,0x33662e6e722e616d,0x2c32363166252032\n"
".quad 0x202c333431662520,0x3030303430346630,0x33316625202c3030,0x662e6c756d0a3b33\n"
".quad 0x3336316625203233,0x2c3334316625202c,0x3030393034663020,0x616d660a3b303030\n"
".quad 0x203233662e6e722e,0x25202c3436316625,0x6625202c33363166,0x316625202c333431\n"
".quad 0x2e616d660a3b3236,0x25203233662e6e72,0x6625202c35363166,0x316625202c373431\n"
".quad 0x36316625202c3634,0x662e67656e0a3b34,0x3636316625203233,0x3b3536316625202c\n"
".quad 0x2e6e722e616d660a,0x3631662520323366,0x3636316625202c37,0x2c3735316625202c\n"
".quad 0x0a3b353732662520,0x203233662e67656e,0x25202c3836316625,0x6d660a3b37363166\n"
".quad 0x3233662e6e722e61,0x202c393631662520,0x25202c3836316625,0x6625202c30313266\n"
".quad 0x67656e0a3b353732,0x316625203233662e,0x33316625202c3037,0x722e616d660a3b38\n"
".quad 0x6625203233662e6e,0x316625202c313731,0x35316625202c3037,0x3333316625202c32\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x35316625202c3237,0x3833316625202c34\n"
".quad 0x3b3137316625202c,0x2e6e722e616d660a,0x3731662520323366,0x3734316625202c33\n"
".quad 0x2c3634316625202c,0x0a3b323731662520,0x203233662e67656e,0x25202c3437316625\n"
".quad 0x6d660a3b33373166,0x3233662e6e722e61,0x202c353731662520,0x25202c3437316625\n"
".quad 0x6625202c37353166,0x67656e0a3b313132,0x316625203233662e,0x37316625202c3637\n"
".quad 0x722e616d660a3b35,0x6625203233662e6e,0x316625202c373731,0x31326625202c3637\n"
".quad 0x3131326625202c30,0x33662e67656e0a3b,0x2c38373166252032,0x0a3b333431662520\n"
".quad 0x662e6e722e616d66,0x3937316625203233,0x2c3837316625202c,0x202c323531662520\n"
".quad 0x660a3b3333316625,0x33662e6e722e616d,0x2c30383166252032,0x202c333631662520\n"
".quad 0x25202c3334316625,0x6d660a3b39373166,0x3233662e6e722e61,0x202c313831662520\n"
".quad 0x25202c3734316625,0x6625202c36343166,0x67656e0a3b303831,0x316625203233662e\n"
".quad 0x38316625202c3238,0x722e616d660a3b31,0x6625203233662e6e,0x316625202c333831\n"
".quad 0x35316625202c3238,0x3637326625202c37,0x33662e67656e0a3b,0x2c34383166252032\n"
".quad 0x0a3b333831662520,0x662e6e722e616d66,0x3538316625203233,0x2c3438316625202c\n"
".quad 0x202c303132662520,0x610a3b3637326625,0x25203233662e6464,0x6625202c36383166\n"
".quad 0x316625202c383331,0x2e616d660a3b3334,0x25203233662e6e72,0x6625202c37383166\n"
".quad 0x346630202c363831,0x2c30303030303430,0x0a3b333331662520,0x203233662e6c756d\n"
".quad 0x25202c3838316625,0x6630202c36383166,0x3030303030393034,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x38316625202c3938,0x3638316625202c38,0x3b3738316625202c\n"
".quad 0x2e6e722e616d660a,0x3931662520323366,0x3734316625202c30,0x2c3634316625202c\n"
".quad 0x0a3b393831662520,0x2e3436662e747663,0x3164662520323366,0x3b3039316625202c\n"
".quad 0x3436662e766f6d0a,0x30202c3264662520,0x4331374339463364,0x3144384237433137\n"
".quad 0x20636f6c2e0a3b43,0x3120383130322032,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x3734326625202c33,0x36662e67656e0a3b,0x202c346466252034,0x6d660a3b31646625\n"
".quad 0x3436662e6e722e61,0x25202c3564662520,0x646625202c346466,0x3b33646625202c32\n"
".quad 0x3436662e7476630a,0x646625203233662e,0x3031326625202c36,0x36662e67656e0a3b\n"
".quad 0x202c376466252034,0x6d660a3b36646625,0x3436662e6e722e61,0x25202c3864662520\n"
".quad 0x646625202c376466,0x3b33646625202c35,0x2e6e722e7476630a,0x203436662e323366\n"
".quad 0x25202c3139316625,0x6275730a3b386466,0x316625203233662e,0x34316625202c3239\n"
".quad 0x3833316625202c33,0x3220636f6c2e0a3b,0x0a31203831303220,0x662e6e722e616d66\n"
".quad 0x3339316625203233,0x2c3239316625202c,0x3030343034663020,0x316625202c303030\n"
".quad 0x2e6c756d0a3b3333,0x3931662520323366,0x3239316625202c34,0x303930346630202c\n"
".quad 0x6d660a3b30303030,0x3233662e6e722e61,0x202c353931662520,0x25202c3439316625\n"
".quad 0x6625202c32393166,0x616d660a3b333931,0x203233662e6e722e,0x25202c3639316625\n"
".quad 0x6625202c37343166,0x316625202c363431,0x2e7476630a3b3539,0x203233662e343666\n"
".quad 0x6625202c39646625,0x7476630a3b363931,0x3233662e3436662e,0x202c303164662520\n"
".quad 0x6e0a3b3732326625,0x25203436662e6765,0x6625202c31316466,0x2e616d660a3b3964\n"
".quad 0x25203436662e6e72,0x6625202c32316466,0x646625202c313164,0x3031646625202c32\n"
".quad 0x6e722e616d660a3b,0x646625203436662e,0x37646625202c3331,0x2c3231646625202c\n"
".quad 0x0a3b303164662520,0x662e6e722e747663,0x25203436662e3233,0x6625202c37393166\n"
".quad 0x6275730a3b333164,0x316625203233662e,0x37316625202c3839,0x3334316625202c30\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x39316625202c3939,0x3430346630202c38\n"
".quad 0x25202c3030303030,0x756d0a3b33333166,0x6625203233662e6c,0x316625202c303032\n"
".quad 0x30346630202c3839,0x0a3b303030303039,0x662e6e722e616d66,0x3130326625203233\n"
".quad 0x2c3030326625202c,0x202c383931662520,0x660a3b3939316625,0x33662e6e722e616d\n"
".quad 0x2c32303266252032,0x202c373431662520,0x25202c3634316625,0x76630a3b31303266\n"
".quad 0x33662e3436662e74,0x2c34316466252032,0x0a3b323032662520,0x2e3436662e747663\n"
".quad 0x3164662520323366,0x3832326625202c35,0x36662e67656e0a3b,0x2c36316466252034\n"
".quad 0x0a3b343164662520,0x662e6e722e616d66,0x3731646625203436,0x2c3631646625202c\n"
".quad 0x25202c3264662520,0x6d660a3b35316466,0x3436662e6e722e61,0x202c383164662520\n"
".quad 0x6625202c37646625,0x646625202c373164,0x2e7476630a3b3531,0x662e3233662e6e72\n"
".quad 0x3330326625203436,0x3b3831646625202c,0x3233662e6275730a,0x202c343032662520\n"
".quad 0x25202c3833316625,0x6d660a3b33343166,0x3233662e6e722e61,0x202c353032662520\n"
".quad 0x30202c3430326625,0x3030303034303466,0x3333316625202c30,0x33662e6c756d0a3b\n"
".quad 0x2c36303266252032,0x202c343032662520,0x3030303930346630,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x6625202c37303266,0x326625202c363032,0x30326625202c3430\n"
".quad 0x722e616d660a3b35,0x6625203233662e6e,0x316625202c383032,0x34316625202c3734\n"
".quad 0x3730326625202c36,0x36662e7476630a3b,0x6625203233662e34,0x326625202c393164\n"
".quad 0x2e7476630a3b3830,0x203233662e343666,0x25202c3032646625,0x656e0a3b38343266\n"
".quad 0x6625203436662e67,0x646625202c313264,0x2e616d660a3b3931,0x25203436662e6e72\n"
".quad 0x6625202c32326466,0x646625202c313264,0x3032646625202c32,0x6e722e616d660a3b\n"
".quad 0x646625203436662e,0x37646625202c3332,0x2c3232646625202c,0x0a3b303264662520\n"
".quad 0x662e6e722e747663,0x25203436662e3233,0x6625202c39303266,0x2e646c0a3b333264\n"
".quad 0x36752e6d61726170,0x3435316c72252034,0x6d37315a5f5b202c,0x6279685f645f7472\n"
".quad 0x6563726f665f4241,0x5f536d665f536650,0x617261705f695f53,0x6c2e0a3b5d335f6d\n"
".quad 0x343931203220636f,0x2e64616d0a312031,0x25203436732e6f6c,0x7225202c37396c72\n"
".quad 0x316c7225202c386c,0x346c7225202c3435,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3135316c72,0x5f74726d37315a5f,0x5f42416279685f64,0x5366506563726f66\n"
".quad 0x695f535f536d665f,0x315f6d617261705f,0x2e617476630a3b5d,0x61626f6c672e6f74\n"
".quad 0x7225203436752e6c,0x6c7225202c38396c,0x6c68730a3b313531,0x6c7225203436622e\n"
".quad 0x396c7225202c3939,0x730a3b3233202c37,0x25203436732e7268,0x25202c3030316c72\n"
".quad 0x3233202c39396c72,0x3220636f6c2e0a3b,0x0a31203032303220,0x203436622e6c6873\n"
".quad 0x202c3130316c7225,0x202c3030316c7225,0x732e6464610a3b32,0x30316c7225203436\n"
".quad 0x38396c7225202c32,0x3130316c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x5d3230316c72255b,0x3b3135316625202c,0x3436732e6464610a,0x2c3330316c722520\n"
".quad 0x37202c386c722520,0x636f6c2e0a3b3836,0x2031323032203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c343031,0x6c7225202c333031,0x6c7225202c343531\n"
".quad 0x622e6c68730a3b34,0x30316c7225203436,0x30316c7225202c35,0x730a3b3233202c34\n"
".quad 0x25203436732e7268,0x25202c3630316c72,0x33202c3530316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120313230322032,0x3436622e6c68730a,0x2c3730316c722520,0x2c3630316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x396c7225202c3830,0x30316c7225202c38\n"
".quad 0x6c672e74730a3b37,0x3233662e6c61626f,0x3830316c72255b20,0x3136316625202c5d\n"
".quad 0x36732e6464610a3b,0x3930316c72252034,0x202c386c7225202c,0x6c2e0a3b36333531\n"
".quad 0x323032203220636f,0x2e64616d0a312032,0x25203436732e6f6c,0x25202c3031316c72\n"
".quad 0x25202c3930316c72,0x25202c3435316c72,0x6c68730a3b346c72,0x6c7225203436622e\n"
".quad 0x6c7225202c313131,0x3b3233202c303131,0x3436732e7268730a,0x2c3231316c722520\n"
".quad 0x2c3131316c722520,0x6f6c2e0a3b323320,0x3232303220322063,0x622e6c68730a3120\n"
".quad 0x31316c7225203436,0x31316c7225202c33,0x64610a3b32202c32,0x7225203436732e64\n"
".quad 0x7225202c3431316c,0x6c7225202c38396c,0x2e74730a3b333131,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x316625202c5d3431,0x2e6464610a3b3936,0x316c722520343673\n"
".quad 0x386c7225202c3531,0x0a3b34303332202c,0x32203220636f6c2e,0x616d0a3120333230\n"
".quad 0x3436732e6f6c2e64,0x2c3631316c722520,0x2c3531316c722520,0x2c3435316c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3731316c72,0x33202c3631316c72\n"
".quad 0x732e7268730a3b32,0x31316c7225203436,0x31316c7225202c38,0x2e0a3b3233202c37\n"
".quad 0x3032203220636f6c,0x6c68730a31203332,0x6c7225203436622e,0x6c7225202c393131\n"
".quad 0x0a3b32202c383131,0x203436732e646461,0x202c3032316c7225,0x25202c38396c7225\n"
".quad 0x730a3b3931316c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3032316c\n"
".quad 0x64610a3b37373166,0x7225203436732e64,0x7225202c3132316c,0x32373033202c386c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203432303220,0x732e6f6c2e64616d,0x32316c7225203436\n"
".quad 0x32316c7225202c32,0x35316c7225202c31,0x3b346c7225202c34,0x3436622e6c68730a\n"
".quad 0x2c3332316c722520,0x2c3232316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c343231,0x3b3233202c333231,0x203220636f6c2e0a,0x730a312034323032\n"
".quad 0x25203436622e6c68,0x25202c3532316c72,0x32202c3432316c72,0x36732e6464610a3b\n"
".quad 0x3632316c72252034,0x2c38396c7225202c,0x3b3532316c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3632316c7225,0x0a3b353831662520,0x203436732e646461\n"
".quad 0x202c3732316c7225,0x3833202c386c7225,0x636f6c2e0a3b3034,0x2035323032203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c383231,0x6c7225202c373231\n"
".quad 0x6c7225202c343531,0x622e6c68730a3b34,0x32316c7225203436,0x32316c7225202c39\n"
".quad 0x730a3b3233202c38,0x25203436732e7268,0x25202c3033316c72,0x33202c3932316c72\n"
".quad 0x20636f6c2e0a3b32,0x3120353230322032,0x3436622e6c68730a,0x2c3133316c722520\n"
".quad 0x2c3033316c722520,0x2e6464610a3b3220,0x316c722520343673,0x396c7225202c3233\n"
".quad 0x33316c7225202c38,0x6c672e74730a3b31,0x3233662e6c61626f,0x3233316c72255b20\n"
".quad 0x3139316625202c5d,0x36732e6464610a3b,0x3333316c72252034,0x202c386c7225202c\n"
".quad 0x6c2e0a3b38303634,0x323032203220636f,0x2e64616d0a312036,0x25203436732e6f6c\n"
".quad 0x25202c3433316c72,0x25202c3333316c72,0x25202c3435316c72,0x6c68730a3b346c72\n"
".quad 0x6c7225203436622e,0x6c7225202c353331,0x3b3233202c343331,0x3436732e7268730a\n"
".quad 0x2c3633316c722520,0x2c3533316c722520,0x6f6c2e0a3b323320,0x3632303220322063\n"
".quad 0x622e6c68730a3120,0x33316c7225203436,0x33316c7225202c37,0x64610a3b32202c36\n"
".quad 0x7225203436732e64,0x7225202c3833316c,0x6c7225202c38396c,0x2e74730a3b373331\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x316625202c5d3833,0x2e6464610a3b3739\n"
".quad 0x316c722520343673,0x386c7225202c3933,0x0a3b36373335202c,0x32203220636f6c2e\n"
".quad 0x616d0a3120373230,0x3436732e6f6c2e64,0x2c3034316c722520,0x2c3933316c722520\n"
".quad 0x2c3435316c722520,0x730a3b346c722520,0x25203436622e6c68,0x25202c3134316c72\n"
".quad 0x33202c3034316c72,0x732e7268730a3b32,0x34316c7225203436,0x34316c7225202c32\n"
".quad 0x2e0a3b3233202c31,0x3032203220636f6c,0x6c68730a31203732,0x6c7225203436622e\n"
".quad 0x6c7225202c333431,0x0a3b32202c323431,0x203436732e646461,0x202c3434316c7225\n"
".quad 0x25202c38396c7225,0x730a3b3334316c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3434316c,0x64610a3b33303266,0x7225203436732e64,0x7225202c3534316c\n"
".quad 0x34343136202c386c,0x3220636f6c2e0a3b,0x0a31203832303220,0x732e6f6c2e64616d\n"
".quad 0x34316c7225203436,0x34316c7225202c36,0x35316c7225202c35,0x3b346c7225202c34\n"
".quad 0x3436622e6c68730a,0x2c3734316c722520,0x2c3634316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c383431,0x3b3233202c373431,0x203220636f6c2e0a\n"
".quad 0x730a312038323032,0x25203436622e6c68,0x25202c3934316c72,0x32202c3834316c72\n"
".quad 0x36732e6464610a3b,0x3035316c72252034,0x2c38396c7225202c,0x3b3934316c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3035316c7225,0x0a3b393032662520\n"
".quad 0x38335f333342420a,0x3220636f6c2e0a3a,0x0a31203233303220,0x636e79732e726162\n"
".quad 0x3342420a0a3b3020,0x6c2e0a3a39335f33,0x353032203220636f,0x3b7465720a322032\n"
".quad 0x746e652e0a0a7d0a,0x6d37315a5f207972,0x6279685f645f7472,0x6563726f665f4142\n"
".quad 0x5f536d665f536650,0x61702e0a28695f53,0x3436752e206d6172,0x74726d37315a5f20\n"
".quad 0x41426279685f645f,0x66506563726f665f,0x5f535f536d665f53,0x5f6d617261705f69\n"
".quad 0x617261702e0a2c30,0x5f203436752e206d,0x645f74726d37315a,0x665f41426279685f\n"
".quad 0x5f5366506563726f,0x5f695f535f536d66,0x2c315f6d61726170,0x206d617261702e0a\n"
".quad 0x315a5f203233662e,0x685f645f74726d37,0x726f665f41426279,0x6d665f5366506563\n"
".quad 0x61705f695f535f53,0x2e0a2c325f6d6172,0x752e206d61726170,0x6d37315a5f203436\n"
".quad 0x6279685f645f7472,0x6563726f665f4142,0x5f536d665f536650,0x617261705f695f53\n"
".quad 0x61702e0a2c335f6d,0x3436752e206d6172,0x74726d37315a5f20,0x41426279685f645f\n"
".quad 0x66506563726f665f,0x5f535f536d665f53,0x5f6d617261705f69,0x617261702e0a2c34\n"
".quad 0x5f203436752e206d,0x645f74726d37315a,0x665f41426279685f,0x5f5366506563726f\n"
".quad 0x5f695f535f536d66,0x2c355f6d61726170,0x206d617261702e0a,0x315a5f203233752e\n"
".quad 0x685f645f74726d37,0x726f665f41426279,0x6d665f5366506563,0x61705f695f535f53\n"
".quad 0x0a290a365f6d6172,0x2e206765722e0a7b,0x323c662520323366,0x65722e0a3b3e3338\n"
".quad 0x25203436662e2067,0x0a3b3e34323c6466,0x72702e206765722e,0x34323c7025206465\n"
".quad 0x206765722e0a3b3e,0x3c7225203233732e,0x722e0a3b3e313131,0x203436732e206765\n"
".quad 0x3e3835313c6c7225,0x6168732e090a0a3b,0x696c612e20646572,0x38622e2034206e67\n"
".quad 0x5f616475635f5f20,0x61765f6c61636f6c,0x5f34363038335f72,0x635f6e6f6e5f3233\n"
".quad 0x6d75735f74736e6f,0x0a3b5d3231355b58,0x65726168732e090a,0x6e67696c612e2064\n"
".quad 0x5f2038622e203420,0x6f6c5f616475635f,0x5f7261765f6c6163,0x33345f3436303833\n"
".quad 0x6e6f635f6e6f6e5f,0x5b596d75735f7473,0x090a0a3b5d323135,0x206465726168732e\n"
".quad 0x34206e67696c612e,0x635f5f2038622e20,0x61636f6c5f616475,0x38335f7261765f6c\n"
".quad 0x6e5f30335f353630,0x74736e6f635f6e6f,0x345b6b636568635f,0x702e646c0a0a3b5d\n"
".quad 0x3436752e6d617261,0x5b202c376c722520,0x5f74726d37315a5f,0x5f41426279685f64\n"
".quad 0x5366506563726f66,0x695f535f536d665f,0x305f6d617261705f,0x61702e646c0a3b5d\n"
".quad 0x203436752e6d6172,0x5f5b202c326c7225,0x645f74726d37315a,0x665f41426279685f\n"
".quad 0x5f5366506563726f,0x5f695f535f536d66,0x5d335f6d61726170,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x3b376c7225202c33,0x203220636f6c2e0a\n"
".quad 0x6d0a312037353032,0x25203233752e766f,0x69746e25202c3472,0x766f6d0a3b782e64\n"
".quad 0x357225203233752e,0x646961746325202c,0x2e766f6d0a3b782e,0x2c36722520323375\n"
".quad 0x3b782e6469742520,0x2e6f6c2e64616d0a,0x2c31722520323373,0x7225202c34722520\n"
".quad 0x0a3b367225202c35,0x32203220636f6c2e,0x6f6d0a3120383530,0x7225203233752e76\n"
".quad 0x6469746e25202c37,0x2e766f6d0a3b792e,0x2c38722520323375,0x2e64696174632520\n"
".quad 0x752e766f6d0a3b79,0x202c397225203233,0x0a3b792e64697425,0x732e6f6c2e64616d\n"
".quad 0x202c327225203233,0x387225202c377225,0x630a3b397225202c,0x752e3436752e7476\n"
".quad 0x2c346c7225203233,0x6c2e0a3b31722520,0x353032203220636f,0x2e7476630a312039\n"
".quad 0x203233732e343673,0x7225202c386c7225,0x6c2e64616d0a3b32,0x7225203436732e6f\n"
".quad 0x386c7225202c356c,0x202c326c7225202c,0x6f6d0a3b346c7225,0x7225203233752e76\n"
".quad 0x0a3b30202c303131,0x32203220636f6c2e,0x74730a3120333630,0x2e6465726168732e\n"
".quad 0x635f5f5b20323375,0x61636f6c5f616475,0x38335f7261765f6c,0x6e5f30335f353630\n"
".quad 0x74736e6f635f6e6f,0x2c5d6b636568635f,0x0a3b303131722520,0x32203220636f6c2e\n"
".quad 0x61620a3120343630,0x3020636e79732e72,0x33732e6464610a3b,0x202c313172252032\n"
".quad 0x31342d202c317225,0x2e707465730a3b37,0x25203233752e746c,0x31317225202c3170\n"
".quad 0x730a3b303931202c,0x732e74672e707465,0x202c327025203233,0x303233202c327225\n"
".quad 0x72702e646e610a3b,0x202c337025206465,0x327025202c317025,0x6c2e707465730a3b\n"
".quad 0x7025203233732e74,0x202c327225202c34,0x646e610a3b373434,0x702520646572702e\n"
".quad 0x202c337025202c35,0x6f6c2e0a3b347025,0x3636303220322063,0x2e707465730a3120\n"
".quad 0x25203233732e7467,0x2c317225202c3670,0x6f0a3b3332303120,0x2520646572702e72\n"
".quad 0x2c357025202c3770,0x6c2e0a3b36702520,0x363032203220636f,0x377025400a312036\n"
".quad 0x3342422061726220,0x730a0a3b39335f34,0x25203436622e6c68,0x6c7225202c396c72\n"
".quad 0x730a3b3233202c35,0x25203436732e7268,0x7225202c30316c72,0x0a3b3233202c396c\n"
".quad 0x32203220636f6c2e,0x68730a3120303730,0x7225203436622e6c,0x6c7225202c31316c\n"
".quad 0x610a3b32202c3031,0x25203436732e6464,0x7225202c32316c72,0x316c7225202c336c\n"
".quad 0x6c672e646c0a3b31,0x3233662e6c61626f,0x255b202c32662520,0x610a3b5d32316c72\n"
".quad 0x25203233732e6464,0x327225202c333172,0x6c2e0a3b312d202c,0x373032203220636f\n"
".quad 0x2e7476630a312031,0x203233752e343675,0x25202c33316c7225,0x6464610a3b333172\n"
".quad 0x6c7225203436732e,0x316c7225202c3431,0x3b36333531202c33,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3735316c,0x645f74726d37315a,0x665f41426279685f\n"
".quad 0x5f5366506563726f,0x5f695f535f536d66,0x5d335f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x0a31203137303220,0x732e6f6c2e64616d,0x35316c7225203436,0x2c34316c7225202c\n"
".quad 0x2c3735316c722520,0x730a3b346c722520,0x25203436622e6c68,0x7225202c36316c72\n"
".quad 0x3b3233202c35316c,0x3436732e7268730a,0x202c37316c722520,0x33202c36316c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120313730322032,0x3436622e6c68730a,0x202c38316c722520\n"
".quad 0x32202c37316c7225,0x36732e6464610a3b,0x2c39316c72252034,0x25202c336c722520\n"
".quad 0x646c0a3b38316c72,0x2e6c61626f6c672e,0x2c33662520323366,0x5d39316c72255b20\n"
".quad 0x3220636f6c2e0a3b,0x0a31203237303220,0x203233732e646461,0x7225202c35317225\n"
".quad 0x76630a3b31202c32,0x33752e3436752e74,0x2c30326c72252032,0x610a3b3531722520\n"
".quad 0x25203436732e6464,0x7225202c31326c72,0x373033202c30326c,0x20636f6c2e0a3b32\n"
".quad 0x3120323730322032,0x2e6f6c2e64616d0a,0x326c722520343673,0x31326c7225202c32\n"
".quad 0x3735316c7225202c,0x0a3b346c7225202c,0x203436622e6c6873,0x25202c33326c7225\n"
".quad 0x3233202c32326c72,0x36732e7268730a3b,0x2c34326c72252034,0x202c33326c722520\n"
".quad 0x636f6c2e0a3b3233,0x2032373032203220,0x36622e6c68730a31,0x2c35326c72252034\n"
".quad 0x202c34326c722520,0x732e6464610a3b32,0x36326c7225203436,0x202c336c7225202c\n"
".quad 0x6c0a3b35326c7225,0x6c61626f6c672e64,0x346625203233662e,0x36326c72255b202c\n"
".quad 0x732e6464610a3b5d,0x2c37317225203233,0x312d202c31722520,0x3220636f6c2e0a3b\n"
".quad 0x0a31203038303220,0x662e6e722e747663,0x25203233732e3233,0x317225202c373766\n"
".quad 0x662e6464610a3b37,0x2c35376625203233,0x30202c3737662520,0x3030303030463366\n"
".quad 0x722e7476630a3b30,0x33732e3233662e6e,0x25202c3566252032,0x2e6464610a3b3272\n"
".quad 0x3235662520323366,0x30202c356625202c,0x3030303030463366,0x786574090a0a3b30\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x6625202c31346625,0x33346625202c3234\n"
".quad 0x2c7d34346625202c,0x6665527865745b20,0x257b202c4231665f,0x356625202c353766\n"
".quad 0x2e090a0a3b5d7d32,0x3032203220636f6c,0x6464610a31203138,0x317225203233732e\n"
".quad 0x202c317225202c39,0x722e7476630a3b31,0x33732e3233662e6e,0x202c383766252032\n"
".quad 0x64610a3b39317225,0x6625203233662e64,0x38376625202c3936,0x303046336630202c\n"
".quad 0x090a0a3b30303030,0x762e64322e786574,0x33662e3233662e34,0x2c373466257b2032\n"
".quad 0x25202c3834662520,0x356625202c393466,0x7865745b202c7d30,0x2c4233665f666552\n"
".quad 0x202c393666257b20,0x0a3b5d7d32356625,0x3220636f6c2e090a,0x0a31203238303220\n"
".quad 0x662e6e722e747663,0x25203233732e3233,0x317225202c393766,0x662e6464610a3b33\n"
".quad 0x2c34366625203233,0x30202c3937662520,0x3030303030463366,0x786574090a0a3b30\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x6625202c33356625,0x35356625202c3435\n"
".quad 0x2c7d36356625202c,0x6665527865745b20,0x257b202c4235665f,0x366625202c353766\n"
".quad 0x0a090a0a3b5d7d34,0x2e64322e78657409,0x662e3233662e3476,0x393566257b203233\n"
".quad 0x202c30366625202c,0x6625202c31366625,0x65745b202c7d3236,0x4236665f66655278\n"
".quad 0x2c393666257b202c,0x3b5d7d3436662520,0x20636f6c2e090a0a,0x3120343830322032\n"
".quad 0x2e6e722e7476630a,0x203233732e323366,0x7225202c30386625,0x2e6464610a3b3531\n"
".quad 0x3637662520323366,0x202c30386625202c,0x3030303046336630,0x6574090a0a3b3030\n"
".quad 0x2e34762e64322e78,0x203233662e323366,0x25202c353666257b,0x366625202c363666\n"
".quad 0x7d38366625202c37,0x65527865745b202c,0x7b202c4237665f66,0x6625202c39366625\n"
".quad 0x090a0a3b5d7d3637,0x64322e786574090a,0x2e3233662e34762e,0x3766257b20323366\n"
".quad 0x2c32376625202c31,0x25202c3337662520,0x745b202c7d343766,0x38665f6665527865\n"
".quad 0x353766257b202c42,0x5d7d36376625202c,0x636f6c2e090a0a3b,0x0a31203238203220\n"
".quad 0x662e6e722e747663,0x25203233732e3233,0x317225202c323166,0x6c2e707465730a3b\n"
".quad 0x7025203233662e74,0x2c32316625202c38,0x4343434433663020,0x6f6c2e0a3b444343\n"
".quad 0x3538303220322063,0x662e766f6d0a3120,0x2c31316625203233,0x2e0a3b3137662520\n"
".quad 0x3032203220636f6c,0x766f6d0a31203438,0x326625203233662e,0x35366625202c3033\n"
".quad 0x3220636f6c2e0a3b,0x0a31203338303220,0x203233662e766f6d,0x25202c3932326625\n"
".quad 0x6f6c2e0a3b393566,0x3238303220322063,0x662e766f6d0a3120,0x202c386625203233\n"
".quad 0x6c2e0a3b33356625,0x383032203220636f,0x2e766f6d0a312031,0x3132662520323366\n"
".quad 0x3b37346625202c31,0x203220636f6c2e0a,0x6d0a312030383032,0x25203233662e766f\n"
".quad 0x6625202c32313266,0x636f6c2e0a3b3134,0x0a31203238203220,0x6172622038702540\n"
".quad 0x30315f3433424220,0x752e766f6d0a0a3b,0x2c34327225203233,0x2e0a3b3432303120\n"
".quad 0x3438203220636f6c,0x732e6275730a3120,0x2c35327225203233,0x25202c3432722520\n"
".quad 0x2e7476630a3b3172,0x732e3233662e6e72,0x2c31386625203233,0x730a3b3532722520\n"
".quad 0x662e746c2e707465,0x202c397025203233,0x6630202c31386625,0x4443434343384633\n"
".quad 0x6220397025400a3b,0x5f34334242206172,0x2e766f6d0a0a3b39,0x3033722520323375\n"
".quad 0x2e0a3b383637202c,0x3638203220636f6c,0x732e6275730a3120,0x2c31337225203233\n"
".quad 0x25202c3033722520,0x2e7476630a3b3272,0x732e3233662e6e72,0x2c32386625203233\n"
".quad 0x730a3b3133722520,0x662e746c2e707465,0x2c30317025203233,0x30202c3238662520\n"
".quad 0x4343434338463366,0x30317025400a3b44,0x3342422061726220,0x6c2e0a0a3b385f34\n"
".quad 0x203838203220636f,0x6c2e707465730a31,0x7025203233662e74,0x2c356625202c3131\n"
".quad 0x4343434433663020,0x7025400a3b444343,0x4220617262203131,0x0a0a3b375f343342\n"
".quad 0x203233662e646461,0x6625202c33386625,0x33436630202c3231,0x0a3b303030434646\n"
".quad 0x203233662e646461,0x6625202c34386625,0x4233436630202c35,0x2e0a3b3030304346\n"
".quad 0x3039203220636f6c,0x662e6c756d0a3120,0x2c35386625203233,0x25202c3438662520\n"
".quad 0x616d660a3b343866,0x203233662e6e722e,0x6625202c36386625,0x33386625202c3338\n"
".quad 0x0a3b35386625202c,0x2e746c2e70746573,0x3231702520323366,0x202c36386625202c\n"
".quad 0x3030303832346630,0x317025400a3b3030,0x4242206172622032,0x72620a3b365f3433\n"
".quad 0x424220696e752e61,0x0a0a3b31315f3433,0x0a3a365f34334242,0x203233752e766f6d\n"
".quad 0x31202c3031317225,0x752e6172620a3b30,0x5f3433424220696e,0x3342420a0a3b3131\n"
".quad 0x766f6d0a3a375f34,0x317225203233752e,0x0a3b3231202c3031,0x20696e752e617262\n"
".quad 0x3b31315f34334242,0x385f343342420a0a,0x33752e766f6d0a3a,0x2c30313172252032\n"
".quad 0x6172620a3b313120,0x33424220696e752e,0x420a0a3b31315f34,0x6d0a3a395f343342\n"
".quad 0x25203233752e766f,0x3b32202c30313172,0x696e752e6172620a,0x31315f3433424220\n"
".quad 0x5f343342420a0a3b,0x2e766f6d0a3a3031,0x3131722520323375,0x420a0a3b33202c30\n"
".quad 0x0a3a31315f343342,0x32203220636f6c2e,0x76630a3120393530,0x33752e3436752e74\n"
".quad 0x2c37326c72252032,0x64610a3b32722520,0x7225203436732e64,0x6c7225202c38326c\n"
".quad 0x34343136202c3732,0x36752e7476630a3b,0x7225203233752e34,0x317225202c39326c\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3635316c72,0x5f74726d37315a5f\n"
".quad 0x5f41426279685f64,0x5366506563726f66,0x695f535f536d665f,0x335f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x3120363431322032,0x2e6f6c2e64616d0a,0x336c722520343673\n"
".quad 0x38326c7225202c30,0x3635316c7225202c,0x3b39326c7225202c,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3335316c,0x645f74726d37315a,0x665f41426279685f\n"
".quad 0x5f5366506563726f,0x5f695f535f536d66,0x5d315f6d61726170,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x316c7225202c3133,0x2e6c68730a3b3335\n"
".quad 0x336c722520343662,0x30336c7225202c32,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c33336c,0x0a3b3233202c3233,0x32203220636f6c2e,0x68730a3120363431\n"
".quad 0x7225203436622e6c,0x6c7225202c34336c,0x610a3b32202c3333,0x25203436732e6464\n"
".quad 0x6c7225202c366c72,0x336c7225202c3133,0x2e707465730a3b34,0x25203233732e7165\n"
".quad 0x317225202c333170,0x400a3b31202c3031,0x6172622033317025,0x33315f3433424220\n"
".quad 0x2e707465730a0a3b,0x25203233732e656e,0x317225202c343170,0x0a3b3031202c3031\n"
".quad 0x7262203431702540,0x315f343342422061,0x343342420a0a3b37,0x6f6c2e0a3a33315f\n"
".quad 0x3938303220322063,0x2e707465730a3120,0x25203233732e7165,0x317225202c353170\n"
".quad 0x0a3b3031202c3031,0x7262203531702540,0x315f343342422061,0x636f6c2e0a0a3b35\n"
".quad 0x2037353032203220,0x33752e766f6d0a31,0x2c38303172252032,0x3b782e6469742520\n"
".quad 0x6469772e6c756d0a,0x7225203233752e65,0x317225202c35336c,0x6d0a3b34202c3830\n"
".quad 0x25203436752e766f,0x5f5f202c36336c72,0x636f6c5f61647563,0x335f7261765f6c61\n"
".quad 0x5f32335f34363038,0x736e6f635f6e6f6e,0x0a3b586d75735f74,0x203436732e646461\n"
".quad 0x25202c37336c7225,0x7225202c36336c72,0x766f6d0a3b35336c,0x347225203233752e\n"
".quad 0x6c2e0a3b30202c37,0x393032203220636f,0x732e74730a312035,0x33752e6465726168\n"
".quad 0x37336c72255b2032,0x3b37347225202c5d,0x3436752e766f6d0a,0x202c38336c722520\n"
".quad 0x6c5f616475635f5f,0x7261765f6c61636f,0x345f34363038335f,0x6f635f6e6f6e5f33\n"
".quad 0x596d75735f74736e,0x36732e6464610a3b,0x2c39336c72252034,0x202c38336c722520\n"
".quad 0x2e0a3b35336c7225,0x3032203220636f6c,0x2e74730a31203639,0x752e646572616873\n"
".quad 0x336c72255b203233,0x37347225202c5d39,0x6e752e6172620a3b,0x315f343342422069\n"
".quad 0x343342420a0a3b36,0x766f6d0a3a35315f,0x357225203233752e,0x6c2e0a3b31202c30\n"
".quad 0x393032203220636f,0x732e74730a312030,0x33752e6465726168,0x6475635f5f5b2032\n"
".quad 0x5f6c61636f6c5f61,0x363038335f726176,0x6e6f6e5f30335f35,0x635f74736e6f635f\n"
".quad 0x25202c5d6b636568,0x6f6c2e0a3b303572,0x3139303220322063,0x662e6464610a3120\n"
".quad 0x2c37386625203233,0x25202c3134662520,0x616d660a3b313466,0x203233662e6e722e\n"
".quad 0x6625202c38386625,0x30436630202c3734,0x202c303030303030,0x64610a3b37386625\n"
".quad 0x6625203233662e64,0x33356625202c3938,0x0a3b33356625202c,0x203233662e646461\n"
".quad 0x6625202c30396625,0x39386625202c3838,0x33662e6464610a3b,0x202c313966252032\n"
".quad 0x6625202c31376625,0x2e6464610a3b3137,0x3239662520323366,0x202c30396625202c\n"
".quad 0x64610a3b31396625,0x6625203233662e64,0x39356625202c3339,0x0a3b39356625202c\n"
".quad 0x203233662e627573,0x6625202c34396625,0x33396625202c3239,0x33662e6464610a3b\n"
".quad 0x202c353966252032,0x6625202c35366625,0x2e6275730a3b3536,0x3639662520323366\n"
".quad 0x202c34396625202c,0x6c2e0a3b35396625,0x353032203220636f,0x2e766f6d0a312037\n"
".quad 0x3031722520323375,0x2e64697425202c37,0x772e6c756d0a3b78,0x203233752e656469\n"
".quad 0x25202c30346c7225,0x3b34202c37303172,0x3436752e766f6d0a,0x202c31346c722520\n"
".quad 0x6c5f616475635f5f,0x7261765f6c61636f,0x335f34363038335f,0x6f635f6e6f6e5f32\n"
".quad 0x586d75735f74736e,0x36732e6464610a3b,0x2c32346c72252034,0x202c31346c722520\n"
".quad 0x2e0a3b30346c7225,0x3032203220636f6c,0x2e74730a31203139,0x662e646572616873\n"
".quad 0x346c72255b203233,0x36396625202c5d32,0x3220636f6c2e0a3b,0x0a31203239303220\n"
".quad 0x203233662e646461,0x6625202c37396625,0x0a3b346625202c34,0x203233662e646461\n"
".quad 0x6625202c38396625,0x0a3b336625202c33,0x203233662e627573,0x6625202c39396625\n"
".quad 0x37396625202c3839,0x33662e6464610a3b,0x2c30303166252032,0x25202c3939662520\n"
".quad 0x6275730a3b393866,0x316625203233662e,0x30316625202c3130,0x3b31396625202c30\n"
".quad 0x3233662e6464610a,0x202c323031662520,0x25202c3130316625,0x6275730a3b333966\n"
".quad 0x316625203233662e,0x30316625202c3330,0x3b35396625202c32,0x3436752e766f6d0a\n"
".quad 0x202c33346c722520,0x6c5f616475635f5f,0x7261765f6c61636f,0x345f34363038335f\n"
".quad 0x6f635f6e6f6e5f33,0x596d75735f74736e,0x36732e6464610a3b,0x2c34346c72252034\n"
".quad 0x202c33346c722520,0x2e0a3b30346c7225,0x3032203220636f6c,0x2e74730a31203239\n"
".quad 0x662e646572616873,0x346c72255b203233,0x30316625202c5d34,0x343342420a0a3b33\n"
".quad 0x6464610a3a36315f,0x6c7225203436732e,0x386c7225202c3634,0x6c0a3b383637202c\n"
".quad 0x2e6d617261702e64,0x316c722520343675,0x315a5f5b202c3535,0x685f645f74726d37\n"
".quad 0x726f665f41426279,0x6d665f5366506563,0x61705f695f535f53,0x0a3b5d335f6d6172\n"
".quad 0x32203220636f6c2e,0x616d0a3120393331,0x3436732e6f6c2e64,0x202c38346c722520\n"
".quad 0x25202c36346c7225,0x25202c3535316c72,0x2e646c0a3b346c72,0x36752e6d61726170\n"
".quad 0x3235316c72252034,0x6d37315a5f5b202c,0x6279685f645f7472,0x6563726f665f4142\n"
".quad 0x5f536d665f536650,0x617261705f695f53,0x76630a3b5d315f6d,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x202c39346c722520,0x0a3b3235316c7225,0x203436622e6c6873\n"
".quad 0x25202c30356c7225,0x3233202c38346c72,0x36732e7268730a3b,0x2c31356c72252034\n"
".quad 0x202c30356c722520,0x636f6c2e0a3b3233,0x2039333132203220,0x36622e6c68730a31\n"
".quad 0x2c32356c72252034,0x202c31356c722520,0x732e6464610a3b32,0x33356c7225203436\n"
".quad 0x2c39346c7225202c,0x0a3b32356c722520,0x32203220636f6c2e,0x74730a3120383930\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x346625202c5d3335,0x732e6464610a3b37\n"
".quad 0x34356c7225203436,0x202c386c7225202c,0x6c2e0a3b36333531,0x343132203220636f\n"
".quad 0x2e64616d0a312030,0x25203436732e6f6c,0x7225202c35356c72,0x6c7225202c34356c\n"
".quad 0x6c7225202c353531,0x622e6c68730a3b34,0x36356c7225203436,0x2c35356c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x356c7225202c3735,0x2e0a3b3233202c36\n"
".quad 0x3132203220636f6c,0x6c68730a31203034,0x6c7225203436622e,0x356c7225202c3835\n"
".quad 0x64610a3b32202c37,0x7225203436732e64,0x6c7225202c39356c,0x356c7225202c3934\n"
".quad 0x20636f6c2e0a3b38,0x3120393930322032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d39356c7225,0x6464610a3b346625,0x6c7225203436732e,0x386c7225202c3036\n"
".quad 0x0a3b34303332202c,0x32203220636f6c2e,0x616d0a3120313431,0x3436732e6f6c2e64\n"
".quad 0x202c31366c722520,0x25202c30366c7225,0x25202c3535316c72,0x6c68730a3b346c72\n"
".quad 0x6c7225203436622e,0x366c7225202c3236,0x730a3b3233202c31,0x25203436732e7268\n"
".quad 0x7225202c33366c72,0x3b3233202c32366c,0x203220636f6c2e0a,0x730a312031343132\n"
".quad 0x25203436622e6c68,0x7225202c34366c72,0x0a3b32202c33366c,0x203436732e646461\n"
".quad 0x25202c35366c7225,0x7225202c39346c72,0x6f6c2e0a3b34366c,0x3030313220322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x5d35366c72255b20,0x0a3b31346625202c\n"
".quad 0x203436732e646461,0x25202c36366c7225,0x373033202c386c72,0x20636f6c2e0a3b32\n"
".quad 0x3120323431322032,0x2e6f6c2e64616d0a,0x366c722520343673,0x36366c7225202c37\n"
".quad 0x3535316c7225202c,0x0a3b346c7225202c,0x203436622e6c6873,0x25202c38366c7225\n"
".quad 0x3233202c37366c72,0x36732e7268730a3b,0x2c39366c72252034,0x202c38366c722520\n"
".quad 0x636f6c2e0a3b3233,0x2032343132203220,0x36622e6c68730a31,0x2c30376c72252034\n"
".quad 0x202c39366c722520,0x732e6464610a3b32,0x31376c7225203436,0x2c39346c7225202c\n"
".quad 0x0a3b30376c722520,0x32203220636f6c2e,0x74730a3120313031,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x336625202c5d3137,0x36732e6464610a3b,0x2c32376c72252034\n"
".quad 0x33202c386c722520,0x6f6c2e0a3b303438,0x3334313220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c33376c,0x316c7225202c3237,0x346c7225202c3535\n"
".quad 0x36622e6c68730a3b,0x2c34376c72252034,0x202c33376c722520,0x2e7268730a3b3233\n"
".quad 0x376c722520343673,0x34376c7225202c35,0x6c2e0a3b3233202c,0x343132203220636f\n"
".quad 0x2e6c68730a312033,0x376c722520343662,0x35376c7225202c36,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x346c7225202c3737,0x36376c7225202c39,0x3220636f6c2e0a3b\n"
".quad 0x0a31203230313220,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d37376c72\n"
".quad 0x6464610a3b353666,0x6c7225203436732e,0x386c7225202c3837,0x0a3b38303634202c\n"
".quad 0x32203220636f6c2e,0x616d0a3120343431,0x3436732e6f6c2e64,0x202c39376c722520\n"
".quad 0x25202c38376c7225,0x25202c3535316c72,0x6c68730a3b346c72,0x6c7225203436622e\n"
".quad 0x376c7225202c3038,0x730a3b3233202c39,0x25203436732e7268,0x7225202c31386c72\n"
".quad 0x3b3233202c30386c,0x203220636f6c2e0a,0x730a312034343132,0x25203436622e6c68\n"
".quad 0x7225202c32386c72,0x0a3b32202c31386c,0x203436732e646461,0x25202c33386c7225\n"
".quad 0x7225202c39346c72,0x6f6c2e0a3b32386c,0x3330313220322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x5d33386c72255b20,0x0a3b31376625202c,0x203436732e646461\n"
".quad 0x25202c34386c7225,0x373335202c386c72,0x20636f6c2e0a3b36,0x3120353431322032\n"
".quad 0x2e6f6c2e64616d0a,0x386c722520343673,0x34386c7225202c35,0x3535316c7225202c\n"
".quad 0x0a3b346c7225202c,0x203436622e6c6873,0x25202c36386c7225,0x3233202c35386c72\n"
".quad 0x36732e7268730a3b,0x2c37386c72252034,0x202c36386c722520,0x636f6c2e0a3b3233\n"
".quad 0x2035343132203220,0x36622e6c68730a31,0x2c38386c72252034,0x202c37386c722520\n"
".quad 0x732e6464610a3b32,0x39386c7225203436,0x2c39346c7225202c,0x0a3b38386c722520\n"
".quad 0x32203220636f6c2e,0x74730a3120343031,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x356625202c5d3938,0x20636f6c2e0a3b33,0x3120353031322032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x25202c5d366c7225,0x6172620a3b393566,0x33424220696e752e\n"
".quad 0x420a0a3b38335f34,0x0a3a37315f343342,0x32203220636f6c2e,0x6f6d0a3120373530\n"
".quad 0x7225203233752e76,0x697425202c393031,0x6c756d0a3b782e64,0x33752e656469772e\n"
".quad 0x2c30396c72252032,0x202c393031722520,0x752e766f6d0a3b34,0x31396c7225203436\n"
".quad 0x616475635f5f202c,0x765f6c61636f6c5f,0x34363038335f7261,0x5f6e6f6e5f32335f\n"
".quad 0x75735f74736e6f63,0x2e6464610a3b586d,0x396c722520343673,0x31396c7225202c32\n"
".quad 0x3b30396c7225202c,0x3233752e766f6d0a,0x30202c3137722520,0x3220636f6c2e0a3b\n"
".quad 0x0a31203830313220,0x65726168732e7473,0x255b203233752e64,0x25202c5d32396c72\n"
".quad 0x766f6d0a3b313772,0x6c7225203436752e,0x75635f5f202c3339,0x6c61636f6c5f6164\n"
".quad 0x3038335f7261765f,0x6f6e5f33345f3436,0x5f74736e6f635f6e,0x64610a3b596d7573\n"
".quad 0x7225203436732e64,0x6c7225202c34396c,0x396c7225202c3339,0x20636f6c2e0a3b30\n"
".quad 0x3120393031322032,0x726168732e74730a,0x5b203233752e6465,0x202c5d34396c7225\n"
".quad 0x6c2e0a3b31377225,0x343233203220636f,0x2e707465730a3120,0x25203233732e7165\n"
".quad 0x317225202c363170,0x400a3b32202c3031,0x6172622036317025,0x36325f3433424220\n"
".quad 0x20636f6c2e0a0a3b,0x0a31203832332032,0x2e71652e70746573,0x3731702520323373\n"
".quad 0x2c3031317225202c,0x317025400a3b3320,0x4242206172622037,0x0a0a3b30325f3433\n"
".quad 0x203233662e766f6d,0x25202c3035326625,0x766f6d0a3b313166,0x326625203233662e\n"
".quad 0x3b386625202c3934,0x3233662e766f6d0a,0x202c383732662520,0x766f6d0a3b346625\n"
".quad 0x326625203233662e,0x3b336625202c3737,0x696e752e6172620a,0x32335f3433424220\n"
".quad 0x5f343342420a0a3b,0x636f6c2e0a3a3032,0x3120303732203220,0x71652e707465730a\n"
".quad 0x317025203233732e,0x202c327225202c38,0x38317025400a3b30,0x3342422061726220\n"
".quad 0x2e0a0a3b34325f34,0x3732203220636f6c,0x707465730a312034,0x203233732e71652e\n"
".quad 0x7225202c39317025,0x0a3b373637202c32,0x7262203931702540,0x325f343342422061\n"
".quad 0x2e766f6d0a0a3b33,0x3332662520323366,0x3033326625202c32,0x33662e766f6d0a3b\n"
".quad 0x2c31333266252032,0x0a3b393232662520,0x203233662e766f6d,0x25202c3238326625\n"
".quad 0x2e766f6d0a3b3466,0x3832662520323366,0x0a3b336625202c31,0x20696e752e617262\n"
".quad 0x3b35325f34334242,0x325f343342420a0a,0x662e766f6d0a3a33,0x3133326625203233\n"
".quad 0x3b3932326625202c,0x3233662e766f6d0a,0x202c323332662520,0x6d0a3b3932326625\n"
".quad 0x25203233662e766f,0x6625202c31383266,0x662e766f6d0a3b33,0x3238326625203233\n"
".quad 0x620a3b336625202c,0x4220696e752e6172,0x0a3b35325f343342,0x34325f343342420a\n"
".quad 0x33662e766f6d0a3a,0x2c31333266252032,0x0a3b303332662520,0x203233662e766f6d\n"
".quad 0x25202c3233326625,0x6f6d0a3b30333266,0x6625203233662e76,0x346625202c313832\n"
".quad 0x33662e766f6d0a3b,0x2c32383266252032,0x420a0a3b34662520,0x0a3a35325f343342\n"
".quad 0x203233662e766f6d,0x25202c3837326625,0x6f6d0a3b32383266,0x6625203233662e76\n"
".quad 0x326625202c373732,0x2e766f6d0a3b3138,0x3332662520323366,0x3233326625202c30\n"
".quad 0x33662e766f6d0a3b,0x2c39323266252032,0x0a3b313332662520,0x203233662e766f6d\n"
".quad 0x30202c3430316625,0x3037443341443366,0x20636f6c2e0a3b41,0x0a31203138322032\n"
".quad 0x662e6e722e616d66,0x3231326625203233,0x2c3430316625202c,0x4141324633663020\n"
".quad 0x346625202c424141,0x20636f6c2e0a3b37,0x0a31203238322032,0x203233662e627573\n"
".quad 0x25202c3530316625,0x6625202c37373266,0x766f6d0a3b383732,0x316625203233662e\n"
".quad 0x46336630202c3630,0x0a3b303030303030,0x32203220636f6c2e,0x67656e0a31203238\n"
".quad 0x316625203233662e,0x30316625202c3730,0x722e616d660a3b35,0x6625203233662e6e\n"
".quad 0x316625202c383031,0x30316625202c3730,0x3033326625202c36,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x30316625202c3934,0x3245336630202c34,0x25202c4241414141\n"
".quad 0x6c2e0a3b38303166,0x333832203220636f,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x316625202c393031,0x46336630202c3530,0x202c303030303030,0x660a3b3932326625\n"
".quad 0x33662e6e722e616d,0x2c30353266252032,0x202c343031662520,0x4141413245336630\n"
".quad 0x30316625202c4241,0x752e6172620a3b39,0x5f3433424220696e,0x3342420a0a3b3233\n"
".quad 0x6c2e0a3a36325f34,0x373432203220636f,0x2e707465730a3120,0x25203233732e7165\n"
".quad 0x327225202c303270,0x7025400a3b30202c,0x4220617262203032,0x0a3b30335f343342\n"
".quad 0x203220636f6c2e0a,0x65730a3120313532,0x33732e71652e7074,0x202c313270252032\n"
".quad 0x373637202c327225,0x2031327025400a3b,0x3433424220617262,0x6f6d0a0a3b39325f\n"
".quad 0x6625203233662e76,0x316625202c323532,0x662e766f6d0a3b31,0x3135326625203233\n"
".quad 0x6d0a3b386625202c,0x25203233662e766f,0x6625202c30383266,0x662e766f6d0a3b34\n"
".quad 0x3937326625203233,0x620a3b336625202c,0x4220696e752e6172,0x0a3b31335f343342\n"
".quad 0x39325f343342420a,0x33662e766f6d0a3a,0x2c32353266252032,0x6f6d0a3b38662520\n"
".quad 0x6625203233662e76,0x386625202c313532,0x33662e766f6d0a3b,0x2c30383266252032\n"
".quad 0x6f6d0a3b33662520,0x6625203233662e76,0x336625202c393732,0x6e752e6172620a3b\n"
".quad 0x335f343342422069,0x343342420a0a3b31,0x766f6d0a3a30335f,0x326625203233662e\n"
".quad 0x31316625202c3235,0x33662e766f6d0a3b,0x2c31353266252032,0x6d0a3b3131662520\n"
".quad 0x25203233662e766f,0x6625202c30383266,0x662e766f6d0a3b34,0x3937326625203233\n"
".quad 0x0a0a3b346625202c,0x3a31335f34334242,0x3233662e766f6d0a,0x202c383732662520\n"
".quad 0x6d0a3b3038326625,0x25203233662e766f,0x6625202c37373266,0x766f6d0a3b393732\n"
".quad 0x326625203233662e,0x35326625202c3035,0x662e766f6d0a3b32,0x3934326625203233\n"
".quad 0x3b3135326625202c,0x203220636f6c2e0a,0x64610a3120383532,0x6625203233662e64\n"
".quad 0x326625202c303131,0x3b3737326625202c,0x3233662e6464610a,0x202c313131662520\n"
".quad 0x25202c3031316625,0x64610a3b38373266,0x6625203233662e64,0x346625202c323131\n"
".quad 0x3b31346625202c31,0x3233662e6464610a,0x202c333131662520,0x25202c3131316625\n"
".quad 0x64610a3b32313166,0x6625203233662e64,0x326625202c343131,0x34326625202c3934\n"
".quad 0x662e6464610a3b39,0x3531316625203233,0x2c3331316625202c,0x0a3b343131662520\n"
".quad 0x203233662e646461,0x25202c3631316625,0x6625202c30353266,0x6464610a3b303532\n"
".quad 0x316625203233662e,0x31316625202c3731,0x3631316625202c35,0x33662e6464610a3b\n"
".quad 0x2c38313166252032,0x202c373131662520,0x3030303846426630,0x636f6c2e0a3b3030\n"
".quad 0x3120303632203220,0x2e6e722e616d660a,0x3132662520323366,0x3831316625202c31\n"
".quad 0x413246426630202c,0x6625202c42414141,0x636f6c2e0a3b3134,0x3120313632203220\n"
".quad 0x3233662e6275730a,0x202c393131662520,0x25202c3737326625,0x6f6d0a3b38373266\n"
".quad 0x6625203233662e76,0x336630202c303231,0x3b30303030303046,0x203220636f6c2e0a\n"
".quad 0x6d660a3120313632,0x3233662e6e722e61,0x202c313231662520,0x30202c3931316625\n"
".quad 0x3030303030463366,0x3934326625202c30,0x33662e766f6d0a3b,0x2c32323166252032\n"
".quad 0x4141324533663020,0x6f6c2e0a3b424141,0x2031363220322063,0x33662e67656e0a31\n"
".quad 0x2c33323166252032,0x0a3b383131662520,0x662e6e722e616d66,0x3033326625203233\n"
".quad 0x2c3332316625202c,0x202c323231662520,0x2e0a3b3132316625,0x3632203220636f6c\n"
".quad 0x2e67656e0a312032,0x3231662520323366,0x3931316625202c34,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x32316625202c3532,0x3032316625202c34,0x3b3035326625202c\n"
".quad 0x2e6e722e616d660a,0x3232662520323366,0x3332316625202c39,0x2c3232316625202c\n"
".quad 0x0a3b353231662520,0x32335f343342420a,0x33662e766f6d0a3a,0x202c313366252032\n"
".quad 0x6d0a3b3837326625,0x25203233662e766f,0x326625202c333366,0x2e766f6d0a3b3737\n"
".quad 0x3732662520323366,0x3b3035326625202c,0x3233662e766f6d0a,0x25202c3033662520\n"
".quad 0x6f6d0a3b39343266,0x6625203233662e76,0x33326625202c3832,0x662e766f6d0a3b30\n"
".quad 0x2c39326625203233,0x0a3b393232662520,0x33203220636f6c2e,0x7465730a31203233\n"
".quad 0x3233732e71652e70,0x25202c3232702520,0x3131202c30313172,0x2032327025400a3b\n"
".quad 0x3433424220617262,0x6c2e0a0a3b36335f,0x383333203220636f,0x2e707465730a3120\n"
".quad 0x25203233732e7165,0x317225202c333270,0x0a3b3231202c3031,0x7262203332702540\n"
".quad 0x335f343342422061,0x2e766f6d0a0a3b35,0x3132662520323366,0x3b39326625202c35\n"
".quad 0x3233662e766f6d0a,0x202c383232662520,0x6f6d0a3b38326625,0x6625203233662e76\n"
".quad 0x326625202c373232,0x2e766f6d0a3b3531,0x3332662520323366,0x3b30336625202c35\n"
".quad 0x3233662e766f6d0a,0x202c383432662520,0x6f6d0a3b37326625,0x6625203233662e76\n"
".quad 0x326625202c373432,0x2e766f6d0a3b3533,0x3532662520323366,0x3b33336625202c35\n"
".quad 0x3233662e766f6d0a,0x202c363732662520,0x6f6d0a3b31336625,0x6625203233662e76\n"
".quad 0x326625202c353732,0x2e6172620a3b3535,0x3433424220696e75,0x42420a0a3b37335f\n"
".quad 0x6d0a3a35335f3433,0x25203233662e766f,0x6625202c38323266,0x2e766f6d0a3b3832\n"
".quad 0x3232662520323366,0x3b38326625202c37,0x3233662e766f6d0a,0x202c383432662520\n"
".quad 0x6f6d0a3b37326625,0x6625203233662e76,0x326625202c373432,0x662e766f6d0a3b37\n"
".quad 0x3637326625203233,0x0a3b31336625202c,0x203233662e766f6d,0x25202c3537326625\n"
".quad 0x6172620a3b313366,0x33424220696e752e,0x420a0a3b37335f34,0x0a3a36335f343342\n"
".quad 0x203233662e766f6d,0x25202c3832326625,0x766f6d0a3b393266,0x326625203233662e\n"
".quad 0x39326625202c3732,0x33662e766f6d0a3b,0x2c38343266252032,0x6d0a3b3033662520\n"
".quad 0x25203233662e766f,0x6625202c37343266,0x2e766f6d0a3b3033,0x3732662520323366\n"
".quad 0x3b33336625202c36,0x3233662e766f6d0a,0x202c353732662520,0x420a0a3b33336625\n"
".quad 0x0a3a37335f343342,0x32203220636f6c2e,0x64610a3120363331,0x6625203233662e64\n"
".quad 0x326625202c363231,0x3b3231326625202c,0x3233662e6464610a,0x202c373231662520\n"
".quad 0x25202c3632316625,0x64610a3b35373266,0x6625203233662e64,0x316625202c383231\n"
".quad 0x31326625202c3732,0x662e6464610a3b31,0x3932316625203233,0x2c3832316625202c\n"
".quad 0x0a3b363732662520,0x203233662e646461,0x25202c3033316625,0x6625202c39323166\n"
".quad 0x6464610a3b373432,0x316625203233662e,0x33316625202c3133,0x3732326625202c30\n"
".quad 0x33662e6464610a3b,0x2c32333166252032,0x202c313331662520,0x610a3b3832326625\n"
".quad 0x25203233662e6464,0x6625202c33333166,0x326625202c323331,0x2e6275730a3b3834\n"
".quad 0x3331662520323366,0x3231326625202c34,0x3b3131326625202c,0x3233662e6464610a\n"
".quad 0x202c353331662520,0x25202c3433316625,0x75730a3b37343266,0x6625203233662e62\n"
".quad 0x316625202c363331,0x32326625202c3533,0x662e6275730a3b37,0x3733316625203233\n"
".quad 0x2c3633316625202c,0x0a3b383232662520,0x203233662e646461,0x25202c3833316625\n"
".quad 0x6625202c37333166,0x6275730a3b383432,0x316625203233662e,0x37326625202c3933\n"
".quad 0x3637326625202c35,0x33662e6464610a3b,0x2c30343166252032,0x202c393331662520\n"
".quad 0x610a3b3734326625,0x25203233662e6464,0x6625202c31343166,0x326625202c303431\n"
".quad 0x2e6275730a3b3732,0x3431662520323366,0x3134316625202c32,0x3b3832326625202c\n"
".quad 0x3233662e6275730a,0x202c333431662520,0x25202c3234316625,0x756d0a3b38343266\n"
".quad 0x6625203233662e6c,0x316625202c343431,0x34316625202c3334,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x316625202c353431,0x33316625202c3833,0x3434316625202c38\n"
".quad 0x33662e766f6d0a3b,0x2c36343166252032,0x3030434633663020,0x6f6c2e0a3b303030\n"
".quad 0x3633313220322063,0x662e67656e0a3120,0x3734316625203233,0x3b3534316625202c\n"
".quad 0x2e6e722e616d660a,0x3431662520323366,0x3734316625202c38,0x2c3634316625202c\n"
".quad 0x0a3b333331662520,0x662e6e722e616d66,0x3934316625203233,0x2c3834316625202c\n"
".quad 0x3833454542663020,0x326625202c393345,0x33662e67656e0a3b,0x2c30353166252032\n"
".quad 0x0a3b393431662520,0x6d617261702e646c,0x326625203233662e,0x315a5f5b202c3031\n"
".quad 0x685f645f74726d37,0x726f665f41426279,0x6d665f5366506563,0x61705f695f535f53\n"
".quad 0x0a3b5d325f6d6172,0x32203220636f6c2e,0x6d660a3120363331,0x3233662e6e722e61\n"
".quad 0x202c313531662520,0x25202c3035316625,0x6625202c30313266,0x662e766f6d0a3b32\n"
".quad 0x3235316625203233,0x303430346630202c,0x6c2e0a3b30303030,0x333132203220636f\n"
".quad 0x2e616d660a312036,0x25203233662e6e72,0x6625202c33353166,0x346630202c383331\n"
".quad 0x2c30303030303430,0x0a3b333331662520,0x203233662e6c756d,0x25202c3435316625\n"
".quad 0x6630202c38333166,0x3030303030393034,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x35316625202c3535,0x3833316625202c34,0x3b3335316625202c,0x2e6e722e616d660a\n"
".quad 0x3531662520323366,0x3734316625202c36,0x2c3634316625202c,0x0a3b353531662520\n"
".quad 0x203233662e766f6d,0x30202c3735316625,0x3345383345443366,0x20636f6c2e0a3b39\n"
".quad 0x3120363331322032,0x3233662e67656e0a,0x202c383531662520,0x660a3b3635316625\n"
".quad 0x33662e6e722e616d,0x2c39353166252032,0x202c383531662520,0x25202c3735316625\n"
".quad 0x656e0a3b32313266,0x6625203233662e67,0x316625202c303631,0x2e616d660a3b3935\n"
".quad 0x25203233662e6e72,0x6625202c31363166,0x326625202c303631,0x31326625202c3031\n"
".quad 0x722e616d660a3b32,0x6625203233662e6e,0x316625202c323631,0x30346630202c3334\n"
".quad 0x202c303030303034,0x6d0a3b3333316625,0x25203233662e6c75,0x6625202c33363166\n"
".quad 0x346630202c333431,0x3b30303030303930,0x2e6e722e616d660a,0x3631662520323366\n"
".quad 0x3336316625202c34,0x2c3334316625202c,0x0a3b323631662520,0x662e6e722e616d66\n"
".quad 0x3536316625203233,0x2c3734316625202c,0x202c363431662520,0x6e0a3b3436316625\n"
".quad 0x25203233662e6765,0x6625202c36363166,0x616d660a3b353631,0x203233662e6e722e\n"
".quad 0x25202c3736316625,0x6625202c36363166,0x326625202c373531,0x2e67656e0a3b3537\n"
".quad 0x3631662520323366,0x3736316625202c38,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x36316625202c3936,0x3031326625202c38,0x3b3537326625202c,0x3233662e67656e0a\n"
".quad 0x202c303731662520,0x660a3b3833316625,0x33662e6e722e616d,0x2c31373166252032\n"
".quad 0x202c303731662520,0x25202c3235316625,0x6d660a3b33333166,0x3233662e6e722e61\n"
".quad 0x202c323731662520,0x25202c3435316625,0x6625202c38333166,0x616d660a3b313731\n"
".quad 0x203233662e6e722e,0x25202c3337316625,0x6625202c37343166,0x316625202c363431\n"
".quad 0x2e67656e0a3b3237,0x3731662520323366,0x3337316625202c34,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x37316625202c3537,0x3735316625202c34,0x3b3131326625202c\n"
".quad 0x3233662e67656e0a,0x202c363731662520,0x660a3b3537316625,0x33662e6e722e616d\n"
".quad 0x2c37373166252032,0x202c363731662520,0x25202c3031326625,0x656e0a3b31313266\n"
".quad 0x6625203233662e67,0x316625202c383731,0x2e616d660a3b3334,0x25203233662e6e72\n"
".quad 0x6625202c39373166,0x316625202c383731,0x33316625202c3235,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x316625202c303831,0x34316625202c3336,0x3937316625202c33\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x34316625202c3138,0x3634316625202c37\n"
".quad 0x3b3038316625202c,0x3233662e67656e0a,0x202c323831662520,0x660a3b3138316625\n"
".quad 0x33662e6e722e616d,0x2c33383166252032,0x202c323831662520,0x25202c3735316625\n"
".quad 0x656e0a3b36373266,0x6625203233662e67,0x316625202c343831,0x2e616d660a3b3338\n"
".quad 0x25203233662e6e72,0x6625202c35383166,0x326625202c343831,0x37326625202c3031\n"
".quad 0x662e6464610a3b36,0x3638316625203233,0x2c3833316625202c,0x0a3b333431662520\n"
".quad 0x662e6e722e616d66,0x3738316625203233,0x2c3638316625202c,0x3030343034663020\n"
".quad 0x316625202c303030,0x2e6c756d0a3b3333,0x3831662520323366,0x3638316625202c38\n"
".quad 0x303930346630202c,0x6d660a3b30303030,0x3233662e6e722e61,0x202c393831662520\n"
".quad 0x25202c3838316625,0x6625202c36383166,0x616d660a3b373831,0x203233662e6e722e\n"
".quad 0x25202c3039316625,0x6625202c37343166,0x316625202c363431,0x2e7476630a3b3938\n"
".quad 0x203233662e343666,0x6625202c31646625,0x766f6d0a3b303931,0x646625203436662e\n"
".quad 0x3946336430202c32,0x3743313743313743,0x2e0a3b4331443842,0x3132203220636f6c\n"
".quad 0x7476630a31203633,0x3233662e3436662e,0x25202c3364662520,0x656e0a3b37343266\n"
".quad 0x6625203436662e67,0x31646625202c3464,0x6e722e616d660a3b,0x646625203436662e\n"
".quad 0x2c34646625202c35,0x25202c3264662520,0x7476630a3b336466,0x3233662e3436662e\n"
".quad 0x25202c3664662520,0x656e0a3b30313266,0x6625203436662e67,0x36646625202c3764\n"
".quad 0x6e722e616d660a3b,0x646625203436662e,0x2c37646625202c38,0x25202c3564662520\n"
".quad 0x7476630a3b336466,0x2e3233662e6e722e,0x3931662520343666,0x3b38646625202c31\n"
".quad 0x3233662e6275730a,0x202c323931662520,0x25202c3334316625,0x6c2e0a3b38333166\n"
".quad 0x333132203220636f,0x2e616d660a312036,0x25203233662e6e72,0x6625202c33393166\n"
".quad 0x346630202c323931,0x2c30303030303430,0x0a3b333331662520,0x203233662e6c756d\n"
".quad 0x25202c3439316625,0x6630202c32393166,0x3030303030393034,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x39316625202c3539,0x3239316625202c34,0x3b3339316625202c\n"
".quad 0x2e6e722e616d660a,0x3931662520323366,0x3734316625202c36,0x2c3634316625202c\n"
".quad 0x0a3b353931662520,0x2e3436662e747663,0x3964662520323366,0x3b3639316625202c\n"
".quad 0x3436662e7476630a,0x646625203233662e,0x32326625202c3031,0x662e67656e0a3b37\n"
".quad 0x3131646625203436,0x0a3b39646625202c,0x662e6e722e616d66,0x3231646625203436\n"
".quad 0x2c3131646625202c,0x25202c3264662520,0x6d660a3b30316466,0x3436662e6e722e61\n"
".quad 0x202c333164662520,0x6625202c37646625,0x646625202c323164,0x2e7476630a3b3031\n"
".quad 0x662e3233662e6e72,0x3739316625203436,0x3b3331646625202c,0x3233662e6275730a\n"
".quad 0x202c383931662520,0x25202c3037316625,0x6d660a3b33343166,0x3233662e6e722e61\n"
".quad 0x202c393931662520,0x30202c3839316625,0x3030303034303466,0x3333316625202c30\n"
".quad 0x33662e6c756d0a3b,0x2c30303266252032,0x202c383931662520,0x3030303930346630\n"
".quad 0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c31303266,0x316625202c303032\n"
".quad 0x39316625202c3839,0x722e616d660a3b39,0x6625203233662e6e,0x316625202c323032\n"
".quad 0x34316625202c3734,0x3130326625202c36,0x36662e7476630a3b,0x6625203233662e34\n"
".quad 0x326625202c343164,0x2e7476630a3b3230,0x203233662e343666,0x25202c3531646625\n"
".quad 0x656e0a3b38323266,0x6625203436662e67,0x646625202c363164,0x2e616d660a3b3431\n"
".quad 0x25203436662e6e72,0x6625202c37316466,0x646625202c363164,0x3531646625202c32\n"
".quad 0x6e722e616d660a3b,0x646625203436662e,0x37646625202c3831,0x2c3731646625202c\n"
".quad 0x0a3b353164662520,0x662e6e722e747663,0x25203436662e3233,0x6625202c33303266\n"
".quad 0x6275730a3b383164,0x326625203233662e,0x33316625202c3430,0x3334316625202c38\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x30326625202c3530,0x3430346630202c34\n"
".quad 0x25202c3030303030,0x756d0a3b33333166,0x6625203233662e6c,0x326625202c363032\n"
".quad 0x30346630202c3430,0x0a3b303030303039,0x662e6e722e616d66,0x3730326625203233\n"
".quad 0x2c3630326625202c,0x202c343032662520,0x660a3b3530326625,0x33662e6e722e616d\n"
".quad 0x2c38303266252032,0x202c373431662520,0x25202c3634316625,0x76630a3b37303266\n"
".quad 0x33662e3436662e74,0x2c39316466252032,0x0a3b383032662520,0x2e3436662e747663\n"
".quad 0x3264662520323366,0x3834326625202c30,0x36662e67656e0a3b,0x2c31326466252034\n"
".quad 0x0a3b393164662520,0x662e6e722e616d66,0x3232646625203436,0x2c3132646625202c\n"
".quad 0x25202c3264662520,0x6d660a3b30326466,0x3436662e6e722e61,0x202c333264662520\n"
".quad 0x6625202c37646625,0x646625202c323264,0x2e7476630a3b3032,0x662e3233662e6e72\n"
".quad 0x3930326625203436,0x3b3332646625202c,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5f5b202c3435316c,0x645f74726d37315a,0x665f41426279685f,0x5f5366506563726f\n"
".quad 0x5f695f535f536d66,0x5d335f6d61726170,0x3220636f6c2e0a3b,0x0a31203935303220\n"
".quad 0x732e6f6c2e64616d,0x37396c7225203436,0x202c386c7225202c,0x202c3435316c7225\n"
".quad 0x646c0a3b346c7225,0x752e6d617261702e,0x35316c7225203436,0x37315a5f5b202c31\n"
".quad 0x79685f645f74726d,0x63726f665f414262,0x536d665f53665065,0x7261705f695f535f\n"
".quad 0x630a3b5d315f6d61,0x672e6f742e617476,0x36752e6c61626f6c,0x2c38396c72252034\n"
".quad 0x3b3135316c722520,0x3436622e6c68730a,0x202c39396c722520,0x33202c37396c7225\n"
".quad 0x732e7268730a3b32,0x30316c7225203436,0x39396c7225202c30,0x6c2e0a3b3233202c\n"
".quad 0x333132203220636f,0x2e6c68730a312038,0x316c722520343662,0x316c7225202c3130\n"
".quad 0x610a3b32202c3030,0x25203436732e6464,0x25202c3230316c72,0x7225202c38396c72\n"
".quad 0x74730a3b3130316c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d323031\n"
".quad 0x6464610a3b313531,0x6c7225203436732e,0x6c7225202c333031,0x0a3b383637202c38\n"
".quad 0x32203220636f6c2e,0x616d0a3120393331,0x3436732e6f6c2e64,0x2c3430316c722520\n"
".quad 0x2c3330316c722520,0x2c3435316c722520,0x730a3b346c722520,0x25203436622e6c68\n"
".quad 0x25202c3530316c72,0x33202c3430316c72,0x732e7268730a3b32,0x30316c7225203436\n"
".quad 0x30316c7225202c36,0x2e0a3b3233202c35,0x3132203220636f6c,0x6c68730a31203933\n"
".quad 0x6c7225203436622e,0x6c7225202c373031,0x0a3b32202c363031,0x203436732e646461\n"
".quad 0x202c3830316c7225,0x25202c38396c7225,0x730a3b3730316c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3830316c,0x64610a3b31363166,0x7225203436732e64\n"
".quad 0x7225202c3930316c,0x36333531202c386c,0x3220636f6c2e0a3b,0x0a31203034313220\n"
".quad 0x732e6f6c2e64616d,0x31316c7225203436,0x30316c7225202c30,0x35316c7225202c39\n"
".quad 0x3b346c7225202c34,0x3436622e6c68730a,0x2c3131316c722520,0x2c3031316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c323131,0x3b3233202c313131\n"
".quad 0x203220636f6c2e0a,0x730a312030343132,0x25203436622e6c68,0x25202c3331316c72\n"
".quad 0x32202c3231316c72,0x36732e6464610a3b,0x3431316c72252034,0x2c38396c7225202c\n"
".quad 0x3b3331316c722520,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3431316c7225\n"
".quad 0x0a3b393631662520,0x203436732e646461,0x202c3531316c7225,0x3332202c386c7225\n"
".quad 0x636f6c2e0a3b3430,0x2031343132203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c363131,0x6c7225202c353131,0x6c7225202c343531,0x622e6c68730a3b34\n"
".quad 0x31316c7225203436,0x31316c7225202c37,0x730a3b3233202c36,0x25203436732e7268\n"
".quad 0x25202c3831316c72,0x33202c3731316c72,0x20636f6c2e0a3b32,0x3120313431322032\n"
".quad 0x3436622e6c68730a,0x2c3931316c722520,0x2c3831316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x396c7225202c3032,0x31316c7225202c38,0x6c672e74730a3b39\n"
".quad 0x3233662e6c61626f,0x3032316c72255b20,0x3737316625202c5d,0x36732e6464610a3b\n"
".quad 0x3132316c72252034,0x202c386c7225202c,0x6c2e0a3b32373033,0x343132203220636f\n"
".quad 0x2e64616d0a312032,0x25203436732e6f6c,0x25202c3232316c72,0x25202c3132316c72\n"
".quad 0x25202c3435316c72,0x6c68730a3b346c72,0x6c7225203436622e,0x6c7225202c333231\n"
".quad 0x3b3233202c323231,0x3436732e7268730a,0x2c3432316c722520,0x2c3332316c722520\n"
".quad 0x6f6c2e0a3b323320,0x3234313220322063,0x622e6c68730a3120,0x32316c7225203436\n"
".quad 0x32316c7225202c35,0x64610a3b32202c34,0x7225203436732e64,0x7225202c3632316c\n"
".quad 0x6c7225202c38396c,0x2e74730a3b353231,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x316625202c5d3632,0x2e6464610a3b3538,0x316c722520343673,0x386c7225202c3732\n"
".quad 0x0a3b30343833202c,0x32203220636f6c2e,0x616d0a3120333431,0x3436732e6f6c2e64\n"
".quad 0x2c3832316c722520,0x2c3732316c722520,0x2c3435316c722520,0x730a3b346c722520\n"
".quad 0x25203436622e6c68,0x25202c3932316c72,0x33202c3832316c72,0x732e7268730a3b32\n"
".quad 0x33316c7225203436,0x32316c7225202c30,0x2e0a3b3233202c39,0x3132203220636f6c\n"
".quad 0x6c68730a31203334,0x6c7225203436622e,0x6c7225202c313331,0x0a3b32202c303331\n"
".quad 0x203436732e646461,0x202c3233316c7225,0x25202c38396c7225,0x730a3b3133316c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3233316c,0x64610a3b31393166\n"
".quad 0x7225203436732e64,0x7225202c3333316c,0x38303634202c386c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203434313220,0x732e6f6c2e64616d,0x33316c7225203436,0x33316c7225202c34\n"
".quad 0x35316c7225202c33,0x3b346c7225202c34,0x3436622e6c68730a,0x2c3533316c722520\n"
".quad 0x2c3433316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c363331\n"
".quad 0x3b3233202c353331,0x203220636f6c2e0a,0x730a312034343132,0x25203436622e6c68\n"
".quad 0x25202c3733316c72,0x32202c3633316c72,0x36732e6464610a3b,0x3833316c72252034\n"
".quad 0x2c38396c7225202c,0x3b3733316c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3833316c7225,0x0a3b373931662520,0x203436732e646461,0x202c3933316c7225\n"
".quad 0x3335202c386c7225,0x636f6c2e0a3b3637,0x2035343132203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c303431,0x6c7225202c393331,0x6c7225202c343531\n"
".quad 0x622e6c68730a3b34,0x34316c7225203436,0x34316c7225202c31,0x730a3b3233202c30\n"
".quad 0x25203436732e7268,0x25202c3234316c72,0x33202c3134316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120353431322032,0x3436622e6c68730a,0x2c3334316c722520,0x2c3234316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x396c7225202c3434,0x34316c7225202c38\n"
".quad 0x6c672e74730a3b33,0x3233662e6c61626f,0x3434316c72255b20,0x3330326625202c5d\n"
".quad 0x36732e6464610a3b,0x3534316c72252034,0x202c386c7225202c,0x6c2e0a3b34343136\n"
".quad 0x343132203220636f,0x2e64616d0a312036,0x25203436732e6f6c,0x25202c3634316c72\n"
".quad 0x25202c3534316c72,0x25202c3435316c72,0x6c68730a3b346c72,0x6c7225203436622e\n"
".quad 0x6c7225202c373431,0x3b3233202c363431,0x3436732e7268730a,0x2c3834316c722520\n"
".quad 0x2c3734316c722520,0x6f6c2e0a3b323320,0x3634313220322063,0x622e6c68730a3120\n"
".quad 0x34316c7225203436,0x34316c7225202c39,0x64610a3b32202c38,0x7225203436732e64\n"
".quad 0x7225202c3035316c,0x6c7225202c38396c,0x2e74730a3b393431,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x326625202c5d3035,0x3342420a0a3b3930,0x6c2e0a3a38335f34\n"
".quad 0x353132203220636f,0x2e7261620a312030,0x0a3b3020636e7973,0x39335f343342420a\n"
".quad 0x3220636f6c2e0a3a,0x0a32203037313220,0x0a0a7d0a3b746572,0x5f207972746e652e\n"
".quad 0x645f74726d31315a,0x665042416279685f,0x702e0a286d665f53,0x36752e206d617261\n"
".quad 0x726d31315a5f2034,0x416279685f645f74,0x5f6d665f53665042,0x2c305f6d61726170\n"
".quad 0x206d617261702e0a,0x315a5f203436752e,0x685f645f74726d31,0x5f53665042416279\n"
".quad 0x6d617261705f6d66,0x7261702e0a2c315f,0x203233662e206d61,0x5f74726d31315a5f\n"
".quad 0x5042416279685f64,0x61705f6d665f5366,0x2e0a2c325f6d6172,0x752e206d61726170\n"
".quad 0x6d31315a5f203436,0x6279685f645f7472,0x6d665f5366504241,0x335f6d617261705f\n"
".quad 0x65722e0a7b0a290a,0x25203233662e2067,0x0a3b3e3834323c66,0x36662e206765722e\n"
".quad 0x34323c6466252034,0x206765722e0a3b3e,0x702520646572702e,0x722e0a3b3e33323c\n"
".quad 0x203233732e206765,0x0a3b3e35393c7225,0x36732e206765722e,0x34313c6c72252034\n"
".quad 0x646c0a0a0a3b3e33,0x752e6d617261702e,0x2c386c7225203436,0x726d31315a5f5b20\n"
".quad 0x416279685f645f74,0x5f6d665f53665042,0x5d305f6d61726170,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5a5f5b202c326c72,0x5f645f74726d3131,0x5366504241627968\n"
".quad 0x617261705f6d665f,0x76630a3b5d335f6d,0x6c672e6f742e6174,0x3436752e6c61626f\n"
".quad 0x25202c336c722520,0x6f6c2e0a3b386c72,0x3537313220322063,0x752e766f6d0a3120\n"
".quad 0x202c347225203233,0x3b782e6469746e25,0x3233752e766f6d0a,0x6325202c35722520\n"
".quad 0x0a3b782e64696174,0x203233752e766f6d,0x697425202c367225,0x64616d0a3b782e64\n"
".quad 0x203233732e6f6c2e,0x347225202c317225,0x25202c357225202c,0x636f6c2e0a3b3672\n"
".quad 0x2036373132203220,0x33752e766f6d0a31,0x25202c3772252032,0x0a3b792e6469746e\n"
".quad 0x203233752e766f6d,0x746325202c387225,0x6d0a3b792e646961,0x25203233752e766f\n"
".quad 0x64697425202c3972,0x2e64616d0a3b792e,0x25203233732e6f6c,0x2c377225202c3272\n"
".quad 0x7225202c38722520,0x752e7476630a3b39,0x25203233752e3436,0x317225202c346c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203737313220,0x2e3436732e747663,0x396c722520323373\n"
".quad 0x6d0a3b327225202c,0x36732e6f6c2e6461,0x202c356c72252034,0x7225202c396c7225\n"
".quad 0x346c7225202c326c,0x33732e6464610a3b,0x202c303172252032,0x31342d202c317225\n"
".quad 0x2e707465730a3b37,0x25203233752e746c,0x30317225202c3170,0x730a3b303931202c\n"
".quad 0x732e74672e707465,0x202c327025203233,0x303233202c327225,0x72702e646e610a3b\n"
".quad 0x202c337025206465,0x327025202c317025,0x6c2e707465730a3b,0x7025203233732e74\n"
".quad 0x202c327225202c34,0x646e610a3b373434,0x702520646572702e,0x202c337025202c35\n"
".quad 0x6f6c2e0a3b347025,0x3038313220322063,0x2e707465730a3120,0x25203233732e7467\n"
".quad 0x2c317225202c3670,0x6f0a3b3332303120,0x2520646572702e72,0x2c357025202c3770\n"
".quad 0x6c2e0a3b36702520,0x383132203220636f,0x377025400a312030,0x3342422061726220\n"
".quad 0x730a0a3b34335f35,0x25203436622e6c68,0x7225202c30316c72,0x0a3b3233202c356c\n"
".quad 0x203436732e726873,0x25202c31316c7225,0x3233202c30316c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203438313220,0x203436622e6c6873,0x25202c32316c7225,0x3b32202c31316c72\n"
".quad 0x3436732e6464610a,0x202c33316c722520,0x7225202c336c7225,0x2e646c0a3b32316c\n"
".quad 0x662e6c61626f6c67,0x202c326625203233,0x3b5d33316c72255b,0x3233732e6464610a\n"
".quad 0x25202c3231722520,0x0a3b312d202c3272,0x32203220636f6c2e,0x76630a3120353831\n"
".quad 0x33752e3436752e74,0x2c34316c72252032,0x610a3b3231722520,0x25203436732e6464\n"
".quad 0x7225202c35316c72,0x333531202c34316c,0x61702e646c0a3b36,0x203436752e6d6172\n"
".quad 0x202c3234316c7225,0x74726d31315a5f5b,0x42416279685f645f,0x705f6d665f536650\n"
".quad 0x3b5d335f6d617261,0x203220636f6c2e0a,0x6d0a312035383132,0x36732e6f6c2e6461\n"
".quad 0x2c36316c72252034,0x202c35316c722520,0x202c3234316c7225,0x68730a3b346c7225\n"
".quad 0x7225203436622e6c,0x6c7225202c37316c,0x0a3b3233202c3631,0x203436732e726873\n"
".quad 0x25202c38316c7225,0x3233202c37316c72,0x3220636f6c2e0a3b,0x0a31203538313220\n"
".quad 0x203436622e6c6873,0x25202c39316c7225,0x3b32202c38316c72,0x3436732e6464610a\n"
".quad 0x202c30326c722520,0x7225202c336c7225,0x2e646c0a3b39316c,0x662e6c61626f6c67\n"
".quad 0x202c336625203233,0x3b5d30326c72255b,0x203220636f6c2e0a,0x610a312036383132\n"
".quad 0x25203233732e6464,0x327225202c343172,0x7476630a3b31202c,0x3233752e3436752e\n"
".quad 0x202c31326c722520,0x64610a3b34317225,0x7225203436732e64,0x6c7225202c32326c\n"
".quad 0x32373033202c3132,0x3220636f6c2e0a3b,0x0a31203638313220,0x732e6f6c2e64616d\n"
".quad 0x33326c7225203436,0x2c32326c7225202c,0x2c3234316c722520,0x730a3b346c722520\n"
".quad 0x25203436622e6c68,0x7225202c34326c72,0x3b3233202c33326c,0x3436732e7268730a\n"
".quad 0x202c35326c722520,0x33202c34326c7225,0x20636f6c2e0a3b32,0x3120363831322032\n"
".quad 0x3436622e6c68730a,0x202c36326c722520,0x32202c35326c7225,0x36732e6464610a3b\n"
".quad 0x2c37326c72252034,0x25202c336c722520,0x646c0a3b36326c72,0x2e6c61626f6c672e\n"
".quad 0x2c34662520323366,0x5d37326c72255b20,0x33732e6464610a3b,0x202c363172252032\n"
".quad 0x3b312d202c317225,0x203220636f6c2e0a,0x630a312037383132,0x33662e6e722e7476\n"
".quad 0x6625203233732e32,0x36317225202c3137,0x33662e6464610a3b,0x202c393666252032\n"
".quad 0x6630202c31376625,0x3030303030304633,0x6e722e7476630a3b,0x3233732e3233662e\n"
".quad 0x7225202c35662520,0x662e6464610a3b32,0x2c36346625203233,0x6630202c35662520\n"
".quad 0x3030303030304633,0x33752e766f6d0a3b,0x202c343972252032,0x786574090a0a3b30\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x6625202c35336625,0x37336625202c3633\n"
".quad 0x2c7d38336625202c,0x6665527865745b20,0x257b202c4131665f,0x346625202c393666\n"
".quad 0x2e090a0a3b5d7d36,0x3132203220636f6c,0x6464610a31203838,0x317225203233732e\n"
".quad 0x202c317225202c38,0x722e7476630a3b31,0x33732e3233662e6e,0x202c323766252032\n"
".quad 0x64610a3b38317225,0x6625203233662e64,0x32376625202c3336,0x303046336630202c\n"
".quad 0x090a0a3b30303030,0x762e64322e786574,0x33662e3233662e34,0x2c313466257b2032\n"
".quad 0x25202c3234662520,0x346625202c333466,0x7865745b202c7d34,0x2c4133665f666552\n"
".quad 0x202c333666257b20,0x0a3b5d7d36346625,0x3220636f6c2e090a,0x0a31203938313220\n"
".quad 0x662e6e722e747663,0x25203233732e3233,0x317225202c333766,0x662e6464610a3b32\n"
".quad 0x2c38356625203233,0x30202c3337662520,0x3030303030463366,0x786574090a0a3b30\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x6625202c37346625,0x39346625202c3834\n"
".quad 0x2c7d30356625202c,0x6665527865745b20,0x257b202c4135665f,0x356625202c393666\n"
".quad 0x0a090a0a3b5d7d38,0x2e64322e78657409,0x662e3233662e3476,0x333566257b203233\n"
".quad 0x202c34356625202c,0x6625202c35356625,0x65745b202c7d3635,0x4136665f66655278\n"
".quad 0x2c333666257b202c,0x3b5d7d3835662520,0x20636f6c2e090a0a,0x3120313931322032\n"
".quad 0x2e6e722e7476630a,0x203233732e323366,0x7225202c34376625,0x2e6464610a3b3431\n"
".quad 0x3037662520323366,0x202c34376625202c,0x3030303046336630,0x6574090a0a3b3030\n"
".quad 0x2e34762e64322e78,0x203233662e323366,0x25202c393566257b,0x366625202c303666\n"
".quad 0x7d32366625202c31,0x65527865745b202c,0x7b202c4137665f66,0x6625202c33366625\n"
".quad 0x090a0a3b5d7d3037,0x64322e786574090a,0x2e3233662e34762e,0x3666257b20323366\n"
".quad 0x2c36366625202c35,0x25202c3736662520,0x745b202c7d383666,0x38665f6665527865\n"
".quad 0x393666257b202c41,0x5d7d30376625202c,0x636f6c2e090a0a3b,0x0a31203238203220\n"
".quad 0x662e6e722e747663,0x25203233732e3233,0x317225202c323166,0x6c2e707465730a3b\n"
".quad 0x7025203233662e74,0x2c32316625202c38,0x4343434433663020,0x6f6c2e0a3b444343\n"
".quad 0x3239313220322063,0x662e766f6d0a3120,0x2c31316625203233,0x2e0a3b3536662520\n"
".quad 0x3132203220636f6c,0x766f6d0a31203139,0x316625203233662e,0x3b39356625202c30\n"
".quad 0x203220636f6c2e0a,0x6d0a312030393132,0x25203233662e766f,0x33356625202c3966\n"
".quad 0x3220636f6c2e0a3b,0x0a31203938313220,0x203233662e766f6d,0x346625202c386625\n"
".quad 0x20636f6c2e0a3b37,0x3120383831322032,0x3233662e766f6d0a,0x202c303232662520\n"
".quad 0x6c2e0a3b31346625,0x383132203220636f,0x2e766f6d0a312037,0x3432662520323366\n"
".quad 0x3b35336625202c37,0x203220636f6c2e0a,0x7025400a31203238,0x4242206172622038\n"
".quad 0x0a0a3b30315f3533,0x203233752e766f6d,0x3031202c33327225,0x636f6c2e0a3b3432\n"
".quad 0x0a31203438203220,0x203233732e627573,0x7225202c34327225,0x3b317225202c3332\n"
".quad 0x2e6e722e7476630a,0x203233732e323366,0x7225202c35376625,0x707465730a3b3432\n"
".quad 0x203233662e746c2e,0x376625202c397025,0x3846336630202c35,0x400a3b4443434343\n"
".quad 0x2061726220397025,0x0a3b395f35334242,0x3233752e766f6d0a,0x37202c3932722520\n"
".quad 0x636f6c2e0a3b3836,0x0a31203638203220,0x203233732e627573,0x7225202c30337225\n"
".quad 0x3b327225202c3932,0x2e6e722e7476630a,0x203233732e323366,0x7225202c36376625\n"
".quad 0x707465730a3b3033,0x203233662e746c2e,0x6625202c30317025,0x46336630202c3637\n"
".quad 0x0a3b444343434338,0x7262203031702540,0x385f353342422061,0x20636f6c2e0a0a3b\n"
".quad 0x730a312038382032,0x662e746c2e707465,0x2c31317025203233,0x6630202c35662520\n"
".quad 0x4443434343434433,0x2031317025400a3b,0x3533424220617262,0x6464610a0a3b375f\n"
".quad 0x376625203233662e,0x2c32316625202c37,0x4346463343663020,0x6464610a3b303030\n"
".quad 0x376625203233662e,0x202c356625202c38,0x3043464233436630,0x636f6c2e0a3b3030\n"
".quad 0x0a31203039203220,0x203233662e6c756d,0x6625202c39376625,0x38376625202c3837\n"
".quad 0x6e722e616d660a3b,0x386625203233662e,0x2c37376625202c30,0x25202c3737662520\n"
".quad 0x7465730a3b393766,0x3233662e746c2e70,0x25202c3231702520,0x346630202c303866\n"
".quad 0x3b30303030303832,0x622032317025400a,0x5f35334242206172,0x752e6172620a3b36\n"
".quad 0x5f3533424220696e,0x3342420a0a3b3131,0x766f6d0a3a365f35,0x397225203233752e\n"
".quad 0x620a3b3031202c34,0x4220696e752e6172,0x0a3b31315f353342,0x3a375f353342420a\n"
".quad 0x3233752e766f6d0a,0x31202c3439722520,0x752e6172620a3b32,0x5f3533424220696e\n"
".quad 0x3342420a0a3b3131,0x766f6d0a3a385f35,0x397225203233752e,0x620a3b3131202c34\n"
".quad 0x4220696e752e6172,0x0a3b31315f353342,0x3a395f353342420a,0x3233752e766f6d0a\n"
".quad 0x32202c3439722520,0x6e752e6172620a3b,0x315f353342422069,0x353342420a0a3b31\n"
".quad 0x766f6d0a3a30315f,0x397225203233752e,0x420a0a3b33202c34,0x0a3a31315f353342\n"
".quad 0x203436732e646461,0x25202c30336c7225,0x373335202c396c72,0x61702e646c0a3b36\n"
".quad 0x203436752e6d6172,0x202c3134316c7225,0x74726d31315a5f5b,0x42416279685f645f\n"
".quad 0x705f6d665f536650,0x3b5d335f6d617261,0x203220636f6c2e0a,0x6d0a312030343232\n"
".quad 0x36732e6f6c2e6461,0x2c31336c72252034,0x202c30336c722520,0x202c3134316c7225\n"
".quad 0x646c0a3b346c7225,0x752e6d617261702e,0x33316c7225203436,0x31315a5f5b202c38\n"
".quad 0x79685f645f74726d,0x665f536650424162,0x5f6d617261705f6d,0x617476630a3b5d31\n"
".quad 0x626f6c672e6f742e,0x25203436752e6c61,0x7225202c32336c72,0x68730a3b3833316c\n"
".quad 0x7225203436622e6c,0x6c7225202c33336c,0x0a3b3233202c3133,0x203436732e726873\n"
".quad 0x25202c34336c7225,0x3233202c33336c72,0x3220636f6c2e0a3b,0x0a31203034323220\n"
".quad 0x203436622e6c6873,0x25202c35336c7225,0x3b32202c34336c72,0x3436732e6464610a\n"
".quad 0x25202c366c722520,0x7225202c32336c72,0x6464610a3b35336c,0x6c7225203436732e\n"
".quad 0x396c7225202c3633,0x0a3b34343136202c,0x32203220636f6c2e,0x616d0a3120313432\n"
".quad 0x3436732e6f6c2e64,0x202c37336c722520,0x25202c36336c7225,0x25202c3134316c72\n"
".quad 0x6c68730a3b346c72,0x6c7225203436622e,0x336c7225202c3833,0x730a3b3233202c37\n"
".quad 0x25203436732e7268,0x7225202c39336c72,0x3b3233202c38336c,0x203220636f6c2e0a\n"
".quad 0x730a312031343232,0x25203436622e6c68,0x7225202c30346c72,0x0a3b32202c39336c\n"
".quad 0x203436732e646461,0x7225202c376c7225,0x6c7225202c32336c,0x707465730a3b3034\n"
".quad 0x203233732e71652e,0x7225202c33317025,0x400a3b31202c3439,0x6172622033317025\n"
".quad 0x33315f3533424220,0x2e707465730a0a3b,0x25203233732e656e,0x397225202c343170\n"
".quad 0x400a3b3031202c34,0x6172622034317025,0x34315f3533424220,0x5f353342420a0a3b\n"
".quad 0x2e6464610a3a3331,0x346c722520343673,0x2c396c7225202c32,0x646c0a3b38363720\n"
".quad 0x752e6d617261702e,0x34316c7225203436,0x31315a5f5b202c30,0x79685f645f74726d\n"
".quad 0x665f536650424162,0x5f6d617261705f6d,0x636f6c2e0a3b5d33,0x2034333232203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x346c7225202c3434,0x34316c7225202c32\n"
".quad 0x3b346c7225202c30,0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3733316c\n"
".quad 0x645f74726d31315a,0x665042416279685f,0x7261705f6d665f53,0x630a3b5d315f6d61\n"
".quad 0x672e6f742e617476,0x36752e6c61626f6c,0x2c35346c72252034,0x3b3733316c722520\n"
".quad 0x3436622e6c68730a,0x202c36346c722520,0x33202c34346c7225,0x732e7268730a3b32\n"
".quad 0x37346c7225203436,0x2c36346c7225202c,0x6f6c2e0a3b323320,0x3433323220322063\n"
".quad 0x622e6c68730a3120,0x38346c7225203436,0x2c37346c7225202c,0x2e6464610a3b3220\n"
".quad 0x346c722520343673,0x35346c7225202c39,0x3b38346c7225202c,0x203220636f6c2e0a\n"
".quad 0x730a312036393132,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d39346c\n"
".quad 0x2e6464610a3b3134,0x356c722520343673,0x2c396c7225202c30,0x2e0a3b3633353120\n"
".quad 0x3232203220636f6c,0x64616d0a31203533,0x203436732e6f6c2e,0x25202c31356c7225\n"
".quad 0x7225202c30356c72,0x7225202c3034316c,0x2e6c68730a3b346c,0x356c722520343662\n"
".quad 0x31356c7225202c32,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c33356c\n"
".quad 0x0a3b3233202c3235,0x32203220636f6c2e,0x68730a3120353332,0x7225203436622e6c\n"
".quad 0x6c7225202c34356c,0x610a3b32202c3335,0x25203436732e6464,0x7225202c35356c72\n"
".quad 0x6c7225202c35346c,0x636f6c2e0a3b3435,0x2037393132203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x2c5d35356c72255b,0x64610a3b34662520,0x7225203436732e64\n"
".quad 0x6c7225202c36356c,0x3b34303332202c39,0x203220636f6c2e0a,0x6d0a312036333232\n"
".quad 0x36732e6f6c2e6461,0x2c37356c72252034,0x202c36356c722520,0x202c3034316c7225\n"
".quad 0x68730a3b346c7225,0x7225203436622e6c,0x6c7225202c38356c,0x0a3b3233202c3735\n"
".quad 0x203436732e726873,0x25202c39356c7225,0x3233202c38356c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203633323220,0x203436622e6c6873,0x25202c30366c7225,0x3b32202c39356c72\n"
".quad 0x3436732e6464610a,0x202c31366c722520,0x25202c35346c7225,0x6c2e0a3b30366c72\n"
".quad 0x393132203220636f,0x672e74730a312038,0x33662e6c61626f6c,0x31366c72255b2032\n"
".quad 0x3b35336625202c5d,0x3436732e6464610a,0x202c32366c722520,0x3033202c396c7225\n"
".quad 0x636f6c2e0a3b3237,0x2037333232203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x366c7225202c3336,0x34316c7225202c32,0x3b346c7225202c30,0x3436622e6c68730a\n"
".quad 0x202c34366c722520,0x33202c33366c7225,0x732e7268730a3b32,0x35366c7225203436\n"
".quad 0x2c34366c7225202c,0x6f6c2e0a3b323320,0x3733323220322063,0x622e6c68730a3120\n"
".quad 0x36366c7225203436,0x2c35366c7225202c,0x2e6464610a3b3220,0x366c722520343673\n"
".quad 0x35346c7225202c37,0x3b36366c7225202c,0x203220636f6c2e0a,0x730a312039393132\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d37366c,0x732e6464610a3b33\n"
".quad 0x38366c7225203436,0x202c396c7225202c,0x6c2e0a3b30343833,0x333232203220636f\n"
".quad 0x2e64616d0a312038,0x25203436732e6f6c,0x7225202c39366c72,0x6c7225202c38366c\n"
".quad 0x6c7225202c303431,0x622e6c68730a3b34,0x30376c7225203436,0x2c39366c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x376c7225202c3137,0x2e0a3b3233202c30\n"
".quad 0x3232203220636f6c,0x6c68730a31203833,0x6c7225203436622e,0x376c7225202c3237\n"
".quad 0x64610a3b32202c31,0x7225203436732e64,0x6c7225202c33376c,0x376c7225202c3534\n"
".quad 0x20636f6c2e0a3b32,0x3120303032322032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d33376c7225,0x64610a3b39356625,0x7225203436732e64,0x6c7225202c34376c\n"
".quad 0x3b38303634202c39,0x203220636f6c2e0a,0x6d0a312039333232,0x36732e6f6c2e6461\n"
".quad 0x2c35376c72252034,0x202c34376c722520,0x202c3034316c7225,0x68730a3b346c7225\n"
".quad 0x7225203436622e6c,0x6c7225202c36376c,0x0a3b3233202c3537,0x203436732e726873\n"
".quad 0x25202c37376c7225,0x3233202c36376c72,0x3220636f6c2e0a3b,0x0a31203933323220\n"
".quad 0x203436622e6c6873,0x25202c38376c7225,0x3b32202c37376c72,0x3436732e6464610a\n"
".quad 0x202c39376c722520,0x25202c35346c7225,0x6c2e0a3b38376c72,0x303232203220636f\n"
".quad 0x672e74730a312031,0x33662e6c61626f6c,0x39376c72255b2032,0x3b35366625202c5d\n"
".quad 0x203220636f6c2e0a,0x730a312032303232,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x346625202c5d366c,0x20636f6c2e0a3b37,0x3120333032322032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x25202c5d376c7225,0x6f6c2e0a3b333566,0x3434323220322063\n"
".quad 0x0a3b7465720a3220,0x34315f353342420a,0x3220636f6c2e0a3a,0x730a312036393220\n"
".quad 0x732e71652e707465,0x2c35317025203233,0x32202c3439722520,0x2035317025400a3b\n"
".quad 0x3533424220617262,0x6c2e0a0a3b37325f,0x303033203220636f,0x2e707465730a3120\n"
".quad 0x25203233732e7165,0x397225202c363170,0x25400a3b33202c34,0x2061726220363170\n"
".quad 0x3b31325f35334242,0x3220636f6c2e0a0a,0x730a312034303320,0x732e71652e707465\n"
".quad 0x2c37317025203233,0x31202c3439722520,0x37317025400a3b31,0x3342422061726220\n"
".quad 0x2e0a0a3b30325f35,0x3133203220636f6c,0x707465730a312030,0x203233732e71652e\n"
".quad 0x7225202c38317025,0x0a3b3231202c3439,0x7262203831702540,0x315f353342422061\n"
".quad 0x2e766f6d0a0a3b39,0x3032662520323366,0x3b30316625202c31,0x3233662e766f6d0a\n"
".quad 0x202c303032662520,0x766f6d0a3b396625,0x326625203233662e,0x31316625202c3731\n"
".quad 0x33662e766f6d0a3b,0x2c36313266252032,0x6f6d0a3b38662520,0x6625203233662e76\n"
".quad 0x346625202c323432,0x33662e766f6d0a3b,0x2c31343266252032,0x72620a3b33662520\n"
".quad 0x424220696e752e61,0x0a0a3b33335f3533,0x3a39315f35334242,0x3233662e766f6d0a\n"
".quad 0x202c313032662520,0x6f6d0a3b30316625,0x6625203233662e76,0x316625202c303032\n"
".quad 0x662e766f6d0a3b30,0x3631326625203233,0x0a3b31316625202c,0x203233662e766f6d\n"
".quad 0x25202c3731326625,0x766f6d0a3b313166,0x326625203233662e,0x3b346625202c3134\n"
".quad 0x3233662e766f6d0a,0x202c323432662520,0x6172620a3b346625,0x33424220696e752e\n"
".quad 0x420a0a3b33335f35,0x0a3a30325f353342,0x203233662e766f6d,0x25202c3130326625\n"
".quad 0x2e766f6d0a3b3966,0x3032662520323366,0x0a3b396625202c30,0x203233662e766f6d\n"
".quad 0x25202c3631326625,0x2e766f6d0a3b3866,0x3132662520323366,0x0a3b386625202c37\n"
".quad 0x203233662e766f6d,0x25202c3134326625,0x2e766f6d0a3b3366,0x3432662520323366\n"
".quad 0x0a3b336625202c32,0x20696e752e617262,0x3b33335f35334242,0x325f353342420a0a\n"
".quad 0x20636f6c2e0a3a31,0x0a31203037322032,0x2e71652e70746573,0x3931702520323373\n"
".quad 0x30202c327225202c,0x2039317025400a3b,0x3533424220617262,0x6c2e0a0a3b35325f\n"
".quad 0x343732203220636f,0x2e707465730a3120,0x25203233732e7165,0x327225202c303270\n"
".quad 0x400a3b373637202c,0x6172622030327025,0x34325f3533424220,0x662e766f6d0a0a3b\n"
".quad 0x3330326625203233,0x0a3b30316625202c,0x203233662e766f6d,0x25202c3230326625\n"
".quad 0x2e766f6d0a3b3966,0x3432662520323366,0x0a3b346625202c36,0x203233662e766f6d\n"
".quad 0x25202c3534326625,0x2e6172620a3b3366,0x3533424220696e75,0x42420a0a3b36325f\n"
".quad 0x6d0a3a34325f3533,0x25203233662e766f,0x6625202c32303266,0x662e766f6d0a3b39\n"
".quad 0x3330326625203233,0x6d0a3b396625202c,0x25203233662e766f,0x6625202c35343266\n"
".quad 0x662e766f6d0a3b33,0x3634326625203233,0x620a3b336625202c,0x4220696e752e6172\n"
".quad 0x0a3b36325f353342,0x35325f353342420a,0x33662e766f6d0a3a,0x2c32303266252032\n"
".quad 0x6d0a3b3031662520,0x25203233662e766f,0x6625202c33303266,0x2e766f6d0a3b3031\n"
".quad 0x3432662520323366,0x0a3b346625202c35,0x203233662e766f6d,0x25202c3634326625\n"
".quad 0x3342420a0a3b3466,0x6f6d0a3a36325f35,0x6625203233662e76,0x326625202c323432\n"
".quad 0x2e766f6d0a3b3634,0x3432662520323366,0x3534326625202c31,0x33662e766f6d0a3b\n"
".quad 0x2c31303266252032,0x0a3b333032662520,0x203233662e766f6d,0x25202c3030326625\n"
".quad 0x6f6d0a3b32303266,0x6625203233662e76,0x44336630202c3138,0x0a3b413037443341\n"
".quad 0x32203220636f6c2e,0x616d660a31203138,0x203233662e6e722e,0x25202c3734326625\n"
".quad 0x336630202c313866,0x2c42414141413246,0x2e0a3b3134662520,0x3832203220636f6c\n"
".quad 0x2e6275730a312032,0x3238662520323366,0x2c3134326625202c,0x0a3b323432662520\n"
".quad 0x203233662e766f6d,0x6630202c33386625,0x3030303030304633,0x3220636f6c2e0a3b\n"
".quad 0x6e0a312032383220,0x25203233662e6765,0x386625202c343866,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x34386625202c3538,0x202c33386625202c,0x660a3b3130326625\n"
".quad 0x33662e6e722e616d,0x2c36313266252032,0x30202c3138662520,0x4141414132453366\n"
".quad 0x3b35386625202c42,0x203220636f6c2e0a,0x6d660a3120333832,0x3233662e6e722e61\n"
".quad 0x25202c3638662520,0x336630202c323866,0x2c30303030303046,0x0a3b303032662520\n"
".quad 0x662e6e722e616d66,0x3731326625203233,0x202c31386625202c,0x4141413245336630\n"
".quad 0x36386625202c4241,0x6e752e6172620a3b,0x335f353342422069,0x353342420a0a3b33\n"
".quad 0x6f6c2e0a3a37325f,0x2037343220322063,0x652e707465730a31,0x7025203233732e71\n"
".quad 0x2c327225202c3132,0x327025400a3b3020,0x4242206172622031,0x0a0a3b31335f3533\n"
".quad 0x32203220636f6c2e,0x7465730a31203135,0x3233732e71652e70,0x25202c3232702520\n"
".quad 0x3b373637202c3272,0x622032327025400a,0x5f35334242206172,0x766f6d0a0a3b3033\n"
".quad 0x326625203233662e,0x31316625202c3931,0x33662e766f6d0a3b,0x2c38313266252032\n"
".quad 0x6f6d0a3b38662520,0x6625203233662e76,0x346625202c343432,0x33662e766f6d0a3b\n"
".quad 0x2c33343266252032,0x72620a3b33662520,0x424220696e752e61,0x0a0a3b32335f3533\n"
".quad 0x3a30335f35334242,0x3233662e766f6d0a,0x202c393132662520,0x766f6d0a3b386625\n"
".quad 0x326625203233662e,0x3b386625202c3831,0x3233662e766f6d0a,0x202c343432662520\n"
".quad 0x766f6d0a3b336625,0x326625203233662e,0x3b336625202c3334,0x696e752e6172620a\n"
".quad 0x32335f3533424220,0x5f353342420a0a3b,0x2e766f6d0a3a3133,0x3132662520323366\n"
".quad 0x3b31316625202c39,0x3233662e766f6d0a,0x202c383132662520,0x6f6d0a3b31316625\n"
".quad 0x6625203233662e76,0x346625202c343432,0x33662e766f6d0a3b,0x2c33343266252032\n"
".quad 0x420a0a3b34662520,0x0a3a32335f353342,0x203233662e766f6d,0x25202c3234326625\n"
".quad 0x6f6d0a3b34343266,0x6625203233662e76,0x326625202c313432,0x2e766f6d0a3b3334\n"
".quad 0x3132662520323366,0x3931326625202c37,0x33662e766f6d0a3b,0x2c36313266252032\n"
".quad 0x0a3b383132662520,0x32203220636f6c2e,0x6464610a31203835,0x386625203233662e\n"
".quad 0x202c326625202c37,0x610a3b3134326625,0x25203233662e6464,0x386625202c383866\n"
".quad 0x3234326625202c37,0x33662e6464610a3b,0x202c393866252032,0x6625202c35336625\n"
".quad 0x2e6464610a3b3533,0x3039662520323366,0x202c38386625202c,0x64610a3b39386625\n"
".quad 0x6625203233662e64,0x31326625202c3139,0x3631326625202c36,0x33662e6464610a3b\n"
".quad 0x202c323966252032,0x6625202c30396625,0x2e6464610a3b3139,0x3339662520323366\n"
".quad 0x2c3731326625202c,0x0a3b373132662520,0x203233662e646461,0x6625202c34396625\n"
".quad 0x33396625202c3239,0x33662e6464610a3b,0x202c353966252032,0x6630202c34396625\n"
".quad 0x3030303030384642,0x3220636f6c2e0a3b,0x660a312030363220,0x33662e6e722e616d\n"
".quad 0x2c30323266252032,0x30202c3539662520,0x4141414132464266,0x3b35336625202c42\n"
".quad 0x203220636f6c2e0a,0x75730a3120313632,0x6625203233662e62,0x34326625202c3639\n"
".quad 0x3234326625202c31,0x33662e766f6d0a3b,0x202c373966252032,0x3030303046336630\n"
".quad 0x636f6c2e0a3b3030,0x3120313632203220,0x2e6e722e616d660a,0x3839662520323366\n"
".quad 0x202c36396625202c,0x3030303046336630,0x31326625202c3030,0x662e766f6d0a3b36\n"
".quad 0x2c39396625203233,0x4141324533663020,0x6f6c2e0a3b424141,0x2031363220322063\n"
".quad 0x33662e67656e0a31,0x2c30303166252032,0x660a3b3539662520,0x33662e6e722e616d\n"
".quad 0x2c31303266252032,0x202c303031662520,0x6625202c39396625,0x636f6c2e0a3b3839\n"
".quad 0x3120323632203220,0x3233662e67656e0a,0x202c313031662520,0x6d660a3b36396625\n"
".quad 0x3233662e6e722e61,0x202c323031662520,0x25202c3130316625,0x326625202c373966\n"
".quad 0x2e616d660a3b3731,0x25203233662e6e72,0x6625202c30303266,0x396625202c303031\n"
".quad 0x3230316625202c39,0x5f353342420a0a3b,0x636f6c2e0a3a3333,0x2032333232203220\n"
".quad 0x33662e6464610a31,0x2c33303166252032,0x6625202c32662520,0x6464610a3b373432\n"
".quad 0x316625203233662e,0x30316625202c3430,0x3134326625202c33,0x33662e6464610a3b\n"
".quad 0x2c35303166252032,0x202c343031662520,0x610a3b3032326625,0x25203233662e6464\n"
".quad 0x6625202c36303166,0x326625202c353031,0x2e6464610a3b3234,0x3031662520323366\n"
".quad 0x3630316625202c37,0x3b3631326625202c,0x3233662e6464610a,0x202c383031662520\n"
".quad 0x25202c3730316625,0x64610a3b30303266,0x6625203233662e64,0x316625202c393031\n"
".quad 0x30326625202c3830,0x662e6464610a3b31,0x3031316625203233,0x2c3930316625202c\n"
".quad 0x0a3b373132662520,0x203233662e627573,0x25202c3131316625,0x6625202c37343266\n"
".quad 0x6464610a3b303232,0x316625203233662e,0x31316625202c3231,0x3631326625202c31\n"
".quad 0x33662e6275730a3b,0x2c33313166252032,0x202c323131662520,0x730a3b3030326625\n"
".quad 0x25203233662e6275,0x6625202c34313166,0x326625202c333131,0x2e6464610a3b3130\n"
".quad 0x3131662520323366,0x3431316625202c35,0x3b3731326625202c,0x3233662e6275730a\n"
".quad 0x202c363131662520,0x25202c3134326625,0x64610a3b32343266,0x6625203233662e64\n"
".quad 0x316625202c373131,0x31326625202c3631,0x662e6464610a3b36,0x3831316625203233\n"
".quad 0x2c3731316625202c,0x0a3b303032662520,0x203233662e627573,0x25202c3931316625\n"
".quad 0x6625202c38313166,0x6275730a3b313032,0x316625203233662e,0x31316625202c3032\n"
".quad 0x3731326625202c39,0x33662e6c756d0a3b,0x2c31323166252032,0x202c303231662520\n"
".quad 0x660a3b3032316625,0x33662e6e722e616d,0x2c32323166252032,0x202c353131662520\n"
".quad 0x25202c3531316625,0x6f6d0a3b31323166,0x6625203233662e76,0x336630202c333231\n"
".quad 0x3b30303030304346,0x203220636f6c2e0a,0x6e0a312032333232,0x25203233662e6765\n"
".quad 0x6625202c34323166,0x616d660a3b323231,0x203233662e6e722e,0x25202c3532316625\n"
".quad 0x6625202c34323166,0x316625202c333231,0x2e616d660a3b3031,0x25203233662e6e72\n"
".quad 0x6625202c36323166,0x426630202c353231,0x2c39334538334545,0x656e0a3b32662520\n"
".quad 0x6625203233662e67,0x316625202c373231,0x702e646c0a3b3632,0x3233662e6d617261\n"
".quad 0x202c373831662520,0x74726d31315a5f5b,0x42416279685f645f,0x705f6d665f536650\n"
".quad 0x3b5d325f6d617261,0x203220636f6c2e0a,0x660a312032333232,0x33662e6e722e616d\n"
".quad 0x2c38323166252032,0x202c373231662520,0x25202c3738316625,0x2e766f6d0a3b3266\n"
".quad 0x3231662520323366,0x3430346630202c39,0x2e0a3b3030303030,0x3232203220636f6c\n"
".quad 0x616d660a31203233,0x203233662e6e722e,0x25202c3033316625,0x6630202c35313166\n"
".quad 0x3030303030343034,0x3b3031316625202c,0x3233662e6c756d0a,0x202c313331662520\n"
".quad 0x30202c3531316625,0x3030303039303466,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x316625202c323331,0x31316625202c3133,0x3033316625202c35,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x32316625202c3333,0x3332316625202c34,0x3b3233316625202c\n"
".quad 0x3233662e766f6d0a,0x202c343331662520,0x4538334544336630,0x636f6c2e0a3b3933\n"
".quad 0x2032333232203220,0x33662e67656e0a31,0x2c35333166252032,0x0a3b333331662520\n"
".quad 0x662e6e722e616d66,0x3633316625203233,0x2c3533316625202c,0x202c343331662520\n"
".quad 0x6e0a3b3734326625,0x25203233662e6765,0x6625202c37333166,0x616d660a3b363331\n"
".quad 0x203233662e6e722e,0x25202c3833316625,0x6625202c37333166,0x326625202c373831\n"
".quad 0x2e616d660a3b3734,0x25203233662e6e72,0x6625202c39333166,0x346630202c303231\n"
".quad 0x2c30303030303430,0x0a3b303131662520,0x203233662e6c756d,0x25202c3034316625\n"
".quad 0x6630202c30323166,0x3030303030393034,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x34316625202c3134,0x3032316625202c30,0x3b3933316625202c,0x2e6e722e616d660a\n"
".quad 0x3431662520323366,0x3432316625202c32,0x2c3332316625202c,0x0a3b313431662520\n"
".quad 0x203233662e67656e,0x25202c3334316625,0x6d660a3b32343166,0x3233662e6e722e61\n"
".quad 0x202c343431662520,0x25202c3334316625,0x6625202c34333166,0x67656e0a3b313432\n"
".quad 0x316625203233662e,0x34316625202c3534,0x722e616d660a3b34,0x6625203233662e6e\n"
".quad 0x316625202c363431,0x38316625202c3534,0x3134326625202c37,0x33662e67656e0a3b\n"
".quad 0x2c37343166252032,0x0a3b353131662520,0x662e6e722e616d66,0x3834316625203233\n"
".quad 0x2c3734316625202c,0x202c393231662520,0x660a3b3031316625,0x33662e6e722e616d\n"
".quad 0x2c39343166252032,0x202c313331662520,0x25202c3531316625,0x6d660a3b38343166\n"
".quad 0x3233662e6e722e61,0x202c303531662520,0x25202c3432316625,0x6625202c33323166\n"
".quad 0x67656e0a3b393431,0x316625203233662e,0x35316625202c3135,0x722e616d660a3b30\n"
".quad 0x6625203233662e6e,0x316625202c323531,0x33316625202c3135,0x3032326625202c34\n"
".quad 0x33662e67656e0a3b,0x2c33353166252032,0x0a3b323531662520,0x662e6e722e616d66\n"
".quad 0x3435316625203233,0x2c3335316625202c,0x202c373831662520,0x6e0a3b3032326625\n"
".quad 0x25203233662e6765,0x6625202c35353166,0x616d660a3b303231,0x203233662e6e722e\n"
".quad 0x25202c3635316625,0x6625202c35353166,0x316625202c393231,0x2e616d660a3b3031\n"
".quad 0x25203233662e6e72,0x6625202c37353166,0x316625202c303431,0x35316625202c3032\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x316625202c383531,0x32316625202c3432\n"
".quad 0x3735316625202c33,0x33662e67656e0a3b,0x2c39353166252032,0x0a3b383531662520\n"
".quad 0x662e6e722e616d66,0x3036316625203233,0x2c3935316625202c,0x202c343331662520\n"
".quad 0x6e0a3b3234326625,0x25203233662e6765,0x6625202c31363166,0x616d660a3b303631\n"
".quad 0x203233662e6e722e,0x25202c3236316625,0x6625202c31363166,0x326625202c373831\n"
".quad 0x2e6464610a3b3234,0x3631662520323366,0x3531316625202c33,0x3b3032316625202c\n"
".quad 0x2e6e722e616d660a,0x3631662520323366,0x3336316625202c34,0x303430346630202c\n"
".quad 0x6625202c30303030,0x6c756d0a3b303131,0x316625203233662e,0x36316625202c3536\n"
".quad 0x3930346630202c33,0x660a3b3030303030,0x33662e6e722e616d,0x2c36363166252032\n"
".quad 0x202c353631662520,0x25202c3336316625,0x6d660a3b34363166,0x3233662e6e722e61\n"
".quad 0x202c373631662520,0x25202c3432316625,0x6625202c33323166,0x7476630a3b363631\n"
".quad 0x3233662e3436662e,0x25202c3164662520,0x6f6d0a3b37363166,0x6625203436662e76\n"
".quad 0x46336430202c3264,0x4331374331374339,0x0a3b433144384237,0x32203220636f6c2e\n"
".quad 0x76630a3120323332,0x33662e3436662e74,0x202c336466252032,0x6e0a3b3631326625\n"
".quad 0x25203436662e6765,0x646625202c346466,0x722e616d660a3b31,0x6625203436662e6e\n"
".quad 0x34646625202c3564,0x202c32646625202c,0x76630a3b33646625,0x33662e3436662e74\n"
".quad 0x202c366466252032,0x6e0a3b3738316625,0x25203436662e6765,0x646625202c376466\n"
".quad 0x722e616d660a3b36,0x6625203436662e6e,0x37646625202c3864,0x202c35646625202c\n"
".quad 0x76630a3b33646625,0x3233662e6e722e74,0x316625203436662e,0x38646625202c3836\n"
".quad 0x33662e6275730a3b,0x2c39363166252032,0x202c303231662520,0x2e0a3b3531316625\n"
".quad 0x3232203220636f6c,0x616d660a31203233,0x203233662e6e722e,0x25202c3037316625\n"
".quad 0x6630202c39363166,0x3030303030343034,0x3b3031316625202c,0x3233662e6c756d0a\n"
".quad 0x202c313731662520,0x30202c3936316625,0x3030303039303466,0x722e616d660a3b30\n"
".quad 0x6625203233662e6e,0x316625202c323731,0x36316625202c3137,0x3037316625202c39\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x32316625202c3337,0x3332316625202c34\n"
".quad 0x3b3237316625202c,0x3436662e7476630a,0x646625203233662e,0x3337316625202c39\n"
".quad 0x36662e7476630a3b,0x6625203233662e34,0x326625202c303164,0x2e67656e0a3b3030\n"
".quad 0x3164662520343666,0x3b39646625202c31,0x2e6e722e616d660a,0x3164662520343666\n"
".quad 0x3131646625202c32,0x202c32646625202c,0x660a3b3031646625,0x36662e6e722e616d\n"
".quad 0x2c33316466252034,0x25202c3764662520,0x6625202c32316466,0x7476630a3b303164\n"
".quad 0x2e3233662e6e722e,0x3731662520343666,0x3331646625202c34,0x33662e6275730a3b\n"
".quad 0x2c35373166252032,0x202c373431662520,0x660a3b3032316625,0x33662e6e722e616d\n"
".quad 0x2c36373166252032,0x202c353731662520,0x3030303430346630,0x31316625202c3030\n"
".quad 0x662e6c756d0a3b30,0x3737316625203233,0x2c3537316625202c,0x3030393034663020\n"
".quad 0x616d660a3b303030,0x203233662e6e722e,0x25202c3837316625,0x6625202c37373166\n"
".quad 0x316625202c353731,0x2e616d660a3b3637,0x25203233662e6e72,0x6625202c39373166\n"
".quad 0x316625202c343231,0x37316625202c3332,0x662e7476630a3b38,0x25203233662e3436\n"
".quad 0x6625202c34316466,0x7476630a3b393731,0x3233662e3436662e,0x202c353164662520\n"
".quad 0x6e0a3b3130326625,0x25203436662e6765,0x6625202c36316466,0x616d660a3b343164\n"
".quad 0x203436662e6e722e,0x25202c3731646625,0x6625202c36316466,0x31646625202c3264\n"
".quad 0x722e616d660a3b35,0x6625203436662e6e,0x646625202c383164,0x3731646625202c37\n"
".quad 0x3b3531646625202c,0x2e6e722e7476630a,0x203436662e323366,0x25202c3038316625\n"
".quad 0x75730a3b38316466,0x6625203233662e62,0x316625202c313831,0x32316625202c3531\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x316625202c323831,0x30346630202c3138\n"
".quad 0x202c303030303034,0x6d0a3b3031316625,0x25203233662e6c75,0x6625202c33383166\n"
".quad 0x346630202c313831,0x3b30303030303930,0x2e6e722e616d660a,0x3831662520323366\n"
".quad 0x3338316625202c34,0x2c3138316625202c,0x0a3b323831662520,0x662e6e722e616d66\n"
".quad 0x3538316625203233,0x2c3432316625202c,0x202c333231662520,0x630a3b3438316625\n"
".quad 0x662e3436662e7476,0x3931646625203233,0x3b3538316625202c,0x3436662e7476630a\n"
".quad 0x646625203233662e,0x31326625202c3032,0x662e67656e0a3b37,0x3132646625203436\n"
".quad 0x3b3931646625202c,0x2e6e722e616d660a,0x3264662520343666,0x3132646625202c32\n"
".quad 0x202c32646625202c,0x660a3b3032646625,0x36662e6e722e616d,0x2c33326466252034\n"
".quad 0x25202c3764662520,0x6625202c32326466,0x7476630a3b303264,0x2e3233662e6e722e\n"
".quad 0x3831662520343666,0x3332646625202c36,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3933316c72,0x5f74726d31315a5f,0x5042416279685f64,0x61705f6d665f5366\n"
".quad 0x0a3b5d335f6d6172,0x32203220636f6c2e,0x616d0a3120373731,0x3436732e6f6c2e64\n"
".quad 0x202c32386c722520,0x7225202c396c7225,0x7225202c3933316c,0x702e646c0a3b346c\n"
".quad 0x3436752e6d617261,0x2c3633316c722520,0x726d31315a5f5b20,0x416279685f645f74\n"
".quad 0x5f6d665f53665042,0x5d315f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f\n"
".quad 0x6c7225203436752e,0x316c7225202c3338,0x2e6c68730a3b3633,0x386c722520343662\n"
".quad 0x32386c7225202c34,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c35386c\n"
".quad 0x0a3b3233202c3438,0x32203220636f6c2e,0x68730a3120333332,0x7225203436622e6c\n"
".quad 0x6c7225202c36386c,0x610a3b32202c3538,0x25203436732e6464,0x7225202c37386c72\n"
".quad 0x6c7225202c33386c,0x672e74730a3b3638,0x33662e6c61626f6c,0x37386c72255b2032\n"
".quad 0x3832316625202c5d,0x36732e6464610a3b,0x2c38386c72252034,0x37202c396c722520\n"
".quad 0x636f6c2e0a3b3836,0x2034333232203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x386c7225202c3938,0x33316c7225202c38,0x3b346c7225202c39,0x3436622e6c68730a\n"
".quad 0x202c30396c722520,0x33202c39386c7225,0x732e7268730a3b32,0x31396c7225203436\n"
".quad 0x2c30396c7225202c,0x6f6c2e0a3b323320,0x3433323220322063,0x622e6c68730a3120\n"
".quad 0x32396c7225203436,0x2c31396c7225202c,0x2e6464610a3b3220,0x396c722520343673\n"
".quad 0x33386c7225202c33,0x3b32396c7225202c,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d33396c7225,0x610a3b3833316625,0x25203436732e6464,0x7225202c34396c72\n"
".quad 0x36333531202c396c,0x3220636f6c2e0a3b,0x0a31203533323220,0x732e6f6c2e64616d\n"
".quad 0x35396c7225203436,0x2c34396c7225202c,0x2c3933316c722520,0x730a3b346c722520\n"
".quad 0x25203436622e6c68,0x7225202c36396c72,0x3b3233202c35396c,0x3436732e7268730a\n"
".quad 0x202c37396c722520,0x33202c36396c7225,0x20636f6c2e0a3b32,0x3120353332322032\n"
".quad 0x3436622e6c68730a,0x202c38396c722520,0x32202c37396c7225,0x36732e6464610a3b\n"
".quad 0x2c39396c72252034,0x202c33386c722520,0x730a3b38396c7225,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x6625202c5d39396c,0x6464610a3b363431,0x6c7225203436732e\n"
".quad 0x6c7225202c303031,0x3b34303332202c39,0x203220636f6c2e0a,0x6d0a312036333232\n"
".quad 0x36732e6f6c2e6461,0x3130316c72252034,0x3030316c7225202c,0x3933316c7225202c\n"
".quad 0x0a3b346c7225202c,0x203436622e6c6873,0x202c3230316c7225,0x202c3130316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3330,0x0a3b3233202c3230\n"
".quad 0x32203220636f6c2e,0x68730a3120363332,0x7225203436622e6c,0x7225202c3430316c\n"
".quad 0x3b32202c3330316c,0x3436732e6464610a,0x2c3530316c722520,0x202c33386c722520\n"
".quad 0x0a3b3430316c7225,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3530316c72\n"
".quad 0x610a3b3435316625,0x25203436732e6464,0x25202c3630316c72,0x373033202c396c72\n"
".quad 0x20636f6c2e0a3b32,0x3120373332322032,0x2e6f6c2e64616d0a,0x316c722520343673\n"
".quad 0x316c7225202c3730,0x316c7225202c3630,0x346c7225202c3933,0x36622e6c68730a3b\n"
".quad 0x3830316c72252034,0x3730316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3930316c,0x3233202c3830316c,0x3220636f6c2e0a3b,0x0a31203733323220\n"
".quad 0x203436622e6c6873,0x202c3031316c7225,0x202c3930316c7225,0x732e6464610a3b32\n"
".quad 0x31316c7225203436,0x33386c7225202c31,0x3031316c7225202c,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x5d3131316c72255b,0x3b3236316625202c,0x3436732e6464610a\n"
".quad 0x2c3231316c722520,0x33202c396c722520,0x6f6c2e0a3b303438,0x3833323220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3331316c,0x7225202c3231316c\n"
".quad 0x7225202c3933316c,0x2e6c68730a3b346c,0x316c722520343662,0x316c7225202c3431\n"
".quad 0x0a3b3233202c3331,0x203436732e726873,0x202c3531316c7225,0x202c3431316c7225\n"
".quad 0x636f6c2e0a3b3233,0x2038333232203220,0x36622e6c68730a31,0x3631316c72252034\n"
".quad 0x3531316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c373131\n"
".quad 0x316c7225202c3338,0x672e74730a3b3631,0x33662e6c61626f6c,0x31316c72255b2032\n"
".quad 0x36316625202c5d37,0x732e6464610a3b38,0x31316c7225203436,0x2c396c7225202c38\n"
".quad 0x2e0a3b3830363420,0x3232203220636f6c,0x64616d0a31203933,0x203436732e6f6c2e\n"
".quad 0x202c3931316c7225,0x202c3831316c7225,0x202c3933316c7225,0x68730a3b346c7225\n"
".quad 0x7225203436622e6c,0x7225202c3032316c,0x3233202c3931316c,0x36732e7268730a3b\n"
".quad 0x3132316c72252034,0x3032316c7225202c,0x6c2e0a3b3233202c,0x333232203220636f\n"
".quad 0x2e6c68730a312039,0x316c722520343662,0x316c7225202c3232,0x610a3b32202c3132\n"
".quad 0x25203436732e6464,0x25202c3332316c72,0x7225202c33386c72,0x74730a3b3232316c\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d333231,0x6f6c2e0a3b343731\n"
".quad 0x3034323220322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3532316c\n"
".quad 0x6c7225202c30336c,0x6c7225202c393331,0x622e6c68730a3b34,0x32316c7225203436\n"
".quad 0x32316c7225202c36,0x730a3b3233202c35,0x25203436732e7268,0x25202c3732316c72\n"
".quad 0x33202c3632316c72,0x20636f6c2e0a3b32,0x3120303432322032,0x3436622e6c68730a\n"
".quad 0x2c3832316c722520,0x2c3732316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x386c7225202c3932,0x32316c7225202c33,0x6c672e74730a3b38,0x3233662e6c61626f\n"
".quad 0x3932316c72255b20,0x3038316625202c5d,0x3220636f6c2e0a3b,0x0a31203134323220\n"
".quad 0x732e6f6c2e64616d,0x33316c7225203436,0x36336c7225202c31,0x3933316c7225202c\n"
".quad 0x0a3b346c7225202c,0x203436622e6c6873,0x202c3233316c7225,0x202c3133316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3333,0x0a3b3233202c3233\n"
".quad 0x32203220636f6c2e,0x68730a3120313432,0x7225203436622e6c,0x7225202c3433316c\n"
".quad 0x3b32202c3333316c,0x3436732e6464610a,0x2c3533316c722520,0x202c33386c722520\n"
".quad 0x0a3b3433316c7225,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3533316c72\n"
".quad 0x0a0a3b3638316625,0x3a34335f35334242,0x203220636f6c2e0a,0x720a322034343232\n"
".quad 0x2e0a0a7d0a3b7465,0x5a5f207972746e65,0x5f645f74726d3131,0x5366504142627968\n"
".quad 0x61702e0a286d665f,0x3436752e206d6172,0x74726d31315a5f20,0x41426279685f645f\n"
".quad 0x705f6d665f536650,0x0a2c305f6d617261,0x2e206d617261702e,0x31315a5f20343675\n"
".quad 0x79685f645f74726d,0x665f536650414262,0x5f6d617261705f6d,0x617261702e0a2c31\n"
".quad 0x5f203233662e206d,0x645f74726d31315a,0x665041426279685f,0x7261705f6d665f53\n"
".quad 0x702e0a2c325f6d61,0x36752e206d617261,0x726d31315a5f2034,0x426279685f645f74\n"
".quad 0x5f6d665f53665041,0x0a335f6d61726170,0x6765722e0a7b0a29,0x6625203233662e20\n"
".quad 0x2e0a3b3e3834323c,0x3436662e20676572,0x3e34323c64662520,0x2e206765722e0a3b\n"
".quad 0x3c70252064657270,0x65722e0a3b3e3631,0x25203233732e2067,0x2e0a3b3e34393c72\n"
".quad 0x3436732e20676572,0x3234313c6c722520,0x2e646c0a0a0a3b3e,0x36752e6d61726170\n"
".quad 0x202c356c72252034,0x74726d31315a5f5b,0x41426279685f645f,0x705f6d665f536650\n"
".quad 0x3b5d305f6d617261,0x617261702e646c0a,0x7225203436752e6d,0x315a5f5b202c326c\n"
".quad 0x685f645f74726d31,0x5f53665041426279,0x6d617261705f6d66,0x7476630a3b5d335f\n"
".quad 0x6f6c672e6f742e61,0x203436752e6c6162,0x7225202c366c7225,0x636f6c2e0a3b356c\n"
".quad 0x2038343232203220,0x33752e766f6d0a31,0x25202c3272252032,0x0a3b782e6469746e\n"
".quad 0x203233752e766f6d,0x746325202c337225,0x6d0a3b782e646961,0x25203233752e766f\n"
".quad 0x64697425202c3472,0x2e64616d0a3b782e,0x25203233732e6f6c,0x2c327225202c3572\n"
".quad 0x7225202c33722520,0x20636f6c2e0a3b34,0x3120393432322032,0x3233752e766f6d0a\n"
".quad 0x6e25202c36722520,0x6d0a3b792e646974,0x25203233752e766f,0x61746325202c3772\n"
".quad 0x6f6d0a3b792e6469,0x7225203233752e76,0x2e64697425202c38,0x6c2e64616d0a3b79\n"
".quad 0x7225203233732e6f,0x202c367225202c39,0x387225202c377225,0x36752e7476630a3b\n"
".quad 0x7225203233752e34,0x3b357225202c376c,0x203220636f6c2e0a,0x630a312030353232\n"
".quad 0x752e3436752e7476,0x2c386c7225203233,0x616d0a3b39722520,0x3436732e6f6c2e64\n"
".quad 0x25202c396c722520,0x6c7225202c386c72,0x3b376c7225202c32,0x3436622e6c68730a\n"
".quad 0x202c30316c722520,0x3233202c396c7225,0x36732e7268730a3b,0x2c31316c72252034\n"
".quad 0x202c30316c722520,0x636f6c2e0a3b3233,0x2035353232203220,0x36622e6c68730a31\n"
".quad 0x2c32316c72252034,0x202c31316c722520,0x732e6464610a3b32,0x33316c7225203436\n"
".quad 0x202c366c7225202c,0x6c0a3b32316c7225,0x6c61626f6c672e64,0x326625203233662e\n"
".quad 0x33316c72255b202c,0x732e6464610a3b5d,0x2c31317225203233,0x312d202c39722520\n"
".quad 0x3220636f6c2e0a3b,0x0a31203635323220,0x2e3436752e747663,0x316c722520323375\n"
".quad 0x3b31317225202c34,0x3436732e6464610a,0x202c35316c722520,0x31202c34316c7225\n"
".quad 0x6f6c2e0a3b363335,0x3635323220322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c36316c,0x326c7225202c3531,0x0a3b376c7225202c,0x203436622e6c6873\n"
".quad 0x25202c37316c7225,0x3233202c36316c72,0x36732e7268730a3b,0x2c38316c72252034\n"
".quad 0x202c37316c722520,0x636f6c2e0a3b3233,0x2036353232203220,0x36622e6c68730a31\n"
".quad 0x2c39316c72252034,0x202c38316c722520,0x732e6464610a3b32,0x30326c7225203436\n"
".quad 0x202c366c7225202c,0x6c0a3b39316c7225,0x6c61626f6c672e64,0x336625203233662e\n"
".quad 0x30326c72255b202c,0x20636f6c2e0a3b5d,0x3120373532322032,0x3233732e6464610a\n"
".quad 0x25202c3331722520,0x630a3b31202c3972,0x752e3436752e7476,0x31326c7225203233\n"
".quad 0x0a3b33317225202c,0x203436732e646461,0x25202c32326c7225,0x3033202c31326c72\n"
".quad 0x636f6c2e0a3b3237,0x2037353232203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x326c7225202c3332,0x2c326c7225202c32,0x730a3b376c722520,0x25203436622e6c68\n"
".quad 0x7225202c34326c72,0x3b3233202c33326c,0x3436732e7268730a,0x202c35326c722520\n"
".quad 0x33202c34326c7225,0x20636f6c2e0a3b32,0x3120373532322032,0x3436622e6c68730a\n"
".quad 0x202c36326c722520,0x32202c35326c7225,0x36732e6464610a3b,0x2c37326c72252034\n"
".quad 0x25202c366c722520,0x646c0a3b36326c72,0x2e6c61626f6c672e,0x2c34662520323366\n"
".quad 0x5d37326c72255b20,0x33732e6464610a3b,0x202c353172252032,0x3b312d202c357225\n"
".quad 0x203220636f6c2e0a,0x630a312038353232,0x33662e6e722e7476,0x6625203233732e32\n"
".quad 0x35317225202c3137,0x33662e6464610a3b,0x202c393666252032,0x6630202c31376625\n"
".quad 0x3030303030304633,0x6e722e7476630a3b,0x3233732e3233662e,0x7225202c35662520\n"
".quad 0x662e6464610a3b39,0x2c36346625203233,0x6630202c35662520,0x3030303030304633\n"
".quad 0x33752e766f6d0a3b,0x202c333972252032,0x786574090a0a3b30,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x6625202c35336625,0x37336625202c3633,0x2c7d38336625202c\n"
".quad 0x6665527865745b20,0x257b202c4231665f,0x346625202c393666,0x2e090a0a3b5d7d36\n"
".quad 0x3232203220636f6c,0x6464610a31203935,0x317225203233732e,0x202c357225202c37\n"
".quad 0x722e7476630a3b31,0x33732e3233662e6e,0x202c323766252032,0x64610a3b37317225\n"
".quad 0x6625203233662e64,0x32376625202c3336,0x303046336630202c,0x090a0a3b30303030\n"
".quad 0x762e64322e786574,0x33662e3233662e34,0x2c313466257b2032,0x25202c3234662520\n"
".quad 0x346625202c333466,0x7865745b202c7d34,0x2c4233665f666552,0x202c333666257b20\n"
".quad 0x0a3b5d7d36346625,0x3220636f6c2e090a,0x0a31203036323220,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x317225202c333766,0x662e6464610a3b31,0x2c38356625203233\n"
".quad 0x30202c3337662520,0x3030303030463366,0x786574090a0a3b30,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x6625202c37346625,0x39346625202c3834,0x2c7d30356625202c\n"
".quad 0x6665527865745b20,0x257b202c4235665f,0x356625202c393666,0x0a090a0a3b5d7d38\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x333566257b203233,0x202c34356625202c\n"
".quad 0x6625202c35356625,0x65745b202c7d3635,0x4236665f66655278,0x2c333666257b202c\n"
".quad 0x3b5d7d3835662520,0x20636f6c2e090a0a,0x3120323632322032,0x2e6e722e7476630a\n"
".quad 0x203233732e323366,0x7225202c34376625,0x2e6464610a3b3331,0x3037662520323366\n"
".quad 0x202c34376625202c,0x3030303046336630,0x6574090a0a3b3030,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x25202c393566257b,0x366625202c303666,0x7d32366625202c31\n"
".quad 0x65527865745b202c,0x7b202c4237665f66,0x6625202c33366625,0x090a0a3b5d7d3037\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3666257b20323366,0x2c36366625202c35\n"
".quad 0x25202c3736662520,0x745b202c7d383666,0x38665f6665527865,0x393666257b202c42\n"
".quad 0x5d7d30376625202c,0x636f6c2e090a0a3b,0x0a31203238203220,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x357225202c323166,0x6c2e707465730a3b,0x7025203233662e74\n"
".quad 0x2c32316625202c31,0x4343434433663020,0x6f6c2e0a3b444343,0x3336323220322063\n"
".quad 0x662e766f6d0a3120,0x2c31316625203233,0x2e0a3b3536662520,0x3232203220636f6c\n"
".quad 0x766f6d0a31203236,0x316625203233662e,0x3b39356625202c30,0x203220636f6c2e0a\n"
".quad 0x6d0a312031363232,0x25203233662e766f,0x33356625202c3966,0x3220636f6c2e0a3b\n"
".quad 0x0a31203036323220,0x203233662e766f6d,0x346625202c386625,0x20636f6c2e0a3b37\n"
".quad 0x3120393532322032,0x3233662e766f6d0a,0x202c303232662520,0x6c2e0a3b31346625\n"
".quad 0x353232203220636f,0x2e766f6d0a312038,0x3432662520323366,0x3b35336625202c37\n"
".quad 0x203220636f6c2e0a,0x7025400a31203238,0x4242206172622031,0x6d0a0a3b395f3633\n"
".quad 0x25203233752e766f,0x323031202c323272,0x20636f6c2e0a3b34,0x730a312034382032\n"
".quad 0x25203233732e6275,0x327225202c333272,0x0a3b357225202c32,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x327225202c353766,0x2e707465730a3b33,0x25203233662e746c\n"
".quad 0x35376625202c3270,0x433846336630202c,0x25400a3b44434343,0x4220617262203270\n"
".quad 0x0a0a3b385f363342,0x203233752e766f6d,0x3637202c38327225,0x20636f6c2e0a3b38\n"
".quad 0x730a312036382032,0x25203233732e6275,0x327225202c393272,0x0a3b397225202c38\n"
".quad 0x662e6e722e747663,0x25203233732e3233,0x327225202c363766,0x2e707465730a3b39\n"
".quad 0x25203233662e746c,0x36376625202c3370,0x433846336630202c,0x25400a3b44434343\n"
".quad 0x4220617262203370,0x0a0a3b375f363342,0x38203220636f6c2e,0x707465730a312038\n"
".quad 0x203233662e746c2e,0x356625202c347025,0x434344336630202c,0x25400a3b44434343\n"
".quad 0x4220617262203470,0x0a0a3b365f363342,0x203233662e646461,0x6625202c37376625\n"
".quad 0x33436630202c3231,0x0a3b303030434646,0x203233662e646461,0x6625202c38376625\n"
".quad 0x4233436630202c35,0x2e0a3b3030304346,0x3039203220636f6c,0x662e6c756d0a3120\n"
".quad 0x2c39376625203233,0x25202c3837662520,0x616d660a3b383766,0x203233662e6e722e\n"
".quad 0x6625202c30386625,0x37376625202c3737,0x0a3b39376625202c,0x2e746c2e70746573\n"
".quad 0x2c35702520323366,0x30202c3038662520,0x3030303038323466,0x20357025400a3b30\n"
".quad 0x3633424220617262,0x2e6172620a3b355f,0x3633424220696e75,0x42420a0a3b30315f\n"
".quad 0x6f6d0a3a355f3633,0x7225203233752e76,0x0a3b3031202c3339,0x20696e752e617262\n"
".quad 0x3b30315f36334242,0x365f363342420a0a,0x33752e766f6d0a3a,0x202c333972252032\n"
".quad 0x2e6172620a3b3231,0x3633424220696e75,0x42420a0a3b30315f,0x6f6d0a3a375f3633\n"
".quad 0x7225203233752e76,0x0a3b3131202c3339,0x20696e752e617262,0x3b30315f36334242\n"
".quad 0x385f363342420a0a,0x33752e766f6d0a3a,0x202c333972252032,0x752e6172620a3b32\n"
".quad 0x5f3633424220696e,0x3342420a0a3b3031,0x766f6d0a3a395f36,0x397225203233752e\n"
".quad 0x420a0a3b33202c33,0x0a3a30315f363342,0x32203220636f6c2e,0x76630a3120303532\n"
".quad 0x33732e3436732e74,0x2c38326c72252032,0x64610a3b39722520,0x7225203436732e64\n"
".quad 0x6c7225202c30336c,0x36373335202c3832,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3134316c72,0x5f74726d31315a5f,0x5041426279685f64,0x61705f6d665f5366\n"
".quad 0x0a3b5d335f6d6172,0x32203220636f6c2e,0x616d0a3120313133,0x3436732e6f6c2e64\n"
".quad 0x202c31336c722520,0x25202c30336c7225,0x25202c3134316c72,0x2e646c0a3b376c72\n"
".quad 0x36752e6d61726170,0x3833316c72252034,0x6d31315a5f5b202c,0x6279685f645f7472\n"
".quad 0x6d665f5366504142,0x315f6d617261705f,0x2e617476630a3b5d,0x61626f6c672e6f74\n"
".quad 0x7225203436752e6c,0x6c7225202c32336c,0x6c68730a3b383331,0x6c7225203436622e\n"
".quad 0x336c7225202c3333,0x730a3b3233202c31,0x25203436732e7268,0x7225202c34336c72\n"
".quad 0x3b3233202c33336c,0x203220636f6c2e0a,0x730a312031313332,0x25203436622e6c68\n"
".quad 0x7225202c35336c72,0x0a3b32202c34336c,0x203436732e646461,0x7225202c336c7225\n"
".quad 0x6c7225202c32336c,0x2e6464610a3b3533,0x336c722520343673,0x38326c7225202c36\n"
".quad 0x0a3b34343136202c,0x32203220636f6c2e,0x616d0a3120323133,0x3436732e6f6c2e64\n"
".quad 0x202c37336c722520,0x25202c36336c7225,0x25202c3134316c72,0x6c68730a3b376c72\n"
".quad 0x6c7225203436622e,0x336c7225202c3833,0x730a3b3233202c37,0x25203436732e7268\n"
".quad 0x7225202c39336c72,0x3b3233202c38336c,0x203220636f6c2e0a,0x730a312032313332\n"
".quad 0x25203436622e6c68,0x7225202c30346c72,0x0a3b32202c39336c,0x203436732e646461\n"
".quad 0x7225202c346c7225,0x6c7225202c32336c,0x707465730a3b3034,0x203233732e71652e\n"
".quad 0x397225202c367025,0x25400a3b31202c33,0x4220617262203670,0x0a3b32315f363342\n"
".quad 0x656e2e707465730a,0x377025203233732e,0x202c33397225202c,0x377025400a3b3031\n"
".quad 0x3342422061726220,0x420a0a3b33315f36,0x0a3a32315f363342,0x203436732e646461\n"
".quad 0x25202c32346c7225,0x3637202c38326c72,0x61702e646c0a3b38,0x203436752e6d6172\n"
".quad 0x202c3034316c7225,0x74726d31315a5f5b,0x41426279685f645f,0x705f6d665f536650\n"
".quad 0x3b5d335f6d617261,0x203220636f6c2e0a,0x6d0a312035303332,0x36732e6f6c2e6461\n"
".quad 0x2c34346c72252034,0x202c32346c722520,0x202c3034316c7225,0x646c0a3b376c7225\n"
".quad 0x752e6d617261702e,0x33316c7225203436,0x31315a5f5b202c37,0x79685f645f74726d\n"
".quad 0x665f536650414262,0x5f6d617261705f6d,0x617476630a3b5d31,0x626f6c672e6f742e\n"
".quad 0x25203436752e6c61,0x7225202c35346c72,0x68730a3b3733316c,0x7225203436622e6c\n"
".quad 0x6c7225202c36346c,0x0a3b3233202c3434,0x203436732e726873,0x25202c37346c7225\n"
".quad 0x3233202c36346c72,0x3220636f6c2e0a3b,0x0a31203530333220,0x203436622e6c6873\n"
".quad 0x25202c38346c7225,0x3b32202c37346c72,0x3436732e6464610a,0x202c39346c722520\n"
".quad 0x25202c35346c7225,0x6c2e0a3b38346c72,0x363232203220636f,0x672e74730a312037\n"
".quad 0x33662e6c61626f6c,0x39346c72255b2032,0x3b31346625202c5d,0x3436732e6464610a\n"
".quad 0x202c30356c722520,0x31202c38326c7225,0x6f6c2e0a3b363335,0x3630333220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c31356c,0x316c7225202c3035\n"
".quad 0x376c7225202c3034,0x36622e6c68730a3b,0x2c32356c72252034,0x202c31356c722520\n"
".quad 0x2e7268730a3b3233,0x356c722520343673,0x32356c7225202c33,0x6c2e0a3b3233202c\n"
".quad 0x303332203220636f,0x2e6c68730a312036,0x356c722520343662,0x33356c7225202c34\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x346c7225202c3535,0x34356c7225202c35\n"
".quad 0x3220636f6c2e0a3b,0x0a31203836323220,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x25202c5d35356c72,0x2e6464610a3b3466,0x356c722520343673,0x38326c7225202c36\n"
".quad 0x0a3b34303332202c,0x32203220636f6c2e,0x616d0a3120373033,0x3436732e6f6c2e64\n"
".quad 0x202c37356c722520,0x25202c36356c7225,0x25202c3034316c72,0x6c68730a3b376c72\n"
".quad 0x6c7225203436622e,0x356c7225202c3835,0x730a3b3233202c37,0x25203436732e7268\n"
".quad 0x7225202c39356c72,0x3b3233202c38356c,0x203220636f6c2e0a,0x730a312037303332\n"
".quad 0x25203436622e6c68,0x7225202c30366c72,0x0a3b32202c39356c,0x203436732e646461\n"
".quad 0x25202c31366c7225,0x7225202c35346c72,0x6f6c2e0a3b30366c,0x3936323220322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x5d31366c72255b20,0x0a3b35336625202c\n"
".quad 0x203436732e646461,0x25202c32366c7225,0x3033202c38326c72,0x636f6c2e0a3b3237\n"
".quad 0x2038303332203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x366c7225202c3336\n"
".quad 0x34316c7225202c32,0x3b376c7225202c30,0x3436622e6c68730a,0x202c34366c722520\n"
".quad 0x33202c33366c7225,0x732e7268730a3b32,0x35366c7225203436,0x2c34366c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x3830333220322063,0x622e6c68730a3120,0x36366c7225203436\n"
".quad 0x2c35366c7225202c,0x2e6464610a3b3220,0x366c722520343673,0x35346c7225202c37\n"
".quad 0x3b36366c7225202c,0x203220636f6c2e0a,0x730a312030373232,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x6625202c5d37366c,0x732e6464610a3b33,0x38366c7225203436\n"
".quad 0x2c38326c7225202c,0x2e0a3b3034383320,0x3332203220636f6c,0x64616d0a31203930\n"
".quad 0x203436732e6f6c2e,0x25202c39366c7225,0x7225202c38366c72,0x7225202c3034316c\n"
".quad 0x2e6c68730a3b376c,0x376c722520343662,0x39366c7225202c30,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c31376c,0x0a3b3233202c3037,0x32203220636f6c2e\n"
".quad 0x68730a3120393033,0x7225203436622e6c,0x6c7225202c32376c,0x610a3b32202c3137\n"
".quad 0x25203436732e6464,0x7225202c33376c72,0x6c7225202c35346c,0x636f6c2e0a3b3237\n"
".quad 0x2031373232203220,0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d33376c72255b\n"
".quad 0x610a3b3935662520,0x25203436732e6464,0x7225202c34376c72,0x303634202c38326c\n"
".quad 0x20636f6c2e0a3b38,0x3120303133322032,0x2e6f6c2e64616d0a,0x376c722520343673\n"
".quad 0x34376c7225202c35,0x3034316c7225202c,0x0a3b376c7225202c,0x203436622e6c6873\n"
".quad 0x25202c36376c7225,0x3233202c35376c72,0x36732e7268730a3b,0x2c37376c72252034\n"
".quad 0x202c36376c722520,0x636f6c2e0a3b3233,0x2030313332203220,0x36622e6c68730a31\n"
".quad 0x2c38376c72252034,0x202c37376c722520,0x732e6464610a3b32,0x39376c7225203436\n"
".quad 0x2c35346c7225202c,0x0a3b38376c722520,0x32203220636f6c2e,0x74730a3120323732\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x366625202c5d3937,0x20636f6c2e0a3b35\n"
".quad 0x3120333732322032,0x626f6c672e74730a,0x5b203233662e6c61,0x25202c5d336c7225\n"
".quad 0x6f6c2e0a3b373466,0x3437323220322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x2c5d346c72255b20,0x2e0a3b3335662520,0x3332203220636f6c,0x7465720a32203531\n"
".quad 0x5f363342420a0a3b,0x636f6c2e0a3a3331,0x3120363932203220,0x71652e707465730a\n"
".quad 0x387025203233732e,0x202c33397225202c,0x20387025400a3b32,0x3633424220617262\n"
".quad 0x6c2e0a0a3b36325f,0x303033203220636f,0x2e707465730a3120,0x25203233732e7165\n"
".quad 0x33397225202c3970,0x7025400a3b33202c,0x4242206172622039,0x0a0a3b30325f3633\n"
".quad 0x33203220636f6c2e,0x7465730a31203430,0x3233732e71652e70,0x25202c3031702520\n"
".quad 0x3b3131202c333972,0x622030317025400a,0x5f36334242206172,0x6f6c2e0a0a3b3931\n"
".quad 0x2030313320322063,0x652e707465730a31,0x7025203233732e71,0x33397225202c3131\n"
".quad 0x25400a3b3231202c,0x2061726220313170,0x3b38315f36334242,0x33662e766f6d0a0a\n"
".quad 0x2c31303266252032,0x6d0a3b3031662520,0x25203233662e766f,0x6625202c30303266\n"
".quad 0x662e766f6d0a3b39,0x3731326625203233,0x0a3b31316625202c,0x203233662e766f6d\n"
".quad 0x25202c3631326625,0x2e766f6d0a3b3866,0x3432662520323366,0x0a3b346625202c32\n"
".quad 0x203233662e766f6d,0x25202c3134326625,0x2e6172620a3b3366,0x3633424220696e75\n"
".quad 0x42420a0a3b32335f,0x6d0a3a38315f3633,0x25203233662e766f,0x6625202c31303266\n"
".quad 0x2e766f6d0a3b3031,0x3032662520323366,0x3b30316625202c30,0x3233662e766f6d0a\n"
".quad 0x202c363132662520,0x6f6d0a3b31316625,0x6625203233662e76,0x316625202c373132\n"
".quad 0x662e766f6d0a3b31,0x3134326625203233,0x6d0a3b346625202c,0x25203233662e766f\n"
".quad 0x6625202c32343266,0x752e6172620a3b34,0x5f3633424220696e,0x3342420a0a3b3233\n"
".quad 0x6f6d0a3a39315f36,0x6625203233662e76,0x396625202c313032,0x33662e766f6d0a3b\n"
".quad 0x2c30303266252032,0x6f6d0a3b39662520,0x6625203233662e76,0x386625202c363132\n"
".quad 0x33662e766f6d0a3b,0x2c37313266252032,0x6f6d0a3b38662520,0x6625203233662e76\n"
".quad 0x336625202c313432,0x33662e766f6d0a3b,0x2c32343266252032,0x72620a3b33662520\n"
".quad 0x424220696e752e61,0x0a0a3b32335f3633,0x3a30325f36334242,0x203220636f6c2e0a\n"
".quad 0x65730a3120303732,0x33732e71652e7074,0x202c323170252032,0x0a3b30202c397225\n"
".quad 0x7262203231702540,0x325f363342422061,0x636f6c2e0a0a3b34,0x3120343732203220\n"
".quad 0x71652e707465730a,0x317025203233732e,0x202c397225202c33,0x7025400a3b373637\n"
".quad 0x4220617262203331,0x0a3b33325f363342,0x3233662e766f6d0a,0x202c333032662520\n"
".quad 0x6f6d0a3b30316625,0x6625203233662e76,0x396625202c323032,0x33662e766f6d0a3b\n"
".quad 0x2c36343266252032,0x6f6d0a3b34662520,0x6625203233662e76,0x336625202c353432\n"
".quad 0x6e752e6172620a3b,0x325f363342422069,0x363342420a0a3b35,0x766f6d0a3a33325f\n"
".quad 0x326625203233662e,0x3b396625202c3230,0x3233662e766f6d0a,0x202c333032662520\n"
".quad 0x766f6d0a3b396625,0x326625203233662e,0x3b336625202c3534,0x3233662e766f6d0a\n"
".quad 0x202c363432662520,0x6172620a3b336625,0x33424220696e752e,0x420a0a3b35325f36\n"
".quad 0x0a3a34325f363342,0x203233662e766f6d,0x25202c3230326625,0x766f6d0a3b303166\n"
".quad 0x326625203233662e,0x30316625202c3330,0x33662e766f6d0a3b,0x2c35343266252032\n"
".quad 0x6f6d0a3b34662520,0x6625203233662e76,0x346625202c363432,0x5f363342420a0a3b\n"
".quad 0x2e766f6d0a3a3532,0x3432662520323366,0x3634326625202c32,0x33662e766f6d0a3b\n"
".quad 0x2c31343266252032,0x0a3b353432662520,0x203233662e766f6d,0x25202c3130326625\n"
".quad 0x6f6d0a3b33303266,0x6625203233662e76,0x326625202c303032,0x2e766f6d0a3b3230\n"
".quad 0x3138662520323366,0x334144336630202c,0x6c2e0a3b41303744,0x313832203220636f\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x386625202c373432,0x3246336630202c31\n"
".quad 0x25202c4241414141,0x6f6c2e0a3b313466,0x2032383220322063,0x33662e6275730a31\n"
".quad 0x202c323866252032,0x25202c3134326625,0x6f6d0a3b32343266,0x6625203233662e76\n"
".quad 0x46336630202c3338,0x0a3b303030303030,0x32203220636f6c2e,0x67656e0a31203238\n"
".quad 0x386625203233662e,0x3b32386625202c34,0x2e6e722e616d660a,0x3538662520323366\n"
".quad 0x202c34386625202c,0x6625202c33386625,0x616d660a3b313032,0x203233662e6e722e\n"
".quad 0x25202c3631326625,0x336630202c313866,0x2c42414141413245,0x2e0a3b3538662520\n"
".quad 0x3832203220636f6c,0x2e616d660a312033,0x25203233662e6e72,0x386625202c363866\n"
".quad 0x3046336630202c32,0x25202c3030303030,0x6d660a3b30303266,0x3233662e6e722e61\n"
".quad 0x202c373132662520,0x6630202c31386625,0x4241414141324533,0x0a3b36386625202c\n"
".quad 0x20696e752e617262,0x3b32335f36334242,0x325f363342420a0a,0x20636f6c2e0a3a36\n"
".quad 0x0a31203734322032,0x2e71652e70746573,0x3431702520323373,0x30202c397225202c\n"
".quad 0x2034317025400a3b,0x3633424220617262,0x6c2e0a0a3b30335f,0x313532203220636f\n"
".quad 0x2e707465730a3120,0x25203233732e7165,0x397225202c353170,0x400a3b373637202c\n"
".quad 0x6172622035317025,0x39325f3633424220,0x662e766f6d0a0a3b,0x3931326625203233\n"
".quad 0x0a3b31316625202c,0x203233662e766f6d,0x25202c3831326625,0x2e766f6d0a3b3866\n"
".quad 0x3432662520323366,0x0a3b346625202c34,0x203233662e766f6d,0x25202c3334326625\n"
".quad 0x2e6172620a3b3366,0x3633424220696e75,0x42420a0a3b31335f,0x6d0a3a39325f3633\n"
".quad 0x25203233662e766f,0x6625202c39313266,0x662e766f6d0a3b38,0x3831326625203233\n"
".quad 0x6d0a3b386625202c,0x25203233662e766f,0x6625202c34343266,0x662e766f6d0a3b33\n"
".quad 0x3334326625203233,0x620a3b336625202c,0x4220696e752e6172,0x0a3b31335f363342\n"
".quad 0x30335f363342420a,0x33662e766f6d0a3a,0x2c39313266252032,0x6d0a3b3131662520\n"
".quad 0x25203233662e766f,0x6625202c38313266,0x2e766f6d0a3b3131,0x3432662520323366\n"
".quad 0x0a3b346625202c34,0x203233662e766f6d,0x25202c3334326625,0x3342420a0a3b3466\n"
".quad 0x6f6d0a3a31335f36,0x6625203233662e76,0x326625202c323432,0x2e766f6d0a3b3434\n"
".quad 0x3432662520323366,0x3334326625202c31,0x33662e766f6d0a3b,0x2c37313266252032\n"
".quad 0x0a3b393132662520,0x203233662e766f6d,0x25202c3631326625,0x6c2e0a3b38313266\n"
".quad 0x383532203220636f,0x662e6464610a3120,0x2c37386625203233,0x25202c3533662520\n"
".quad 0x64610a3b31343266,0x6625203233662e64,0x37386625202c3838,0x3b3234326625202c\n"
".quad 0x3233662e6464610a,0x25202c3938662520,0x336625202c353366,0x662e6464610a3b35\n"
".quad 0x2c30396625203233,0x25202c3838662520,0x6464610a3b393866,0x396625203233662e\n"
".quad 0x3631326625202c31,0x3b3631326625202c,0x3233662e6464610a,0x25202c3239662520\n"
".quad 0x396625202c303966,0x662e6464610a3b31,0x2c33396625203233,0x202c373132662520\n"
".quad 0x610a3b3731326625,0x25203233662e6464,0x396625202c343966,0x3b33396625202c32\n"
".quad 0x3233662e6464610a,0x25202c3539662520,0x426630202c343966,0x3b30303030303846\n"
".quad 0x203220636f6c2e0a,0x6d660a3120303632,0x3233662e6e722e61,0x202c303232662520\n"
".quad 0x6630202c35396625,0x4241414141324642,0x0a3b35336625202c,0x32203220636f6c2e\n"
".quad 0x6275730a31203136,0x396625203233662e,0x3134326625202c36,0x3b3234326625202c\n"
".quad 0x3233662e766f6d0a,0x30202c3739662520,0x3030303030463366,0x20636f6c2e0a3b30\n"
".quad 0x0a31203136322032,0x662e6e722e616d66,0x2c38396625203233,0x30202c3639662520\n"
".quad 0x3030303030463366,0x3631326625202c30,0x33662e766f6d0a3b,0x202c393966252032\n"
".quad 0x4141413245336630,0x636f6c2e0a3b4241,0x3120313632203220,0x3233662e67656e0a\n"
".quad 0x202c303031662520,0x6d660a3b35396625,0x3233662e6e722e61,0x202c313032662520\n"
".quad 0x25202c3030316625,0x396625202c393966,0x20636f6c2e0a3b38,0x0a31203236322032\n"
".quad 0x203233662e67656e,0x25202c3130316625,0x616d660a3b363966,0x203233662e6e722e\n"
".quad 0x25202c3230316625,0x6625202c31303166,0x31326625202c3739,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x316625202c303032,0x39396625202c3030,0x3b3230316625202c\n"
".quad 0x335f363342420a0a,0x20636f6c2e0a3a32,0x3120333033322032,0x3233662e6464610a\n"
".quad 0x202c333031662520,0x326625202c326625,0x2e6464610a3b3734,0x3031662520323366\n"
".quad 0x3330316625202c34,0x3b3134326625202c,0x3233662e6464610a,0x202c353031662520\n"
".quad 0x25202c3430316625,0x64610a3b30323266,0x6625203233662e64,0x316625202c363031\n"
".quad 0x34326625202c3530,0x662e6464610a3b32,0x3730316625203233,0x2c3630316625202c\n"
".quad 0x0a3b363132662520,0x203233662e646461,0x25202c3830316625,0x6625202c37303166\n"
".quad 0x6464610a3b303032,0x316625203233662e,0x30316625202c3930,0x3130326625202c38\n"
".quad 0x33662e6464610a3b,0x2c30313166252032,0x202c393031662520,0x730a3b3731326625\n"
".quad 0x25203233662e6275,0x6625202c31313166,0x326625202c373432,0x2e6464610a3b3032\n"
".quad 0x3131662520323366,0x3131316625202c32,0x3b3631326625202c,0x3233662e6275730a\n"
".quad 0x202c333131662520,0x25202c3231316625,0x75730a3b30303266,0x6625203233662e62\n"
".quad 0x316625202c343131,0x30326625202c3331,0x662e6464610a3b31,0x3531316625203233\n"
".quad 0x2c3431316625202c,0x0a3b373132662520,0x203233662e627573,0x25202c3631316625\n"
".quad 0x6625202c31343266,0x6464610a3b323432,0x316625203233662e,0x31316625202c3731\n"
".quad 0x3631326625202c36,0x33662e6464610a3b,0x2c38313166252032,0x202c373131662520\n"
".quad 0x730a3b3030326625,0x25203233662e6275,0x6625202c39313166,0x326625202c383131\n"
".quad 0x2e6275730a3b3130,0x3231662520323366,0x3931316625202c30,0x3b3731326625202c\n"
".quad 0x3233662e6c756d0a,0x202c313231662520,0x25202c3032316625,0x6d660a3b30323166\n"
".quad 0x3233662e6e722e61,0x202c323231662520,0x25202c3531316625,0x6625202c35313166\n"
".quad 0x766f6d0a3b313231,0x316625203233662e,0x46336630202c3332,0x0a3b303030303043\n"
".quad 0x32203220636f6c2e,0x656e0a3120333033,0x6625203233662e67,0x316625202c343231\n"
".quad 0x2e616d660a3b3232,0x25203233662e6e72,0x6625202c35323166,0x316625202c343231\n"
".quad 0x31316625202c3332,0x722e616d660a3b30,0x6625203233662e6e,0x316625202c363231\n"
".quad 0x45426630202c3532,0x202c393345383345,0x67656e0a3b326625,0x316625203233662e\n"
".quad 0x32316625202c3732,0x61702e646c0a3b36,0x203233662e6d6172,0x5b202c3738316625\n"
".quad 0x5f74726d31315a5f,0x5041426279685f64,0x61705f6d665f5366,0x0a3b5d325f6d6172\n"
".quad 0x32203220636f6c2e,0x6d660a3120333033,0x3233662e6e722e61,0x202c383231662520\n"
".quad 0x25202c3732316625,0x6625202c37383166,0x662e766f6d0a3b32,0x3932316625203233\n"
".quad 0x303430346630202c,0x6c2e0a3b30303030,0x303332203220636f,0x2e616d660a312033\n"
".quad 0x25203233662e6e72,0x6625202c30333166,0x346630202c353131,0x2c30303030303430\n"
".quad 0x0a3b303131662520,0x203233662e6c756d,0x25202c3133316625,0x6630202c35313166\n"
".quad 0x3030303030393034,0x6e722e616d660a3b,0x316625203233662e,0x33316625202c3233\n"
".quad 0x3531316625202c31,0x3b3033316625202c,0x2e6e722e616d660a,0x3331662520323366\n"
".quad 0x3432316625202c33,0x2c3332316625202c,0x0a3b323331662520,0x203233662e766f6d\n"
".quad 0x30202c3433316625,0x3345383345443366,0x20636f6c2e0a3b39,0x3120333033322032\n"
".quad 0x3233662e67656e0a,0x202c353331662520,0x660a3b3333316625,0x33662e6e722e616d\n"
".quad 0x2c36333166252032,0x202c353331662520,0x25202c3433316625,0x656e0a3b37343266\n"
".quad 0x6625203233662e67,0x316625202c373331,0x2e616d660a3b3633,0x25203233662e6e72\n"
".quad 0x6625202c38333166,0x316625202c373331,0x34326625202c3738,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x316625202c393331,0x30346630202c3032,0x202c303030303034\n"
".quad 0x6d0a3b3031316625,0x25203233662e6c75,0x6625202c30343166,0x346630202c303231\n"
".quad 0x3b30303030303930,0x2e6e722e616d660a,0x3431662520323366,0x3034316625202c31\n"
".quad 0x2c3032316625202c,0x0a3b393331662520,0x662e6e722e616d66,0x3234316625203233\n"
".quad 0x2c3432316625202c,0x202c333231662520,0x6e0a3b3134316625,0x25203233662e6765\n"
".quad 0x6625202c33343166,0x616d660a3b323431,0x203233662e6e722e,0x25202c3434316625\n"
".quad 0x6625202c33343166,0x326625202c343331,0x2e67656e0a3b3134,0x3431662520323366\n"
".quad 0x3434316625202c35,0x6e722e616d660a3b,0x316625203233662e,0x34316625202c3634\n"
".quad 0x3738316625202c35,0x3b3134326625202c,0x3233662e67656e0a,0x202c373431662520\n"
".quad 0x660a3b3531316625,0x33662e6e722e616d,0x2c38343166252032,0x202c373431662520\n"
".quad 0x25202c3932316625,0x6d660a3b30313166,0x3233662e6e722e61,0x202c393431662520\n"
".quad 0x25202c3133316625,0x6625202c35313166,0x616d660a3b383431,0x203233662e6e722e\n"
".quad 0x25202c3035316625,0x6625202c34323166,0x316625202c333231,0x2e67656e0a3b3934\n"
".quad 0x3531662520323366,0x3035316625202c31,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x35316625202c3235,0x3433316625202c31,0x3b3032326625202c,0x3233662e67656e0a\n"
".quad 0x202c333531662520,0x660a3b3235316625,0x33662e6e722e616d,0x2c34353166252032\n"
".quad 0x202c333531662520,0x25202c3738316625,0x656e0a3b30323266,0x6625203233662e67\n"
".quad 0x316625202c353531,0x2e616d660a3b3032,0x25203233662e6e72,0x6625202c36353166\n"
".quad 0x316625202c353531,0x31316625202c3932,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x316625202c373531,0x32316625202c3034,0x3635316625202c30,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x32316625202c3835,0x3332316625202c34,0x3b3735316625202c\n"
".quad 0x3233662e67656e0a,0x202c393531662520,0x660a3b3835316625,0x33662e6e722e616d\n"
".quad 0x2c30363166252032,0x202c393531662520,0x25202c3433316625,0x656e0a3b32343266\n"
".quad 0x6625203233662e67,0x316625202c313631,0x2e616d660a3b3036,0x25203233662e6e72\n"
".quad 0x6625202c32363166,0x316625202c313631,0x34326625202c3738,0x662e6464610a3b32\n"
".quad 0x3336316625203233,0x2c3531316625202c,0x0a3b303231662520,0x662e6e722e616d66\n"
".quad 0x3436316625203233,0x2c3336316625202c,0x3030343034663020,0x316625202c303030\n"
".quad 0x2e6c756d0a3b3031,0x3631662520323366,0x3336316625202c35,0x303930346630202c\n"
".quad 0x6d660a3b30303030,0x3233662e6e722e61,0x202c363631662520,0x25202c3536316625\n"
".quad 0x6625202c33363166,0x616d660a3b343631,0x203233662e6e722e,0x25202c3736316625\n"
".quad 0x6625202c34323166,0x316625202c333231,0x2e7476630a3b3636,0x203233662e343666\n"
".quad 0x6625202c31646625,0x766f6d0a3b373631,0x646625203436662e,0x3946336430202c32\n"
".quad 0x3743313743313743,0x2e0a3b4331443842,0x3332203220636f6c,0x7476630a31203330\n"
".quad 0x3233662e3436662e,0x25202c3364662520,0x656e0a3b36313266,0x6625203436662e67\n"
".quad 0x31646625202c3464,0x6e722e616d660a3b,0x646625203436662e,0x2c34646625202c35\n"
".quad 0x25202c3264662520,0x7476630a3b336466,0x3233662e3436662e,0x25202c3664662520\n"
".quad 0x656e0a3b37383166,0x6625203436662e67,0x36646625202c3764,0x6e722e616d660a3b\n"
".quad 0x646625203436662e,0x2c37646625202c38,0x25202c3564662520,0x7476630a3b336466\n"
".quad 0x2e3233662e6e722e,0x3631662520343666,0x3b38646625202c38,0x3233662e6275730a\n"
".quad 0x202c393631662520,0x25202c3032316625,0x6c2e0a3b35313166,0x303332203220636f\n"
".quad 0x2e616d660a312033,0x25203233662e6e72,0x6625202c30373166,0x346630202c393631\n"
".quad 0x2c30303030303430,0x0a3b303131662520,0x203233662e6c756d,0x25202c3137316625\n"
".quad 0x6630202c39363166,0x3030303030393034,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x37316625202c3237,0x3936316625202c31,0x3b3037316625202c,0x2e6e722e616d660a\n"
".quad 0x3731662520323366,0x3432316625202c33,0x2c3332316625202c,0x0a3b323731662520\n"
".quad 0x2e3436662e747663,0x3964662520323366,0x3b3337316625202c,0x3436662e7476630a\n"
".quad 0x646625203233662e,0x30326625202c3031,0x662e67656e0a3b30,0x3131646625203436\n"
".quad 0x0a3b39646625202c,0x662e6e722e616d66,0x3231646625203436,0x2c3131646625202c\n"
".quad 0x25202c3264662520,0x6d660a3b30316466,0x3436662e6e722e61,0x202c333164662520\n"
".quad 0x6625202c37646625,0x646625202c323164,0x2e7476630a3b3031,0x662e3233662e6e72\n"
".quad 0x3437316625203436,0x3b3331646625202c,0x3233662e6275730a,0x202c353731662520\n"
".quad 0x25202c3734316625,0x6d660a3b30323166,0x3233662e6e722e61,0x202c363731662520\n"
".quad 0x30202c3537316625,0x3030303034303466,0x3031316625202c30,0x33662e6c756d0a3b\n"
".quad 0x2c37373166252032,0x202c353731662520,0x3030303930346630,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x6625202c38373166,0x316625202c373731,0x37316625202c3537\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x316625202c393731,0x32316625202c3432\n"
".quad 0x3837316625202c33,0x36662e7476630a3b,0x6625203233662e34,0x316625202c343164\n"
".quad 0x2e7476630a3b3937,0x203233662e343666,0x25202c3531646625,0x656e0a3b31303266\n"
".quad 0x6625203436662e67,0x646625202c363164,0x2e616d660a3b3431,0x25203436662e6e72\n"
".quad 0x6625202c37316466,0x646625202c363164,0x3531646625202c32,0x6e722e616d660a3b\n"
".quad 0x646625203436662e,0x37646625202c3831,0x2c3731646625202c,0x0a3b353164662520\n"
".quad 0x662e6e722e747663,0x25203436662e3233,0x6625202c30383166,0x6275730a3b383164\n"
".quad 0x316625203233662e,0x31316625202c3138,0x3032316625202c35,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x38316625202c3238,0x3430346630202c31,0x25202c3030303030\n"
".quad 0x756d0a3b30313166,0x6625203233662e6c,0x316625202c333831,0x30346630202c3138\n"
".quad 0x0a3b303030303039,0x662e6e722e616d66,0x3438316625203233,0x2c3338316625202c\n"
".quad 0x202c313831662520,0x660a3b3238316625,0x33662e6e722e616d,0x2c35383166252032\n"
".quad 0x202c343231662520,0x25202c3332316625,0x76630a3b34383166,0x33662e3436662e74\n"
".quad 0x2c39316466252032,0x0a3b353831662520,0x2e3436662e747663,0x3264662520323366\n"
".quad 0x3731326625202c30,0x36662e67656e0a3b,0x2c31326466252034,0x0a3b393164662520\n"
".quad 0x662e6e722e616d66,0x3232646625203436,0x2c3132646625202c,0x25202c3264662520\n"
".quad 0x6d660a3b30326466,0x3436662e6e722e61,0x202c333264662520,0x6625202c37646625\n"
".quad 0x646625202c323264,0x2e7476630a3b3032,0x662e3233662e6e72,0x3638316625203436\n"
".quad 0x3b3332646625202c,0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3933316c\n"
".quad 0x645f74726d31315a,0x665041426279685f,0x7261705f6d665f53,0x2e0a3b5d335f6d61\n"
".quad 0x3232203220636f6c,0x64616d0a31203035,0x203436732e6f6c2e,0x25202c32386c7225\n"
".quad 0x7225202c38326c72,0x7225202c3933316c,0x702e646c0a3b376c,0x3436752e6d617261\n"
".quad 0x2c3633316c722520,0x726d31315a5f5b20,0x426279685f645f74,0x5f6d665f53665041\n"
".quad 0x5d315f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e\n"
".quad 0x316c7225202c3338,0x2e6c68730a3b3633,0x386c722520343662,0x32386c7225202c34\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c35386c,0x0a3b3233202c3438\n"
".quad 0x32203220636f6c2e,0x68730a3120343033,0x7225203436622e6c,0x6c7225202c36386c\n"
".quad 0x610a3b32202c3538,0x25203436732e6464,0x7225202c37386c72,0x6c7225202c33386c\n"
".quad 0x672e74730a3b3638,0x33662e6c61626f6c,0x37386c72255b2032,0x3832316625202c5d\n"
".quad 0x36732e6464610a3b,0x2c38386c72252034,0x202c38326c722520,0x6f6c2e0a3b383637\n"
".quad 0x3530333220322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c39386c\n"
".quad 0x316c7225202c3838,0x376c7225202c3933,0x36622e6c68730a3b,0x2c30396c72252034\n"
".quad 0x202c39386c722520,0x2e7268730a3b3233,0x396c722520343673,0x30396c7225202c31\n"
".quad 0x6c2e0a3b3233202c,0x303332203220636f,0x2e6c68730a312035,0x396c722520343662\n"
".quad 0x31396c7225202c32,0x6464610a3b32202c,0x6c7225203436732e,0x386c7225202c3339\n"
".quad 0x32396c7225202c33,0x6f6c672e74730a3b,0x203233662e6c6162,0x2c5d33396c72255b\n"
".quad 0x0a3b383331662520,0x203436732e646461,0x25202c34396c7225,0x3531202c38326c72\n"
".quad 0x636f6c2e0a3b3633,0x2036303332203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x396c7225202c3539,0x33316c7225202c34,0x3b376c7225202c39,0x3436622e6c68730a\n"
".quad 0x202c36396c722520,0x33202c35396c7225,0x732e7268730a3b32,0x37396c7225203436\n"
".quad 0x2c36396c7225202c,0x6f6c2e0a3b323320,0x3630333220322063,0x622e6c68730a3120\n"
".quad 0x38396c7225203436,0x2c37396c7225202c,0x2e6464610a3b3220,0x396c722520343673\n"
".quad 0x33386c7225202c39,0x3b38396c7225202c,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d39396c7225,0x610a3b3634316625,0x25203436732e6464,0x25202c3030316c72\n"
".quad 0x3332202c38326c72,0x636f6c2e0a3b3430,0x2037303332203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c313031,0x6c7225202c303031,0x6c7225202c393331\n"
".quad 0x622e6c68730a3b37,0x30316c7225203436,0x30316c7225202c32,0x730a3b3233202c31\n"
".quad 0x25203436732e7268,0x25202c3330316c72,0x33202c3230316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120373033322032,0x3436622e6c68730a,0x2c3430316c722520,0x2c3330316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x386c7225202c3530,0x30316c7225202c33\n"
".quad 0x6c672e74730a3b34,0x3233662e6c61626f,0x3530316c72255b20,0x3435316625202c5d\n"
".quad 0x36732e6464610a3b,0x3630316c72252034,0x2c38326c7225202c,0x2e0a3b3237303320\n"
".quad 0x3332203220636f6c,0x64616d0a31203830,0x203436732e6f6c2e,0x202c3730316c7225\n"
".quad 0x202c3630316c7225,0x202c3933316c7225,0x68730a3b376c7225,0x7225203436622e6c\n"
".quad 0x7225202c3830316c,0x3233202c3730316c,0x36732e7268730a3b,0x3930316c72252034\n"
".quad 0x3830316c7225202c,0x6c2e0a3b3233202c,0x303332203220636f,0x2e6c68730a312038\n"
".quad 0x316c722520343662,0x316c7225202c3031,0x610a3b32202c3930,0x25203436732e6464\n"
".quad 0x25202c3131316c72,0x7225202c33386c72,0x74730a3b3031316c,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d313131,0x6464610a3b323631,0x6c7225203436732e\n"
".quad 0x6c7225202c323131,0x30343833202c3832,0x3220636f6c2e0a3b,0x0a31203930333220\n"
".quad 0x732e6f6c2e64616d,0x31316c7225203436,0x31316c7225202c33,0x33316c7225202c32\n"
".quad 0x3b376c7225202c39,0x3436622e6c68730a,0x2c3431316c722520,0x2c3331316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c353131,0x3b3233202c343131\n"
".quad 0x203220636f6c2e0a,0x730a312039303332,0x25203436622e6c68,0x25202c3631316c72\n"
".quad 0x32202c3531316c72,0x36732e6464610a3b,0x3731316c72252034,0x2c33386c7225202c\n"
".quad 0x3b3631316c722520,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3731316c7225\n"
".quad 0x0a3b383631662520,0x203436732e646461,0x202c3831316c7225,0x34202c38326c7225\n"
".quad 0x6f6c2e0a3b383036,0x3031333220322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3931316c,0x7225202c3831316c,0x7225202c3933316c,0x2e6c68730a3b376c\n"
".quad 0x316c722520343662,0x316c7225202c3032,0x0a3b3233202c3931,0x203436732e726873\n"
".quad 0x202c3132316c7225,0x202c3032316c7225,0x636f6c2e0a3b3233,0x2030313332203220\n"
".quad 0x36622e6c68730a31,0x3232316c72252034,0x3132316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c333231,0x316c7225202c3338,0x672e74730a3b3232\n"
".quad 0x33662e6c61626f6c,0x32316c72255b2032,0x37316625202c5d33,0x20636f6c2e0a3b34\n"
".quad 0x3120313133322032,0x2e6f6c2e64616d0a,0x316c722520343673,0x336c7225202c3532\n"
".quad 0x33316c7225202c30,0x3b376c7225202c39,0x3436622e6c68730a,0x2c3632316c722520\n"
".quad 0x2c3532316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c373231\n"
".quad 0x3b3233202c363231,0x203220636f6c2e0a,0x730a312031313332,0x25203436622e6c68\n"
".quad 0x25202c3832316c72,0x32202c3732316c72,0x36732e6464610a3b,0x3932316c72252034\n"
".quad 0x2c33386c7225202c,0x3b3832316c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3932316c7225,0x0a3b303831662520,0x32203220636f6c2e,0x616d0a3120323133\n"
".quad 0x3436732e6f6c2e64,0x2c3133316c722520,0x202c36336c722520,0x202c3933316c7225\n"
".quad 0x68730a3b376c7225,0x7225203436622e6c,0x7225202c3233316c,0x3233202c3133316c\n"
".quad 0x36732e7268730a3b,0x3333316c72252034,0x3233316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x313332203220636f,0x2e6c68730a312032,0x316c722520343662,0x316c7225202c3433\n"
".quad 0x610a3b32202c3333,0x25203436732e6464,0x25202c3533316c72,0x7225202c33386c72\n"
".quad 0x74730a3b3433316c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d353331\n"
".quad 0x6f6c2e0a3b363831,0x3531333220322063,0x0a3b7465720a3220,0x72746e652e0a0a7d\n"
".quad 0x726d32315a5f2079,0x747865745f645f74,0x6d665f5366504241,0x6d617261702e0a28\n"
".quad 0x5a5f203436752e20,0x5f645f74726d3231,0x6650424174786574,0x7261705f6d665f53\n"
".quad 0x702e0a2c305f6d61,0x36752e206d617261,0x726d32315a5f2034,0x747865745f645f74\n"
".quad 0x6d665f5366504241,0x315f6d617261705f,0x6d617261702e0a2c,0x5a5f203233662e20\n"
".quad 0x5f645f74726d3231,0x6650424174786574,0x7261705f6d665f53,0x702e0a2c325f6d61\n"
".quad 0x36752e206d617261,0x726d32315a5f2034,0x747865745f645f74,0x6d665f5366504241\n"
".quad 0x335f6d617261705f,0x65722e0a7b0a290a,0x25203233662e2067,0x0a3b3e3834323c66\n"
".quad 0x36662e206765722e,0x34323c6466252034,0x206765722e0a3b3e,0x702520646572702e\n"
".quad 0x722e0a3b3e34313c,0x203233732e206765,0x0a3b3e32393c7225,0x36732e206765722e\n"
".quad 0x32313c6c72252034,0x646c0a0a0a3b3e38,0x752e6d617261702e,0x2c356c7225203436\n"
".quad 0x726d32315a5f5b20,0x747865745f645f74,0x6d665f5366504241,0x305f6d617261705f\n"
".quad 0x61702e646c0a3b5d,0x203436752e6d6172,0x5f5b202c326c7225,0x645f74726d32315a\n"
".quad 0x504241747865745f,0x61705f6d665f5366,0x0a3b5d335f6d6172,0x2e6f742e61747663\n"
".quad 0x752e6c61626f6c67,0x2c366c7225203436,0x2e0a3b356c722520,0x3332203220636f6c\n"
".quad 0x766f6d0a31203931,0x327225203233752e,0x2e6469746e25202c,0x752e766f6d0a3b78\n"
".quad 0x202c337225203233,0x782e646961746325,0x33752e766f6d0a3b,0x25202c3472252032\n"
".quad 0x6d0a3b782e646974,0x33732e6f6c2e6461,0x25202c3572252032,0x2c337225202c3272\n"
".quad 0x6c2e0a3b34722520,0x323332203220636f,0x2e766f6d0a312030,0x2c36722520323375\n"
".quad 0x792e6469746e2520,0x33752e766f6d0a3b,0x25202c3772252032,0x3b792e6469617463\n"
".quad 0x3233752e766f6d0a,0x7425202c38722520,0x616d0a3b792e6469,0x3233732e6f6c2e64\n"
".quad 0x7225202c39722520,0x202c377225202c36,0x7476630a3b387225,0x3233752e3436752e\n"
".quad 0x25202c376c722520,0x636f6c2e0a3b3572,0x2031323332203220,0x36752e7476630a31\n"
".quad 0x7225203233752e34,0x3b397225202c386c,0x2e6f6c2e64616d0a,0x396c722520343673\n"
".quad 0x202c386c7225202c,0x7225202c326c7225,0x2e6c68730a3b376c,0x316c722520343662\n"
".quad 0x2c396c7225202c30,0x7268730a3b323320,0x6c7225203436732e,0x316c7225202c3131\n"
".quad 0x2e0a3b3233202c30,0x3332203220636f6c,0x6c68730a31203332,0x6c7225203436622e\n"
".quad 0x316c7225202c3231,0x64610a3b32202c31,0x7225203436732e64,0x6c7225202c33316c\n"
".quad 0x32316c7225202c36,0x6f6c672e646c0a3b,0x203233662e6c6162,0x72255b202c326625\n"
".quad 0x6c2e0a3b5d33316c,0x323332203220636f,0x2e7476630a312034,0x732e3233662e6e72\n"
".quad 0x202c336625203233,0x6464610a3b357225,0x346625203233662e,0x202c336625202c35\n"
".quad 0x3030303046336630,0x2e6464610a3b3030,0x3131722520323373,0x2d202c397225202c\n"
".quad 0x20636f6c2e0a3b31,0x3120343233322032,0x2e6e722e7476630a,0x203233732e323366\n"
".quad 0x7225202c33386625,0x2e6464610a3b3131,0x3037662520323366,0x202c33386625202c\n"
".quad 0x3030303046336630,0x2e766f6d0a3b3030,0x3139722520323375,0x74090a0a3b30202c\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x202c353366257b20,0x6625202c36336625\n"
".quad 0x38336625202c3733,0x527865745b202c7d,0x202c4132665f6665,0x25202c353466257b\n"
".quad 0x0a0a3b5d7d303766,0x203220636f6c2e09,0x610a312035323332,0x25203233732e6464\n"
".quad 0x397225202c333172,0x7476630a3b31202c,0x2e3233662e6e722e,0x3438662520323373\n"
".quad 0x0a3b33317225202c,0x203233662e646461,0x6625202c32386625,0x46336630202c3438\n"
".quad 0x0a3b303030303030,0x64322e786574090a,0x2e3233662e34762e,0x3466257b20323366\n"
".quad 0x2c32346625202c31,0x25202c3334662520,0x745b202c7d343466,0x34665f6665527865\n"
".quad 0x353466257b202c41,0x5d7d32386625202c,0x2e646461090a0a3b,0x3431722520323373\n"
".quad 0x2d202c357225202c,0x20636f6c2e0a3b31,0x3120363233322032,0x2e6e722e7476630a\n"
".quad 0x203233732e323366,0x7225202c35386625,0x2e6464610a3b3431,0x3138662520323366\n"
".quad 0x202c35386625202c,0x3030303046336630,0x2e7476630a3b3030,0x732e3233662e6e72\n"
".quad 0x202c366625203233,0x6464610a3b397225,0x356625203233662e,0x202c366625202c38\n"
".quad 0x3030303046336630,0x6574090a0a3b3030,0x2e34762e64322e78,0x203233662e323366\n"
".quad 0x25202c373466257b,0x346625202c383466,0x7d30356625202c39,0x65527865745b202c\n"
".quad 0x7b202c4131665f66,0x6625202c31386625,0x090a0a3b5d7d3835,0x32203220636f6c2e\n"
".quad 0x64610a3120373233,0x7225203233732e64,0x2c357225202c3531,0x2e7476630a3b3120\n"
".quad 0x732e3233662e6e72,0x2c36386625203233,0x610a3b3531722520,0x25203233662e6464\n"
".quad 0x386625202c353766,0x3046336630202c36,0x0a0a3b3030303030,0x2e64322e78657409\n"
".quad 0x662e3233662e3476,0x333566257b203233,0x202c34356625202c,0x6625202c35356625\n"
".quad 0x65745b202c7d3635,0x4133665f66655278,0x2c353766257b202c,0x3b5d7d3835662520\n"
".quad 0x786574090a090a0a,0x662e34762e64322e,0x7b203233662e3233,0x6625202c39356625\n"
".quad 0x31366625202c3036,0x2c7d32366625202c,0x6665527865745b20,0x257b202c4135665f\n"
".quad 0x376625202c313866,0x0a090a0a3b5d7d30,0x2e64322e78657409,0x662e3233662e3476\n"
".quad 0x353666257b203233,0x202c36366625202c,0x6625202c37366625,0x65745b202c7d3836\n"
".quad 0x4136665f66655278,0x2c353766257b202c,0x3b5d7d3037662520,0x786574090a090a0a\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x6625202c31376625,0x33376625202c3237\n"
".quad 0x2c7d34376625202c,0x6665527865745b20,0x257b202c4137665f,0x386625202c353766\n"
".quad 0x0a090a0a3b5d7d32,0x2e64322e78657409,0x662e3233662e3476,0x373766257b203233\n"
".quad 0x202c38376625202c,0x6625202c39376625,0x65745b202c7d3038,0x4138665f66655278\n"
".quad 0x2c313866257b202c,0x3b5d7d3238662520,0x20636f6c2e090a0a,0x730a312032382032\n"
".quad 0x662e746c2e707465,0x202c317025203233,0x336630202c336625,0x3b44434343434344\n"
".quad 0x203220636f6c2e0a,0x6d0a312031333332,0x25203233662e766f,0x376625202c323166\n"
".quad 0x20636f6c2e0a3b37,0x3120303333322032,0x3233662e766f6d0a,0x202c393032662520\n"
".quad 0x6c2e0a3b31376625,0x323332203220636f,0x2e766f6d0a312039,0x3032662520323366\n"
".quad 0x3b35366625202c38,0x203220636f6c2e0a,0x6d0a312038323332,0x25203233662e766f\n"
".quad 0x39356625202c3966,0x3220636f6c2e0a3b,0x0a31203732333220,0x203233662e766f6d\n"
".quad 0x25202c3432326625,0x6f6c2e0a3b333566,0x3632333220322063,0x662e766f6d0a3120\n"
".quad 0x3734326625203233,0x0a3b37346625202c,0x32203220636f6c2e,0x6f6d0a3120353233\n"
".quad 0x6625203233662e76,0x3b31346625202c35,0x203220636f6c2e0a,0x6d0a312034323332\n"
".quad 0x25203233662e766f,0x35336625202c3466,0x3220636f6c2e0a3b,0x25400a3120323820\n"
".quad 0x4220617262203170,0x0a0a3b395f373342,0x203233752e766f6d,0x3031202c30327225\n"
".quad 0x636f6c2e0a3b3432,0x0a31203438203220,0x203233732e627573,0x7225202c31327225\n"
".quad 0x3b357225202c3032,0x2e6e722e7476630a,0x203233732e323366,0x7225202c37386625\n"
".quad 0x707465730a3b3132,0x203233662e746c2e,0x386625202c327025,0x3846336630202c37\n"
".quad 0x400a3b4443434343,0x2061726220327025,0x0a3b385f37334242,0x3233752e766f6d0a\n"
".quad 0x37202c3632722520,0x636f6c2e0a3b3836,0x0a31203638203220,0x203233732e627573\n"
".quad 0x7225202c37327225,0x3b397225202c3632,0x2e6e722e7476630a,0x203233732e323366\n"
".quad 0x7225202c38386625,0x707465730a3b3732,0x203233662e746c2e,0x386625202c337025\n"
".quad 0x3846336630202c38,0x400a3b4443434343,0x2061726220337025,0x0a3b375f37334242\n"
".quad 0x203220636f6c2e0a,0x7465730a31203838,0x3233662e746c2e70,0x6625202c34702520\n"
".quad 0x4344336630202c36,0x400a3b4443434343,0x2061726220347025,0x0a3b365f37334242\n"
".quad 0x3233662e6464610a,0x25202c3938662520,0x33436630202c3366,0x0a3b303030434646\n"
".quad 0x203233662e646461,0x6625202c30396625,0x4233436630202c36,0x2e0a3b3030304346\n"
".quad 0x3039203220636f6c,0x662e6c756d0a3120,0x2c31396625203233,0x25202c3039662520\n"
".quad 0x616d660a3b303966,0x203233662e6e722e,0x6625202c32396625,0x39386625202c3938\n"
".quad 0x0a3b31396625202c,0x2e746c2e70746573,0x2c35702520323366,0x30202c3239662520\n"
".quad 0x3030303038323466,0x20357025400a3b30,0x3733424220617262,0x2e6172620a3b355f\n"
".quad 0x3733424220696e75,0x42420a0a3b30315f,0x6f6d0a3a355f3733,0x7225203233752e76\n"
".quad 0x0a3b3031202c3139,0x20696e752e617262,0x3b30315f37334242,0x365f373342420a0a\n"
".quad 0x33752e766f6d0a3a,0x202c313972252032,0x2e6172620a3b3231,0x3733424220696e75\n"
".quad 0x42420a0a3b30315f,0x6f6d0a3a375f3733,0x7225203233752e76,0x0a3b3131202c3139\n"
".quad 0x20696e752e617262,0x3b30315f37334242,0x385f373342420a0a,0x33752e766f6d0a3a\n"
".quad 0x202c313972252032,0x752e6172620a3b32,0x5f3733424220696e,0x3342420a0a3b3031\n"
".quad 0x766f6d0a3a395f37,0x397225203233752e,0x420a0a3b33202c31,0x0a3a30315f373342\n"
".quad 0x32203220636f6c2e,0x76630a3120313233,0x33732e3436732e74,0x2c34316c72252032\n"
".quad 0x76630a3b39722520,0x33752e3436752e74,0x2c35316c72252032,0x64610a3b35722520\n"
".quad 0x7225203436732e64,0x6c7225202c36316c,0x36373335202c3431,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3732316c72,0x5f74726d32315a5f,0x4241747865745f64\n"
".quad 0x705f6d665f536650,0x3b5d335f6d617261,0x203220636f6c2e0a,0x6d0a312036363332\n"
".quad 0x36732e6f6c2e6461,0x2c37316c72252034,0x202c36316c722520,0x202c3732316c7225\n"
".quad 0x6c0a3b35316c7225,0x2e6d617261702e64,0x316c722520343675,0x315a5f5b202c3432\n"
".quad 0x745f645f74726d32,0x5366504241747865,0x617261705f6d665f,0x76630a3b5d315f6d\n"
".quad 0x6c672e6f742e6174,0x3436752e6c61626f,0x202c38316c722520,0x0a3b3432316c7225\n"
".quad 0x203436622e6c6873,0x25202c39316c7225,0x3233202c37316c72,0x36732e7268730a3b\n"
".quad 0x2c30326c72252034,0x202c39316c722520,0x636f6c2e0a3b3233,0x2036363332203220\n"
".quad 0x36622e6c68730a31,0x2c31326c72252034,0x202c30326c722520,0x732e6464610a3b32\n"
".quad 0x2c336c7225203436,0x202c38316c722520,0x610a3b31326c7225,0x25203436732e6464\n"
".quad 0x7225202c32326c72,0x343136202c34316c,0x20636f6c2e0a3b34,0x3120373633322032\n"
".quad 0x2e6f6c2e64616d0a,0x326c722520343673,0x32326c7225202c33,0x3732316c7225202c\n"
".quad 0x3b35316c7225202c,0x3436622e6c68730a,0x202c34326c722520,0x33202c33326c7225\n"
".quad 0x732e7268730a3b32,0x35326c7225203436,0x2c34326c7225202c,0x6f6c2e0a3b323320\n"
".quad 0x3736333220322063,0x622e6c68730a3120,0x36326c7225203436,0x2c35326c7225202c\n"
".quad 0x2e6464610a3b3220,0x346c722520343673,0x2c38316c7225202c,0x0a3b36326c722520\n"
".quad 0x2e71652e70746573,0x2c36702520323373,0x31202c3139722520,0x6220367025400a3b\n"
".quad 0x5f37334242206172,0x7465730a0a3b3231,0x3233732e656e2e70,0x7225202c37702520\n"
".quad 0x0a3b3031202c3139,0x6172622037702540,0x33315f3733424220,0x5f373342420a0a3b\n"
".quad 0x2e6464610a3a3231,0x326c722520343673,0x34316c7225202c38,0x6c0a3b383637202c\n"
".quad 0x2e6d617261702e64,0x316c722520343675,0x315a5f5b202c3632,0x745f645f74726d32\n"
".quad 0x5366504241747865,0x617261705f6d665f,0x6c2e0a3b5d335f6d,0x363332203220636f\n"
".quad 0x2e64616d0a312030,0x25203436732e6f6c,0x7225202c30336c72,0x6c7225202c38326c\n"
".quad 0x6c7225202c363231,0x702e646c0a3b3531,0x3436752e6d617261,0x2c3332316c722520\n"
".quad 0x726d32315a5f5b20,0x747865745f645f74,0x6d665f5366504241,0x315f6d617261705f\n"
".quad 0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c,0x6c7225202c31336c\n"
".quad 0x6c68730a3b333231,0x6c7225203436622e,0x336c7225202c3233,0x730a3b3233202c30\n"
".quad 0x25203436732e7268,0x7225202c33336c72,0x3b3233202c32336c,0x203220636f6c2e0a\n"
".quad 0x730a312030363332,0x25203436622e6c68,0x7225202c34336c72,0x0a3b32202c33336c\n"
".quad 0x203436732e646461,0x25202c35336c7225,0x7225202c31336c72,0x6f6c2e0a3b34336c\n"
".quad 0x3533333220322063,0x6c672e74730a3120,0x3233662e6c61626f,0x5d35336c72255b20\n"
".quad 0x0a3b33356625202c,0x203436732e646461,0x25202c36336c7225,0x3531202c34316c72\n"
".quad 0x636f6c2e0a3b3633,0x2031363332203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x336c7225202c3733,0x32316c7225202c36,0x35316c7225202c36,0x36622e6c68730a3b\n"
".quad 0x2c38336c72252034,0x202c37336c722520,0x2e7268730a3b3233,0x336c722520343673\n"
".quad 0x38336c7225202c39,0x6c2e0a3b3233202c,0x363332203220636f,0x2e6c68730a312031\n"
".quad 0x346c722520343662,0x39336c7225202c30,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x336c7225202c3134,0x30346c7225202c31,0x3220636f6c2e0a3b,0x0a31203633333220\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d31346c72,0x6464610a3b313466\n"
".quad 0x6c7225203436732e,0x316c7225202c3234,0x3b34303332202c34,0x203220636f6c2e0a\n"
".quad 0x6d0a312032363332,0x36732e6f6c2e6461,0x2c33346c72252034,0x202c32346c722520\n"
".quad 0x202c3632316c7225,0x730a3b35316c7225,0x25203436622e6c68,0x7225202c34346c72\n"
".quad 0x3b3233202c33346c,0x3436732e7268730a,0x202c35346c722520,0x33202c34346c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120323633322032,0x3436622e6c68730a,0x202c36346c722520\n"
".quad 0x32202c35346c7225,0x36732e6464610a3b,0x2c37346c72252034,0x202c31336c722520\n"
".quad 0x2e0a3b36346c7225,0x3332203220636f6c,0x2e74730a31203733,0x662e6c61626f6c67\n"
".quad 0x346c72255b203233,0x37346625202c5d37,0x36732e6464610a3b,0x2c38346c72252034\n"
".quad 0x202c34316c722520,0x6c2e0a3b32373033,0x363332203220636f,0x2e64616d0a312033\n"
".quad 0x25203436732e6f6c,0x7225202c39346c72,0x6c7225202c38346c,0x6c7225202c363231\n"
".quad 0x2e6c68730a3b3531,0x356c722520343662,0x39346c7225202c30,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c31356c,0x0a3b3233202c3035,0x32203220636f6c2e\n"
".quad 0x68730a3120333633,0x7225203436622e6c,0x6c7225202c32356c,0x610a3b32202c3135\n"
".quad 0x25203436732e6464,0x7225202c33356c72,0x6c7225202c31336c,0x636f6c2e0a3b3235\n"
".quad 0x2038333332203220,0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d33356c72255b\n"
".quad 0x610a3b3533662520,0x25203436732e6464,0x7225202c34356c72,0x343833202c34316c\n"
".quad 0x20636f6c2e0a3b30,0x3120343633322032,0x2e6f6c2e64616d0a,0x356c722520343673\n"
".quad 0x34356c7225202c35,0x3632316c7225202c,0x3b35316c7225202c,0x3436622e6c68730a\n"
".quad 0x202c36356c722520,0x33202c35356c7225,0x732e7268730a3b32,0x37356c7225203436\n"
".quad 0x2c36356c7225202c,0x6f6c2e0a3b323320,0x3436333220322063,0x622e6c68730a3120\n"
".quad 0x38356c7225203436,0x2c37356c7225202c,0x2e6464610a3b3220,0x356c722520343673\n"
".quad 0x31336c7225202c39,0x3b38356c7225202c,0x203220636f6c2e0a,0x730a312039333332\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d39356c,0x2e6464610a3b3137\n"
".quad 0x366c722520343673,0x34316c7225202c30,0x0a3b38303634202c,0x32203220636f6c2e\n"
".quad 0x616d0a3120353633,0x3436732e6f6c2e64,0x202c31366c722520,0x25202c30366c7225\n"
".quad 0x25202c3632316c72,0x68730a3b35316c72,0x7225203436622e6c,0x6c7225202c32366c\n"
".quad 0x0a3b3233202c3136,0x203436732e726873,0x25202c33366c7225,0x3233202c32366c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203536333220,0x203436622e6c6873,0x25202c34366c7225\n"
".quad 0x3b32202c33366c72,0x3436732e6464610a,0x202c35366c722520,0x25202c31336c7225\n"
".quad 0x6c2e0a3b34366c72,0x343332203220636f,0x672e74730a312030,0x33662e6c61626f6c\n"
".quad 0x35366c72255b2032,0x3b37376625202c5d,0x203220636f6c2e0a,0x730a312031343332\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x356625202c5d336c,0x20636f6c2e0a3b39\n"
".quad 0x3120323433322032,0x626f6c672e74730a,0x5b203233662e6c61,0x25202c5d346c7225\n"
".quad 0x6f6c2e0a3b353666,0x3037333220322063,0x0a3b7465720a3220,0x33315f373342420a\n"
".quad 0x3220636f6c2e0a3a,0x0a31203534333220,0x2e71652e70746573,0x2c38702520323373\n"
".quad 0x32202c3139722520,0x6220387025400a3b,0x5f37334242206172,0x6f6c2e0a0a3b3232\n"
".quad 0x3934333220322063,0x2e707465730a3120,0x25203233732e7165,0x31397225202c3970\n"
".quad 0x7025400a3b33202c,0x4242206172622039,0x0a0a3b36315f3733,0x203233662e766f6d\n"
".quad 0x25202c3132326625,0x766f6d0a3b323166,0x326625203233662e,0x3b396625202c3032\n"
".quad 0x3233662e766f6d0a,0x202c323432662520,0x766f6d0a3b356625,0x326625203233662e\n"
".quad 0x3b346625202c3134,0x696e752e6172620a,0x38325f3733424220,0x5f373342420a0a3b\n"
".quad 0x636f6c2e0a3a3631,0x3120303732203220,0x71652e707465730a,0x317025203233732e\n"
".quad 0x202c397225202c30,0x30317025400a3b30,0x3342422061726220,0x2e0a0a3b30325f37\n"
".quad 0x3732203220636f6c,0x707465730a312034,0x203233732e71652e,0x7225202c31317025\n"
".quad 0x0a3b373637202c39,0x7262203131702540,0x315f373342422061,0x2e766f6d0a0a3b39\n"
".quad 0x3132662520323366,0x3930326625202c31,0x33662e766f6d0a3b,0x2c30313266252032\n"
".quad 0x0a3b383032662520,0x203233662e766f6d,0x25202c3634326625,0x2e766f6d0a3b3566\n"
".quad 0x3432662520323366,0x0a3b346625202c35,0x20696e752e617262,0x3b31325f37334242\n"
".quad 0x315f373342420a0a,0x662e766f6d0a3a39,0x3031326625203233,0x3b3830326625202c\n"
".quad 0x3233662e766f6d0a,0x202c313132662520,0x6d0a3b3830326625,0x25203233662e766f\n"
".quad 0x6625202c35343266,0x662e766f6d0a3b34,0x3634326625203233,0x620a3b346625202c\n"
".quad 0x4220696e752e6172,0x0a3b31325f373342,0x30325f373342420a,0x33662e766f6d0a3a\n"
".quad 0x2c30313266252032,0x0a3b393032662520,0x203233662e766f6d,0x25202c3131326625\n"
".quad 0x6f6d0a3b39303266,0x6625203233662e76,0x356625202c353432,0x33662e766f6d0a3b\n"
".quad 0x2c36343266252032,0x420a0a3b35662520,0x0a3a31325f373342,0x203233662e766f6d\n"
".quad 0x25202c3234326625,0x6f6d0a3b36343266,0x6625203233662e76,0x326625202c313432\n"
".quad 0x2e766f6d0a3b3534,0x3032662520323366,0x3131326625202c39,0x33662e766f6d0a3b\n"
".quad 0x2c38303266252032,0x0a3b303132662520,0x203233662e766f6d,0x6630202c33396625\n"
".quad 0x4130374433414433,0x3220636f6c2e0a3b,0x660a312031383220,0x33662e6e722e616d\n"
".quad 0x2c37343266252032,0x30202c3339662520,0x4141414132463366,0x3b33356625202c42\n"
".quad 0x203220636f6c2e0a,0x75730a3120323832,0x6625203233662e62,0x34326625202c3439\n"
".quad 0x3234326625202c31,0x33662e766f6d0a3b,0x202c353966252032,0x3030303046336630\n"
".quad 0x636f6c2e0a3b3030,0x3120323832203220,0x3233662e67656e0a,0x25202c3639662520\n"
".quad 0x616d660a3b343966,0x203233662e6e722e,0x6625202c37396625,0x35396625202c3639\n"
".quad 0x3b3930326625202c,0x2e6e722e616d660a,0x3232662520323366,0x2c33396625202c30\n"
".quad 0x4141324533663020,0x396625202c424141,0x20636f6c2e0a3b37,0x0a31203338322032\n"
".quad 0x662e6e722e616d66,0x2c38396625203233,0x30202c3439662520,0x3030303030463366\n"
".quad 0x3830326625202c30,0x6e722e616d660a3b,0x326625203233662e,0x33396625202c3132\n"
".quad 0x413245336630202c,0x6625202c42414141,0x2e6172620a3b3839,0x3733424220696e75\n"
".quad 0x42420a0a3b38325f,0x2e0a3a32325f3733,0x3432203220636f6c,0x707465730a312037\n"
".quad 0x203233732e71652e,0x7225202c32317025,0x25400a3b30202c39,0x2061726220323170\n"
".quad 0x3b36325f37334242,0x3220636f6c2e0a0a,0x730a312031353220,0x732e71652e707465\n"
".quad 0x2c33317025203233,0x3637202c39722520,0x33317025400a3b37,0x3342422061726220\n"
".quad 0x6d0a0a3b35325f37,0x25203233662e766f,0x6625202c33323266,0x2e766f6d0a3b3231\n"
".quad 0x3232662520323366,0x0a3b396625202c32,0x203233662e766f6d,0x25202c3434326625\n"
".quad 0x2e766f6d0a3b3566,0x3432662520323366,0x0a3b346625202c33,0x20696e752e617262\n"
".quad 0x3b37325f37334242,0x325f373342420a0a,0x662e766f6d0a3a35,0x3332326625203233\n"
".quad 0x6d0a3b396625202c,0x25203233662e766f,0x6625202c32323266,0x662e766f6d0a3b39\n"
".quad 0x3434326625203233,0x6d0a3b346625202c,0x25203233662e766f,0x6625202c33343266\n"
".quad 0x752e6172620a3b34,0x5f3733424220696e,0x3342420a0a3b3732,0x6f6d0a3a36325f37\n"
".quad 0x6625203233662e76,0x316625202c333232,0x662e766f6d0a3b32,0x3232326625203233\n"
".quad 0x0a3b32316625202c,0x203233662e766f6d,0x25202c3434326625,0x2e766f6d0a3b3566\n"
".quad 0x3432662520323366,0x0a3b356625202c33,0x37325f373342420a,0x33662e766f6d0a3a\n"
".quad 0x2c32343266252032,0x0a3b343432662520,0x203233662e766f6d,0x25202c3134326625\n"
".quad 0x6f6d0a3b33343266,0x6625203233662e76,0x326625202c313232,0x2e766f6d0a3b3332\n"
".quad 0x3232662520323366,0x3232326625202c30,0x3220636f6c2e0a3b,0x610a312038353220\n"
".quad 0x25203233662e6464,0x326625202c393966,0x3b3134326625202c,0x3233662e6464610a\n"
".quad 0x202c303031662520,0x6625202c39396625,0x6464610a3b323432,0x316625203233662e\n"
".quad 0x37346625202c3130,0x0a3b37346625202c,0x203233662e646461,0x25202c3230316625\n"
".quad 0x6625202c30303166,0x6464610a3b313031,0x316625203233662e,0x32326625202c3330\n"
".quad 0x3032326625202c30,0x33662e6464610a3b,0x2c34303166252032,0x202c323031662520\n"
".quad 0x610a3b3330316625,0x25203233662e6464,0x6625202c35303166,0x326625202c313232\n"
".quad 0x2e6464610a3b3132,0x3031662520323366,0x3430316625202c36,0x3b3530316625202c\n"
".quad 0x3233662e6464610a,0x202c373031662520,0x30202c3630316625,0x3030303038464266\n"
".quad 0x20636f6c2e0a3b30,0x0a31203036322032,0x662e6e722e616d66,0x3432326625203233\n"
".quad 0x2c3730316625202c,0x4141324642663020,0x346625202c424141,0x20636f6c2e0a3b37\n"
".quad 0x0a31203136322032,0x203233662e627573,0x25202c3830316625,0x6625202c31343266\n"
".quad 0x766f6d0a3b323432,0x316625203233662e,0x46336630202c3930,0x0a3b303030303030\n"
".quad 0x32203220636f6c2e,0x616d660a31203136,0x203233662e6e722e,0x25202c3031316625\n"
".quad 0x6630202c38303166,0x3030303030304633,0x3b3032326625202c,0x3233662e766f6d0a\n"
".quad 0x202c313131662520,0x4141413245336630,0x636f6c2e0a3b4241,0x3120313632203220\n"
".quad 0x3233662e67656e0a,0x202c323131662520,0x660a3b3730316625,0x33662e6e722e616d\n"
".quad 0x2c39303266252032,0x202c323131662520,0x25202c3131316625,0x6c2e0a3b30313166\n"
".quad 0x323632203220636f,0x662e67656e0a3120,0x3331316625203233,0x3b3830316625202c\n"
".quad 0x2e6e722e616d660a,0x3131662520323366,0x3331316625202c34,0x2c3930316625202c\n"
".quad 0x0a3b313232662520,0x662e6e722e616d66,0x3830326625203233,0x2c3231316625202c\n"
".quad 0x202c313131662520,0x0a0a3b3431316625,0x3a38325f37334242,0x203220636f6c2e0a\n"
".quad 0x610a312037353332,0x25203233662e6464,0x6625202c35313166,0x3734326625202c32\n"
".quad 0x33662e6464610a3b,0x2c36313166252032,0x202c353131662520,0x610a3b3134326625\n"
".quad 0x25203233662e6464,0x6625202c37313166,0x326625202c363131,0x2e6464610a3b3432\n"
".quad 0x3131662520323366,0x3731316625202c38,0x3b3234326625202c,0x3233662e6464610a\n"
".quad 0x202c393131662520,0x25202c3831316625,0x64610a3b30323266,0x6625203233662e64\n"
".quad 0x316625202c303231,0x30326625202c3931,0x662e6464610a3b38,0x3132316625203233\n"
".quad 0x2c3032316625202c,0x0a3b393032662520,0x203233662e646461,0x25202c3232316625\n"
".quad 0x6625202c31323166,0x6275730a3b313232,0x316625203233662e,0x34326625202c3332\n"
".quad 0x3432326625202c37,0x33662e6464610a3b,0x2c34323166252032,0x202c333231662520\n"
".quad 0x730a3b3032326625,0x25203233662e6275,0x6625202c35323166,0x326625202c343231\n"
".quad 0x2e6275730a3b3830,0x3231662520323366,0x3532316625202c36,0x3b3930326625202c\n"
".quad 0x3233662e6464610a,0x202c373231662520,0x25202c3632316625,0x75730a3b31323266\n"
".quad 0x6625203233662e62,0x326625202c383231,0x34326625202c3134,0x662e6464610a3b32\n"
".quad 0x3932316625203233,0x2c3832316625202c,0x0a3b303232662520,0x203233662e646461\n"
".quad 0x25202c3033316625,0x6625202c39323166,0x6275730a3b383032,0x316625203233662e\n"
".quad 0x33316625202c3133,0x3930326625202c30,0x33662e6275730a3b,0x2c32333166252032\n"
".quad 0x202c313331662520,0x6d0a3b3132326625,0x25203233662e6c75,0x6625202c33333166\n"
".quad 0x316625202c323331,0x2e616d660a3b3233,0x25203233662e6e72,0x6625202c34333166\n"
".quad 0x316625202c373231,0x33316625202c3732,0x662e766f6d0a3b33,0x3533316625203233\n"
".quad 0x304346336630202c,0x6c2e0a3b30303030,0x353332203220636f,0x2e67656e0a312037\n"
".quad 0x3331662520323366,0x3433316625202c36,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x33316625202c3733,0x3533316625202c36,0x3b3232316625202c,0x2e6e722e616d660a\n"
".quad 0x3331662520323366,0x3733316625202c38,0x334545426630202c,0x6625202c39334538\n"
".quad 0x662e67656e0a3b32,0x3933316625203233,0x3b3833316625202c,0x617261702e646c0a\n"
".quad 0x6625203233662e6d,0x5a5f5b202c393931,0x5f645f74726d3231,0x6650424174786574\n"
".quad 0x7261705f6d665f53,0x2e0a3b5d325f6d61,0x3332203220636f6c,0x616d660a31203735\n"
".quad 0x203233662e6e722e,0x25202c3034316625,0x6625202c39333166,0x326625202c393931\n"
".quad 0x33662e766f6d0a3b,0x2c31343166252032,0x3030343034663020,0x6f6c2e0a3b303030\n"
".quad 0x3735333220322063,0x722e616d660a3120,0x6625203233662e6e,0x316625202c323431\n"
".quad 0x30346630202c3732,0x202c303030303034,0x6d0a3b3232316625,0x25203233662e6c75\n"
".quad 0x6625202c33343166,0x346630202c373231,0x3b30303030303930,0x2e6e722e616d660a\n"
".quad 0x3431662520323366,0x3334316625202c34,0x2c3732316625202c,0x0a3b323431662520\n"
".quad 0x662e6e722e616d66,0x3534316625203233,0x2c3633316625202c,0x202c353331662520\n"
".quad 0x6d0a3b3434316625,0x25203233662e766f,0x6630202c36343166,0x3933453833454433\n"
".quad 0x3220636f6c2e0a3b,0x0a31203735333220,0x203233662e67656e,0x25202c3734316625\n"
".quad 0x6d660a3b35343166,0x3233662e6e722e61,0x202c383431662520,0x25202c3734316625\n"
".quad 0x6625202c36343166,0x67656e0a3b373432,0x316625203233662e,0x34316625202c3934\n"
".quad 0x722e616d660a3b38,0x6625203233662e6e,0x316625202c303531,0x39316625202c3934\n"
".quad 0x3734326625202c39,0x6e722e616d660a3b,0x316625203233662e,0x33316625202c3135\n"
".quad 0x3430346630202c32,0x25202c3030303030,0x756d0a3b32323166,0x6625203233662e6c\n"
".quad 0x316625202c323531,0x30346630202c3233,0x0a3b303030303039,0x662e6e722e616d66\n"
".quad 0x3335316625203233,0x2c3235316625202c,0x202c323331662520,0x660a3b3135316625\n"
".quad 0x33662e6e722e616d,0x2c34353166252032,0x202c363331662520,0x25202c3533316625\n"
".quad 0x656e0a3b33353166,0x6625203233662e67,0x316625202c353531,0x2e616d660a3b3435\n"
".quad 0x25203233662e6e72,0x6625202c36353166,0x316625202c353531,0x34326625202c3634\n"
".quad 0x662e67656e0a3b31,0x3735316625203233,0x3b3635316625202c,0x2e6e722e616d660a\n"
".quad 0x3531662520323366,0x3735316625202c38,0x2c3939316625202c,0x0a3b313432662520\n"
".quad 0x203233662e67656e,0x25202c3935316625,0x6d660a3b37323166,0x3233662e6e722e61\n"
".quad 0x202c303631662520,0x25202c3935316625,0x6625202c31343166,0x616d660a3b323231\n"
".quad 0x203233662e6e722e,0x25202c3136316625,0x6625202c33343166,0x316625202c373231\n"
".quad 0x2e616d660a3b3036,0x25203233662e6e72,0x6625202c32363166,0x316625202c363331\n"
".quad 0x36316625202c3533,0x662e67656e0a3b31,0x3336316625203233,0x3b3236316625202c\n"
".quad 0x2e6e722e616d660a,0x3631662520323366,0x3336316625202c34,0x2c3634316625202c\n"
".quad 0x0a3b343232662520,0x203233662e67656e,0x25202c3536316625,0x6d660a3b34363166\n"
".quad 0x3233662e6e722e61,0x202c363631662520,0x25202c3536316625,0x6625202c39393166\n"
".quad 0x67656e0a3b343232,0x316625203233662e,0x33316625202c3736,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x316625202c383631,0x34316625202c3736,0x3232316625202c31\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x35316625202c3936,0x3233316625202c32\n"
".quad 0x3b3836316625202c,0x2e6e722e616d660a,0x3731662520323366,0x3633316625202c30\n"
".quad 0x2c3533316625202c,0x0a3b393631662520,0x203233662e67656e,0x25202c3137316625\n"
".quad 0x6d660a3b30373166,0x3233662e6e722e61,0x202c323731662520,0x25202c3137316625\n"
".quad 0x6625202c36343166,0x67656e0a3b323432,0x316625203233662e,0x37316625202c3337\n"
".quad 0x722e616d660a3b32,0x6625203233662e6e,0x316625202c343731,0x39316625202c3337\n"
".quad 0x3234326625202c39,0x33662e6464610a3b,0x2c35373166252032,0x202c373231662520\n"
".quad 0x660a3b3233316625,0x33662e6e722e616d,0x2c36373166252032,0x202c353731662520\n"
".quad 0x3030303430346630,0x32316625202c3030,0x662e6c756d0a3b32,0x3737316625203233\n"
".quad 0x2c3537316625202c,0x3030393034663020,0x616d660a3b303030,0x203233662e6e722e\n"
".quad 0x25202c3837316625,0x6625202c37373166,0x316625202c353731,0x2e616d660a3b3637\n"
".quad 0x25203233662e6e72,0x6625202c39373166,0x316625202c363331,0x37316625202c3533\n"
".quad 0x662e7476630a3b38,0x25203233662e3436,0x316625202c316466,0x2e766f6d0a3b3937\n"
".quad 0x3264662520343666,0x433946336430202c,0x4237433137433137,0x6c2e0a3b43314438\n"
".quad 0x353332203220636f,0x2e7476630a312037,0x203233662e343666,0x6625202c33646625\n"
".quad 0x67656e0a3b303232,0x646625203436662e,0x3b31646625202c34,0x2e6e722e616d660a\n"
".quad 0x3564662520343666,0x202c34646625202c,0x6625202c32646625,0x2e7476630a3b3364\n"
".quad 0x203233662e343666,0x6625202c36646625,0x67656e0a3b393931,0x646625203436662e\n"
".quad 0x3b36646625202c37,0x2e6e722e616d660a,0x3864662520343666,0x202c37646625202c\n"
".quad 0x6625202c35646625,0x2e7476630a3b3364,0x662e3233662e6e72,0x3038316625203436\n"
".quad 0x0a3b38646625202c,0x203233662e627573,0x25202c3138316625,0x6625202c32333166\n"
".quad 0x6f6c2e0a3b373231,0x3735333220322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x316625202c323831,0x30346630202c3138,0x202c303030303034,0x6d0a3b3232316625\n"
".quad 0x25203233662e6c75,0x6625202c33383166,0x346630202c313831,0x3b30303030303930\n"
".quad 0x2e6e722e616d660a,0x3831662520323366,0x3338316625202c34,0x2c3138316625202c\n"
".quad 0x0a3b323831662520,0x662e6e722e616d66,0x3538316625203233,0x2c3633316625202c\n"
".quad 0x202c353331662520,0x630a3b3438316625,0x662e3436662e7476,0x2c39646625203233\n"
".quad 0x0a3b353831662520,0x2e3436662e747663,0x3164662520323366,0x3830326625202c30\n"
".quad 0x36662e67656e0a3b,0x2c31316466252034,0x660a3b3964662520,0x36662e6e722e616d\n"
".quad 0x2c32316466252034,0x202c313164662520,0x6625202c32646625,0x616d660a3b303164\n"
".quad 0x203436662e6e722e,0x25202c3331646625,0x646625202c376466,0x31646625202c3231\n"
".quad 0x722e7476630a3b30,0x36662e3233662e6e,0x2c36383166252034,0x0a3b333164662520\n"
".quad 0x203233662e627573,0x25202c3738316625,0x6625202c39353166,0x616d660a3b323331\n"
".quad 0x203233662e6e722e,0x25202c3838316625,0x6630202c37383166,0x3030303030343034\n"
".quad 0x3b3232316625202c,0x3233662e6c756d0a,0x202c393831662520,0x30202c3738316625\n"
".quad 0x3030303039303466,0x722e616d660a3b30,0x6625203233662e6e,0x316625202c303931\n"
".quad 0x38316625202c3938,0x3838316625202c37,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x33316625202c3139,0x3533316625202c36,0x3b3039316625202c,0x3436662e7476630a\n"
".quad 0x646625203233662e,0x39316625202c3431,0x662e7476630a3b31,0x25203233662e3436\n"
".quad 0x6625202c35316466,0x67656e0a3b393032,0x646625203436662e,0x31646625202c3631\n"
".quad 0x722e616d660a3b34,0x6625203436662e6e,0x646625202c373164,0x32646625202c3631\n"
".quad 0x3b3531646625202c,0x2e6e722e616d660a,0x3164662520343666,0x2c37646625202c38\n"
".quad 0x202c373164662520,0x630a3b3531646625,0x33662e6e722e7476,0x6625203436662e32\n"
".quad 0x646625202c323931,0x2e6275730a3b3831,0x3931662520323366,0x3732316625202c33\n"
".quad 0x3b3233316625202c,0x2e6e722e616d660a,0x3931662520323366,0x3339316625202c34\n"
".quad 0x303430346630202c,0x6625202c30303030,0x6c756d0a3b323231,0x316625203233662e\n"
".quad 0x39316625202c3539,0x3930346630202c33,0x660a3b3030303030,0x33662e6e722e616d\n"
".quad 0x2c36393166252032,0x202c353931662520,0x25202c3339316625,0x6d660a3b34393166\n"
".quad 0x3233662e6e722e61,0x202c373931662520,0x25202c3633316625,0x6625202c35333166\n"
".quad 0x7476630a3b363931,0x3233662e3436662e,0x202c393164662520,0x630a3b3739316625\n"
".quad 0x662e3436662e7476,0x3032646625203233,0x3b3132326625202c,0x3436662e67656e0a\n"
".quad 0x202c313264662520,0x660a3b3931646625,0x36662e6e722e616d,0x2c32326466252034\n"
".quad 0x202c313264662520,0x6625202c32646625,0x616d660a3b303264,0x203436662e6e722e\n"
".quad 0x25202c3332646625,0x646625202c376466,0x32646625202c3232,0x722e7476630a3b30\n"
".quad 0x36662e3233662e6e,0x2c38393166252034,0x0a3b333264662520,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c353231,0x5f645f74726d3231,0x6650424174786574\n"
".quad 0x7261705f6d665f53,0x2e0a3b5d335f6d61,0x3332203220636f6c,0x64616d0a31203132\n"
".quad 0x203436732e6f6c2e,0x25202c38366c7225,0x7225202c34316c72,0x7225202c3532316c\n"
".quad 0x2e646c0a3b35316c,0x36752e6d61726170,0x3232316c72252034,0x6d32315a5f5b202c\n"
".quad 0x7865745f645f7472,0x665f536650424174,0x5f6d617261705f6d,0x617476630a3b5d31\n"
".quad 0x626f6c672e6f742e,0x25203436752e6c61,0x7225202c39366c72,0x68730a3b3232316c\n"
".quad 0x7225203436622e6c,0x6c7225202c30376c,0x0a3b3233202c3836,0x203436732e726873\n"
".quad 0x25202c31376c7225,0x3233202c30376c72,0x3220636f6c2e0a3b,0x0a31203935333220\n"
".quad 0x203436622e6c6873,0x25202c32376c7225,0x3b32202c31376c72,0x3436732e6464610a\n"
".quad 0x202c33376c722520,0x25202c39366c7225,0x74730a3b32376c72,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x316625202c5d3337,0x2e6464610a3b3034,0x376c722520343673\n"
".quad 0x34316c7225202c34,0x2e0a3b383637202c,0x3332203220636f6c,0x64616d0a31203036\n"
".quad 0x203436732e6f6c2e,0x25202c35376c7225,0x7225202c34376c72,0x7225202c3532316c\n"
".quad 0x6c68730a3b35316c,0x6c7225203436622e,0x376c7225202c3637,0x730a3b3233202c35\n"
".quad 0x25203436732e7268,0x7225202c37376c72,0x3b3233202c36376c,0x203220636f6c2e0a\n"
".quad 0x730a312030363332,0x25203436622e6c68,0x7225202c38376c72,0x0a3b32202c37376c\n"
".quad 0x203436732e646461,0x25202c39376c7225,0x7225202c39366c72,0x2e74730a3b38376c\n"
".quad 0x662e6c61626f6c67,0x376c72255b203233,0x35316625202c5d39,0x732e6464610a3b30\n"
".quad 0x30386c7225203436,0x2c34316c7225202c,0x2e0a3b3633353120,0x3332203220636f6c\n"
".quad 0x64616d0a31203136,0x203436732e6f6c2e,0x25202c31386c7225,0x7225202c30386c72\n"
".quad 0x7225202c3532316c,0x6c68730a3b35316c,0x6c7225203436622e,0x386c7225202c3238\n"
".quad 0x730a3b3233202c31,0x25203436732e7268,0x7225202c33386c72,0x3b3233202c32386c\n"
".quad 0x203220636f6c2e0a,0x730a312031363332,0x25203436622e6c68,0x7225202c34386c72\n"
".quad 0x0a3b32202c33386c,0x203436732e646461,0x25202c35386c7225,0x7225202c39366c72\n"
".quad 0x2e74730a3b34386c,0x662e6c61626f6c67,0x386c72255b203233,0x35316625202c5d35\n"
".quad 0x732e6464610a3b38,0x36386c7225203436,0x2c34316c7225202c,0x2e0a3b3430333220\n"
".quad 0x3332203220636f6c,0x64616d0a31203236,0x203436732e6f6c2e,0x25202c37386c7225\n"
".quad 0x7225202c36386c72,0x7225202c3532316c,0x6c68730a3b35316c,0x6c7225203436622e\n"
".quad 0x386c7225202c3838,0x730a3b3233202c37,0x25203436732e7268,0x7225202c39386c72\n"
".quad 0x3b3233202c38386c,0x203220636f6c2e0a,0x730a312032363332,0x25203436622e6c68\n"
".quad 0x7225202c30396c72,0x0a3b32202c39386c,0x203436732e646461,0x25202c31396c7225\n"
".quad 0x7225202c39366c72,0x2e74730a3b30396c,0x662e6c61626f6c67,0x396c72255b203233\n"
".quad 0x36316625202c5d31,0x732e6464610a3b36,0x32396c7225203436,0x2c34316c7225202c\n"
".quad 0x2e0a3b3237303320,0x3332203220636f6c,0x64616d0a31203336,0x203436732e6f6c2e\n"
".quad 0x25202c33396c7225,0x7225202c32396c72,0x7225202c3532316c,0x6c68730a3b35316c\n"
".quad 0x6c7225203436622e,0x396c7225202c3439,0x730a3b3233202c33,0x25203436732e7268\n"
".quad 0x7225202c35396c72,0x3b3233202c34396c,0x203220636f6c2e0a,0x730a312033363332\n"
".quad 0x25203436622e6c68,0x7225202c36396c72,0x0a3b32202c35396c,0x203436732e646461\n"
".quad 0x25202c37396c7225,0x7225202c39366c72,0x2e74730a3b36396c,0x662e6c61626f6c67\n"
".quad 0x396c72255b203233,0x37316625202c5d37,0x732e6464610a3b34,0x38396c7225203436\n"
".quad 0x2c34316c7225202c,0x2e0a3b3034383320,0x3332203220636f6c,0x64616d0a31203436\n"
".quad 0x203436732e6f6c2e,0x25202c39396c7225,0x7225202c38396c72,0x7225202c3532316c\n"
".quad 0x6c68730a3b35316c,0x6c7225203436622e,0x6c7225202c303031,0x0a3b3233202c3939\n"
".quad 0x203436732e726873,0x202c3130316c7225,0x202c3030316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2034363332203220,0x36622e6c68730a31,0x3230316c72252034,0x3130316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c333031,0x316c7225202c3936\n"
".quad 0x672e74730a3b3230,0x33662e6c61626f6c,0x30316c72255b2032,0x38316625202c5d33\n"
".quad 0x732e6464610a3b30,0x30316c7225203436,0x34316c7225202c34,0x0a3b38303634202c\n"
".quad 0x32203220636f6c2e,0x616d0a3120353633,0x3436732e6f6c2e64,0x2c3530316c722520\n"
".quad 0x2c3430316c722520,0x2c3532316c722520,0x0a3b35316c722520,0x203436622e6c6873\n"
".quad 0x202c3630316c7225,0x202c3530316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3730,0x0a3b3233202c3630,0x32203220636f6c2e,0x68730a3120353633\n"
".quad 0x7225203436622e6c,0x7225202c3830316c,0x3b32202c3730316c,0x3436732e6464610a\n"
".quad 0x2c3930316c722520,0x202c39366c722520,0x0a3b3830316c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3930316c72,0x2e0a3b3638316625,0x3332203220636f6c\n"
".quad 0x64616d0a31203636,0x203436732e6f6c2e,0x202c3131316c7225,0x25202c36316c7225\n"
".quad 0x25202c3532316c72,0x68730a3b35316c72,0x7225203436622e6c,0x7225202c3231316c\n"
".quad 0x3233202c3131316c,0x36732e7268730a3b,0x3331316c72252034,0x3231316c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x363332203220636f,0x2e6c68730a312036,0x316c722520343662\n"
".quad 0x316c7225202c3431,0x610a3b32202c3331,0x25203436732e6464,0x25202c3531316c72\n"
".quad 0x7225202c39366c72,0x74730a3b3431316c,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d353131,0x6f6c2e0a3b323931,0x3736333220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3731316c,0x6c7225202c32326c,0x6c7225202c353231\n"
".quad 0x2e6c68730a3b3531,0x316c722520343662,0x316c7225202c3831,0x0a3b3233202c3731\n"
".quad 0x203436732e726873,0x202c3931316c7225,0x202c3831316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2037363332203220,0x36622e6c68730a31,0x3032316c72252034,0x3931316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c313231,0x316c7225202c3936\n"
".quad 0x672e74730a3b3032,0x33662e6c61626f6c,0x32316c72255b2032,0x39316625202c5d31\n"
".quad 0x20636f6c2e0a3b38,0x3220303733322032,0x0a7d0a3b7465720a,0x207972746e652e0a\n"
".quad 0x5f74726d32315a5f,0x4142747865745f64,0x0a286d665f536650,0x2e206d617261702e\n"
".quad 0x32315a5f20343675,0x65745f645f74726d,0x5f53665041427478,0x6d617261705f6d66\n"
".quad 0x7261702e0a2c305f,0x203436752e206d61,0x5f74726d32315a5f,0x4142747865745f64\n"
".quad 0x705f6d665f536650,0x0a2c315f6d617261,0x2e206d617261702e,0x32315a5f20323366\n"
".quad 0x65745f645f74726d,0x5f53665041427478,0x6d617261705f6d66,0x7261702e0a2c325f\n"
".quad 0x203436752e206d61,0x5f74726d32315a5f,0x4142747865745f64,0x705f6d665f536650\n"
".quad 0x290a335f6d617261,0x206765722e0a7b0a,0x3c6625203233662e,0x722e0a3b3e383432\n"
".quad 0x203436662e206765,0x3b3e34323c646625,0x702e206765722e0a,0x313c702520646572\n"
".quad 0x6765722e0a3b3e34,0x7225203233732e20,0x722e0a3b3e32393c,0x203436732e206765\n"
".quad 0x3e3832313c6c7225,0x702e646c0a0a0a3b,0x3436752e6d617261,0x5b202c356c722520\n"
".quad 0x5f74726d32315a5f,0x4142747865745f64,0x705f6d665f536650,0x3b5d305f6d617261\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x315a5f5b202c326c,0x745f645f74726d32\n"
".quad 0x5366504142747865,0x617261705f6d665f,0x76630a3b5d335f6d,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x25202c366c722520,0x6f6c2e0a3b356c72,0x3437333220322063\n"
".quad 0x752e766f6d0a3120,0x202c327225203233,0x3b782e6469746e25,0x3233752e766f6d0a\n"
".quad 0x6325202c33722520,0x0a3b782e64696174,0x203233752e766f6d,0x697425202c347225\n"
".quad 0x64616d0a3b782e64,0x203233732e6f6c2e,0x327225202c357225,0x25202c337225202c\n"
".quad 0x636f6c2e0a3b3472,0x2035373332203220,0x33752e766f6d0a31,0x25202c3672252032\n"
".quad 0x0a3b792e6469746e,0x203233752e766f6d,0x746325202c377225,0x6d0a3b792e646961\n"
".quad 0x25203233752e766f,0x64697425202c3872,0x2e64616d0a3b792e,0x25203233732e6f6c\n"
".quad 0x2c367225202c3972,0x7225202c37722520,0x752e7476630a3b38,0x25203233752e3436\n"
".quad 0x357225202c376c72,0x3220636f6c2e0a3b,0x0a31203637333220,0x2e3436752e747663\n"
".quad 0x386c722520323375,0x6d0a3b397225202c,0x36732e6f6c2e6461,0x202c396c72252034\n"
".quad 0x7225202c386c7225,0x376c7225202c326c,0x36622e6c68730a3b,0x2c30316c72252034\n"
".quad 0x33202c396c722520,0x732e7268730a3b32,0x31316c7225203436,0x2c30316c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x3837333220322063,0x622e6c68730a3120,0x32316c7225203436\n"
".quad 0x2c31316c7225202c,0x2e6464610a3b3220,0x316c722520343673,0x2c366c7225202c33\n"
".quad 0x0a3b32316c722520,0x61626f6c672e646c,0x6625203233662e6c,0x316c72255b202c32\n"
".quad 0x636f6c2e0a3b5d33,0x2039373332203220,0x6e722e7476630a31,0x3233732e3233662e\n"
".quad 0x7225202c33662520,0x662e6464610a3b35,0x2c35346625203233,0x6630202c33662520\n"
".quad 0x3030303030304633,0x33732e6464610a3b,0x202c313172252032,0x3b312d202c397225\n"
".quad 0x203220636f6c2e0a,0x630a312039373332,0x33662e6e722e7476,0x6625203233732e32\n"
".quad 0x31317225202c3338,0x33662e6464610a3b,0x202c303766252032,0x6630202c33386625\n"
".quad 0x3030303030304633,0x33752e766f6d0a3b,0x202c313972252032,0x786574090a0a3b30\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x6625202c35336625,0x37336625202c3633\n"
".quad 0x2c7d38336625202c,0x6665527865745b20,0x257b202c4232665f,0x376625202c353466\n"
".quad 0x2e090a0a3b5d7d30,0x3332203220636f6c,0x6464610a31203038,0x317225203233732e\n"
".quad 0x202c397225202c33,0x722e7476630a3b31,0x33732e3233662e6e,0x202c343866252032\n"
".quad 0x64610a3b33317225,0x6625203233662e64,0x34386625202c3238,0x303046336630202c\n"
".quad 0x090a0a3b30303030,0x762e64322e786574,0x33662e3233662e34,0x2c313466257b2032\n"
".quad 0x25202c3234662520,0x346625202c333466,0x7865745b202c7d34,0x2c4234665f666552\n"
".quad 0x202c353466257b20,0x0a3b5d7d32386625,0x33732e646461090a,0x202c343172252032\n"
".quad 0x3b312d202c357225,0x203220636f6c2e0a,0x630a312031383332,0x33662e6e722e7476\n"
".quad 0x6625203233732e32,0x34317225202c3538,0x33662e6464610a3b,0x202c313866252032\n"
".quad 0x6630202c35386625,0x3030303030304633,0x6e722e7476630a3b,0x3233732e3233662e\n"
".quad 0x7225202c36662520,0x662e6464610a3b39,0x2c38356625203233,0x6630202c36662520\n"
".quad 0x3030303030304633,0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x346625202c373466,0x2c39346625202c38,0x202c7d3035662520,0x5f6665527865745b\n"
".quad 0x66257b202c423166,0x38356625202c3138,0x6c2e090a0a3b5d7d,0x383332203220636f\n"
".quad 0x2e6464610a312032,0x3531722520323373,0x31202c357225202c,0x6e722e7476630a3b\n"
".quad 0x3233732e3233662e,0x25202c3638662520,0x6464610a3b353172,0x376625203233662e\n"
".quad 0x2c36386625202c35,0x3030304633663020,0x74090a0a3b303030,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x202c333566257b20,0x6625202c34356625,0x36356625202c3535\n"
".quad 0x527865745b202c7d,0x202c4233665f6665,0x25202c353766257b,0x0a0a3b5d7d383566\n"
".quad 0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e,0x30366625202c3935\n"
".quad 0x202c31366625202c,0x5b202c7d32366625,0x665f666552786574,0x3866257b202c4235\n"
".quad 0x7d30376625202c31,0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x202c353666257b20,0x6625202c36366625,0x38366625202c3736,0x527865745b202c7d\n"
".quad 0x202c4236665f6665,0x25202c353766257b,0x0a0a3b5d7d303766,0x322e786574090a09\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x32376625202c3137,0x202c33376625202c\n"
".quad 0x5b202c7d34376625,0x665f666552786574,0x3766257b202c4237,0x7d32386625202c35\n"
".quad 0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e,0x202c373766257b20\n"
".quad 0x6625202c38376625,0x30386625202c3937,0x527865745b202c7d,0x202c4238665f6665\n"
".quad 0x25202c313866257b,0x0a0a3b5d7d323866,0x203220636f6c2e09,0x7465730a31203238\n"
".quad 0x3233662e746c2e70,0x6625202c31702520,0x4344336630202c33,0x2e0a3b4443434343\n"
".quad 0x3332203220636f6c,0x766f6d0a31203638,0x316625203233662e,0x3b37376625202c32\n"
".quad 0x203220636f6c2e0a,0x6d0a312035383332,0x25203233662e766f,0x6625202c39303266\n"
".quad 0x636f6c2e0a3b3137,0x2034383332203220,0x33662e766f6d0a31,0x2c38303266252032\n"
".quad 0x2e0a3b3536662520,0x3332203220636f6c,0x766f6d0a31203338,0x396625203233662e\n"
".quad 0x0a3b39356625202c,0x32203220636f6c2e,0x6f6d0a3120323833,0x6625203233662e76\n"
".quad 0x356625202c343232,0x20636f6c2e0a3b33,0x3120313833322032,0x3233662e766f6d0a\n"
".quad 0x202c373432662520,0x6c2e0a3b37346625,0x383332203220636f,0x2e766f6d0a312030\n"
".quad 0x2c35662520323366,0x2e0a3b3134662520,0x3332203220636f6c,0x766f6d0a31203937\n"
".quad 0x346625203233662e,0x0a3b35336625202c,0x38203220636f6c2e,0x317025400a312032\n"
".quad 0x3342422061726220,0x6f6d0a0a3b395f38,0x7225203233752e76,0x34323031202c3032\n"
".quad 0x3220636f6c2e0a3b,0x75730a3120343820,0x7225203233732e62,0x30327225202c3132\n"
".quad 0x630a3b357225202c,0x33662e6e722e7476,0x6625203233732e32,0x31327225202c3738\n"
".quad 0x6c2e707465730a3b,0x7025203233662e74,0x2c37386625202c32,0x4343384633663020\n"
".quad 0x7025400a3b444343,0x4242206172622032,0x6d0a0a3b385f3833,0x25203233752e766f\n"
".quad 0x383637202c363272,0x3220636f6c2e0a3b,0x75730a3120363820,0x7225203233732e62\n"
".quad 0x36327225202c3732,0x630a3b397225202c,0x33662e6e722e7476,0x6625203233732e32\n"
".quad 0x37327225202c3838,0x6c2e707465730a3b,0x7025203233662e74,0x2c38386625202c33\n"
".quad 0x4343384633663020,0x7025400a3b444343,0x4242206172622033,0x2e0a0a3b375f3833\n"
".quad 0x3838203220636f6c,0x2e707465730a3120,0x25203233662e746c,0x2c366625202c3470\n"
".quad 0x4343434433663020,0x7025400a3b444343,0x4242206172622034,0x610a0a3b365f3833\n"
".quad 0x25203233662e6464,0x336625202c393866,0x464633436630202c,0x64610a3b30303043\n"
".quad 0x6625203233662e64,0x2c366625202c3039,0x4346423343663020,0x6f6c2e0a3b303030\n"
".quad 0x3120303920322063,0x3233662e6c756d0a,0x25202c3139662520,0x396625202c303966\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x39386625202c3239,0x202c39386625202c\n"
".quad 0x65730a3b31396625,0x33662e746c2e7074,0x25202c3570252032,0x346630202c323966\n"
".quad 0x3b30303030303832,0x726220357025400a,0x355f383342422061,0x6e752e6172620a3b\n"
".quad 0x315f383342422069,0x383342420a0a3b30,0x2e766f6d0a3a355f,0x3139722520323375\n"
".quad 0x72620a3b3031202c,0x424220696e752e61,0x0a0a3b30315f3833,0x0a3a365f38334242\n"
".quad 0x203233752e766f6d,0x3231202c31397225,0x6e752e6172620a3b,0x315f383342422069\n"
".quad 0x383342420a0a3b30,0x2e766f6d0a3a375f,0x3139722520323375,0x72620a3b3131202c\n"
".quad 0x424220696e752e61,0x0a0a3b30315f3833,0x0a3a385f38334242,0x203233752e766f6d\n"
".quad 0x3b32202c31397225,0x696e752e6172620a,0x30315f3833424220,0x5f383342420a0a3b\n"
".quad 0x752e766f6d0a3a39,0x2c31397225203233,0x3342420a0a3b3320,0x6c2e0a3a30315f38\n"
".quad 0x373332203220636f,0x2e7476630a312036,0x203233732e343673,0x25202c34316c7225\n"
".quad 0x2e7476630a3b3972,0x203233752e343675,0x25202c35316c7225,0x2e6464610a3b3572\n"
".quad 0x316c722520343673,0x34316c7225202c36,0x0a3b36373335202c,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c373231,0x5f645f74726d3231,0x6650414274786574\n"
".quad 0x7261705f6d665f53,0x2e0a3b5d335f6d61,0x3432203220636f6c,0x64616d0a31203132\n"
".quad 0x203436732e6f6c2e,0x25202c37316c7225,0x7225202c36316c72,0x7225202c3732316c\n"
".quad 0x2e646c0a3b35316c,0x36752e6d61726170,0x3432316c72252034,0x6d32315a5f5b202c\n"
".quad 0x7865745f645f7472,0x665f536650414274,0x5f6d617261705f6d,0x617476630a3b5d31\n"
".quad 0x626f6c672e6f742e,0x25203436752e6c61,0x7225202c38316c72,0x68730a3b3432316c\n"
".quad 0x7225203436622e6c,0x6c7225202c39316c,0x0a3b3233202c3731,0x203436732e726873\n"
".quad 0x25202c30326c7225,0x3233202c39316c72,0x3220636f6c2e0a3b,0x0a31203132343220\n"
".quad 0x203436622e6c6873,0x25202c31326c7225,0x3b32202c30326c72,0x3436732e6464610a\n"
".quad 0x25202c336c722520,0x7225202c38316c72,0x6464610a3b31326c,0x6c7225203436732e\n"
".quad 0x316c7225202c3232,0x3b34343136202c34,0x203220636f6c2e0a,0x6d0a312032323432\n"
".quad 0x36732e6f6c2e6461,0x2c33326c72252034,0x202c32326c722520,0x202c3732316c7225\n"
".quad 0x730a3b35316c7225,0x25203436622e6c68,0x7225202c34326c72,0x3b3233202c33326c\n"
".quad 0x3436732e7268730a,0x202c35326c722520,0x33202c34326c7225,0x20636f6c2e0a3b32\n"
".quad 0x3120323234322032,0x3436622e6c68730a,0x202c36326c722520,0x32202c35326c7225\n"
".quad 0x36732e6464610a3b,0x202c346c72252034,0x25202c38316c7225,0x65730a3b36326c72\n"
".quad 0x33732e71652e7074,0x25202c3670252032,0x0a3b31202c313972,0x6172622036702540\n"
".quad 0x32315f3833424220,0x2e707465730a0a3b,0x25203233732e656e,0x31397225202c3770\n"
".quad 0x25400a3b3031202c,0x4220617262203770,0x0a3b33315f383342,0x32315f383342420a\n"
".quad 0x36732e6464610a3a,0x2c38326c72252034,0x202c34316c722520,0x2e646c0a3b383637\n"
".quad 0x36752e6d61726170,0x3632316c72252034,0x6d32315a5f5b202c,0x7865745f645f7472\n"
".quad 0x665f536650414274,0x5f6d617261705f6d,0x636f6c2e0a3b5d33,0x2035313432203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x326c7225202c3033,0x32316c7225202c38\n"
".quad 0x35316c7225202c36,0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3332316c72\n"
".quad 0x5f74726d32315a5f,0x4142747865745f64,0x705f6d665f536650,0x3b5d315f6d617261\n"
".quad 0x6f742e617476630a,0x2e6c61626f6c672e,0x336c722520343675,0x32316c7225202c31\n"
".quad 0x622e6c68730a3b33,0x32336c7225203436,0x2c30336c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x336c7225202c3333,0x2e0a3b3233202c32,0x3432203220636f6c\n"
".quad 0x6c68730a31203531,0x6c7225203436622e,0x336c7225202c3433,0x64610a3b32202c33\n"
".quad 0x7225203436732e64,0x6c7225202c35336c,0x336c7225202c3133,0x20636f6c2e0a3b34\n"
".quad 0x3120303933322032,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d35336c7225\n"
".quad 0x64610a3b33356625,0x7225203436732e64,0x6c7225202c36336c,0x36333531202c3431\n"
".quad 0x3220636f6c2e0a3b,0x0a31203631343220,0x732e6f6c2e64616d,0x37336c7225203436\n"
".quad 0x2c36336c7225202c,0x2c3632316c722520,0x0a3b35316c722520,0x203436622e6c6873\n"
".quad 0x25202c38336c7225,0x3233202c37336c72,0x36732e7268730a3b,0x2c39336c72252034\n"
".quad 0x202c38336c722520,0x636f6c2e0a3b3233,0x2036313432203220,0x36622e6c68730a31\n"
".quad 0x2c30346c72252034,0x202c39336c722520,0x732e6464610a3b32,0x31346c7225203436\n"
".quad 0x2c31336c7225202c,0x0a3b30346c722520,0x32203220636f6c2e,0x74730a3120313933\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x346625202c5d3134,0x732e6464610a3b31\n"
".quad 0x32346c7225203436,0x2c34316c7225202c,0x2e0a3b3430333220,0x3432203220636f6c\n"
".quad 0x64616d0a31203731,0x203436732e6f6c2e,0x25202c33346c7225,0x7225202c32346c72\n"
".quad 0x7225202c3632316c,0x6c68730a3b35316c,0x6c7225203436622e,0x346c7225202c3434\n"
".quad 0x730a3b3233202c33,0x25203436732e7268,0x7225202c35346c72,0x3b3233202c34346c\n"
".quad 0x203220636f6c2e0a,0x730a312037313432,0x25203436622e6c68,0x7225202c36346c72\n"
".quad 0x0a3b32202c35346c,0x203436732e646461,0x25202c37346c7225,0x7225202c31336c72\n"
".quad 0x6f6c2e0a3b36346c,0x3239333220322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x5d37346c72255b20,0x0a3b37346625202c,0x203436732e646461,0x25202c38346c7225\n"
".quad 0x3033202c34316c72,0x636f6c2e0a3b3237,0x2038313432203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x346c7225202c3934,0x32316c7225202c38,0x35316c7225202c36\n"
".quad 0x36622e6c68730a3b,0x2c30356c72252034,0x202c39346c722520,0x2e7268730a3b3233\n"
".quad 0x356c722520343673,0x30356c7225202c31,0x6c2e0a3b3233202c,0x313432203220636f\n"
".quad 0x2e6c68730a312038,0x356c722520343662,0x31356c7225202c32,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x336c7225202c3335,0x32356c7225202c31,0x3220636f6c2e0a3b\n"
".quad 0x0a31203339333220,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d33356c72\n"
".quad 0x6464610a3b353366,0x6c7225203436732e,0x316c7225202c3435,0x3b30343833202c34\n"
".quad 0x203220636f6c2e0a,0x6d0a312039313432,0x36732e6f6c2e6461,0x2c35356c72252034\n"
".quad 0x202c34356c722520,0x202c3632316c7225,0x730a3b35316c7225,0x25203436622e6c68\n"
".quad 0x7225202c36356c72,0x3b3233202c35356c,0x3436732e7268730a,0x202c37356c722520\n"
".quad 0x33202c36356c7225,0x20636f6c2e0a3b32,0x3120393134322032,0x3436622e6c68730a\n"
".quad 0x202c38356c722520,0x32202c37356c7225,0x36732e6464610a3b,0x2c39356c72252034\n"
".quad 0x202c31336c722520,0x2e0a3b38356c7225,0x3332203220636f6c,0x2e74730a31203439\n"
".quad 0x662e6c61626f6c67,0x356c72255b203233,0x31376625202c5d39,0x36732e6464610a3b\n"
".quad 0x2c30366c72252034,0x202c34316c722520,0x6c2e0a3b38303634,0x323432203220636f\n"
".quad 0x2e64616d0a312030,0x25203436732e6f6c,0x7225202c31366c72,0x6c7225202c30366c\n"
".quad 0x6c7225202c363231,0x2e6c68730a3b3531,0x366c722520343662,0x31366c7225202c32\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c33366c,0x0a3b3233202c3236\n"
".quad 0x32203220636f6c2e,0x68730a3120303234,0x7225203436622e6c,0x6c7225202c34366c\n"
".quad 0x610a3b32202c3336,0x25203436732e6464,0x7225202c35366c72,0x6c7225202c31336c\n"
".quad 0x636f6c2e0a3b3436,0x2035393332203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x2c5d35366c72255b,0x2e0a3b3737662520,0x3332203220636f6c,0x2e74730a31203639\n"
".quad 0x662e6c61626f6c67,0x336c72255b203233,0x3b39356625202c5d,0x203220636f6c2e0a\n"
".quad 0x730a312037393332,0x6c61626f6c672e74,0x72255b203233662e,0x366625202c5d346c\n"
".quad 0x20636f6c2e0a3b35,0x3220353234322032,0x420a0a3b7465720a,0x0a3a33315f383342\n"
".quad 0x32203220636f6c2e,0x65730a3120303034,0x33732e71652e7074,0x25202c3870252032\n"
".quad 0x0a3b32202c313972,0x6172622038702540,0x32325f3833424220,0x20636f6c2e0a0a3b\n"
".quad 0x3120343034322032,0x71652e707465730a,0x397025203233732e,0x202c31397225202c\n"
".quad 0x20397025400a3b33,0x3833424220617262,0x6f6d0a0a3b36315f,0x6625203233662e76\n"
".quad 0x316625202c313232,0x662e766f6d0a3b32,0x3032326625203233,0x6d0a3b396625202c\n"
".quad 0x25203233662e766f,0x6625202c32343266,0x662e766f6d0a3b35,0x3134326625203233\n"
".quad 0x620a3b346625202c,0x4220696e752e6172,0x0a3b38325f383342,0x36315f383342420a\n"
".quad 0x3220636f6c2e0a3a,0x730a312030373220,0x732e71652e707465,0x2c30317025203233\n"
".quad 0x3b30202c39722520,0x622030317025400a,0x5f38334242206172,0x6f6c2e0a0a3b3032\n"
".quad 0x2034373220322063,0x652e707465730a31,0x7025203233732e71,0x2c397225202c3131\n"
".quad 0x25400a3b37363720,0x2061726220313170,0x3b39315f38334242,0x33662e766f6d0a0a\n"
".quad 0x2c31313266252032,0x0a3b393032662520,0x203233662e766f6d,0x25202c3031326625\n"
".quad 0x6f6d0a3b38303266,0x6625203233662e76,0x356625202c363432,0x33662e766f6d0a3b\n"
".quad 0x2c35343266252032,0x72620a3b34662520,0x424220696e752e61,0x0a0a3b31325f3833\n"
".quad 0x3a39315f38334242,0x3233662e766f6d0a,0x202c303132662520,0x6d0a3b3830326625\n"
".quad 0x25203233662e766f,0x6625202c31313266,0x766f6d0a3b383032,0x326625203233662e\n"
".quad 0x3b346625202c3534,0x3233662e766f6d0a,0x202c363432662520,0x6172620a3b346625\n"
".quad 0x33424220696e752e,0x420a0a3b31325f38,0x0a3a30325f383342,0x203233662e766f6d\n"
".quad 0x25202c3031326625,0x6f6d0a3b39303266,0x6625203233662e76,0x326625202c313132\n"
".quad 0x2e766f6d0a3b3930,0x3432662520323366,0x0a3b356625202c35,0x203233662e766f6d\n"
".quad 0x25202c3634326625,0x3342420a0a3b3566,0x6f6d0a3a31325f38,0x6625203233662e76\n"
".quad 0x326625202c323432,0x2e766f6d0a3b3634,0x3432662520323366,0x3534326625202c31\n"
".quad 0x33662e766f6d0a3b,0x2c39303266252032,0x0a3b313132662520,0x203233662e766f6d\n"
".quad 0x25202c3830326625,0x6f6d0a3b30313266,0x6625203233662e76,0x44336630202c3339\n"
".quad 0x0a3b413037443341,0x32203220636f6c2e,0x616d660a31203138,0x203233662e6e722e\n"
".quad 0x25202c3734326625,0x336630202c333966,0x2c42414141413246,0x2e0a3b3335662520\n"
".quad 0x3832203220636f6c,0x2e6275730a312032,0x3439662520323366,0x2c3134326625202c\n"
".quad 0x0a3b323432662520,0x203233662e766f6d,0x6630202c35396625,0x3030303030304633\n"
".quad 0x3220636f6c2e0a3b,0x6e0a312032383220,0x25203233662e6765,0x396625202c363966\n"
".quad 0x722e616d660a3b34,0x6625203233662e6e,0x36396625202c3739,0x202c35396625202c\n"
".quad 0x660a3b3930326625,0x33662e6e722e616d,0x2c30323266252032,0x30202c3339662520\n"
".quad 0x4141414132453366,0x3b37396625202c42,0x203220636f6c2e0a,0x6d660a3120333832\n"
".quad 0x3233662e6e722e61,0x25202c3839662520,0x336630202c343966,0x2c30303030303046\n"
".quad 0x0a3b383032662520,0x662e6e722e616d66,0x3132326625203233,0x202c33396625202c\n"
".quad 0x4141413245336630,0x38396625202c4241,0x6e752e6172620a3b,0x325f383342422069\n"
".quad 0x383342420a0a3b38,0x6f6c2e0a3a32325f,0x2037343220322063,0x652e707465730a31\n"
".quad 0x7025203233732e71,0x2c397225202c3231,0x317025400a3b3020,0x4242206172622032\n"
".quad 0x0a0a3b36325f3833,0x32203220636f6c2e,0x7465730a31203135,0x3233732e71652e70\n"
".quad 0x25202c3331702520,0x3b373637202c3972,0x622033317025400a,0x5f38334242206172\n"
".quad 0x766f6d0a0a3b3532,0x326625203233662e,0x32316625202c3332,0x33662e766f6d0a3b\n"
".quad 0x2c32323266252032,0x6f6d0a3b39662520,0x6625203233662e76,0x356625202c343432\n"
".quad 0x33662e766f6d0a3b,0x2c33343266252032,0x72620a3b34662520,0x424220696e752e61\n"
".quad 0x0a0a3b37325f3833,0x3a35325f38334242,0x3233662e766f6d0a,0x202c333232662520\n"
".quad 0x766f6d0a3b396625,0x326625203233662e,0x3b396625202c3232,0x3233662e766f6d0a\n"
".quad 0x202c343432662520,0x766f6d0a3b346625,0x326625203233662e,0x3b346625202c3334\n"
".quad 0x696e752e6172620a,0x37325f3833424220,0x5f383342420a0a3b,0x2e766f6d0a3a3632\n"
".quad 0x3232662520323366,0x3b32316625202c33,0x3233662e766f6d0a,0x202c323232662520\n"
".quad 0x6f6d0a3b32316625,0x6625203233662e76,0x356625202c343432,0x33662e766f6d0a3b\n"
".quad 0x2c33343266252032,0x420a0a3b35662520,0x0a3a37325f383342,0x203233662e766f6d\n"
".quad 0x25202c3234326625,0x6f6d0a3b34343266,0x6625203233662e76,0x326625202c313432\n"
".quad 0x2e766f6d0a3b3334,0x3232662520323366,0x3332326625202c31,0x33662e766f6d0a3b\n"
".quad 0x2c30323266252032,0x0a3b323232662520,0x32203220636f6c2e,0x6464610a31203835\n"
".quad 0x396625203233662e,0x202c326625202c39,0x610a3b3134326625,0x25203233662e6464\n"
".quad 0x6625202c30303166,0x34326625202c3939,0x662e6464610a3b32,0x3130316625203233\n"
".quad 0x202c37346625202c,0x64610a3b37346625,0x6625203233662e64,0x316625202c323031\n"
".quad 0x30316625202c3030,0x662e6464610a3b31,0x3330316625203233,0x2c3032326625202c\n"
".quad 0x0a3b303232662520,0x203233662e646461,0x25202c3430316625,0x6625202c32303166\n"
".quad 0x6464610a3b333031,0x316625203233662e,0x32326625202c3530,0x3132326625202c31\n"
".quad 0x33662e6464610a3b,0x2c36303166252032,0x202c343031662520,0x610a3b3530316625\n"
".quad 0x25203233662e6464,0x6625202c37303166,0x426630202c363031,0x3b30303030303846\n"
".quad 0x203220636f6c2e0a,0x6d660a3120303632,0x3233662e6e722e61,0x202c343232662520\n"
".quad 0x30202c3730316625,0x4141414132464266,0x3b37346625202c42,0x203220636f6c2e0a\n"
".quad 0x75730a3120313632,0x6625203233662e62,0x326625202c383031,0x34326625202c3134\n"
".quad 0x662e766f6d0a3b32,0x3930316625203233,0x303046336630202c,0x6c2e0a3b30303030\n"
".quad 0x313632203220636f,0x722e616d660a3120,0x6625203233662e6e,0x316625202c303131\n"
".quad 0x46336630202c3830,0x202c303030303030,0x6d0a3b3032326625,0x25203233662e766f\n"
".quad 0x6630202c31313166,0x4241414141324533,0x3220636f6c2e0a3b,0x6e0a312031363220\n"
".quad 0x25203233662e6765,0x6625202c32313166,0x616d660a3b373031,0x203233662e6e722e\n"
".quad 0x25202c3930326625,0x6625202c32313166,0x316625202c313131,0x636f6c2e0a3b3031\n"
".quad 0x3120323632203220,0x3233662e67656e0a,0x202c333131662520,0x660a3b3830316625\n"
".quad 0x33662e6e722e616d,0x2c34313166252032,0x202c333131662520,0x25202c3930316625\n"
".quad 0x6d660a3b31323266,0x3233662e6e722e61,0x202c383032662520,0x25202c3231316625\n"
".quad 0x6625202c31313166,0x42420a0a3b343131,0x2e0a3a38325f3833,0x3432203220636f6c\n"
".quad 0x6464610a31203231,0x316625203233662e,0x2c326625202c3531,0x0a3b373432662520\n"
".quad 0x203233662e646461,0x25202c3631316625,0x6625202c35313166,0x6464610a3b313432\n"
".quad 0x316625203233662e,0x31316625202c3731,0x3432326625202c36,0x33662e6464610a3b\n"
".quad 0x2c38313166252032,0x202c373131662520,0x610a3b3234326625,0x25203233662e6464\n"
".quad 0x6625202c39313166,0x326625202c383131,0x2e6464610a3b3032,0x3231662520323366\n"
".quad 0x3931316625202c30,0x3b3830326625202c,0x3233662e6464610a,0x202c313231662520\n"
".quad 0x25202c3032316625,0x64610a3b39303266,0x6625203233662e64,0x316625202c323231\n"
".quad 0x32326625202c3132,0x662e6275730a3b31,0x3332316625203233,0x2c3734326625202c\n"
".quad 0x0a3b343232662520,0x203233662e646461,0x25202c3432316625,0x6625202c33323166\n"
".quad 0x6275730a3b303232,0x316625203233662e,0x32316625202c3532,0x3830326625202c34\n"
".quad 0x33662e6275730a3b,0x2c36323166252032,0x202c353231662520,0x610a3b3930326625\n"
".quad 0x25203233662e6464,0x6625202c37323166,0x326625202c363231,0x2e6275730a3b3132\n"
".quad 0x3231662520323366,0x3134326625202c38,0x3b3234326625202c,0x3233662e6464610a\n"
".quad 0x202c393231662520,0x25202c3832316625,0x64610a3b30323266,0x6625203233662e64\n"
".quad 0x316625202c303331,0x30326625202c3932,0x662e6275730a3b38,0x3133316625203233\n"
".quad 0x2c3033316625202c,0x0a3b393032662520,0x203233662e627573,0x25202c3233316625\n"
".quad 0x6625202c31333166,0x6c756d0a3b313232,0x316625203233662e,0x33316625202c3333\n"
".quad 0x3233316625202c32,0x6e722e616d660a3b,0x316625203233662e,0x32316625202c3433\n"
".quad 0x3732316625202c37,0x3b3333316625202c,0x3233662e766f6d0a,0x202c353331662520\n"
".quad 0x3030304346336630,0x636f6c2e0a3b3030,0x2032313432203220,0x33662e67656e0a31\n"
".quad 0x2c36333166252032,0x0a3b343331662520,0x662e6e722e616d66,0x3733316625203233\n"
".quad 0x2c3633316625202c,0x202c353331662520,0x660a3b3232316625,0x33662e6e722e616d\n"
".quad 0x2c38333166252032,0x202c373331662520,0x4538334545426630,0x3b326625202c3933\n"
".quad 0x3233662e67656e0a,0x202c393331662520,0x6c0a3b3833316625,0x2e6d617261702e64\n"
".quad 0x3931662520323366,0x32315a5f5b202c39,0x65745f645f74726d,0x5f53665041427478\n"
".quad 0x6d617261705f6d66,0x6f6c2e0a3b5d325f,0x3231343220322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x316625202c303431,0x39316625202c3933,0x0a3b326625202c39\n"
".quad 0x203233662e766f6d,0x30202c3134316625,0x3030303034303466,0x20636f6c2e0a3b30\n"
".quad 0x3120323134322032,0x2e6e722e616d660a,0x3431662520323366,0x3732316625202c32\n"
".quad 0x303430346630202c,0x6625202c30303030,0x6c756d0a3b323231,0x316625203233662e\n"
".quad 0x32316625202c3334,0x3930346630202c37,0x660a3b3030303030,0x33662e6e722e616d\n"
".quad 0x2c34343166252032,0x202c333431662520,0x25202c3732316625,0x6d660a3b32343166\n"
".quad 0x3233662e6e722e61,0x202c353431662520,0x25202c3633316625,0x6625202c35333166\n"
".quad 0x766f6d0a3b343431,0x316625203233662e,0x44336630202c3634,0x0a3b393345383345\n"
".quad 0x32203220636f6c2e,0x656e0a3120323134,0x6625203233662e67,0x316625202c373431\n"
".quad 0x2e616d660a3b3534,0x25203233662e6e72,0x6625202c38343166,0x316625202c373431\n"
".quad 0x34326625202c3634,0x662e67656e0a3b37,0x3934316625203233,0x3b3834316625202c\n"
".quad 0x2e6e722e616d660a,0x3531662520323366,0x3934316625202c30,0x2c3939316625202c\n"
".quad 0x0a3b373432662520,0x662e6e722e616d66,0x3135316625203233,0x2c3233316625202c\n"
".quad 0x3030343034663020,0x316625202c303030,0x2e6c756d0a3b3232,0x3531662520323366\n"
".quad 0x3233316625202c32,0x303930346630202c,0x6d660a3b30303030,0x3233662e6e722e61\n"
".quad 0x202c333531662520,0x25202c3235316625,0x6625202c32333166,0x616d660a3b313531\n"
".quad 0x203233662e6e722e,0x25202c3435316625,0x6625202c36333166,0x316625202c353331\n"
".quad 0x2e67656e0a3b3335,0x3531662520323366,0x3435316625202c35,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x35316625202c3635,0x3634316625202c35,0x3b3134326625202c\n"
".quad 0x3233662e67656e0a,0x202c373531662520,0x660a3b3635316625,0x33662e6e722e616d\n"
".quad 0x2c38353166252032,0x202c373531662520,0x25202c3939316625,0x656e0a3b31343266\n"
".quad 0x6625203233662e67,0x316625202c393531,0x2e616d660a3b3732,0x25203233662e6e72\n"
".quad 0x6625202c30363166,0x316625202c393531,0x32316625202c3134,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x316625202c313631,0x32316625202c3334,0x3036316625202c37\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x33316625202c3236,0x3533316625202c36\n"
".quad 0x3b3136316625202c,0x3233662e67656e0a,0x202c333631662520,0x660a3b3236316625\n"
".quad 0x33662e6e722e616d,0x2c34363166252032,0x202c333631662520,0x25202c3634316625\n"
".quad 0x656e0a3b34323266,0x6625203233662e67,0x316625202c353631,0x2e616d660a3b3436\n"
".quad 0x25203233662e6e72,0x6625202c36363166,0x316625202c353631,0x32326625202c3939\n"
".quad 0x662e67656e0a3b34,0x3736316625203233,0x3b3233316625202c,0x2e6e722e616d660a\n"
".quad 0x3631662520323366,0x3736316625202c38,0x2c3134316625202c,0x0a3b323231662520\n"
".quad 0x662e6e722e616d66,0x3936316625203233,0x2c3235316625202c,0x202c323331662520\n"
".quad 0x660a3b3836316625,0x33662e6e722e616d,0x2c30373166252032,0x202c363331662520\n"
".quad 0x25202c3533316625,0x656e0a3b39363166,0x6625203233662e67,0x316625202c313731\n"
".quad 0x2e616d660a3b3037,0x25203233662e6e72,0x6625202c32373166,0x316625202c313731\n"
".quad 0x34326625202c3634,0x662e67656e0a3b32,0x3337316625203233,0x3b3237316625202c\n"
".quad 0x2e6e722e616d660a,0x3731662520323366,0x3337316625202c34,0x2c3939316625202c\n"
".quad 0x0a3b323432662520,0x203233662e646461,0x25202c3537316625,0x6625202c37323166\n"
".quad 0x616d660a3b323331,0x203233662e6e722e,0x25202c3637316625,0x6630202c35373166\n"
".quad 0x3030303030343034,0x3b3232316625202c,0x3233662e6c756d0a,0x202c373731662520\n"
".quad 0x30202c3537316625,0x3030303039303466,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x316625202c383731,0x37316625202c3737,0x3637316625202c35,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x33316625202c3937,0x3533316625202c36,0x3b3837316625202c\n"
".quad 0x3436662e7476630a,0x646625203233662e,0x3937316625202c31,0x36662e766f6d0a3b\n"
".quad 0x202c326466252034,0x3137433946336430,0x4438423743313743,0x636f6c2e0a3b4331\n"
".quad 0x2032313432203220,0x36662e7476630a31,0x6625203233662e34,0x32326625202c3364\n"
".quad 0x662e67656e0a3b30,0x2c34646625203436,0x660a3b3164662520,0x36662e6e722e616d\n"
".quad 0x202c356466252034,0x6625202c34646625,0x33646625202c3264,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x39316625202c3664,0x662e67656e0a3b39,0x2c37646625203436\n"
".quad 0x660a3b3664662520,0x36662e6e722e616d,0x202c386466252034,0x6625202c37646625\n"
".quad 0x33646625202c3564,0x6e722e7476630a3b,0x3436662e3233662e,0x202c303831662520\n"
".quad 0x75730a3b38646625,0x6625203233662e62,0x316625202c313831,0x32316625202c3233\n"
".quad 0x20636f6c2e0a3b37,0x3120323134322032,0x2e6e722e616d660a,0x3831662520323366\n"
".quad 0x3138316625202c32,0x303430346630202c,0x6625202c30303030,0x6c756d0a3b323231\n"
".quad 0x316625203233662e,0x38316625202c3338,0x3930346630202c31,0x660a3b3030303030\n"
".quad 0x33662e6e722e616d,0x2c34383166252032,0x202c333831662520,0x25202c3138316625\n"
".quad 0x6d660a3b32383166,0x3233662e6e722e61,0x202c353831662520,0x25202c3633316625\n"
".quad 0x6625202c35333166,0x7476630a3b343831,0x3233662e3436662e,0x25202c3964662520\n"
".quad 0x76630a3b35383166,0x33662e3436662e74,0x2c30316466252032,0x0a3b383032662520\n"
".quad 0x203436662e67656e,0x25202c3131646625,0x616d660a3b396466,0x203436662e6e722e\n"
".quad 0x25202c3231646625,0x6625202c31316466,0x31646625202c3264,0x722e616d660a3b30\n"
".quad 0x6625203436662e6e,0x646625202c333164,0x3231646625202c37,0x3b3031646625202c\n"
".quad 0x2e6e722e7476630a,0x203436662e323366,0x25202c3638316625,0x75730a3b33316466\n"
".quad 0x6625203233662e62,0x316625202c373831,0x33316625202c3935,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x316625202c383831,0x30346630202c3738,0x202c303030303034\n"
".quad 0x6d0a3b3232316625,0x25203233662e6c75,0x6625202c39383166,0x346630202c373831\n"
".quad 0x3b30303030303930,0x2e6e722e616d660a,0x3931662520323366,0x3938316625202c30\n"
".quad 0x2c3738316625202c,0x0a3b383831662520,0x662e6e722e616d66,0x3139316625203233\n"
".quad 0x2c3633316625202c,0x202c353331662520,0x630a3b3039316625,0x662e3436662e7476\n"
".quad 0x3431646625203233,0x3b3139316625202c,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x30326625202c3531,0x662e67656e0a3b39,0x3631646625203436,0x3b3431646625202c\n"
".quad 0x2e6e722e616d660a,0x3164662520343666,0x3631646625202c37,0x202c32646625202c\n"
".quad 0x660a3b3531646625,0x36662e6e722e616d,0x2c38316466252034,0x25202c3764662520\n"
".quad 0x6625202c37316466,0x7476630a3b353164,0x2e3233662e6e722e,0x3931662520343666\n"
".quad 0x3831646625202c32,0x33662e6275730a3b,0x2c33393166252032,0x202c373231662520\n"
".quad 0x660a3b3233316625,0x33662e6e722e616d,0x2c34393166252032,0x202c333931662520\n"
".quad 0x3030303430346630,0x32316625202c3030,0x662e6c756d0a3b32,0x3539316625203233\n"
".quad 0x2c3339316625202c,0x3030393034663020,0x616d660a3b303030,0x203233662e6e722e\n"
".quad 0x25202c3639316625,0x6625202c35393166,0x316625202c333931,0x2e616d660a3b3439\n"
".quad 0x25203233662e6e72,0x6625202c37393166,0x316625202c363331,0x39316625202c3533\n"
".quad 0x662e7476630a3b36,0x25203233662e3436,0x6625202c39316466,0x7476630a3b373931\n"
".quad 0x3233662e3436662e,0x202c303264662520,0x6e0a3b3132326625,0x25203436662e6765\n"
".quad 0x6625202c31326466,0x616d660a3b393164,0x203436662e6e722e,0x25202c3232646625\n"
".quad 0x6625202c31326466,0x32646625202c3264,0x722e616d660a3b30,0x6625203436662e6e\n"
".quad 0x646625202c333264,0x3232646625202c37,0x3b3032646625202c,0x2e6e722e7476630a\n"
".quad 0x203436662e323366,0x25202c3839316625,0x646c0a3b33326466,0x752e6d617261702e\n"
".quad 0x32316c7225203436,0x32315a5f5b202c35,0x65745f645f74726d,0x5f53665041427478\n"
".quad 0x6d617261705f6d66,0x6f6c2e0a3b5d335f,0x3637333220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c38366c,0x316c7225202c3431,0x316c7225202c3532\n"
".quad 0x61702e646c0a3b35,0x203436752e6d6172,0x202c3232316c7225,0x74726d32315a5f5b\n"
".quad 0x42747865745f645f,0x5f6d665f53665041,0x5d315f6d61726170,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x316c7225202c3936,0x2e6c68730a3b3232\n"
".quad 0x376c722520343662,0x38366c7225202c30,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c31376c,0x0a3b3233202c3037,0x32203220636f6c2e,0x68730a3120343134\n"
".quad 0x7225203436622e6c,0x6c7225202c32376c,0x610a3b32202c3137,0x25203436732e6464\n"
".quad 0x7225202c33376c72,0x6c7225202c39366c,0x672e74730a3b3237,0x33662e6c61626f6c\n"
".quad 0x33376c72255b2032,0x3034316625202c5d,0x36732e6464610a3b,0x2c34376c72252034\n"
".quad 0x202c34316c722520,0x6f6c2e0a3b383637,0x3531343220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c35376c,0x316c7225202c3437,0x316c7225202c3532\n"
".quad 0x622e6c68730a3b35,0x36376c7225203436,0x2c35376c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x376c7225202c3737,0x2e0a3b3233202c36,0x3432203220636f6c\n"
".quad 0x6c68730a31203531,0x6c7225203436622e,0x376c7225202c3837,0x64610a3b32202c37\n"
".quad 0x7225203436732e64,0x6c7225202c39376c,0x376c7225202c3936,0x6c672e74730a3b38\n"
".quad 0x3233662e6c61626f,0x5d39376c72255b20,0x3b3035316625202c,0x3436732e6464610a\n"
".quad 0x202c30386c722520,0x31202c34316c7225,0x6f6c2e0a3b363335,0x3631343220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c31386c,0x316c7225202c3038\n"
".quad 0x316c7225202c3532,0x622e6c68730a3b35,0x32386c7225203436,0x2c31386c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x386c7225202c3338,0x2e0a3b3233202c32\n"
".quad 0x3432203220636f6c,0x6c68730a31203631,0x6c7225203436622e,0x386c7225202c3438\n"
".quad 0x64610a3b32202c33,0x7225203436732e64,0x6c7225202c35386c,0x386c7225202c3936\n"
".quad 0x6c672e74730a3b34,0x3233662e6c61626f,0x5d35386c72255b20,0x3b3835316625202c\n"
".quad 0x3436732e6464610a,0x202c36386c722520,0x32202c34316c7225,0x6f6c2e0a3b343033\n"
".quad 0x3731343220322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c37386c\n"
".quad 0x316c7225202c3638,0x316c7225202c3532,0x622e6c68730a3b35,0x38386c7225203436\n"
".quad 0x2c37386c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x386c7225202c3938\n"
".quad 0x2e0a3b3233202c38,0x3432203220636f6c,0x6c68730a31203731,0x6c7225203436622e\n"
".quad 0x386c7225202c3039,0x64610a3b32202c39,0x7225203436732e64,0x6c7225202c31396c\n"
".quad 0x396c7225202c3936,0x6c672e74730a3b30,0x3233662e6c61626f,0x5d31396c72255b20\n"
".quad 0x3b3636316625202c,0x3436732e6464610a,0x202c32396c722520,0x33202c34316c7225\n"
".quad 0x6f6c2e0a3b323730,0x3831343220322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c33396c,0x316c7225202c3239,0x316c7225202c3532,0x622e6c68730a3b35\n"
".quad 0x34396c7225203436,0x2c33396c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x396c7225202c3539,0x2e0a3b3233202c34,0x3432203220636f6c,0x6c68730a31203831\n"
".quad 0x6c7225203436622e,0x396c7225202c3639,0x64610a3b32202c35,0x7225203436732e64\n"
".quad 0x6c7225202c37396c,0x396c7225202c3936,0x6c672e74730a3b36,0x3233662e6c61626f\n"
".quad 0x5d37396c72255b20,0x3b3437316625202c,0x3436732e6464610a,0x202c38396c722520\n"
".quad 0x33202c34316c7225,0x6f6c2e0a3b303438,0x3931343220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c39396c,0x316c7225202c3839,0x316c7225202c3532\n"
".quad 0x622e6c68730a3b35,0x30316c7225203436,0x39396c7225202c30,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3130316c,0x3233202c3030316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203931343220,0x203436622e6c6873,0x202c3230316c7225,0x202c3130316c7225\n"
".quad 0x732e6464610a3b32,0x30316c7225203436,0x39366c7225202c33,0x3230316c7225202c\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3330316c72255b,0x3b3038316625202c\n"
".quad 0x3436732e6464610a,0x2c3430316c722520,0x202c34316c722520,0x6c2e0a3b38303634\n"
".quad 0x323432203220636f,0x2e64616d0a312030,0x25203436732e6f6c,0x25202c3530316c72\n"
".quad 0x25202c3430316c72,0x25202c3532316c72,0x68730a3b35316c72,0x7225203436622e6c\n"
".quad 0x7225202c3630316c,0x3233202c3530316c,0x36732e7268730a3b,0x3730316c72252034\n"
".quad 0x3630316c7225202c,0x6c2e0a3b3233202c,0x323432203220636f,0x2e6c68730a312030\n"
".quad 0x316c722520343662,0x316c7225202c3830,0x610a3b32202c3730,0x25203436732e6464\n"
".quad 0x25202c3930316c72,0x7225202c39366c72,0x74730a3b3830316c,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d393031,0x6f6c2e0a3b363831,0x3132343220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3131316c,0x6c7225202c36316c\n"
".quad 0x6c7225202c353231,0x2e6c68730a3b3531,0x316c722520343662,0x316c7225202c3231\n"
".quad 0x0a3b3233202c3131,0x203436732e726873,0x202c3331316c7225,0x202c3231316c7225\n"
".quad 0x636f6c2e0a3b3233,0x2031323432203220,0x36622e6c68730a31,0x3431316c72252034\n"
".quad 0x3331316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c353131\n"
".quad 0x316c7225202c3936,0x672e74730a3b3431,0x33662e6c61626f6c,0x31316c72255b2032\n"
".quad 0x39316625202c5d35,0x20636f6c2e0a3b32,0x3120323234322032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x326c7225202c3731,0x32316c7225202c32,0x35316c7225202c35\n"
".quad 0x36622e6c68730a3b,0x3831316c72252034,0x3731316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3931316c,0x3233202c3831316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203232343220,0x203436622e6c6873,0x202c3032316c7225,0x202c3931316c7225\n"
".quad 0x732e6464610a3b32,0x32316c7225203436,0x39366c7225202c31,0x3032316c7225202c\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3132316c72255b,0x3b3839316625202c\n"
".quad 0x203220636f6c2e0a,0x720a322035323432,0x2e0a0a7d0a3b7465,0x5a5f207972746e65\n"
".quad 0x4c5f645f74726d38,0x666d665f53665052,0x6d617261702e0a28,0x5a5f203436752e20\n"
".quad 0x4c5f645f74726d38,0x666d665f53665052,0x305f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203436752e20,0x4c5f645f74726d38,0x666d665f53665052,0x315f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203233662e20,0x4c5f645f74726d38,0x666d665f53665052\n"
".quad 0x325f6d617261705f,0x6d617261702e0a2c,0x5a5f203436752e20,0x4c5f645f74726d38\n"
".quad 0x666d665f53665052,0x335f6d617261705f,0x6d617261702e0a2c,0x5a5f203233662e20\n"
".quad 0x4c5f645f74726d38,0x666d665f53665052,0x345f6d617261705f,0x65722e0a7b0a290a\n"
".quad 0x25203233662e2067,0x0a3b3e3535313c66,0x36662e206765722e,0x34323c6466252034\n"
".quad 0x206765722e0a3b3e,0x702520646572702e,0x722e0a3b3e36313c,0x203233732e206765\n"
".quad 0x3b3e3331313c7225,0x732e206765722e0a,0x323c6c7225203436,0x6c0a0a0a3b3e3631\n"
".quad 0x2e6d617261702e64,0x316c722520343675,0x726d385a5f5b202c,0x6650524c5f645f74\n"
".quad 0x61705f666d665f53,0x0a3b5d305f6d6172,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x6d385a5f5b202c33,0x50524c5f645f7472,0x705f666d665f5366,0x3b5d335f6d617261\n"
".quad 0x6f742e617476630a,0x2e6c61626f6c672e,0x346c722520343675,0x0a3b316c7225202c\n"
".quad 0x32203220636f6c2e,0x6f6d0a3120313334,0x7225203233752e76,0x6469746e25202c37\n"
".quad 0x2e766f6d0a3b782e,0x2c38722520323375,0x2e64696174632520,0x752e766f6d0a3b78\n"
".quad 0x202c397225203233,0x0a3b782e64697425,0x732e6f6c2e64616d,0x202c317225203233\n"
".quad 0x387225202c377225,0x2e0a3b397225202c,0x3432203220636f6c,0x766f6d0a31203233\n"
".quad 0x317225203233752e,0x6469746e25202c30,0x2e766f6d0a3b792e,0x3131722520323375\n"
".quad 0x646961746325202c,0x2e766f6d0a3b792e,0x3231722520323375,0x792e64697425202c\n"
".quad 0x6f6c2e64616d0a3b,0x327225203233732e,0x202c30317225202c,0x7225202c31317225\n"
".quad 0x2e7476630a3b3231,0x203233752e343675,0x7225202c356c7225,0x20636f6c2e0a3b31\n"
".quad 0x3120333334322032,0x3436732e7476630a,0x6c7225203233732e,0x0a3b327225202c36\n"
".quad 0x732e6f6c2e64616d,0x2c376c7225203436,0x25202c366c722520,0x6c7225202c336c72\n"
".quad 0x20636f6c2e0a3b35,0x630a312032382032,0x33662e6e722e7476,0x6625203233732e32\n"
".quad 0x0a3b317225202c32,0x2e746c2e70746573,0x2c33702520323366,0x6630202c32662520\n"
".quad 0x4443434343434433,0x6220337025400a3b,0x5f39334242206172,0x766f6d0a0a3b3031\n"
".quad 0x317225203233752e,0x3b34323031202c33,0x203220636f6c2e0a,0x6275730a31203438\n"
".quad 0x317225203233732e,0x2c33317225202c34,0x76630a3b31722520,0x3233662e6e722e74\n"
".quad 0x326625203233732e,0x3b34317225202c37,0x746c2e707465730a,0x347025203233662e\n"
".quad 0x202c37326625202c,0x4343433846336630,0x347025400a3b4443,0x3342422061726220\n"
".quad 0x6f6d0a0a3b395f39,0x7225203233752e76,0x3b383637202c3531,0x203220636f6c2e0a\n"
".quad 0x6275730a31203638,0x317225203233732e,0x2c35317225202c36,0x76630a3b32722520\n"
".quad 0x3233662e6e722e74,0x326625203233732e,0x3b36317225202c38,0x746c2e707465730a\n"
".quad 0x357025203233662e,0x202c38326625202c,0x4343433846336630,0x357025400a3b4443\n"
".quad 0x3342422061726220,0x6c2e0a0a3b385f39,0x203838203220636f,0x6e722e7476630a31\n"
".quad 0x3233732e3233662e,0x7225202c33662520,0x2e707465730a3b32,0x25203233662e746c\n"
".quad 0x2c336625202c3670,0x4343434433663020,0x7025400a3b444343,0x4242206172622036\n"
".quad 0x610a0a3b375f3933,0x25203233662e6464,0x326625202c393266,0x464633436630202c\n"
".quad 0x64610a3b30303043,0x6625203233662e64,0x2c336625202c3033,0x4346423343663020\n"
".quad 0x6f6c2e0a3b303030,0x3120303920322063,0x3233662e6c756d0a,0x25202c3133662520\n"
".quad 0x336625202c303366,0x722e616d660a3b30,0x6625203233662e6e,0x39326625202c3233\n"
".quad 0x202c39326625202c,0x65730a3b31336625,0x33662e746c2e7074,0x25202c3770252032\n"
".quad 0x346630202c323366,0x3b30303030303832,0x726220377025400a,0x365f393342422061\n"
".quad 0x752e766f6d0a0a3b,0x3231317225203233,0x6172620a3b30202c,0x33424220696e752e\n"
".quad 0x420a0a3b31315f39,0x6d0a3a365f393342,0x25203233752e766f,0x3031202c32313172\n"
".quad 0x6e752e6172620a3b,0x315f393342422069,0x393342420a0a3b31,0x2e766f6d0a3a375f\n"
".quad 0x3131722520323375,0x620a3b3231202c32,0x4220696e752e6172,0x0a3b31315f393342\n"
".quad 0x3a385f393342420a,0x3233752e766f6d0a,0x202c323131722520,0x2e6172620a3b3131\n"
".quad 0x3933424220696e75,0x42420a0a3b31315f,0x6f6d0a3a395f3933,0x7225203233752e76\n"
".quad 0x0a3b32202c323131,0x20696e752e617262,0x3b31315f39334242,0x315f393342420a0a\n"
".quad 0x752e766f6d0a3a30,0x3231317225203233,0x42420a0a3b33202c,0x730a3a31315f3933\n"
".quad 0x25203436622e6c68,0x7225202c34326c72,0x0a3b3233202c376c,0x203436732e726873\n"
".quad 0x25202c35326c7225,0x3233202c34326c72,0x3220636f6c2e0a3b,0x0a31203733343220\n"
".quad 0x203436622e6c6873,0x25202c36326c7225,0x3b32202c35326c72,0x3436732e6464610a\n"
".quad 0x202c37326c722520,0x7225202c346c7225,0x2e646c0a3b36326c,0x662e6c61626f6c67\n"
".quad 0x202c346625203233,0x3b5d37326c72255b,0x3233732e6464610a,0x7225202c34722520\n"
".quad 0x2e0a3b312d202c31,0x3633203220636f6c,0x707465730a312036,0x203233732e74672e\n"
".quad 0x347225202c317025,0x25400a3b312d202c,0x4220617262203170,0x0a3b33315f393342\n"
".quad 0x3436752e766f6d0a,0x2c3031326c722520,0x2e6172620a3b3020,0x3933424220696e75\n"
".quad 0x42420a0a3b34315f,0x630a3a33315f3933,0x732e3436732e7476,0x31326c7225203233\n"
".quad 0x0a3b347225202c30,0x34315f393342420a,0x36732e6464610a3a,0x2c39326c72252034\n"
".quad 0x37202c366c722520,0x702e646c0a3b3836,0x3436752e6d617261,0x2c3930326c722520\n"
".quad 0x74726d385a5f5b20,0x536650524c5f645f,0x7261705f666d665f,0x2e0a3b5d335f6d61\n"
".quad 0x3432203220636f6c,0x64616d0a31203833,0x203436732e6f6c2e,0x25202c30336c7225\n"
".quad 0x7225202c39326c72,0x7225202c3930326c,0x68730a3b3031326c,0x7225203436622e6c\n"
".quad 0x6c7225202c31336c,0x0a3b3233202c3033,0x203436732e726873,0x25202c32336c7225\n"
".quad 0x3233202c31336c72,0x3220636f6c2e0a3b,0x0a31203833343220,0x203436622e6c6873\n"
".quad 0x25202c33336c7225,0x3b32202c32336c72,0x3436732e6464610a,0x202c34336c722520\n"
".quad 0x7225202c346c7225,0x2e646c0a3b33336c,0x662e6c61626f6c67,0x3435316625203233\n"
".quad 0x34336c72255b202c,0x20636f6c2e0a3b5d,0x3120393334322032,0x3233732e6464610a\n"
".quad 0x7225202c35722520,0x6c2e0a3b31202c31,0x313633203220636f,0x2e707465730a3120\n"
".quad 0x25203233732e746c,0x2c357225202c3270,0x400a3b3432303120,0x2061726220327025\n"
".quad 0x3b36315f39334242,0x36752e766f6d0a0a,0x3131326c72252034,0x0a3b33323031202c\n"
".quad 0x20696e752e617262,0x3b37315f39334242,0x315f393342420a0a,0x732e7476630a3a36\n"
".quad 0x25203233732e3436,0x25202c3131326c72,0x3342420a0a3b3572,0x64610a3a37315f39\n"
".quad 0x7225203436732e64,0x6c7225202c36336c,0x3b34303332202c36,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3830326c,0x5f645f74726d385a,0x6d665f536650524c\n"
".quad 0x5f6d617261705f66,0x636f6c2e0a3b5d33,0x2039333432203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x336c7225202c3733,0x30326c7225202c36,0x31326c7225202c38\n"
".quad 0x622e6c68730a3b31,0x38336c7225203436,0x2c37336c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x336c7225202c3933,0x2e0a3b3233202c38,0x3432203220636f6c\n"
".quad 0x6c68730a31203933,0x6c7225203436622e,0x336c7225202c3034,0x64610a3b32202c39\n"
".quad 0x7225203436732e64,0x6c7225202c31346c,0x30346c7225202c34,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c366625,0x64610a3b5d31346c,0x7225203233732e64\n"
".quad 0x2c327225202c3632,0x6f6c2e0a3b312d20,0x3034343220322063,0x732e7476630a3120\n"
".quad 0x25203233732e3436,0x7225202c32316c72,0x2e6464610a3b3632,0x346c722520343673\n"
".quad 0x32316c7225202c32,0x0a3b36333531202c,0x32203220636f6c2e,0x616d0a3120303434\n"
".quad 0x3436732e6f6c2e64,0x202c33346c722520,0x25202c32346c7225,0x25202c3830326c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x346c7225202c3434,0x730a3b3233202c33\n"
".quad 0x25203436732e7268,0x7225202c35346c72,0x3b3233202c34346c,0x203220636f6c2e0a\n"
".quad 0x730a312030343432,0x25203436622e6c68,0x7225202c36346c72,0x0a3b32202c35346c\n"
".quad 0x203436732e646461,0x25202c37346c7225,0x6c7225202c346c72,0x672e646c0a3b3634\n"
".quad 0x33662e6c61626f6c,0x2c30353166252032,0x5d37346c72255b20,0x3220636f6c2e0a3b\n"
".quad 0x400a312036363320,0x2061726220317025,0x3b39315f39334242,0x36752e766f6d0a0a\n"
".quad 0x3231326c72252034,0x6172620a3b30202c,0x33424220696e752e,0x420a0a3b30325f39\n"
".quad 0x0a3a39315f393342,0x2e3436732e747663,0x326c722520323373,0x3b347225202c3231\n"
".quad 0x325f393342420a0a,0x732e6464610a3a30,0x39346c7225203436,0x2c32316c7225202c\n"
".quad 0x6c0a3b3034383320,0x2e6d617261702e64,0x326c722520343675,0x385a5f5b202c3730\n"
".quad 0x524c5f645f74726d,0x5f666d665f536650,0x5d335f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x0a31203134343220,0x732e6f6c2e64616d,0x30356c7225203436,0x2c39346c7225202c\n"
".quad 0x2c3730326c722520,0x3b3231326c722520,0x3436622e6c68730a,0x202c31356c722520\n"
".quad 0x33202c30356c7225,0x732e7268730a3b32,0x32356c7225203436,0x2c31356c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x3134343220322063,0x622e6c68730a3120,0x33356c7225203436\n"
".quad 0x2c32356c7225202c,0x2e6464610a3b3220,0x356c722520343673,0x2c346c7225202c34\n"
".quad 0x0a3b33356c722520,0x61626f6c672e646c,0x6625203233662e6c,0x72255b202c313431\n"
".quad 0x6c2e0a3b5d34356c,0x313633203220636f,0x20327025400a3120,0x3933424220617262\n"
".quad 0x6f6d0a0a3b32325f,0x7225203436752e76,0x3031202c3331326c,0x2e6172620a3b3332\n"
".quad 0x3933424220696e75,0x42420a0a3b33325f,0x630a3a32325f3933,0x732e3436732e7476\n"
".quad 0x31326c7225203233,0x0a3b357225202c33,0x33325f393342420a,0x3220636f6c2e0a3a\n"
".quad 0x0a31203034343220,0x2e3436752e747663,0x356c722520323375,0x3b36327225202c36\n"
".quad 0x3436732e6464610a,0x202c37356c722520,0x34202c36356c7225,0x2e646c0a3b383036\n"
".quad 0x36752e6d61726170,0x3630326c72252034,0x726d385a5f5b202c,0x6650524c5f645f74\n"
".quad 0x61705f666d665f53,0x0a3b5d335f6d6172,0x32203220636f6c2e,0x616d0a3120323434\n"
".quad 0x3436732e6f6c2e64,0x202c38356c722520,0x25202c37356c7225,0x25202c3630326c72\n"
".quad 0x6c0a3b3331326c72,0x2e6d617261702e64,0x316c722520343675,0x385a5f5b202c3839\n"
".quad 0x524c5f645f74726d,0x5f666d665f536650,0x5d305f6d61726170,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x316c7225202c3935,0x2e6c68730a3b3839\n"
".quad 0x366c722520343662,0x38356c7225202c30,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c31366c,0x0a3b3233202c3036,0x32203220636f6c2e,0x68730a3120323434\n"
".quad 0x7225203436622e6c,0x6c7225202c32366c,0x610a3b32202c3136,0x25203436732e6464\n"
".quad 0x7225202c33366c72,0x6c7225202c39356c,0x672e646c0a3b3236,0x33662e6c61626f6c\n"
".quad 0x2c37333166252032,0x5d33366c72255b20,0x3220636f6c2e0a3b,0x0a31203334343220\n"
".quad 0x203233732e646461,0x327225202c367225,0x7476630a3b31202c,0x3233732e3436732e\n"
".quad 0x202c37316c722520,0x6464610a3b367225,0x6c7225203436732e,0x316c7225202c3436\n"
".quad 0x3b32373033202c37,0x3436752e7476630a,0x6c7225203233752e,0x3b317225202c3536\n"
".quad 0x203220636f6c2e0a,0x6d0a312033343432,0x36732e6f6c2e6461,0x2c36366c72252034\n"
".quad 0x202c34366c722520,0x202c3630326c7225,0x730a3b35366c7225,0x25203436622e6c68\n"
".quad 0x7225202c37366c72,0x3b3233202c36366c,0x3436732e7268730a,0x202c38366c722520\n"
".quad 0x33202c37366c7225,0x20636f6c2e0a3b32,0x3120333434322032,0x3436622e6c68730a\n"
".quad 0x202c39366c722520,0x32202c38366c7225,0x36732e6464610a3b,0x2c30376c72252034\n"
".quad 0x202c39356c722520,0x6c0a3b39366c7225,0x6c61626f6c672e64,0x316625203233662e\n"
".quad 0x6c72255b202c3135,0x6f6c2e0a3b5d3037,0x2031363320322063,0x6220327025400a31\n"
".quad 0x5f39334242206172,0x766f6d0a0a3b3532,0x6c7225203436752e,0x323031202c343132\n"
".quad 0x752e6172620a3b33,0x5f3933424220696e,0x3342420a0a3b3632,0x76630a3a35325f39\n"
".quad 0x33732e3436732e74,0x3431326c72252032,0x0a0a3b357225202c,0x3a36325f39334242\n"
".quad 0x3436732e6464610a,0x202c32376c722520,0x35202c37316c7225,0x2e646c0a3b363733\n"
".quad 0x36752e6d61726170,0x3530326c72252034,0x726d385a5f5b202c,0x6650524c5f645f74\n"
".quad 0x61705f666d665f53,0x0a3b5d335f6d6172,0x32203220636f6c2e,0x616d0a3120343434\n"
".quad 0x3436732e6f6c2e64,0x202c33376c722520,0x25202c32376c7225,0x25202c3530326c72\n"
".quad 0x6c0a3b3431326c72,0x2e6d617261702e64,0x316c722520343675,0x385a5f5b202c3739\n"
".quad 0x524c5f645f74726d,0x5f666d665f536650,0x5d305f6d61726170,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x316c7225202c3437,0x2e6c68730a3b3739\n"
".quad 0x376c722520343662,0x33376c7225202c35,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c36376c,0x0a3b3233202c3537,0x32203220636f6c2e,0x68730a3120343434\n"
".quad 0x7225203436622e6c,0x6c7225202c37376c,0x610a3b32202c3637,0x25203436732e6464\n"
".quad 0x7225202c38376c72,0x6c7225202c34376c,0x672e646c0a3b3737,0x33662e6c61626f6c\n"
".quad 0x2c38333166252032,0x5d38376c72255b20,0x3220636f6c2e0a3b,0x400a312036363320\n"
".quad 0x2061726220317025,0x3b38325f39334242,0x36752e766f6d0a0a,0x3531326c72252034\n"
".quad 0x6172620a3b30202c,0x33424220696e752e,0x420a0a3b39325f39,0x0a3a38325f393342\n"
".quad 0x2e3436732e747663,0x326c722520323373,0x3b347225202c3531,0x325f393342420a0a\n"
".quad 0x20636f6c2e0a3a39,0x0a31203136332032,0x2e746c2e70746573,0x3031702520323373\n"
".quad 0x37202c367225202c,0x2e6464610a3b3836,0x386c722520343673,0x37316c7225202c30\n"
".quad 0x0a3b34343136202c,0x3436622e706c6573,0x202c31386c722520,0x36202c30386c7225\n"
".quad 0x317025202c313139,0x61702e646c0a3b30,0x203436752e6d6172,0x202c3430326c7225\n"
".quad 0x5f74726d385a5f5b,0x5f536650524c5f64,0x617261705f666d66,0x6c2e0a3b5d335f6d\n"
".quad 0x343432203220636f,0x2e64616d0a312035,0x25203436732e6f6c,0x7225202c32386c72\n"
".quad 0x6c7225202c31386c,0x6c7225202c343032,0x2e646c0a3b353132,0x36752e6d61726170\n"
".quad 0x3639316c72252034,0x726d385a5f5b202c,0x6650524c5f645f74,0x61705f666d665f53\n"
".quad 0x0a3b5d305f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67,0x33386c7225203436\n"
".quad 0x3639316c7225202c,0x36622e6c68730a3b,0x2c34386c72252034,0x202c32386c722520\n"
".quad 0x2e7268730a3b3233,0x386c722520343673,0x34386c7225202c35,0x6c2e0a3b3233202c\n"
".quad 0x343432203220636f,0x2e6c68730a312035,0x386c722520343662,0x35386c7225202c36\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x386c7225202c3738,0x36386c7225202c33\n"
".quad 0x6f6c672e646c0a3b,0x203233662e6c6162,0x5b202c3832316625,0x0a3b5d37386c7225\n"
".quad 0x203436732e646461,0x25202c30396c7225,0x373335202c366c72,0x20636f6c2e0a3b36\n"
".quad 0x3120373834322032,0x2e6f6c2e64616d0a,0x396c722520343673,0x30396c7225202c31\n"
".quad 0x3430326c7225202c,0x0a3b356c7225202c,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x5a5f5b202c313032,0x4c5f645f74726d38,0x666d665f53665052,0x315f6d617261705f\n"
".quad 0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c,0x6c7225202c32396c\n"
".quad 0x6c68730a3b313032,0x6c7225203436622e,0x396c7225202c3339,0x730a3b3233202c31\n"
".quad 0x25203436732e7268,0x7225202c34396c72,0x3b3233202c33396c,0x203220636f6c2e0a\n"
".quad 0x730a312037383432,0x25203436622e6c68,0x7225202c35396c72,0x0a3b32202c34396c\n"
".quad 0x203436732e646461,0x25202c32326c7225,0x7225202c32396c72,0x6464610a3b35396c\n"
".quad 0x6c7225203436732e,0x366c7225202c3639,0x0a3b34343136202c,0x32203220636f6c2e\n"
".quad 0x616d0a3120383834,0x3436732e6f6c2e64,0x202c37396c722520,0x25202c36396c7225\n"
".quad 0x25202c3430326c72,0x6c68730a3b356c72,0x6c7225203436622e,0x396c7225202c3839\n"
".quad 0x730a3b3233202c37,0x25203436732e7268,0x7225202c39396c72,0x3b3233202c38396c\n"
".quad 0x203220636f6c2e0a,0x730a312038383432,0x25203436622e6c68,0x25202c3030316c72\n"
".quad 0x3b32202c39396c72,0x3436732e6464610a,0x202c33326c722520,0x25202c32396c7225\n"
".quad 0x730a3b3030316c72,0x732e71652e707465,0x2c31317025203233,0x202c323131722520\n"
".quad 0x31317025400a3b31,0x3342422061726220,0x730a0a3b31335f39,0x732e656e2e707465\n"
".quad 0x2c32317025203233,0x202c323131722520,0x317025400a3b3031,0x4242206172622032\n"
".quad 0x0a0a3b32335f3933,0x3a31335f39334242,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5f5b202c3330326c,0x5f645f74726d385a,0x6d665f536650524c,0x5f6d617261705f66\n"
".quad 0x636f6c2e0a3b5d33,0x2031383432203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c343031,0x326c7225202c3932,0x356c7225202c3330,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3030326c72,0x645f74726d385a5f,0x665f536650524c5f\n"
".quad 0x6d617261705f666d,0x7476630a3b5d315f,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x202c3530316c7225,0x0a3b3030326c7225,0x203436622e6c6873,0x202c3630316c7225\n"
".quad 0x202c3430316c7225,0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3730\n"
".quad 0x0a3b3233202c3630,0x32203220636f6c2e,0x68730a3120313834,0x7225203436622e6c\n"
".quad 0x7225202c3830316c,0x3b32202c3730316c,0x3436732e6464610a,0x2c3930316c722520\n"
".quad 0x2c3530316c722520,0x3b3830316c722520,0x203220636f6c2e0a,0x730a312037343432\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3930316c,0x2e6464610a3b3666\n"
".quad 0x316c722520343673,0x366c7225202c3031,0x0a3b36333531202c,0x32203220636f6c2e\n"
".quad 0x616d0a3120323834,0x3436732e6f6c2e64,0x2c3131316c722520,0x2c3031316c722520\n"
".quad 0x2c3330326c722520,0x730a3b356c722520,0x25203436622e6c68,0x25202c3231316c72\n"
".quad 0x33202c3131316c72,0x732e7268730a3b32,0x31316c7225203436,0x31316c7225202c33\n"
".quad 0x2e0a3b3233202c32,0x3432203220636f6c,0x6c68730a31203238,0x6c7225203436622e\n"
".quad 0x6c7225202c343131,0x0a3b32202c333131,0x203436732e646461,0x202c3531316c7225\n"
".quad 0x202c3530316c7225,0x0a3b3431316c7225,0x32203220636f6c2e,0x74730a3120383434\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d353131,0x6f6c2e0a3b313531\n"
".quad 0x3338343220322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3731316c\n"
".quad 0x6c7225202c36336c,0x6c7225202c333032,0x622e6c68730a3b35,0x31316c7225203436\n"
".quad 0x31316c7225202c38,0x730a3b3233202c37,0x25203436732e7268,0x25202c3931316c72\n"
".quad 0x33202c3831316c72,0x20636f6c2e0a3b32,0x3120333834322032,0x3436622e6c68730a\n"
".quad 0x2c3032316c722520,0x2c3931316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x316c7225202c3132,0x316c7225202c3530,0x636f6c2e0a3b3032,0x2039343432203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3132316c72255b,0x3b3435316625202c\n"
".quad 0x3436732e6464610a,0x2c3232316c722520,0x33202c366c722520,0x6f6c2e0a3b323730\n"
".quad 0x3438343220322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3332316c\n"
".quad 0x7225202c3232316c,0x7225202c3330326c,0x2e6c68730a3b356c,0x316c722520343662\n"
".quad 0x316c7225202c3432,0x0a3b3233202c3332,0x203436732e726873,0x202c3532316c7225\n"
".quad 0x202c3432316c7225,0x636f6c2e0a3b3233,0x2034383432203220,0x36622e6c68730a31\n"
".quad 0x3632316c72252034,0x3532316c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c373231,0x6c7225202c353031,0x6f6c2e0a3b363231,0x3035343220322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3732316c72255b20,0x3035316625202c5d\n"
".quad 0x36732e6464610a3b,0x3832316c72252034,0x202c366c7225202c,0x6c2e0a3b30343833\n"
".quad 0x383432203220636f,0x2e64616d0a312035,0x25203436732e6f6c,0x25202c3932316c72\n"
".quad 0x25202c3832316c72,0x25202c3330326c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c303331,0x3b3233202c393231,0x3436732e7268730a,0x2c3133316c722520\n"
".quad 0x2c3033316c722520,0x6f6c2e0a3b323320,0x3538343220322063,0x622e6c68730a3120\n"
".quad 0x33316c7225203436,0x33316c7225202c32,0x64610a3b32202c31,0x7225203436732e64\n"
".quad 0x7225202c3333316c,0x7225202c3530316c,0x6c2e0a3b3233316c,0x353432203220636f\n"
".quad 0x672e74730a312031,0x33662e6c61626f6c,0x33316c72255b2032,0x33316625202c5d33\n"
".quad 0x732e6464610a3b38,0x33316c7225203436,0x2c366c7225202c34,0x2e0a3b3830363420\n"
".quad 0x3432203220636f6c,0x64616d0a31203638,0x203436732e6f6c2e,0x202c3533316c7225\n"
".quad 0x202c3433316c7225,0x202c3330326c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3633316c,0x3233202c3533316c,0x36732e7268730a3b,0x3733316c72252034\n"
".quad 0x3633316c7225202c,0x6c2e0a3b3233202c,0x383432203220636f,0x2e6c68730a312036\n"
".quad 0x316c722520343662,0x316c7225202c3833,0x610a3b32202c3733,0x25203436732e6464\n"
".quad 0x25202c3933316c72,0x25202c3530316c72,0x2e0a3b3833316c72,0x3432203220636f6c\n"
".quad 0x2e74730a31203235,0x662e6c61626f6c67,0x316c72255b203233,0x316625202c5d3933\n"
".quad 0x636f6c2e0a3b3832,0x2033353432203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x2c5d32326c72255b,0x0a3b313431662520,0x32203220636f6c2e,0x74730a3120343534\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x316625202c5d3332,0x636f6c2e0a3b3733\n"
".quad 0x2030393432203220,0x0a0a3b7465720a32,0x3a32335f39334242,0x203220636f6c2e0a\n"
".quad 0x730a312037353432,0x732e71652e707465,0x2c33317025203233,0x202c323131722520\n"
".quad 0x33317025400a3b33,0x3342422061726220,0x72620a3b33335f39,0x424220696e752e61\n"
".quad 0x0a0a3b39335f3933,0x3a33335f39334242,0x203220636f6c2e0a,0x730a312039353432\n"
".quad 0x732e71652e707465,0x2c34317025203233,0x3b30202c32722520,0x622034317025400a\n"
".quad 0x5f39334242206172,0x6f6c2e0a0a3b3733,0x3336343220322063,0x2e707465730a3120\n"
".quad 0x25203233732e7165,0x327225202c353170,0x400a3b373637202c,0x6172622035317025\n"
".quad 0x36335f3933424220,0x662e766f6d0a0a3b,0x3034316625203233,0x3b3833316625202c\n"
".quad 0x3233662e766f6d0a,0x202c393331662520,0x6d0a3b3733316625,0x25203233662e766f\n"
".quad 0x6625202c33353166,0x766f6d0a3b313531,0x316625203233662e,0x35316625202c3235\n"
".quad 0x752e6172620a3b30,0x5f3933424220696e,0x3342420a0a3b3833,0x6f6d0a3a36335f39\n"
".quad 0x6625203233662e76,0x316625202c393331,0x2e766f6d0a3b3733,0x3431662520323366\n"
".quad 0x3733316625202c30,0x33662e766f6d0a3b,0x2c32353166252032,0x0a3b303531662520\n"
".quad 0x203233662e766f6d,0x25202c3335316625,0x72620a3b30353166,0x424220696e752e61\n"
".quad 0x0a0a3b38335f3933,0x3a37335f39334242,0x3233662e766f6d0a,0x202c393331662520\n"
".quad 0x6d0a3b3833316625,0x25203233662e766f,0x6625202c30343166,0x766f6d0a3b383331\n"
".quad 0x316625203233662e,0x35316625202c3235,0x662e766f6d0a3b31,0x3335316625203233\n"
".quad 0x3b3135316625202c,0x335f393342420a0a,0x662e766f6d0a3a38,0x3135316625203233\n"
".quad 0x3b3335316625202c,0x3233662e766f6d0a,0x202c303531662520,0x6d0a3b3235316625\n"
".quad 0x25203233662e766f,0x6625202c38333166,0x766f6d0a3b303431,0x316625203233662e\n"
".quad 0x33316625202c3733,0x662e766f6d0a3b39,0x2c33336625203233,0x3030303030663020\n"
".quad 0x6f6c2e0a3b303030,0x3037343220322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x336625202c343531,0x3246336630202c33,0x25202c4241414141,0x636f6c2e0a3b3666\n"
".quad 0x2031373432203220,0x33662e6275730a31,0x202c343366252032,0x25202c3035316625\n"
".quad 0x6f6d0a3b31353166,0x6625203233662e76,0x46336630202c3533,0x0a3b303030303030\n"
".quad 0x32203220636f6c2e,0x656e0a3120313734,0x6625203233662e67,0x34336625202c3633\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x2c36336625202c37,0x25202c3533662520\n"
".quad 0x6f6d0a3b38333166,0x6625203233662e76,0x44336630202c3833,0x0a3b413037443341\n"
".quad 0x32203220636f6c2e,0x6d660a3120313734,0x3233662e6e722e61,0x25202c3933662520\n"
".quad 0x336630202c383366,0x2c30303030303046,0x660a3b3733662520,0x33662e6e722e616d\n"
".quad 0x2c31343166252032,0x30202c3333662520,0x4141414132453366,0x3b39336625202c42\n"
".quad 0x203220636f6c2e0a,0x660a312032373432,0x33662e6e722e616d,0x202c303466252032\n"
".quad 0x6630202c34336625,0x3030303030304633,0x3b3733316625202c,0x3233662e67656e0a\n"
".quad 0x25202c3134662520,0x616d660a3b383366,0x203233662e6e722e,0x6625202c32346625\n"
".quad 0x35336625202c3134,0x0a3b30346625202c,0x662e6e722e616d66,0x3832316625203233\n"
".quad 0x202c33336625202c,0x4141413245336630,0x32346625202c4241,0x5f393342420a0a3b\n"
".quad 0x636f6c2e0a3a3933,0x2038373432203220,0x33662e6464610a31,0x202c333466252032\n"
".quad 0x316625202c346625,0x2e6464610a3b3435,0x3434662520323366,0x202c33346625202c\n"
".quad 0x610a3b3035316625,0x25203233662e6464,0x346625202c353466,0x0a3b366625202c34\n"
".quad 0x203233662e646461,0x6625202c36346625,0x35316625202c3534,0x662e6464610a3b31\n"
".quad 0x2c37346625203233,0x25202c3634662520,0x64610a3b31343166,0x6625203233662e64\n"
".quad 0x37346625202c3834,0x3b3733316625202c,0x3233662e6464610a,0x25202c3934662520\n"
".quad 0x316625202c383466,0x2e6464610a3b3833,0x3035662520323366,0x202c39346625202c\n"
".quad 0x730a3b3832316625,0x25203233662e6275,0x316625202c313566,0x3b366625202c3435\n"
".quad 0x3233662e6464610a,0x25202c3235662520,0x316625202c313566,0x2e6275730a3b3134\n"
".quad 0x3335662520323366,0x202c32356625202c,0x730a3b3733316625,0x25203233662e6275\n"
".quad 0x356625202c343566,0x3833316625202c33,0x33662e6464610a3b,0x202c353566252032\n"
".quad 0x6625202c34356625,0x6275730a3b383231,0x356625203233662e,0x3035316625202c36\n"
".quad 0x3b3135316625202c,0x3233662e6464610a,0x25202c3735662520,0x316625202c363566\n"
".quad 0x2e6464610a3b3134,0x3835662520323366,0x202c37356625202c,0x730a3b3733316625\n"
".quad 0x25203233662e6275,0x356625202c393566,0x3833316625202c38,0x33662e6275730a3b\n"
".quad 0x202c303666252032,0x6625202c39356625,0x6c756d0a3b383231,0x366625203233662e\n"
".quad 0x2c30366625202c31,0x660a3b3036662520,0x33662e6e722e616d,0x202c323666252032\n"
".quad 0x6625202c35356625,0x31366625202c3535,0x33662e766f6d0a3b,0x202c333666252032\n"
".quad 0x3030304346336630,0x636f6c2e0a3b3030,0x2038373432203220,0x33662e67656e0a31\n"
".quad 0x202c343666252032,0x6d660a3b32366625,0x3233662e6e722e61,0x25202c3536662520\n"
".quad 0x366625202c343666,0x3b30356625202c33,0x2e6e722e616d660a,0x3636662520323366\n"
".quad 0x202c35366625202c,0x4538334545426630,0x3b346625202c3933,0x3233662e67656e0a\n"
".quad 0x25202c3736662520,0x2e646c0a3b363666,0x33662e6d61726170,0x2c37323166252032\n"
".quad 0x74726d385a5f5b20,0x536650524c5f645f,0x7261705f666d665f,0x2e0a3b5d325f6d61\n"
".quad 0x3432203220636f6c,0x616d660a31203837,0x203233662e6e722e,0x6625202c38366625\n"
".quad 0x32316625202c3736,0x0a3b346625202c37,0x203233662e766f6d,0x6630202c39366625\n"
".quad 0x3030303030343034,0x3220636f6c2e0a3b,0x0a31203837343220,0x662e6e722e616d66\n"
".quad 0x2c30376625203233,0x30202c3535662520,0x3030303034303466,0x3b30356625202c30\n"
".quad 0x3233662e6c756d0a,0x25202c3137662520,0x346630202c353566,0x3b30303030303930\n"
".quad 0x2e6e722e616d660a,0x3237662520323366,0x202c31376625202c,0x6625202c35356625\n"
".quad 0x2e616d660a3b3037,0x25203233662e6e72,0x366625202c333766,0x2c33366625202c34\n"
".quad 0x6d0a3b3237662520,0x25203233662e766f,0x336630202c343766,0x3b39334538334544\n"
".quad 0x203220636f6c2e0a,0x6e0a312038373432,0x25203233662e6765,0x376625202c353766\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x35376625202c3637,0x202c34376625202c\n"
".quad 0x6e0a3b3435316625,0x25203233662e6765,0x376625202c373766,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x37376625202c3837,0x2c3732316625202c,0x0a3b343531662520\n"
".quad 0x662e6e722e616d66,0x2c39376625203233,0x30202c3036662520,0x3030303034303466\n"
".quad 0x3b30356625202c30,0x3233662e6c756d0a,0x25202c3038662520,0x346630202c303666\n"
".quad 0x3b30303030303930,0x2e6e722e616d660a,0x3138662520323366,0x202c30386625202c\n"
".quad 0x6625202c30366625,0x2e616d660a3b3937,0x25203233662e6e72,0x366625202c323866\n"
".quad 0x2c33366625202c34,0x6e0a3b3138662520,0x25203233662e6765,0x386625202c333866\n"
".quad 0x722e616d660a3b32,0x6625203233662e6e,0x33386625202c3438,0x202c34376625202c\n"
".quad 0x6e0a3b3035316625,0x25203233662e6765,0x386625202c353866,0x722e616d660a3b34\n"
".quad 0x6625203233662e6e,0x35386625202c3638,0x2c3732316625202c,0x0a3b303531662520\n"
".quad 0x203233662e67656e,0x6625202c37386625,0x2e616d660a3b3535,0x25203233662e6e72\n"
".quad 0x386625202c383866,0x2c39366625202c37,0x660a3b3035662520,0x33662e6e722e616d\n"
".quad 0x202c393866252032,0x6625202c31376625,0x38386625202c3535,0x6e722e616d660a3b\n"
".quad 0x396625203233662e,0x2c34366625202c30,0x25202c3336662520,0x67656e0a3b393866\n"
".quad 0x396625203233662e,0x3b30396625202c31,0x2e6e722e616d660a,0x3239662520323366\n"
".quad 0x202c31396625202c,0x6625202c34376625,0x662e67656e0a3b36,0x2c33396625203233\n"
".quad 0x660a3b3239662520,0x33662e6e722e616d,0x202c343966252032,0x6625202c33396625\n"
".quad 0x366625202c373231,0x33662e67656e0a3b,0x202c353966252032,0x6d660a3b30366625\n"
".quad 0x3233662e6e722e61,0x25202c3639662520,0x366625202c353966,0x3b30356625202c39\n"
".quad 0x2e6e722e616d660a,0x3739662520323366,0x202c30386625202c,0x6625202c30366625\n"
".quad 0x2e616d660a3b3639,0x25203233662e6e72,0x366625202c383966,0x2c33366625202c34\n"
".quad 0x6e0a3b3739662520,0x25203233662e6765,0x396625202c393966,0x722e616d660a3b38\n"
".quad 0x6625203233662e6e,0x396625202c303031,0x2c34376625202c39,0x0a3b313531662520\n"
".quad 0x203233662e67656e,0x25202c3130316625,0x6d660a3b30303166,0x3233662e6e722e61\n"
".quad 0x202c323031662520,0x25202c3130316625,0x6625202c37323166,0x6464610a3b313531\n"
".quad 0x316625203233662e,0x35356625202c3330,0x0a3b30366625202c,0x662e6e722e616d66\n"
".quad 0x3430316625203233,0x2c3330316625202c,0x3030343034663020,0x356625202c303030\n"
".quad 0x662e6c756d0a3b30,0x3530316625203233,0x2c3330316625202c,0x3030393034663020\n"
".quad 0x616d660a3b303030,0x203233662e6e722e,0x25202c3630316625,0x6625202c35303166\n"
".quad 0x316625202c333031,0x2e616d660a3b3430,0x25203233662e6e72,0x6625202c37303166\n"
".quad 0x33366625202c3436,0x3b3630316625202c,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x3730316625202c31,0x36662e766f6d0a3b,0x202c326466252034,0x3137433946336430\n"
".quad 0x4438423743313743,0x636f6c2e0a3b4331,0x2038373432203220,0x36662e7476630a31\n"
".quad 0x6625203233662e34,0x34316625202c3364,0x662e67656e0a3b31,0x2c34646625203436\n"
".quad 0x660a3b3164662520,0x36662e6e722e616d,0x202c356466252034,0x6625202c34646625\n"
".quad 0x33646625202c3264,0x36662e7476630a3b,0x6625203233662e34,0x32316625202c3664\n"
".quad 0x662e67656e0a3b37,0x2c37646625203436,0x660a3b3664662520,0x36662e6e722e616d\n"
".quad 0x202c386466252034,0x6625202c37646625,0x33646625202c3564,0x6e722e7476630a3b\n"
".quad 0x3436662e3233662e,0x202c383031662520,0x75730a3b38646625,0x6625203233662e62\n"
".quad 0x366625202c393031,0x3b35356625202c30,0x203220636f6c2e0a,0x660a312038373432\n"
".quad 0x33662e6e722e616d,0x2c30313166252032,0x202c393031662520,0x3030303430346630\n"
".quad 0x30356625202c3030,0x33662e6c756d0a3b,0x2c31313166252032,0x202c393031662520\n"
".quad 0x3030303930346630,0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c32313166\n"
".quad 0x316625202c313131,0x31316625202c3930,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x366625202c333131,0x2c33366625202c34,0x0a3b323131662520,0x2e3436662e747663\n"
".quad 0x3964662520323366,0x3b3331316625202c,0x3436662e7476630a,0x646625203233662e\n"
".quad 0x33316625202c3031,0x662e67656e0a3b37,0x3131646625203436,0x0a3b39646625202c\n"
".quad 0x662e6e722e616d66,0x3231646625203436,0x2c3131646625202c,0x25202c3264662520\n"
".quad 0x6d660a3b30316466,0x3436662e6e722e61,0x202c333164662520,0x6625202c37646625\n"
".quad 0x646625202c323164,0x2e7476630a3b3031,0x662e3233662e6e72,0x3431316625203436\n"
".quad 0x3b3331646625202c,0x3233662e6275730a,0x202c353131662520,0x6625202c37386625\n"
".quad 0x2e616d660a3b3036,0x25203233662e6e72,0x6625202c36313166,0x346630202c353131\n"
".quad 0x2c30303030303430,0x6d0a3b3035662520,0x25203233662e6c75,0x6625202c37313166\n"
".quad 0x346630202c353131,0x3b30303030303930,0x2e6e722e616d660a,0x3131662520323366\n"
".quad 0x3731316625202c38,0x2c3531316625202c,0x0a3b363131662520,0x662e6e722e616d66\n"
".quad 0x3931316625203233,0x202c34366625202c,0x6625202c33366625,0x7476630a3b383131\n"
".quad 0x3233662e3436662e,0x202c343164662520,0x630a3b3931316625,0x662e3436662e7476\n"
".quad 0x3531646625203233,0x3b3833316625202c,0x3436662e67656e0a,0x202c363164662520\n"
".quad 0x660a3b3431646625,0x36662e6e722e616d,0x2c37316466252034,0x202c363164662520\n"
".quad 0x6625202c32646625,0x616d660a3b353164,0x203436662e6e722e,0x25202c3831646625\n"
".quad 0x646625202c376466,0x31646625202c3731,0x722e7476630a3b35,0x36662e3233662e6e\n"
".quad 0x2c30323166252034,0x0a3b383164662520,0x203233662e627573,0x25202c3132316625\n"
".quad 0x366625202c353566,0x722e616d660a3b30,0x6625203233662e6e,0x316625202c323231\n"
".quad 0x30346630202c3132,0x202c303030303034,0x756d0a3b30356625,0x6625203233662e6c\n"
".quad 0x316625202c333231,0x30346630202c3132,0x0a3b303030303039,0x662e6e722e616d66\n"
".quad 0x3432316625203233,0x2c3332316625202c,0x202c313231662520,0x660a3b3232316625\n"
".quad 0x33662e6e722e616d,0x2c35323166252032,0x25202c3436662520,0x316625202c333666\n"
".quad 0x2e7476630a3b3432,0x203233662e343666,0x25202c3931646625,0x76630a3b35323166\n"
".quad 0x33662e3436662e74,0x2c30326466252032,0x0a3b383231662520,0x203436662e67656e\n"
".quad 0x25202c3132646625,0x6d660a3b39316466,0x3436662e6e722e61,0x202c323264662520\n"
".quad 0x25202c3132646625,0x646625202c326466,0x2e616d660a3b3032,0x25203436662e6e72\n"
".quad 0x6625202c33326466,0x32646625202c3764,0x3032646625202c32,0x6e722e7476630a3b\n"
".quad 0x3436662e3233662e,0x202c363231662520,0x6c0a3b3332646625,0x2e6d617261702e64\n"
".quad 0x326c722520343675,0x385a5f5b202c3230,0x524c5f645f74726d,0x5f666d665f536650\n"
".quad 0x5d335f6d61726170,0x3220636f6c2e0a3b,0x0a31203333343220,0x732e6f6c2e64616d\n"
".quad 0x34316c7225203436,0x2c366c7225202c32,0x2c3230326c722520,0x6c0a3b356c722520\n"
".quad 0x2e6d617261702e64,0x316c722520343675,0x385a5f5b202c3939,0x524c5f645f74726d\n"
".quad 0x5f666d665f536650,0x5d315f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f\n"
".quad 0x6c7225203436752e,0x6c7225202c333431,0x6c68730a3b393931,0x6c7225203436622e\n"
".quad 0x6c7225202c343431,0x3b3233202c323431,0x3436732e7268730a,0x2c3534316c722520\n"
".quad 0x2c3434316c722520,0x6f6c2e0a3b323320,0x3038343220322063,0x622e6c68730a3120\n"
".quad 0x34316c7225203436,0x34316c7225202c36,0x64610a3b32202c35,0x7225203436732e64\n"
".quad 0x7225202c3734316c,0x7225202c3334316c,0x74730a3b3634316c,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d373431,0x636f6c2e0a3b3836,0x2031383432203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c393431,0x326c7225202c3932\n"
".quad 0x356c7225202c3230,0x36622e6c68730a3b,0x3035316c72252034,0x3934316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3135316c,0x3233202c3035316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203138343220,0x203436622e6c6873,0x202c3235316c7225\n"
".quad 0x202c3135316c7225,0x732e6464610a3b32,0x35316c7225203436,0x34316c7225202c33\n"
".quad 0x35316c7225202c33,0x6c672e74730a3b32,0x3233662e6c61626f,0x3335316c72255b20\n"
".quad 0x3b38376625202c5d,0x3436732e6464610a,0x2c3435316c722520,0x31202c366c722520\n"
".quad 0x6f6c2e0a3b363335,0x3238343220322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3535316c,0x7225202c3435316c,0x7225202c3230326c,0x2e6c68730a3b356c\n"
".quad 0x316c722520343662,0x316c7225202c3635,0x0a3b3233202c3535,0x203436732e726873\n"
".quad 0x202c3735316c7225,0x202c3635316c7225,0x636f6c2e0a3b3233,0x2032383432203220\n"
".quad 0x36622e6c68730a31,0x3835316c72252034,0x3735316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c393531,0x6c7225202c333431,0x2e74730a3b383531\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x386625202c5d3935,0x20636f6c2e0a3b36\n"
".quad 0x3120333834322032,0x2e6f6c2e64616d0a,0x316c722520343673,0x336c7225202c3136\n"
".quad 0x30326c7225202c36,0x3b356c7225202c32,0x3436622e6c68730a,0x2c3236316c722520\n"
".quad 0x2c3136316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c333631\n"
".quad 0x3b3233202c323631,0x203220636f6c2e0a,0x730a312033383432,0x25203436622e6c68\n"
".quad 0x25202c3436316c72,0x32202c3336316c72,0x36732e6464610a3b,0x3536316c72252034\n"
".quad 0x3334316c7225202c,0x3436316c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x5d3536316c72255b,0x0a3b34396625202c,0x203436732e646461,0x202c3636316c7225\n"
".quad 0x3033202c366c7225,0x636f6c2e0a3b3237,0x2034383432203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c373631,0x6c7225202c363631,0x6c7225202c323032\n"
".quad 0x622e6c68730a3b35,0x36316c7225203436,0x36316c7225202c38,0x730a3b3233202c37\n"
".quad 0x25203436732e7268,0x25202c3936316c72,0x33202c3836316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120343834322032,0x3436622e6c68730a,0x2c3037316c722520,0x2c3936316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x316c7225202c3137,0x316c7225202c3334\n"
".quad 0x672e74730a3b3037,0x33662e6c61626f6c,0x37316c72255b2032,0x30316625202c5d31\n"
".quad 0x732e6464610a3b32,0x37316c7225203436,0x2c366c7225202c32,0x2e0a3b3034383320\n"
".quad 0x3432203220636f6c,0x64616d0a31203538,0x203436732e6f6c2e,0x202c3337316c7225\n"
".quad 0x202c3237316c7225,0x202c3230326c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3437316c,0x3233202c3337316c,0x36732e7268730a3b,0x3537316c72252034\n"
".quad 0x3437316c7225202c,0x6c2e0a3b3233202c,0x383432203220636f,0x2e6c68730a312035\n"
".quad 0x316c722520343662,0x316c7225202c3637,0x610a3b32202c3537,0x25203436732e6464\n"
".quad 0x25202c3737316c72,0x25202c3334316c72,0x730a3b3637316c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3737316c,0x64610a3b38303166,0x7225203436732e64\n"
".quad 0x7225202c3837316c,0x38303634202c366c,0x3220636f6c2e0a3b,0x0a31203638343220\n"
".quad 0x732e6f6c2e64616d,0x37316c7225203436,0x37316c7225202c39,0x30326c7225202c38\n"
".quad 0x3b356c7225202c32,0x3436622e6c68730a,0x2c3038316c722520,0x2c3937316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c313831,0x3b3233202c303831\n"
".quad 0x203220636f6c2e0a,0x730a312036383432,0x25203436622e6c68,0x25202c3238316c72\n"
".quad 0x32202c3138316c72,0x36732e6464610a3b,0x3338316c72252034,0x3334316c7225202c\n"
".quad 0x3238316c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3338316c72255b\n"
".quad 0x3b3431316625202c,0x203220636f6c2e0a,0x6d0a312037383432,0x36732e6f6c2e6461\n"
".quad 0x3538316c72252034,0x2c30396c7225202c,0x2c3230326c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3638316c72,0x33202c3538316c72,0x732e7268730a3b32\n"
".quad 0x38316c7225203436,0x38316c7225202c37,0x2e0a3b3233202c36,0x3432203220636f6c\n"
".quad 0x6c68730a31203738,0x6c7225203436622e,0x6c7225202c383831,0x0a3b32202c373831\n"
".quad 0x203436732e646461,0x202c3938316c7225,0x202c3334316c7225,0x0a3b3838316c7225\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3938316c72,0x2e0a3b3032316625\n"
".quad 0x3432203220636f6c,0x64616d0a31203838,0x203436732e6f6c2e,0x202c3139316c7225\n"
".quad 0x25202c36396c7225,0x25202c3230326c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c323931,0x3b3233202c313931,0x3436732e7268730a,0x2c3339316c722520\n"
".quad 0x2c3239316c722520,0x6f6c2e0a3b323320,0x3838343220322063,0x622e6c68730a3120\n"
".quad 0x39316c7225203436,0x39316c7225202c34,0x64610a3b32202c33,0x7225203436732e64\n"
".quad 0x7225202c3539316c,0x7225202c3334316c,0x74730a3b3439316c,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d353931,0x6f6c2e0a3b363231,0x3039343220322063\n"
".quad 0x0a3b7465720a3220,0x72746e652e0a0a7d,0x6e6937315a5f2079,0x657a696c61697469\n"
".quad 0x50656c676e69735f,0x7261702e0a286d66,0x203436752e206d61,0x74696e6937315a5f\n"
".quad 0x735f657a696c6169,0x6d6650656c676e69,0x305f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203436752e20,0x616974696e693731,0x6e69735f657a696c,0x705f6d6650656c67\n"
".quad 0x290a315f6d617261,0x206765722e0a7b0a,0x3c6625203233662e,0x65722e0a3b3e3833\n"
".quad 0x25203436662e2067,0x2e0a3b3e373c6466,0x6572702e20676572,0x3b3e343c70252064\n"
".quad 0x732e206765722e0a,0x38313c7225203233,0x206765722e0a3b3e,0x6c7225203436732e\n"
".quad 0x0a0a0a3b3e30323c,0x6d617261702e646c,0x6c7225203436752e,0x37315a5f5b202c34\n"
".quad 0x696c616974696e69,0x6c676e69735f657a,0x7261705f6d665065,0x6c0a3b5d305f6d61\n"
".quad 0x2e6d617261702e64,0x316c722520343675,0x6937315a5f5b202c,0x7a696c616974696e\n"
".quad 0x656c676e69735f65,0x617261705f6d6650,0x76630a3b5d315f6d,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x25202c326c722520,0x6f6c2e0a3b346c72,0x3539343220322063\n"
".quad 0x752e766f6d0a3120,0x202c317225203233,0x3b782e6469746e25,0x3233752e766f6d0a\n"
".quad 0x6325202c32722520,0x0a3b782e64696174,0x203233752e766f6d,0x697425202c337225\n"
".quad 0x64616d0a3b782e64,0x203233732e6f6c2e,0x317225202c347225,0x25202c327225202c\n"
".quad 0x636f6c2e0a3b3372,0x2036393432203220,0x33752e766f6d0a31,0x25202c3572252032\n"
".quad 0x0a3b792e6469746e,0x203233752e766f6d,0x746325202c367225,0x6d0a3b792e646961\n"
".quad 0x25203233752e766f,0x64697425202c3772,0x2e64616d0a3b792e,0x25203233732e6f6c\n"
".quad 0x2c357225202c3872,0x7225202c36722520,0x752e7476630a3b37,0x25203233752e3436\n"
".quad 0x347225202c356c72,0x3220636f6c2e0a3b,0x0a31203739343220,0x2e3436732e747663\n"
".quad 0x366c722520323373,0x6d0a3b387225202c,0x36732e6f6c2e6461,0x202c336c72252034\n"
".quad 0x7225202c366c7225,0x356c7225202c316c,0x3220636f6c2e0a3b,0x0a31203839343220\n"
".quad 0x2e746c2e70746573,0x2c31702520323373,0x3031202c34722520,0x707465730a3b3432\n"
".quad 0x203233732e746c2e,0x387225202c327025,0x610a3b383637202c,0x20646572702e646e\n"
".quad 0x317025202c337025,0x2e0a3b327025202c,0x3432203220636f6c,0x7025400a31203839\n"
".quad 0x4242206172622033,0x2e0a0a3b325f3034,0x3532203220636f6c,0x7465720a32203531\n"
".quad 0x5f303442420a0a3b,0x662e766f6d0a3a32,0x202c316625203233,0x3030303030306630\n"
".quad 0x636f6c2e0a3b3030,0x2033303532203220,0x33662e6c756d0a31,0x25202c3266252032\n"
".quad 0x30306630202c3166,0x0a3b303030303030,0x662e6e722e616d66,0x202c336625203233\n"
".quad 0x306630202c316625,0x2c30303030303030,0x6f6d0a3b32662520,0x6625203233662e76\n"
".quad 0x4346336630202c34,0x6d0a3b3030303030,0x25203233662e766f,0x46336630202c3566\n"
".quad 0x0a3b303030303038,0x32203220636f6c2e,0x656e0a3120303135,0x6625203233662e67\n"
".quad 0x0a3b336625202c36,0x32203220636f6c2e,0x6d660a3120353035,0x3233662e6e722e61\n"
".quad 0x6625202c37662520,0x202c346625202c36,0x6c756d0a3b356625,0x386625203233662e\n"
".quad 0x30202c376625202c,0x3345383345453366,0x622e6c68730a3b39,0x2c376c7225203436\n"
".quad 0x33202c336c722520,0x732e7268730a3b32,0x2c386c7225203436,0x33202c376c722520\n"
".quad 0x20636f6c2e0a3b32,0x3120353035322032,0x3436622e6c68730a,0x25202c396c722520\n"
".quad 0x0a3b32202c386c72,0x203436732e646461,0x25202c30316c7225,0x6c7225202c326c72\n"
".quad 0x6c672e74730a3b39,0x3233662e6c61626f,0x5d30316c72255b20,0x6d0a3b386625202c\n"
".quad 0x25203233662e766f,0x30346630202c3966,0x0a3b303030303034,0x32203220636f6c2e\n"
".quad 0x6d660a3120363035,0x3233662e6e722e61,0x25202c3031662520,0x30306630202c3966\n"
".quad 0x202c303030303030,0x3030303846336630,0x2e766f6d0a3b3030,0x3131662520323366\n"
".quad 0x303930346630202c,0x6c2e0a3b30303030,0x303532203220636f,0x2e6c756d0a312036\n"
".quad 0x3231662520323366,0x202c31316625202c,0x3030303030306630,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x316625202c333166,0x3030306630202c32,0x25202c3030303030\n"
".quad 0x616d660a3b303166,0x203233662e6e722e,0x6625202c34316625,0x202c346625202c36\n"
".quad 0x756d0a3b33316625,0x6625203233662e6c,0x34316625202c3531,0x334544336630202c\n"
".quad 0x646c0a3b39334538,0x752e6d617261702e,0x39316c7225203436,0x6937315a5f5b202c\n"
".quad 0x7a696c616974696e,0x656c676e69735f65,0x617261705f6d6650,0x616d0a3b5d315f6d\n"
".quad 0x3436732e6f6c2e64,0x202c31316c722520,0x33202c39316c7225,0x6c7225202c323730\n"
".quad 0x636f6c2e0a3b3031,0x2036303532203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x2c5d31316c72255b,0x6d0a3b3531662520,0x36732e6f6c2e6461,0x2c32316c72252034\n"
".quad 0x202c39316c722520,0x7225202c32373033,0x6f6c2e0a3b31316c,0x3730353220322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x5d32316c72255b20,0x0a3b35316625202c\n"
".quad 0x32203220636f6c2e,0x656e0a3120383035,0x6625203233662e67,0x3b396625202c3631\n"
".quad 0x2e6e722e616d660a,0x3731662520323366,0x202c36316625202c,0x356625202c316625\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x2c32316625202c38,0x3030303030663020\n"
".quad 0x316625202c303030,0x722e616d660a3b37,0x6625203233662e6e,0x2c366625202c3931\n"
".quad 0x6625202c34662520,0x2e6c756d0a3b3831,0x3032662520323366,0x202c39316625202c\n"
".quad 0x4538334544336630,0x2e64616d0a3b3933,0x25203436732e6f6c,0x7225202c33316c72\n"
".quad 0x373033202c39316c,0x32316c7225202c32,0x3220636f6c2e0a3b,0x0a31203830353220\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d33316c72,0x64616d0a3b303266\n"
".quad 0x203436732e6f6c2e,0x25202c34316c7225,0x3033202c39316c72,0x316c7225202c3237\n"
".quad 0x20636f6c2e0a3b33,0x3120393035322032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d34316c7225,0x6c2e0a3b30326625,0x313532203220636f,0x2e6464610a312030\n"
".quad 0x3132662520323366,0x30202c316625202c,0x3030303030303066,0x722e616d660a3b30\n"
".quad 0x6625203233662e6e,0x31326625202c3232,0x303430346630202c,0x6630202c30303030\n"
".quad 0x3030303030384633,0x33662e6c756d0a3b,0x202c333266252032,0x6630202c31326625\n"
".quad 0x3030303030393034,0x6e722e616d660a3b,0x326625203233662e,0x2c33326625202c34\n"
".quad 0x25202c3132662520,0x616d660a3b323266,0x203233662e6e722e,0x6625202c35326625\n"
".quad 0x202c346625202c36,0x76630a3b34326625,0x33662e3436662e74,0x202c316466252032\n"
".quad 0x756d0a3b35326625,0x6625203436662e6c,0x31646625202c3264,0x433946336430202c\n"
".quad 0x4237433137433137,0x76630a3b43314438,0x3233662e6e722e74,0x326625203436662e\n"
".quad 0x3b32646625202c36,0x2e6f6c2e64616d0a,0x316c722520343673,0x39316c7225202c35\n"
".quad 0x202c32373033202c,0x2e0a3b34316c7225,0x3532203220636f6c,0x2e74730a31203031\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x36326625202c5d35,0x33662e6275730a3b\n"
".quad 0x202c373266252032,0x306630202c316625,0x3b30303030303030,0x203220636f6c2e0a\n"
".quad 0x660a312031313532,0x33662e6e722e616d,0x202c383266252032,0x6630202c37326625\n"
".quad 0x3030303030343034,0x303846336630202c,0x756d0a3b30303030,0x6625203233662e6c\n"
".quad 0x37326625202c3932,0x303930346630202c,0x6d660a3b30303030,0x3233662e6e722e61\n"
".quad 0x25202c3033662520,0x326625202c393266,0x3b38326625202c37,0x2e6e722e616d660a\n"
".quad 0x3133662520323366,0x25202c366625202c,0x30336625202c3466,0x36662e7476630a3b\n"
".quad 0x6625203233662e34,0x31336625202c3364,0x36662e6c756d0a3b,0x202c346466252034\n"
".quad 0x6430202c33646625,0x3743313743394633,0x4331443842374331,0x6e722e7476630a3b\n"
".quad 0x3436662e3233662e,0x25202c3233662520,0x64616d0a3b346466,0x203436732e6f6c2e\n"
".quad 0x25202c36316c7225,0x3033202c39316c72,0x316c7225202c3237,0x20636f6c2e0a3b35\n"
".quad 0x3120313135322032,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d36316c7225\n"
".quad 0x6c2e0a3b32336625,0x313532203220636f,0x2e616d660a312032,0x25203233662e6e72\n"
".quad 0x396625202c333366,0x303030386630202c,0x6630202c30303030,0x3030303030384633\n"
".quad 0x33662e6c756d0a3b,0x202c343366252032,0x6630202c31316625,0x3030303030303038\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x2c34336625202c35,0x3030303038663020\n"
".quad 0x336625202c303030,0x722e616d660a3b33,0x6625203233662e6e,0x2c366625202c3633\n"
".quad 0x6625202c34662520,0x2e7476630a3b3533,0x203233662e343666,0x6625202c35646625\n"
".quad 0x2e6c756d0a3b3633,0x3664662520343666,0x202c35646625202c,0x3137433946336430\n"
".quad 0x4438423743313743,0x2e7476630a3b4331,0x662e3233662e6e72,0x2c37336625203436\n"
".quad 0x6d0a3b3664662520,0x36732e6f6c2e6461,0x2c37316c72252034,0x202c39316c722520\n"
".quad 0x7225202c32373033,0x6f6c2e0a3b36316c,0x3231353220322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x5d37316c72255b20,0x0a3b37336625202c,0x732e6f6c2e64616d\n"
".quad 0x38316c7225203436,0x2c39316c7225202c,0x25202c3237303320,0x6c2e0a3b37316c72\n"
".quad 0x313532203220636f,0x672e74730a312033,0x33662e6c61626f6c,0x38316c72255b2032\n"
".quad 0x3b32336625202c5d,0x203220636f6c2e0a,0x720a322035313532,0x2e0a0a7d0a3b7465\n"
".quad 0x5a5f207972746e65,0x616974696e693331,0x50524c5f657a696c,0x7261702e0a286d66\n"
".quad 0x203436752e206d61,0x74696e6933315a5f,0x4c5f657a696c6169,0x7261705f6d665052\n"
".quad 0x702e0a2c305f6d61,0x36752e206d617261,0x6e6933315a5f2034,0x657a696c61697469\n"
".quad 0x705f6d6650524c5f,0x290a315f6d617261,0x206765722e0a7b0a,0x3c6625203233662e\n"
".quad 0x65722e0a3b3e3833,0x25203436662e2067,0x2e0a3b3e373c6466,0x6572702e20676572\n"
".quad 0x3b3e343c70252064,0x732e206765722e0a,0x38313c7225203233,0x206765722e0a3b3e\n"
".quad 0x6c7225203436732e,0x0a0a0a3b3e31323c,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x33315a5f5b202c34,0x696c616974696e69,0x6d6650524c5f657a,0x305f6d617261705f\n"
".quad 0x61702e646c0a3b5d,0x203436752e6d6172,0x5f5b202c316c7225,0x6974696e6933315a\n"
".quad 0x524c5f657a696c61,0x617261705f6d6650,0x76630a3b5d315f6d,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x25202c326c722520,0x6f6c2e0a3b346c72,0x3032353220322063\n"
".quad 0x752e766f6d0a3120,0x202c317225203233,0x3b782e6469746e25,0x3233752e766f6d0a\n"
".quad 0x6325202c32722520,0x0a3b782e64696174,0x203233752e766f6d,0x697425202c337225\n"
".quad 0x64616d0a3b782e64,0x203233732e6f6c2e,0x317225202c347225,0x25202c327225202c\n"
".quad 0x636f6c2e0a3b3372,0x2031323532203220,0x33752e766f6d0a31,0x25202c3572252032\n"
".quad 0x0a3b792e6469746e,0x203233752e766f6d,0x746325202c367225,0x6d0a3b792e646961\n"
".quad 0x25203233752e766f,0x64697425202c3772,0x2e64616d0a3b792e,0x25203233732e6f6c\n"
".quad 0x2c357225202c3872,0x7225202c36722520,0x752e7476630a3b37,0x25203233752e3436\n"
".quad 0x347225202c356c72,0x3220636f6c2e0a3b,0x0a31203232353220,0x2e3436732e747663\n"
".quad 0x366c722520323373,0x6d0a3b387225202c,0x36732e6f6c2e6461,0x202c336c72252034\n"
".quad 0x7225202c366c7225,0x356c7225202c316c,0x3220636f6c2e0a3b,0x0a31203332353220\n"
".quad 0x2e746c2e70746573,0x2c31702520323373,0x3637202c34722520,0x2e707465730a3b38\n"
".quad 0x25203233732e746c,0x2c387225202c3270,0x6e610a3b32313520,0x2520646572702e64\n"
".quad 0x2c317025202c3370,0x6c2e0a3b32702520,0x323532203220636f,0x337025400a312033\n"
".quad 0x3442422061726220,0x6c2e0a0a3b325f31,0x343532203220636f,0x3b7465720a322030\n"
".quad 0x325f313442420a0a,0x33662e766f6d0a3a,0x30202c3166252032,0x3030303030303066\n"
".quad 0x20636f6c2e0a3b30,0x3120383235322032,0x3233662e6c756d0a,0x6625202c32662520\n"
".quad 0x3030306630202c31,0x660a3b3030303030,0x33662e6e722e616d,0x25202c3366252032\n"
".quad 0x30306630202c3166,0x202c303030303030,0x766f6d0a3b326625,0x346625203233662e\n"
".quad 0x304346336630202c,0x6f6d0a3b30303030,0x6625203233662e76,0x3846336630202c35\n"
".quad 0x2e0a3b3030303030,0x3532203220636f6c,0x67656e0a31203533,0x366625203233662e\n"
".quad 0x2e0a3b336625202c,0x3532203220636f6c,0x616d660a31203033,0x203233662e6e722e\n"
".quad 0x366625202c376625,0x25202c346625202c,0x2e6c756d0a3b3566,0x2c38662520323366\n"
".quad 0x6630202c37662520,0x3933453833454533,0x36622e6c68730a3b,0x202c376c72252034\n"
".quad 0x3233202c336c7225,0x36732e7268730a3b,0x202c386c72252034,0x3233202c376c7225\n"
".quad 0x3220636f6c2e0a3b,0x0a31203033353220,0x203436622e6c6873,0x7225202c396c7225\n"
".quad 0x610a3b32202c386c,0x25203436732e6464,0x7225202c30316c72,0x396c7225202c326c\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x2c5d30316c72255b,0x6f6d0a3b38662520\n"
".quad 0x6625203233662e76,0x3430346630202c39,0x2e0a3b3030303030,0x3532203220636f6c\n"
".quad 0x616d660a31203133,0x203233662e6e722e,0x6625202c30316625,0x3030306630202c39\n"
".quad 0x30202c3030303030,0x3030303038463366,0x662e766f6d0a3b30,0x2c31316625203233\n"
".quad 0x3030393034663020,0x6f6c2e0a3b303030,0x3133353220322063,0x662e6c756d0a3120\n"
".quad 0x2c32316625203233,0x30202c3131662520,0x3030303030303066,0x722e616d660a3b30\n"
".quad 0x6625203233662e6e,0x32316625202c3331,0x303030306630202c,0x6625202c30303030\n"
".quad 0x2e616d660a3b3031,0x25203233662e6e72,0x366625202c343166,0x25202c346625202c\n"
".quad 0x6c756d0a3b333166,0x316625203233662e,0x2c34316625202c35,0x3833454433663020\n"
".quad 0x2e646c0a3b393345,0x36752e6d61726170,0x2c30326c72252034,0x6e6933315a5f5b20\n"
".quad 0x657a696c61697469,0x705f6d6650524c5f,0x3b5d315f6d617261,0x3436622e6c68730a\n"
".quad 0x202c31316c722520,0x31202c30326c7225,0x732e6464610a3b31,0x32316c7225203436\n"
".quad 0x2c30316c7225202c,0x0a3b31316c722520,0x32203220636f6c2e,0x74730a3120313335\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x316625202c5d3231,0x732e6464610a3b35\n"
".quad 0x33316c7225203436,0x2c32316c7225202c,0x0a3b31316c722520,0x32203220636f6c2e\n"
".quad 0x74730a3120323335,0x2e6c61626f6c672e,0x6c72255b20323366,0x316625202c5d3331\n"
".quad 0x20636f6c2e0a3b35,0x3120333335322032,0x3233662e67656e0a,0x25202c3631662520\n"
".quad 0x2e616d660a3b3966,0x25203233662e6e72,0x316625202c373166,0x202c316625202c36\n"
".quad 0x616d660a3b356625,0x203233662e6e722e,0x6625202c38316625,0x30306630202c3231\n"
".quad 0x202c303030303030,0x6d660a3b37316625,0x3233662e6e722e61,0x25202c3931662520\n"
".quad 0x2c346625202c3666,0x6d0a3b3831662520,0x25203233662e6c75,0x316625202c303266\n"
".quad 0x4544336630202c39,0x610a3b3933453833,0x25203436732e6464,0x7225202c34316c72\n"
".quad 0x6c7225202c33316c,0x636f6c2e0a3b3131,0x2033333532203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x2c5d34316c72255b,0x610a3b3032662520,0x25203436732e6464\n"
".quad 0x7225202c35316c72,0x6c7225202c34316c,0x636f6c2e0a3b3131,0x2034333532203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d35316c72255b,0x2e0a3b3032662520\n"
".quad 0x3532203220636f6c,0x6464610a31203533,0x326625203233662e,0x202c316625202c31\n"
".quad 0x3030303030306630,0x2e616d660a3b3030,0x25203233662e6e72,0x326625202c323266\n"
".quad 0x3430346630202c31,0x30202c3030303030,0x3030303038463366,0x662e6c756d0a3b30\n"
".quad 0x2c33326625203233,0x30202c3132662520,0x3030303039303466,0x722e616d660a3b30\n"
".quad 0x6625203233662e6e,0x33326625202c3432,0x202c31326625202c,0x6d660a3b32326625\n"
".quad 0x3233662e6e722e61,0x25202c3532662520,0x2c346625202c3666,0x630a3b3432662520\n"
".quad 0x662e3436662e7476,0x2c31646625203233,0x6d0a3b3532662520,0x25203436662e6c75\n"
".quad 0x646625202c326466,0x3946336430202c31,0x3743313743313743,0x630a3b4331443842\n"
".quad 0x33662e6e722e7476,0x6625203436662e32,0x32646625202c3632,0x36732e6464610a3b\n"
".quad 0x2c36316c72252034,0x202c35316c722520,0x2e0a3b31316c7225,0x3532203220636f6c\n"
".quad 0x2e74730a31203533,0x662e6c61626f6c67,0x316c72255b203233,0x36326625202c5d36\n"
".quad 0x33662e6275730a3b,0x202c373266252032,0x306630202c316625,0x3b30303030303030\n"
".quad 0x203220636f6c2e0a,0x660a312036333532,0x33662e6e722e616d,0x202c383266252032\n"
".quad 0x6630202c37326625,0x3030303030343034,0x303846336630202c,0x756d0a3b30303030\n"
".quad 0x6625203233662e6c,0x37326625202c3932,0x303930346630202c,0x6d660a3b30303030\n"
".quad 0x3233662e6e722e61,0x25202c3033662520,0x326625202c393266,0x3b38326625202c37\n"
".quad 0x2e6e722e616d660a,0x3133662520323366,0x25202c366625202c,0x30336625202c3466\n"
".quad 0x36662e7476630a3b,0x6625203233662e34,0x31336625202c3364,0x36662e6c756d0a3b\n"
".quad 0x202c346466252034,0x6430202c33646625,0x3743313743394633,0x4331443842374331\n"
".quad 0x6e722e7476630a3b,0x3436662e3233662e,0x25202c3233662520,0x6464610a3b346466\n"
".quad 0x6c7225203436732e,0x316c7225202c3731,0x31316c7225202c36,0x3220636f6c2e0a3b\n"
".quad 0x0a31203633353220,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d37316c72\n"
".quad 0x6f6c2e0a3b323366,0x3733353220322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x2c396625202c3333,0x3030303038663020,0x336630202c303030,0x3b30303030303846\n"
".quad 0x3233662e6c756d0a,0x25202c3433662520,0x386630202c313166,0x3b30303030303030\n"
".quad 0x2e6e722e616d660a,0x3533662520323366,0x202c34336625202c,0x3030303030386630\n"
".quad 0x33336625202c3030,0x6e722e616d660a3b,0x336625203233662e,0x202c366625202c36\n"
".quad 0x336625202c346625,0x662e7476630a3b35,0x25203233662e3436,0x336625202c356466\n"
".quad 0x662e6c756d0a3b36,0x2c36646625203436,0x30202c3564662520,0x4331374339463364\n"
".quad 0x3144384237433137,0x722e7476630a3b43,0x36662e3233662e6e,0x202c373366252034\n"
".quad 0x64610a3b36646625,0x7225203436732e64,0x6c7225202c38316c,0x316c7225202c3731\n"
".quad 0x20636f6c2e0a3b31,0x3120373335322032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d38316c7225,0x64610a3b37336625,0x7225203436732e64,0x6c7225202c39316c\n"
".quad 0x316c7225202c3831,0x20636f6c2e0a3b31,0x3120383335322032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x202c5d39316c7225,0x6c2e0a3b32336625,0x343532203220636f\n"
".quad 0x3b7465720a322030,0x0000000a0a0a7d0a\n"
".text");

extern "C" {

extern const unsigned long long fatbinData[70274];

}


extern "C" {

static const struct {int m; int v; const unsigned long long* d; char* f;} __fatDeviceText __attribute__ ((aligned (8))) __attribute__ ((section (".nvFatBinSegment")))=
 { 0x466243b1, 1, fatbinData, 0 };

}
# 3 "txInterpTest.cudafe1.stub.c" 2 3
extern void __device_stub__Z11simple_copyPfS_Pifm(float *, float *, int *, float, size_t);
extern void __device_stub__Z14ExtractFromC_dPfmf(float *, size_t, float);
extern void __device_stub__Z18LR_d_hybABCD_forcePfS_fmS_S_i(float *, float *, float, size_t, float *, float *, int);
extern void __device_stub__Z18LR_d_hybBACD_forcePfS_fmS_S_i(float *, float *, float, size_t, float *, float *, int);
extern void __device_stub__Z12LR_d_hybABCDPfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z13LR_d_hybABCD2PfS_fmi(float *, float *, float, size_t, int);
extern void __device_stub__Z13LR_d_hybABDC2PfS_fmfi(float *, float *, float, size_t, float, int);
extern void __device_stub__Z10LR_d_ABDC2PfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z16LR_d_ABDC_InterpPfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z19LR_d_hybABDC_InterpPfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z12LR_d_hybBACDPfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z13LR_d_hybBACD2PfS_fmi(float *, float *, float, size_t, int);
extern void __device_stub__Z10LR_d_BACD2PfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z12LR_d_hybBADCPfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z13LR_d_hybBADC2PfS_fmfi(float *, float *, float, size_t, float, int);
extern void __device_stub__Z10LR_d_BADC2PfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z19LR_d_hybBADC_InterpPfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z9LR_d_ABCDPfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z10LR_d_ABCD2PfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z9LR_d_ABDCPfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z9LR_d_BACDPfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z16LR_d_BADC_InterpPfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z12mrt_d_singlePfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z18mrt_d_single_forcePfS_fmS_S_i(float *, float *, float, size_t, float *, float *, int);
extern void __device_stub__Z17mrt_d_hybAB_forcePfS_fmS_S_i(float *, float *, float, size_t, float *, float *, int);
extern void __device_stub__Z17mrt_d_hybBA_forcePfS_fmS_S_i(float *, float *, float, size_t, float *, float *, int);
extern void __device_stub__Z11mrt_d_hybABPfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z11mrt_d_hybBAPfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z12mrt_d_textABPfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z12mrt_d_textBAPfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z8mrt_d_LRPfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z17initialize_singlePfm(float *, size_t);
extern void __device_stub__Z13initialize_LRPfm(float *, size_t);
static void __sti____cudaRegisterAll_20_txInterpTest_cpp1_ii_8ec10853(void) __attribute__((__constructor__));
void __device_stub__Z11simple_copyPfS_Pifm(float *__par0, float *__par1, int *__par2, float __par3, size_t __par4){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, int *, float, size_t))simple_copy)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, int *, float, size_t))simple_copy))); };}
# 370 "txInterpTest.cu"
void simple_copy( float *__cuda_0,float *__cuda_1,int *__cuda_2,float __cuda_3,size_t __cuda_4)
# 372 "txInterpTest.cu"
{__device_stub__Z11simple_copyPfS_Pifm( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 379 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z14ExtractFromC_dPfmf( float *__par0, size_t __par1, float __par2) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, size_t, float))ExtractFromC_d)); (void)cudaLaunch(((char *)((void ( *)(float *, size_t, float))ExtractFromC_d))); }; }
# 381 "txInterpTest.cu"
void ExtractFromC_d( float *__cuda_0,size_t __cuda_1,float __cuda_2)
# 383 "txInterpTest.cu"
{__device_stub__Z14ExtractFromC_dPfmf( __cuda_0,__cuda_1,__cuda_2);
# 447 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z18LR_d_hybABCD_forcePfS_fmS_S_i( float *__par0, float *__par1, float __par2, size_t __par3, float *__par4, float *__par5, int __par6) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float *, float *, int))LR_d_hybABCD_force)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float *, float *, int))LR_d_hybABCD_force))); }; }
# 449 "txInterpTest.cu"
void LR_d_hybABCD_force( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float *__cuda_4,float *__cuda_5,int __cuda_6)
# 451 "txInterpTest.cu"
{__device_stub__Z18LR_d_hybABCD_forcePfS_fmS_S_i( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6);
# 541 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z18LR_d_hybBACD_forcePfS_fmS_S_i( float *__par0, float *__par1, float __par2, size_t __par3, float *__par4, float *__par5, int __par6) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float *, float *, int))LR_d_hybBACD_force)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float *, float *, int))LR_d_hybBACD_force))); }; }
# 543 "txInterpTest.cu"
void LR_d_hybBACD_force( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float *__cuda_4,float *__cuda_5,int __cuda_6)
# 545 "txInterpTest.cu"
{__device_stub__Z18LR_d_hybBACD_forcePfS_fmS_S_i( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6);
# 634 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z12LR_d_hybABCDPfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))LR_d_hybABCD)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))LR_d_hybABCD))); }; }
# 638 "txInterpTest.cu"
void LR_d_hybABCD( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 640 "txInterpTest.cu"
{__device_stub__Z12LR_d_hybABCDPfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 691 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z13LR_d_hybABCD2PfS_fmi( float *__par0, float *__par1, float __par2, size_t __par3, int __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, int))LR_d_hybABCD2)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, int))LR_d_hybABCD2))); }; }
# 693 "txInterpTest.cu"
void LR_d_hybABCD2( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,int __cuda_4)
# 697 "txInterpTest.cu"
{__device_stub__Z13LR_d_hybABCD2PfS_fmi( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 749 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z13LR_d_hybABDC2PfS_fmfi( float *__par0, float *__par1, float __par2, size_t __par3, float __par4, int __par5) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)36UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float, int))LR_d_hybABDC2)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float, int))LR_d_hybABDC2))); }; }
# 751 "txInterpTest.cu"
void LR_d_hybABDC2( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4,int __cuda_5)
# 753 "txInterpTest.cu"
{__device_stub__Z13LR_d_hybABDC2PfS_fmfi( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5);
# 804 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z10LR_d_ABDC2PfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_ABDC2)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_ABDC2))); }; }
# 805 "txInterpTest.cu"
void LR_d_ABDC2( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 807 "txInterpTest.cu"
{__device_stub__Z10LR_d_ABDC2PfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 858 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z16LR_d_ABDC_InterpPfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_ABDC_Interp)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_ABDC_Interp))); }; }
# 860 "txInterpTest.cu"
void LR_d_ABDC_Interp( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 862 "txInterpTest.cu"
{__device_stub__Z16LR_d_ABDC_InterpPfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 940 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z19LR_d_hybABDC_InterpPfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_hybABDC_Interp)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_hybABDC_Interp))); }; }
# 943 "txInterpTest.cu"
void LR_d_hybABDC_Interp( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 945 "txInterpTest.cu"
{__device_stub__Z19LR_d_hybABDC_InterpPfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 1023 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z12LR_d_hybBACDPfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))LR_d_hybBACD)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))LR_d_hybBACD))); }; }
# 1025 "txInterpTest.cu"
void LR_d_hybBACD( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 1027 "txInterpTest.cu"
{__device_stub__Z12LR_d_hybBACDPfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 1075 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z13LR_d_hybBACD2PfS_fmi( float *__par0, float *__par1, float __par2, size_t __par3, int __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, int))LR_d_hybBACD2)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, int))LR_d_hybBACD2))); }; }
# 1077 "txInterpTest.cu"
void LR_d_hybBACD2( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,int __cuda_4)
# 1080 "txInterpTest.cu"
{__device_stub__Z13LR_d_hybBACD2PfS_fmi( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 1128 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z10LR_d_BACD2PfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))LR_d_BACD2)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))LR_d_BACD2))); }; }
# 1129 "txInterpTest.cu"
void LR_d_BACD2( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 1132 "txInterpTest.cu"
{__device_stub__Z10LR_d_BACD2PfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 1180 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z12LR_d_hybBADCPfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_hybBADC)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_hybBADC))); }; }
# 1182 "txInterpTest.cu"
void LR_d_hybBADC( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 1184 "txInterpTest.cu"
{__device_stub__Z12LR_d_hybBADCPfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 1234 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z13LR_d_hybBADC2PfS_fmfi( float *__par0, float *__par1, float __par2, size_t __par3, float __par4, int __par5) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)36UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float, int))LR_d_hybBADC2)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float, int))LR_d_hybBADC2))); }; }
# 1235 "txInterpTest.cu"
void LR_d_hybBADC2( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4,int __cuda_5)
# 1237 "txInterpTest.cu"
{__device_stub__Z13LR_d_hybBADC2PfS_fmfi( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5);
# 1287 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z10LR_d_BADC2PfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_BADC2)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_BADC2))); }; }
# 1288 "txInterpTest.cu"
void LR_d_BADC2( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 1290 "txInterpTest.cu"
{__device_stub__Z10LR_d_BADC2PfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 1340 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z19LR_d_hybBADC_InterpPfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_hybBADC_Interp)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_hybBADC_Interp))); }; }
# 1342 "txInterpTest.cu"
void LR_d_hybBADC_Interp( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 1344 "txInterpTest.cu"
{__device_stub__Z19LR_d_hybBADC_InterpPfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 1421 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z9LR_d_ABCDPfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))LR_d_ABCD)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))LR_d_ABCD))); }; }
# 1423 "txInterpTest.cu"
void LR_d_ABCD( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 1425 "txInterpTest.cu"
{__device_stub__Z9LR_d_ABCDPfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 1473 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z10LR_d_ABCD2PfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))LR_d_ABCD2)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))LR_d_ABCD2))); }; }
# 1474 "txInterpTest.cu"
void LR_d_ABCD2( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 1476 "txInterpTest.cu"
{__device_stub__Z10LR_d_ABCD2PfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 1524 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z9LR_d_ABDCPfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_ABDC)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_ABDC))); }; }
# 1526 "txInterpTest.cu"
void LR_d_ABDC( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 1528 "txInterpTest.cu"
{__device_stub__Z9LR_d_ABDCPfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 1622 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z9LR_d_BACDPfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))LR_d_BACD)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))LR_d_BACD))); }; }
# 1624 "txInterpTest.cu"
void LR_d_BACD( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 1626 "txInterpTest.cu"
{__device_stub__Z9LR_d_BACDPfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 1674 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z16LR_d_BADC_InterpPfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_BADC_Interp)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_BADC_Interp))); }; }
# 1676 "txInterpTest.cu"
void LR_d_BADC_Interp( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 1678 "txInterpTest.cu"
{__device_stub__Z16LR_d_BADC_InterpPfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 1773 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z12mrt_d_singlePfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))mrt_d_single)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))mrt_d_single))); }; }
# 1774 "txInterpTest.cu"
void mrt_d_single( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 1776 "txInterpTest.cu"
{__device_stub__Z12mrt_d_singlePfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 1837 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z18mrt_d_single_forcePfS_fmS_S_i( float *__par0, float *__par1, float __par2, size_t __par3, float *__par4, float *__par5, int __par6) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float *, float *, int))mrt_d_single_force)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float *, float *, int))mrt_d_single_force))); }; }
# 1839 "txInterpTest.cu"
void mrt_d_single_force( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float *__cuda_4,float *__cuda_5,int __cuda_6)
# 1841 "txInterpTest.cu"
{__device_stub__Z18mrt_d_single_forcePfS_fmS_S_i( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6);
# 1935 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z17mrt_d_hybAB_forcePfS_fmS_S_i( float *__par0, float *__par1, float __par2, size_t __par3, float *__par4, float *__par5, int __par6) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float *, float *, int))mrt_d_hybAB_force)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float *, float *, int))mrt_d_hybAB_force))); }; }
# 1936 "txInterpTest.cu"
void mrt_d_hybAB_force( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float *__cuda_4,float *__cuda_5,int __cuda_6)
# 1938 "txInterpTest.cu"
{__device_stub__Z17mrt_d_hybAB_forcePfS_fmS_S_i( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6);
# 2052 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z17mrt_d_hybBA_forcePfS_fmS_S_i( float *__par0, float *__par1, float __par2, size_t __par3, float *__par4, float *__par5, int __par6) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float *, float *, int))mrt_d_hybBA_force)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float *, float *, int))mrt_d_hybBA_force))); }; }
# 2054 "txInterpTest.cu"
void mrt_d_hybBA_force( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float *__cuda_4,float *__cuda_5,int __cuda_6)
# 2056 "txInterpTest.cu"
{__device_stub__Z17mrt_d_hybBA_forcePfS_fmS_S_i( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6);
# 2170 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z11mrt_d_hybABPfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))mrt_d_hybAB)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))mrt_d_hybAB))); }; }
# 2172 "txInterpTest.cu"
void mrt_d_hybAB( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 2174 "txInterpTest.cu"
{__device_stub__Z11mrt_d_hybABPfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 2244 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z11mrt_d_hybBAPfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))mrt_d_hybBA)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))mrt_d_hybBA))); }; }
# 2245 "txInterpTest.cu"
void mrt_d_hybBA( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 2247 "txInterpTest.cu"
{__device_stub__Z11mrt_d_hybBAPfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 2315 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z12mrt_d_textABPfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))mrt_d_textAB)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))mrt_d_textAB))); }; }
# 2316 "txInterpTest.cu"
void mrt_d_textAB( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 2318 "txInterpTest.cu"
{__device_stub__Z12mrt_d_textABPfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 2370 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z12mrt_d_textBAPfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))mrt_d_textBA)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))mrt_d_textBA))); }; }
# 2371 "txInterpTest.cu"
void mrt_d_textBA( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 2373 "txInterpTest.cu"
{__device_stub__Z12mrt_d_textBAPfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 2425 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z8mrt_d_LRPfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))mrt_d_LR)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))mrt_d_LR))); }; }
# 2428 "txInterpTest.cu"
void mrt_d_LR( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 2430 "txInterpTest.cu"
{__device_stub__Z8mrt_d_LRPfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 2490 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z17initialize_singlePfm( float *__par0, size_t __par1) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, size_t))initialize_single)); (void)cudaLaunch(((char *)((void ( *)(float *, size_t))initialize_single))); }; }
# 2493 "txInterpTest.cu"
void initialize_single( float *__cuda_0,size_t __cuda_1)
# 2494 "txInterpTest.cu"
{__device_stub__Z17initialize_singlePfm( __cuda_0,__cuda_1);
# 2515 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
void __device_stub__Z13initialize_LRPfm( float *__par0, size_t __par1) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, size_t))initialize_LR)); (void)cudaLaunch(((char *)((void ( *)(float *, size_t))initialize_LR))); }; }
# 2518 "txInterpTest.cu"
void initialize_LR( float *__cuda_0,size_t __cuda_1)
# 2519 "txInterpTest.cu"
{__device_stub__Z13initialize_LRPfm( __cuda_0,__cuda_1);
# 2540 "txInterpTest.cu"
}
# 1 "txInterpTest.cudafe1.stub.c"
static void __sti____cudaRegisterAll_20_txInterpTest_cpp1_ii_8ec10853(void) { __cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); atexit(__cudaUnregisterBinaryUtil); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, size_t))initialize_LR), (char*)"_Z13initialize_LRPfm", "_Z13initialize_LRPfm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, size_t))initialize_single), (char*)"_Z17initialize_singlePfm", "_Z17initialize_singlePfm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))mrt_d_LR), (char*)"_Z8mrt_d_LRPfS_fmf", "_Z8mrt_d_LRPfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))mrt_d_textBA), (char*)"_Z12mrt_d_textBAPfS_fm", "_Z12mrt_d_textBAPfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))mrt_d_textAB), (char*)"_Z12mrt_d_textABPfS_fm", "_Z12mrt_d_textABPfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))mrt_d_hybBA), (char*)"_Z11mrt_d_hybBAPfS_fm", "_Z11mrt_d_hybBAPfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))mrt_d_hybAB), (char*)"_Z11mrt_d_hybABPfS_fm", "_Z11mrt_d_hybABPfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float *, float *, int))mrt_d_hybBA_force), (char*)"_Z17mrt_d_hybBA_forcePfS_fmS_S_i", "_Z17mrt_d_hybBA_forcePfS_fmS_S_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float *, float *, int))mrt_d_hybAB_force), (char*)"_Z17mrt_d_hybAB_forcePfS_fmS_S_i", "_Z17mrt_d_hybAB_forcePfS_fmS_S_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float *, float *, int))mrt_d_single_force), (char*)"_Z18mrt_d_single_forcePfS_fmS_S_i", "_Z18mrt_d_single_forcePfS_fmS_S_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))mrt_d_single), (char*)"_Z12mrt_d_singlePfS_fm", "_Z12mrt_d_singlePfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))LR_d_BADC_Interp), (char*)"_Z16LR_d_BADC_InterpPfS_fmf", "_Z16LR_d_BADC_InterpPfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))LR_d_BACD), (char*)"_Z9LR_d_BACDPfS_fm", "_Z9LR_d_BACDPfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))LR_d_ABDC), (char*)"_Z9LR_d_ABDCPfS_fmf", "_Z9LR_d_ABDCPfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))LR_d_ABCD2), (char*)"_Z10LR_d_ABCD2PfS_fm", "_Z10LR_d_ABCD2PfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))LR_d_ABCD), (char*)"_Z9LR_d_ABCDPfS_fm", "_Z9LR_d_ABCDPfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))LR_d_hybBADC_Interp), (char*)"_Z19LR_d_hybBADC_InterpPfS_fmf", "_Z19LR_d_hybBADC_InterpPfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))LR_d_BADC2), (char*)"_Z10LR_d_BADC2PfS_fmf", "_Z10LR_d_BADC2PfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float, int))LR_d_hybBADC2), (char*)"_Z13LR_d_hybBADC2PfS_fmfi", "_Z13LR_d_hybBADC2PfS_fmfi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))LR_d_hybBADC), (char*)"_Z12LR_d_hybBADCPfS_fmf", "_Z12LR_d_hybBADCPfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))LR_d_BACD2), (char*)"_Z10LR_d_BACD2PfS_fm", "_Z10LR_d_BACD2PfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, int))LR_d_hybBACD2), (char*)"_Z13LR_d_hybBACD2PfS_fmi", "_Z13LR_d_hybBACD2PfS_fmi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))LR_d_hybBACD), (char*)"_Z12LR_d_hybBACDPfS_fm", "_Z12LR_d_hybBACDPfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))LR_d_hybABDC_Interp), (char*)"_Z19LR_d_hybABDC_InterpPfS_fmf", "_Z19LR_d_hybABDC_InterpPfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))LR_d_ABDC_Interp), (char*)"_Z16LR_d_ABDC_InterpPfS_fmf", "_Z16LR_d_ABDC_InterpPfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))LR_d_ABDC2), (char*)"_Z10LR_d_ABDC2PfS_fmf", "_Z10LR_d_ABDC2PfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float, int))LR_d_hybABDC2), (char*)"_Z13LR_d_hybABDC2PfS_fmfi", "_Z13LR_d_hybABDC2PfS_fmfi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, int))LR_d_hybABCD2), (char*)"_Z13LR_d_hybABCD2PfS_fmi", "_Z13LR_d_hybABCD2PfS_fmi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))LR_d_hybABCD), (char*)"_Z12LR_d_hybABCDPfS_fm", "_Z12LR_d_hybABCDPfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float *, float *, int))LR_d_hybBACD_force), (char*)"_Z18LR_d_hybBACD_forcePfS_fmS_S_i", "_Z18LR_d_hybBACD_forcePfS_fmS_S_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float *, float *, int))LR_d_hybABCD_force), (char*)"_Z18LR_d_hybABCD_forcePfS_fmS_S_i", "_Z18LR_d_hybABCD_forcePfS_fmS_S_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, size_t, float))ExtractFromC_d), (char*)"_Z14ExtractFromC_dPfmf", "_Z14ExtractFromC_dPfmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, int *, float, size_t))simple_copy), (char*)"_Z11simple_copyPfS_Pifm", "_Z11simple_copyPfS_Pifm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f0A, (const void**)"texRef_f0A", "texRef_f0A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f1A, (const void**)"texRef_f1A", "texRef_f1A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f2A, (const void**)"texRef_f2A", "texRef_f2A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f3A, (const void**)"texRef_f3A", "texRef_f3A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f4A, (const void**)"texRef_f4A", "texRef_f4A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f5A, (const void**)"texRef_f5A", "texRef_f5A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f6A, (const void**)"texRef_f6A", "texRef_f6A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f7A, (const void**)"texRef_f7A", "texRef_f7A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f8A, (const void**)"texRef_f8A", "texRef_f8A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f0B, (const void**)"texRef_f0B", "texRef_f0B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f1B, (const void**)"texRef_f1B", "texRef_f1B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f2B, (const void**)"texRef_f2B", "texRef_f2B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f3B, (const void**)"texRef_f3B", "texRef_f3B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f4B, (const void**)"texRef_f4B", "texRef_f4B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f5B, (const void**)"texRef_f5B", "texRef_f5B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f6B, (const void**)"texRef_f6B", "texRef_f6B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f7B, (const void**)"texRef_f7B", "texRef_f7B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f8B, (const void**)"texRef_f8B", "texRef_f8B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f0C, (const void**)"texRef_f0C", "texRef_f0C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f1C, (const void**)"texRef_f1C", "texRef_f1C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f2C, (const void**)"texRef_f2C", "texRef_f2C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f3C, (const void**)"texRef_f3C", "texRef_f3C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f4C, (const void**)"texRef_f4C", "texRef_f4C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f5C, (const void**)"texRef_f5C", "texRef_f5C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f6C, (const void**)"texRef_f6C", "texRef_f6C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f7C, (const void**)"texRef_f7C", "texRef_f7C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f8C, (const void**)"texRef_f8C", "texRef_f8C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f0D, (const void**)"texRef_f0D", "texRef_f0D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f1D, (const void**)"texRef_f1D", "texRef_f1D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f2D, (const void**)"texRef_f2D", "texRef_f2D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f3D, (const void**)"texRef_f3D", "texRef_f3D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f4D, (const void**)"texRef_f4D", "texRef_f4D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f5D, (const void**)"texRef_f5D", "texRef_f5D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f6D, (const void**)"texRef_f6D", "texRef_f6D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f7D, (const void**)"texRef_f7D", "texRef_f7D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f8D, (const void**)"texRef_f8D", "texRef_f8D", 2, 0, 0); }
# 2 "txInterpTest.cudafe1.stub.c" 2
# 1 "txInterpTest.cudafe1.stub.c"
