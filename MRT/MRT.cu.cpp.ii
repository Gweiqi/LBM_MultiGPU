# 1 "MRT.cudafe1.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "MRT.cudafe1.cpp"
# 1 "MRT.cu"
# 61 "/usr/local/cuda/bin/../include/device_types.h"
# 149 "/usr/lib/gcc/x86_64-linux-gnu/4.4.3/include/stddef.h" 3
typedef long ptrdiff_t;
# 211 "/usr/lib/gcc/x86_64-linux-gnu/4.4.3/include/stddef.h" 3
typedef unsigned long size_t;
# 1 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 1 3
# 69 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 3
# 1 "/usr/local/cuda/bin/../include/builtin_types.h" 1 3
# 56 "/usr/local/cuda/bin/../include/builtin_types.h" 3
# 1 "/usr/local/cuda/bin/../include/device_types.h" 1 3
# 53 "/usr/local/cuda/bin/../include/device_types.h" 3
# 1 "/usr/local/cuda/bin/../include/host_defines.h" 1 3
# 54 "/usr/local/cuda/bin/../include/device_types.h" 2 3







enum cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};
# 57 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/driver_types.h" 1 3
# 126 "/usr/local/cuda/bin/../include/driver_types.h" 3
enum cudaError
{





    cudaSuccess = 0,





    cudaErrorMissingConfiguration = 1,





    cudaErrorMemoryAllocation = 2,





    cudaErrorInitializationError = 3,
# 161 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorLaunchFailure = 4,
# 170 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorPriorLaunchFailure = 5,
# 180 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorLaunchTimeout = 6,
# 189 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorLaunchOutOfResources = 7,





    cudaErrorInvalidDeviceFunction = 8,
# 204 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorInvalidConfiguration = 9,





    cudaErrorInvalidDevice = 10,





    cudaErrorInvalidValue = 11,





    cudaErrorInvalidPitchValue = 12,





    cudaErrorInvalidSymbol = 13,




    cudaErrorMapBufferObjectFailed = 14,




    cudaErrorUnmapBufferObjectFailed = 15,





    cudaErrorInvalidHostPointer = 16,





    cudaErrorInvalidDevicePointer = 17,





    cudaErrorInvalidTexture = 18,





    cudaErrorInvalidTextureBinding = 19,






    cudaErrorInvalidChannelDescriptor = 20,





    cudaErrorInvalidMemcpyDirection = 21,
# 285 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorAddressOfConstant = 22,
# 294 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorTextureFetchFailed = 23,
# 303 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorTextureNotBound = 24,
# 312 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorSynchronizationError = 25,





    cudaErrorInvalidFilterSetting = 26,





    cudaErrorInvalidNormSetting = 27,







    cudaErrorMixedDeviceExecution = 28,






    cudaErrorCudartUnloading = 29,




    cudaErrorUnknown = 30,







    cudaErrorNotYetImplemented = 31,
# 361 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorMemoryValueTooLarge = 32,






    cudaErrorInvalidResourceHandle = 33,







    cudaErrorNotReady = 34,






    cudaErrorInsufficientDriver = 35,
# 396 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorSetOnActiveProcess = 36,





    cudaErrorInvalidSurface = 37,





    cudaErrorNoDevice = 38,





    cudaErrorECCUncorrectable = 39,




    cudaErrorSharedObjectSymbolNotFound = 40,




    cudaErrorSharedObjectInitFailed = 41,





    cudaErrorUnsupportedLimit = 42,





    cudaErrorDuplicateVariableName = 43,





    cudaErrorDuplicateTextureName = 44,





    cudaErrorDuplicateSurfaceName = 45,
# 458 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorDevicesUnavailable = 46,




    cudaErrorInvalidKernelImage = 47,







    cudaErrorNoKernelImageForDevice = 48,
# 484 "/usr/local/cuda/bin/../include/driver_types.h" 3
    cudaErrorIncompatibleDriverContext = 49,






    cudaErrorPeerAccessAlreadyEnabled = 50,






    cudaErrorPeerAccessNotEnabled = 51,





    cudaErrorDeviceAlreadyInUse = 54,







    cudaErrorProfilerDisabled = 55,






    cudaErrorProfilerNotInitialized = 56,






    cudaErrorProfilerAlreadyStarted = 57,





     cudaErrorProfilerAlreadyStopped = 58,







    cudaErrorAssert = 59,






    cudaErrorTooManyPeers = 60,





    cudaErrorHostMemoryAlreadyRegistered = 61,





    cudaErrorHostMemoryNotRegistered = 62,




    cudaErrorOperatingSystem = 63,




    cudaErrorStartupFailure = 0x7f,







    cudaErrorApiFailureBase = 10000
};




enum cudaChannelFormatKind
{
    cudaChannelFormatKindSigned = 0,
    cudaChannelFormatKindUnsigned = 1,
    cudaChannelFormatKindFloat = 2,
    cudaChannelFormatKindNone = 3
};




struct cudaChannelFormatDesc
{
    int x;
    int y;
    int z;
    int w;
    enum cudaChannelFormatKind f;
};




struct cudaArray;




enum cudaMemoryType
{
    cudaMemoryTypeHost = 1,
    cudaMemoryTypeDevice = 2
};




enum cudaMemcpyKind
{
    cudaMemcpyHostToHost = 0,
    cudaMemcpyHostToDevice = 1,
    cudaMemcpyDeviceToHost = 2,
    cudaMemcpyDeviceToDevice = 3,
    cudaMemcpyDefault = 4
};





struct cudaPitchedPtr
{
    void *ptr;
    size_t pitch;
    size_t xsize;
    size_t ysize;
};





struct cudaExtent
{
    size_t width;
    size_t height;
    size_t depth;
};





struct cudaPos
{
    size_t x;
    size_t y;
    size_t z;
};




struct cudaMemcpy3DParms
{
    struct cudaArray *srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;

    struct cudaArray *dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;

    struct cudaExtent extent;
    enum cudaMemcpyKind kind;
};




struct cudaMemcpy3DPeerParms
{
    struct cudaArray *srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;
    int srcDevice;

    struct cudaArray *dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;
    int dstDevice;

    struct cudaExtent extent;
};




struct cudaGraphicsResource;




enum cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone = 0,
    cudaGraphicsRegisterFlagsReadOnly = 1,
    cudaGraphicsRegisterFlagsWriteDiscard = 2,
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,
    cudaGraphicsRegisterFlagsTextureGather = 8
};




enum cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone = 0,
    cudaGraphicsMapFlagsReadOnly = 1,
    cudaGraphicsMapFlagsWriteDiscard = 2
};




enum cudaGraphicsCubeFace
{
    cudaGraphicsCubeFacePositiveX = 0x00,
    cudaGraphicsCubeFaceNegativeX = 0x01,
    cudaGraphicsCubeFacePositiveY = 0x02,
    cudaGraphicsCubeFaceNegativeY = 0x03,
    cudaGraphicsCubeFacePositiveZ = 0x04,
    cudaGraphicsCubeFaceNegativeZ = 0x05
};




struct cudaPointerAttributes
{




    enum cudaMemoryType memoryType;
# 758 "/usr/local/cuda/bin/../include/driver_types.h" 3
    int device;





    void *devicePointer;





    void *hostPointer;
};




struct cudaFuncAttributes
{





   size_t sharedSizeBytes;





   size_t constSizeBytes;




   size_t localSizeBytes;






   int maxThreadsPerBlock;




   int numRegs;






   int ptxVersion;






   int binaryVersion;
};




enum cudaFuncCache
{
    cudaFuncCachePreferNone = 0,
    cudaFuncCachePreferShared = 1,
    cudaFuncCachePreferL1 = 2,
    cudaFuncCachePreferEqual = 3
};





enum cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault = 0,
    cudaSharedMemBankSizeFourByte = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum cudaComputeMode
{
    cudaComputeModeDefault = 0,
    cudaComputeModeExclusive = 1,
    cudaComputeModeProhibited = 2,
    cudaComputeModeExclusiveProcess = 3
};




enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01,
    cudaLimitMallocHeapSize = 0x02
};




enum cudaOutputMode
{
    cudaKeyValuePair = 0x00,
    cudaCSV = 0x01
};




struct cudaDeviceProp
{
    char name[256];
    size_t totalGlobalMem;
    size_t sharedMemPerBlock;
    int regsPerBlock;
    int warpSize;
    size_t memPitch;
    int maxThreadsPerBlock;
    int maxThreadsDim[3];
    int maxGridSize[3];
    int clockRate;
    size_t totalConstMem;
    int major;
    int minor;
    size_t textureAlignment;
    size_t texturePitchAlignment;
    int deviceOverlap;
    int multiProcessorCount;
    int kernelExecTimeoutEnabled;
    int integrated;
    int canMapHostMemory;
    int computeMode;
    int maxTexture1D;
    int maxTexture1DLinear;
    int maxTexture2D[2];
    int maxTexture2DLinear[3];
    int maxTexture2DGather[2];
    int maxTexture3D[3];
    int maxTextureCubemap;
    int maxTexture1DLayered[2];
    int maxTexture2DLayered[3];
    int maxTextureCubemapLayered[2];
    int maxSurface1D;
    int maxSurface2D[2];
    int maxSurface3D[3];
    int maxSurface1DLayered[2];
    int maxSurface2DLayered[3];
    int maxSurfaceCubemap;
    int maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;
    int concurrentKernels;
    int ECCEnabled;
    int pciBusID;
    int pciDeviceID;
    int pciDomainID;
    int tccDriver;
    int asyncEngineCount;
    int unifiedAddressing;
    int memoryClockRate;
    int memoryBusWidth;
    int l2CacheSize;
    int maxThreadsPerMultiProcessor;
};
# 993 "/usr/local/cuda/bin/../include/driver_types.h" 3
struct cudaIpcEventHandle_st
{
    char reserved[64];
};

struct cudaIpcMemHandle_st
{
    char reserved[64];
};
# 1012 "/usr/local/cuda/bin/../include/driver_types.h" 3
typedef enum cudaError cudaError_t;




typedef struct CUstream_st *cudaStream_t;




typedef struct CUevent_st *cudaEvent_t;




typedef struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef struct CUuuid_st cudaUUID_t;




typedef struct cudaIpcEventHandle_st cudaIpcEventHandle_t;
typedef struct cudaIpcMemHandle_st cudaIpcMemHandle_t;




typedef enum cudaOutputMode cudaOutputMode_t;
# 58 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/surface_types.h" 1 3
# 84 "/usr/local/cuda/bin/../include/surface_types.h" 3
enum cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero = 0,
    cudaBoundaryModeClamp = 1,
    cudaBoundaryModeTrap = 2
};




enum cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,
    cudaFormatModeAuto = 1
};




struct surfaceReference
{



    struct cudaChannelFormatDesc channelDesc;
};
# 59 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/texture_types.h" 1 3
# 84 "/usr/local/cuda/bin/../include/texture_types.h" 3
enum cudaTextureAddressMode
{
    cudaAddressModeWrap = 0,
    cudaAddressModeClamp = 1,
    cudaAddressModeMirror = 2,
    cudaAddressModeBorder = 3
};




enum cudaTextureFilterMode
{
    cudaFilterModePoint = 0,
    cudaFilterModeLinear = 1
};




enum cudaTextureReadMode
{
    cudaReadModeElementType = 0,
    cudaReadModeNormalizedFloat = 1
};




struct textureReference
{



    int normalized;



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureAddressMode addressMode[3];



    struct cudaChannelFormatDesc channelDesc;



    int sRGB;
    int __cudaReserved[15];
};
# 60 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 1 "/usr/local/cuda/bin/../include/vector_types.h" 1 3
# 59 "/usr/local/cuda/bin/../include/vector_types.h" 3
# 1 "/usr/local/cuda/bin/../include/builtin_types.h" 1 3
# 60 "/usr/local/cuda/bin/../include/builtin_types.h" 3
# 1 "/usr/local/cuda/bin/../include/vector_types.h" 1 3
# 60 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 60 "/usr/local/cuda/bin/../include/vector_types.h" 2 3
# 94 "/usr/local/cuda/bin/../include/vector_types.h" 3
struct char1
{
    signed char x;
};

struct uchar1
{
    unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
    signed char x, y;
};

struct __attribute__((aligned(2))) uchar2
{
    unsigned char x, y;
};

struct char3
{
    signed char x, y, z;
};

struct uchar3
{
    unsigned char x, y, z;
};

struct __attribute__((aligned(4))) char4
{
    signed char x, y, z, w;
};

struct __attribute__((aligned(4))) uchar4
{
    unsigned char x, y, z, w;
};

struct short1
{
    short x;
};

struct ushort1
{
    unsigned short x;
};

struct __attribute__((aligned(4))) short2
{
    short x, y;
};

struct __attribute__((aligned(4))) ushort2
{
    unsigned short x, y;
};

struct short3
{
    short x, y, z;
};

struct ushort3
{
    unsigned short x, y, z;
};

struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };
struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct int1
{
    int x;
};

struct uint1
{
    unsigned int x;
};

struct __attribute__((aligned(8))) int2 { int x; int y; };
struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };

struct int3
{
    int x, y, z;
};

struct uint3
{
    unsigned int x, y, z;
};

struct __attribute__((aligned(16))) int4
{
    int x, y, z, w;
};

struct __attribute__((aligned(16))) uint4
{
    unsigned int x, y, z, w;
};

struct long1
{
    long int x;
};

struct ulong1
{
    unsigned long x;
};






struct __attribute__((aligned(2*sizeof(long int)))) long2
{
    long int x, y;
};

struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
    unsigned long int x, y;
};



struct long3
{
    long int x, y, z;
};

struct ulong3
{
    unsigned long int x, y, z;
};

struct __attribute__((aligned(16))) long4
{
    long int x, y, z, w;
};

struct __attribute__((aligned(16))) ulong4
{
    unsigned long int x, y, z, w;
};

struct float1
{
    float x;
};

struct __attribute__((aligned(8))) float2 { float x; float y; };

struct float3
{
    float x, y, z;
};

struct __attribute__((aligned(16))) float4
{
    float x, y, z, w;
};

struct longlong1
{
    long long int x;
};

struct ulonglong1
{
    unsigned long long int x;
};

struct __attribute__((aligned(16))) longlong2
{
    long long int x, y;
};

struct __attribute__((aligned(16))) ulonglong2
{
    unsigned long long int x, y;
};

struct longlong3
{
    long long int x, y, z;
};

struct ulonglong3
{
    unsigned long long int x, y, z;
};

struct __attribute__((aligned(16))) longlong4
{
    long long int x, y, z ,w;
};

struct __attribute__((aligned(16))) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct double1
{
    double x;
};

struct __attribute__((aligned(16))) double2
{
    double x, y;
};

struct double3
{
    double x, y, z;
};

struct __attribute__((aligned(16))) double4
{
    double x, y, z, w;
};
# 338 "/usr/local/cuda/bin/../include/vector_types.h" 3
typedef struct char1 char1;
typedef struct uchar1 uchar1;
typedef struct char2 char2;
typedef struct uchar2 uchar2;
typedef struct char3 char3;
typedef struct uchar3 uchar3;
typedef struct char4 char4;
typedef struct uchar4 uchar4;
typedef struct short1 short1;
typedef struct ushort1 ushort1;
typedef struct short2 short2;
typedef struct ushort2 ushort2;
typedef struct short3 short3;
typedef struct ushort3 ushort3;
typedef struct short4 short4;
typedef struct ushort4 ushort4;
typedef struct int1 int1;
typedef struct uint1 uint1;
typedef struct int2 int2;
typedef struct uint2 uint2;
typedef struct int3 int3;
typedef struct uint3 uint3;
typedef struct int4 int4;
typedef struct uint4 uint4;
typedef struct long1 long1;
typedef struct ulong1 ulong1;
typedef struct long2 long2;
typedef struct ulong2 ulong2;
typedef struct long3 long3;
typedef struct ulong3 ulong3;
typedef struct long4 long4;
typedef struct ulong4 ulong4;
typedef struct float1 float1;
typedef struct float2 float2;
typedef struct float3 float3;
typedef struct float4 float4;
typedef struct longlong1 longlong1;
typedef struct ulonglong1 ulonglong1;
typedef struct longlong2 longlong2;
typedef struct ulonglong2 ulonglong2;
typedef struct longlong3 longlong3;
typedef struct ulonglong3 ulonglong3;
typedef struct longlong4 longlong4;
typedef struct ulonglong4 ulonglong4;
typedef struct double1 double1;
typedef struct double2 double2;
typedef struct double3 double3;
typedef struct double4 double4;







struct dim3
{
    unsigned int x, y, z;

    dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }

};

typedef struct dim3 dim3;
# 60 "/usr/local/cuda/bin/../include/builtin_types.h" 2 3
# 70 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 2 3
# 1 "/usr/local/cuda/bin/../include/crt/storage_class.h" 1 3
# 71 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 2 3
# 213 "/usr/lib/gcc/x86_64-linux-gnu/4.4.3/include/stddef.h" 2 3
# 126 "/usr/local/cuda/bin/../include/driver_types.h"
# 583 "/usr/local/cuda/bin/../include/driver_types.h"
# 594 "/usr/local/cuda/bin/../include/driver_types.h"
# 606 "/usr/local/cuda/bin/../include/driver_types.h"
struct cudaArray;
# 611 "/usr/local/cuda/bin/../include/driver_types.h"
# 620 "/usr/local/cuda/bin/../include/driver_types.h"
# 633 "/usr/local/cuda/bin/../include/driver_types.h"
# 645 "/usr/local/cuda/bin/../include/driver_types.h"
# 656 "/usr/local/cuda/bin/../include/driver_types.h"
# 666 "/usr/local/cuda/bin/../include/driver_types.h"
# 683 "/usr/local/cuda/bin/../include/driver_types.h"
# 701 "/usr/local/cuda/bin/../include/driver_types.h"
struct cudaGraphicsResource;
# 706 "/usr/local/cuda/bin/../include/driver_types.h"
# 718 "/usr/local/cuda/bin/../include/driver_types.h"
# 728 "/usr/local/cuda/bin/../include/driver_types.h"
# 741 "/usr/local/cuda/bin/../include/driver_types.h"
# 776 "/usr/local/cuda/bin/../include/driver_types.h"
# 826 "/usr/local/cuda/bin/../include/driver_types.h"
# 838 "/usr/local/cuda/bin/../include/driver_types.h"
# 848 "/usr/local/cuda/bin/../include/driver_types.h"
# 859 "/usr/local/cuda/bin/../include/driver_types.h"
# 869 "/usr/local/cuda/bin/../include/driver_types.h"
# 878 "/usr/local/cuda/bin/../include/driver_types.h"
# 993 "/usr/local/cuda/bin/../include/driver_types.h"
# 998 "/usr/local/cuda/bin/../include/driver_types.h"
# 1012 "/usr/local/cuda/bin/../include/driver_types.h"
# 1017 "/usr/local/cuda/bin/../include/driver_types.h"
# 1022 "/usr/local/cuda/bin/../include/driver_types.h"
# 1027 "/usr/local/cuda/bin/../include/driver_types.h"
# 1032 "/usr/local/cuda/bin/../include/driver_types.h"
# 1037 "/usr/local/cuda/bin/../include/driver_types.h"
# 1038 "/usr/local/cuda/bin/../include/driver_types.h"
# 1043 "/usr/local/cuda/bin/../include/driver_types.h"
# 84 "/usr/local/cuda/bin/../include/surface_types.h"
# 94 "/usr/local/cuda/bin/../include/surface_types.h"
# 103 "/usr/local/cuda/bin/../include/surface_types.h"
# 84 "/usr/local/cuda/bin/../include/texture_types.h"
# 95 "/usr/local/cuda/bin/../include/texture_types.h"
# 104 "/usr/local/cuda/bin/../include/texture_types.h"
# 113 "/usr/local/cuda/bin/../include/texture_types.h"
# 94 "/usr/local/cuda/bin/../include/vector_types.h"
# 99 "/usr/local/cuda/bin/../include/vector_types.h"
# 105 "/usr/local/cuda/bin/../include/vector_types.h"
# 110 "/usr/local/cuda/bin/../include/vector_types.h"
# 115 "/usr/local/cuda/bin/../include/vector_types.h"
# 120 "/usr/local/cuda/bin/../include/vector_types.h"
# 125 "/usr/local/cuda/bin/../include/vector_types.h"
# 130 "/usr/local/cuda/bin/../include/vector_types.h"
# 135 "/usr/local/cuda/bin/../include/vector_types.h"
# 140 "/usr/local/cuda/bin/../include/vector_types.h"
# 145 "/usr/local/cuda/bin/../include/vector_types.h"
# 150 "/usr/local/cuda/bin/../include/vector_types.h"
# 155 "/usr/local/cuda/bin/../include/vector_types.h"
# 160 "/usr/local/cuda/bin/../include/vector_types.h"
# 165 "/usr/local/cuda/bin/../include/vector_types.h"
# 166 "/usr/local/cuda/bin/../include/vector_types.h"
# 168 "/usr/local/cuda/bin/../include/vector_types.h"
# 173 "/usr/local/cuda/bin/../include/vector_types.h"
# 178 "/usr/local/cuda/bin/../include/vector_types.h"
# 179 "/usr/local/cuda/bin/../include/vector_types.h"
# 181 "/usr/local/cuda/bin/../include/vector_types.h"
# 186 "/usr/local/cuda/bin/../include/vector_types.h"
# 191 "/usr/local/cuda/bin/../include/vector_types.h"
# 196 "/usr/local/cuda/bin/../include/vector_types.h"
# 201 "/usr/local/cuda/bin/../include/vector_types.h"
# 206 "/usr/local/cuda/bin/../include/vector_types.h"
# 216 "/usr/local/cuda/bin/../include/vector_types.h"
# 221 "/usr/local/cuda/bin/../include/vector_types.h"
# 228 "/usr/local/cuda/bin/../include/vector_types.h"
# 233 "/usr/local/cuda/bin/../include/vector_types.h"
# 238 "/usr/local/cuda/bin/../include/vector_types.h"
# 243 "/usr/local/cuda/bin/../include/vector_types.h"
# 248 "/usr/local/cuda/bin/../include/vector_types.h"
# 253 "/usr/local/cuda/bin/../include/vector_types.h"
# 255 "/usr/local/cuda/bin/../include/vector_types.h"
# 260 "/usr/local/cuda/bin/../include/vector_types.h"
# 265 "/usr/local/cuda/bin/../include/vector_types.h"
# 270 "/usr/local/cuda/bin/../include/vector_types.h"
# 275 "/usr/local/cuda/bin/../include/vector_types.h"
# 280 "/usr/local/cuda/bin/../include/vector_types.h"
# 285 "/usr/local/cuda/bin/../include/vector_types.h"
# 290 "/usr/local/cuda/bin/../include/vector_types.h"
# 295 "/usr/local/cuda/bin/../include/vector_types.h"
# 300 "/usr/local/cuda/bin/../include/vector_types.h"
# 305 "/usr/local/cuda/bin/../include/vector_types.h"
# 310 "/usr/local/cuda/bin/../include/vector_types.h"
# 315 "/usr/local/cuda/bin/../include/vector_types.h"
# 320 "/usr/local/cuda/bin/../include/vector_types.h"
# 338 "/usr/local/cuda/bin/../include/vector_types.h"
# 339 "/usr/local/cuda/bin/../include/vector_types.h"
# 340 "/usr/local/cuda/bin/../include/vector_types.h"
# 341 "/usr/local/cuda/bin/../include/vector_types.h"
# 342 "/usr/local/cuda/bin/../include/vector_types.h"
# 343 "/usr/local/cuda/bin/../include/vector_types.h"
# 344 "/usr/local/cuda/bin/../include/vector_types.h"
# 345 "/usr/local/cuda/bin/../include/vector_types.h"
# 346 "/usr/local/cuda/bin/../include/vector_types.h"
# 347 "/usr/local/cuda/bin/../include/vector_types.h"
# 348 "/usr/local/cuda/bin/../include/vector_types.h"
# 349 "/usr/local/cuda/bin/../include/vector_types.h"
# 350 "/usr/local/cuda/bin/../include/vector_types.h"
# 351 "/usr/local/cuda/bin/../include/vector_types.h"
# 352 "/usr/local/cuda/bin/../include/vector_types.h"
# 353 "/usr/local/cuda/bin/../include/vector_types.h"
# 354 "/usr/local/cuda/bin/../include/vector_types.h"
# 355 "/usr/local/cuda/bin/../include/vector_types.h"
# 356 "/usr/local/cuda/bin/../include/vector_types.h"
# 357 "/usr/local/cuda/bin/../include/vector_types.h"
# 358 "/usr/local/cuda/bin/../include/vector_types.h"
# 359 "/usr/local/cuda/bin/../include/vector_types.h"
# 360 "/usr/local/cuda/bin/../include/vector_types.h"
# 361 "/usr/local/cuda/bin/../include/vector_types.h"
# 362 "/usr/local/cuda/bin/../include/vector_types.h"
# 363 "/usr/local/cuda/bin/../include/vector_types.h"
# 364 "/usr/local/cuda/bin/../include/vector_types.h"
# 365 "/usr/local/cuda/bin/../include/vector_types.h"
# 366 "/usr/local/cuda/bin/../include/vector_types.h"
# 367 "/usr/local/cuda/bin/../include/vector_types.h"
# 368 "/usr/local/cuda/bin/../include/vector_types.h"
# 369 "/usr/local/cuda/bin/../include/vector_types.h"
# 370 "/usr/local/cuda/bin/../include/vector_types.h"
# 371 "/usr/local/cuda/bin/../include/vector_types.h"
# 372 "/usr/local/cuda/bin/../include/vector_types.h"
# 373 "/usr/local/cuda/bin/../include/vector_types.h"
# 374 "/usr/local/cuda/bin/../include/vector_types.h"
# 375 "/usr/local/cuda/bin/../include/vector_types.h"
# 376 "/usr/local/cuda/bin/../include/vector_types.h"
# 377 "/usr/local/cuda/bin/../include/vector_types.h"
# 378 "/usr/local/cuda/bin/../include/vector_types.h"
# 379 "/usr/local/cuda/bin/../include/vector_types.h"
# 380 "/usr/local/cuda/bin/../include/vector_types.h"
# 381 "/usr/local/cuda/bin/../include/vector_types.h"
# 382 "/usr/local/cuda/bin/../include/vector_types.h"
# 383 "/usr/local/cuda/bin/../include/vector_types.h"
# 384 "/usr/local/cuda/bin/../include/vector_types.h"
# 385 "/usr/local/cuda/bin/../include/vector_types.h"
# 393 "/usr/local/cuda/bin/../include/vector_types.h"
# 403 "/usr/local/cuda/bin/../include/vector_types.h"
# 200 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceReset();
# 217 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSynchronize();
# 269 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetLimit(cudaLimit , size_t );
# 293 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetLimit(size_t * , cudaLimit );
# 323 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * );
# 364 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetCacheConfig(cudaFuncCache );
# 393 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * );
# 435 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceSetSharedMemConfig(cudaSharedMemConfig );
# 458 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetByPCIBusId(int * , char * );
# 485 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceGetPCIBusId(char * , int , int );
# 527 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcGetEventHandle(cudaIpcEventHandle_t * , cudaEvent_t );
# 562 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcOpenEventHandle(cudaEvent_t * , cudaIpcEventHandle_t );
# 600 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcGetMemHandle(cudaIpcMemHandle_t * , void * );
# 647 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcOpenMemHandle(void ** , cudaIpcMemHandle_t , unsigned );
# 677 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaIpcCloseMemHandle(void * );
# 711 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadExit();
# 735 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSynchronize();
# 794 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetLimit(cudaLimit , size_t );
# 825 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetLimit(size_t * , cudaLimit );
# 860 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadGetCacheConfig(cudaFuncCache * );
# 906 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaThreadSetCacheConfig(cudaFuncCache );
# 958 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetLastError();
# 999 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaPeekAtLastError();
# 1013 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" const char *cudaGetErrorString(cudaError_t );
# 1043 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceCount(int * );
# 1246 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDeviceProperties(cudaDeviceProp * , int );
# 1265 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaChooseDevice(int * , const cudaDeviceProp * );
# 1298 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDevice(int );
# 1315 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetDevice(int * );
# 1344 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetValidDevices(int * , int );
# 1404 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDeviceFlags(unsigned );
# 1430 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamCreate(cudaStream_t * );
# 1451 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamDestroy(cudaStream_t );
# 1487 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamWaitEvent(cudaStream_t , cudaEvent_t , unsigned );
# 1506 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamSynchronize(cudaStream_t );
# 1524 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaStreamQuery(cudaStream_t );
# 1556 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreate(cudaEvent_t * );
# 1587 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventCreateWithFlags(cudaEvent_t * , unsigned );
# 1620 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventRecord(cudaEvent_t , cudaStream_t = 0);
# 1649 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventQuery(cudaEvent_t );
# 1681 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventSynchronize(cudaEvent_t );
# 1706 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventDestroy(cudaEvent_t );
# 1747 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaEventElapsedTime(float * , cudaEvent_t , cudaEvent_t );
# 1786 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaConfigureCall(dim3 , dim3 , size_t = (0), cudaStream_t = 0);
# 1813 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetupArgument(const void * , size_t , size_t );
# 1859 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncSetCacheConfig(const char * , cudaFuncCache );
# 1910 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncSetSharedMemConfig(const char * , cudaSharedMemConfig );
# 1946 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaLaunch(const char * );
# 1979 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * , const char * );
# 2001 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForDevice(double * );
# 2023 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaSetDoubleForHost(double * );
# 2055 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc(void ** , size_t );
# 2084 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocHost(void ** , size_t );
# 2123 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocPitch(void ** , size_t * , size_t , size_t );
# 2165 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMallocArray(cudaArray ** , const cudaChannelFormatDesc * , size_t , size_t = (0), unsigned = (0));
# 2189 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFree(void * );
# 2209 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeHost(void * );
# 2231 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaFreeArray(cudaArray * );
# 2290 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostAlloc(void ** , size_t , unsigned );
# 2343 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostRegister(void * , size_t , unsigned );
# 2362 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostUnregister(void * );
# 2389 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetDevicePointer(void ** , void * , unsigned );
# 2408 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaHostGetFlags(unsigned * , void * );
# 2443 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3D(cudaPitchedPtr * , cudaExtent );
# 2543 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMalloc3DArray(cudaArray ** , const cudaChannelFormatDesc * , cudaExtent , unsigned = (0));
# 2641 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms * );
# 2669 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * );
# 2773 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * , cudaStream_t = 0);
# 2795 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * , cudaStream_t = 0);
# 2814 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemGetInfo(size_t * , size_t * );
# 2835 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaArrayGetInfo(cudaChannelFormatDesc * , cudaExtent * , unsigned * , cudaArray * );
# 2870 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy(void * , const void * , size_t , cudaMemcpyKind );
# 2902 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyPeer(void * , int , const void * , int , size_t );
# 2936 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArray(cudaArray * , size_t , size_t , const void * , size_t , cudaMemcpyKind );
# 2970 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArray(void * , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind );
# 3005 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyArrayToArray(cudaArray * , size_t , size_t , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind = cudaMemcpyDeviceToDevice);
# 3047 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2D(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind );
# 3089 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArray(cudaArray * , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind );
# 3131 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArray(void * , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind );
# 3171 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DArrayToArray(cudaArray * , size_t , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind = cudaMemcpyDeviceToDevice);
# 3206 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbol(const char * , const void * , size_t , size_t = (0), cudaMemcpyKind = cudaMemcpyHostToDevice);
# 3241 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbol(void * , const char * , size_t , size_t = (0), cudaMemcpyKind = cudaMemcpyDeviceToHost);
# 3283 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyAsync(void * , const void * , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3314 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyPeerAsync(void * , int , const void * , int , size_t , cudaStream_t = 0);
# 3355 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToArrayAsync(cudaArray * , size_t , size_t , const void * , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3396 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromArrayAsync(void * , const cudaArray * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3447 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DAsync(void * , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3497 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DToArrayAsync(cudaArray * , size_t , size_t , const void * , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3546 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpy2DFromArrayAsync(void * , size_t , const cudaArray * , size_t , size_t , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3588 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyToSymbolAsync(const char * , const void * , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3630 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemcpyFromSymbolAsync(void * , const char * , size_t , size_t , cudaMemcpyKind , cudaStream_t = 0);
# 3653 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset(void * , int , size_t );
# 3680 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2D(void * , size_t , int , size_t , size_t );
# 3720 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3D(cudaPitchedPtr , int , cudaExtent );
# 3748 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemsetAsync(void * , int , size_t , cudaStream_t = 0);
# 3781 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset2DAsync(void * , size_t , int , size_t , size_t , cudaStream_t = 0);
# 3827 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaMemset3DAsync(cudaPitchedPtr , int , cudaExtent , cudaStream_t = 0);
# 3854 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolAddress(void ** , const char * );
# 3876 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSymbolSize(size_t * , const char * );
# 4021 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaPointerGetAttributes(cudaPointerAttributes * , const void * );
# 4055 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceCanAccessPeer(int * , int , int );
# 4096 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceEnablePeerAccess(int , unsigned );
# 4121 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDeviceDisablePeerAccess(int );
# 4167 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource_t );
# 4199 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t , unsigned );
# 4234 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsMapResources(int , cudaGraphicsResource_t * , cudaStream_t = 0);
# 4265 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsUnmapResources(int , cudaGraphicsResource_t * , cudaStream_t = 0);
# 4294 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsResourceGetMappedPointer(void ** , size_t * , cudaGraphicsResource_t );
# 4328 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray ** , cudaGraphicsResource_t , unsigned , unsigned );
# 4361 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc * , const cudaArray * );
# 4396 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaChannelFormatDesc cudaCreateChannelDesc(int , int , int , int , cudaChannelFormatKind );
# 4443 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t = (((2147483647) * 2U) + 1U));
# 4494 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTexture2D(size_t * , const textureReference * , const void * , const cudaChannelFormatDesc * , size_t , size_t , size_t );
# 4522 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindTextureToArray(const textureReference * , const cudaArray * , const cudaChannelFormatDesc * );
# 4543 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaUnbindTexture(const textureReference * );
# 4568 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureAlignmentOffset(size_t * , const textureReference * );
# 4602 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetTextureReference(const textureReference ** , const char * );
# 4636 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaBindSurfaceToArray(const surfaceReference * , const cudaArray * , const cudaChannelFormatDesc * );
# 4664 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetSurfaceReference(const surfaceReference ** , const char * );
# 4692 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaDriverGetVersion(int * );
# 4709 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaRuntimeGetVersion(int * );
# 4714 "/usr/local/cuda/bin/../include/cuda_runtime_api.h"
extern "C" cudaError_t cudaGetExportTable(const void ** , const cudaUUID_t * );
# 107 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 108 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 109 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 110 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 112 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 113 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 114 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 116 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 117 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 119 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 120 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 121 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 123 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 124 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 126 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 127 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 128 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 130 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 131 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 133 "/usr/local/cuda/bin/../include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 134 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 135 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 137 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 138 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 140 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 141 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 142 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(char)) * 8);
# 147 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 149 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 151 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 152 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 153 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 155 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 156 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 158 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 159 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 160 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 162 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 163 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 165 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 166 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 167 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 169 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 170 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 172 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 173 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 174 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 176 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 177 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 179 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 180 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 181 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 183 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 184 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 186 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 187 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 188 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 190 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 191 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 193 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 194 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 195 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 197 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 198 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 200 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 201 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 202 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 204 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 205 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 207 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 208 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 209 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 211 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 212 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 214 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 215 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 216 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 218 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 219 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 221 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 222 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 223 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 225 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 226 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 228 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 229 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 230 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 232 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 233 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 235 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 236 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 237 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 239 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 240 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 242 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 243 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 244 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 246 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 247 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 249 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 250 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 251 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 253 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 254 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 256 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 257 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 258 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 260 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 261 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 263 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 264 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 265 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 267 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 268 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 270 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 271 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 272 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 274 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 275 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 277 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 278 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 279 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 281 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 282 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 284 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 285 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 286 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 288 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 289 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 291 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 292 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 293 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 295 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 296 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 298 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 299 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 300 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 302 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 303 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 305 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 306 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 307 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 309 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 310 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 312 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 313 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 314 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 316 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 317 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 379 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 380 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 381 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 383 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 384 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 386 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 387 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 388 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 390 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 391 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 393 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 394 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 395 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 397 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 398 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 400 "/usr/local/cuda/bin/../include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 401 "/usr/local/cuda/bin/../include/channel_descriptor.h"
{
# 402 "/usr/local/cuda/bin/../include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 404 "/usr/local/cuda/bin/../include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 405 "/usr/local/cuda/bin/../include/channel_descriptor.h"
}
# 79 "/usr/local/cuda/bin/../include/driver_functions.h"
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz)
# 80 "/usr/local/cuda/bin/../include/driver_functions.h"
{
# 81 "/usr/local/cuda/bin/../include/driver_functions.h"
cudaPitchedPtr s;
# 83 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.ptr) = d;
# 84 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.pitch) = p;
# 85 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.xsize) = xsz;
# 86 "/usr/local/cuda/bin/../include/driver_functions.h"
(s.ysize) = ysz;
# 88 "/usr/local/cuda/bin/../include/driver_functions.h"
return s;
# 89 "/usr/local/cuda/bin/../include/driver_functions.h"
}
# 106 "/usr/local/cuda/bin/../include/driver_functions.h"
static inline cudaPos make_cudaPos(size_t x, size_t y, size_t z)
# 107 "/usr/local/cuda/bin/../include/driver_functions.h"
{
# 108 "/usr/local/cuda/bin/../include/driver_functions.h"
cudaPos p;
# 110 "/usr/local/cuda/bin/../include/driver_functions.h"
(p.x) = x;
# 111 "/usr/local/cuda/bin/../include/driver_functions.h"
(p.y) = y;
# 112 "/usr/local/cuda/bin/../include/driver_functions.h"
(p.z) = z;
# 114 "/usr/local/cuda/bin/../include/driver_functions.h"
return p;
# 115 "/usr/local/cuda/bin/../include/driver_functions.h"
}
# 132 "/usr/local/cuda/bin/../include/driver_functions.h"
static inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d)
# 133 "/usr/local/cuda/bin/../include/driver_functions.h"
{
# 134 "/usr/local/cuda/bin/../include/driver_functions.h"
cudaExtent e;
# 136 "/usr/local/cuda/bin/../include/driver_functions.h"
(e.width) = w;
# 137 "/usr/local/cuda/bin/../include/driver_functions.h"
(e.height) = h;
# 138 "/usr/local/cuda/bin/../include/driver_functions.h"
(e.depth) = d;
# 140 "/usr/local/cuda/bin/../include/driver_functions.h"
return e;
# 141 "/usr/local/cuda/bin/../include/driver_functions.h"
}
# 69 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char1 make_char1(signed char x)
# 70 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 71 "/usr/local/cuda/bin/../include/vector_functions.h"
char1 t; (t.x) = x; return t;
# 72 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 74 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar1 make_uchar1(unsigned char x)
# 75 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 76 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar1 t; (t.x) = x; return t;
# 77 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 79 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char2 make_char2(signed char x, signed char y)
# 80 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 81 "/usr/local/cuda/bin/../include/vector_functions.h"
char2 t; (t.x) = x; (t.y) = y; return t;
# 82 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 84 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 85 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 86 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 87 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 89 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 90 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 91 "/usr/local/cuda/bin/../include/vector_functions.h"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 92 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 94 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 95 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 96 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 97 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 99 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 100 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 101 "/usr/local/cuda/bin/../include/vector_functions.h"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 102 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 104 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 105 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 106 "/usr/local/cuda/bin/../include/vector_functions.h"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 107 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 109 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short1 make_short1(short x)
# 110 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 111 "/usr/local/cuda/bin/../include/vector_functions.h"
short1 t; (t.x) = x; return t;
# 112 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 114 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort1 make_ushort1(unsigned short x)
# 115 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 116 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort1 t; (t.x) = x; return t;
# 117 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 119 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short2 make_short2(short x, short y)
# 120 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 121 "/usr/local/cuda/bin/../include/vector_functions.h"
short2 t; (t.x) = x; (t.y) = y; return t;
# 122 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 124 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 125 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 126 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 127 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 129 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short3 make_short3(short x, short y, short z)
# 130 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 131 "/usr/local/cuda/bin/../include/vector_functions.h"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 132 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 134 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 135 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 136 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 137 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 139 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline short4 make_short4(short x, short y, short z, short w)
# 140 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 141 "/usr/local/cuda/bin/../include/vector_functions.h"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 142 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 144 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 145 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 146 "/usr/local/cuda/bin/../include/vector_functions.h"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 147 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 149 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int1 make_int1(int x)
# 150 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 151 "/usr/local/cuda/bin/../include/vector_functions.h"
int1 t; (t.x) = x; return t;
# 152 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 154 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint1 make_uint1(unsigned x)
# 155 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 156 "/usr/local/cuda/bin/../include/vector_functions.h"
uint1 t; (t.x) = x; return t;
# 157 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 159 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int2 make_int2(int x, int y)
# 160 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 161 "/usr/local/cuda/bin/../include/vector_functions.h"
int2 t; (t.x) = x; (t.y) = y; return t;
# 162 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 164 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint2 make_uint2(unsigned x, unsigned y)
# 165 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 166 "/usr/local/cuda/bin/../include/vector_functions.h"
uint2 t; (t.x) = x; (t.y) = y; return t;
# 167 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 169 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int3 make_int3(int x, int y, int z)
# 170 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 171 "/usr/local/cuda/bin/../include/vector_functions.h"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 172 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 174 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 175 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 176 "/usr/local/cuda/bin/../include/vector_functions.h"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 177 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 179 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline int4 make_int4(int x, int y, int z, int w)
# 180 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 181 "/usr/local/cuda/bin/../include/vector_functions.h"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 182 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 184 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 185 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 186 "/usr/local/cuda/bin/../include/vector_functions.h"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 187 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 189 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long1 make_long1(long x)
# 190 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 191 "/usr/local/cuda/bin/../include/vector_functions.h"
long1 t; (t.x) = x; return t;
# 192 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 194 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong1 make_ulong1(unsigned long x)
# 195 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 196 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong1 t; (t.x) = x; return t;
# 197 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 199 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long2 make_long2(long x, long y)
# 200 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 201 "/usr/local/cuda/bin/../include/vector_functions.h"
long2 t; (t.x) = x; (t.y) = y; return t;
# 202 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 204 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 205 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 206 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 207 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 209 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long3 make_long3(long x, long y, long z)
# 210 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 211 "/usr/local/cuda/bin/../include/vector_functions.h"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 212 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 214 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 215 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 216 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 217 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 219 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline long4 make_long4(long x, long y, long z, long w)
# 220 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 221 "/usr/local/cuda/bin/../include/vector_functions.h"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 222 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 224 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 225 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 226 "/usr/local/cuda/bin/../include/vector_functions.h"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 227 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 229 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float1 make_float1(float x)
# 230 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 231 "/usr/local/cuda/bin/../include/vector_functions.h"
float1 t; (t.x) = x; return t;
# 232 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 234 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float2 make_float2(float x, float y)
# 235 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 236 "/usr/local/cuda/bin/../include/vector_functions.h"
float2 t; (t.x) = x; (t.y) = y; return t;
# 237 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 239 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float3 make_float3(float x, float y, float z)
# 240 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 241 "/usr/local/cuda/bin/../include/vector_functions.h"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 242 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 244 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline float4 make_float4(float x, float y, float z, float w)
# 245 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 246 "/usr/local/cuda/bin/../include/vector_functions.h"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 247 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 249 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong1 make_longlong1(long long x)
# 250 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 251 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong1 t; (t.x) = x; return t;
# 252 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 254 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 255 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 256 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong1 t; (t.x) = x; return t;
# 257 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 259 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong2 make_longlong2(long long x, long long y)
# 260 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 261 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 262 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 264 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 265 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 266 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 267 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 269 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 270 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 271 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 272 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 274 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 275 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 276 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 277 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 279 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 280 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 281 "/usr/local/cuda/bin/../include/vector_functions.h"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 282 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 284 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 285 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 286 "/usr/local/cuda/bin/../include/vector_functions.h"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 287 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 289 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double1 make_double1(double x)
# 290 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 291 "/usr/local/cuda/bin/../include/vector_functions.h"
double1 t; (t.x) = x; return t;
# 292 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 294 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double2 make_double2(double x, double y)
# 295 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 296 "/usr/local/cuda/bin/../include/vector_functions.h"
double2 t; (t.x) = x; (t.y) = y; return t;
# 297 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 299 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double3 make_double3(double x, double y, double z)
# 300 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 301 "/usr/local/cuda/bin/../include/vector_functions.h"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 302 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 304 "/usr/local/cuda/bin/../include/vector_functions.h"
static inline double4 make_double4(double x, double y, double z, double w)
# 305 "/usr/local/cuda/bin/../include/vector_functions.h"
{
# 306 "/usr/local/cuda/bin/../include/vector_functions.h"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 307 "/usr/local/cuda/bin/../include/vector_functions.h"
}
# 43 "/usr/include/string.h" 3
extern "C" void *memcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 45 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 48 "/usr/include/string.h" 3
extern "C" void *memmove(void * , const void * , size_t ) throw()
# 49 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 56 "/usr/include/string.h" 3
extern "C" void *memccpy(void *__restrict__ , const void *__restrict__ , int , size_t ) throw()
# 58 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 64 "/usr/include/string.h" 3
extern "C" void *memset(void * , int , size_t ) throw() __attribute((__nonnull__(1)));
# 67 "/usr/include/string.h" 3
extern "C" int memcmp(const void * , const void * , size_t ) throw()
# 68 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 74 "/usr/include/string.h" 3
extern void *memchr(void * , int , size_t ) throw() __asm__("memchr")
# 75 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 76 "/usr/include/string.h" 3
extern const void *memchr(const void * , int , size_t ) throw() __asm__("memchr")
# 77 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 103 "/usr/include/string.h" 3
void *rawmemchr(void * , int ) throw() __asm__("rawmemchr")
# 104 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 105 "/usr/include/string.h" 3
const void *rawmemchr(const void * , int ) throw() __asm__("rawmemchr")
# 106 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 114 "/usr/include/string.h" 3
void *memrchr(void * , int , size_t ) throw() __asm__("memrchr")
# 115 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 116 "/usr/include/string.h" 3
const void *memrchr(const void * , int , size_t ) throw() __asm__("memrchr")
# 117 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 127 "/usr/include/string.h" 3
extern "C" char *strcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 128 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 130 "/usr/include/string.h" 3
extern "C" char *strncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 132 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 135 "/usr/include/string.h" 3
extern "C" char *strcat(char *__restrict__ , const char *__restrict__ ) throw()
# 136 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 138 "/usr/include/string.h" 3
extern "C" char *strncat(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 139 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 142 "/usr/include/string.h" 3
extern "C" int strcmp(const char * , const char * ) throw()
# 143 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 145 "/usr/include/string.h" 3
extern "C" int strncmp(const char * , const char * , size_t ) throw()
# 146 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 149 "/usr/include/string.h" 3
extern "C" int strcoll(const char * , const char * ) throw()
# 150 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 152 "/usr/include/string.h" 3
extern "C" size_t strxfrm(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 154 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 40 "/usr/include/xlocale.h" 3
extern "C" { typedef
# 28 "/usr/include/xlocale.h" 3
struct __locale_struct {
# 31 "/usr/include/xlocale.h" 3
struct locale_data *__locales[13];
# 34 "/usr/include/xlocale.h" 3
const unsigned short *__ctype_b;
# 35 "/usr/include/xlocale.h" 3
const int *__ctype_tolower;
# 36 "/usr/include/xlocale.h" 3
const int *__ctype_toupper;
# 39 "/usr/include/xlocale.h" 3
const char *__names[13];
# 40 "/usr/include/xlocale.h" 3
} *__locale_t; }
# 43 "/usr/include/xlocale.h" 3
extern "C" { typedef __locale_t locale_t; }
# 164 "/usr/include/string.h" 3
extern "C" int strcoll_l(const char * , const char * , __locale_t ) throw()
# 165 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 167 "/usr/include/string.h" 3
extern "C" size_t strxfrm_l(char * , const char * , size_t , __locale_t ) throw()
# 168 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 4)));
# 173 "/usr/include/string.h" 3
extern "C" char *strdup(const char * ) throw()
# 174 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 181 "/usr/include/string.h" 3
extern "C" char *strndup(const char * , size_t ) throw()
# 182 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 213 "/usr/include/string.h" 3
extern char *strchr(char * , int ) throw() __asm__("strchr")
# 214 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 215 "/usr/include/string.h" 3
extern const char *strchr(const char * , int ) throw() __asm__("strchr")
# 216 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 240 "/usr/include/string.h" 3
extern char *strrchr(char * , int ) throw() __asm__("strrchr")
# 241 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 242 "/usr/include/string.h" 3
extern const char *strrchr(const char * , int ) throw() __asm__("strrchr")
# 243 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 269 "/usr/include/string.h" 3
char *strchrnul(char * , int ) throw() __asm__("strchrnul")
# 270 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 271 "/usr/include/string.h" 3
const char *strchrnul(const char * , int ) throw() __asm__("strchrnul")
# 272 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 282 "/usr/include/string.h" 3
extern "C" size_t strcspn(const char * , const char * ) throw()
# 283 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 286 "/usr/include/string.h" 3
extern "C" size_t strspn(const char * , const char * ) throw()
# 287 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 292 "/usr/include/string.h" 3
extern char *strpbrk(char * , const char * ) throw() __asm__("strpbrk")
# 293 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 294 "/usr/include/string.h" 3
extern const char *strpbrk(const char * , const char * ) throw() __asm__("strpbrk")
# 295 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 319 "/usr/include/string.h" 3
extern char *strstr(char * , const char * ) throw() __asm__("strstr")
# 320 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 321 "/usr/include/string.h" 3
extern const char *strstr(const char * , const char * ) throw() __asm__("strstr")
# 323 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 346 "/usr/include/string.h" 3
extern "C" char *strtok(char *__restrict__ , const char *__restrict__ ) throw()
# 347 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 352 "/usr/include/string.h" 3
extern "C" char *__strtok_r(char *__restrict__ , const char *__restrict__ , char **__restrict__ ) throw()
# 355 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 357 "/usr/include/string.h" 3
extern "C" char *strtok_r(char *__restrict__ , const char *__restrict__ , char **__restrict__ ) throw()
# 359 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 365 "/usr/include/string.h" 3
char *strcasestr(char * , const char * ) throw() __asm__("strcasestr")
# 366 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 367 "/usr/include/string.h" 3
const char *strcasestr(const char * , const char * ) throw() __asm__("strcasestr")
# 369 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 380 "/usr/include/string.h" 3
extern "C" void *memmem(const void * , size_t , const void * , size_t ) throw()
# 382 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 3)));
# 386 "/usr/include/string.h" 3
extern "C" void *__mempcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 388 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 389 "/usr/include/string.h" 3
extern "C" void *mempcpy(void *__restrict__ , const void *__restrict__ , size_t ) throw()
# 391 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 397 "/usr/include/string.h" 3
extern "C" size_t strlen(const char * ) throw()
# 398 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 404 "/usr/include/string.h" 3
extern "C" size_t strnlen(const char * , size_t ) throw()
# 405 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 411 "/usr/include/string.h" 3
extern "C" char *strerror(int ) throw();
# 436 "/usr/include/string.h" 3
extern "C" char *strerror_r(int , char * , size_t ) throw()
# 437 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 443 "/usr/include/string.h" 3
extern "C" char *strerror_l(int , __locale_t ) throw();
# 449 "/usr/include/string.h" 3
extern "C" void __bzero(void * , size_t ) throw() __attribute((__nonnull__(1)));
# 453 "/usr/include/string.h" 3
extern "C" void bcopy(const void * , void * , size_t ) throw()
# 454 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 457 "/usr/include/string.h" 3
extern "C" void bzero(void * , size_t ) throw() __attribute((__nonnull__(1)));
# 460 "/usr/include/string.h" 3
extern "C" int bcmp(const void * , const void * , size_t ) throw()
# 461 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 467 "/usr/include/string.h" 3
extern char *index(char * , int ) throw() __asm__("index")
# 468 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 469 "/usr/include/string.h" 3
extern const char *index(const char * , int ) throw() __asm__("index")
# 470 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 495 "/usr/include/string.h" 3
extern char *rindex(char * , int ) throw() __asm__("rindex")
# 496 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 497 "/usr/include/string.h" 3
extern const char *rindex(const char * , int ) throw() __asm__("rindex")
# 498 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 521 "/usr/include/string.h" 3
extern "C" int ffs(int ) throw() __attribute((const));
# 526 "/usr/include/string.h" 3
extern "C" int ffsl(long ) throw() __attribute((const));
# 528 "/usr/include/string.h" 3
extern "C" int ffsll(long long ) throw()
# 529 "/usr/include/string.h" 3
 __attribute((const));
# 534 "/usr/include/string.h" 3
extern "C" int strcasecmp(const char * , const char * ) throw()
# 535 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 538 "/usr/include/string.h" 3
extern "C" int strncasecmp(const char * , const char * , size_t ) throw()
# 539 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 545 "/usr/include/string.h" 3
extern "C" int strcasecmp_l(const char * , const char * , __locale_t ) throw()
# 547 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 549 "/usr/include/string.h" 3
extern "C" int strncasecmp_l(const char * , const char * , size_t , __locale_t ) throw()
# 551 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 4)));
# 557 "/usr/include/string.h" 3
extern "C" char *strsep(char **__restrict__ , const char *__restrict__ ) throw()
# 559 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 564 "/usr/include/string.h" 3
extern "C" char *strsignal(int ) throw();
# 567 "/usr/include/string.h" 3
extern "C" char *__stpcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 568 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 569 "/usr/include/string.h" 3
extern "C" char *stpcpy(char *__restrict__ , const char *__restrict__ ) throw()
# 570 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 574 "/usr/include/string.h" 3
extern "C" char *__stpncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 576 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 577 "/usr/include/string.h" 3
extern "C" char *stpncpy(char *__restrict__ , const char *__restrict__ , size_t ) throw()
# 579 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 584 "/usr/include/string.h" 3
extern "C" int strverscmp(const char * , const char * ) throw()
# 585 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 588 "/usr/include/string.h" 3
extern "C" char *strfry(char * ) throw() __attribute((__nonnull__(1)));
# 591 "/usr/include/string.h" 3
extern "C" void *memfrob(void * , size_t ) throw() __attribute((__nonnull__(1)));
# 599 "/usr/include/string.h" 3
char *basename(char * ) throw() __asm__("basename")
# 600 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 601 "/usr/include/string.h" 3
const char *basename(const char * ) throw() __asm__("basename")
# 602 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 31 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned char __u_char; }
# 32 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned short __u_short; }
# 33 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __u_int; }
# 34 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __u_long; }
# 37 "/usr/include/bits/types.h" 3
extern "C" { typedef signed char __int8_t; }
# 38 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned char __uint8_t; }
# 39 "/usr/include/bits/types.h" 3
extern "C" { typedef signed short __int16_t; }
# 40 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned short __uint16_t; }
# 41 "/usr/include/bits/types.h" 3
extern "C" { typedef signed int __int32_t; }
# 42 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __uint32_t; }
# 44 "/usr/include/bits/types.h" 3
extern "C" { typedef signed long __int64_t; }
# 45 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __uint64_t; }
# 53 "/usr/include/bits/types.h" 3
extern "C" { typedef long __quad_t; }
# 54 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __u_quad_t; }
# 134 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __dev_t; }
# 135 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __uid_t; }
# 136 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __gid_t; }
# 137 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __ino_t; }
# 138 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __ino64_t; }
# 139 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __mode_t; }
# 140 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __nlink_t; }
# 141 "/usr/include/bits/types.h" 3
extern "C" { typedef long __off_t; }
# 142 "/usr/include/bits/types.h" 3
extern "C" { typedef long __off64_t; }
# 143 "/usr/include/bits/types.h" 3
extern "C" { typedef int __pid_t; }
# 144 "/usr/include/bits/types.h" 3
extern "C" { typedef struct { int __val[2]; } __fsid_t; }
# 145 "/usr/include/bits/types.h" 3
extern "C" { typedef long __clock_t; }
# 146 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __rlim_t; }
# 147 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __rlim64_t; }
# 148 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __id_t; }
# 149 "/usr/include/bits/types.h" 3
extern "C" { typedef long __time_t; }
# 150 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __useconds_t; }
# 151 "/usr/include/bits/types.h" 3
extern "C" { typedef long __suseconds_t; }
# 153 "/usr/include/bits/types.h" 3
extern "C" { typedef int __daddr_t; }
# 154 "/usr/include/bits/types.h" 3
extern "C" { typedef long __swblk_t; }
# 155 "/usr/include/bits/types.h" 3
extern "C" { typedef int __key_t; }
# 158 "/usr/include/bits/types.h" 3
extern "C" { typedef int __clockid_t; }
# 161 "/usr/include/bits/types.h" 3
extern "C" { typedef void *__timer_t; }
# 164 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blksize_t; }
# 169 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blkcnt_t; }
# 170 "/usr/include/bits/types.h" 3
extern "C" { typedef long __blkcnt64_t; }
# 173 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsblkcnt_t; }
# 174 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsblkcnt64_t; }
# 177 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsfilcnt_t; }
# 178 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned long __fsfilcnt64_t; }
# 180 "/usr/include/bits/types.h" 3
extern "C" { typedef long __ssize_t; }
# 184 "/usr/include/bits/types.h" 3
extern "C" { typedef __off64_t __loff_t; }
# 185 "/usr/include/bits/types.h" 3
extern "C" { typedef __quad_t *__qaddr_t; }
# 186 "/usr/include/bits/types.h" 3
extern "C" { typedef char *__caddr_t; }
# 189 "/usr/include/bits/types.h" 3
extern "C" { typedef long __intptr_t; }
# 192 "/usr/include/bits/types.h" 3
extern "C" { typedef unsigned __socklen_t; }
# 60 "/usr/include/time.h" 3
extern "C" { typedef __clock_t clock_t; }
# 76 "/usr/include/time.h" 3
extern "C" { typedef __time_t time_t; }
# 92 "/usr/include/time.h" 3
extern "C" { typedef __clockid_t clockid_t; }
# 104 "/usr/include/time.h" 3
extern "C" { typedef __timer_t timer_t; }
# 120 "/usr/include/time.h" 3
extern "C" { struct timespec {
# 122 "/usr/include/time.h" 3
__time_t tv_sec;
# 123 "/usr/include/time.h" 3
long tv_nsec;
# 124 "/usr/include/time.h" 3
}; }
# 133 "/usr/include/time.h" 3
extern "C" { struct tm {
# 135 "/usr/include/time.h" 3
int tm_sec;
# 136 "/usr/include/time.h" 3
int tm_min;
# 137 "/usr/include/time.h" 3
int tm_hour;
# 138 "/usr/include/time.h" 3
int tm_mday;
# 139 "/usr/include/time.h" 3
int tm_mon;
# 140 "/usr/include/time.h" 3
int tm_year;
# 141 "/usr/include/time.h" 3
int tm_wday;
# 142 "/usr/include/time.h" 3
int tm_yday;
# 143 "/usr/include/time.h" 3
int tm_isdst;
# 146 "/usr/include/time.h" 3
long tm_gmtoff;
# 147 "/usr/include/time.h" 3
const char *tm_zone;
# 152 "/usr/include/time.h" 3
}; }
# 161 "/usr/include/time.h" 3
extern "C" { struct itimerspec {
# 163 "/usr/include/time.h" 3
timespec it_interval;
# 164 "/usr/include/time.h" 3
timespec it_value;
# 165 "/usr/include/time.h" 3
}; }
# 168 "/usr/include/time.h" 3
struct sigevent;
# 174 "/usr/include/time.h" 3
extern "C" { typedef __pid_t pid_t; }
# 183 "/usr/include/time.h" 3
extern "C" clock_t clock() throw();
# 186 "/usr/include/time.h" 3
extern "C" time_t time(time_t * ) throw();
# 189 "/usr/include/time.h" 3
extern "C" double difftime(time_t , time_t ) throw()
# 190 "/usr/include/time.h" 3
 __attribute((const));
# 193 "/usr/include/time.h" 3
extern "C" time_t mktime(tm * ) throw();
# 199 "/usr/include/time.h" 3
extern "C" size_t strftime(char *__restrict__ , size_t , const char *__restrict__ , const tm *__restrict__ ) throw();
# 207 "/usr/include/time.h" 3
extern "C" char *strptime(const char *__restrict__ , const char *__restrict__ , tm * ) throw();
# 217 "/usr/include/time.h" 3
extern "C" size_t strftime_l(char *__restrict__ , size_t , const char *__restrict__ , const tm *__restrict__ , __locale_t ) throw();
# 224 "/usr/include/time.h" 3
extern "C" char *strptime_l(const char *__restrict__ , const char *__restrict__ , tm * , __locale_t ) throw();
# 233 "/usr/include/time.h" 3
extern "C" tm *gmtime(const time_t * ) throw();
# 237 "/usr/include/time.h" 3
extern "C" tm *localtime(const time_t * ) throw();
# 243 "/usr/include/time.h" 3
extern "C" tm *gmtime_r(const time_t *__restrict__ , tm *__restrict__ ) throw();
# 248 "/usr/include/time.h" 3
extern "C" tm *localtime_r(const time_t *__restrict__ , tm *__restrict__ ) throw();
# 255 "/usr/include/time.h" 3
extern "C" char *asctime(const tm * ) throw();
# 258 "/usr/include/time.h" 3
extern "C" char *ctime(const time_t * ) throw();
# 266 "/usr/include/time.h" 3
extern "C" char *asctime_r(const tm *__restrict__ , char *__restrict__ ) throw();
# 270 "/usr/include/time.h" 3
extern "C" char *ctime_r(const time_t *__restrict__ , char *__restrict__ ) throw();
# 276 "/usr/include/time.h" 3
extern "C" { extern char *__tzname[2]; }
# 277 "/usr/include/time.h" 3
extern "C" { extern int __daylight; }
# 278 "/usr/include/time.h" 3
extern "C" { extern long __timezone; }
# 283 "/usr/include/time.h" 3
extern "C" { extern char *tzname[2]; }
# 287 "/usr/include/time.h" 3
extern "C" void tzset() throw();
# 291 "/usr/include/time.h" 3
extern "C" { extern int daylight; }
# 292 "/usr/include/time.h" 3
extern "C" { extern long timezone; }
# 298 "/usr/include/time.h" 3
extern "C" int stime(const time_t * ) throw();
# 313 "/usr/include/time.h" 3
extern "C" time_t timegm(tm * ) throw();
# 316 "/usr/include/time.h" 3
extern "C" time_t timelocal(tm * ) throw();
# 319 "/usr/include/time.h" 3
extern "C" int dysize(int ) throw() __attribute((const));
# 328 "/usr/include/time.h" 3
extern "C" int nanosleep(const timespec * , timespec * );
# 333 "/usr/include/time.h" 3
extern "C" int clock_getres(clockid_t , timespec * ) throw();
# 336 "/usr/include/time.h" 3
extern "C" int clock_gettime(clockid_t , timespec * ) throw();
# 339 "/usr/include/time.h" 3
extern "C" int clock_settime(clockid_t , const timespec * ) throw();
# 347 "/usr/include/time.h" 3
extern "C" int clock_nanosleep(clockid_t , int , const timespec * , timespec * );
# 352 "/usr/include/time.h" 3
extern "C" int clock_getcpuclockid(pid_t , clockid_t * ) throw();
# 357 "/usr/include/time.h" 3
extern "C" int timer_create(clockid_t , sigevent *__restrict__ , timer_t *__restrict__ ) throw();
# 362 "/usr/include/time.h" 3
extern "C" int timer_delete(timer_t ) throw();
# 365 "/usr/include/time.h" 3
extern "C" int timer_settime(timer_t , int , const itimerspec *__restrict__ , itimerspec *__restrict__ ) throw();
# 370 "/usr/include/time.h" 3
extern "C" int timer_gettime(timer_t , itimerspec * ) throw();
# 374 "/usr/include/time.h" 3
extern "C" int timer_getoverrun(timer_t ) throw();
# 390 "/usr/include/time.h" 3
extern "C" { extern int getdate_err; }
# 399 "/usr/include/time.h" 3
extern "C" tm *getdate(const char * );
# 413 "/usr/include/time.h" 3
extern "C" int getdate_r(const char *__restrict__ , tm *__restrict__ );
# 69 "/usr/local/cuda/bin/../include/common_functions.h"
extern "C" clock_t clock() throw();
# 70 "/usr/local/cuda/bin/../include/common_functions.h"
extern "C" void *memset(void *, int, size_t) throw();
# 71 "/usr/local/cuda/bin/../include/common_functions.h"
extern "C" void *memcpy(void *, const void *, size_t) throw();
# 160 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int abs(int) throw();
# 161 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long labs(long) throw();
# 162 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long long llabs(long long) throw();
# 175 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double fabs(double ) throw();
# 188 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float fabsf(float ) throw();
# 189 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int min(int, int);
# 190 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" unsigned umin(unsigned, unsigned);
# 191 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long long llmin(long long, long long);
# 192 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" unsigned long long ullmin(unsigned long long, unsigned long long);
# 208 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float fminf(float , float ) throw();
# 224 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double fmin(double , double ) throw();
# 225 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int max(int, int);
# 226 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" unsigned umax(unsigned, unsigned);
# 227 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long long llmax(long long, long long);
# 228 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" unsigned long long ullmax(unsigned long long, unsigned long long);
# 244 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float fmaxf(float , float ) throw();
# 260 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double fmax(double, double) throw();
# 273 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double sin(double ) throw();
# 286 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double cos(double ) throw();
# 301 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" void sincos(double , double * , double * ) throw();
# 317 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" void sincosf(float , float * , float * ) throw();
# 330 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double tan(double ) throw();
# 345 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double sqrt(double ) throw();
# 360 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double rsqrt(double );
# 375 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float rsqrtf(float );
# 390 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double log2(double ) throw();
# 401 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double exp2(double ) throw();
# 412 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float exp2f(float ) throw();
# 423 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double exp10(double ) throw();
# 435 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float exp10f(float ) throw();
# 446 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double expm1(double ) throw();
# 457 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float expm1f(float ) throw();
# 472 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float log2f(float ) throw();
# 487 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double log10(double ) throw();
# 502 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double log(double ) throw();
# 517 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double log1p(double ) throw();
# 532 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float log1pf(float ) throw();
# 546 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double floor(double ) throw();
# 557 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double exp(double ) throw();
# 570 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double cosh(double ) throw();
# 582 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double sinh(double ) throw();
# 594 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double tanh(double ) throw();
# 608 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double acosh(double ) throw();
# 622 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float acoshf(float ) throw();
# 634 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double asinh(double ) throw();
# 646 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float asinhf(float ) throw();
# 660 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double atanh(double ) throw();
# 674 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float atanhf(float ) throw();
# 686 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double ldexp(double , int ) throw();
# 698 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float ldexpf(float , int ) throw();
# 711 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double logb(double ) throw();
# 724 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float logbf(float ) throw();
# 742 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int ilogb(double ) throw();
# 760 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int ilogbf(float ) throw();
# 774 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double scalbn(double , int ) throw();
# 788 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float scalbnf(float , int ) throw();
# 802 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double scalbln(double , long ) throw();
# 816 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float scalblnf(float , long ) throw();
# 837 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double frexp(double , int * ) throw();
# 858 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float frexpf(float , int * ) throw();
# 871 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double round(double ) throw();
# 884 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float roundf(float ) throw();
# 898 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long lround(double ) throw();
# 912 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long lroundf(float ) throw();
# 926 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long long llround(double ) throw();
# 940 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long long llroundf(float ) throw();
# 951 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double rint(double ) throw();
# 962 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float rintf(float ) throw();
# 974 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long lrint(double ) throw();
# 986 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long lrintf(float ) throw();
# 998 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long long llrint(double ) throw();
# 1010 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" long long llrintf(float ) throw();
# 1023 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double nearbyint(double ) throw();
# 1036 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float nearbyintf(float ) throw();
# 1048 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double ceil(double ) throw();
# 1059 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double trunc(double ) throw();
# 1070 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float truncf(float ) throw();
# 1084 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double fdim(double , double ) throw();
# 1098 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float fdimf(float , float ) throw();
# 1113 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double atan2(double , double ) throw();
# 1126 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double atan(double ) throw();
# 1140 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double acos(double ) throw();
# 1154 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double asin(double ) throw();
# 1169 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double hypot(double , double ) throw();
# 1186 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float hypotf(float , float ) throw();
# 1200 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double cbrt(double ) throw();
# 1214 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float cbrtf(float ) throw();
# 1227 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double rcbrt(double );
# 1240 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float rcbrtf(float );
# 1254 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double sinpi(double );
# 1268 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float sinpif(float );
# 1282 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double cospi(double );
# 1296 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float cospif(float );
# 1324 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double pow(double , double ) throw();
# 1341 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double modf(double , double * ) throw();
# 1361 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double fmod(double , double ) throw();
# 1379 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double remainder(double , double ) throw();
# 1398 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float remainderf(float , float ) throw();
# 1417 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double remquo(double , double , int * ) throw();
# 1436 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float remquof(float , float , int * ) throw();
# 1451 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double j0(double ) throw();
# 1466 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float j0f(float ) throw();
# 1482 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double j1(double ) throw();
# 1498 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float j1f(float ) throw();
# 1514 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double jn(int , double ) throw();
# 1530 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float jnf(int , float ) throw();
# 1547 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double y0(double ) throw();
# 1564 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float y0f(float ) throw();
# 1581 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double y1(double ) throw();
# 1598 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float y1f(float ) throw();
# 1616 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double yn(int , double ) throw();
# 1634 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float ynf(int , float ) throw();
# 1648 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double erf(double ) throw();
# 1662 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float erff(float ) throw();
# 1677 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double erfinv(double );
# 1692 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float erfinvf(float );
# 1706 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double erfc(double ) throw();
# 1720 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float erfcf(float ) throw();
# 1738 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double lgamma(double ) throw();
# 1753 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double erfcinv(double );
# 1768 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float erfcinvf(float );
# 1778 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double erfcx(double );
# 1788 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float erfcxf(float );
# 1806 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float lgammaf(float ) throw();
# 1824 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double tgamma(double ) throw();
# 1842 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float tgammaf(float ) throw();
# 1851 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double copysign(double , double ) throw();
# 1860 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float copysignf(float , float ) throw();
# 1875 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double nextafter(double , double ) throw();
# 1890 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float nextafterf(float , float ) throw();
# 1902 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double nan(const char * ) throw();
# 1914 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float nanf(const char * ) throw();
# 1915 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __isinff(float) throw();
# 1916 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __isnanf(float) throw();
# 1925 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __finite(double) throw();
# 1926 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __finitef(float) throw();
# 1927 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __signbit(double) throw();
# 1928 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __isnan(double) throw();
# 1929 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __isinf(double) throw();
# 1932 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __signbitf(float) throw();
# 1949 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" double fma(double , double , double ) throw();
# 1966 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float fmaf(float , float , float ) throw();
# 1971 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __signbitl(long double) throw();
# 1977 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __finitel(long double) throw();
# 1978 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __isinfl(long double) throw();
# 1979 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" int __isnanl(long double) throw();
# 2017 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float acosf(float ) throw();
# 2031 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float asinf(float ) throw();
# 2045 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float atanf(float ) throw();
# 2060 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float atan2f(float , float ) throw();
# 2074 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float cosf(float ) throw();
# 2088 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float sinf(float ) throw();
# 2102 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float tanf(float ) throw();
# 2116 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float coshf(float ) throw();
# 2129 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float sinhf(float ) throw();
# 2141 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float tanhf(float ) throw();
# 2156 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float logf(float ) throw();
# 2168 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float expf(float ) throw();
# 2183 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float log10f(float ) throw();
# 2199 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float modff(float , float * ) throw();
# 2227 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float powf(float , float ) throw();
# 2242 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float sqrtf(float ) throw();
# 2254 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float ceilf(float ) throw();
# 2268 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float floorf(float ) throw();
# 2288 "/usr/local/cuda/bin/../include/math_functions.h"
extern "C" float fmodf(float , float ) throw();
# 31 "/usr/include/bits/mathdef.h" 3
extern "C" { typedef float float_t; }
# 32 "/usr/include/bits/mathdef.h" 3
extern "C" { typedef double double_t; }
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" double acos(double ) throw(); extern "C" double __acos(double ) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" double asin(double ) throw(); extern "C" double __asin(double ) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" double atan(double ) throw(); extern "C" double __atan(double ) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" double atan2(double , double ) throw(); extern "C" double __atan2(double , double ) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" double cos(double ) throw(); extern "C" double __cos(double ) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" double sin(double ) throw(); extern "C" double __sin(double ) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" double tan(double ) throw(); extern "C" double __tan(double ) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" double cosh(double ) throw(); extern "C" double __cosh(double ) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" double sinh(double ) throw(); extern "C" double __sinh(double ) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" double tanh(double ) throw(); extern "C" double __tanh(double ) throw();
# 82 "/usr/include/bits/mathcalls.h" 3
extern "C" void sincos(double , double * , double * ) throw(); extern "C" void __sincos(double , double * , double * ) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" double acosh(double ) throw(); extern "C" double __acosh(double ) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" double asinh(double ) throw(); extern "C" double __asinh(double ) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" double atanh(double ) throw(); extern "C" double __atanh(double ) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" double exp(double ) throw(); extern "C" double __exp(double ) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" double frexp(double , int * ) throw(); extern "C" double __frexp(double , int * ) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" double ldexp(double , int ) throw(); extern "C" double __ldexp(double , int ) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" double log(double ) throw(); extern "C" double __log(double ) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" double log10(double ) throw(); extern "C" double __log10(double ) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" double modf(double , double * ) throw(); extern "C" double __modf(double , double * ) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" double exp10(double ) throw(); extern "C" double __exp10(double ) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" double pow10(double ) throw(); extern "C" double __pow10(double ) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" double expm1(double ) throw(); extern "C" double __expm1(double ) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" double log1p(double ) throw(); extern "C" double __log1p(double ) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" double logb(double ) throw(); extern "C" double __logb(double ) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" double exp2(double ) throw(); extern "C" double __exp2(double ) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" double log2(double ) throw(); extern "C" double __log2(double ) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" double pow(double , double ) throw(); extern "C" double __pow(double , double ) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" double sqrt(double ) throw(); extern "C" double __sqrt(double ) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" double hypot(double , double ) throw(); extern "C" double __hypot(double , double ) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" double cbrt(double ) throw(); extern "C" double __cbrt(double ) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" double ceil(double ) throw() __attribute((const)); extern "C" double __ceil(double ) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" double fabs(double ) throw() __attribute((const)); extern "C" double __fabs(double ) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" double floor(double ) throw() __attribute((const)); extern "C" double __floor(double ) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" double fmod(double , double ) throw(); extern "C" double __fmod(double , double ) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isinf(double ) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" int __finite(double ) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinf(double ) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finite(double ) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" double drem(double , double ) throw(); extern "C" double __drem(double , double ) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" double significand(double ) throw(); extern "C" double __significand(double ) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" double copysign(double , double ) throw() __attribute((const)); extern "C" double __copysign(double , double ) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" double nan(const char * ) throw() __attribute((const)); extern "C" double __nan(const char * ) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isnan(double ) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnan(double ) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" double j0(double) throw(); extern "C" double __j0(double) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" double j1(double) throw(); extern "C" double __j1(double) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" double jn(int, double) throw(); extern "C" double __jn(int, double) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" double y0(double) throw(); extern "C" double __y0(double) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" double y1(double) throw(); extern "C" double __y1(double) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" double yn(int, double) throw(); extern "C" double __yn(int, double) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" double erf(double) throw(); extern "C" double __erf(double) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" double erfc(double) throw(); extern "C" double __erfc(double) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" double lgamma(double) throw(); extern "C" double __lgamma(double) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" double tgamma(double) throw(); extern "C" double __tgamma(double) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" double gamma(double) throw(); extern "C" double __gamma(double) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" double lgamma_r(double, int * ) throw(); extern "C" double __lgamma_r(double, int * ) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" double rint(double ) throw(); extern "C" double __rint(double ) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" double nextafter(double , double ) throw() __attribute((const)); extern "C" double __nextafter(double , double ) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" double nexttoward(double , long double ) throw() __attribute((const)); extern "C" double __nexttoward(double , long double ) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" double remainder(double , double ) throw(); extern "C" double __remainder(double , double ) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" double scalbn(double , int ) throw(); extern "C" double __scalbn(double , int ) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" int ilogb(double ) throw(); extern "C" int __ilogb(double ) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" double scalbln(double , long ) throw(); extern "C" double __scalbln(double , long ) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" double nearbyint(double ) throw(); extern "C" double __nearbyint(double ) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" double round(double ) throw() __attribute((const)); extern "C" double __round(double ) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" double trunc(double ) throw() __attribute((const)); extern "C" double __trunc(double ) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" double remquo(double , double , int * ) throw(); extern "C" double __remquo(double , double , int * ) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" long lrint(double ) throw(); extern "C" long __lrint(double ) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llrint(double ) throw(); extern "C" long long __llrint(double ) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" long lround(double ) throw(); extern "C" long __lround(double ) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llround(double ) throw(); extern "C" long long __llround(double ) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" double fdim(double , double ) throw(); extern "C" double __fdim(double , double ) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" double fmax(double , double ) throw(); extern "C" double __fmax(double , double ) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" double fmin(double , double ) throw(); extern "C" double __fmin(double , double ) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassify(double ) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" int __signbit(double ) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" double fma(double , double , double ) throw(); extern "C" double __fma(double , double , double ) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" double scalb(double , double ) throw(); extern "C" double __scalb(double , double ) throw();
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" float acosf(float ) throw(); extern "C" float __acosf(float ) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" float asinf(float ) throw(); extern "C" float __asinf(float ) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" float atanf(float ) throw(); extern "C" float __atanf(float ) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" float atan2f(float , float ) throw(); extern "C" float __atan2f(float , float ) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" float cosf(float ) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" float sinf(float ) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" float tanf(float ) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" float coshf(float ) throw(); extern "C" float __coshf(float ) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" float sinhf(float ) throw(); extern "C" float __sinhf(float ) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" float tanhf(float ) throw(); extern "C" float __tanhf(float ) throw();
# 82 "/usr/include/bits/mathcalls.h" 3
extern "C" void sincosf(float , float * , float * ) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" float acoshf(float ) throw(); extern "C" float __acoshf(float ) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" float asinhf(float ) throw(); extern "C" float __asinhf(float ) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" float atanhf(float ) throw(); extern "C" float __atanhf(float ) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" float expf(float ) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" float frexpf(float , int * ) throw(); extern "C" float __frexpf(float , int * ) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" float ldexpf(float , int ) throw(); extern "C" float __ldexpf(float , int ) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" float logf(float ) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" float log10f(float ) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" float modff(float , float * ) throw(); extern "C" float __modff(float , float * ) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" float exp10f(float ) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" float pow10f(float ) throw(); extern "C" float __pow10f(float ) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" float expm1f(float ) throw(); extern "C" float __expm1f(float ) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" float log1pf(float ) throw(); extern "C" float __log1pf(float ) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" float logbf(float ) throw(); extern "C" float __logbf(float ) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" float exp2f(float ) throw(); extern "C" float __exp2f(float ) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" float log2f(float ) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" float powf(float , float ) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" float sqrtf(float ) throw(); extern "C" float __sqrtf(float ) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" float hypotf(float , float ) throw(); extern "C" float __hypotf(float , float ) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" float cbrtf(float ) throw(); extern "C" float __cbrtf(float ) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" float ceilf(float ) throw() __attribute((const)); extern "C" float __ceilf(float ) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" float fabsf(float ) throw() __attribute((const)); extern "C" float __fabsf(float ) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" float floorf(float ) throw() __attribute((const)); extern "C" float __floorf(float ) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" float fmodf(float , float ) throw(); extern "C" float __fmodf(float , float ) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isinff(float ) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" int __finitef(float ) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinff(float ) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finitef(float ) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" float dremf(float , float ) throw(); extern "C" float __dremf(float , float ) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" float significandf(float ) throw(); extern "C" float __significandf(float ) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" float copysignf(float , float ) throw() __attribute((const)); extern "C" float __copysignf(float , float ) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" float nanf(const char * ) throw() __attribute((const)); extern "C" float __nanf(const char * ) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isnanf(float ) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnanf(float ) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" float j0f(float) throw(); extern "C" float __j0f(float) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" float j1f(float) throw(); extern "C" float __j1f(float) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" float jnf(int, float) throw(); extern "C" float __jnf(int, float) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" float y0f(float) throw(); extern "C" float __y0f(float) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" float y1f(float) throw(); extern "C" float __y1f(float) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" float ynf(int, float) throw(); extern "C" float __ynf(int, float) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" float erff(float) throw(); extern "C" float __erff(float) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" float erfcf(float) throw(); extern "C" float __erfcf(float) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" float lgammaf(float) throw(); extern "C" float __lgammaf(float) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" float tgammaf(float) throw(); extern "C" float __tgammaf(float) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" float gammaf(float) throw(); extern "C" float __gammaf(float) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" float lgammaf_r(float, int * ) throw(); extern "C" float __lgammaf_r(float, int * ) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" float rintf(float ) throw(); extern "C" float __rintf(float ) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" float nextafterf(float , float ) throw() __attribute((const)); extern "C" float __nextafterf(float , float ) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" float nexttowardf(float , long double ) throw() __attribute((const)); extern "C" float __nexttowardf(float , long double ) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" float remainderf(float , float ) throw(); extern "C" float __remainderf(float , float ) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" float scalbnf(float , int ) throw(); extern "C" float __scalbnf(float , int ) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" int ilogbf(float ) throw(); extern "C" int __ilogbf(float ) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" float scalblnf(float , long ) throw(); extern "C" float __scalblnf(float , long ) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" float nearbyintf(float ) throw(); extern "C" float __nearbyintf(float ) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" float roundf(float ) throw() __attribute((const)); extern "C" float __roundf(float ) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" float truncf(float ) throw() __attribute((const)); extern "C" float __truncf(float ) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" float remquof(float , float , int * ) throw(); extern "C" float __remquof(float , float , int * ) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" long lrintf(float ) throw(); extern "C" long __lrintf(float ) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llrintf(float ) throw(); extern "C" long long __llrintf(float ) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" long lroundf(float ) throw(); extern "C" long __lroundf(float ) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llroundf(float ) throw(); extern "C" long long __llroundf(float ) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" float fdimf(float , float ) throw(); extern "C" float __fdimf(float , float ) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" float fmaxf(float , float ) throw(); extern "C" float __fmaxf(float , float ) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" float fminf(float , float ) throw(); extern "C" float __fminf(float , float ) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassifyf(float ) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" int __signbitf(float ) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" float fmaf(float , float , float ) throw(); extern "C" float __fmaf(float , float , float ) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" float scalbf(float , float ) throw(); extern "C" float __scalbf(float , float ) throw();
# 55 "/usr/include/bits/mathcalls.h" 3
extern "C" long double acosl(long double ) throw(); extern "C" long double __acosl(long double ) throw();
# 57 "/usr/include/bits/mathcalls.h" 3
extern "C" long double asinl(long double ) throw(); extern "C" long double __asinl(long double ) throw();
# 59 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atanl(long double ) throw(); extern "C" long double __atanl(long double ) throw();
# 61 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atan2l(long double , long double ) throw(); extern "C" long double __atan2l(long double , long double ) throw();
# 64 "/usr/include/bits/mathcalls.h" 3
extern "C" long double cosl(long double ) throw(); extern "C" long double __cosl(long double ) throw();
# 66 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sinl(long double ) throw(); extern "C" long double __sinl(long double ) throw();
# 68 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tanl(long double ) throw(); extern "C" long double __tanl(long double ) throw();
# 73 "/usr/include/bits/mathcalls.h" 3
extern "C" long double coshl(long double ) throw(); extern "C" long double __coshl(long double ) throw();
# 75 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sinhl(long double ) throw(); extern "C" long double __sinhl(long double ) throw();
# 77 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tanhl(long double ) throw(); extern "C" long double __tanhl(long double ) throw();
# 82 "/usr/include/bits/mathcalls.h" 3
extern "C" void sincosl(long double , long double * , long double * ) throw(); extern "C" void __sincosl(long double , long double * , long double * ) throw();
# 89 "/usr/include/bits/mathcalls.h" 3
extern "C" long double acoshl(long double ) throw(); extern "C" long double __acoshl(long double ) throw();
# 91 "/usr/include/bits/mathcalls.h" 3
extern "C" long double asinhl(long double ) throw(); extern "C" long double __asinhl(long double ) throw();
# 93 "/usr/include/bits/mathcalls.h" 3
extern "C" long double atanhl(long double ) throw(); extern "C" long double __atanhl(long double ) throw();
# 101 "/usr/include/bits/mathcalls.h" 3
extern "C" long double expl(long double ) throw(); extern "C" long double __expl(long double ) throw();
# 104 "/usr/include/bits/mathcalls.h" 3
extern "C" long double frexpl(long double , int * ) throw(); extern "C" long double __frexpl(long double , int * ) throw();
# 107 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ldexpl(long double , int ) throw(); extern "C" long double __ldexpl(long double , int ) throw();
# 110 "/usr/include/bits/mathcalls.h" 3
extern "C" long double logl(long double ) throw(); extern "C" long double __logl(long double ) throw();
# 113 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log10l(long double ) throw(); extern "C" long double __log10l(long double ) throw();
# 116 "/usr/include/bits/mathcalls.h" 3
extern "C" long double modfl(long double , long double * ) throw(); extern "C" long double __modfl(long double , long double * ) throw();
# 121 "/usr/include/bits/mathcalls.h" 3
extern "C" long double exp10l(long double ) throw(); extern "C" long double __exp10l(long double ) throw();
# 123 "/usr/include/bits/mathcalls.h" 3
extern "C" long double pow10l(long double ) throw(); extern "C" long double __pow10l(long double ) throw();
# 129 "/usr/include/bits/mathcalls.h" 3
extern "C" long double expm1l(long double ) throw(); extern "C" long double __expm1l(long double ) throw();
# 132 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log1pl(long double ) throw(); extern "C" long double __log1pl(long double ) throw();
# 135 "/usr/include/bits/mathcalls.h" 3
extern "C" long double logbl(long double ) throw(); extern "C" long double __logbl(long double ) throw();
# 142 "/usr/include/bits/mathcalls.h" 3
extern "C" long double exp2l(long double ) throw(); extern "C" long double __exp2l(long double ) throw();
# 145 "/usr/include/bits/mathcalls.h" 3
extern "C" long double log2l(long double ) throw(); extern "C" long double __log2l(long double ) throw();
# 154 "/usr/include/bits/mathcalls.h" 3
extern "C" long double powl(long double , long double ) throw(); extern "C" long double __powl(long double , long double ) throw();
# 157 "/usr/include/bits/mathcalls.h" 3
extern "C" long double sqrtl(long double ) throw(); extern "C" long double __sqrtl(long double ) throw();
# 163 "/usr/include/bits/mathcalls.h" 3
extern "C" long double hypotl(long double , long double ) throw(); extern "C" long double __hypotl(long double , long double ) throw();
# 170 "/usr/include/bits/mathcalls.h" 3
extern "C" long double cbrtl(long double ) throw(); extern "C" long double __cbrtl(long double ) throw();
# 179 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ceill(long double ) throw() __attribute((const)); extern "C" long double __ceill(long double ) throw() __attribute((const));
# 182 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fabsl(long double ) throw() __attribute((const)); extern "C" long double __fabsl(long double ) throw() __attribute((const));
# 185 "/usr/include/bits/mathcalls.h" 3
extern "C" long double floorl(long double ) throw() __attribute((const)); extern "C" long double __floorl(long double ) throw() __attribute((const));
# 188 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmodl(long double , long double ) throw(); extern "C" long double __fmodl(long double , long double ) throw();
# 193 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isinfl(long double ) throw() __attribute((const));
# 196 "/usr/include/bits/mathcalls.h" 3
extern "C" int __finitel(long double ) throw() __attribute((const));
# 202 "/usr/include/bits/mathcalls.h" 3
extern "C" int isinfl(long double ) throw() __attribute((const));
# 205 "/usr/include/bits/mathcalls.h" 3
extern "C" int finitel(long double ) throw() __attribute((const));
# 208 "/usr/include/bits/mathcalls.h" 3
extern "C" long double dreml(long double , long double ) throw(); extern "C" long double __dreml(long double , long double ) throw();
# 212 "/usr/include/bits/mathcalls.h" 3
extern "C" long double significandl(long double ) throw(); extern "C" long double __significandl(long double ) throw();
# 218 "/usr/include/bits/mathcalls.h" 3
extern "C" long double copysignl(long double , long double ) throw() __attribute((const)); extern "C" long double __copysignl(long double , long double ) throw() __attribute((const));
# 225 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nanl(const char * ) throw() __attribute((const)); extern "C" long double __nanl(const char * ) throw() __attribute((const));
# 231 "/usr/include/bits/mathcalls.h" 3
extern "C" int __isnanl(long double ) throw() __attribute((const));
# 235 "/usr/include/bits/mathcalls.h" 3
extern "C" int isnanl(long double ) throw() __attribute((const));
# 238 "/usr/include/bits/mathcalls.h" 3
extern "C" long double j0l(long double) throw(); extern "C" long double __j0l(long double) throw();
# 239 "/usr/include/bits/mathcalls.h" 3
extern "C" long double j1l(long double) throw(); extern "C" long double __j1l(long double) throw();
# 240 "/usr/include/bits/mathcalls.h" 3
extern "C" long double jnl(int, long double) throw(); extern "C" long double __jnl(int, long double) throw();
# 241 "/usr/include/bits/mathcalls.h" 3
extern "C" long double y0l(long double) throw(); extern "C" long double __y0l(long double) throw();
# 242 "/usr/include/bits/mathcalls.h" 3
extern "C" long double y1l(long double) throw(); extern "C" long double __y1l(long double) throw();
# 243 "/usr/include/bits/mathcalls.h" 3
extern "C" long double ynl(int, long double) throw(); extern "C" long double __ynl(int, long double) throw();
# 250 "/usr/include/bits/mathcalls.h" 3
extern "C" long double erfl(long double) throw(); extern "C" long double __erfl(long double) throw();
# 251 "/usr/include/bits/mathcalls.h" 3
extern "C" long double erfcl(long double) throw(); extern "C" long double __erfcl(long double) throw();
# 252 "/usr/include/bits/mathcalls.h" 3
extern "C" long double lgammal(long double) throw(); extern "C" long double __lgammal(long double) throw();
# 259 "/usr/include/bits/mathcalls.h" 3
extern "C" long double tgammal(long double) throw(); extern "C" long double __tgammal(long double) throw();
# 265 "/usr/include/bits/mathcalls.h" 3
extern "C" long double gammal(long double) throw(); extern "C" long double __gammal(long double) throw();
# 272 "/usr/include/bits/mathcalls.h" 3
extern "C" long double lgammal_r(long double, int * ) throw(); extern "C" long double __lgammal_r(long double, int * ) throw();
# 280 "/usr/include/bits/mathcalls.h" 3
extern "C" long double rintl(long double ) throw(); extern "C" long double __rintl(long double ) throw();
# 283 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nextafterl(long double , long double ) throw() __attribute((const)); extern "C" long double __nextafterl(long double , long double ) throw() __attribute((const));
# 285 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nexttowardl(long double , long double ) throw() __attribute((const)); extern "C" long double __nexttowardl(long double , long double ) throw() __attribute((const));
# 289 "/usr/include/bits/mathcalls.h" 3
extern "C" long double remainderl(long double , long double ) throw(); extern "C" long double __remainderl(long double , long double ) throw();
# 293 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalbnl(long double , int ) throw(); extern "C" long double __scalbnl(long double , int ) throw();
# 297 "/usr/include/bits/mathcalls.h" 3
extern "C" int ilogbl(long double ) throw(); extern "C" int __ilogbl(long double ) throw();
# 302 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalblnl(long double , long ) throw(); extern "C" long double __scalblnl(long double , long ) throw();
# 306 "/usr/include/bits/mathcalls.h" 3
extern "C" long double nearbyintl(long double ) throw(); extern "C" long double __nearbyintl(long double ) throw();
# 310 "/usr/include/bits/mathcalls.h" 3
extern "C" long double roundl(long double ) throw() __attribute((const)); extern "C" long double __roundl(long double ) throw() __attribute((const));
# 314 "/usr/include/bits/mathcalls.h" 3
extern "C" long double truncl(long double ) throw() __attribute((const)); extern "C" long double __truncl(long double ) throw() __attribute((const));
# 319 "/usr/include/bits/mathcalls.h" 3
extern "C" long double remquol(long double , long double , int * ) throw(); extern "C" long double __remquol(long double , long double , int * ) throw();
# 326 "/usr/include/bits/mathcalls.h" 3
extern "C" long lrintl(long double ) throw(); extern "C" long __lrintl(long double ) throw();
# 327 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llrintl(long double ) throw(); extern "C" long long __llrintl(long double ) throw();
# 331 "/usr/include/bits/mathcalls.h" 3
extern "C" long lroundl(long double ) throw(); extern "C" long __lroundl(long double ) throw();
# 332 "/usr/include/bits/mathcalls.h" 3
extern "C" long long llroundl(long double ) throw(); extern "C" long long __llroundl(long double ) throw();
# 336 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fdiml(long double , long double ) throw(); extern "C" long double __fdiml(long double , long double ) throw();
# 339 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmaxl(long double , long double ) throw(); extern "C" long double __fmaxl(long double , long double ) throw();
# 342 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fminl(long double , long double ) throw(); extern "C" long double __fminl(long double , long double ) throw();
# 346 "/usr/include/bits/mathcalls.h" 3
extern "C" int __fpclassifyl(long double ) throw()
# 347 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 350 "/usr/include/bits/mathcalls.h" 3
extern "C" int __signbitl(long double ) throw()
# 351 "/usr/include/bits/mathcalls.h" 3
 __attribute((const));
# 355 "/usr/include/bits/mathcalls.h" 3
extern "C" long double fmal(long double , long double , long double ) throw(); extern "C" long double __fmal(long double , long double , long double ) throw();
# 364 "/usr/include/bits/mathcalls.h" 3
extern "C" long double scalbl(long double , long double ) throw(); extern "C" long double __scalbl(long double , long double ) throw();
# 161 "/usr/include/math.h" 3
extern "C" { extern int signgam; }
# 203 "/usr/include/math.h" 3
enum {
# 204 "/usr/include/math.h" 3
FP_NAN,
# 206 "/usr/include/math.h" 3
FP_INFINITE,
# 208 "/usr/include/math.h" 3
FP_ZERO,
# 210 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 212 "/usr/include/math.h" 3
FP_NORMAL
# 214 "/usr/include/math.h" 3
};
# 302 "/usr/include/math.h" 3
extern "C" { typedef
# 296 "/usr/include/math.h" 3
enum {
# 297 "/usr/include/math.h" 3
_IEEE_ = (-1),
# 298 "/usr/include/math.h" 3
_SVID_ = 0,
# 299 "/usr/include/math.h" 3
_XOPEN_,
# 300 "/usr/include/math.h" 3
_POSIX_,
# 301 "/usr/include/math.h" 3
_ISOC_
# 302 "/usr/include/math.h" 3
} _LIB_VERSION_TYPE; }
# 307 "/usr/include/math.h" 3
extern "C" { extern _LIB_VERSION_TYPE _LIB_VERSION; }
# 318 "/usr/include/math.h" 3
extern "C" { struct __exception {
# 323 "/usr/include/math.h" 3
int type;
# 324 "/usr/include/math.h" 3
char *name;
# 325 "/usr/include/math.h" 3
double arg1;
# 326 "/usr/include/math.h" 3
double arg2;
# 327 "/usr/include/math.h" 3
double retval;
# 328 "/usr/include/math.h" 3
}; }
# 331 "/usr/include/math.h" 3
extern "C" int matherr(__exception * ) throw();
# 67 "/usr/include/bits/waitstatus.h" 3
extern "C" { union wait {
# 69 "/usr/include/bits/waitstatus.h" 3
int w_status;
# 71 "/usr/include/bits/waitstatus.h" 3
struct {
# 73 "/usr/include/bits/waitstatus.h" 3
unsigned __w_termsig:7;
# 74 "/usr/include/bits/waitstatus.h" 3
unsigned __w_coredump:1;
# 75 "/usr/include/bits/waitstatus.h" 3
unsigned __w_retcode:8;
# 76 "/usr/include/bits/waitstatus.h" 3
unsigned:16;
# 84 "/usr/include/bits/waitstatus.h" 3
} __wait_terminated;
# 86 "/usr/include/bits/waitstatus.h" 3
struct {
# 88 "/usr/include/bits/waitstatus.h" 3
unsigned __w_stopval:8;
# 89 "/usr/include/bits/waitstatus.h" 3
unsigned __w_stopsig:8;
# 90 "/usr/include/bits/waitstatus.h" 3
unsigned:16;
# 97 "/usr/include/bits/waitstatus.h" 3
} __wait_stopped;
# 98 "/usr/include/bits/waitstatus.h" 3
}; }
# 102 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 99 "/usr/include/stdlib.h" 3
struct {
# 100 "/usr/include/stdlib.h" 3
int quot;
# 101 "/usr/include/stdlib.h" 3
int rem;
# 102 "/usr/include/stdlib.h" 3
} div_t; }
# 110 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 107 "/usr/include/stdlib.h" 3
struct {
# 108 "/usr/include/stdlib.h" 3
long quot;
# 109 "/usr/include/stdlib.h" 3
long rem;
# 110 "/usr/include/stdlib.h" 3
} ldiv_t; }
# 122 "/usr/include/stdlib.h" 3
extern "C" { typedef
# 119 "/usr/include/stdlib.h" 3
struct {
# 120 "/usr/include/stdlib.h" 3
long long quot;
# 121 "/usr/include/stdlib.h" 3
long long rem;
# 122 "/usr/include/stdlib.h" 3
} lldiv_t; }
# 140 "/usr/include/stdlib.h" 3
extern "C" size_t __ctype_get_mb_cur_max() throw();
# 145 "/usr/include/stdlib.h" 3
extern "C" double atof(const char * ) throw()
# 146 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 148 "/usr/include/stdlib.h" 3
extern "C" int atoi(const char * ) throw()
# 149 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 151 "/usr/include/stdlib.h" 3
extern "C" long atol(const char * ) throw()
# 152 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 158 "/usr/include/stdlib.h" 3
extern "C" long long atoll(const char * ) throw()
# 159 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 165 "/usr/include/stdlib.h" 3
extern "C" double strtod(const char *__restrict__ , char **__restrict__ ) throw()
# 167 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 173 "/usr/include/stdlib.h" 3
extern "C" float strtof(const char *__restrict__ , char **__restrict__ ) throw()
# 174 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 176 "/usr/include/stdlib.h" 3
extern "C" long double strtold(const char *__restrict__ , char **__restrict__ ) throw()
# 178 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 184 "/usr/include/stdlib.h" 3
extern "C" long strtol(const char *__restrict__ , char **__restrict__ , int ) throw()
# 186 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 188 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul(const char *__restrict__ , char **__restrict__ , int ) throw()
# 190 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 196 "/usr/include/stdlib.h" 3
extern "C" long long strtoq(const char *__restrict__ , char **__restrict__ , int ) throw()
# 198 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 201 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtouq(const char *__restrict__ , char **__restrict__ , int ) throw()
# 203 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 210 "/usr/include/stdlib.h" 3
extern "C" long long strtoll(const char *__restrict__ , char **__restrict__ , int ) throw()
# 212 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 215 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtoull(const char *__restrict__ , char **__restrict__ , int ) throw()
# 217 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 240 "/usr/include/stdlib.h" 3
extern "C" long strtol_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 242 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 244 "/usr/include/stdlib.h" 3
extern "C" unsigned long strtoul_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 247 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 250 "/usr/include/stdlib.h" 3
extern "C" long long strtoll_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 253 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 256 "/usr/include/stdlib.h" 3
extern "C" unsigned long long strtoull_l(const char *__restrict__ , char **__restrict__ , int , __locale_t ) throw()
# 259 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 261 "/usr/include/stdlib.h" 3
extern "C" double strtod_l(const char *__restrict__ , char **__restrict__ , __locale_t ) throw()
# 263 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 265 "/usr/include/stdlib.h" 3
extern "C" float strtof_l(const char *__restrict__ , char **__restrict__ , __locale_t ) throw()
# 267 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 269 "/usr/include/stdlib.h" 3
extern "C" long double strtold_l(const char *__restrict__ , char **__restrict__ , __locale_t ) throw()
# 272 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 311 "/usr/include/stdlib.h" 3
extern "C" char *l64a(long ) throw();
# 314 "/usr/include/stdlib.h" 3
extern "C" long a64l(const char * ) throw()
# 315 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 35 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_char u_char; }
# 36 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_short u_short; }
# 37 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_int u_int; }
# 38 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_long u_long; }
# 39 "/usr/include/sys/types.h" 3
extern "C" { typedef __quad_t quad_t; }
# 40 "/usr/include/sys/types.h" 3
extern "C" { typedef __u_quad_t u_quad_t; }
# 41 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsid_t fsid_t; }
# 46 "/usr/include/sys/types.h" 3
extern "C" { typedef __loff_t loff_t; }
# 50 "/usr/include/sys/types.h" 3
extern "C" { typedef __ino_t ino_t; }
# 57 "/usr/include/sys/types.h" 3
extern "C" { typedef __ino64_t ino64_t; }
# 62 "/usr/include/sys/types.h" 3
extern "C" { typedef __dev_t dev_t; }
# 67 "/usr/include/sys/types.h" 3
extern "C" { typedef __gid_t gid_t; }
# 72 "/usr/include/sys/types.h" 3
extern "C" { typedef __mode_t mode_t; }
# 77 "/usr/include/sys/types.h" 3
extern "C" { typedef __nlink_t nlink_t; }
# 82 "/usr/include/sys/types.h" 3
extern "C" { typedef __uid_t uid_t; }
# 88 "/usr/include/sys/types.h" 3
extern "C" { typedef __off_t off_t; }
# 95 "/usr/include/sys/types.h" 3
extern "C" { typedef __off64_t off64_t; }
# 105 "/usr/include/sys/types.h" 3
extern "C" { typedef __id_t id_t; }
# 110 "/usr/include/sys/types.h" 3
extern "C" { typedef __ssize_t ssize_t; }
# 116 "/usr/include/sys/types.h" 3
extern "C" { typedef __daddr_t daddr_t; }
# 117 "/usr/include/sys/types.h" 3
extern "C" { typedef __caddr_t caddr_t; }
# 123 "/usr/include/sys/types.h" 3
extern "C" { typedef __key_t key_t; }
# 137 "/usr/include/sys/types.h" 3
extern "C" { typedef __useconds_t useconds_t; }
# 141 "/usr/include/sys/types.h" 3
extern "C" { typedef __suseconds_t suseconds_t; }
# 151 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned long ulong; }
# 152 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned short ushort; }
# 153 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned uint; }
# 195 "/usr/include/sys/types.h" 3
extern "C" { typedef signed char int8_t __attribute((__mode__(__QI__))); }
# 196 "/usr/include/sys/types.h" 3
extern "C" { typedef short int16_t __attribute((__mode__(__HI__))); }
# 197 "/usr/include/sys/types.h" 3
extern "C" { typedef int int32_t __attribute((__mode__(__SI__))); }
# 198 "/usr/include/sys/types.h" 3
extern "C" { typedef long int64_t __attribute((__mode__(__DI__))); }
# 201 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned char u_int8_t __attribute((__mode__(__QI__))); }
# 202 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned short u_int16_t __attribute((__mode__(__HI__))); }
# 203 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned u_int32_t __attribute((__mode__(__SI__))); }
# 204 "/usr/include/sys/types.h" 3
extern "C" { typedef unsigned long u_int64_t __attribute((__mode__(__DI__))); }
# 206 "/usr/include/sys/types.h" 3
extern "C" { typedef long register_t __attribute((__mode__(__word__))); }
# 24 "/usr/include/bits/sigset.h" 3
extern "C" { typedef int __sig_atomic_t; }
# 32 "/usr/include/bits/sigset.h" 3
extern "C" { typedef
# 30 "/usr/include/bits/sigset.h" 3
struct {
# 31 "/usr/include/bits/sigset.h" 3
unsigned long __val[(1024) / ((8) * sizeof(unsigned long))];
# 32 "/usr/include/bits/sigset.h" 3
} __sigset_t; }
# 38 "/usr/include/sys/select.h" 3
extern "C" { typedef __sigset_t sigset_t; }
# 69 "/usr/include/bits/time.h" 3
extern "C" { struct timeval {
# 71 "/usr/include/bits/time.h" 3
__time_t tv_sec;
# 72 "/usr/include/bits/time.h" 3
__suseconds_t tv_usec;
# 73 "/usr/include/bits/time.h" 3
}; }
# 55 "/usr/include/sys/select.h" 3
extern "C" { typedef long __fd_mask; }
# 78 "/usr/include/sys/select.h" 3
extern "C" { typedef
# 68 "/usr/include/sys/select.h" 3
struct {
# 72 "/usr/include/sys/select.h" 3
__fd_mask fds_bits[1024 / (8 * ((int)sizeof(__fd_mask)))];
# 78 "/usr/include/sys/select.h" 3
} fd_set; }
# 85 "/usr/include/sys/select.h" 3
extern "C" { typedef __fd_mask fd_mask; }
# 109 "/usr/include/sys/select.h" 3
extern "C" int select(int , fd_set *__restrict__ , fd_set *__restrict__ , fd_set *__restrict__ , timeval *__restrict__ );
# 121 "/usr/include/sys/select.h" 3
extern "C" int pselect(int , fd_set *__restrict__ , fd_set *__restrict__ , fd_set *__restrict__ , const timespec *__restrict__ , const __sigset_t *__restrict__ );
# 31 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned gnu_dev_major(unsigned long long ) throw();
# 34 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned gnu_dev_minor(unsigned long long ) throw();
# 37 "/usr/include/sys/sysmacros.h" 3
extern "C" unsigned long long gnu_dev_makedev(unsigned , unsigned ) throw();
# 228 "/usr/include/sys/types.h" 3
extern "C" { typedef __blksize_t blksize_t; }
# 235 "/usr/include/sys/types.h" 3
extern "C" { typedef __blkcnt_t blkcnt_t; }
# 239 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsblkcnt_t fsblkcnt_t; }
# 243 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsfilcnt_t fsfilcnt_t; }
# 262 "/usr/include/sys/types.h" 3
extern "C" { typedef __blkcnt64_t blkcnt64_t; }
# 263 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsblkcnt64_t fsblkcnt64_t; }
# 264 "/usr/include/sys/types.h" 3
extern "C" { typedef __fsfilcnt64_t fsfilcnt64_t; }
# 50 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned long pthread_t; }
# 57 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 54 "/usr/include/bits/pthreadtypes.h" 3
union {
# 55 "/usr/include/bits/pthreadtypes.h" 3
char __size[56];
# 56 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 57 "/usr/include/bits/pthreadtypes.h" 3
} pthread_attr_t; }
# 65 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 61 "/usr/include/bits/pthreadtypes.h" 3
struct __pthread_internal_list {
# 63 "/usr/include/bits/pthreadtypes.h" 3
__pthread_internal_list *__prev;
# 64 "/usr/include/bits/pthreadtypes.h" 3
__pthread_internal_list *__next;
# 65 "/usr/include/bits/pthreadtypes.h" 3
} __pthread_list_t; }
# 104 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 77 "/usr/include/bits/pthreadtypes.h" 3
union {
# 78 "/usr/include/bits/pthreadtypes.h" 3
struct __pthread_mutex_s {
# 80 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 81 "/usr/include/bits/pthreadtypes.h" 3
unsigned __count;
# 82 "/usr/include/bits/pthreadtypes.h" 3
int __owner;
# 84 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nusers;
# 88 "/usr/include/bits/pthreadtypes.h" 3
int __kind;
# 90 "/usr/include/bits/pthreadtypes.h" 3
int __spins;
# 91 "/usr/include/bits/pthreadtypes.h" 3
__pthread_list_t __list;
# 101 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 102 "/usr/include/bits/pthreadtypes.h" 3
char __size[40];
# 103 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 104 "/usr/include/bits/pthreadtypes.h" 3
} pthread_mutex_t; }
# 110 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 107 "/usr/include/bits/pthreadtypes.h" 3
union {
# 108 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 109 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 110 "/usr/include/bits/pthreadtypes.h" 3
} pthread_mutexattr_t; }
# 130 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 116 "/usr/include/bits/pthreadtypes.h" 3
union {
# 118 "/usr/include/bits/pthreadtypes.h" 3
struct {
# 119 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 120 "/usr/include/bits/pthreadtypes.h" 3
unsigned __futex;
# 121 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __total_seq;
# 122 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __wakeup_seq;
# 123 "/usr/include/bits/pthreadtypes.h" 3
__extension__ unsigned long long __woken_seq;
# 124 "/usr/include/bits/pthreadtypes.h" 3
void *__mutex;
# 125 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nwaiters;
# 126 "/usr/include/bits/pthreadtypes.h" 3
unsigned __broadcast_seq;
# 127 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 128 "/usr/include/bits/pthreadtypes.h" 3
char __size[48];
# 129 "/usr/include/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 130 "/usr/include/bits/pthreadtypes.h" 3
} pthread_cond_t; }
# 136 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 133 "/usr/include/bits/pthreadtypes.h" 3
union {
# 134 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 135 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 136 "/usr/include/bits/pthreadtypes.h" 3
} pthread_condattr_t; }
# 140 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef unsigned pthread_key_t; }
# 144 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef int pthread_once_t; }
# 189 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 151 "/usr/include/bits/pthreadtypes.h" 3
union {
# 154 "/usr/include/bits/pthreadtypes.h" 3
struct {
# 155 "/usr/include/bits/pthreadtypes.h" 3
int __lock;
# 156 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_readers;
# 157 "/usr/include/bits/pthreadtypes.h" 3
unsigned __readers_wakeup;
# 158 "/usr/include/bits/pthreadtypes.h" 3
unsigned __writer_wakeup;
# 159 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_readers_queued;
# 160 "/usr/include/bits/pthreadtypes.h" 3
unsigned __nr_writers_queued;
# 161 "/usr/include/bits/pthreadtypes.h" 3
int __writer;
# 162 "/usr/include/bits/pthreadtypes.h" 3
int __shared;
# 163 "/usr/include/bits/pthreadtypes.h" 3
unsigned long __pad1;
# 164 "/usr/include/bits/pthreadtypes.h" 3
unsigned long __pad2;
# 167 "/usr/include/bits/pthreadtypes.h" 3
unsigned __flags;
# 168 "/usr/include/bits/pthreadtypes.h" 3
} __data;
# 187 "/usr/include/bits/pthreadtypes.h" 3
char __size[56];
# 188 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 189 "/usr/include/bits/pthreadtypes.h" 3
} pthread_rwlock_t; }
# 195 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 192 "/usr/include/bits/pthreadtypes.h" 3
union {
# 193 "/usr/include/bits/pthreadtypes.h" 3
char __size[8];
# 194 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 195 "/usr/include/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t; }
# 201 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef volatile int pthread_spinlock_t; }
# 210 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 207 "/usr/include/bits/pthreadtypes.h" 3
union {
# 208 "/usr/include/bits/pthreadtypes.h" 3
char __size[32];
# 209 "/usr/include/bits/pthreadtypes.h" 3
long __align;
# 210 "/usr/include/bits/pthreadtypes.h" 3
} pthread_barrier_t; }
# 216 "/usr/include/bits/pthreadtypes.h" 3
extern "C" { typedef
# 213 "/usr/include/bits/pthreadtypes.h" 3
union {
# 214 "/usr/include/bits/pthreadtypes.h" 3
char __size[4];
# 215 "/usr/include/bits/pthreadtypes.h" 3
int __align;
# 216 "/usr/include/bits/pthreadtypes.h" 3
} pthread_barrierattr_t; }
# 327 "/usr/include/stdlib.h" 3
extern "C" long random() throw();
# 330 "/usr/include/stdlib.h" 3
extern "C" void srandom(unsigned ) throw();
# 336 "/usr/include/stdlib.h" 3
extern "C" char *initstate(unsigned , char * , size_t ) throw()
# 337 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 341 "/usr/include/stdlib.h" 3
extern "C" char *setstate(char * ) throw() __attribute((__nonnull__(1)));
# 349 "/usr/include/stdlib.h" 3
extern "C" { struct random_data {
# 351 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 352 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 353 "/usr/include/stdlib.h" 3
int32_t *state;
# 354 "/usr/include/stdlib.h" 3
int rand_type;
# 355 "/usr/include/stdlib.h" 3
int rand_deg;
# 356 "/usr/include/stdlib.h" 3
int rand_sep;
# 357 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 358 "/usr/include/stdlib.h" 3
}; }
# 360 "/usr/include/stdlib.h" 3
extern "C" int random_r(random_data *__restrict__ , int32_t *__restrict__ ) throw()
# 361 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 363 "/usr/include/stdlib.h" 3
extern "C" int srandom_r(unsigned , random_data * ) throw()
# 364 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 366 "/usr/include/stdlib.h" 3
extern "C" int initstate_r(unsigned , char *__restrict__ , size_t , random_data *__restrict__ ) throw()
# 369 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2, 4)));
# 371 "/usr/include/stdlib.h" 3
extern "C" int setstate_r(char *__restrict__ , random_data *__restrict__ ) throw()
# 373 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 380 "/usr/include/stdlib.h" 3
extern "C" int rand() throw();
# 382 "/usr/include/stdlib.h" 3
extern "C" void srand(unsigned ) throw();
# 387 "/usr/include/stdlib.h" 3
extern "C" int rand_r(unsigned * ) throw();
# 395 "/usr/include/stdlib.h" 3
extern "C" double drand48() throw();
# 396 "/usr/include/stdlib.h" 3
extern "C" double erand48(unsigned short [3]) throw() __attribute((__nonnull__(1)));
# 399 "/usr/include/stdlib.h" 3
extern "C" long lrand48() throw();
# 400 "/usr/include/stdlib.h" 3
extern "C" long nrand48(unsigned short [3]) throw()
# 401 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 404 "/usr/include/stdlib.h" 3
extern "C" long mrand48() throw();
# 405 "/usr/include/stdlib.h" 3
extern "C" long jrand48(unsigned short [3]) throw()
# 406 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 409 "/usr/include/stdlib.h" 3
extern "C" void srand48(long ) throw();
# 410 "/usr/include/stdlib.h" 3
extern "C" unsigned short *seed48(unsigned short [3]) throw()
# 411 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 412 "/usr/include/stdlib.h" 3
extern "C" void lcong48(unsigned short [7]) throw() __attribute((__nonnull__(1)));
# 418 "/usr/include/stdlib.h" 3
extern "C" { struct drand48_data {
# 420 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 421 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 422 "/usr/include/stdlib.h" 3
unsigned short __c;
# 423 "/usr/include/stdlib.h" 3
unsigned short __init;
# 424 "/usr/include/stdlib.h" 3
unsigned long long __a;
# 425 "/usr/include/stdlib.h" 3
}; }
# 428 "/usr/include/stdlib.h" 3
extern "C" int drand48_r(drand48_data *__restrict__ , double *__restrict__ ) throw()
# 429 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 430 "/usr/include/stdlib.h" 3
extern "C" int erand48_r(unsigned short [3], drand48_data *__restrict__ , double *__restrict__ ) throw()
# 432 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 435 "/usr/include/stdlib.h" 3
extern "C" int lrand48_r(drand48_data *__restrict__ , long *__restrict__ ) throw()
# 437 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 438 "/usr/include/stdlib.h" 3
extern "C" int nrand48_r(unsigned short [3], drand48_data *__restrict__ , long *__restrict__ ) throw()
# 441 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 444 "/usr/include/stdlib.h" 3
extern "C" int mrand48_r(drand48_data *__restrict__ , long *__restrict__ ) throw()
# 446 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 447 "/usr/include/stdlib.h" 3
extern "C" int jrand48_r(unsigned short [3], drand48_data *__restrict__ , long *__restrict__ ) throw()
# 450 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 453 "/usr/include/stdlib.h" 3
extern "C" int srand48_r(long , drand48_data * ) throw()
# 454 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 456 "/usr/include/stdlib.h" 3
extern "C" int seed48_r(unsigned short [3], drand48_data * ) throw()
# 457 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 459 "/usr/include/stdlib.h" 3
extern "C" int lcong48_r(unsigned short [7], drand48_data * ) throw()
# 461 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 471 "/usr/include/stdlib.h" 3
extern "C" void *malloc(size_t ) throw() __attribute((__malloc__));
# 473 "/usr/include/stdlib.h" 3
extern "C" void *calloc(size_t , size_t ) throw()
# 474 "/usr/include/stdlib.h" 3
 __attribute((__malloc__));
# 485 "/usr/include/stdlib.h" 3
extern "C" void *realloc(void * , size_t ) throw()
# 486 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 488 "/usr/include/stdlib.h" 3
extern "C" void free(void * ) throw();
# 493 "/usr/include/stdlib.h" 3
extern "C" void cfree(void * ) throw();
# 33 "/usr/include/alloca.h" 3
extern "C" void *alloca(size_t ) throw();
# 502 "/usr/include/stdlib.h" 3
extern "C" void *valloc(size_t ) throw() __attribute((__malloc__));
# 507 "/usr/include/stdlib.h" 3
extern "C" int posix_memalign(void ** , size_t , size_t ) throw()
# 508 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 513 "/usr/include/stdlib.h" 3
extern "C" void abort() throw() __attribute((__noreturn__));
# 517 "/usr/include/stdlib.h" 3
extern "C" int atexit(void (* )(void)) throw() __attribute((__nonnull__(1)));
# 524 "/usr/include/stdlib.h" 3
int at_quick_exit(void (* )(void)) throw() __asm__("at_quick_exit")
# 525 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 535 "/usr/include/stdlib.h" 3
extern "C" int on_exit(void (* )(int , void * ), void * ) throw()
# 536 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 543 "/usr/include/stdlib.h" 3
extern "C" void exit(int ) throw() __attribute((__noreturn__));
# 551 "/usr/include/stdlib.h" 3
extern "C" void quick_exit(int ) throw() __attribute((__noreturn__));
# 559 "/usr/include/stdlib.h" 3
extern "C" void _Exit(int ) throw() __attribute((__noreturn__));
# 566 "/usr/include/stdlib.h" 3
extern "C" char *getenv(const char * ) throw() __attribute((__nonnull__(1)));
# 571 "/usr/include/stdlib.h" 3
extern "C" char *__secure_getenv(const char * ) throw()
# 572 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 578 "/usr/include/stdlib.h" 3
extern "C" int putenv(char * ) throw() __attribute((__nonnull__(1)));
# 584 "/usr/include/stdlib.h" 3
extern "C" int setenv(const char * , const char * , int ) throw()
# 585 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 588 "/usr/include/stdlib.h" 3
extern "C" int unsetenv(const char * ) throw();
# 595 "/usr/include/stdlib.h" 3
extern "C" int clearenv() throw();
# 604 "/usr/include/stdlib.h" 3
extern "C" char *mktemp(char * ) throw() __attribute((__nonnull__(1)));
# 615 "/usr/include/stdlib.h" 3
extern "C" int mkstemp(char * ) __attribute((__nonnull__(1)));
# 625 "/usr/include/stdlib.h" 3
extern "C" int mkstemp64(char * ) __attribute((__nonnull__(1)));
# 637 "/usr/include/stdlib.h" 3
extern "C" int mkstemps(char * , int ) __attribute((__nonnull__(1)));
# 647 "/usr/include/stdlib.h" 3
extern "C" int mkstemps64(char * , int )
# 648 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 658 "/usr/include/stdlib.h" 3
extern "C" char *mkdtemp(char * ) throw() __attribute((__nonnull__(1)));
# 669 "/usr/include/stdlib.h" 3
extern "C" int mkostemp(char * , int ) __attribute((__nonnull__(1)));
# 679 "/usr/include/stdlib.h" 3
extern "C" int mkostemp64(char * , int ) __attribute((__nonnull__(1)));
# 689 "/usr/include/stdlib.h" 3
extern "C" int mkostemps(char * , int , int )
# 690 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 701 "/usr/include/stdlib.h" 3
extern "C" int mkostemps64(char * , int , int )
# 702 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 712 "/usr/include/stdlib.h" 3
extern "C" int system(const char * );
# 719 "/usr/include/stdlib.h" 3
extern "C" char *canonicalize_file_name(const char * ) throw()
# 720 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 729 "/usr/include/stdlib.h" 3
extern "C" char *realpath(const char *__restrict__ , char *__restrict__ ) throw();
# 737 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_fn_t)(const void *, const void *); }
# 740 "/usr/include/stdlib.h" 3
extern "C" { typedef __compar_fn_t comparison_fn_t; }
# 744 "/usr/include/stdlib.h" 3
extern "C" { typedef int (*__compar_d_fn_t)(const void *, const void *, void *); }
# 750 "/usr/include/stdlib.h" 3
extern "C" void *bsearch(const void * , const void * , size_t , size_t , __compar_fn_t )
# 752 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 5)));
# 756 "/usr/include/stdlib.h" 3
extern "C" void qsort(void * , size_t , size_t , __compar_fn_t )
# 757 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 759 "/usr/include/stdlib.h" 3
extern "C" void qsort_r(void * , size_t , size_t , __compar_d_fn_t , void * )
# 761 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 766 "/usr/include/stdlib.h" 3
extern "C" int abs(int ) throw() __attribute((const));
# 767 "/usr/include/stdlib.h" 3
extern "C" long labs(long ) throw() __attribute((const));
# 771 "/usr/include/stdlib.h" 3
extern "C" long long llabs(long long ) throw()
# 772 "/usr/include/stdlib.h" 3
 __attribute((const));
# 780 "/usr/include/stdlib.h" 3
extern "C" div_t div(int , int ) throw()
# 781 "/usr/include/stdlib.h" 3
 __attribute((const));
# 782 "/usr/include/stdlib.h" 3
extern "C" ldiv_t ldiv(long , long ) throw()
# 783 "/usr/include/stdlib.h" 3
 __attribute((const));
# 788 "/usr/include/stdlib.h" 3
extern "C" lldiv_t lldiv(long long , long long ) throw()
# 790 "/usr/include/stdlib.h" 3
 __attribute((const));
# 802 "/usr/include/stdlib.h" 3
extern "C" char *ecvt(double , int , int *__restrict__ , int *__restrict__ ) throw()
# 803 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 808 "/usr/include/stdlib.h" 3
extern "C" char *fcvt(double , int , int *__restrict__ , int *__restrict__ ) throw()
# 809 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 814 "/usr/include/stdlib.h" 3
extern "C" char *gcvt(double , int , char * ) throw()
# 815 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 820 "/usr/include/stdlib.h" 3
extern "C" char *qecvt(long double , int , int *__restrict__ , int *__restrict__ ) throw()
# 822 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 823 "/usr/include/stdlib.h" 3
extern "C" char *qfcvt(long double , int , int *__restrict__ , int *__restrict__ ) throw()
# 825 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 826 "/usr/include/stdlib.h" 3
extern "C" char *qgcvt(long double , int , char * ) throw()
# 827 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 832 "/usr/include/stdlib.h" 3
extern "C" int ecvt_r(double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 834 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 835 "/usr/include/stdlib.h" 3
extern "C" int fcvt_r(double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 837 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 839 "/usr/include/stdlib.h" 3
extern "C" int qecvt_r(long double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 842 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 843 "/usr/include/stdlib.h" 3
extern "C" int qfcvt_r(long double , int , int *__restrict__ , int *__restrict__ , char *__restrict__ , size_t ) throw()
# 846 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 854 "/usr/include/stdlib.h" 3
extern "C" int mblen(const char * , size_t ) throw();
# 857 "/usr/include/stdlib.h" 3
extern "C" int mbtowc(wchar_t *__restrict__ , const char *__restrict__ , size_t ) throw();
# 861 "/usr/include/stdlib.h" 3
extern "C" int wctomb(char * , wchar_t ) throw();
# 865 "/usr/include/stdlib.h" 3
extern "C" size_t mbstowcs(wchar_t *__restrict__ , const char *__restrict__ , size_t ) throw();
# 868 "/usr/include/stdlib.h" 3
extern "C" size_t wcstombs(char *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 879 "/usr/include/stdlib.h" 3
extern "C" int rpmatch(const char * ) throw() __attribute((__nonnull__(1)));
# 890 "/usr/include/stdlib.h" 3
extern "C" int getsubopt(char **__restrict__ , char *const *__restrict__ , char **__restrict__ ) throw()
# 893 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 899 "/usr/include/stdlib.h" 3
extern "C" void setkey(const char * ) throw() __attribute((__nonnull__(1)));
# 907 "/usr/include/stdlib.h" 3
extern "C" int posix_openpt(int );
# 915 "/usr/include/stdlib.h" 3
extern "C" int grantpt(int ) throw();
# 919 "/usr/include/stdlib.h" 3
extern "C" int unlockpt(int ) throw();
# 924 "/usr/include/stdlib.h" 3
extern "C" char *ptsname(int ) throw();
# 931 "/usr/include/stdlib.h" 3
extern "C" int ptsname_r(int , char * , size_t ) throw()
# 932 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 935 "/usr/include/stdlib.h" 3
extern "C" int getpt();
# 942 "/usr/include/stdlib.h" 3
extern "C" int getloadavg(double [], int ) throw()
# 943 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 69 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template < typename _Iterator, typename _Container >
    class __normal_iterator;
# 74 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
}
# 76 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 78 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __true_type { };
# 79 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __false_type { };
# 81 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< bool __T0>
# 82 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __truth_type {
# 83 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 86 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 87 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 91 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Sp, class _Tp>
# 92 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __traitor {
# 94 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = ((bool)_Sp::__value) || ((bool)_Tp::__value)};
# 95 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 96 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 99 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class , class >
# 100 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __are_same {
# 102 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 103 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 104 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 106 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 107 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 109 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 110 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 111 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 114 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 115 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_void {
# 117 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 118 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 119 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 122 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 124 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 125 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 126 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 131 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 132 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_integer {
# 134 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 135 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 136 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 142 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 144 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 145 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 146 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 149 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 151 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 152 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 153 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 156 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 158 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 159 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 160 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 163 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 165 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 166 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 167 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 171 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 173 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 174 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 175 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 195 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 197 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 198 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 199 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 202 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 204 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 205 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 206 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 209 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 211 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 212 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 213 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 216 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 218 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 219 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 220 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 223 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 225 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 226 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 227 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 230 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 232 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 233 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 234 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 237 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 239 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 240 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 241 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 244 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 246 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 247 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 248 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 253 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 254 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_floating {
# 256 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 257 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 258 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 262 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 264 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 265 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 266 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 269 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 271 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 272 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 273 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 276 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 278 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 279 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 280 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 285 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 286 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 288 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 289 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 290 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 292 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 293 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 295 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 296 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 297 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 302 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 303 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_normal_iterator {
# 305 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 306 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 307 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 309 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container>
# 310 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_normal_iterator< __gnu_cxx::__normal_iterator< _Iterator, _Container> > {
# 313 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 314 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 315 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 320 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 321 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 323 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 328 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 329 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_fundamental : public __traitor< __is_void< _Tp> , __is_arithmetic< _Tp> > {
# 331 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 336 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 337 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 339 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 344 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 345 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_char {
# 347 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 348 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 349 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 352 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 354 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 355 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 356 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 360 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 362 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 363 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 364 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 367 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 368 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_byte {
# 370 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 371 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 372 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 375 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 377 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 378 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 379 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 382 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 384 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 385 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 386 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 389 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 391 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 392 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 393 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 398 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
template< class _Tp>
# 399 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 401 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
enum { __value};
# 402 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 403 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
};
# 417 "/usr/include/c++/4.4/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/4.4/ext/type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< bool __T1, class >
# 41 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __enable_if {
# 42 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 44 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 45 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 46 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Tp __type; };
# 50 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 51 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __conditional_type {
# 52 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 54 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Iftrue, class _Iffalse>
# 55 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 56 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 60 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 61 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __add_unsigned {
# 64 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 67 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 68 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 71 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 72 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned char __type; };
# 75 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 76 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned char __type; };
# 79 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 80 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned short __type; };
# 83 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 84 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned __type; };
# 87 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 88 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned long __type; };
# 91 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 92 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 96 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 99 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 103 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 104 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __remove_unsigned {
# 107 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 110 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 111 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 114 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 115 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef signed char __type; };
# 118 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 119 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef signed char __type; };
# 122 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 123 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef short __type; };
# 126 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 127 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef int __type; };
# 130 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 131 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef long __type; };
# 134 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 135 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef long long __type; };
# 139 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 142 "/usr/include/c++/4.4/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 146 "/usr/include/c++/4.4/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type * __ptr )
    { return __ptr == 0; }
# 151 "/usr/include/c++/4.4/ext/type_traits.h" 3
template < typename _Type >
    inline bool
    __is_null_pointer ( _Type )
    { return false; }
# 158 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, bool __T2 = std::__is_integer< _Tp> ::__value>
# 159 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote {
# 160 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef double __type; };
# 162 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp>
# 163 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 164 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef _Tp __type; };
# 166 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up>
# 167 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_2 {
# 170 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 171 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 174 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__(__type1() + __type2()) __type;
# 175 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 177 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp>
# 178 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_3 {
# 181 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 182 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 183 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Vp, std::__is_integer< _Vp> ::__value> ::__type __type3;
# 186 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__((__type1() + __type2()) + __type3()) __type;
# 187 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 189 "/usr/include/c++/4.4/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class _Wp>
# 190 "/usr/include/c++/4.4/ext/type_traits.h" 3
struct __promote_4 {
# 193 "/usr/include/c++/4.4/ext/type_traits.h" 3
private: typedef typename __promote< _Tp, std::__is_integer< _Tp> ::__value> ::__type __type1;
# 194 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Up, std::__is_integer< _Up> ::__value> ::__type __type2;
# 195 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Vp, std::__is_integer< _Vp> ::__value> ::__type __type3;
# 196 "/usr/include/c++/4.4/ext/type_traits.h" 3
typedef typename __promote< _Wp, std::__is_integer< _Wp> ::__value> ::__type __type4;
# 199 "/usr/include/c++/4.4/ext/type_traits.h" 3
public: typedef __typeof__(((__type1() + __type2()) + __type3()) + __type4()) __type;
# 200 "/usr/include/c++/4.4/ext/type_traits.h" 3
};
# 202 "/usr/include/c++/4.4/ext/type_traits.h" 3
}
# 77 "/usr/include/c++/4.4/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 81 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    _Tp __cmath_power ( _Tp, unsigned int );
# 84 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline _Tp
    __pow_helper ( _Tp __x, int __n )
    {
      return __n < 0
        ? _Tp ( 1 ) / __cmath_power ( __x, - __n )
        : __cmath_power ( __x, __n );
    }
# 94 "/usr/include/c++/4.4/cmath" 3
inline double abs(double __x)
# 95 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabs(__x); }
# 98 "/usr/include/c++/4.4/cmath" 3
inline float abs(float __x)
# 99 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsf(__x); }
# 102 "/usr/include/c++/4.4/cmath" 3
inline long double abs(long double __x)
# 103 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsl(__x); }
# 105 "/usr/include/c++/4.4/cmath" 3
using ::acos;
# 108 "/usr/include/c++/4.4/cmath" 3
inline float acos(float __x)
# 109 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_acosf(__x); }
# 112 "/usr/include/c++/4.4/cmath" 3
inline long double acos(long double __x)
# 113 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_acosl(__x); }
# 115 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    acos ( _Tp __x )
    { return __builtin_acos ( __x ); }
# 121 "/usr/include/c++/4.4/cmath" 3
using ::asin;
# 124 "/usr/include/c++/4.4/cmath" 3
inline float asin(float __x)
# 125 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_asinf(__x); }
# 128 "/usr/include/c++/4.4/cmath" 3
inline long double asin(long double __x)
# 129 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_asinl(__x); }
# 131 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    asin ( _Tp __x )
    { return __builtin_asin ( __x ); }
# 137 "/usr/include/c++/4.4/cmath" 3
using ::atan;
# 140 "/usr/include/c++/4.4/cmath" 3
inline float atan(float __x)
# 141 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atanf(__x); }
# 144 "/usr/include/c++/4.4/cmath" 3
inline long double atan(long double __x)
# 145 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atanl(__x); }
# 147 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    atan ( _Tp __x )
    { return __builtin_atan ( __x ); }
# 153 "/usr/include/c++/4.4/cmath" 3
using ::atan2;
# 156 "/usr/include/c++/4.4/cmath" 3
inline float atan2(float __y, float __x)
# 157 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 160 "/usr/include/c++/4.4/cmath" 3
inline long double atan2(long double __y, long double __x)
# 161 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 163 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    atan2 ( _Tp __y, _Up __x )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return atan2 ( __type ( __y ), __type ( __x ) );
    }
# 175 "/usr/include/c++/4.4/cmath" 3
using ::ceil;
# 178 "/usr/include/c++/4.4/cmath" 3
inline float ceil(float __x)
# 179 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ceilf(__x); }
# 182 "/usr/include/c++/4.4/cmath" 3
inline long double ceil(long double __x)
# 183 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ceill(__x); }
# 185 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    ceil ( _Tp __x )
    { return __builtin_ceil ( __x ); }
# 191 "/usr/include/c++/4.4/cmath" 3
using ::cos;
# 194 "/usr/include/c++/4.4/cmath" 3
inline float cos(float __x)
# 195 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_cosf(__x); }
# 198 "/usr/include/c++/4.4/cmath" 3
inline long double cos(long double __x)
# 199 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_cosl(__x); }
# 201 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cos ( _Tp __x )
    { return __builtin_cos ( __x ); }
# 207 "/usr/include/c++/4.4/cmath" 3
using ::cosh;
# 210 "/usr/include/c++/4.4/cmath" 3
inline float cosh(float __x)
# 211 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_coshf(__x); }
# 214 "/usr/include/c++/4.4/cmath" 3
inline long double cosh(long double __x)
# 215 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_coshl(__x); }
# 217 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    cosh ( _Tp __x )
    { return __builtin_cosh ( __x ); }
# 223 "/usr/include/c++/4.4/cmath" 3
using ::exp;
# 226 "/usr/include/c++/4.4/cmath" 3
inline float exp(float __x)
# 227 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_expf(__x); }
# 230 "/usr/include/c++/4.4/cmath" 3
inline long double exp(long double __x)
# 231 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_expl(__x); }
# 233 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    exp ( _Tp __x )
    { return __builtin_exp ( __x ); }
# 239 "/usr/include/c++/4.4/cmath" 3
using ::fabs;
# 242 "/usr/include/c++/4.4/cmath" 3
inline float fabs(float __x)
# 243 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsf(__x); }
# 246 "/usr/include/c++/4.4/cmath" 3
inline long double fabs(long double __x)
# 247 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fabsl(__x); }
# 249 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    fabs ( _Tp __x )
    { return __builtin_fabs ( __x ); }
# 255 "/usr/include/c++/4.4/cmath" 3
using ::floor;
# 258 "/usr/include/c++/4.4/cmath" 3
inline float floor(float __x)
# 259 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_floorf(__x); }
# 262 "/usr/include/c++/4.4/cmath" 3
inline long double floor(long double __x)
# 263 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_floorl(__x); }
# 265 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    floor ( _Tp __x )
    { return __builtin_floor ( __x ); }
# 271 "/usr/include/c++/4.4/cmath" 3
using ::fmod;
# 274 "/usr/include/c++/4.4/cmath" 3
inline float fmod(float __x, float __y)
# 275 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 278 "/usr/include/c++/4.4/cmath" 3
inline long double fmod(long double __x, long double __y)
# 279 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 281 "/usr/include/c++/4.4/cmath" 3
using ::frexp;
# 284 "/usr/include/c++/4.4/cmath" 3
inline float frexp(float __x, int *__exp)
# 285 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 288 "/usr/include/c++/4.4/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 289 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 291 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    frexp ( _Tp __x, int * __exp )
    { return __builtin_frexp ( __x, __exp ); }
# 297 "/usr/include/c++/4.4/cmath" 3
using ::ldexp;
# 300 "/usr/include/c++/4.4/cmath" 3
inline float ldexp(float __x, int __exp)
# 301 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 304 "/usr/include/c++/4.4/cmath" 3
inline long double ldexp(long double __x, int __exp)
# 305 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 307 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
  ldexp ( _Tp __x, int __exp )
  { return __builtin_ldexp ( __x, __exp ); }
# 313 "/usr/include/c++/4.4/cmath" 3
using ::log;
# 316 "/usr/include/c++/4.4/cmath" 3
inline float log(float __x)
# 317 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_logf(__x); }
# 320 "/usr/include/c++/4.4/cmath" 3
inline long double log(long double __x)
# 321 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_logl(__x); }
# 323 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log ( _Tp __x )
    { return __builtin_log ( __x ); }
# 329 "/usr/include/c++/4.4/cmath" 3
using ::log10;
# 332 "/usr/include/c++/4.4/cmath" 3
inline float log10(float __x)
# 333 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_log10f(__x); }
# 336 "/usr/include/c++/4.4/cmath" 3
inline long double log10(long double __x)
# 337 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_log10l(__x); }
# 339 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    log10 ( _Tp __x )
    { return __builtin_log10 ( __x ); }
# 345 "/usr/include/c++/4.4/cmath" 3
using ::modf;
# 348 "/usr/include/c++/4.4/cmath" 3
inline float modf(float __x, float *__iptr)
# 349 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 352 "/usr/include/c++/4.4/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 353 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 355 "/usr/include/c++/4.4/cmath" 3
using ::pow;
# 358 "/usr/include/c++/4.4/cmath" 3
inline float pow(float __x, float __y)
# 359 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powf(__x, __y); }
# 362 "/usr/include/c++/4.4/cmath" 3
inline long double pow(long double __x, long double __y)
# 363 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powl(__x, __y); }
# 369 "/usr/include/c++/4.4/cmath" 3
inline double pow(double __x, int __i)
# 370 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powi(__x, __i); }
# 373 "/usr/include/c++/4.4/cmath" 3
inline float pow(float __x, int __n)
# 374 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powif(__x, __n); }
# 377 "/usr/include/c++/4.4/cmath" 3
inline long double pow(long double __x, int __n)
# 378 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_powil(__x, __n); }
# 381 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp, typename _Up >
    inline
    typename __gnu_cxx :: __promote_2 <
    typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value
        && __is_arithmetic < _Up > :: __value,
        _Tp > :: __type, _Up > :: __type
    pow ( _Tp __x, _Up __y )
    {
      typedef typename __gnu_cxx :: __promote_2 < _Tp, _Up > :: __type __type;
      return pow ( __type ( __x ), __type ( __y ) );
    }
# 393 "/usr/include/c++/4.4/cmath" 3
using ::sin;
# 396 "/usr/include/c++/4.4/cmath" 3
inline float sin(float __x)
# 397 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinf(__x); }
# 400 "/usr/include/c++/4.4/cmath" 3
inline long double sin(long double __x)
# 401 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinl(__x); }
# 403 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sin ( _Tp __x )
    { return __builtin_sin ( __x ); }
# 409 "/usr/include/c++/4.4/cmath" 3
using ::sinh;
# 412 "/usr/include/c++/4.4/cmath" 3
inline float sinh(float __x)
# 413 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinhf(__x); }
# 416 "/usr/include/c++/4.4/cmath" 3
inline long double sinh(long double __x)
# 417 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sinhl(__x); }
# 419 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sinh ( _Tp __x )
    { return __builtin_sinh ( __x ); }
# 425 "/usr/include/c++/4.4/cmath" 3
using ::sqrt;
# 428 "/usr/include/c++/4.4/cmath" 3
inline float sqrt(float __x)
# 429 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sqrtf(__x); }
# 432 "/usr/include/c++/4.4/cmath" 3
inline long double sqrt(long double __x)
# 433 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_sqrtl(__x); }
# 435 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    sqrt ( _Tp __x )
    { return __builtin_sqrt ( __x ); }
# 441 "/usr/include/c++/4.4/cmath" 3
using ::tan;
# 444 "/usr/include/c++/4.4/cmath" 3
inline float tan(float __x)
# 445 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanf(__x); }
# 448 "/usr/include/c++/4.4/cmath" 3
inline long double tan(long double __x)
# 449 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanl(__x); }
# 451 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tan ( _Tp __x )
    { return __builtin_tan ( __x ); }
# 457 "/usr/include/c++/4.4/cmath" 3
using ::tanh;
# 460 "/usr/include/c++/4.4/cmath" 3
inline float tanh(float __x)
# 461 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanhf(__x); }
# 464 "/usr/include/c++/4.4/cmath" 3
inline long double tanh(long double __x)
# 465 "/usr/include/c++/4.4/cmath" 3
{ return __builtin_tanhl(__x); }
# 467 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_integer < _Tp > :: __value,
        double > :: __type
    tanh ( _Tp __x )
    { return __builtin_tanh ( __x ); }
# 473 "/usr/include/c++/4.4/cmath" 3
}
# 492 "/usr/include/c++/4.4/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 494 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    fpclassify ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_fpclassify ( FP_NAN, FP_INFINITE, FP_NORMAL,
      FP_SUBNORMAL, FP_ZERO, __type ( __f ) );
    }
# 504 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isfinite ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isfinite ( __type ( __f ) );
    }
# 513 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isinf ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isinf ( __type ( __f ) );
    }
# 522 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnan ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnan ( __type ( __f ) );
    }
# 531 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isnormal ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isnormal ( __type ( __f ) );
    }
# 540 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    signbit ( _Tp __f )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_signbit ( __type ( __f ) );
    }
# 549 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 558 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isgreaterequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isgreaterequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 567 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isless ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isless ( __type ( __f1 ), __type ( __f2 ) );
    }
# 576 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessequal ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessequal ( __type ( __f1 ), __type ( __f2 ) );
    }
# 585 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    islessgreater ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_islessgreater ( __type ( __f1 ), __type ( __f2 ) );
    }
# 594 "/usr/include/c++/4.4/cmath" 3
template < typename _Tp >
    inline typename __gnu_cxx :: __enable_if < __is_arithmetic < _Tp > :: __value,
        int > :: __type
    isunordered ( _Tp __f1, _Tp __f2 )
    {
      typedef typename __gnu_cxx :: __promote < _Tp > :: __type __type;
      return __builtin_isunordered ( __type ( __f1 ), __type ( __f2 ) );
    }
# 603 "/usr/include/c++/4.4/cmath" 3
}
# 35 "/usr/include/c++/4.4/bits/cmath.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 37 "/usr/include/c++/4.4/bits/cmath.tcc" 3
template < typename _Tp >
    inline _Tp
    __cmath_power ( _Tp __x, unsigned int __n )
    {
      _Tp __y = __n % 2 ? __x : _Tp ( 1 );

      while ( __n >>= 1 )
        {
          __x = __x * __x;
          if ( __n % 2 )
            __y = __y * __x;
        }

      return __y;
    }
# 53 "/usr/include/c++/4.4/bits/cmath.tcc" 3
}
# 49 "/usr/include/c++/4.4/cstddef" 3
namespace std __attribute((__visibility__("default"))) {
# 51 "/usr/include/c++/4.4/cstddef" 3
using ::ptrdiff_t;
# 52 "/usr/include/c++/4.4/cstddef" 3
using ::size_t;
# 54 "/usr/include/c++/4.4/cstddef" 3
}
# 100 "/usr/include/c++/4.4/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 102 "/usr/include/c++/4.4/cstdlib" 3
using ::div_t;
# 103 "/usr/include/c++/4.4/cstdlib" 3
using ::ldiv_t;
# 105 "/usr/include/c++/4.4/cstdlib" 3
using ::abort;
# 106 "/usr/include/c++/4.4/cstdlib" 3
using ::abs;
# 107 "/usr/include/c++/4.4/cstdlib" 3
using ::atexit;
# 108 "/usr/include/c++/4.4/cstdlib" 3
using ::atof;
# 109 "/usr/include/c++/4.4/cstdlib" 3
using ::atoi;
# 110 "/usr/include/c++/4.4/cstdlib" 3
using ::atol;
# 111 "/usr/include/c++/4.4/cstdlib" 3
using ::bsearch;
# 112 "/usr/include/c++/4.4/cstdlib" 3
using ::calloc;
# 113 "/usr/include/c++/4.4/cstdlib" 3
using ::div;
# 114 "/usr/include/c++/4.4/cstdlib" 3
using ::exit;
# 115 "/usr/include/c++/4.4/cstdlib" 3
using ::free;
# 116 "/usr/include/c++/4.4/cstdlib" 3
using ::getenv;
# 117 "/usr/include/c++/4.4/cstdlib" 3
using ::labs;
# 118 "/usr/include/c++/4.4/cstdlib" 3
using ::ldiv;
# 119 "/usr/include/c++/4.4/cstdlib" 3
using ::malloc;
# 121 "/usr/include/c++/4.4/cstdlib" 3
using ::mblen;
# 122 "/usr/include/c++/4.4/cstdlib" 3
using ::mbstowcs;
# 123 "/usr/include/c++/4.4/cstdlib" 3
using ::mbtowc;
# 125 "/usr/include/c++/4.4/cstdlib" 3
using ::qsort;
# 126 "/usr/include/c++/4.4/cstdlib" 3
using ::rand;
# 127 "/usr/include/c++/4.4/cstdlib" 3
using ::realloc;
# 128 "/usr/include/c++/4.4/cstdlib" 3
using ::srand;
# 129 "/usr/include/c++/4.4/cstdlib" 3
using ::strtod;
# 130 "/usr/include/c++/4.4/cstdlib" 3
using ::strtol;
# 131 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoul;
# 132 "/usr/include/c++/4.4/cstdlib" 3
using ::system;
# 134 "/usr/include/c++/4.4/cstdlib" 3
using ::wcstombs;
# 135 "/usr/include/c++/4.4/cstdlib" 3
using ::wctomb;
# 139 "/usr/include/c++/4.4/cstdlib" 3
inline long abs(long __i) { return labs(__i); }
# 142 "/usr/include/c++/4.4/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 144 "/usr/include/c++/4.4/cstdlib" 3
}
# 157 "/usr/include/c++/4.4/cstdlib" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 160 "/usr/include/c++/4.4/cstdlib" 3
using ::lldiv_t;
# 166 "/usr/include/c++/4.4/cstdlib" 3
using ::_Exit;
# 170 "/usr/include/c++/4.4/cstdlib" 3
inline long long abs(long long __x) { return (__x >= (0)) ? __x : (-__x); }
# 173 "/usr/include/c++/4.4/cstdlib" 3
using ::llabs;
# 176 "/usr/include/c++/4.4/cstdlib" 3
inline lldiv_t div(long long __n, long long __d)
# 177 "/usr/include/c++/4.4/cstdlib" 3
{ lldiv_t __q; (__q.quot) = (__n / __d); (__q.rem) = (__n % __d); return __q; }
# 179 "/usr/include/c++/4.4/cstdlib" 3
using ::lldiv;
# 190 "/usr/include/c++/4.4/cstdlib" 3
using ::atoll;
# 191 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoll;
# 192 "/usr/include/c++/4.4/cstdlib" 3
using ::strtoull;
# 194 "/usr/include/c++/4.4/cstdlib" 3
using ::strtof;
# 195 "/usr/include/c++/4.4/cstdlib" 3
using ::strtold;
# 197 "/usr/include/c++/4.4/cstdlib" 3
}
# 199 "/usr/include/c++/4.4/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 202 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::lldiv_t;
# 204 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::_Exit;
# 205 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::abs;
# 207 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::llabs;
# 208 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::div;
# 209 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::lldiv;
# 211 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::atoll;
# 212 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtof;
# 213 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtoll;
# 214 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtoull;
# 215 "/usr/include/c++/4.4/cstdlib" 3
using __gnu_cxx::strtold;
# 217 "/usr/include/c++/4.4/cstdlib" 3
}
# 2335 "/usr/local/cuda/bin/../include/math_functions.h"
namespace __gnu_cxx {
# 2337 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline long long abs(long long);
# 2338 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2340 "/usr/local/cuda/bin/../include/math_functions.h"
namespace std {
# 2342 "/usr/local/cuda/bin/../include/math_functions.h"
template< class T> extern inline T __pow_helper(T, int);
# 2343 "/usr/local/cuda/bin/../include/math_functions.h"
template< class T> extern inline T __cmath_power(T, unsigned);
# 2344 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2346 "/usr/local/cuda/bin/../include/math_functions.h"
using std::abs;
# 2347 "/usr/local/cuda/bin/../include/math_functions.h"
using std::fabs;
# 2348 "/usr/local/cuda/bin/../include/math_functions.h"
using std::ceil;
# 2349 "/usr/local/cuda/bin/../include/math_functions.h"
using std::floor;
# 2350 "/usr/local/cuda/bin/../include/math_functions.h"
using std::sqrt;
# 2351 "/usr/local/cuda/bin/../include/math_functions.h"
using std::pow;
# 2352 "/usr/local/cuda/bin/../include/math_functions.h"
using std::log;
# 2353 "/usr/local/cuda/bin/../include/math_functions.h"
using std::log10;
# 2354 "/usr/local/cuda/bin/../include/math_functions.h"
using std::fmod;
# 2355 "/usr/local/cuda/bin/../include/math_functions.h"
using std::modf;
# 2356 "/usr/local/cuda/bin/../include/math_functions.h"
using std::exp;
# 2357 "/usr/local/cuda/bin/../include/math_functions.h"
using std::frexp;
# 2358 "/usr/local/cuda/bin/../include/math_functions.h"
using std::ldexp;
# 2359 "/usr/local/cuda/bin/../include/math_functions.h"
using std::asin;
# 2360 "/usr/local/cuda/bin/../include/math_functions.h"
using std::sin;
# 2361 "/usr/local/cuda/bin/../include/math_functions.h"
using std::sinh;
# 2362 "/usr/local/cuda/bin/../include/math_functions.h"
using std::acos;
# 2363 "/usr/local/cuda/bin/../include/math_functions.h"
using std::cos;
# 2364 "/usr/local/cuda/bin/../include/math_functions.h"
using std::cosh;
# 2365 "/usr/local/cuda/bin/../include/math_functions.h"
using std::atan;
# 2366 "/usr/local/cuda/bin/../include/math_functions.h"
using std::atan2;
# 2367 "/usr/local/cuda/bin/../include/math_functions.h"
using std::tan;
# 2368 "/usr/local/cuda/bin/../include/math_functions.h"
using std::tanh;
# 2531 "/usr/local/cuda/bin/../include/math_functions.h"
namespace std {
# 2534 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline long abs(long);
# 2535 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float abs(float);
# 2536 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline double abs(double);
# 2537 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float fabs(float);
# 2538 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float ceil(float);
# 2539 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float floor(float);
# 2540 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float sqrt(float);
# 2541 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float pow(float, float);
# 2542 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float pow(float, int);
# 2543 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline double pow(double, int);
# 2544 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float log(float);
# 2545 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float log10(float);
# 2546 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float fmod(float, float);
# 2547 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float modf(float, float *);
# 2548 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float exp(float);
# 2549 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float frexp(float, int *);
# 2550 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float ldexp(float, int);
# 2551 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float asin(float);
# 2552 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float sin(float);
# 2553 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float sinh(float);
# 2554 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float acos(float);
# 2555 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float cos(float);
# 2556 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float cosh(float);
# 2557 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float atan(float);
# 2558 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float atan2(float, float);
# 2559 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float tan(float);
# 2560 "/usr/local/cuda/bin/../include/math_functions.h"
extern inline float tanh(float);
# 2563 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2566 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float logb(float a)
# 2567 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2568 "/usr/local/cuda/bin/../include/math_functions.h"
return logbf(a);
# 2569 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2571 "/usr/local/cuda/bin/../include/math_functions.h"
static inline int ilogb(float a)
# 2572 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2573 "/usr/local/cuda/bin/../include/math_functions.h"
return ilogbf(a);
# 2574 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2576 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float scalbn(float a, int b)
# 2577 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2578 "/usr/local/cuda/bin/../include/math_functions.h"
return scalbnf(a, b);
# 2579 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2581 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float scalbln(float a, long b)
# 2582 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2583 "/usr/local/cuda/bin/../include/math_functions.h"
return scalblnf(a, b);
# 2584 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2586 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float exp2(float a)
# 2587 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2588 "/usr/local/cuda/bin/../include/math_functions.h"
return exp2f(a);
# 2589 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2591 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float exp10(float a)
# 2592 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2593 "/usr/local/cuda/bin/../include/math_functions.h"
return exp10f(a);
# 2594 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2596 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float expm1(float a)
# 2597 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2598 "/usr/local/cuda/bin/../include/math_functions.h"
return expm1f(a);
# 2599 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2601 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float log2(float a)
# 2602 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2603 "/usr/local/cuda/bin/../include/math_functions.h"
return log2f(a);
# 2604 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2606 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float log1p(float a)
# 2607 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2608 "/usr/local/cuda/bin/../include/math_functions.h"
return log1pf(a);
# 2609 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2611 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float rsqrt(float a)
# 2612 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2613 "/usr/local/cuda/bin/../include/math_functions.h"
return rsqrtf(a);
# 2614 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2616 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float acosh(float a)
# 2617 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2618 "/usr/local/cuda/bin/../include/math_functions.h"
return acoshf(a);
# 2619 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2621 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float asinh(float a)
# 2622 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2623 "/usr/local/cuda/bin/../include/math_functions.h"
return asinhf(a);
# 2624 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2626 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float atanh(float a)
# 2627 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2628 "/usr/local/cuda/bin/../include/math_functions.h"
return atanhf(a);
# 2629 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2631 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float hypot(float a, float b)
# 2632 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2633 "/usr/local/cuda/bin/../include/math_functions.h"
return hypotf(a, b);
# 2634 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2636 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float cbrt(float a)
# 2637 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2638 "/usr/local/cuda/bin/../include/math_functions.h"
return cbrtf(a);
# 2639 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2641 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float rcbrt(float a)
# 2642 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2643 "/usr/local/cuda/bin/../include/math_functions.h"
return rcbrtf(a);
# 2644 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2646 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float sinpi(float a)
# 2647 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2648 "/usr/local/cuda/bin/../include/math_functions.h"
return sinpif(a);
# 2649 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2651 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float cospi(float a)
# 2652 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2653 "/usr/local/cuda/bin/../include/math_functions.h"
return cospif(a);
# 2654 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2656 "/usr/local/cuda/bin/../include/math_functions.h"
static inline void sincos(float a, float *sptr, float *cptr)
# 2657 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2658 "/usr/local/cuda/bin/../include/math_functions.h"
sincosf(a, sptr, cptr);
# 2659 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2661 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float j0(float a)
# 2662 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2663 "/usr/local/cuda/bin/../include/math_functions.h"
return j0f(a);
# 2664 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2666 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float j1(float a)
# 2667 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2668 "/usr/local/cuda/bin/../include/math_functions.h"
return j1f(a);
# 2669 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2671 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float jn(int n, float a)
# 2672 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2673 "/usr/local/cuda/bin/../include/math_functions.h"
return jnf(n, a);
# 2674 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2676 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float y0(float a)
# 2677 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2678 "/usr/local/cuda/bin/../include/math_functions.h"
return y0f(a);
# 2679 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2681 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float y1(float a)
# 2682 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2683 "/usr/local/cuda/bin/../include/math_functions.h"
return y1f(a);
# 2684 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2686 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float yn(int n, float a)
# 2687 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2688 "/usr/local/cuda/bin/../include/math_functions.h"
return ynf(n, a);
# 2689 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2691 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erf(float a)
# 2692 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2693 "/usr/local/cuda/bin/../include/math_functions.h"
return erff(a);
# 2694 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2696 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erfinv(float a)
# 2697 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2698 "/usr/local/cuda/bin/../include/math_functions.h"
return erfinvf(a);
# 2699 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2701 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erfc(float a)
# 2702 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2703 "/usr/local/cuda/bin/../include/math_functions.h"
return erfcf(a);
# 2704 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2706 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erfcinv(float a)
# 2707 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2708 "/usr/local/cuda/bin/../include/math_functions.h"
return erfcinvf(a);
# 2709 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2711 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float erfcx(float a)
# 2712 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2713 "/usr/local/cuda/bin/../include/math_functions.h"
return erfcxf(a);
# 2714 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2716 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float lgamma(float a)
# 2717 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2718 "/usr/local/cuda/bin/../include/math_functions.h"
return lgammaf(a);
# 2719 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2721 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float tgamma(float a)
# 2722 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2723 "/usr/local/cuda/bin/../include/math_functions.h"
return tgammaf(a);
# 2724 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2726 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float copysign(float a, float b)
# 2727 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2728 "/usr/local/cuda/bin/../include/math_functions.h"
return copysignf(a, b);
# 2729 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2731 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double copysign(double a, float b)
# 2732 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2733 "/usr/local/cuda/bin/../include/math_functions.h"
return copysign(a, (double)b);
# 2734 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2736 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float copysign(float a, double b)
# 2737 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2738 "/usr/local/cuda/bin/../include/math_functions.h"
return copysignf(a, (float)b);
# 2739 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2741 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float nextafter(float a, float b)
# 2742 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2743 "/usr/local/cuda/bin/../include/math_functions.h"
return nextafterf(a, b);
# 2744 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2746 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float remainder(float a, float b)
# 2747 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2748 "/usr/local/cuda/bin/../include/math_functions.h"
return remainderf(a, b);
# 2749 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2751 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float remquo(float a, float b, int *quo)
# 2752 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2753 "/usr/local/cuda/bin/../include/math_functions.h"
return remquof(a, b, quo);
# 2754 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2756 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float round(float a)
# 2757 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2758 "/usr/local/cuda/bin/../include/math_functions.h"
return roundf(a);
# 2759 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2761 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long lround(float a)
# 2762 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2763 "/usr/local/cuda/bin/../include/math_functions.h"
return lroundf(a);
# 2764 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2766 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long llround(float a)
# 2767 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2768 "/usr/local/cuda/bin/../include/math_functions.h"
return llroundf(a);
# 2769 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2771 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float trunc(float a)
# 2772 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2773 "/usr/local/cuda/bin/../include/math_functions.h"
return truncf(a);
# 2774 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2776 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float rint(float a)
# 2777 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2778 "/usr/local/cuda/bin/../include/math_functions.h"
return rintf(a);
# 2779 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2781 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long lrint(float a)
# 2782 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2783 "/usr/local/cuda/bin/../include/math_functions.h"
return lrintf(a);
# 2784 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2786 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long llrint(float a)
# 2787 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2788 "/usr/local/cuda/bin/../include/math_functions.h"
return llrintf(a);
# 2789 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2791 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float nearbyint(float a)
# 2792 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2793 "/usr/local/cuda/bin/../include/math_functions.h"
return nearbyintf(a);
# 2794 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2796 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fdim(float a, float b)
# 2797 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2798 "/usr/local/cuda/bin/../include/math_functions.h"
return fdimf(a, b);
# 2799 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2801 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fma(float a, float b, float c)
# 2802 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2803 "/usr/local/cuda/bin/../include/math_functions.h"
return fmaf(a, b, c);
# 2804 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2806 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fmax(float a, float b)
# 2807 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2808 "/usr/local/cuda/bin/../include/math_functions.h"
return fmaxf(a, b);
# 2809 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2811 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float fmin(float a, float b)
# 2812 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2813 "/usr/local/cuda/bin/../include/math_functions.h"
return fminf(a, b);
# 2814 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2816 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned min(unsigned a, unsigned b)
# 2817 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2818 "/usr/local/cuda/bin/../include/math_functions.h"
return umin(a, b);
# 2819 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2821 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned min(int a, unsigned b)
# 2822 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2823 "/usr/local/cuda/bin/../include/math_functions.h"
return umin((unsigned)a, b);
# 2824 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2826 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned min(unsigned a, int b)
# 2827 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2828 "/usr/local/cuda/bin/../include/math_functions.h"
return umin(a, (unsigned)b);
# 2829 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2831 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long min(long long a, long long b)
# 2832 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2833 "/usr/local/cuda/bin/../include/math_functions.h"
return llmin(a, b);
# 2834 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2836 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long min(unsigned long long a, unsigned long long b)
# 2837 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2838 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmin(a, b);
# 2839 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2841 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long min(long long a, unsigned long long b)
# 2842 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2843 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmin((unsigned long long)a, b);
# 2844 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2846 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long min(unsigned long long a, long long b)
# 2847 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2848 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmin(a, (unsigned long long)b);
# 2849 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2851 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float min(float a, float b)
# 2852 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2853 "/usr/local/cuda/bin/../include/math_functions.h"
return fminf(a, b);
# 2854 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2856 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double min(double a, double b)
# 2857 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2858 "/usr/local/cuda/bin/../include/math_functions.h"
return fmin(a, b);
# 2859 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2861 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double min(float a, double b)
# 2862 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2863 "/usr/local/cuda/bin/../include/math_functions.h"
return fmin((double)a, b);
# 2864 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2866 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double min(double a, float b)
# 2867 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2868 "/usr/local/cuda/bin/../include/math_functions.h"
return fmin(a, (double)b);
# 2869 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2871 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned max(unsigned a, unsigned b)
# 2872 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2873 "/usr/local/cuda/bin/../include/math_functions.h"
return umax(a, b);
# 2874 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2876 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned max(int a, unsigned b)
# 2877 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2878 "/usr/local/cuda/bin/../include/math_functions.h"
return umax((unsigned)a, b);
# 2879 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2881 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned max(unsigned a, int b)
# 2882 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2883 "/usr/local/cuda/bin/../include/math_functions.h"
return umax(a, (unsigned)b);
# 2884 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2886 "/usr/local/cuda/bin/../include/math_functions.h"
static inline long long max(long long a, long long b)
# 2887 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2888 "/usr/local/cuda/bin/../include/math_functions.h"
return llmax(a, b);
# 2889 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2891 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long max(unsigned long long a, unsigned long long b)
# 2892 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2893 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmax(a, b);
# 2894 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2896 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long max(long long a, unsigned long long b)
# 2897 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2898 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmax((unsigned long long)a, b);
# 2899 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2901 "/usr/local/cuda/bin/../include/math_functions.h"
static inline unsigned long long max(unsigned long long a, long long b)
# 2902 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2903 "/usr/local/cuda/bin/../include/math_functions.h"
return ullmax(a, (unsigned long long)b);
# 2904 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2906 "/usr/local/cuda/bin/../include/math_functions.h"
static inline float max(float a, float b)
# 2907 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2908 "/usr/local/cuda/bin/../include/math_functions.h"
return fmaxf(a, b);
# 2909 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2911 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double max(double a, double b)
# 2912 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2913 "/usr/local/cuda/bin/../include/math_functions.h"
return fmax(a, b);
# 2914 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2916 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double max(float a, double b)
# 2917 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2918 "/usr/local/cuda/bin/../include/math_functions.h"
return fmax((double)a, b);
# 2919 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 2921 "/usr/local/cuda/bin/../include/math_functions.h"
static inline double max(double a, float b)
# 2922 "/usr/local/cuda/bin/../include/math_functions.h"
{
# 2923 "/usr/local/cuda/bin/../include/math_functions.h"
return fmax(a, (double)b);
# 2924 "/usr/local/cuda/bin/../include/math_functions.h"
}
# 73 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
template< class T, int dim = 1>
# 74 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
struct surface : public surfaceReference {
# 76 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
surface()
# 77 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
{
# 78 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 79 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
}
# 81 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
surface(cudaChannelFormatDesc desc)
# 82 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
{
# 83 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
(channelDesc) = desc;
# 84 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
}
# 85 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
};
# 87 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
template< int dim>
# 88 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
struct surface< void, dim> : public surfaceReference {
# 90 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
surface()
# 91 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
{
# 92 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< void> ();
# 93 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
}
# 94 "/usr/local/cuda/bin/../include/cuda_surface_types.h"
};
# 73 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType>
# 74 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
struct texture : public textureReference {
# 76 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
texture(int norm = 0, cudaTextureFilterMode
# 77 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
fMode = cudaFilterModePoint, cudaTextureAddressMode
# 78 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
aMode = cudaAddressModeClamp)
# 79 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
{
# 80 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(normalized) = norm;
# 81 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(filterMode) = fMode;
# 82 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 83 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 84 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 85 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(channelDesc) = cudaCreateChannelDesc< T> ();
# 86 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(sRGB) = 0;
# 87 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
}
# 89 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
texture(int norm, cudaTextureFilterMode
# 90 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
fMode, cudaTextureAddressMode
# 91 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
aMode, cudaChannelFormatDesc
# 92 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
desc)
# 93 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
{
# 94 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(normalized) = norm;
# 95 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(filterMode) = fMode;
# 96 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[0]) = aMode;
# 97 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[1]) = aMode;
# 98 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
((addressMode)[2]) = aMode;
# 99 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(channelDesc) = desc;
# 100 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
(sRGB) = 0;
# 101 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
}
# 102 "/usr/local/cuda/bin/../include/cuda_texture_types.h"
};
# 1103 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline int mulhi(int a, int b)
# 1104 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1106 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1108 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b)
# 1109 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1111 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1113 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b)
# 1114 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1116 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1118 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b)
# 1119 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1121 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1123 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline long long mul64hi(long long a, long long b)
# 1124 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1126 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1128 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b)
# 1129 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1131 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1133 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b)
# 1134 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1136 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1138 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b)
# 1139 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1141 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1143 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline int float_as_int(float a)
# 1144 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 1146 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1148 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline float int_as_float(int a)
# 1149 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 1151 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1153 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline float saturate(float a)
# 1154 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;
# 1156 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1158 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline int mul24(int a, int b)
# 1159 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1161 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1163 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b)
# 1164 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)b;
# 1166 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1168 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void trap()
# 1169 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 1171 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1174 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void brkpt(int c = 0)
# 1175 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)c;
# 1177 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1179 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void syncthreads()
# 1180 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;
# 1182 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1184 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void prof_trigger(int e)
# 1185 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)e;
# 1202 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1204 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline void threadfence(bool global = true)
# 1205 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)global;
# 1207 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1209 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode = cudaRoundZero)
# 1210 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1215 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1217 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero)
# 1218 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1223 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1225 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest)
# 1226 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1231 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 1233 "/usr/local/cuda/bin/../include/device_functions.h"
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest)
# 1234 "/usr/local/cuda/bin/../include/device_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 1239 "/usr/local/cuda/bin/../include/device_functions.h"
exit(___);}
# 96 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd(int *address, int val)
# 97 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 99 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 101 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val)
# 102 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 104 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 106 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicSub(int *address, int val)
# 107 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 109 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 111 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val)
# 112 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 114 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 116 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch(int *address, int val)
# 117 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 119 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 121 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val)
# 122 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 124 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 126 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch(float *address, float val)
# 127 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 129 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 131 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin(int *address, int val)
# 132 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 134 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 136 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val)
# 137 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 139 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 141 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax(int *address, int val)
# 142 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 144 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 146 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val)
# 147 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 149 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 151 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val)
# 152 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 154 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 156 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val)
# 157 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 159 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 161 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd(int *address, int val)
# 162 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 164 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 166 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val)
# 167 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 169 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 171 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr(int *address, int val)
# 172 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 174 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 176 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val)
# 177 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 179 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 181 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor(int *address, int val)
# 182 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 184 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 186 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val)
# 187 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 189 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 191 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val)
# 192 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 194 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 196 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val)
# 197 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 199 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
exit(___);}
# 81 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val)
# 82 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 84 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 86 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val)
# 87 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 89 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 91 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val)
# 92 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
# 94 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 96 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline bool any(bool cond)
# 97 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
# 99 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 101 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
__attribute__((unused)) static inline bool all(bool cond)
# 102 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
{int volatile ___ = 1;(void)cond;
# 104 "/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
exit(___);}
# 521 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode)
# 522 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
# 527 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 529 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest)
# 530 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 535 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 537 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest)
# 538 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 543 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 545 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode = cudaRoundZero)
# 546 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 551 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 553 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero)
# 554 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 559 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 561 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode = cudaRoundZero)
# 562 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 567 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 569 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode = cudaRoundZero)
# 570 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 575 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 577 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode = cudaRoundNearest)
# 578 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 583 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 585 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode = cudaRoundNearest)
# 586 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 591 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 593 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest)
# 594 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 596 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 598 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest)
# 599 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 601 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 603 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest)
# 604 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
{int volatile ___ = 1;(void)a;(void)mode;
# 606 "/usr/local/cuda/bin/../include/sm_13_double_functions.h"
exit(___);}
# 77 "/usr/local/cuda/bin/../include/sm_20_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd(float *address, float val)
# 78 "/usr/local/cuda/bin/../include/sm_20_atomic_functions.h"
{int volatile ___ = 1;(void)address;(void)val;
# 80 "/usr/local/cuda/bin/../include/sm_20_atomic_functions.h"
exit(___);}
# 239 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
__attribute__((unused)) static inline unsigned ballot(bool pred)
# 240 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 242 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 244 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
__attribute__((unused)) static inline int syncthreads_count(bool pred)
# 245 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 247 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 249 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_and(bool pred)
# 250 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 252 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 254 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_or(bool pred)
# 255 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
{int volatile ___ = 1;(void)pred;
# 257 "/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
exit(___);}
# 93 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl(int var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 98 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 100 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_up(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 105 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 107 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_down(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 112 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 114 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_xor(int var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 119 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 121 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl(float var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
# 127 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 129 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_up(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 135 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 137 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_down(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
# 143 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 145 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_xor(float var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
# 151 "/usr/local/cuda/bin/../include/sm_30_intrinsics.h"
exit(___);}
# 99 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 100 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dread(T *res, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 101 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
# 108 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 110 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 111 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 112 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 118 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 120 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 121 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dread(T *res, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 122 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
# 124 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 127 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 128 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 130 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 133 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 134 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 136 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 139 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 140 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 142 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 145 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 146 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 148 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 151 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 152 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 154 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 157 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 158 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 162 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 165 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 166 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 168 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 171 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 172 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 176 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 179 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 180 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 182 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 185 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 186 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 188 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 191 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 192 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 194 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 197 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 198 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 200 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 203 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 204 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 206 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 209 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 210 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 214 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 217 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 218 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 220 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 223 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 224 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 228 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 231 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 232 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 234 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 237 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 238 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 240 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 243 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 244 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 246 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 249 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 250 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 252 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 255 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 256 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 258 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 261 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 262 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 266 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 269 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 270 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 272 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 275 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 276 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 280 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 283 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 284 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 286 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 289 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 290 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 292 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 295 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 296 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 298 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 301 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 302 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 304 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 307 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 308 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 310 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 313 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 314 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 318 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 321 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 322 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 324 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 387 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 388 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 390 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 393 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 394 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 396 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 399 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 400 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 404 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 407 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode)
# 408 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 412 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 447 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 448 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dread(T *res, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 449 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 456 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 458 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 459 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 460 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 466 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 468 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 469 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dread(T *res, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 470 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
# 472 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 475 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 476 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 478 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 481 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 482 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 484 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 487 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 488 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 490 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 493 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 494 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 496 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 499 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 500 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 502 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 505 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 506 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 510 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 513 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 514 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 516 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 519 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 520 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 524 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 527 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 528 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 530 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 533 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 534 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 536 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 539 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 540 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 542 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 545 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 546 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 548 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 551 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 552 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 554 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 557 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 558 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 562 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 565 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 566 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 568 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 571 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 572 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 576 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 579 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 580 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 582 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 585 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 586 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 588 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 591 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 592 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 594 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 597 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 598 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 600 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 603 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 604 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 606 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 609 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 610 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 614 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 617 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 618 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 620 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 623 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 624 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 628 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 631 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 632 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 634 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 637 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 638 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 640 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 643 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 644 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 646 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 649 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 650 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 652 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 655 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 656 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 658 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 661 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 662 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 666 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 669 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 670 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 672 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 735 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 736 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 738 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 741 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 742 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 744 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 747 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 748 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 752 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 755 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode)
# 756 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 760 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 795 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 796 "/usr/local/cuda/bin/../include/surface_functions.h"
surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 797 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 804 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 806 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 807 "/usr/local/cuda/bin/../include/surface_functions.h"
surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 808 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 814 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 816 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 817 "/usr/local/cuda/bin/../include/surface_functions.h"
surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 818 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 820 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 823 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 824 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 826 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 829 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 830 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 832 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 835 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 836 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 838 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 841 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 842 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 844 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 847 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 848 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 850 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 853 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 854 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 858 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 861 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 862 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 864 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 867 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 868 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 872 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 875 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 876 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 878 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 881 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 882 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 884 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 887 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 888 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 890 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 893 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 894 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 896 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 899 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 900 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 902 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 905 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 906 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 910 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 913 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 914 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 916 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 919 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 920 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 924 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 927 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 928 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 930 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 933 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 934 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 936 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 939 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 940 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 942 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 945 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 946 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 948 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 951 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 952 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 954 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 957 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 958 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 962 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 965 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 966 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 968 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 971 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 972 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 976 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 979 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 980 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 982 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 985 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 986 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 988 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 991 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 992 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 994 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 997 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 998 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1000 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1003 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1004 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1006 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1009 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1010 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1014 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1017 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1018 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1020 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1083 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1084 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1086 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1089 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1090 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1092 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1095 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1096 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1100 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1103 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode)
# 1104 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1108 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1143 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1144 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1145 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 1152 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1154 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 1155 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1156 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1162 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1164 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1165 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1166 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
# 1168 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1171 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1172 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1174 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1177 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1178 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1180 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1183 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1184 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1186 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1189 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1190 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1192 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1195 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1196 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1198 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1201 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1202 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1206 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1209 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1210 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1212 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1215 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1216 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1220 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1223 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1224 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1226 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1229 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1230 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1232 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1235 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1236 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1238 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1241 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1242 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1244 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1247 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1248 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1250 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1253 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1254 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1258 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1261 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1262 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1264 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1267 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1268 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1272 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1275 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1276 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1278 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1281 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1282 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1284 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1287 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1288 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1290 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1293 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1294 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1296 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1299 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1300 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1302 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1305 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1306 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1310 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1313 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1314 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1316 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1319 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1320 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1324 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1327 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1328 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1330 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1333 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1334 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1336 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1339 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1340 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1342 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1345 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1346 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1348 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1351 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1352 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1354 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1357 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1358 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1362 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1365 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1366 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1368 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1431 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1432 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1434 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1437 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1438 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1440 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1443 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1444 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1448 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1451 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode)
# 1452 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 1456 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1491 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1492 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1493 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 1500 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1502 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 1503 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1504 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1510 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1512 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1513 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1514 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1516 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1519 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1520 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1522 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1525 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1526 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1528 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1531 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1532 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1534 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1537 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1538 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1540 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1543 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1544 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1546 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1549 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1550 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1554 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1557 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1558 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1560 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1563 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1564 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1568 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1571 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1572 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1574 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1577 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1578 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1580 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1583 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1584 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1586 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1589 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1590 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1592 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1595 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1596 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1598 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1601 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1602 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1606 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1609 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1610 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1612 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1615 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1616 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1620 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1623 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1624 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1626 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1629 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1630 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1632 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1635 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1636 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1638 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1641 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1642 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1644 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1647 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1648 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1650 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1653 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1654 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1658 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1661 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1662 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1664 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1667 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1668 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1672 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1675 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1676 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1678 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1681 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1682 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1684 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1687 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1688 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1690 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1693 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1694 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1696 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1699 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1700 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1702 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1705 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1706 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1710 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1713 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1714 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1716 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1779 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1780 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1782 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1785 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1786 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1788 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1791 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1792 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1796 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1799 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode)
# 1800 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1804 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1839 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1840 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1841 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 1848 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1850 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 1851 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1852 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1858 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1860 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 1861 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1862 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1864 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1867 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1868 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1870 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1873 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1874 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1876 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1879 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1880 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1882 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1885 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1886 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1888 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1891 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1892 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1894 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1897 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1898 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1902 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1905 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1906 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1908 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1911 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1912 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1916 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1919 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1920 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1922 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1925 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1926 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1928 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1931 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1932 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1934 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1937 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1938 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1940 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1943 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1944 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1946 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1949 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1950 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1954 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1957 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1958 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1960 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1963 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1964 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1968 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1971 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1972 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1974 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1977 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1978 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1980 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1983 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1984 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1986 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1989 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1990 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1992 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 1995 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 1996 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1998 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2001 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2002 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2006 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2009 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2010 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2012 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2015 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2016 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2020 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2023 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2024 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2026 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2029 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2030 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2032 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2035 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2036 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2038 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2041 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2042 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2044 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2047 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2048 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2050 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2053 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2054 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2058 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2061 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2062 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2064 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2127 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2128 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2130 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2133 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2134 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2136 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2139 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2140 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2144 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2147 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode)
# 2148 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 2152 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2188 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2189 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2190 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 2197 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2199 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline T
# 2200 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2201 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2207 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2209 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2210 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2211 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2213 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2216 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2217 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2219 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2222 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline signed char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2223 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2225 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2228 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned char surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2229 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2231 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2234 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2235 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2237 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2240 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2241 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2243 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2246 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2247 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2251 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2254 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2255 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2257 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2260 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline char4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2261 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2265 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2268 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uchar4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2269 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2271 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2274 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2275 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2277 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2280 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned short surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2281 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2283 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2286 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2287 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2289 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2292 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2293 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2295 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2298 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2299 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2303 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2306 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2307 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2309 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2312 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline short4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2313 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2317 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2320 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ushort4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2321 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2323 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2326 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2327 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2329 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2332 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2333 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2335 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2338 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2339 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2341 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2344 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2345 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2347 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2350 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2351 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2355 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2358 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2359 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2361 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2364 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline int4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2365 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2369 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2372 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline uint4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2373 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2375 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2378 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline long long surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2379 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2381 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2384 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline unsigned long long surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2385 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2387 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2390 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2391 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2393 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2396 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2397 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2399 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2402 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline longlong2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2403 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2407 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2410 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline ulonglong2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2411 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2413 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2476 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2477 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2479 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2482 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float1 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2483 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2485 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2488 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float2 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2489 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2493 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2496 "/usr/local/cuda/bin/../include/surface_functions.h"
template<> __attribute__((unused)) inline float4 surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode)
# 2497 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2501 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2537 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2538 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dwrite(T val, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2539 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
# 2557 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2559 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2560 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1Dwrite(T val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2561 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2563 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2566 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2567 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2569 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2571 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(signed char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2572 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2574 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2576 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned char val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2577 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2579 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2581 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2582 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2584 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2586 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2587 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2589 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2591 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2592 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2594 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2596 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2597 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2599 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2601 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(char4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2602 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2604 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2606 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uchar4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2607 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2609 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2611 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2612 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2614 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2616 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned short val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2617 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2619 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2621 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2622 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2624 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2626 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2627 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2629 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2631 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2632 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2634 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2636 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2637 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2639 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2641 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(short4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2642 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2644 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2646 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ushort4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2647 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2649 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2651 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2652 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2654 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2656 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2657 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2659 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2661 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2662 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2664 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2666 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2667 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2669 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2671 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2672 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2674 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2676 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2677 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2679 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2681 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(int4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2682 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2684 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2686 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(uint4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2687 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2689 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2691 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2692 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2694 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2696 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(unsigned long long val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2697 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2699 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2701 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(longlong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2702 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2704 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2706 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ulonglong1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2707 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2709 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2711 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(longlong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2712 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2714 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2716 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(ulonglong2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2717 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2719 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2765 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2766 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2768 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2770 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float1 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2771 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2773 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2775 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float2 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2776 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2778 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2780 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1Dwrite(float4 val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2781 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 2783 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2819 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2820 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dwrite(T val, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2821 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 2839 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2841 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 2842 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2Dwrite(T val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2843 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2845 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2848 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2849 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2851 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2853 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(signed char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2854 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2856 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2858 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned char val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2859 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2861 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2863 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2864 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2866 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2868 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2869 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2871 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2873 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2874 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2876 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2878 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2879 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2881 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2883 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(char4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2884 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2886 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2888 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uchar4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2889 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2891 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2893 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2894 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2896 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2898 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned short val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2899 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2901 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2903 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2904 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2906 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2908 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2909 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2911 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2913 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2914 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2916 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2918 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2919 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2921 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2923 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(short4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2924 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2926 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2928 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ushort4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2929 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2931 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2933 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2934 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2936 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2938 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2939 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2941 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2943 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2944 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2946 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2948 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2949 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2951 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2953 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2954 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2956 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2958 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2959 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2961 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2963 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(int4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2964 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2966 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2968 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(uint4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2969 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2971 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2973 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2974 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2976 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2978 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(unsigned long long val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2979 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2981 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2983 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(longlong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2984 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2986 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2988 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ulonglong1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2989 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2991 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2993 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(longlong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2994 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 2996 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 2998 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(ulonglong2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2999 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3001 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3047 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3048 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3050 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3052 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float1 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3053 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3055 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3057 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float2 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3058 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3060 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3062 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2Dwrite(float4 val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3063 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 3065 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3101 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3102 "/usr/local/cuda/bin/../include/surface_functions.h"
surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3103 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 3121 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3123 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3124 "/usr/local/cuda/bin/../include/surface_functions.h"
surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3125 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3127 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3130 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3131 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3133 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3135 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(signed char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3136 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3138 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3140 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned char val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3141 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3143 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3145 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3146 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3148 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3150 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uchar1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3151 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3153 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3155 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3156 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3158 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3160 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uchar2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3161 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3163 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3165 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(char4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3166 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3168 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3170 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uchar4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3171 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3173 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3175 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3176 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3178 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3180 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned short val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3181 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3183 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3185 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3186 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3188 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3190 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ushort1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3191 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3193 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3195 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3196 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3198 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3200 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ushort2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3201 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3203 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3205 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(short4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3206 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3208 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3210 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ushort4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3211 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3213 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3215 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3216 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3218 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3220 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3221 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3223 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3225 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3226 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3228 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3230 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uint1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3231 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3233 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3235 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3236 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3238 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3240 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uint2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3241 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3243 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3245 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(int4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3246 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3248 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3250 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(uint4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3251 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3253 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3255 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3256 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3258 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3260 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(unsigned long long val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3261 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3263 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3265 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(longlong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3266 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3268 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3270 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ulonglong1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3271 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3273 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3275 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(longlong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3276 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3278 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3280 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(ulonglong2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3281 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3283 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3329 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3330 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3332 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3334 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float1 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3335 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3337 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3339 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float2 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3340 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3342 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3344 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf3Dwrite(float4 val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3345 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 3347 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3383 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3384 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3385 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 3403 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3405 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3406 "/usr/local/cuda/bin/../include/surface_functions.h"
surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3407 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3409 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3412 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3413 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3415 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3417 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(signed char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3418 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3420 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3422 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned char val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3423 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3425 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3427 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3428 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3430 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3432 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uchar1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3433 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3435 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3437 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3438 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3440 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3442 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uchar2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3443 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3445 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3447 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(char4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3448 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3450 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3452 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uchar4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3453 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3455 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3457 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3458 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3460 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3462 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned short val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3463 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3465 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3467 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3468 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3470 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3472 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ushort1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3473 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3475 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3477 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3478 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3480 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3482 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ushort2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3483 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3485 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3487 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(short4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3488 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3490 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3492 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ushort4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3493 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3495 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3497 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3498 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3500 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3502 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3503 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3505 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3507 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3508 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3510 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3512 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uint1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3513 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3515 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3517 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3518 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3520 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3522 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uint2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3523 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3525 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3527 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(int4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3528 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3530 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3532 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(uint4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3533 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3535 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3537 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3538 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3540 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3542 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(unsigned long long val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3543 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3545 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3547 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(longlong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3548 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3550 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3552 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3553 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3555 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3557 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(longlong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3558 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3560 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3562 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3563 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3565 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3611 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3612 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3614 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3616 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float1 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3617 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3619 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3621 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float2 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3622 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3624 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3626 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf1DLayeredwrite(float4 val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3627 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 3629 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3665 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3666 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3667 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 3685 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3687 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3688 "/usr/local/cuda/bin/../include/surface_functions.h"
surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3689 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3691 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3694 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3695 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3697 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3699 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(signed char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3700 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3702 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3704 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned char val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3705 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3707 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3709 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3710 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3712 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3714 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uchar1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3715 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3717 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3719 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3720 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3722 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3724 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uchar2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3725 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3727 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3729 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(char4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3730 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3732 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3734 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uchar4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3735 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3737 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3739 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3740 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3742 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3744 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned short val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3745 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3747 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3749 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3750 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3752 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3754 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ushort1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3755 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3757 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3759 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3760 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3762 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3764 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ushort2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3765 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3767 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3769 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(short4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3770 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3772 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3774 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ushort4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3775 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3777 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3779 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3780 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3782 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3784 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3785 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3787 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3789 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3790 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3792 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3794 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uint1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3795 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3797 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3799 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3800 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3802 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3804 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uint2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3805 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3807 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3809 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(int4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3810 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3812 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3814 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(uint4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3815 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3817 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3819 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3820 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3822 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3824 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(unsigned long long val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3825 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3827 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3829 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(longlong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3830 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3832 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3834 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3835 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3837 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3839 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(longlong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3840 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3842 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3844 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3845 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3847 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3893 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3894 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3896 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3898 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float1 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3899 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3901 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3903 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float2 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3904 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3906 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3908 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surf2DLayeredwrite(float4 val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3909 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 3911 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3947 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3948 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3949 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 3967 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3969 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 3970 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3971 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3973 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3976 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3977 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3979 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3981 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(signed char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3982 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3984 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3986 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned char val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3987 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3989 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3991 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3992 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3994 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 3996 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uchar1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 3997 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 3999 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4001 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4002 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4004 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4006 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uchar2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4007 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4009 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4011 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(char4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4012 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4014 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4016 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uchar4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4017 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4019 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4021 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4022 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4024 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4026 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned short val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4027 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4029 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4031 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4032 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4034 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4036 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ushort1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4037 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4039 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4041 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4042 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4044 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4046 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ushort2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4047 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4049 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4051 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(short4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4052 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4054 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4056 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ushort4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4057 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4059 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4061 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4062 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4064 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4066 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4067 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4069 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4071 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4072 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4074 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4076 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uint1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4077 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4079 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4081 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4082 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4084 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4086 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uint2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4087 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4089 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4091 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(int4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4092 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4094 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4096 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(uint4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4097 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4099 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4101 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4102 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4104 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4106 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(unsigned long long val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4107 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4109 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4111 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(longlong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4112 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4114 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4116 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ulonglong1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4117 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4119 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4121 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(longlong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4122 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4124 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4126 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(ulonglong2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4127 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4129 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4175 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4176 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4178 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4180 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float1 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4181 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4183 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4185 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float2 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4186 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4188 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4190 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapwrite(float4 val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4191 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 4193 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4229 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 4230 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4231 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 4249 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4251 "/usr/local/cuda/bin/../include/surface_functions.h"
template< class T> __attribute__((unused)) static inline void
# 4252 "/usr/local/cuda/bin/../include/surface_functions.h"
surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4253 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4255 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4258 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4259 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4261 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4263 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(signed char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4264 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4266 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4268 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4269 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4271 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4273 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4274 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4276 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4278 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4279 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4281 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4283 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4284 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4286 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4288 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4289 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4291 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4293 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(char4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4294 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4296 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4298 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4299 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4301 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4303 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4304 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4306 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4308 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4309 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4311 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4313 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4314 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4316 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4318 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4319 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4321 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4323 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4324 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4326 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4328 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4329 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4331 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4333 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(short4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4334 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4336 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4338 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4339 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4341 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4343 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4344 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4346 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4348 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4349 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4351 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4353 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4354 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4356 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4358 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uint1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4359 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4361 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4363 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4364 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4366 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4368 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uint2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4369 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4371 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4373 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(int4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4374 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4376 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4378 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(uint4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4379 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4381 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4383 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4384 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4386 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4388 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(unsigned long long val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4389 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4391 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4393 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4394 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4396 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4398 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4399 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4401 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4403 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4404 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4406 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4408 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4409 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4411 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4457 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4458 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4460 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4462 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float1 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4463 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4465 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4467 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float2 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4468 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4470 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 4472 "/usr/local/cuda/bin/../include/surface_functions.h"
__attribute__((unused)) static inline void surfCubemapLayeredwrite(float4 val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 4473 "/usr/local/cuda/bin/../include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 4475 "/usr/local/cuda/bin/../include/surface_functions.h"
exit(___);}
# 96 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex1Dfetch(texture< char, 1, cudaReadModeElementType> t, int x)
# 97 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 105 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 107 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType> t, int x)
# 108 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 112 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 114 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType> t, int x)
# 115 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 119 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 121 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType> t, int x)
# 122 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 126 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 128 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType> t, int x)
# 129 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 133 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 135 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType> t, int x)
# 136 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 140 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 142 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType> t, int x)
# 143 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 147 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 149 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType> t, int x)
# 150 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 154 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 156 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType> t, int x)
# 157 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 161 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 169 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex1Dfetch(texture< short, 1, cudaReadModeElementType> t, int x)
# 170 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 174 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 176 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType> t, int x)
# 177 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 181 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 183 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType> t, int x)
# 184 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 188 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 190 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType> t, int x)
# 191 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 195 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 197 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType> t, int x)
# 198 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 202 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 204 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType> t, int x)
# 205 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 209 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 211 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType> t, int x)
# 212 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 216 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 218 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType> t, int x)
# 219 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 223 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 231 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex1Dfetch(texture< int, 1, cudaReadModeElementType> t, int x)
# 232 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 236 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 238 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType> t, int x)
# 239 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 243 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 245 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType> t, int x)
# 246 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 250 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 252 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType> t, int x)
# 253 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 257 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 259 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType> t, int x)
# 260 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 264 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 266 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType> t, int x)
# 267 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 271 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 273 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType> t, int x)
# 274 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 278 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 280 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType> t, int x)
# 281 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 285 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 359 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< float, 1, cudaReadModeElementType> t, int x)
# 360 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 364 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 366 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType> t, int x)
# 367 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 371 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 373 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType> t, int x)
# 374 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 378 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 380 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType> t, int x)
# 381 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 385 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 393 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat> t, int x)
# 394 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 403 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 405 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat> t, int x)
# 406 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 411 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 413 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, int x)
# 414 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 419 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 421 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat> t, int x)
# 422 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 427 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 429 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, int x)
# 430 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 435 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 437 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat> t, int x)
# 438 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 443 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 445 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, int x)
# 446 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 451 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 453 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat> t, int x)
# 454 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 459 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 461 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, int x)
# 462 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 467 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 475 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat> t, int x)
# 476 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 481 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 483 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, int x)
# 484 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 489 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 491 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat> t, int x)
# 492 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 497 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 499 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, int x)
# 500 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 505 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 507 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat> t, int x)
# 508 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 513 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 515 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, int x)
# 516 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 521 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 523 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat> t, int x)
# 524 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 529 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 531 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, int x)
# 532 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 537 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 545 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex1D(texture< char, 1, cudaReadModeElementType> t, float x)
# 546 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 554 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 556 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex1D(texture< signed char, 1, cudaReadModeElementType> t, float x)
# 557 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 561 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 563 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType> t, float x)
# 564 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 568 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 570 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex1D(texture< char1, 1, cudaReadModeElementType> t, float x)
# 571 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 575 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 577 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType> t, float x)
# 578 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 582 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 584 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex1D(texture< char2, 1, cudaReadModeElementType> t, float x)
# 585 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 589 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 591 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType> t, float x)
# 592 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 596 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 598 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex1D(texture< char4, 1, cudaReadModeElementType> t, float x)
# 599 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 603 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 605 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType> t, float x)
# 606 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 610 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 618 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex1D(texture< short, 1, cudaReadModeElementType> t, float x)
# 619 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 623 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 625 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType> t, float x)
# 626 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 630 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 632 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex1D(texture< short1, 1, cudaReadModeElementType> t, float x)
# 633 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 637 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 639 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType> t, float x)
# 640 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 644 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 646 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex1D(texture< short2, 1, cudaReadModeElementType> t, float x)
# 647 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 651 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 653 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType> t, float x)
# 654 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 658 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 660 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex1D(texture< short4, 1, cudaReadModeElementType> t, float x)
# 661 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 665 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 667 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType> t, float x)
# 668 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 672 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 680 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex1D(texture< int, 1, cudaReadModeElementType> t, float x)
# 681 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 685 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 687 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType> t, float x)
# 688 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 692 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 694 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex1D(texture< int1, 1, cudaReadModeElementType> t, float x)
# 695 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 699 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 701 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType> t, float x)
# 702 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 706 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 708 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex1D(texture< int2, 1, cudaReadModeElementType> t, float x)
# 709 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 713 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 715 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType> t, float x)
# 716 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 720 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 722 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex1D(texture< int4, 1, cudaReadModeElementType> t, float x)
# 723 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 727 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 729 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType> t, float x)
# 730 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 734 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 814 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< float, 1, cudaReadModeElementType> t, float x)
# 815 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 819 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 821 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< float1, 1, cudaReadModeElementType> t, float x)
# 822 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 826 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 828 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< float2, 1, cudaReadModeElementType> t, float x)
# 829 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 833 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 835 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< float4, 1, cudaReadModeElementType> t, float x)
# 836 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 840 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 848 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat> t, float x)
# 849 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 858 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 860 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat> t, float x)
# 861 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 866 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 868 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat> t, float x)
# 869 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 874 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 876 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat> t, float x)
# 877 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 882 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 884 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat> t, float x)
# 885 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 890 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 892 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat> t, float x)
# 893 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 898 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 900 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat> t, float x)
# 901 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 906 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 908 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat> t, float x)
# 909 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 914 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 916 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat> t, float x)
# 917 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 922 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 930 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat> t, float x)
# 931 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 936 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 938 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat> t, float x)
# 939 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 944 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 946 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat> t, float x)
# 947 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 952 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 954 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat> t, float x)
# 955 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 960 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 962 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat> t, float x)
# 963 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 968 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 970 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat> t, float x)
# 971 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 976 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 978 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat> t, float x)
# 979 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 984 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 986 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat> t, float x)
# 987 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;
# 992 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1000 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex2D(texture< char, 2, cudaReadModeElementType> t, float x, float y)
# 1001 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1009 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1011 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex2D(texture< signed char, 2, cudaReadModeElementType> t, float x, float y)
# 1012 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1016 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1018 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y)
# 1019 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1023 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1025 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex2D(texture< char1, 2, cudaReadModeElementType> t, float x, float y)
# 1026 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1030 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1032 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y)
# 1033 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1037 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1039 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex2D(texture< char2, 2, cudaReadModeElementType> t, float x, float y)
# 1040 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1044 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1046 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y)
# 1047 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1051 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1053 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2D(texture< char4, 2, cudaReadModeElementType> t, float x, float y)
# 1054 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1058 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1060 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y)
# 1061 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1065 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1073 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex2D(texture< short, 2, cudaReadModeElementType> t, float x, float y)
# 1074 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1078 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1080 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y)
# 1081 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1085 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1087 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex2D(texture< short1, 2, cudaReadModeElementType> t, float x, float y)
# 1088 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1092 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1094 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y)
# 1095 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1099 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1101 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex2D(texture< short2, 2, cudaReadModeElementType> t, float x, float y)
# 1102 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1106 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1108 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y)
# 1109 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1113 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1115 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2D(texture< short4, 2, cudaReadModeElementType> t, float x, float y)
# 1116 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1120 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1122 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y)
# 1123 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1127 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1135 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex2D(texture< int, 2, cudaReadModeElementType> t, float x, float y)
# 1136 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1140 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1142 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y)
# 1143 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1147 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1149 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex2D(texture< int1, 2, cudaReadModeElementType> t, float x, float y)
# 1150 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1154 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1156 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType> t, float x, float y)
# 1157 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1161 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1163 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex2D(texture< int2, 2, cudaReadModeElementType> t, float x, float y)
# 1164 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1168 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1170 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType> t, float x, float y)
# 1171 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1175 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1177 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2D(texture< int4, 2, cudaReadModeElementType> t, float x, float y)
# 1178 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1182 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1184 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType> t, float x, float y)
# 1185 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1189 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1263 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< float, 2, cudaReadModeElementType> t, float x, float y)
# 1264 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1268 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1270 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< float1, 2, cudaReadModeElementType> t, float x, float y)
# 1271 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1275 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1277 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< float2, 2, cudaReadModeElementType> t, float x, float y)
# 1278 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1282 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1284 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< float4, 2, cudaReadModeElementType> t, float x, float y)
# 1285 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1289 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1297 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1298 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1307 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1309 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1310 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1315 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1317 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1318 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1323 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1325 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1326 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1331 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1333 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1334 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1339 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1341 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1342 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1347 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1349 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1350 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1355 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1357 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1358 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1363 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1365 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1366 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1371 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1379 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1380 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1385 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1387 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1388 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1393 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1395 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1396 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1401 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1403 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1404 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1409 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1411 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1412 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1417 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1419 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1420 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1425 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1427 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1428 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1433 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1435 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y)
# 1436 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
# 1441 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1449 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex1DLayered(texture< char, 241, cudaReadModeElementType> t, float x, int layer)
# 1450 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1458 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1460 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType> t, float x, int layer)
# 1461 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1465 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1467 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType> t, float x, int layer)
# 1468 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1472 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1474 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType> t, float x, int layer)
# 1475 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1479 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1481 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType> t, float x, int layer)
# 1482 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1486 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1488 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType> t, float x, int layer)
# 1489 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1493 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1495 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType> t, float x, int layer)
# 1496 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1500 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1502 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType> t, float x, int layer)
# 1503 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1507 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1509 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType> t, float x, int layer)
# 1510 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1514 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1522 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex1DLayered(texture< short, 241, cudaReadModeElementType> t, float x, int layer)
# 1523 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1527 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1529 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType> t, float x, int layer)
# 1530 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1534 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1536 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType> t, float x, int layer)
# 1537 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1541 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1543 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType> t, float x, int layer)
# 1544 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1548 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1550 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType> t, float x, int layer)
# 1551 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1555 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1557 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType> t, float x, int layer)
# 1558 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1562 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1564 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType> t, float x, int layer)
# 1565 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1569 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1571 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType> t, float x, int layer)
# 1572 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1576 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1584 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex1DLayered(texture< int, 241, cudaReadModeElementType> t, float x, int layer)
# 1585 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1589 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1591 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType> t, float x, int layer)
# 1592 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1596 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1598 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType> t, float x, int layer)
# 1599 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1603 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1605 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType> t, float x, int layer)
# 1606 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1610 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1612 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType> t, float x, int layer)
# 1613 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1617 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1619 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType> t, float x, int layer)
# 1620 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1624 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1626 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType> t, float x, int layer)
# 1627 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1631 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1633 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType> t, float x, int layer)
# 1634 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1638 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1712 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< float, 241, cudaReadModeElementType> t, float x, int layer)
# 1713 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1717 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1719 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType> t, float x, int layer)
# 1720 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1724 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1726 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType> t, float x, int layer)
# 1727 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1731 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1733 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType> t, float x, int layer)
# 1734 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1738 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1746 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1747 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1756 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1758 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1759 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1764 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1766 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1767 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1772 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1774 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1775 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1780 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1782 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1783 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1788 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1790 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1791 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1796 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1798 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1799 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1804 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1806 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1807 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1812 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1814 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1815 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1820 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1828 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1829 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1834 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1836 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1837 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1842 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1844 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1845 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1850 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1852 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1853 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1858 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1860 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1861 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1866 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1868 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1869 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1874 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1876 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1877 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1882 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1884 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat> t, float x, int layer)
# 1885 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
# 1890 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1898 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex2DLayered(texture< char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1899 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1907 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1909 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1910 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1914 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1916 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1917 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1921 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1923 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1924 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1928 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1930 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1931 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1935 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1937 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1938 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1942 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1944 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1945 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1949 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1951 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1952 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1956 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1958 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1959 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1963 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1971 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex2DLayered(texture< short, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1972 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1976 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1978 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1979 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1983 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1985 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1986 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1990 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1992 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 1993 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 1997 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 1999 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2000 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2004 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2006 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2007 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2011 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2013 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2014 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2018 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2020 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2021 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2025 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2033 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex2DLayered(texture< int, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2034 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2038 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2040 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2041 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2045 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2047 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2048 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2052 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2054 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2055 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2059 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2061 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2062 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2066 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2068 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2069 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2073 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2075 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2076 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2080 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2082 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2083 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2087 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2161 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< float, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2162 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2166 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2168 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2169 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2173 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2175 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2176 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2180 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2182 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType> t, float x, float y, int layer)
# 2183 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2187 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2195 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2196 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2205 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2207 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2208 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2213 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2215 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2216 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2221 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2223 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2224 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2229 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2231 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2232 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2237 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2239 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2240 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2245 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2247 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2248 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2253 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2255 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2256 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2261 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2263 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2264 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2269 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2277 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2278 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2283 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2285 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2286 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2291 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2293 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2294 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2299 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2301 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2302 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2307 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2309 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2310 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2315 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2317 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2318 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2323 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2325 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2326 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2331 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2333 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat> t, float x, float y, int layer)
# 2334 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
# 2339 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2347 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char tex3D(texture< char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2348 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2356 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2358 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char tex3D(texture< signed char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2359 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2363 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2365 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2366 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2370 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2372 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 tex3D(texture< char1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2373 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2377 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2379 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2380 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2384 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2386 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 tex3D(texture< char2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2387 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2391 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2393 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2394 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2398 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2400 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex3D(texture< char4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2401 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2405 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2407 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2408 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2412 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2420 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short tex3D(texture< short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2421 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2425 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2427 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2428 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2432 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2434 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 tex3D(texture< short1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2435 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2439 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2441 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2442 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2446 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2448 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 tex3D(texture< short2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2449 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2453 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2455 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2456 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2460 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2462 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex3D(texture< short4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2463 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2467 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2469 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2470 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2474 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2482 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int tex3D(texture< int, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2483 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2487 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2489 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2490 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2494 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2496 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 tex3D(texture< int1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2497 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2501 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2503 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2504 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2508 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2510 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 tex3D(texture< int2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2511 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2515 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2517 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2518 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2522 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2524 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex3D(texture< int4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2525 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2529 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2531 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2532 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2536 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2610 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< float, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2611 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2615 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2617 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< float1, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2618 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2622 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2624 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< float2, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2625 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2629 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2631 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< float4, 3, cudaReadModeElementType> t, float x, float y, float z)
# 2632 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2636 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2644 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2645 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2654 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2656 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2657 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2662 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2664 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2665 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2670 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2672 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2673 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2678 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2680 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2681 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2686 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2688 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2689 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2694 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2696 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2697 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2702 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2704 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2705 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2710 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2712 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2713 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2718 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2726 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2727 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2732 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2734 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2735 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2740 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2742 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2743 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2748 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2750 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2751 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2756 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2758 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2759 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2764 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2766 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2767 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2772 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2774 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2775 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2780 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2782 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 2783 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2788 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2796 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char texCubemap(texture< char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2797 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2805 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2807 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2808 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2812 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2814 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2815 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2819 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2821 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 texCubemap(texture< char1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2822 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2826 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2828 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2829 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2833 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2835 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 texCubemap(texture< char2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2836 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2840 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2842 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2843 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2847 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2849 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 texCubemap(texture< char4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2850 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2854 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2856 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2857 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2861 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2869 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short texCubemap(texture< short, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2870 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2874 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2876 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2877 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2881 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2883 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 texCubemap(texture< short1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2884 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2888 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2890 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2891 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2895 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2897 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 texCubemap(texture< short2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2898 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2902 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2904 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2905 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2909 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2911 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 texCubemap(texture< short4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2912 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2916 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2918 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2919 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2923 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2931 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int texCubemap(texture< int, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2932 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2936 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2938 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2939 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2943 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2945 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 texCubemap(texture< int1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2946 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2950 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2952 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2953 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2957 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2959 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 texCubemap(texture< int2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2960 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2964 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2966 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2967 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2971 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2973 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 texCubemap(texture< int4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2974 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2978 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 2980 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 2981 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 2985 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3059 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< float, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3060 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3064 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3066 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< float1, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3067 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3071 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3073 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< float2, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3074 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3078 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3080 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< float4, 12, cudaReadModeElementType> t, float x, float y, float z)
# 3081 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3085 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3093 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3094 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3103 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3105 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3106 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3111 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3113 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3114 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3119 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3121 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3122 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3127 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3129 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3130 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3135 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3137 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3138 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3143 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3145 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3146 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3151 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3153 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3154 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3159 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3161 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3162 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3167 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3175 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3176 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3181 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3183 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3184 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3189 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3191 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3192 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3197 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3199 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3200 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3205 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3207 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3208 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3213 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3215 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3216 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3221 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3223 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3224 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3229 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3231 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat> t, float x, float y, float z)
# 3232 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
# 3237 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3245 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char texCubemapLayered(texture< char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3246 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3254 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3256 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3257 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3261 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3263 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3264 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3268 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3270 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3271 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3275 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3277 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3278 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3282 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3284 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3285 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3289 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3291 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3292 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3296 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3298 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3299 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3303 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3305 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3306 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3310 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3318 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short texCubemapLayered(texture< short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3319 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3323 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3325 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3326 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3330 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3332 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3333 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3337 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3339 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3340 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3344 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3346 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3347 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3351 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3353 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3354 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3358 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3360 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3361 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3365 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3367 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3368 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3372 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3380 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int texCubemapLayered(texture< int, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3381 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3385 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3387 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3388 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3392 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3394 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3395 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3399 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3401 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3402 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3406 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3408 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3409 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3413 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3415 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3416 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3420 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3422 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3423 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3427 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3429 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3430 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3434 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3508 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< float, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3509 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3513 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3515 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3516 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3520 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3522 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3523 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3527 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3529 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType> t, float x, float y, float z, int layer)
# 3530 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3534 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3542 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3543 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3552 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3554 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3555 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3560 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3562 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3563 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3568 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3570 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3571 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3576 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3578 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3579 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3584 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3586 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3587 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3592 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3594 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3595 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3600 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3602 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3603 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3608 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3610 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3611 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3616 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3624 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3625 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3630 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3632 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3633 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3638 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3640 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3641 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3646 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3648 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3649 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3654 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3656 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3657 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3662 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3664 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3665 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3670 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3672 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3673 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3678 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3680 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat> t, float x, float y, float z, int layer)
# 3681 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
# 3686 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3780 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3781 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3783 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3785 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3786 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3788 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3790 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3791 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3793 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3795 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3796 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3798 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3800 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3801 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3803 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3805 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3806 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3808 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3810 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3811 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3813 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3815 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3816 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3818 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3820 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3821 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3823 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3825 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3826 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3828 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3830 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3831 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3833 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3835 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3836 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3838 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3840 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3841 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3843 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3845 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3846 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3848 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3850 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3851 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3853 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3855 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3856 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3858 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3860 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3861 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3863 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3865 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3866 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3868 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3870 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3871 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3873 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3875 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3876 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3878 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3880 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3881 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3883 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3885 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3886 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3888 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3890 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3891 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3893 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3895 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3896 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3898 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3900 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3901 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3903 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3905 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3906 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3908 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3910 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3911 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3913 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3915 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3916 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3918 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3920 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3921 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3923 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3925 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3926 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3928 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3930 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3931 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3933 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3935 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3936 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3938 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3940 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3941 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3943 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3945 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3946 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3948 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3950 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3951 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3953 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3955 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType> t, float x, float y, int comp = 0)
# 3956 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3958 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3967 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3968 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3970 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3972 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3973 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3975 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3977 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3978 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3980 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3982 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3983 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3985 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3987 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3988 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3990 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3992 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3993 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 3995 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 3997 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 3998 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4000 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4002 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4003 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4005 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4007 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4008 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4010 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4012 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4013 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4015 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4017 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4018 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4020 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4022 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4023 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4025 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4027 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4028 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4030 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4032 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4033 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4035 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4037 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4038 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4040 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4042 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4043 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4045 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4047 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4048 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4050 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4052 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4053 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4055 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4057 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4058 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4060 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4062 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4063 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4065 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 4067 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
__attribute__((unused)) static inline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat> t, float x, float y, int comp = 0)
# 4068 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
# 4070 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
exit(___);}
# 66 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const uint3 threadIdx; }
# 67 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const uint3 blockIdx; }
# 68 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const dim3 blockDim; }
# 69 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const dim3 gridDim; }
# 70 "/usr/local/cuda/bin/../include/device_launch_parameters.h"
extern "C" { extern const int warpSize; }
# 120 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 121 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaSetupArgument(T
# 122 "/usr/local/cuda/bin/../include/cuda_runtime.h"
arg, size_t
# 123 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset)
# 125 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 126 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaSetupArgument((const void *)(&arg), sizeof(T), offset);
# 127 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 159 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaEventCreate(cudaEvent_t *
# 160 "/usr/local/cuda/bin/../include/cuda_runtime.h"
event, unsigned
# 161 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags)
# 163 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 164 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaEventCreateWithFlags(event, flags);
# 165 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 222 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMallocHost(void **
# 223 "/usr/local/cuda/bin/../include/cuda_runtime.h"
ptr, size_t
# 224 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, unsigned
# 225 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags)
# 227 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 228 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaHostAlloc(ptr, size, flags);
# 229 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 231 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 232 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaHostAlloc(T **
# 233 "/usr/local/cuda/bin/../include/cuda_runtime.h"
ptr, size_t
# 234 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, unsigned
# 235 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags)
# 237 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 238 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaHostAlloc((void **)((void *)ptr), size, flags);
# 239 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 241 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 242 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaHostGetDevicePointer(T **
# 243 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pDevice, void *
# 244 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pHost, unsigned
# 245 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags)
# 247 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 248 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 249 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 251 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 252 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMalloc(T **
# 253 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t
# 254 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size)
# 256 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 257 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMalloc((void **)((void *)devPtr), size);
# 258 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 260 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 261 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMallocHost(T **
# 262 "/usr/local/cuda/bin/../include/cuda_runtime.h"
ptr, size_t
# 263 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, unsigned
# 264 "/usr/local/cuda/bin/../include/cuda_runtime.h"
flags = (0))
# 266 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 267 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags);
# 268 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 270 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 271 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMallocPitch(T **
# 272 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t *
# 273 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pitch, size_t
# 274 "/usr/local/cuda/bin/../include/cuda_runtime.h"
width, size_t
# 275 "/usr/local/cuda/bin/../include/cuda_runtime.h"
height)
# 277 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 278 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 279 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 289 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyToSymbol(char *
# 290 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 291 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 292 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 293 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 294 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 296 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 297 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbol((const char *)symbol, src, count, offset, kind);
# 298 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 300 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 301 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyToSymbol(const T &
# 302 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 303 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 304 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 305 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 306 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 308 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 309 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbol((const char *)(&symbol), src, count, offset, kind);
# 310 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 312 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyToSymbolAsync(char *
# 313 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 314 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 315 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 316 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 317 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 318 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 320 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 321 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const char *)symbol, src, count, offset, kind, stream);
# 322 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 324 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 325 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
# 326 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, const void *
# 327 "/usr/local/cuda/bin/../include/cuda_runtime.h"
src, size_t
# 328 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 329 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 330 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 331 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 333 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 334 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyToSymbolAsync((const char *)(&symbol), src, count, offset, kind, stream);
# 335 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 343 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyFromSymbol(void *
# 344 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, char *
# 345 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 346 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 347 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 348 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 350 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 351 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const char *)symbol, count, offset, kind);
# 352 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 354 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 355 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyFromSymbol(void *
# 356 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, const T &
# 357 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 358 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 359 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 360 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 362 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 363 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbol(dst, (const char *)(&symbol), count, offset, kind);
# 364 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 366 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaMemcpyFromSymbolAsync(void *
# 367 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, char *
# 368 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 369 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 370 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 371 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 372 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 374 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 375 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const char *)symbol, count, offset, kind, stream);
# 376 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 378 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 379 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
# 380 "/usr/local/cuda/bin/../include/cuda_runtime.h"
dst, const T &
# 381 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol, size_t
# 382 "/usr/local/cuda/bin/../include/cuda_runtime.h"
count, size_t
# 383 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset = (0), cudaMemcpyKind
# 384 "/usr/local/cuda/bin/../include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 385 "/usr/local/cuda/bin/../include/cuda_runtime.h"
stream = 0)
# 387 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 388 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaMemcpyFromSymbolAsync(dst, (const char *)(&symbol), count, offset, kind, stream);
# 389 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 391 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaGetSymbolAddress(void **
# 392 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, char *
# 393 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 395 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 396 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const char *)symbol);
# 397 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 424 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 425 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaGetSymbolAddress(void **
# 426 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, const T &
# 427 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 429 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 430 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolAddress(devPtr, (const char *)(&symbol));
# 431 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 439 "/usr/local/cuda/bin/../include/cuda_runtime.h"
static inline cudaError_t cudaGetSymbolSize(size_t *
# 440 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, char *
# 441 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 443 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 444 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolSize(size, (const char *)symbol);
# 445 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 472 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 473 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaGetSymbolSize(size_t *
# 474 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size, const T &
# 475 "/usr/local/cuda/bin/../include/cuda_runtime.h"
symbol)
# 477 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 478 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetSymbolSize(size, (const char *)(&symbol));
# 479 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 521 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 522 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture(size_t *
# 523 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 524 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 525 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 526 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc, size_t
# 527 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 529 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 530 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture(offset, &tex, devPtr, &desc, size);
# 531 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 566 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 567 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture(size_t *
# 568 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 569 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 570 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t
# 571 "/usr/local/cuda/bin/../include/cuda_runtime.h"
size = (((2147483647) * 2U) + 1U))
# 573 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 574 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size);
# 575 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 622 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 623 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 624 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 625 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 626 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 627 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc, size_t
# 628 "/usr/local/cuda/bin/../include/cuda_runtime.h"
width, size_t
# 629 "/usr/local/cuda/bin/../include/cuda_runtime.h"
height, size_t
# 630 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pitch)
# 632 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 633 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch);
# 634 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 680 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 681 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTexture2D(size_t *
# 682 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 683 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const void *
# 684 "/usr/local/cuda/bin/../include/cuda_runtime.h"
devPtr, size_t
# 685 "/usr/local/cuda/bin/../include/cuda_runtime.h"
width, size_t
# 686 "/usr/local/cuda/bin/../include/cuda_runtime.h"
height, size_t
# 687 "/usr/local/cuda/bin/../include/cuda_runtime.h"
pitch)
# 689 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 690 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTexture2D(offset, &tex, devPtr, &(tex.texture< T, dim, readMode> ::channelDesc), width, height, pitch);
# 691 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 722 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 723 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 724 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const cudaArray *
# 725 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 726 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc)
# 728 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 729 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindTextureToArray(&tex, array, &desc);
# 730 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 760 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 761 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 762 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex, const cudaArray *
# 763 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array)
# 765 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 766 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 767 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 769 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err;
# 770 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 799 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 800 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode> &
# 801 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex)
# 803 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 804 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaUnbindTexture(&tex);
# 805 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 839 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> inline cudaError_t
# 840 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaGetTextureAlignmentOffset(size_t *
# 841 "/usr/local/cuda/bin/../include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 842 "/usr/local/cuda/bin/../include/cuda_runtime.h"
tex)
# 844 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 845 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaGetTextureAlignmentOffset(offset, &tex);
# 846 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 900 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 901 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaFuncSetCacheConfig(T *
# 902 "/usr/local/cuda/bin/../include/cuda_runtime.h"
func, cudaFuncCache
# 903 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cacheConfig)
# 905 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 906 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaFuncSetCacheConfig((const char *)func, cacheConfig);
# 907 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 909 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 910 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaFuncSetSharedMemConfig(T *
# 911 "/usr/local/cuda/bin/../include/cuda_runtime.h"
func, cudaSharedMemConfig
# 912 "/usr/local/cuda/bin/../include/cuda_runtime.h"
config)
# 914 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 915 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaFuncSetSharedMemConfig((const char *)func, config);
# 916 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 953 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 954 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaLaunch(T *
# 955 "/usr/local/cuda/bin/../include/cuda_runtime.h"
entry)
# 957 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 958 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaLaunch((const char *)entry);
# 959 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 993 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T> inline cudaError_t
# 994 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaFuncGetAttributes(cudaFuncAttributes *
# 995 "/usr/local/cuda/bin/../include/cuda_runtime.h"
attr, T *
# 996 "/usr/local/cuda/bin/../include/cuda_runtime.h"
entry)
# 998 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 999 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaFuncGetAttributes(attr, (const char *)entry);
# 1000 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 1022 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim> inline cudaError_t
# 1023 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1024 "/usr/local/cuda/bin/../include/cuda_runtime.h"
surf, const cudaArray *
# 1025 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 1026 "/usr/local/cuda/bin/../include/cuda_runtime.h"
desc)
# 1028 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 1029 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return cudaBindSurfaceToArray(&surf, array, &desc);
# 1030 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 1051 "/usr/local/cuda/bin/../include/cuda_runtime.h"
template< class T, int dim> inline cudaError_t
# 1052 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1053 "/usr/local/cuda/bin/../include/cuda_runtime.h"
surf, const cudaArray *
# 1054 "/usr/local/cuda/bin/../include/cuda_runtime.h"
array)
# 1056 "/usr/local/cuda/bin/../include/cuda_runtime.h"
{
# 1057 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1058 "/usr/local/cuda/bin/../include/cuda_runtime.h"
cudaError_t err = cudaGetChannelDesc(&desc, array);
# 1060 "/usr/local/cuda/bin/../include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err;
# 1061 "/usr/local/cuda/bin/../include/cuda_runtime.h"
}
# 157 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef unsigned long long CUdeviceptr; }
# 164 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef int CUdevice; }
# 165 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUctx_st *CUcontext; }
# 166 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUmod_st *CUmodule; }
# 167 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUfunc_st *CUfunction; }
# 168 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUarray_st *CUarray; }
# 169 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUtexref_st *CUtexref; }
# 170 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUsurfref_st *CUsurfref; }
# 171 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef CUevent_st *CUevent; }
# 172 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef CUstream_st *CUstream; }
# 173 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef struct CUgraphicsResource_st *CUgraphicsResource; }
# 177 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 175 "/usr/local/cuda/bin/../include/cuda.h"
struct CUuuid_st {
# 176 "/usr/local/cuda/bin/../include/cuda.h"
char bytes[16];
# 177 "/usr/local/cuda/bin/../include/cuda.h"
} CUuuid; }
# 189 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 187 "/usr/local/cuda/bin/../include/cuda.h"
struct CUipcEventHandle_st {
# 188 "/usr/local/cuda/bin/../include/cuda.h"
char reserved[64];
# 189 "/usr/local/cuda/bin/../include/cuda.h"
} CUipcEventHandle; }
# 193 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 191 "/usr/local/cuda/bin/../include/cuda.h"
struct CUipcMemHandle_st {
# 192 "/usr/local/cuda/bin/../include/cuda.h"
char reserved[64];
# 193 "/usr/local/cuda/bin/../include/cuda.h"
} CUipcMemHandle; }
# 197 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 195 "/usr/local/cuda/bin/../include/cuda.h"
enum CUipcMem_flags_enum {
# 196 "/usr/local/cuda/bin/../include/cuda.h"
CU_IPC_MEM_LAZY_ENABLE_PEER_ACCESS = 1
# 197 "/usr/local/cuda/bin/../include/cuda.h"
} CUipcMem_flags; }
# 216 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 204 "/usr/local/cuda/bin/../include/cuda.h"
enum CUctx_flags_enum {
# 205 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_AUTO,
# 206 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_SPIN,
# 207 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_YIELD,
# 208 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_BLOCKING_SYNC = 4,
# 209 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_BLOCKING_SYNC = 4,
# 212 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_SCHED_MASK = 7,
# 213 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_MAP_HOST,
# 214 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_LMEM_RESIZE_TO_MAX = 16,
# 215 "/usr/local/cuda/bin/../include/cuda.h"
CU_CTX_FLAGS_MASK = 31
# 216 "/usr/local/cuda/bin/../include/cuda.h"
} CUctx_flags; }
# 226 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 221 "/usr/local/cuda/bin/../include/cuda.h"
enum CUevent_flags_enum {
# 222 "/usr/local/cuda/bin/../include/cuda.h"
CU_EVENT_DEFAULT,
# 223 "/usr/local/cuda/bin/../include/cuda.h"
CU_EVENT_BLOCKING_SYNC,
# 224 "/usr/local/cuda/bin/../include/cuda.h"
CU_EVENT_DISABLE_TIMING,
# 225 "/usr/local/cuda/bin/../include/cuda.h"
CU_EVENT_INTERPROCESS = 4
# 226 "/usr/local/cuda/bin/../include/cuda.h"
} CUevent_flags; }
# 240 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 231 "/usr/local/cuda/bin/../include/cuda.h"
enum CUarray_format_enum {
# 232 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT8 = 1,
# 233 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT16,
# 234 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT32,
# 235 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_SIGNED_INT8 = 8,
# 236 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_SIGNED_INT16,
# 237 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_SIGNED_INT32,
# 238 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_HALF = 16,
# 239 "/usr/local/cuda/bin/../include/cuda.h"
CU_AD_FORMAT_FLOAT = 32
# 240 "/usr/local/cuda/bin/../include/cuda.h"
} CUarray_format; }
# 250 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 245 "/usr/local/cuda/bin/../include/cuda.h"
enum CUaddress_mode_enum {
# 246 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_WRAP,
# 247 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_CLAMP,
# 248 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_MIRROR,
# 249 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_ADDRESS_MODE_BORDER
# 250 "/usr/local/cuda/bin/../include/cuda.h"
} CUaddress_mode; }
# 258 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 255 "/usr/local/cuda/bin/../include/cuda.h"
enum CUfilter_mode_enum {
# 256 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_FILTER_MODE_POINT,
# 257 "/usr/local/cuda/bin/../include/cuda.h"
CU_TR_FILTER_MODE_LINEAR
# 258 "/usr/local/cuda/bin/../include/cuda.h"
} CUfilter_mode; }
# 341 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 263 "/usr/local/cuda/bin/../include/cuda.h"
enum CUdevice_attribute_enum {
# 264 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1,
# 265 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X,
# 266 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y,
# 267 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z,
# 268 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X,
# 269 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y,
# 270 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z,
# 271 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK,
# 272 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8,
# 273 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY,
# 274 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_WARP_SIZE,
# 275 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_PITCH,
# 276 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK,
# 277 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12,
# 278 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_CLOCK_RATE,
# 279 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT,
# 280 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_GPU_OVERLAP,
# 281 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT,
# 282 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT,
# 283 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_INTEGRATED,
# 284 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY,
# 285 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_MODE,
# 286 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH,
# 287 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH,
# 288 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT,
# 289 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH,
# 290 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT,
# 291 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH,
# 292 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_WIDTH,
# 293 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_HEIGHT,
# 294 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_LAYERS,
# 295 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_WIDTH = 27,
# 296 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_HEIGHT,
# 297 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_NUMSLICES,
# 298 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT,
# 299 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS,
# 300 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_ECC_ENABLED,
# 301 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_BUS_ID,
# 302 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DEVICE_ID,
# 303 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_TCC_DRIVER,
# 304 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE,
# 305 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH,
# 306 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_L2_CACHE_SIZE,
# 307 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR,
# 308 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_ASYNC_ENGINE_COUNT,
# 309 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_UNIFIED_ADDRESSING,
# 310 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_WIDTH,
# 311 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_LAYERS,
# 312 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_TEX2D_GATHER,
# 313 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_WIDTH,
# 314 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_HEIGHT,
# 315 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH_ALTERNATE,
# 316 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT_ALTERNATE,
# 317 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH_ALTERNATE,
# 318 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DOMAIN_ID,
# 319 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_PITCH_ALIGNMENT,
# 320 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_WIDTH,
# 321 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_WIDTH,
# 322 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_LAYERS,
# 323 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_WIDTH,
# 324 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_WIDTH,
# 325 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_HEIGHT,
# 326 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_WIDTH,
# 327 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_HEIGHT,
# 328 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_DEPTH,
# 329 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_WIDTH,
# 330 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_LAYERS,
# 331 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_WIDTH,
# 332 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_HEIGHT,
# 333 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_LAYERS,
# 334 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_WIDTH,
# 335 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_WIDTH,
# 336 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_LAYERS,
# 337 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LINEAR_WIDTH,
# 338 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_WIDTH,
# 339 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_HEIGHT,
# 340 "/usr/local/cuda/bin/../include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_PITCH
# 341 "/usr/local/cuda/bin/../include/cuda.h"
} CUdevice_attribute; }
# 357 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 346 "/usr/local/cuda/bin/../include/cuda.h"
struct CUdevprop_st {
# 347 "/usr/local/cuda/bin/../include/cuda.h"
int maxThreadsPerBlock;
# 348 "/usr/local/cuda/bin/../include/cuda.h"
int maxThreadsDim[3];
# 349 "/usr/local/cuda/bin/../include/cuda.h"
int maxGridSize[3];
# 350 "/usr/local/cuda/bin/../include/cuda.h"
int sharedMemPerBlock;
# 351 "/usr/local/cuda/bin/../include/cuda.h"
int totalConstantMemory;
# 352 "/usr/local/cuda/bin/../include/cuda.h"
int SIMDWidth;
# 353 "/usr/local/cuda/bin/../include/cuda.h"
int memPitch;
# 354 "/usr/local/cuda/bin/../include/cuda.h"
int regsPerBlock;
# 355 "/usr/local/cuda/bin/../include/cuda.h"
int clockRate;
# 356 "/usr/local/cuda/bin/../include/cuda.h"
int textureAlign;
# 357 "/usr/local/cuda/bin/../include/cuda.h"
} CUdevprop; }
# 367 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 362 "/usr/local/cuda/bin/../include/cuda.h"
enum CUpointer_attribute_enum {
# 363 "/usr/local/cuda/bin/../include/cuda.h"
CU_POINTER_ATTRIBUTE_CONTEXT = 1,
# 364 "/usr/local/cuda/bin/../include/cuda.h"
CU_POINTER_ATTRIBUTE_MEMORY_TYPE,
# 365 "/usr/local/cuda/bin/../include/cuda.h"
CU_POINTER_ATTRIBUTE_DEVICE_POINTER,
# 366 "/usr/local/cuda/bin/../include/cuda.h"
CU_POINTER_ATTRIBUTE_HOST_POINTER
# 367 "/usr/local/cuda/bin/../include/cuda.h"
} CUpointer_attribute; }
# 422 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 372 "/usr/local/cuda/bin/../include/cuda.h"
enum CUfunction_attribute_enum {
# 378 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK,
# 385 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES,
# 391 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES,
# 396 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES,
# 401 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_NUM_REGS,
# 410 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_PTX_VERSION,
# 419 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_BINARY_VERSION,
# 421 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX
# 422 "/usr/local/cuda/bin/../include/cuda.h"
} CUfunction_attribute; }
# 432 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 427 "/usr/local/cuda/bin/../include/cuda.h"
enum CUfunc_cache_enum {
# 428 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_CACHE_PREFER_NONE,
# 429 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_CACHE_PREFER_SHARED,
# 430 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_CACHE_PREFER_L1,
# 431 "/usr/local/cuda/bin/../include/cuda.h"
CU_FUNC_CACHE_PREFER_EQUAL
# 432 "/usr/local/cuda/bin/../include/cuda.h"
} CUfunc_cache; }
# 441 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 437 "/usr/local/cuda/bin/../include/cuda.h"
enum CUsharedconfig_enum {
# 438 "/usr/local/cuda/bin/../include/cuda.h"
CU_SHARED_MEM_CONFIG_DEFAULT_BANK_SIZE,
# 439 "/usr/local/cuda/bin/../include/cuda.h"
CU_SHARED_MEM_CONFIG_FOUR_BYTE_BANK_SIZE,
# 440 "/usr/local/cuda/bin/../include/cuda.h"
CU_SHARED_MEM_CONFIG_EIGHT_BYTE_BANK_SIZE
# 441 "/usr/local/cuda/bin/../include/cuda.h"
} CUsharedconfig; }
# 451 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 446 "/usr/local/cuda/bin/../include/cuda.h"
enum CUmemorytype_enum {
# 447 "/usr/local/cuda/bin/../include/cuda.h"
CU_MEMORYTYPE_HOST = 1,
# 448 "/usr/local/cuda/bin/../include/cuda.h"
CU_MEMORYTYPE_DEVICE,
# 449 "/usr/local/cuda/bin/../include/cuda.h"
CU_MEMORYTYPE_ARRAY,
# 450 "/usr/local/cuda/bin/../include/cuda.h"
CU_MEMORYTYPE_UNIFIED
# 451 "/usr/local/cuda/bin/../include/cuda.h"
} CUmemorytype; }
# 461 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 456 "/usr/local/cuda/bin/../include/cuda.h"
enum CUcomputemode_enum {
# 457 "/usr/local/cuda/bin/../include/cuda.h"
CU_COMPUTEMODE_DEFAULT,
# 458 "/usr/local/cuda/bin/../include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE,
# 459 "/usr/local/cuda/bin/../include/cuda.h"
CU_COMPUTEMODE_PROHIBITED,
# 460 "/usr/local/cuda/bin/../include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE_PROCESS
# 461 "/usr/local/cuda/bin/../include/cuda.h"
} CUcomputemode; }
# 553 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 466 "/usr/local/cuda/bin/../include/cuda.h"
enum CUjit_option_enum {
# 472 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_MAX_REGISTERS,
# 485 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_THREADS_PER_BLOCK,
# 492 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_WALL_TIME,
# 500 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_INFO_LOG_BUFFER,
# 508 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES,
# 516 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER,
# 524 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES,
# 531 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_OPTIMIZATION_LEVEL,
# 538 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_TARGET_FROM_CUCONTEXT,
# 544 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_TARGET,
# 551 "/usr/local/cuda/bin/../include/cuda.h"
CU_JIT_FALLBACK_STRATEGY
# 553 "/usr/local/cuda/bin/../include/cuda.h"
} CUjit_option; }
# 567 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 558 "/usr/local/cuda/bin/../include/cuda.h"
enum CUjit_target_enum {
# 560 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_10,
# 561 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_11,
# 562 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_12,
# 563 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_13,
# 564 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_20,
# 565 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_21,
# 566 "/usr/local/cuda/bin/../include/cuda.h"
CU_TARGET_COMPUTE_30
# 567 "/usr/local/cuda/bin/../include/cuda.h"
} CUjit_target; }
# 578 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 572 "/usr/local/cuda/bin/../include/cuda.h"
enum CUjit_fallback_enum {
# 574 "/usr/local/cuda/bin/../include/cuda.h"
CU_PREFER_PTX,
# 576 "/usr/local/cuda/bin/../include/cuda.h"
CU_PREFER_BINARY
# 578 "/usr/local/cuda/bin/../include/cuda.h"
} CUjit_fallback; }
# 589 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 583 "/usr/local/cuda/bin/../include/cuda.h"
enum CUgraphicsRegisterFlags_enum {
# 584 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_NONE,
# 585 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_READ_ONLY,
# 586 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_WRITE_DISCARD,
# 587 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_SURFACE_LDST = 4,
# 588 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_TEXTURE_GATHER = 8
# 589 "/usr/local/cuda/bin/../include/cuda.h"
} CUgraphicsRegisterFlags; }
# 598 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 594 "/usr/local/cuda/bin/../include/cuda.h"
enum CUgraphicsMapResourceFlags_enum {
# 595 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE,
# 596 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY,
# 597 "/usr/local/cuda/bin/../include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD
# 598 "/usr/local/cuda/bin/../include/cuda.h"
} CUgraphicsMapResourceFlags; }
# 610 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 603 "/usr/local/cuda/bin/../include/cuda.h"
enum CUarray_cubemap_face_enum {
# 604 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_X,
# 605 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_X,
# 606 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Y,
# 607 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Y,
# 608 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Z,
# 609 "/usr/local/cuda/bin/../include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Z
# 610 "/usr/local/cuda/bin/../include/cuda.h"
} CUarray_cubemap_face; }
# 619 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 615 "/usr/local/cuda/bin/../include/cuda.h"
enum CUlimit_enum {
# 616 "/usr/local/cuda/bin/../include/cuda.h"
CU_LIMIT_STACK_SIZE,
# 617 "/usr/local/cuda/bin/../include/cuda.h"
CU_LIMIT_PRINTF_FIFO_SIZE,
# 618 "/usr/local/cuda/bin/../include/cuda.h"
CU_LIMIT_MALLOC_HEAP_SIZE
# 619 "/usr/local/cuda/bin/../include/cuda.h"
} CUlimit; }
# 928 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 624 "/usr/local/cuda/bin/../include/cuda.h"
enum cudaError_enum {
# 630 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_SUCCESS,
# 636 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_VALUE,
# 642 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_OUT_OF_MEMORY,
# 648 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_INITIALIZED,
# 653 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_DEINITIALIZED,
# 659 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_PROFILER_DISABLED,
# 664 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_PROFILER_NOT_INITIALIZED,
# 669 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STARTED,
# 674 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STOPPED,
# 679 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NO_DEVICE = 100,
# 685 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_DEVICE,
# 692 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_IMAGE = 200,
# 702 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_CONTEXT,
# 711 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_CURRENT,
# 716 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_MAP_FAILED = 205,
# 721 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_UNMAP_FAILED,
# 727 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ARRAY_IS_MAPPED,
# 732 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ALREADY_MAPPED,
# 740 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NO_BINARY_FOR_GPU,
# 745 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ALREADY_ACQUIRED,
# 750 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_MAPPED,
# 756 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_ARRAY,
# 762 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_POINTER,
# 768 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ECC_UNCORRECTABLE,
# 774 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_UNSUPPORTED_LIMIT,
# 781 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_IN_USE,
# 786 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_SOURCE = 300,
# 791 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_FILE_NOT_FOUND,
# 796 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND,
# 801 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED,
# 806 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_OPERATING_SYSTEM,
# 813 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_INVALID_HANDLE = 400,
# 820 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_FOUND = 500,
# 829 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_NOT_READY = 600,
# 840 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_FAILED = 700,
# 851 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES,
# 862 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_TIMEOUT,
# 868 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING,
# 875 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED,
# 882 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_PEER_ACCESS_NOT_ENABLED,
# 888 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE = 708,
# 895 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_CONTEXT_IS_DESTROYED,
# 903 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_ASSERT,
# 910 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_TOO_MANY_PEERS,
# 916 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED,
# 922 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED,
# 927 "/usr/local/cuda/bin/../include/cuda.h"
CUDA_ERROR_UNKNOWN = 999
# 928 "/usr/local/cuda/bin/../include/cuda.h"
} CUresult; }
# 990 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 969 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_MEMCPY2D_st {
# 970 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcXInBytes;
# 971 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcY;
# 973 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype srcMemoryType;
# 974 "/usr/local/cuda/bin/../include/cuda.h"
const void *srcHost;
# 975 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr srcDevice;
# 976 "/usr/local/cuda/bin/../include/cuda.h"
CUarray srcArray;
# 977 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcPitch;
# 979 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstXInBytes;
# 980 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstY;
# 982 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype dstMemoryType;
# 983 "/usr/local/cuda/bin/../include/cuda.h"
void *dstHost;
# 984 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr dstDevice;
# 985 "/usr/local/cuda/bin/../include/cuda.h"
CUarray dstArray;
# 986 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstPitch;
# 988 "/usr/local/cuda/bin/../include/cuda.h"
size_t WidthInBytes;
# 989 "/usr/local/cuda/bin/../include/cuda.h"
size_t Height;
# 990 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_MEMCPY2D; }
# 1023 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 995 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_MEMCPY3D_st {
# 996 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcXInBytes;
# 997 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcY;
# 998 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcZ;
# 999 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcLOD;
# 1000 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype srcMemoryType;
# 1001 "/usr/local/cuda/bin/../include/cuda.h"
const void *srcHost;
# 1002 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr srcDevice;
# 1003 "/usr/local/cuda/bin/../include/cuda.h"
CUarray srcArray;
# 1004 "/usr/local/cuda/bin/../include/cuda.h"
void *reserved0;
# 1005 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcPitch;
# 1006 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcHeight;
# 1008 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstXInBytes;
# 1009 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstY;
# 1010 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstZ;
# 1011 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstLOD;
# 1012 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype dstMemoryType;
# 1013 "/usr/local/cuda/bin/../include/cuda.h"
void *dstHost;
# 1014 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr dstDevice;
# 1015 "/usr/local/cuda/bin/../include/cuda.h"
CUarray dstArray;
# 1016 "/usr/local/cuda/bin/../include/cuda.h"
void *reserved1;
# 1017 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstPitch;
# 1018 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstHeight;
# 1020 "/usr/local/cuda/bin/../include/cuda.h"
size_t WidthInBytes;
# 1021 "/usr/local/cuda/bin/../include/cuda.h"
size_t Height;
# 1022 "/usr/local/cuda/bin/../include/cuda.h"
size_t Depth;
# 1023 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_MEMCPY3D; }
# 1056 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 1028 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_MEMCPY3D_PEER_st {
# 1029 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcXInBytes;
# 1030 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcY;
# 1031 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcZ;
# 1032 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcLOD;
# 1033 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype srcMemoryType;
# 1034 "/usr/local/cuda/bin/../include/cuda.h"
const void *srcHost;
# 1035 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr srcDevice;
# 1036 "/usr/local/cuda/bin/../include/cuda.h"
CUarray srcArray;
# 1037 "/usr/local/cuda/bin/../include/cuda.h"
CUcontext srcContext;
# 1038 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcPitch;
# 1039 "/usr/local/cuda/bin/../include/cuda.h"
size_t srcHeight;
# 1041 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstXInBytes;
# 1042 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstY;
# 1043 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstZ;
# 1044 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstLOD;
# 1045 "/usr/local/cuda/bin/../include/cuda.h"
CUmemorytype dstMemoryType;
# 1046 "/usr/local/cuda/bin/../include/cuda.h"
void *dstHost;
# 1047 "/usr/local/cuda/bin/../include/cuda.h"
CUdeviceptr dstDevice;
# 1048 "/usr/local/cuda/bin/../include/cuda.h"
CUarray dstArray;
# 1049 "/usr/local/cuda/bin/../include/cuda.h"
CUcontext dstContext;
# 1050 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstPitch;
# 1051 "/usr/local/cuda/bin/../include/cuda.h"
size_t dstHeight;
# 1053 "/usr/local/cuda/bin/../include/cuda.h"
size_t WidthInBytes;
# 1054 "/usr/local/cuda/bin/../include/cuda.h"
size_t Height;
# 1055 "/usr/local/cuda/bin/../include/cuda.h"
size_t Depth;
# 1056 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_MEMCPY3D_PEER; }
# 1068 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 1061 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_ARRAY_DESCRIPTOR_st {
# 1063 "/usr/local/cuda/bin/../include/cuda.h"
size_t Width;
# 1064 "/usr/local/cuda/bin/../include/cuda.h"
size_t Height;
# 1066 "/usr/local/cuda/bin/../include/cuda.h"
CUarray_format Format;
# 1067 "/usr/local/cuda/bin/../include/cuda.h"
unsigned NumChannels;
# 1068 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_ARRAY_DESCRIPTOR; }
# 1082 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" { typedef
# 1073 "/usr/local/cuda/bin/../include/cuda.h"
struct CUDA_ARRAY3D_DESCRIPTOR_st {
# 1075 "/usr/local/cuda/bin/../include/cuda.h"
size_t Width;
# 1076 "/usr/local/cuda/bin/../include/cuda.h"
size_t Height;
# 1077 "/usr/local/cuda/bin/../include/cuda.h"
size_t Depth;
# 1079 "/usr/local/cuda/bin/../include/cuda.h"
CUarray_format Format;
# 1080 "/usr/local/cuda/bin/../include/cuda.h"
unsigned NumChannels;
# 1081 "/usr/local/cuda/bin/../include/cuda.h"
unsigned Flags;
# 1082 "/usr/local/cuda/bin/../include/cuda.h"
} CUDA_ARRAY3D_DESCRIPTOR; }
# 1209 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuInit(unsigned );
# 1236 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDriverGetVersion(int * );
# 1274 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGet(CUdevice * , int );
# 1300 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetCount(int * );
# 1329 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetName(char * , int , CUdevice );
# 1358 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceComputeCapability(int * , int * , CUdevice );
# 1386 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceTotalMem_v2(size_t * , CUdevice );
# 1446 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetProperties(CUdevprop * , CUdevice );
# 1611 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetAttribute(int * , CUdevice_attribute , CUdevice );
# 1711 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxCreate_v2(CUcontext * , unsigned , CUdevice );
# 1750 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxDestroy_v2(CUcontext );
# 1800 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxAttach(CUcontext * , unsigned );
# 1835 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxDetach(CUcontext );
# 1871 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxPushCurrent_v2(CUcontext );
# 1904 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxPopCurrent_v2(CUcontext * );
# 1930 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSetCurrent(CUcontext );
# 1949 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetCurrent(CUcontext * );
# 1978 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetDevice(CUdevice * );
# 2006 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSynchronize();
# 2067 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSetLimit(CUlimit , size_t );
# 2100 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetLimit(size_t * , CUlimit );
# 2142 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetCacheConfig(CUfunc_cache * );
# 2191 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSetCacheConfig(CUfunc_cache );
# 2232 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetSharedMemConfig(CUsharedconfig * );
# 2283 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxSetSharedMemConfig(CUsharedconfig );
# 2320 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxGetApiVersion(CUcontext , unsigned * );
# 2369 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoad(CUmodule * , const char * );
# 2403 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoadData(CUmodule * , const void * );
# 2482 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoadDataEx(CUmodule * , const void * , unsigned , CUjit_option * , void ** );
# 2522 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleLoadFatBinary(CUmodule * , const void * );
# 2547 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleUnload(CUmodule );
# 2577 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetFunction(CUfunction * , CUmodule , const char * );
# 2611 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetGlobal_v2(CUdeviceptr * , size_t * , CUmodule , const char * );
# 2645 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetTexRef(CUtexref * , CUmodule , const char * );
# 2676 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuModuleGetSurfRef(CUsurfref * , CUmodule , const char * );
# 2719 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemGetInfo_v2(size_t * , size_t * );
# 2752 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemAlloc_v2(CUdeviceptr * , size_t );
# 2813 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemAllocPitch_v2(CUdeviceptr * , size_t * , size_t , size_t , unsigned );
# 2842 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemFree_v2(CUdeviceptr );
# 2875 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemGetAddressRange_v2(CUdeviceptr * , size_t * , CUdeviceptr );
# 2921 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemAllocHost_v2(void ** , size_t );
# 2951 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemFreeHost(void * );
# 3033 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostAlloc(void ** , size_t , unsigned );
# 3071 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostGetDevicePointer_v2(CUdeviceptr * , void * , unsigned );
# 3096 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostGetFlags(unsigned * , void * );
# 3123 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetByPCIBusId(CUdevice * , char * );
# 3151 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceGetPCIBusId(char * , int , CUdevice );
# 3193 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuIpcGetEventHandle(CUipcEventHandle * , CUevent );
# 3229 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuIpcOpenEventHandle(CUevent * , CUipcEventHandle );
# 3266 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuIpcGetMemHandle(CUipcMemHandle * , CUdeviceptr );
# 3314 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuIpcOpenMemHandle(CUdeviceptr * , CUipcMemHandle , unsigned );
# 3345 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuIpcCloseMemHandle(CUdeviceptr );
# 3407 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostRegister(void * , size_t , unsigned );
# 3430 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemHostUnregister(void * );
# 3466 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy(CUdeviceptr , CUdeviceptr , size_t );
# 3499 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyPeer(CUdeviceptr , CUcontext , CUdeviceptr , CUcontext , size_t );
# 3535 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoD_v2(CUdeviceptr , const void * , size_t );
# 3568 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoH_v2(void * , CUdeviceptr , size_t );
# 3601 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoD_v2(CUdeviceptr , CUdeviceptr , size_t );
# 3635 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoA_v2(CUarray , size_t , CUdeviceptr , size_t );
# 3671 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoD_v2(CUdeviceptr , CUarray , size_t , size_t );
# 3705 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoA_v2(CUarray , size_t , const void * , size_t );
# 3739 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoH_v2(void * , CUarray , size_t , size_t );
# 3777 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoA_v2(CUarray , size_t , CUarray , size_t , size_t );
# 3937 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy2D_v2(const CUDA_MEMCPY2D * );
# 4095 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy2DUnaligned_v2(const CUDA_MEMCPY2D * );
# 4262 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy3D_v2(const CUDA_MEMCPY3D * );
# 4293 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER * );
# 4333 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAsync(CUdeviceptr , CUdeviceptr , size_t , CUstream );
# 4364 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyPeerAsync(CUdeviceptr , CUcontext , CUdeviceptr , CUcontext , size_t , CUstream );
# 4406 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoDAsync_v2(CUdeviceptr , const void * , size_t , CUstream );
# 4446 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoHAsync_v2(void * , CUdeviceptr , size_t , CUstream );
# 4483 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyDtoDAsync_v2(CUdeviceptr , CUdeviceptr , size_t , CUstream );
# 4525 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyHtoAAsync_v2(CUarray , size_t , const void * , size_t , CUstream );
# 4567 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpyAtoHAsync_v2(void * , CUarray , size_t , size_t , CUstream );
# 4738 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy2DAsync_v2(const CUDA_MEMCPY2D * , CUstream );
# 4913 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy3DAsync_v2(const CUDA_MEMCPY3D * , CUstream );
# 4938 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER * , CUstream );
# 4976 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD8_v2(CUdeviceptr , unsigned char , size_t );
# 5012 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD16_v2(CUdeviceptr , unsigned short , size_t );
# 5048 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD32_v2(CUdeviceptr , unsigned , size_t );
# 5089 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D8_v2(CUdeviceptr , size_t , unsigned char , size_t , size_t );
# 5131 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D16_v2(CUdeviceptr , size_t , unsigned short , size_t , size_t );
# 5173 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D32_v2(CUdeviceptr , size_t , unsigned , size_t , size_t );
# 5210 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD8Async(CUdeviceptr , unsigned char , size_t , CUstream );
# 5247 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD16Async(CUdeviceptr , unsigned short , size_t , CUstream );
# 5283 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD32Async(CUdeviceptr , unsigned , size_t , CUstream );
# 5325 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D8Async(CUdeviceptr , size_t , unsigned char , size_t , size_t , CUstream );
# 5368 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D16Async(CUdeviceptr , size_t , unsigned short , size_t , size_t , CUstream );
# 5411 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuMemsetD2D32Async(CUdeviceptr , size_t , unsigned , size_t , size_t , CUstream );
# 5514 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArrayCreate_v2(CUarray * , const CUDA_ARRAY_DESCRIPTOR * );
# 5547 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArrayGetDescriptor_v2(CUDA_ARRAY_DESCRIPTOR * , CUarray );
# 5578 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArrayDestroy(CUarray );
# 5758 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArray3DCreate_v2(CUarray * , const CUDA_ARRAY3D_DESCRIPTOR * );
# 5794 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuArray3DGetDescriptor_v2(CUDA_ARRAY3D_DESCRIPTOR * , CUarray );
# 6001 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuPointerGetAttribute(void * , CUpointer_attribute , CUdeviceptr );
# 6038 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamCreate(CUstream * , unsigned );
# 6080 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamWaitEvent(CUstream , CUevent , unsigned );
# 6104 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamQuery(CUstream );
# 6129 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamSynchronize(CUstream );
# 6157 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuStreamDestroy_v2(CUstream );
# 6206 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventCreate(CUevent * , unsigned );
# 6244 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventRecord(CUevent , CUstream );
# 6275 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventQuery(CUevent );
# 6309 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventSynchronize(CUevent );
# 6338 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventDestroy_v2(CUevent );
# 6382 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuEventElapsedTime(float * , CUevent , CUevent );
# 6445 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncGetAttribute(int * , CUfunction_attribute , CUfunction );
# 6488 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncSetCacheConfig(CUfunction , CUfunc_cache );
# 6540 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncSetSharedMemConfig(CUfunction , CUsharedconfig );
# 6657 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuLaunchKernel(CUfunction , unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , unsigned , CUstream , void ** , void ** );
# 6713 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncSetBlockShape(CUfunction , int , int , int );
# 6747 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuFuncSetSharedSize(CUfunction , unsigned );
# 6779 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetSize(CUfunction , unsigned );
# 6812 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSeti(CUfunction , int , unsigned );
# 6845 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetf(CUfunction , int , float );
# 6880 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetv(CUfunction , int , void * , unsigned );
# 6917 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuLaunch(CUfunction );
# 6956 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuLaunchGrid(CUfunction , int , int );
# 7000 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuLaunchGridAsync(CUfunction , int , int , CUstream );
# 7025 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuParamSetTexRef(CUfunction , int , CUtexref );
# 7066 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetArray(CUtexref , CUarray , unsigned );
# 7110 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetAddress_v2(size_t * , CUtexref , CUdeviceptr , size_t );
# 7162 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetAddress2D_v3(CUtexref , const CUDA_ARRAY_DESCRIPTOR * , CUdeviceptr , size_t );
# 7191 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetFormat(CUtexref , CUarray_format , int );
# 7231 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetAddressMode(CUtexref , int , CUaddress_mode );
# 7264 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetFilterMode(CUtexref , CUfilter_mode );
# 7299 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefSetFlags(CUtexref , unsigned );
# 7325 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetAddress_v2(CUdeviceptr * , CUtexref );
# 7351 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetArray(CUarray * , CUtexref );
# 7377 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetAddressMode(CUaddress_mode * , CUtexref , int );
# 7401 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetFilterMode(CUfilter_mode * , CUtexref );
# 7427 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetFormat(CUarray_format * , int * , CUtexref );
# 7450 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefGetFlags(unsigned * , CUtexref );
# 7484 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefCreate(CUtexref * );
# 7504 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuTexRefDestroy(CUtexref );
# 7542 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuSurfRefSetArray(CUsurfref , CUarray , unsigned );
# 7563 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuSurfRefGetArray(CUarray * , CUsurfref );
# 7601 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuDeviceCanAccessPeer(int * , CUdevice , CUdevice );
# 7648 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxEnablePeerAccess(CUcontext , unsigned );
# 7673 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuCtxDisablePeerAccess(CUcontext );
# 7714 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsUnregisterResource(CUgraphicsResource );
# 7752 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsSubResourceGetMappedArray(CUarray * , CUgraphicsResource , unsigned , unsigned );
# 7786 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsResourceGetMappedPointer_v2(CUdeviceptr * , size_t * , CUgraphicsResource );
# 7827 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsResourceSetMapFlags(CUgraphicsResource , unsigned );
# 7865 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsMapResources(unsigned , CUgraphicsResource * , CUstream );
# 7900 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGraphicsUnmapResources(unsigned , CUgraphicsResource * , CUstream );
# 7904 "/usr/local/cuda/bin/../include/cuda.h"
extern "C" CUresult cuGetExportTable(const void ** , const CUuuid * );
# 42 "/usr/include/c++/4.4/bits/stringfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template < typename _Alloc >
    class allocator;
# 47 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template< class _CharT> struct char_traits;
# 50 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template < typename _CharT, typename _Traits = char_traits < _CharT >,
           typename _Alloc = allocator < _CharT > >
    class basic_string;
# 54 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template<> struct char_traits< char> ;
# 56 "/usr/include/c++/4.4/bits/stringfwd.h" 3
typedef basic_string< char, char_traits< char> , allocator< char> > string;
# 59 "/usr/include/c++/4.4/bits/stringfwd.h" 3
template<> struct char_traits< wchar_t> ;
# 61 "/usr/include/c++/4.4/bits/stringfwd.h" 3
typedef basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wstring;
# 75 "/usr/include/c++/4.4/bits/stringfwd.h" 3
}
# 45 "/usr/include/stdio.h" 3
struct _IO_FILE;
# 49 "/usr/include/stdio.h" 3
typedef _IO_FILE FILE;
# 65 "/usr/include/stdio.h" 3
typedef _IO_FILE __FILE;
# 40 "/usr/lib/gcc/x86_64-linux-gnu/4.4.3/include/stdarg.h" 3
typedef __builtin_va_list __gnuc_va_list;
# 352 "/usr/lib/gcc/x86_64-linux-gnu/4.4.3/include/stddef.h" 3
typedef unsigned wint_t;
# 95 "/usr/include/wchar.h" 3
typedef
# 84 "/usr/include/wchar.h" 3
struct {
# 85 "/usr/include/wchar.h" 3
int __count;
# 87 "/usr/include/wchar.h" 3
union {
# 89 "/usr/include/wchar.h" 3
unsigned __wch;
# 93 "/usr/include/wchar.h" 3
char __wchb[4];
# 94 "/usr/include/wchar.h" 3
} __value;
# 95 "/usr/include/wchar.h" 3
} __mbstate_t;
# 106 "/usr/include/wchar.h" 3
typedef __mbstate_t mbstate_t;
# 134 "/usr/include/wchar.h" 3
struct tm;
# 144 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcscpy(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw();
# 147 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcsncpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 152 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcscat(wchar_t *__restrict__ , const wchar_t *__restrict__ ) throw();
# 155 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcsncat(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 160 "/usr/include/wchar.h" 3
extern "C" int wcscmp(const wchar_t * , const wchar_t * ) throw()
# 161 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 163 "/usr/include/wchar.h" 3
extern "C" int wcsncmp(const wchar_t * , const wchar_t * , size_t ) throw()
# 164 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 169 "/usr/include/wchar.h" 3
extern "C" int wcscasecmp(const wchar_t * , const wchar_t * ) throw();
# 172 "/usr/include/wchar.h" 3
extern "C" int wcsncasecmp(const wchar_t * , const wchar_t * , size_t ) throw();
# 179 "/usr/include/wchar.h" 3
extern "C" int wcscasecmp_l(const wchar_t * , const wchar_t * , __locale_t ) throw();
# 182 "/usr/include/wchar.h" 3
extern "C" int wcsncasecmp_l(const wchar_t * , const wchar_t * , size_t , __locale_t ) throw();
# 189 "/usr/include/wchar.h" 3
extern "C" int wcscoll(const wchar_t * , const wchar_t * ) throw();
# 193 "/usr/include/wchar.h" 3
extern "C" size_t wcsxfrm(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 203 "/usr/include/wchar.h" 3
extern "C" int wcscoll_l(const wchar_t * , const wchar_t * , __locale_t ) throw();
# 209 "/usr/include/wchar.h" 3
extern "C" size_t wcsxfrm_l(wchar_t * , const wchar_t * , size_t , __locale_t ) throw();
# 213 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcsdup(const wchar_t * ) throw() __attribute((__malloc__));
# 219 "/usr/include/wchar.h" 3
wchar_t *wcschr(wchar_t * , wchar_t ) throw() __asm__("wcschr")
# 220 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 221 "/usr/include/wchar.h" 3
const wchar_t *wcschr(const wchar_t * , wchar_t ) throw() __asm__("wcschr")
# 222 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 229 "/usr/include/wchar.h" 3
wchar_t *wcsrchr(wchar_t * , wchar_t ) throw() __asm__("wcsrchr")
# 230 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 231 "/usr/include/wchar.h" 3
const wchar_t *wcsrchr(const wchar_t * , wchar_t ) throw() __asm__("wcsrchr")
# 232 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 242 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcschrnul(const wchar_t * , wchar_t ) throw()
# 243 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 249 "/usr/include/wchar.h" 3
extern "C" size_t wcscspn(const wchar_t * , const wchar_t * ) throw()
# 250 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 253 "/usr/include/wchar.h" 3
extern "C" size_t wcsspn(const wchar_t * , const wchar_t * ) throw()
# 254 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 257 "/usr/include/wchar.h" 3
wchar_t *wcspbrk(wchar_t * , const wchar_t * ) throw() __asm__("wcspbrk")
# 258 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 259 "/usr/include/wchar.h" 3
const wchar_t *wcspbrk(const wchar_t * , const wchar_t * ) throw() __asm__("wcspbrk")
# 261 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 268 "/usr/include/wchar.h" 3
wchar_t *wcsstr(wchar_t * , const wchar_t * ) throw() __asm__("wcsstr")
# 269 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 270 "/usr/include/wchar.h" 3
const wchar_t *wcsstr(const wchar_t * , const wchar_t * ) throw() __asm__("wcsstr")
# 272 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 279 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcstok(wchar_t *__restrict__ , const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 284 "/usr/include/wchar.h" 3
extern "C" size_t wcslen(const wchar_t * ) throw() __attribute((__pure__));
# 290 "/usr/include/wchar.h" 3
wchar_t *wcswcs(wchar_t * , const wchar_t * ) throw() __asm__("wcswcs")
# 291 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 292 "/usr/include/wchar.h" 3
const wchar_t *wcswcs(const wchar_t * , const wchar_t * ) throw() __asm__("wcswcs")
# 294 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 303 "/usr/include/wchar.h" 3
extern "C" size_t wcsnlen(const wchar_t * , size_t ) throw()
# 304 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 311 "/usr/include/wchar.h" 3
wchar_t *wmemchr(wchar_t * , wchar_t , size_t ) throw() __asm__("wmemchr")
# 312 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 313 "/usr/include/wchar.h" 3
const wchar_t *wmemchr(const wchar_t * , wchar_t , size_t ) throw() __asm__("wmemchr")
# 315 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 322 "/usr/include/wchar.h" 3
extern "C" int wmemcmp(const wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw()
# 324 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 327 "/usr/include/wchar.h" 3
extern "C" wchar_t *wmemcpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 332 "/usr/include/wchar.h" 3
extern "C" wchar_t *wmemmove(wchar_t * , const wchar_t * , size_t ) throw();
# 336 "/usr/include/wchar.h" 3
extern "C" wchar_t *wmemset(wchar_t * , wchar_t , size_t ) throw();
# 342 "/usr/include/wchar.h" 3
extern "C" wchar_t *wmempcpy(wchar_t *__restrict__ , const wchar_t *__restrict__ , size_t ) throw();
# 351 "/usr/include/wchar.h" 3
extern "C" wint_t btowc(int ) throw();
# 355 "/usr/include/wchar.h" 3
extern "C" int wctob(wint_t ) throw();
# 359 "/usr/include/wchar.h" 3
extern "C" int mbsinit(const mbstate_t * ) throw() __attribute((__pure__));
# 363 "/usr/include/wchar.h" 3
extern "C" size_t mbrtowc(wchar_t *__restrict__ , const char *__restrict__ , size_t , mbstate_t * ) throw();
# 368 "/usr/include/wchar.h" 3
extern "C" size_t wcrtomb(char *__restrict__ , wchar_t , mbstate_t *__restrict__ ) throw();
# 372 "/usr/include/wchar.h" 3
extern "C" size_t __mbrlen(const char *__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 374 "/usr/include/wchar.h" 3
extern "C" size_t mbrlen(const char *__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 406 "/usr/include/wchar.h" 3
extern "C" size_t mbsrtowcs(wchar_t *__restrict__ , const char **__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 412 "/usr/include/wchar.h" 3
extern "C" size_t wcsrtombs(char *__restrict__ , const wchar_t **__restrict__ , size_t , mbstate_t *__restrict__ ) throw();
# 421 "/usr/include/wchar.h" 3
extern "C" size_t mbsnrtowcs(wchar_t *__restrict__ , const char **__restrict__ , size_t , size_t , mbstate_t *__restrict__ ) throw();
# 427 "/usr/include/wchar.h" 3
extern "C" size_t wcsnrtombs(char *__restrict__ , const wchar_t **__restrict__ , size_t , size_t , mbstate_t *__restrict__ ) throw();
# 437 "/usr/include/wchar.h" 3
extern "C" int wcwidth(wchar_t ) throw();
# 441 "/usr/include/wchar.h" 3
extern "C" int wcswidth(const wchar_t * , size_t ) throw();
# 448 "/usr/include/wchar.h" 3
extern "C" double wcstod(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 455 "/usr/include/wchar.h" 3
extern "C" float wcstof(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 457 "/usr/include/wchar.h" 3
extern "C" long double wcstold(const wchar_t *__restrict__ , wchar_t **__restrict__ ) throw();
# 466 "/usr/include/wchar.h" 3
extern "C" long wcstol(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 471 "/usr/include/wchar.h" 3
extern "C" unsigned long wcstoul(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 481 "/usr/include/wchar.h" 3
extern "C" long long wcstoll(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 488 "/usr/include/wchar.h" 3
extern "C" unsigned long long wcstoull(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 498 "/usr/include/wchar.h" 3
extern "C" long long wcstoq(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 505 "/usr/include/wchar.h" 3
extern "C" unsigned long long wcstouq(const wchar_t *__restrict__ , wchar_t **__restrict__ , int ) throw();
# 528 "/usr/include/wchar.h" 3
extern "C" long wcstol_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , __locale_t ) throw();
# 532 "/usr/include/wchar.h" 3
extern "C" unsigned long wcstoul_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , __locale_t ) throw();
# 537 "/usr/include/wchar.h" 3
extern "C" long long wcstoll_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , __locale_t ) throw();
# 542 "/usr/include/wchar.h" 3
extern "C" unsigned long long wcstoull_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , int , __locale_t ) throw();
# 547 "/usr/include/wchar.h" 3
extern "C" double wcstod_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , __locale_t ) throw();
# 551 "/usr/include/wchar.h" 3
extern "C" float wcstof_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , __locale_t ) throw();
# 555 "/usr/include/wchar.h" 3
extern "C" long double wcstold_l(const wchar_t *__restrict__ , wchar_t **__restrict__ , __locale_t ) throw();
# 564 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcpcpy(wchar_t * , const wchar_t * ) throw();
# 568 "/usr/include/wchar.h" 3
extern "C" wchar_t *wcpncpy(wchar_t * , const wchar_t * , size_t ) throw();
# 578 "/usr/include/wchar.h" 3
extern "C" __FILE *open_wmemstream(wchar_t ** , size_t * ) throw();
# 585 "/usr/include/wchar.h" 3
extern "C" int fwide(__FILE * , int ) throw();
# 592 "/usr/include/wchar.h" 3
extern "C" int fwprintf(__FILE *__restrict__ , const wchar_t *__restrict__ , ...);
# 599 "/usr/include/wchar.h" 3
extern "C" int wprintf(const wchar_t *__restrict__ , ...);
# 602 "/usr/include/wchar.h" 3
extern "C" int swprintf(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , ...) throw();
# 610 "/usr/include/wchar.h" 3
extern "C" int vfwprintf(__FILE *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list );
# 618 "/usr/include/wchar.h" 3
extern "C" int vwprintf(const wchar_t *__restrict__ , __gnuc_va_list );
# 623 "/usr/include/wchar.h" 3
extern "C" int vswprintf(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , __gnuc_va_list ) throw();
# 633 "/usr/include/wchar.h" 3
extern "C" int fwscanf(__FILE *__restrict__ , const wchar_t *__restrict__ , ...);
# 640 "/usr/include/wchar.h" 3
extern "C" int wscanf(const wchar_t *__restrict__ , ...);
# 643 "/usr/include/wchar.h" 3
extern "C" int swscanf(const wchar_t *__restrict__ , const wchar_t *__restrict__ , ...) throw();
# 687 "/usr/include/wchar.h" 3
extern "C" int vfwscanf(__FILE *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list );
# 695 "/usr/include/wchar.h" 3
extern "C" int vwscanf(const wchar_t *__restrict__ , __gnuc_va_list );
# 699 "/usr/include/wchar.h" 3
extern "C" int vswscanf(const wchar_t *__restrict__ , const wchar_t *__restrict__ , __gnuc_va_list ) throw();
# 743 "/usr/include/wchar.h" 3
extern "C" wint_t fgetwc(__FILE * );
# 744 "/usr/include/wchar.h" 3
extern "C" wint_t getwc(__FILE * );
# 750 "/usr/include/wchar.h" 3
extern "C" wint_t getwchar();
# 757 "/usr/include/wchar.h" 3
extern "C" wint_t fputwc(wchar_t , __FILE * );
# 758 "/usr/include/wchar.h" 3
extern "C" wint_t putwc(wchar_t , __FILE * );
# 764 "/usr/include/wchar.h" 3
extern "C" wint_t putwchar(wchar_t );
# 772 "/usr/include/wchar.h" 3
extern "C" wchar_t *fgetws(wchar_t *__restrict__ , int , __FILE *__restrict__ );
# 779 "/usr/include/wchar.h" 3
extern "C" int fputws(const wchar_t *__restrict__ , __FILE *__restrict__ );
# 787 "/usr/include/wchar.h" 3
extern "C" wint_t ungetwc(wint_t , __FILE * );
# 799 "/usr/include/wchar.h" 3
extern "C" wint_t getwc_unlocked(__FILE * );
# 800 "/usr/include/wchar.h" 3
extern "C" wint_t getwchar_unlocked();
# 808 "/usr/include/wchar.h" 3
extern "C" wint_t fgetwc_unlocked(__FILE * );
# 816 "/usr/include/wchar.h" 3
extern "C" wint_t fputwc_unlocked(wchar_t , __FILE * );
# 825 "/usr/include/wchar.h" 3
extern "C" wint_t putwc_unlocked(wchar_t , __FILE * );
# 826 "/usr/include/wchar.h" 3
extern "C" wint_t putwchar_unlocked(wchar_t );
# 835 "/usr/include/wchar.h" 3
extern "C" wchar_t *fgetws_unlocked(wchar_t *__restrict__ , int , __FILE *__restrict__ );
# 844 "/usr/include/wchar.h" 3
extern "C" int fputws_unlocked(const wchar_t *__restrict__ , __FILE *__restrict__ );
# 853 "/usr/include/wchar.h" 3
extern "C" size_t wcsftime(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , const tm *__restrict__ ) throw();
# 863 "/usr/include/wchar.h" 3
extern "C" size_t wcsftime_l(wchar_t *__restrict__ , size_t , const wchar_t *__restrict__ , const tm *__restrict__ , __locale_t ) throw();
# 65 "/usr/include/c++/4.4/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 67 "/usr/include/c++/4.4/cwchar" 3
using ::mbstate_t;
# 69 "/usr/include/c++/4.4/cwchar" 3
}
# 139 "/usr/include/c++/4.4/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 141 "/usr/include/c++/4.4/cwchar" 3
using ::wint_t;
# 143 "/usr/include/c++/4.4/cwchar" 3
using ::btowc;
# 144 "/usr/include/c++/4.4/cwchar" 3
using ::fgetwc;
# 145 "/usr/include/c++/4.4/cwchar" 3
using ::fgetws;
# 146 "/usr/include/c++/4.4/cwchar" 3
using ::fputwc;
# 147 "/usr/include/c++/4.4/cwchar" 3
using ::fputws;
# 148 "/usr/include/c++/4.4/cwchar" 3
using ::fwide;
# 149 "/usr/include/c++/4.4/cwchar" 3
using ::fwprintf;
# 150 "/usr/include/c++/4.4/cwchar" 3
using ::fwscanf;
# 151 "/usr/include/c++/4.4/cwchar" 3
using ::getwc;
# 152 "/usr/include/c++/4.4/cwchar" 3
using ::getwchar;
# 153 "/usr/include/c++/4.4/cwchar" 3
using ::mbrlen;
# 154 "/usr/include/c++/4.4/cwchar" 3
using ::mbrtowc;
# 155 "/usr/include/c++/4.4/cwchar" 3
using ::mbsinit;
# 156 "/usr/include/c++/4.4/cwchar" 3
using ::mbsrtowcs;
# 157 "/usr/include/c++/4.4/cwchar" 3
using ::putwc;
# 158 "/usr/include/c++/4.4/cwchar" 3
using ::putwchar;
# 159 "/usr/include/c++/4.4/cwchar" 3
using ::swprintf;
# 160 "/usr/include/c++/4.4/cwchar" 3
using ::swscanf;
# 161 "/usr/include/c++/4.4/cwchar" 3
using ::ungetwc;
# 162 "/usr/include/c++/4.4/cwchar" 3
using ::vfwprintf;
# 164 "/usr/include/c++/4.4/cwchar" 3
using ::vfwscanf;
# 166 "/usr/include/c++/4.4/cwchar" 3
using ::vswprintf;
# 168 "/usr/include/c++/4.4/cwchar" 3
using ::vswscanf;
# 170 "/usr/include/c++/4.4/cwchar" 3
using ::vwprintf;
# 172 "/usr/include/c++/4.4/cwchar" 3
using ::vwscanf;
# 174 "/usr/include/c++/4.4/cwchar" 3
using ::wcrtomb;
# 175 "/usr/include/c++/4.4/cwchar" 3
using ::wcscat;
# 176 "/usr/include/c++/4.4/cwchar" 3
using ::wcscmp;
# 177 "/usr/include/c++/4.4/cwchar" 3
using ::wcscoll;
# 178 "/usr/include/c++/4.4/cwchar" 3
using ::wcscpy;
# 179 "/usr/include/c++/4.4/cwchar" 3
using ::wcscspn;
# 180 "/usr/include/c++/4.4/cwchar" 3
using ::wcsftime;
# 181 "/usr/include/c++/4.4/cwchar" 3
using ::wcslen;
# 182 "/usr/include/c++/4.4/cwchar" 3
using ::wcsncat;
# 183 "/usr/include/c++/4.4/cwchar" 3
using ::wcsncmp;
# 184 "/usr/include/c++/4.4/cwchar" 3
using ::wcsncpy;
# 185 "/usr/include/c++/4.4/cwchar" 3
using ::wcsrtombs;
# 186 "/usr/include/c++/4.4/cwchar" 3
using ::wcsspn;
# 187 "/usr/include/c++/4.4/cwchar" 3
using ::wcstod;
# 189 "/usr/include/c++/4.4/cwchar" 3
using ::wcstof;
# 191 "/usr/include/c++/4.4/cwchar" 3
using ::wcstok;
# 192 "/usr/include/c++/4.4/cwchar" 3
using ::wcstol;
# 193 "/usr/include/c++/4.4/cwchar" 3
using ::wcstoul;
# 194 "/usr/include/c++/4.4/cwchar" 3
using ::wcsxfrm;
# 195 "/usr/include/c++/4.4/cwchar" 3
using ::wctob;
# 196 "/usr/include/c++/4.4/cwchar" 3
using ::wmemcmp;
# 197 "/usr/include/c++/4.4/cwchar" 3
using ::wmemcpy;
# 198 "/usr/include/c++/4.4/cwchar" 3
using ::wmemmove;
# 199 "/usr/include/c++/4.4/cwchar" 3
using ::wmemset;
# 200 "/usr/include/c++/4.4/cwchar" 3
using ::wprintf;
# 201 "/usr/include/c++/4.4/cwchar" 3
using ::wscanf;
# 202 "/usr/include/c++/4.4/cwchar" 3
using ::wcschr;
# 203 "/usr/include/c++/4.4/cwchar" 3
using ::wcspbrk;
# 204 "/usr/include/c++/4.4/cwchar" 3
using ::wcsrchr;
# 205 "/usr/include/c++/4.4/cwchar" 3
using ::wcsstr;
# 206 "/usr/include/c++/4.4/cwchar" 3
using ::wmemchr;
# 230 "/usr/include/c++/4.4/cwchar" 3
}
# 238 "/usr/include/c++/4.4/cwchar" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 245 "/usr/include/c++/4.4/cwchar" 3
using ::wcstold;
# 254 "/usr/include/c++/4.4/cwchar" 3
using ::wcstoll;
# 255 "/usr/include/c++/4.4/cwchar" 3
using ::wcstoull;
# 258 "/usr/include/c++/4.4/cwchar" 3
}
# 260 "/usr/include/c++/4.4/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 262 "/usr/include/c++/4.4/cwchar" 3
using __gnu_cxx::wcstold;
# 263 "/usr/include/c++/4.4/cwchar" 3
using __gnu_cxx::wcstoll;
# 264 "/usr/include/c++/4.4/cwchar" 3
using __gnu_cxx::wcstoull;
# 266 "/usr/include/c++/4.4/cwchar" 3
}
# 70 "/usr/include/c++/4.4/bits/postypes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 88 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef long streamoff;
# 98 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef ptrdiff_t streamsize;
# 111 "/usr/include/c++/4.4/bits/postypes.h" 3
template < typename _StateT >
    class fpos
    {
    private :
      streamoff _M_off;
      _StateT _M_state;

    public :




      fpos ( )
      : _M_off ( 0 ), _M_state ( ) { }

      fpos ( streamoff __off )
      : _M_off ( __off ), _M_state ( ) { }


      operator streamoff ( ) const { return _M_off; }


      void
      state ( _StateT __st )
      { _M_state = __st; }


      _StateT
      state ( ) const
      { return _M_state; }





      fpos &
      operator += ( streamoff __off )
      {
 _M_off += __off;
 return * this;
      }





      fpos &
      operator -= ( streamoff __off )
      {
 _M_off -= __off;
 return * this;
      }







      fpos
      operator + ( streamoff __off ) const
      {
 fpos __pos ( * this );
 __pos += __off;
 return __pos;
      }







      fpos
      operator - ( streamoff __off ) const
      {
 fpos __pos ( * this );
 __pos -= __off;
 return __pos;
      }






      streamoff
      operator - ( const fpos & __other ) const
      { return _M_off - __other . _M_off; }
    };
# 214 "/usr/include/c++/4.4/bits/postypes.h" 3
template < typename _StateT >
    inline bool
    operator == ( const fpos < _StateT > & __lhs, const fpos < _StateT > & __rhs )
    { return streamoff ( __lhs ) == streamoff ( __rhs ); }
# 219 "/usr/include/c++/4.4/bits/postypes.h" 3
template < typename _StateT >
    inline bool
    operator != ( const fpos < _StateT > & __lhs, const fpos < _StateT > & __rhs )
    { return streamoff ( __lhs ) != streamoff ( __rhs ); }
# 228 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef fpos< __mbstate_t> streampos;
# 230 "/usr/include/c++/4.4/bits/postypes.h" 3
typedef fpos< __mbstate_t> wstreampos;
# 239 "/usr/include/c++/4.4/bits/postypes.h" 3
}
# 44 "/usr/include/c++/4.4/iosfwd" 3
namespace std __attribute((__visibility__("default"))) {
# 46 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_ios;
# 49 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_streambuf;
# 52 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_istream;
# 55 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_ostream;
# 58 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_iostream;
# 61 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 62 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringbuf;
# 65 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 66 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_istringstream;
# 69 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 70 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_ostringstream;
# 73 "/usr/include/c++/4.4/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 74 "/usr/include/c++/4.4/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringstream;
# 77 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_filebuf;
# 80 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_ifstream;
# 83 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_ofstream;
# 86 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class basic_fstream;
# 89 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class istreambuf_iterator;
# 92 "/usr/include/c++/4.4/iosfwd" 3
template < typename _CharT, typename _Traits = char_traits < _CharT > >
    class ostreambuf_iterator;
# 97 "/usr/include/c++/4.4/iosfwd" 3
class ios_base;
# 127 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ios< char, char_traits< char> > ios;
# 128 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_streambuf< char, char_traits< char> > streambuf;
# 129 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istream< char, char_traits< char> > istream;
# 130 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostream< char, char_traits< char> > ostream;
# 131 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_iostream< char, char_traits< char> > iostream;
# 132 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringbuf< char, char_traits< char> , allocator< char> > stringbuf;
# 133 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istringstream< char, char_traits< char> , allocator< char> > istringstream;
# 134 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostringstream< char, char_traits< char> , allocator< char> > ostringstream;
# 135 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringstream< char, char_traits< char> , allocator< char> > stringstream;
# 136 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_filebuf< char, char_traits< char> > filebuf;
# 137 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ifstream< char, char_traits< char> > ifstream;
# 138 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ofstream< char, char_traits< char> > ofstream;
# 139 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_fstream< char, char_traits< char> > fstream;
# 142 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ios< wchar_t, char_traits< wchar_t> > wios;
# 143 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_streambuf< wchar_t, char_traits< wchar_t> > wstreambuf;
# 144 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istream< wchar_t, char_traits< wchar_t> > wistream;
# 145 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostream< wchar_t, char_traits< wchar_t> > wostream;
# 146 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_iostream< wchar_t, char_traits< wchar_t> > wiostream;
# 147 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringbuf< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wstringbuf;
# 148 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_istringstream< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wistringstream;
# 149 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ostringstream< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wostringstream;
# 150 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_stringstream< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > wstringstream;
# 151 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_filebuf< wchar_t, char_traits< wchar_t> > wfilebuf;
# 152 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ifstream< wchar_t, char_traits< wchar_t> > wifstream;
# 153 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_ofstream< wchar_t, char_traits< wchar_t> > wofstream;
# 154 "/usr/include/c++/4.4/iosfwd" 3
typedef basic_fstream< wchar_t, char_traits< wchar_t> > wfstream;
# 158 "/usr/include/c++/4.4/iosfwd" 3
}
# 41 "/usr/include/c++/4.4/exception" 3
namespace std {
# 59 "/usr/include/c++/4.4/exception" 3
class exception {
# 62 "/usr/include/c++/4.4/exception" 3
public: exception() throw() { }
# 63 "/usr/include/c++/4.4/exception" 3
virtual ~exception() throw();
# 67 "/usr/include/c++/4.4/exception" 3
virtual const char *what() const throw();
# 68 "/usr/include/c++/4.4/exception" 3
};
# 72 "/usr/include/c++/4.4/exception" 3
class bad_exception : public exception {
# 75 "/usr/include/c++/4.4/exception" 3
public: bad_exception() throw() { }
# 79 "/usr/include/c++/4.4/exception" 3
virtual ~bad_exception() throw();
# 82 "/usr/include/c++/4.4/exception" 3
virtual const char *what() const throw();
# 83 "/usr/include/c++/4.4/exception" 3
};
# 86 "/usr/include/c++/4.4/exception" 3
typedef void (*terminate_handler)(void);
# 89 "/usr/include/c++/4.4/exception" 3
typedef void (*unexpected_handler)(void);
# 92 "/usr/include/c++/4.4/exception" 3
terminate_handler set_terminate(terminate_handler) throw();
# 96 "/usr/include/c++/4.4/exception" 3
void terminate() __attribute((__noreturn__));
# 99 "/usr/include/c++/4.4/exception" 3
unexpected_handler set_unexpected(unexpected_handler) throw();
# 103 "/usr/include/c++/4.4/exception" 3
void unexpected() __attribute((__noreturn__));
# 115 "/usr/include/c++/4.4/exception" 3
bool uncaught_exception() throw();
# 118 "/usr/include/c++/4.4/exception" 3
}
# 120 "/usr/include/c++/4.4/exception" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 138 "/usr/include/c++/4.4/exception" 3
void __verbose_terminate_handler();
# 140 "/usr/include/c++/4.4/exception" 3
}
# 39 "/usr/include/c++/4.4/bits/functexcept.h" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_exception() __attribute((__noreturn__));
# 47 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_alloc() __attribute((__noreturn__));
# 51 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_cast() __attribute((__noreturn__));
# 54 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_bad_typeid() __attribute((__noreturn__));
# 58 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_logic_error(const char *) __attribute((__noreturn__));
# 61 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_domain_error(const char *) __attribute((__noreturn__));
# 64 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_invalid_argument(const char *) __attribute((__noreturn__));
# 67 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_length_error(const char *) __attribute((__noreturn__));
# 70 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_out_of_range(const char *) __attribute((__noreturn__));
# 73 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_runtime_error(const char *) __attribute((__noreturn__));
# 76 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_range_error(const char *) __attribute((__noreturn__));
# 79 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_overflow_error(const char *) __attribute((__noreturn__));
# 82 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_underflow_error(const char *) __attribute((__noreturn__));
# 86 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_ios_failure(const char *) __attribute((__noreturn__));
# 89 "/usr/include/c++/4.4/bits/functexcept.h" 3
void __throw_system_error(int) __attribute((__noreturn__));
# 91 "/usr/include/c++/4.4/bits/functexcept.h" 3
}
# 37 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value>
# 53 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
struct __numeric_traits_integer {
# 56 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const _Value __min = ((((_Value)(-1)) < 0) ? (((_Value)1) << ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0))) : ((_Value)0));
# 57 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const _Value __max = ((((_Value)(-1)) < 0) ? ((((((_Value)1) << (((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0)) - (1))) - 1) << 1) + 1) : (~((_Value)0)));
# 61 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const bool __is_signed = (((_Value)(-1)) < 0);
# 62 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __digits = ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0));
# 63 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
};
# 65 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 66 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__min;
# 68 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 69 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__max;
# 71 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const bool
# 72 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__is_signed;
# 74 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 75 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__digits;
# 97 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value>
# 98 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
struct __numeric_traits_floating {
# 101 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __max_digits10 = (2 + ((((std::__are_same< _Value, float> ::__value) ? 24 : ((std::__are_same< _Value, double> ::__value) ? 53 : 64)) * 3010) / 10000));
# 104 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const bool __is_signed = true;
# 105 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __digits10 = ((std::__are_same< _Value, float> ::__value) ? 6 : ((std::__are_same< _Value, double> ::__value) ? 15 : 18));
# 106 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
static const int __max_exponent10 = ((std::__are_same< _Value, float> ::__value) ? 38 : ((std::__are_same< _Value, double> ::__value) ? 308 : 4932));
# 107 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
};
# 109 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 110 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_digits10;
# 112 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const bool
# 113 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__is_signed;
# 115 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 116 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__digits10;
# 118 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value> const int
# 119 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_exponent10;
# 121 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
template< class _Value>
# 122 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
struct __numeric_traits : public __conditional_type< std::__is_integer< _Value> ::__value, __numeric_traits_integer< _Value> , __numeric_traits_floating< _Value> > ::__type {
# 126 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
};
# 128 "/usr/include/c++/4.4/ext/numeric_traits.h" 3
}
# 66 "/usr/include/c++/4.4/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 74 "/usr/include/c++/4.4/bits/move.h" 3
template < typename _Tp >
    inline void
    swap ( _Tp & __a, _Tp & __b )
    {



      _Tp __tmp = ( __a );
      __a = ( __b );
      __b = ( __tmp );
    }
# 88 "/usr/include/c++/4.4/bits/move.h" 3
template < typename _Tp, size_t _Nm >
    inline void
    swap ( _Tp ( & __a ) [ _Nm ], _Tp ( & __b ) [ _Nm ] )
    {
      for ( size_t __n = 0; __n < _Nm; ++ __n )
 swap ( __a [ __n ], __b [ __n ] );
    }
# 96 "/usr/include/c++/4.4/bits/move.h" 3
}
# 63 "/usr/include/c++/4.4/bits/stl_pair.h" 3
namespace std __attribute((__visibility__("default"))) {
# 66 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    struct pair
    {
      typedef _T1 first_type;
      typedef _T2 second_type;

      _T1 first;
      _T2 second;





      pair ( )
      : first ( ), second ( ) { }


      pair ( const _T1 & __a, const _T2 & __b )
      : first ( __a ), second ( __b ) { }

      template < class _U1, class _U2 >
        pair ( const pair < _U1, _U2 > & __p )
 : first ( __p . first ),
   second ( __p . second ) { }

    };
# 144 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator == ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __x . first == __y . first && __x . second == __y . second; }
# 150 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator < ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __x . first < __y . first
      || ( ! ( __y . first < __x . first ) && __x . second < __y . second ); }
# 157 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator != ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __x == __y ); }
# 163 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator > ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return __y < __x; }
# 169 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator <= ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __y < __x ); }
# 175 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline bool
    operator >= ( const pair < _T1, _T2 > & __x, const pair < _T1, _T2 > & __y )
    { return ! ( __x < __y ); }
# 213 "/usr/include/c++/4.4/bits/stl_pair.h" 3
template < class _T1, class _T2 >
    inline pair < _T1, _T2 >
    make_pair ( _T1 __x, _T2 __y )
    { return pair < _T1, _T2 > ( __x, __y ); }
# 259 "/usr/include/c++/4.4/bits/stl_pair.h" 3
}
# 68 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
namespace std __attribute((__visibility__("default"))) {
# 79 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct input_iterator_tag { };
# 81 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct output_iterator_tag { };
# 83 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct forward_iterator_tag : public input_iterator_tag { };
# 86 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct bidirectional_iterator_tag : public forward_iterator_tag { };
# 89 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct random_access_iterator_tag : public bidirectional_iterator_tag { };
# 102 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Category, class _Tp, class _Distance = ptrdiff_t, class
# 103 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
_Pointer = _Tp *, class _Reference = _Tp &>
# 104 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator {
# 107 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Category iterator_category;
# 109 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 111 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Distance difference_type;
# 113 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Pointer pointer;
# 115 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Reference reference;
# 116 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 124 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 125 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator_traits {
# 127 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::iterator_category iterator_category;
# 128 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::value_type value_type;
# 129 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::difference_type difference_type;
# 130 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::pointer pointer;
# 131 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::reference reference;
# 132 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 134 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 135 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator_traits< _Tp *> {
# 137 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 138 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 139 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 140 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp *pointer;
# 141 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp &reference;
# 142 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 144 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 145 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
struct iterator_traits< const _Tp *> {
# 147 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 148 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 149 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 150 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef const _Tp *pointer;
# 151 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
typedef const _Tp &reference;
# 152 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
};
# 158 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
template < typename _Iter >
    inline typename iterator_traits < _Iter > :: iterator_category
    __iterator_category ( const _Iter & )
    { return typename iterator_traits < _Iter > :: iterator_category ( ); }
# 165 "/usr/include/c++/4.4/bits/stl_iterator_base_types.h" 3
}
# 66 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
namespace std __attribute((__visibility__("default"))) {
# 68 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator >
    inline typename iterator_traits < _InputIterator > :: difference_type
    __distance ( _InputIterator __first, _InputIterator __last,
               input_iterator_tag )
    {



      typename iterator_traits < _InputIterator > :: difference_type __n = 0;
      while ( __first != __last )
 {
   ++ __first;
   ++ __n;
 }
      return __n;
    }
# 85 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _RandomAccessIterator >
    inline typename iterator_traits < _RandomAccessIterator > :: difference_type
    __distance ( _RandomAccessIterator __first, _RandomAccessIterator __last,
               random_access_iterator_tag )
    {



      return __last - __first;
    }
# 108 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator >
    inline typename iterator_traits < _InputIterator > :: difference_type
    distance ( _InputIterator __first, _InputIterator __last )
    {

      return std :: __distance ( __first, __last,
        std :: __iterator_category ( __first ) );
    }
# 117 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator, typename _Distance >
    inline void
    __advance ( _InputIterator & __i, _Distance __n, input_iterator_tag )
    {


      while ( __n -- )
 ++ __i;
    }
# 127 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _BidirectionalIterator, typename _Distance >
    inline void
    __advance ( _BidirectionalIterator & __i, _Distance __n,
       bidirectional_iterator_tag )
    {



      if ( __n > 0 )
        while ( __n -- )
   ++ __i;
      else
        while ( __n ++ )
   -- __i;
    }
# 143 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _RandomAccessIterator, typename _Distance >
    inline void
    __advance ( _RandomAccessIterator & __i, _Distance __n,
              random_access_iterator_tag )
    {



      __i += __n;
    }
# 166 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
template < typename _InputIterator, typename _Distance >
    inline void
    advance ( _InputIterator & __i, _Distance __n )
    {

      typename iterator_traits < _InputIterator > :: difference_type __d = __n;
      std :: __advance ( __i, __d, std :: __iterator_category ( __i ) );
    }
# 195 "/usr/include/c++/4.4/bits/stl_iterator_base_funcs.h" 3
}
# 68 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 89 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    class reverse_iterator
    : public iterator < typename iterator_traits < _Iterator > :: iterator_category,
        typename iterator_traits < _Iterator > :: value_type,
        typename iterator_traits < _Iterator > :: difference_type,
        typename iterator_traits < _Iterator > :: pointer,
                      typename iterator_traits < _Iterator > :: reference >
    {
    protected :
      _Iterator current;

    public :
      typedef _Iterator iterator_type;
      typedef typename iterator_traits < _Iterator > :: difference_type
              difference_type;
      typedef typename iterator_traits < _Iterator > :: reference reference;
      typedef typename iterator_traits < _Iterator > :: pointer pointer;

    public :






      reverse_iterator ( ) : current ( ) { }




      explicit
      reverse_iterator ( iterator_type __x ) : current ( __x ) { }




      reverse_iterator ( const reverse_iterator & __x )
      : current ( __x . current ) { }





      template < typename _Iter >
        reverse_iterator ( const reverse_iterator < _Iter > & __x )
 : current ( __x . base ( ) ) { }




      iterator_type
      base ( ) const
      { return current; }






      reference
      operator * ( ) const
      {
 _Iterator __tmp = current;
 return * -- __tmp;
      }






      pointer
      operator -> ( ) const
      { return & ( operator * ( ) ); }






      reverse_iterator &
      operator ++ ( )
      {
 -- current;
 return * this;
      }






      reverse_iterator
      operator ++ ( int )
      {
 reverse_iterator __tmp = * this;
 -- current;
 return __tmp;
      }






      reverse_iterator &
      operator -- ( )
      {
 ++ current;
 return * this;
      }






      reverse_iterator
      operator -- ( int )
      {
 reverse_iterator __tmp = * this;
 ++ current;
 return __tmp;
      }






      reverse_iterator
      operator + ( difference_type __n ) const
      { return reverse_iterator ( current - __n ); }






      reverse_iterator &
      operator += ( difference_type __n )
      {
 current -= __n;
 return * this;
      }






      reverse_iterator
      operator - ( difference_type __n ) const
      { return reverse_iterator ( current + __n ); }






      reverse_iterator &
      operator -= ( difference_type __n )
      {
 current += __n;
 return * this;
      }






      reference
      operator [ ] ( difference_type __n ) const
      { return * ( * this + __n ); }
    };
# 276 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator == ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return __x . base ( ) == __y . base ( ); }
# 282 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator < ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y . base ( ) < __x . base ( ); }
# 288 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator != ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __x == __y ); }
# 294 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator > ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y < __x; }
# 300 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator <= ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __y < __x ); }
# 306 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline bool
    operator >= ( const reverse_iterator < _Iterator > & __x,
        const reverse_iterator < _Iterator > & __y )
    { return ! ( __x < __y ); }
# 312 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline typename reverse_iterator < _Iterator > :: difference_type
    operator - ( const reverse_iterator < _Iterator > & __x,
       const reverse_iterator < _Iterator > & __y )
    { return __y . base ( ) - __x . base ( ); }
# 318 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator >
    inline reverse_iterator < _Iterator >
    operator + ( typename reverse_iterator < _Iterator > :: difference_type __n,
       const reverse_iterator < _Iterator > & __x )
    { return reverse_iterator < _Iterator > ( __x . base ( ) - __n ); }
# 326 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator == ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return __x . base ( ) == __y . base ( ); }
# 332 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator < ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )
    { return __y . base ( ) < __x . base ( ); }
# 338 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator != ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __x == __y ); }
# 344 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator > ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )
    { return __y < __x; }
# 350 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator <= ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __y < __x ); }
# 356 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >
    inline bool
    operator >= ( const reverse_iterator < _IteratorL > & __x,
        const reverse_iterator < _IteratorR > & __y )
    { return ! ( __x < __y ); }
# 362 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR >







    inline typename reverse_iterator < _IteratorL > :: difference_type
    operator - ( const reverse_iterator < _IteratorL > & __x,
       const reverse_iterator < _IteratorR > & __y )

    { return __y . base ( ) - __x . base ( ); }
# 388 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    class back_insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;

    public :

      typedef _Container container_type;


      explicit
      back_insert_iterator ( _Container & __x ) : container ( & __x ) { }

      back_insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 container -> push_back ( __value );
 return * this;
      }

      back_insert_iterator &
      operator * ( )
      { return * this; }


      back_insert_iterator &
      operator ++ ( )
      { return * this; }


      back_insert_iterator
      operator ++ ( int )
      { return * this; }
    };
# 457 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    inline back_insert_iterator < _Container >
    back_inserter ( _Container & __x )
    { return back_insert_iterator < _Container > ( __x ); }
# 472 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    class front_insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;

    public :

      typedef _Container container_type;


      explicit front_insert_iterator ( _Container & __x ) : container ( & __x ) { }

      front_insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 container -> push_front ( __value );
 return * this;
      }

      front_insert_iterator &
      operator * ( )
      { return * this; }


      front_insert_iterator &
      operator ++ ( )
      { return * this; }


      front_insert_iterator
      operator ++ ( int )
      { return * this; }
    };
# 540 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    inline front_insert_iterator < _Container >
    front_inserter ( _Container & __x )
    { return front_insert_iterator < _Container > ( __x ); }
# 559 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container >
    class insert_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    protected :
      _Container * container;
      typename _Container :: iterator iter;

    public :

      typedef _Container container_type;





      insert_iterator ( _Container & __x, typename _Container :: iterator __i )
      : container ( & __x ), iter ( __i ) { }

      insert_iterator &
      operator = ( typename _Container :: const_reference __value )
      {
 iter = container -> insert ( iter, __value );
 ++ iter;
 return * this;
      }

      insert_iterator &
      operator * ( )
      { return * this; }


      insert_iterator &
      operator ++ ( )
      { return * this; }


      insert_iterator &
      operator ++ ( int )
      { return * this; }
    };
# 646 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Container, typename _Iterator >
    inline insert_iterator < _Container >
    inserter ( _Container & __x, _Iterator __i )
    {
      return insert_iterator < _Container > ( __x,
      typename _Container :: iterator ( __i ) );
    }
# 654 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
}
# 656 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 665 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
using std::iterator_traits;
# 666 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
using std::iterator;
# 667 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    class __normal_iterator
    {
    protected :
      _Iterator _M_current;

    public :
      typedef _Iterator iterator_type;
      typedef typename iterator_traits < _Iterator > :: iterator_category
                                                             iterator_category;
      typedef typename iterator_traits < _Iterator > :: value_type value_type;
      typedef typename iterator_traits < _Iterator > :: difference_type
                                                             difference_type;
      typedef typename iterator_traits < _Iterator > :: reference reference;
      typedef typename iterator_traits < _Iterator > :: pointer pointer;

      __normal_iterator ( ) : _M_current ( _Iterator ( ) ) { }

      explicit
      __normal_iterator ( const _Iterator & __i ) : _M_current ( __i ) { }


      template < typename _Iter >
        __normal_iterator ( const __normal_iterator < _Iter,
     typename __enable_if <
              ( std :: __are_same < _Iter, typename _Container :: pointer > :: __value ),
        _Container > :: __type > & __i )
        : _M_current ( __i . base ( ) ) { }


      reference
      operator * ( ) const
      { return * _M_current; }

      pointer
      operator -> ( ) const
      { return _M_current; }

      __normal_iterator &
      operator ++ ( )
      {
 ++ _M_current;
 return * this;
      }

      __normal_iterator
      operator ++ ( int )
      { return __normal_iterator ( _M_current ++ ); }


      __normal_iterator &
      operator -- ( )
      {
 -- _M_current;
 return * this;
      }

      __normal_iterator
      operator -- ( int )
      { return __normal_iterator ( _M_current -- ); }


      reference
      operator [ ] ( const difference_type & __n ) const
      { return _M_current [ __n ]; }

      __normal_iterator &
      operator += ( const difference_type & __n )
      { _M_current += __n; return * this; }

      __normal_iterator
      operator + ( const difference_type & __n ) const
      { return __normal_iterator ( _M_current + __n ); }

      __normal_iterator &
      operator -= ( const difference_type & __n )
      { _M_current -= __n; return * this; }

      __normal_iterator
      operator - ( const difference_type & __n ) const
      { return __normal_iterator ( _M_current - __n ); }

      const _Iterator &
      base ( ) const
      { return _M_current; }
    };
# 763 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator == ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) == __rhs . base ( ); }
# 769 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator == ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) == __rhs . base ( ); }
# 775 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator != ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) != __rhs . base ( ); }
# 781 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator != ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) != __rhs . base ( ); }
# 788 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator < ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) < __rhs . base ( ); }
# 794 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator < ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) < __rhs . base ( ); }
# 800 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator > ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) > __rhs . base ( ); }
# 806 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator > ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) > __rhs . base ( ); }
# 812 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator <= ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) <= __rhs . base ( ); }
# 818 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator <= ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) <= __rhs . base ( ); }
# 824 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >
    inline bool
    operator >= ( const __normal_iterator < _IteratorL, _Container > & __lhs,
        const __normal_iterator < _IteratorR, _Container > & __rhs )
    { return __lhs . base ( ) >= __rhs . base ( ); }
# 830 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline bool
    operator >= ( const __normal_iterator < _Iterator, _Container > & __lhs,
        const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) >= __rhs . base ( ); }
# 840 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _IteratorL, typename _IteratorR, typename _Container >







    inline typename __normal_iterator < _IteratorL, _Container > :: difference_type
    operator - ( const __normal_iterator < _IteratorL, _Container > & __lhs,
       const __normal_iterator < _IteratorR, _Container > & __rhs )

    { return __lhs . base ( ) - __rhs . base ( ); }
# 854 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline typename __normal_iterator < _Iterator, _Container > :: difference_type
    operator - ( const __normal_iterator < _Iterator, _Container > & __lhs,
       const __normal_iterator < _Iterator, _Container > & __rhs )
    { return __lhs . base ( ) - __rhs . base ( ); }
# 860 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
template < typename _Iterator, typename _Container >
    inline __normal_iterator < _Iterator, _Container >
    operator + ( typename __normal_iterator < _Iterator, _Container > :: difference_type
       __n, const __normal_iterator < _Iterator, _Container > & __i )
    { return __normal_iterator < _Iterator, _Container > ( __i . base ( ) + __n ); }
# 866 "/usr/include/c++/4.4/bits/stl_iterator.h" 3
}
# 47 "/usr/include/c++/4.4/debug/debug.h" 3
namespace std {
# 49 "/usr/include/c++/4.4/debug/debug.h" 3
namespace __debug { }
# 50 "/usr/include/c++/4.4/debug/debug.h" 3
}
# 55 "/usr/include/c++/4.4/debug/debug.h" 3
namespace __gnu_debug {
# 57 "/usr/include/c++/4.4/debug/debug.h" 3
using namespace std::__debug;
# 58 "/usr/include/c++/4.4/debug/debug.h" 3
}
# 74 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 79 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _BoolType>
# 80 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __iter_swap {
# 82 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
        static void
        iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
        {
          typedef typename iterator_traits < _ForwardIterator1 > :: value_type
            _ValueType1;
          _ValueType1 __tmp = ( * __a );
          * __a = ( * __b );
          * __b = ( __tmp );
 }
# 92 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 95 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __iter_swap< true> {
# 97 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
        static void
        iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
        {
          swap ( * __a, * __b );
        }
# 103 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 115 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
    inline void
    iter_swap ( _ForwardIterator1 __a, _ForwardIterator2 __b )
    {
      typedef typename iterator_traits < _ForwardIterator1 > :: value_type
 _ValueType1;
      typedef typename iterator_traits < _ForwardIterator2 > :: value_type
 _ValueType2;
# 134 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
      typedef typename iterator_traits < _ForwardIterator1 > :: reference
 _ReferenceType1;
      typedef typename iterator_traits < _ForwardIterator2 > :: reference
 _ReferenceType2;
      std :: __iter_swap < __are_same < _ValueType1, _ValueType2 > :: __value
 && __are_same < _ValueType1 &, _ReferenceType1 > :: __value
 && __are_same < _ValueType2 &, _ReferenceType2 > :: __value > ::
 iter_swap ( __a, __b );
    }
# 156 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator1, typename _ForwardIterator2 >
    _ForwardIterator2
    swap_ranges ( _ForwardIterator1 __first1, _ForwardIterator1 __last1,
  _ForwardIterator2 __first2 )
    {





      ;

      for (; __first1 != __last1; ++ __first1, ++ __first2 )
 std :: iter_swap ( __first1, __first2 );
      return __first2;
    }
# 184 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
    inline const _Tp &
    min ( const _Tp & __a, const _Tp & __b )
    {



      if ( __b < __a )
 return __b;
      return __a;
    }
# 207 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
    inline const _Tp &
    max ( const _Tp & __a, const _Tp & __b )
    {



      if ( __a < __b )
 return __b;
      return __a;
    }
# 230 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp, typename _Compare >
    inline const _Tp &
    min ( const _Tp & __a, const _Tp & __b, _Compare __comp )
    {

      if ( __comp ( __b, __a ) )
 return __b;
      return __a;
    }
# 251 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp, typename _Compare >
    inline const _Tp &
    max ( const _Tp & __a, const _Tp & __b, _Compare __comp )
    {

      if ( __comp ( __a, __b ) )
 return __b;
      return __a;
    }
# 264 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator,
    bool _IsNormal = __is_normal_iterator < _Iterator > :: __value >
    struct __niter_base
    {
      static _Iterator
      __b ( _Iterator __it )
      { return __it; }
    };
# 273 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator >
    struct __niter_base < _Iterator, true >
    {
      static typename _Iterator :: iterator_type
      __b ( _Iterator __it )
      { return __it . base ( ); }
    };
# 282 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator,
    bool _IsMove = __is_move_iterator < _Iterator > :: __value >
    struct __miter_base
    {
      static _Iterator
      __b ( _Iterator __it )
      { return __it; }
    };
# 291 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Iterator >
    struct __miter_base < _Iterator, true >
    {
      static typename _Iterator :: iterator_type
      __b ( _Iterator __it )
      { return __it . base ( ); }
    };
# 305 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool __T3, bool __T4, class >
# 306 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move {
# 308 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
        static _OI
        __copy_m ( _II __first, _II __last, _OI __result )
        {
   for (; __first != __last; ++ __result, ++ __first )
     * __result = * __first;
   return __result;
 }
# 316 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 334 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __copy_move< false, false, random_access_iterator_tag> {
# 336 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
        static _OI
        __copy_m ( _II __first, _II __last, _OI __result )
        {
   typedef typename iterator_traits < _II > :: difference_type _Distance;
   for ( _Distance __n = __last - __first; __n > 0; -- __n )
     {
       * __result = * __first;
       ++ __first;
       ++ __result;
     }
   return __result;
 }
# 349 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 371 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _IsMove>
# 372 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move< _IsMove, true, random_access_iterator_tag> {
# 374 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
        static _Tp *
        __copy_m ( const _Tp * __first, const _Tp * __last, _Tp * __result )
        {
   __builtin_memmove ( __result, __first,
       sizeof ( _Tp ) * ( __last - __first ) );
   return __result + ( __last - __first );
 }
# 382 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 384 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _II, typename _OI >
    inline _OI
    __copy_move_a ( _II __first, _II __last, _OI __result )
    {
      typedef typename iterator_traits < _II > :: value_type _ValueTypeI;
      typedef typename iterator_traits < _OI > :: value_type _ValueTypeO;
      typedef typename iterator_traits < _II > :: iterator_category _Category;
      const bool __simple = ( __is_pod ( _ValueTypeI )
                      && __is_pointer < _II > :: __value
                      && __is_pointer < _OI > :: __value
        && __are_same < _ValueTypeI, _ValueTypeO > :: __value );

      return std :: __copy_move < _IsMove, __simple,
                       _Category > :: __copy_m ( __first, __last, __result );
    }
# 402 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class _CharT> struct char_traits;
# 405 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class istreambuf_iterator;
# 408 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class ostreambuf_iterator;
# 411 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
      ostreambuf_iterator < _CharT, char_traits < _CharT > > > :: __type
    __copy_move_a2 ( _CharT *, _CharT *,
     ostreambuf_iterator < _CharT, char_traits < _CharT > > );
# 417 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
      ostreambuf_iterator < _CharT, char_traits < _CharT > > > :: __type
    __copy_move_a2 ( const _CharT *, const _CharT *,
     ostreambuf_iterator < _CharT, char_traits < _CharT > > );
# 423 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
        _CharT * > :: __type
    __copy_move_a2 ( istreambuf_iterator < _CharT, char_traits < _CharT > >,
     istreambuf_iterator < _CharT, char_traits < _CharT > >, _CharT * );
# 429 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _II, typename _OI >
    inline _OI
    __copy_move_a2 ( _II __first, _II __last, _OI __result )
    {
      return _OI ( std :: __copy_move_a < _IsMove >
   ( std :: __niter_base < _II > :: __b ( __first ),
    std :: __niter_base < _II > :: __b ( __last ),
    std :: __niter_base < _OI > :: __b ( __result ) ) );
    }
# 456 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II, typename _OI >
    inline _OI
    copy ( _II __first, _II __last, _OI __result )
    {




      ;

      return ( std :: __copy_move_a2 < __is_move_iterator < _II > :: __value >
       ( std :: __miter_base < _II > :: __b ( __first ),
        std :: __miter_base < _II > :: __b ( __last ), __result ) );
    }
# 509 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool __T5, bool __T6, class >
# 510 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move_backward {
# 512 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
        static _BI2
        __copy_move_b ( _BI1 __first, _BI1 __last, _BI2 __result )
        {
   while ( __first != __last )
     * -- __result = * -- __last;
   return __result;
 }
# 520 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 538 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __copy_move_backward< false, false, random_access_iterator_tag> {
# 540 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
        static _BI2
        __copy_move_b ( _BI1 __first, _BI1 __last, _BI2 __result )
        {
   typename iterator_traits < _BI1 > :: difference_type __n;
   for ( __n = __last - __first; __n > 0; -- __n )
     * -- __result = * -- __last;
   return __result;
 }
# 549 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 567 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _IsMove>
# 568 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __copy_move_backward< _IsMove, true, random_access_iterator_tag> {
# 570 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
        static _Tp *
        __copy_move_b ( const _Tp * __first, const _Tp * __last, _Tp * __result )
        {
   const ptrdiff_t _Num = __last - __first;
   __builtin_memmove ( __result - _Num, __first, sizeof ( _Tp ) * _Num );
   return __result - _Num;
 }
# 578 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 580 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _BI1, typename _BI2 >
    inline _BI2
    __copy_move_backward_a ( _BI1 __first, _BI1 __last, _BI2 __result )
    {
      typedef typename iterator_traits < _BI1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _BI2 > :: value_type _ValueType2;
      typedef typename iterator_traits < _BI1 > :: iterator_category _Category;
      const bool __simple = ( __is_pod ( _ValueType1 )
                      && __is_pointer < _BI1 > :: __value
                      && __is_pointer < _BI2 > :: __value
        && __are_same < _ValueType1, _ValueType2 > :: __value );

      return std :: __copy_move_backward < _IsMove, __simple,
                                _Category > :: __copy_move_b ( __first,
         __last,
         __result );
    }
# 598 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _IsMove, typename _BI1, typename _BI2 >
    inline _BI2
    __copy_move_backward_a2 ( _BI1 __first, _BI1 __last, _BI2 __result )
    {
      return _BI2 ( std :: __copy_move_backward_a < _IsMove >
    ( std :: __niter_base < _BI1 > :: __b ( __first ),
     std :: __niter_base < _BI1 > :: __b ( __last ),
     std :: __niter_base < _BI2 > :: __b ( __result ) ) );
    }
# 626 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _BI1, typename _BI2 >
    inline _BI2
    copy_backward ( _BI1 __first, _BI1 __last, _BI2 __result )
    {






      ;

      return ( std :: __copy_move_backward_a2 < __is_move_iterator < _BI1 > :: __value >
       ( std :: __miter_base < _BI1 > :: __b ( __first ),
        std :: __miter_base < _BI1 > :: __b ( __last ), __result ) );
    }
# 684 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < ! __is_scalar < _Tp > :: __value, void > :: __type
    __fill_a ( _ForwardIterator __first, _ForwardIterator __last,
       const _Tp & __value )
    {
      for (; __first != __last; ++ __first )
 * __first = __value;
    }
# 694 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_scalar < _Tp > :: __value, void > :: __type
    __fill_a ( _ForwardIterator __first, _ForwardIterator __last,
      const _Tp & __value )
    {
      const _Tp __tmp = __value;
      for (; __first != __last; ++ __first )
 * __first = __tmp;
    }
# 706 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_byte < _Tp > :: __value, void > :: __type
    __fill_a ( _Tp * __first, _Tp * __last, const _Tp & __c )
    {
      const _Tp __tmp = __c;
      __builtin_memset ( __first, static_cast < unsigned char > ( __tmp ),
         __last - __first );
    }
# 728 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _ForwardIterator, typename _Tp >
    inline void
    fill ( _ForwardIterator __first, _ForwardIterator __last, const _Tp & __value )
    {



      ;

      std :: __fill_a ( std :: __niter_base < _ForwardIterator > :: __b ( __first ),
      std :: __niter_base < _ForwardIterator > :: __b ( __last ), __value );
    }
# 741 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _OutputIterator, typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < ! __is_scalar < _Tp > :: __value, _OutputIterator > :: __type
    __fill_n_a ( _OutputIterator __first, _Size __n, const _Tp & __value )
    {
      for (; __n > 0; -- __n, ++ __first )
 * __first = __value;
      return __first;
    }
# 751 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _OutputIterator, typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_scalar < _Tp > :: __value, _OutputIterator > :: __type
    __fill_n_a ( _OutputIterator __first, _Size __n, const _Tp & __value )
    {
      const _Tp __tmp = __value;
      for (; __n > 0; -- __n, ++ __first )
 * __first = __tmp;
      return __first;
    }
# 762 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Size, typename _Tp >
    inline typename
    __gnu_cxx :: __enable_if < __is_byte < _Tp > :: __value, _Tp * > :: __type
    __fill_n_a ( _Tp * __first, _Size __n, const _Tp & __c )
    {
      std :: __fill_a ( __first, __first + __n, __c );
      return __first + __n;
    }
# 783 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _OI, typename _Size, typename _Tp >
    inline _OI
    fill_n ( _OI __first, _Size __n, const _Tp & __value )
    {



      return _OI ( std :: __fill_n_a ( std :: __niter_base < _OI > :: __b ( __first ),
     __n, __value ) );
    }
# 794 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _BoolType>
# 795 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __equal {
# 797 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static bool
        equal ( _II1 __first1, _II1 __last1, _II2 __first2 )
        {
   for (; __first1 != __last1; ++ __first1, ++ __first2 )
     if ( ! ( * __first1 == * __first2 ) )
       return false;
   return true;
 }
# 806 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 809 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __equal< true> {
# 811 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp >
        static bool
        equal ( const _Tp * __first1, const _Tp * __last1, const _Tp * __first2 )
        {
   return ! __builtin_memcmp ( __first1, __first2, sizeof ( _Tp )
       * ( __last1 - __first1 ) );
 }
# 818 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 820 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    __equal_aux ( _II1 __first1, _II1 __last1, _II2 __first2 )
    {
      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;
      const bool __simple = ( __is_integer < _ValueType1 > :: __value
                      && __is_pointer < _II1 > :: __value
                      && __is_pointer < _II2 > :: __value
        && __are_same < _ValueType1, _ValueType2 > :: __value );

      return std :: __equal < __simple > :: equal ( __first1, __last1, __first2 );
    }
# 835 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< class , class >
# 836 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __lc_rai {
# 838 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static _II1
        __newlast1 ( _II1, _II1 __last1, _II2, _II2 )
        { return __last1; }
# 843 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II >
        static bool
        __cnd2 ( _II __first, _II __last )
        { return __first != __last; }
# 847 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 850 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __lc_rai< random_access_iterator_tag, random_access_iterator_tag> {
# 852 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _RAI1, typename _RAI2 >
        static _RAI1
        __newlast1 ( _RAI1 __first1, _RAI1 __last1,
     _RAI2 __first2, _RAI2 __last2 )
        {
   const typename iterator_traits < _RAI1 > :: difference_type
     __diff1 = __last1 - __first1;
   const typename iterator_traits < _RAI2 > :: difference_type
     __diff2 = __last2 - __first2;
   return __diff2 < __diff1 ? __first1 + __diff2 : __last1;
 }
# 864 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _RAI >
        static bool
        __cnd2 ( _RAI, _RAI )
        { return true; }
# 868 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 870 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template< bool _BoolType>
# 871 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
struct __lexicographical_compare {
# 873 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
        static bool __lc ( _II1, _II1, _II2, _II2 );
# 875 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 877 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < bool _BoolType >
    template < typename _II1, typename _II2 >
      bool
      __lexicographical_compare < _BoolType > ::
      __lc ( _II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2 )
      {
 typedef typename iterator_traits < _II1 > :: iterator_category _Category1;
 typedef typename iterator_traits < _II2 > :: iterator_category _Category2;
 typedef std :: __lc_rai < _Category1, _Category2 > __rai_type;

 __last1 = __rai_type :: __newlast1 ( __first1, __last1,
      __first2, __last2 );
 for (; __first1 != __last1 && __rai_type :: __cnd2 ( __first2, __last2 );
      ++ __first1, ++ __first2 )
   {
     if ( * __first1 < * __first2 )
       return true;
     if ( * __first2 < * __first1 )
       return false;
   }
 return __first1 == __last1 && __first2 != __last2;
      }
# 901 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template<> struct __lexicographical_compare< true> {
# 903 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _Tp, typename _Up >
        static bool
        __lc ( const _Tp * __first1, const _Tp * __last1,
      const _Up * __first2, const _Up * __last2 )
 {
   const size_t __len1 = __last1 - __first1;
   const size_t __len2 = __last2 - __first2;
   const int __result = __builtin_memcmp ( __first1, __first2,
      std :: min ( __len1, __len2 ) );
   return __result != 0 ? __result < 0 : __len1 < __len2;
 }
# 914 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
};
# 916 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    __lexicographical_compare_aux ( _II1 __first1, _II1 __last1,
      _II2 __first2, _II2 __last2 )
    {
      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;
      const bool __simple =
 ( __is_byte < _ValueType1 > :: __value && __is_byte < _ValueType2 > :: __value
  && ! __gnu_cxx :: __numeric_traits < _ValueType1 > :: __is_signed
  && ! __gnu_cxx :: __numeric_traits < _ValueType2 > :: __is_signed
  && __is_pointer < _II1 > :: __value
  && __is_pointer < _II2 > :: __value );

      return std :: __lexicographical_compare < __simple > :: __lc ( __first1, __last1,
           __first2, __last2 );
    }
# 934 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
}
# 936 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 950 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    equal ( _II1 __first1, _II1 __last1, _II2 __first2 )
    {






      ;

      return std :: __equal_aux ( std :: __niter_base < _II1 > :: __b ( __first1 ),
         std :: __niter_base < _II1 > :: __b ( __last1 ),
         std :: __niter_base < _II2 > :: __b ( __first2 ) );
    }
# 982 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _IIter1, typename _IIter2, typename _BinaryPredicate >
    inline bool
    equal ( _IIter1 __first1, _IIter1 __last1,
   _IIter2 __first2, _BinaryPredicate __binary_pred )
    {



      ;

      for (; __first1 != __last1; ++ __first1, ++ __first2 )
 if ( ! bool ( __binary_pred ( * __first1, * __first2 ) ) )
   return false;
      return true;
    }
# 1013 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2 >
    inline bool
    lexicographical_compare ( _II1 __first1, _II1 __last1,
       _II2 __first2, _II2 __last2 )
    {

      typedef typename iterator_traits < _II1 > :: value_type _ValueType1;
      typedef typename iterator_traits < _II2 > :: value_type _ValueType2;




      ;
      ;

      return std :: __lexicographical_compare_aux
 ( std :: __niter_base < _II1 > :: __b ( __first1 ),
  std :: __niter_base < _II1 > :: __b ( __last1 ),
  std :: __niter_base < _II2 > :: __b ( __first2 ),
  std :: __niter_base < _II2 > :: __b ( __last2 ) );
    }
# 1048 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _II1, typename _II2, typename _Compare >
    bool
    lexicographical_compare ( _II1 __first1, _II1 __last1,
       _II2 __first2, _II2 __last2, _Compare __comp )
    {
      typedef typename iterator_traits < _II1 > :: iterator_category _Category1;
      typedef typename iterator_traits < _II2 > :: iterator_category _Category2;
      typedef std :: __lc_rai < _Category1, _Category2 > __rai_type;




      ;
      ;

      __last1 = __rai_type :: __newlast1 ( __first1, __last1, __first2, __last2 );
      for (; __first1 != __last1 && __rai_type :: __cnd2 ( __first2, __last2 );
    ++ __first1, ++ __first2 )
 {
   if ( __comp ( * __first1, * __first2 ) )
     return true;
   if ( __comp ( * __first2, * __first1 ) )
     return false;
 }
      return __first1 == __last1 && __first2 != __last2;
    }
# 1088 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _InputIterator1, typename _InputIterator2 >
    pair < _InputIterator1, _InputIterator2 >
    mismatch ( _InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2 )
    {






      ;

      while ( __first1 != __last1 && * __first1 == * __first2 )
        {
   ++ __first1;
   ++ __first2;
        }
      return pair < _InputIterator1, _InputIterator2 > ( __first1, __first2 );
    }
# 1125 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
template < typename _InputIterator1, typename _InputIterator2,
    typename _BinaryPredicate >
    pair < _InputIterator1, _InputIterator2 >
    mismatch ( _InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _BinaryPredicate __binary_pred )
    {



      ;

      while ( __first1 != __last1 && bool ( __binary_pred ( * __first1, * __first2 ) ) )
        {
   ++ __first1;
   ++ __first2;
        }
      return pair < _InputIterator1, _InputIterator2 > ( __first1, __first2 );
    }
# 1144 "/usr/include/c++/4.4/bits/stl_algobase.h" 3
}
# 52 "/usr/include/c++/4.4/bits/char_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 64 "/usr/include/c++/4.4/bits/char_traits.h" 3
template< class _CharT>
# 65 "/usr/include/c++/4.4/bits/char_traits.h" 3
struct _Char_types {
# 67 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef unsigned long int_type;
# 68 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef std::streampos pos_type;
# 69 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef std::streamoff off_type;
# 70 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 71 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 89 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    struct char_traits
    {
      typedef _CharT char_type;
      typedef typename _Char_types < _CharT > :: int_type int_type;
      typedef typename _Char_types < _CharT > :: pos_type pos_type;
      typedef typename _Char_types < _CharT > :: off_type off_type;
      typedef typename _Char_types < _CharT > :: state_type state_type;

      static void
      assign ( char_type & __c1, const char_type & __c2 )
      { __c1 = __c2; }

      static bool
      eq ( const char_type & __c1, const char_type & __c2 )
      { return __c1 == __c2; }

      static bool
      lt ( const char_type & __c1, const char_type & __c2 )
      { return __c1 < __c2; }

      static int
      compare ( const char_type * __s1, const char_type * __s2, std :: size_t __n );

      static std :: size_t
      length ( const char_type * __s );

      static const char_type *
      find ( const char_type * __s, std :: size_t __n, const char_type & __a );

      static char_type *
      move ( char_type * __s1, const char_type * __s2, std :: size_t __n );

      static char_type *
      copy ( char_type * __s1, const char_type * __s2, std :: size_t __n );

      static char_type *
      assign ( char_type * __s, std :: size_t __n, char_type __a );

      static char_type
      to_char_type ( const int_type & __c )
      { return static_cast < char_type > ( __c ); }

      static int_type
      to_int_type ( const char_type & __c )
      { return static_cast < int_type > ( __c ); }

      static bool
      eq_int_type ( const int_type & __c1, const int_type & __c2 )
      { return __c1 == __c2; }

      static int_type
      eof ( )
      { return static_cast < int_type > ( ( - 1 ) ); }

      static int_type
      not_eof ( const int_type & __c )
      { return ! eq_int_type ( __c, eof ( ) ) ? __c : to_int_type ( char_type ( ) ); }
    };
# 149 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    int
    char_traits < _CharT > ::
    compare ( const char_type * __s1, const char_type * __s2, std :: size_t __n )
    {
      for ( std :: size_t __i = 0; __i < __n; ++ __i )
 if ( lt ( __s1 [ __i ], __s2 [ __i ] ) )
   return - 1;
 else if ( lt ( __s2 [ __i ], __s1 [ __i ] ) )
   return 1;
      return 0;
    }
# 162 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    std :: size_t
    char_traits < _CharT > ::
    length ( const char_type * __p )
    {
      std :: size_t __i = 0;
      while ( ! eq ( __p [ __i ], char_type ( ) ) )
        ++ __i;
      return __i;
    }
# 173 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    const typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    find ( const char_type * __s, std :: size_t __n, const char_type & __a )
    {
      for ( std :: size_t __i = 0; __i < __n; ++ __i )
        if ( eq ( __s [ __i ], __a ) )
          return __s + __i;
      return 0;
    }
# 184 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    move ( char_type * __s1, const char_type * __s2, std :: size_t __n )
    {
      return static_cast < _CharT * > ( __builtin_memmove ( __s1, __s2,
          __n * sizeof ( char_type ) ) );
    }
# 193 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    copy ( char_type * __s1, const char_type * __s2, std :: size_t __n )
    {

      std :: copy ( __s2, __s2 + __n, __s1 );
      return __s1;
    }
# 203 "/usr/include/c++/4.4/bits/char_traits.h" 3
template < typename _CharT >
    typename char_traits < _CharT > :: char_type *
    char_traits < _CharT > ::
    assign ( char_type * __s, std :: size_t __n, char_type __a )
    {

      std :: fill_n ( __s, __n, __a );
      return __s;
    }
# 213 "/usr/include/c++/4.4/bits/char_traits.h" 3
}
# 215 "/usr/include/c++/4.4/bits/char_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 230 "/usr/include/c++/4.4/bits/char_traits.h" 3
template< class _CharT>
# 231 "/usr/include/c++/4.4/bits/char_traits.h" 3
struct char_traits : public __gnu_cxx::char_traits< _CharT> {
# 232 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 237 "/usr/include/c++/4.4/bits/char_traits.h" 3
template<> struct char_traits< char> {
# 239 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef char char_type;
# 240 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef int int_type;
# 241 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef streampos pos_type;
# 242 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef streamoff off_type;
# 243 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 246 "/usr/include/c++/4.4/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 247 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ __c1 = __c2; }
# 250 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 251 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 254 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 255 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 258 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 259 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __builtin_memcmp(__s1, __s2, __n); }
# 262 "/usr/include/c++/4.4/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 263 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __builtin_strlen(__s); }
# 266 "/usr/include/c++/4.4/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 267 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< const char_type *>(__builtin_memchr(__s, __a, __n)); }
# 270 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 271 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memmove(__s1, __s2, __n)); }
# 274 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 275 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memcpy(__s1, __s2, __n)); }
# 278 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 279 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type *>(__builtin_memset(__s, __a, __n)); }
# 282 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 283 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< char_type>(__c); }
# 288 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 289 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< int_type>((static_cast< unsigned char>(__c))); }
# 292 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 293 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 296 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type eof()
# 297 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< int_type>((-1)); }
# 300 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 301 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return (__c == eof()) ? 0 : __c; }
# 302 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 308 "/usr/include/c++/4.4/bits/char_traits.h" 3
template<> struct char_traits< wchar_t> {
# 310 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef wchar_t char_type;
# 311 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef wint_t int_type;
# 312 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef streamoff off_type;
# 313 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef wstreampos pos_type;
# 314 "/usr/include/c++/4.4/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 317 "/usr/include/c++/4.4/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 318 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ __c1 = __c2; }
# 321 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq(const char_type &__c1, const char_type &__c2)
# 322 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 325 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool lt(const char_type &__c1, const char_type &__c2)
# 326 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 329 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 330 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemcmp(__s1, __s2, __n); }
# 333 "/usr/include/c++/4.4/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 334 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wcslen(__s); }
# 337 "/usr/include/c++/4.4/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 338 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemchr(__s, __a, __n); }
# 341 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 342 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemmove(__s1, __s2, __n); }
# 345 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 346 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemcpy(__s1, __s2, __n); }
# 349 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 350 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return wmemset(__s, __a, __n); }
# 353 "/usr/include/c++/4.4/bits/char_traits.h" 3
static char_type to_char_type(const int_type &__c)
# 354 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return (char_type)__c; }
# 357 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type to_int_type(const char_type &__c)
# 358 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return (int_type)__c; }
# 361 "/usr/include/c++/4.4/bits/char_traits.h" 3
static bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 362 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 365 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type eof()
# 366 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return static_cast< int_type>(4294967295U); }
# 369 "/usr/include/c++/4.4/bits/char_traits.h" 3
static int_type not_eof(const int_type &__c)
# 370 "/usr/include/c++/4.4/bits/char_traits.h" 3
{ return eq_int_type(__c, eof()) ? (0) : __c; }
# 371 "/usr/include/c++/4.4/bits/char_traits.h" 3
};
# 374 "/usr/include/c++/4.4/bits/char_traits.h" 3
}
# 28 "/usr/include/bits/locale.h" 3
enum {
# 29 "/usr/include/bits/locale.h" 3
__LC_CTYPE,
# 30 "/usr/include/bits/locale.h" 3
__LC_NUMERIC,
# 31 "/usr/include/bits/locale.h" 3
__LC_TIME,
# 32 "/usr/include/bits/locale.h" 3
__LC_COLLATE,
# 33 "/usr/include/bits/locale.h" 3
__LC_MONETARY,
# 34 "/usr/include/bits/locale.h" 3
__LC_MESSAGES,
# 35 "/usr/include/bits/locale.h" 3
__LC_ALL,
# 36 "/usr/include/bits/locale.h" 3
__LC_PAPER,
# 37 "/usr/include/bits/locale.h" 3
__LC_NAME,
# 38 "/usr/include/bits/locale.h" 3
__LC_ADDRESS,
# 39 "/usr/include/bits/locale.h" 3
__LC_TELEPHONE,
# 40 "/usr/include/bits/locale.h" 3
__LC_MEASUREMENT,
# 41 "/usr/include/bits/locale.h" 3
__LC_IDENTIFICATION
# 42 "/usr/include/bits/locale.h" 3
};
# 54 "/usr/include/locale.h" 3
extern "C" { struct lconv {
# 58 "/usr/include/locale.h" 3
char *decimal_point;
# 59 "/usr/include/locale.h" 3
char *thousands_sep;
# 65 "/usr/include/locale.h" 3
char *grouping;
# 71 "/usr/include/locale.h" 3
char *int_curr_symbol;
# 72 "/usr/include/locale.h" 3
char *currency_symbol;
# 73 "/usr/include/locale.h" 3
char *mon_decimal_point;
# 74 "/usr/include/locale.h" 3
char *mon_thousands_sep;
# 75 "/usr/include/locale.h" 3
char *mon_grouping;
# 76 "/usr/include/locale.h" 3
char *positive_sign;
# 77 "/usr/include/locale.h" 3
char *negative_sign;
# 78 "/usr/include/locale.h" 3
char int_frac_digits;
# 79 "/usr/include/locale.h" 3
char frac_digits;
# 81 "/usr/include/locale.h" 3
char p_cs_precedes;
# 83 "/usr/include/locale.h" 3
char p_sep_by_space;
# 85 "/usr/include/locale.h" 3
char n_cs_precedes;
# 87 "/usr/include/locale.h" 3
char n_sep_by_space;
# 94 "/usr/include/locale.h" 3
char p_sign_posn;
# 95 "/usr/include/locale.h" 3
char n_sign_posn;
# 98 "/usr/include/locale.h" 3
char int_p_cs_precedes;
# 100 "/usr/include/locale.h" 3
char int_p_sep_by_space;
# 102 "/usr/include/locale.h" 3
char int_n_cs_precedes;
# 104 "/usr/include/locale.h" 3
char int_n_sep_by_space;
# 111 "/usr/include/locale.h" 3
char int_p_sign_posn;
# 112 "/usr/include/locale.h" 3
char int_n_sign_posn;
# 121 "/usr/include/locale.h" 3
}; }
# 125 "/usr/include/locale.h" 3
extern "C" char *setlocale(int , const char * ) throw();
# 128 "/usr/include/locale.h" 3
extern "C" lconv *localeconv() throw();
# 152 "/usr/include/locale.h" 3
extern "C" __locale_t newlocale(int , const char * , __locale_t ) throw();
# 187 "/usr/include/locale.h" 3
extern "C" __locale_t duplocale(__locale_t ) throw();
# 191 "/usr/include/locale.h" 3
extern "C" void freelocale(__locale_t ) throw();
# 198 "/usr/include/locale.h" 3
extern "C" __locale_t uselocale(__locale_t ) throw();
# 53 "/usr/include/c++/4.4/clocale" 3
namespace std __attribute((__visibility__("default"))) {
# 55 "/usr/include/c++/4.4/clocale" 3
using ::lconv;
# 56 "/usr/include/c++/4.4/clocale" 3
using ::setlocale;
# 57 "/usr/include/c++/4.4/clocale" 3
using ::localeconv;
# 59 "/usr/include/c++/4.4/clocale" 3
}
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
extern "C" __typeof__(uselocale) __uselocale;
# 54 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
}
# 57 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
namespace std __attribute((__visibility__("default"))) {
# 59 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
typedef __locale_t __c_locale;
# 66 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
inline int __convert_from_v(const __c_locale &__cloc __attribute((__unused__)), char *
# 67 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__out, const int
# 68 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__size __attribute((__unused__)), const char *
# 69 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__fmt, ...)
# 70 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
{
# 72 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__c_locale __old = __gnu_cxx::__uselocale(__cloc);
# 85 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__builtin_va_list __args;
# 86 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__builtin_va_start(__args,__fmt);
# 89 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
# 94 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__builtin_va_end(__args);
# 97 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
__gnu_cxx::__uselocale(__old);
# 105 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
return __ret;
# 106 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
}
# 108 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++locale.h" 3
}
# 49 "/usr/include/ctype.h" 3
enum {
# 50 "/usr/include/ctype.h" 3
_ISupper = 256,
# 51 "/usr/include/ctype.h" 3
_ISlower = 512,
# 52 "/usr/include/ctype.h" 3
_ISalpha = 1024,
# 53 "/usr/include/ctype.h" 3
_ISdigit = 2048,
# 54 "/usr/include/ctype.h" 3
_ISxdigit = 4096,
# 55 "/usr/include/ctype.h" 3
_ISspace = 8192,
# 56 "/usr/include/ctype.h" 3
_ISprint = 16384,
# 57 "/usr/include/ctype.h" 3
_ISgraph = 32768,
# 58 "/usr/include/ctype.h" 3
_ISblank = 1,
# 59 "/usr/include/ctype.h" 3
_IScntrl,
# 60 "/usr/include/ctype.h" 3
_ISpunct = 4,
# 61 "/usr/include/ctype.h" 3
_ISalnum = 8
# 62 "/usr/include/ctype.h" 3
};
# 81 "/usr/include/ctype.h" 3
extern "C" const unsigned short **__ctype_b_loc() throw()
# 82 "/usr/include/ctype.h" 3
 __attribute((const));
# 83 "/usr/include/ctype.h" 3
extern "C" const __int32_t **__ctype_tolower_loc() throw()
# 84 "/usr/include/ctype.h" 3
 __attribute((const));
# 85 "/usr/include/ctype.h" 3
extern "C" const __int32_t **__ctype_toupper_loc() throw()
# 86 "/usr/include/ctype.h" 3
 __attribute((const));
# 102 "/usr/include/ctype.h" 3
extern "C" int isalnum(int) throw();
# 103 "/usr/include/ctype.h" 3
extern "C" int isalpha(int) throw();
# 104 "/usr/include/ctype.h" 3
extern "C" int iscntrl(int) throw();
# 105 "/usr/include/ctype.h" 3
extern "C" int isdigit(int) throw();
# 106 "/usr/include/ctype.h" 3
extern "C" int islower(int) throw();
# 107 "/usr/include/ctype.h" 3
extern "C" int isgraph(int) throw();
# 108 "/usr/include/ctype.h" 3
extern "C" int isprint(int) throw();
# 109 "/usr/include/ctype.h" 3
extern "C" int ispunct(int) throw();
# 110 "/usr/include/ctype.h" 3
extern "C" int isspace(int) throw();
# 111 "/usr/include/ctype.h" 3
extern "C" int isupper(int) throw();
# 112 "/usr/include/ctype.h" 3
extern "C" int isxdigit(int) throw();
# 116 "/usr/include/ctype.h" 3
extern "C" int tolower(int ) throw();
# 119 "/usr/include/ctype.h" 3
extern "C" int toupper(int ) throw();
# 128 "/usr/include/ctype.h" 3
extern "C" int isblank(int) throw();
# 135 "/usr/include/ctype.h" 3
extern "C" int isctype(int , int ) throw();
# 142 "/usr/include/ctype.h" 3
extern "C" int isascii(int ) throw();
# 146 "/usr/include/ctype.h" 3
extern "C" int toascii(int ) throw();
# 150 "/usr/include/ctype.h" 3
extern "C" int _toupper(int) throw();
# 151 "/usr/include/ctype.h" 3
extern "C" int _tolower(int) throw();
# 247 "/usr/include/ctype.h" 3
extern "C" int isalnum_l(int, __locale_t) throw();
# 248 "/usr/include/ctype.h" 3
extern "C" int isalpha_l(int, __locale_t) throw();
# 249 "/usr/include/ctype.h" 3
extern "C" int iscntrl_l(int, __locale_t) throw();
# 250 "/usr/include/ctype.h" 3
extern "C" int isdigit_l(int, __locale_t) throw();
# 251 "/usr/include/ctype.h" 3
extern "C" int islower_l(int, __locale_t) throw();
# 252 "/usr/include/ctype.h" 3
extern "C" int isgraph_l(int, __locale_t) throw();
# 253 "/usr/include/ctype.h" 3
extern "C" int isprint_l(int, __locale_t) throw();
# 254 "/usr/include/ctype.h" 3
extern "C" int ispunct_l(int, __locale_t) throw();
# 255 "/usr/include/ctype.h" 3
extern "C" int isspace_l(int, __locale_t) throw();
# 256 "/usr/include/ctype.h" 3
extern "C" int isupper_l(int, __locale_t) throw();
# 257 "/usr/include/ctype.h" 3
extern "C" int isxdigit_l(int, __locale_t) throw();
# 259 "/usr/include/ctype.h" 3
extern "C" int isblank_l(int, __locale_t) throw();
# 263 "/usr/include/ctype.h" 3
extern "C" int __tolower_l(int , __locale_t ) throw();
# 264 "/usr/include/ctype.h" 3
extern "C" int tolower_l(int , __locale_t ) throw();
# 267 "/usr/include/ctype.h" 3
extern "C" int __toupper_l(int , __locale_t ) throw();
# 268 "/usr/include/ctype.h" 3
extern "C" int toupper_l(int , __locale_t ) throw();
# 64 "/usr/include/c++/4.4/cctype" 3
namespace std __attribute((__visibility__("default"))) {
# 66 "/usr/include/c++/4.4/cctype" 3
using ::isalnum;
# 67 "/usr/include/c++/4.4/cctype" 3
using ::isalpha;
# 68 "/usr/include/c++/4.4/cctype" 3
using ::iscntrl;
# 69 "/usr/include/c++/4.4/cctype" 3
using ::isdigit;
# 70 "/usr/include/c++/4.4/cctype" 3
using ::isgraph;
# 71 "/usr/include/c++/4.4/cctype" 3
using ::islower;
# 72 "/usr/include/c++/4.4/cctype" 3
using ::isprint;
# 73 "/usr/include/c++/4.4/cctype" 3
using ::ispunct;
# 74 "/usr/include/c++/4.4/cctype" 3
using ::isspace;
# 75 "/usr/include/c++/4.4/cctype" 3
using ::isupper;
# 76 "/usr/include/c++/4.4/cctype" 3
using ::isxdigit;
# 77 "/usr/include/c++/4.4/cctype" 3
using ::tolower;
# 78 "/usr/include/c++/4.4/cctype" 3
using ::toupper;
# 80 "/usr/include/c++/4.4/cctype" 3
}
# 46 "/usr/include/c++/4.4/bits/localefwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 49 "/usr/include/c++/4.4/bits/localefwd.h" 3
class locale;
# 51 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _Facet >
    bool
    has_facet ( const locale & ) throw ( );
# 55 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _Facet >
    const _Facet &
    use_facet ( const locale & );
# 60 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isspace ( _CharT, const locale & );
# 64 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isprint ( _CharT, const locale & );
# 68 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    iscntrl ( _CharT, const locale & );
# 72 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isupper ( _CharT, const locale & );
# 76 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    islower ( _CharT, const locale & );
# 80 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isalpha ( _CharT, const locale & );
# 84 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isdigit ( _CharT, const locale & );
# 88 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    ispunct ( _CharT, const locale & );
# 92 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isxdigit ( _CharT, const locale & );
# 96 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isalnum ( _CharT, const locale & );
# 100 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    bool
    isgraph ( _CharT, const locale & );
# 104 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    _CharT
    toupper ( _CharT, const locale & );
# 108 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    _CharT
    tolower ( _CharT, const locale & );
# 113 "/usr/include/c++/4.4/bits/localefwd.h" 3
struct ctype_base;
# 114 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    class ctype;
# 116 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class ctype< char> ;
# 118 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class ctype< wchar_t> ;
# 120 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    class ctype_byname;
# 124 "/usr/include/c++/4.4/bits/localefwd.h" 3
class codecvt_base;
# 125 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class codecvt;
# 127 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class codecvt< char, char, __mbstate_t> ;
# 129 "/usr/include/c++/4.4/bits/localefwd.h" 3
template<> class codecvt< wchar_t, char, __mbstate_t> ;
# 131 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class codecvt_byname;
# 136 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT, typename _InIter = istreambuf_iterator < _CharT > >
    class num_get;
# 138 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT, typename _OutIter = ostreambuf_iterator < _CharT > >
    class num_put;
# 141 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT > class numpunct;
# 142 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT > class numpunct_byname;
# 145 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT >
    class collate;
# 147 "/usr/include/c++/4.4/bits/localefwd.h" 3
template < typename _CharT > class
    collate_byname;
# 151 "/usr/include/c++/4.4/bits/localefwd.h" 3
class time_base;
# 152 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class time_get;
# 154 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class time_get_byname;
# 156 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class time_put;
# 158 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class time_put_byname;
# 162 "/usr/include/c++/4.4/bits/localefwd.h" 3
class money_base;
# 164 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class money_get;
# 166 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class money_put;
# 169 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct;
# 171 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct_byname;
# 175 "/usr/include/c++/4.4/bits/localefwd.h" 3
class messages_base;
# 176 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT> class messages;
# 178 "/usr/include/c++/4.4/bits/localefwd.h" 3
template< class _CharT> class messages_byname;
# 181 "/usr/include/c++/4.4/bits/localefwd.h" 3
}
# 71 "/usr/include/bits/sched.h" 3
struct sched_param {
# 73 "/usr/include/bits/sched.h" 3
int __sched_priority;
# 74 "/usr/include/bits/sched.h" 3
};
# 80 "/usr/include/bits/sched.h" 3
extern "C" int clone(int (* )(void * ), void * , int , void * , ...) throw();
# 84 "/usr/include/bits/sched.h" 3
extern "C" int unshare(int ) throw();
# 87 "/usr/include/bits/sched.h" 3
extern "C" int sched_getcpu() throw();
# 98 "/usr/include/bits/sched.h" 3
struct __sched_param {
# 100 "/usr/include/bits/sched.h" 3
int __sched_priority;
# 101 "/usr/include/bits/sched.h" 3
};
# 113 "/usr/include/bits/sched.h" 3
typedef unsigned long __cpu_mask;
# 123 "/usr/include/bits/sched.h" 3
typedef
# 121 "/usr/include/bits/sched.h" 3
struct {
# 122 "/usr/include/bits/sched.h" 3
__cpu_mask __bits[(1024) / ((8) * sizeof(__cpu_mask))];
# 123 "/usr/include/bits/sched.h" 3
} cpu_set_t;
# 198 "/usr/include/bits/sched.h" 3
extern "C" int __sched_cpucount(size_t , const cpu_set_t * ) throw();
# 200 "/usr/include/bits/sched.h" 3
extern "C" cpu_set_t *__sched_cpualloc(size_t ) throw();
# 201 "/usr/include/bits/sched.h" 3
extern "C" void __sched_cpufree(cpu_set_t * ) throw();
# 43 "/usr/include/sched.h" 3
extern "C" int sched_setparam(__pid_t , const sched_param * ) throw();
# 47 "/usr/include/sched.h" 3
extern "C" int sched_getparam(__pid_t , sched_param * ) throw();
# 50 "/usr/include/sched.h" 3
extern "C" int sched_setscheduler(__pid_t , int , const sched_param * ) throw();
# 54 "/usr/include/sched.h" 3
extern "C" int sched_getscheduler(__pid_t ) throw();
# 57 "/usr/include/sched.h" 3
extern "C" int sched_yield() throw();
# 60 "/usr/include/sched.h" 3
extern "C" int sched_get_priority_max(int ) throw();
# 63 "/usr/include/sched.h" 3
extern "C" int sched_get_priority_min(int ) throw();
# 66 "/usr/include/sched.h" 3
extern "C" int sched_rr_get_interval(__pid_t , timespec * ) throw();
# 110 "/usr/include/sched.h" 3
extern "C" int sched_setaffinity(__pid_t , size_t , const cpu_set_t * ) throw();
# 114 "/usr/include/sched.h" 3
extern "C" int sched_getaffinity(__pid_t , size_t , cpu_set_t * ) throw();
# 32 "/usr/include/bits/setjmp.h" 3
typedef long __jmp_buf[8];
# 37 "/usr/include/pthread.h" 3
enum {
# 38 "/usr/include/pthread.h" 3
PTHREAD_CREATE_JOINABLE,
# 40 "/usr/include/pthread.h" 3
PTHREAD_CREATE_DETACHED
# 42 "/usr/include/pthread.h" 3
};
# 47 "/usr/include/pthread.h" 3
enum {
# 48 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_TIMED_NP,
# 49 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE_NP,
# 50 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK_NP,
# 51 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ADAPTIVE_NP,
# 54 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_NORMAL = 0,
# 55 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE,
# 56 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK,
# 57 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_DEFAULT = 0,
# 61 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_FAST_NP = 0
# 63 "/usr/include/pthread.h" 3
};
# 69 "/usr/include/pthread.h" 3
enum {
# 70 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED,
# 71 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED_NP = 0,
# 72 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST,
# 73 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST_NP = 1
# 74 "/usr/include/pthread.h" 3
};
# 81 "/usr/include/pthread.h" 3
enum {
# 82 "/usr/include/pthread.h" 3
PTHREAD_PRIO_NONE,
# 83 "/usr/include/pthread.h" 3
PTHREAD_PRIO_INHERIT,
# 84 "/usr/include/pthread.h" 3
PTHREAD_PRIO_PROTECT
# 85 "/usr/include/pthread.h" 3
};
# 118 "/usr/include/pthread.h" 3
enum {
# 119 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_READER_NP,
# 120 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NP,
# 121 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
# 122 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_DEFAULT_NP = 0
# 123 "/usr/include/pthread.h" 3
};
# 150 "/usr/include/pthread.h" 3
enum {
# 151 "/usr/include/pthread.h" 3
PTHREAD_INHERIT_SCHED,
# 153 "/usr/include/pthread.h" 3
PTHREAD_EXPLICIT_SCHED
# 155 "/usr/include/pthread.h" 3
};
# 160 "/usr/include/pthread.h" 3
enum {
# 161 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_SYSTEM,
# 163 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_PROCESS
# 165 "/usr/include/pthread.h" 3
};
# 170 "/usr/include/pthread.h" 3
enum {
# 171 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_PRIVATE,
# 173 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_SHARED
# 175 "/usr/include/pthread.h" 3
};
# 184 "/usr/include/pthread.h" 3
struct _pthread_cleanup_buffer {
# 186 "/usr/include/pthread.h" 3
void (*__routine)(void *);
# 187 "/usr/include/pthread.h" 3
void *__arg;
# 188 "/usr/include/pthread.h" 3
int __canceltype;
# 189 "/usr/include/pthread.h" 3
_pthread_cleanup_buffer *__prev;
# 190 "/usr/include/pthread.h" 3
};
# 194 "/usr/include/pthread.h" 3
enum {
# 195 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ENABLE,
# 197 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DISABLE
# 199 "/usr/include/pthread.h" 3
};
# 201 "/usr/include/pthread.h" 3
enum {
# 202 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DEFERRED,
# 204 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ASYNCHRONOUS
# 206 "/usr/include/pthread.h" 3
};
# 227 "/usr/include/pthread.h" 3
extern "C" int pthread_create(pthread_t *__restrict__ , const pthread_attr_t *__restrict__ , void *(* )(void *), void *__restrict__ ) throw()
# 230 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 236 "/usr/include/pthread.h" 3
extern "C" void pthread_exit(void * ) __attribute((__noreturn__));
# 244 "/usr/include/pthread.h" 3
extern "C" int pthread_join(pthread_t , void ** );
# 249 "/usr/include/pthread.h" 3
extern "C" int pthread_tryjoin_np(pthread_t , void ** ) throw();
# 257 "/usr/include/pthread.h" 3
extern "C" int pthread_timedjoin_np(pthread_t , void ** , const timespec * );
# 265 "/usr/include/pthread.h" 3
extern "C" int pthread_detach(pthread_t ) throw();
# 269 "/usr/include/pthread.h" 3
extern "C" pthread_t pthread_self() throw() __attribute((const));
# 272 "/usr/include/pthread.h" 3
extern "C" int pthread_equal(pthread_t , pthread_t ) throw();
# 280 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_init(pthread_attr_t * ) throw() __attribute((__nonnull__(1)));
# 283 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_destroy(pthread_attr_t * ) throw()
# 284 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 287 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getdetachstate(const pthread_attr_t * , int * ) throw()
# 289 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 292 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setdetachstate(pthread_attr_t * , int ) throw()
# 294 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 298 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getguardsize(const pthread_attr_t * , size_t * ) throw()
# 300 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 303 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setguardsize(pthread_attr_t * , size_t ) throw()
# 305 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 309 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getschedparam(const pthread_attr_t *__restrict__ , sched_param *__restrict__ ) throw()
# 312 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 315 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setschedparam(pthread_attr_t *__restrict__ , const sched_param *__restrict__ ) throw()
# 317 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 320 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getschedpolicy(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 322 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 325 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setschedpolicy(pthread_attr_t * , int ) throw()
# 326 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 329 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getinheritsched(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 331 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 334 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setinheritsched(pthread_attr_t * , int ) throw()
# 336 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 340 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getscope(const pthread_attr_t *__restrict__ , int *__restrict__ ) throw()
# 342 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 345 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setscope(pthread_attr_t * , int ) throw()
# 346 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 349 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstackaddr(const pthread_attr_t *__restrict__ , void **__restrict__ ) throw()
# 351 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__deprecated__));
# 357 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstackaddr(pthread_attr_t * , void * ) throw()
# 359 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1))) __attribute((__deprecated__));
# 362 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstacksize(const pthread_attr_t *__restrict__ , size_t *__restrict__ ) throw()
# 364 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 369 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstacksize(pthread_attr_t * , size_t ) throw()
# 371 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 375 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getstack(const pthread_attr_t *__restrict__ , void **__restrict__ , size_t *__restrict__ ) throw()
# 378 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 383 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setstack(pthread_attr_t * , void * , size_t ) throw()
# 384 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 390 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_setaffinity_np(pthread_attr_t * , size_t , const cpu_set_t * ) throw()
# 393 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 397 "/usr/include/pthread.h" 3
extern "C" int pthread_attr_getaffinity_np(const pthread_attr_t * , size_t , cpu_set_t * ) throw()
# 400 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 406 "/usr/include/pthread.h" 3
extern "C" int pthread_getattr_np(pthread_t , pthread_attr_t * ) throw()
# 407 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 415 "/usr/include/pthread.h" 3
extern "C" int pthread_setschedparam(pthread_t , int , const sched_param * ) throw()
# 417 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 420 "/usr/include/pthread.h" 3
extern "C" int pthread_getschedparam(pthread_t , int *__restrict__ , sched_param *__restrict__ ) throw()
# 423 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2, 3)));
# 426 "/usr/include/pthread.h" 3
extern "C" int pthread_setschedprio(pthread_t , int ) throw();
# 432 "/usr/include/pthread.h" 3
extern "C" int pthread_getconcurrency() throw();
# 435 "/usr/include/pthread.h" 3
extern "C" int pthread_setconcurrency(int ) throw();
# 443 "/usr/include/pthread.h" 3
extern "C" int pthread_yield() throw();
# 448 "/usr/include/pthread.h" 3
extern "C" int pthread_setaffinity_np(pthread_t , size_t , const cpu_set_t * ) throw()
# 450 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 453 "/usr/include/pthread.h" 3
extern "C" int pthread_getaffinity_np(pthread_t , size_t , cpu_set_t * ) throw()
# 455 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 468 "/usr/include/pthread.h" 3
extern "C" int pthread_once(pthread_once_t * , void (* )(void))
# 469 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 480 "/usr/include/pthread.h" 3
extern "C" int pthread_setcancelstate(int , int * );
# 484 "/usr/include/pthread.h" 3
extern "C" int pthread_setcanceltype(int , int * );
# 487 "/usr/include/pthread.h" 3
extern "C" int pthread_cancel(pthread_t );
# 492 "/usr/include/pthread.h" 3
extern "C" void pthread_testcancel();
# 505 "/usr/include/pthread.h" 3
extern "C" { typedef
# 498 "/usr/include/pthread.h" 3
struct {
# 500 "/usr/include/pthread.h" 3
struct {
# 501 "/usr/include/pthread.h" 3
__jmp_buf __cancel_jmp_buf;
# 502 "/usr/include/pthread.h" 3
int __mask_was_saved;
# 503 "/usr/include/pthread.h" 3
} __cancel_jmp_buf[1];
# 504 "/usr/include/pthread.h" 3
void *__pad[4];
# 505 "/usr/include/pthread.h" 3
} __pthread_unwind_buf_t __attribute((__aligned__)); }
# 514 "/usr/include/pthread.h" 3
extern "C" { struct __pthread_cleanup_frame {
# 516 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 517 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 518 "/usr/include/pthread.h" 3
int __do_it;
# 519 "/usr/include/pthread.h" 3
int __cancel_type;
# 520 "/usr/include/pthread.h" 3
}; }
# 525 "/usr/include/pthread.h" 3
extern "C" { class __pthread_cleanup_class {
# 527 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 528 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 529 "/usr/include/pthread.h" 3
int __do_it;
# 530 "/usr/include/pthread.h" 3
int __cancel_type;
# 533 "/usr/include/pthread.h" 3
public: __pthread_cleanup_class(void (*__fct)(void *), void *__arg) : __cancel_routine(__fct), __cancel_arg(__arg), __do_it(1)
# 534 "/usr/include/pthread.h" 3
{ }
# 535 "/usr/include/pthread.h" 3
~__pthread_cleanup_class() { if (__do_it) { (__cancel_routine)(__cancel_arg); } }
# 536 "/usr/include/pthread.h" 3
void __setdoit(int __newval) { (__do_it) = __newval; }
# 537 "/usr/include/pthread.h" 3
void __defer() { pthread_setcanceltype(PTHREAD_CANCEL_DEFERRED, &(__cancel_type));
# 538 "/usr/include/pthread.h" 3
}
# 539 "/usr/include/pthread.h" 3
void __restore() const { pthread_setcanceltype(__cancel_type, 0); }
# 540 "/usr/include/pthread.h" 3
}; }
# 716 "/usr/include/pthread.h" 3
struct __jmp_buf_tag;
# 717 "/usr/include/pthread.h" 3
extern "C" int __sigsetjmp(__jmp_buf_tag * , int ) throw();
# 723 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_init(pthread_mutex_t * , const pthread_mutexattr_t * ) throw()
# 725 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 728 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_destroy(pthread_mutex_t * ) throw()
# 729 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 732 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_trylock(pthread_mutex_t * ) throw()
# 733 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 736 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_lock(pthread_mutex_t * ) throw()
# 737 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 741 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_timedlock(pthread_mutex_t *__restrict__ , const timespec *__restrict__ ) throw()
# 743 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 747 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_unlock(pthread_mutex_t * ) throw()
# 748 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 753 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_getprioceiling(const pthread_mutex_t *__restrict__ , int *__restrict__ ) throw()
# 756 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 760 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_setprioceiling(pthread_mutex_t *__restrict__ , int , int *__restrict__ ) throw()
# 763 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 769 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_consistent_np(pthread_mutex_t * ) throw()
# 770 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 772 "/usr/include/pthread.h" 3
extern "C" int pthread_mutex_consistent_np(pthread_mutex_t * ) throw()
# 773 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 782 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_init(pthread_mutexattr_t * ) throw()
# 783 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 786 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_destroy(pthread_mutexattr_t * ) throw()
# 787 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 790 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getpshared(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 793 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 796 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setpshared(pthread_mutexattr_t * , int ) throw()
# 798 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 802 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_gettype(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 804 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 809 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_settype(pthread_mutexattr_t * , int ) throw()
# 810 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 813 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 816 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 820 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setprotocol(pthread_mutexattr_t * , int ) throw()
# 822 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 825 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *__restrict__ , int *__restrict__ ) throw()
# 828 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 831 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setprioceiling(pthread_mutexattr_t * , int ) throw()
# 833 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 838 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getrobust(const pthread_mutexattr_t * , int * ) throw()
# 840 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 842 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t * , int * ) throw()
# 844 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 848 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setrobust(pthread_mutexattr_t * , int ) throw()
# 850 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 852 "/usr/include/pthread.h" 3
extern "C" int pthread_mutexattr_setrobust_np(pthread_mutexattr_t * , int ) throw()
# 854 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 864 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_init(pthread_rwlock_t *__restrict__ , const pthread_rwlockattr_t *__restrict__ ) throw()
# 866 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 869 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_destroy(pthread_rwlock_t * ) throw()
# 870 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 873 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_rdlock(pthread_rwlock_t * ) throw()
# 874 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 877 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_tryrdlock(pthread_rwlock_t * ) throw()
# 878 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 882 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_timedrdlock(pthread_rwlock_t *__restrict__ , const timespec *__restrict__ ) throw()
# 884 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 888 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_wrlock(pthread_rwlock_t * ) throw()
# 889 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 892 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_trywrlock(pthread_rwlock_t * ) throw()
# 893 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 897 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_timedwrlock(pthread_rwlock_t *__restrict__ , const timespec *__restrict__ ) throw()
# 899 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 903 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlock_unlock(pthread_rwlock_t * ) throw()
# 904 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 910 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_init(pthread_rwlockattr_t * ) throw()
# 911 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 914 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_destroy(pthread_rwlockattr_t * ) throw()
# 915 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 918 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *__restrict__ , int *__restrict__ ) throw()
# 921 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 924 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_setpshared(pthread_rwlockattr_t * , int ) throw()
# 926 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 929 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *__restrict__ , int *__restrict__ ) throw()
# 932 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 935 "/usr/include/pthread.h" 3
extern "C" int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t * , int ) throw()
# 936 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 944 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_init(pthread_cond_t *__restrict__ , const pthread_condattr_t *__restrict__ ) throw()
# 946 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 949 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_destroy(pthread_cond_t * ) throw()
# 950 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 953 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_signal(pthread_cond_t * ) throw()
# 954 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 957 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_broadcast(pthread_cond_t * ) throw()
# 958 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 965 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_wait(pthread_cond_t *__restrict__ , pthread_mutex_t *__restrict__ )
# 967 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 976 "/usr/include/pthread.h" 3
extern "C" int pthread_cond_timedwait(pthread_cond_t *__restrict__ , pthread_mutex_t *__restrict__ , const timespec *__restrict__ )
# 979 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 984 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_init(pthread_condattr_t * ) throw()
# 985 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 988 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_destroy(pthread_condattr_t * ) throw()
# 989 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 992 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_getpshared(const pthread_condattr_t *__restrict__ , int *__restrict__ ) throw()
# 995 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 998 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_setpshared(pthread_condattr_t * , int ) throw()
# 999 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1003 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_getclock(const pthread_condattr_t *__restrict__ , __clockid_t *__restrict__ ) throw()
# 1006 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1009 "/usr/include/pthread.h" 3
extern "C" int pthread_condattr_setclock(pthread_condattr_t * , __clockid_t ) throw()
# 1011 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1020 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_init(pthread_spinlock_t * , int ) throw()
# 1021 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1024 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_destroy(pthread_spinlock_t * ) throw()
# 1025 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1028 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_lock(pthread_spinlock_t * ) throw()
# 1029 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1032 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_trylock(pthread_spinlock_t * ) throw()
# 1033 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1036 "/usr/include/pthread.h" 3
extern "C" int pthread_spin_unlock(pthread_spinlock_t * ) throw()
# 1037 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1044 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_init(pthread_barrier_t *__restrict__ , const pthread_barrierattr_t *__restrict__ , unsigned ) throw()
# 1047 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1050 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_destroy(pthread_barrier_t * ) throw()
# 1051 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1054 "/usr/include/pthread.h" 3
extern "C" int pthread_barrier_wait(pthread_barrier_t * ) throw()
# 1055 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1059 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_init(pthread_barrierattr_t * ) throw()
# 1060 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1063 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_destroy(pthread_barrierattr_t * ) throw()
# 1064 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1067 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_getpshared(const pthread_barrierattr_t *__restrict__ , int *__restrict__ ) throw()
# 1070 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1073 "/usr/include/pthread.h" 3
extern "C" int pthread_barrierattr_setpshared(pthread_barrierattr_t * , int ) throw()
# 1075 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1087 "/usr/include/pthread.h" 3
extern "C" int pthread_key_create(pthread_key_t * , void (* )(void *)) throw()
# 1089 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1092 "/usr/include/pthread.h" 3
extern "C" int pthread_key_delete(pthread_key_t ) throw();
# 1095 "/usr/include/pthread.h" 3
extern "C" void *pthread_getspecific(pthread_key_t ) throw();
# 1098 "/usr/include/pthread.h" 3
extern "C" int pthread_setspecific(pthread_key_t , const void * ) throw();
# 1104 "/usr/include/pthread.h" 3
extern "C" int pthread_getcpuclockid(pthread_t , __clockid_t * ) throw()
# 1106 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 1121 "/usr/include/pthread.h" 3
extern "C" int pthread_atfork(void (* )(void), void (* )(void), void (* )(void)) throw();
# 268 "/usr/include/unistd.h" 3
extern "C" { typedef __intptr_t intptr_t; }
# 275 "/usr/include/unistd.h" 3
extern "C" { typedef __socklen_t socklen_t; }
# 288 "/usr/include/unistd.h" 3
extern "C" int access(const char * , int ) throw() __attribute((__nonnull__(1)));
# 293 "/usr/include/unistd.h" 3
extern "C" int euidaccess(const char * , int ) throw()
# 294 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 297 "/usr/include/unistd.h" 3
extern "C" int eaccess(const char * , int ) throw()
# 298 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 305 "/usr/include/unistd.h" 3
extern "C" int faccessat(int , const char * , int , int ) throw()
# 306 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 331 "/usr/include/unistd.h" 3
extern "C" __off_t lseek(int , __off_t , int ) throw();
# 342 "/usr/include/unistd.h" 3
extern "C" __off64_t lseek64(int , __off64_t , int ) throw();
# 350 "/usr/include/unistd.h" 3
extern "C" int close(int );
# 357 "/usr/include/unistd.h" 3
extern "C" ssize_t read(int , void * , size_t );
# 363 "/usr/include/unistd.h" 3
extern "C" ssize_t write(int , const void * , size_t );
# 373 "/usr/include/unistd.h" 3
extern "C" ssize_t pread(int , void * , size_t , __off_t );
# 381 "/usr/include/unistd.h" 3
extern "C" ssize_t pwrite(int , const void * , size_t , __off_t );
# 401 "/usr/include/unistd.h" 3
extern "C" ssize_t pread64(int , void * , size_t , __off64_t );
# 405 "/usr/include/unistd.h" 3
extern "C" ssize_t pwrite64(int , const void * , size_t , __off64_t );
# 414 "/usr/include/unistd.h" 3
extern "C" int pipe(int [2]) throw();
# 419 "/usr/include/unistd.h" 3
extern "C" int pipe2(int [2], int ) throw();
# 429 "/usr/include/unistd.h" 3
extern "C" unsigned alarm(unsigned ) throw();
# 441 "/usr/include/unistd.h" 3
extern "C" unsigned sleep(unsigned );
# 448 "/usr/include/unistd.h" 3
extern "C" __useconds_t ualarm(__useconds_t , __useconds_t ) throw();
# 456 "/usr/include/unistd.h" 3
extern "C" int usleep(__useconds_t );
# 465 "/usr/include/unistd.h" 3
extern "C" int pause();
# 469 "/usr/include/unistd.h" 3
extern "C" int chown(const char * , __uid_t , __gid_t ) throw()
# 470 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 474 "/usr/include/unistd.h" 3
extern "C" int fchown(int , __uid_t , __gid_t ) throw();
# 479 "/usr/include/unistd.h" 3
extern "C" int lchown(const char * , __uid_t , __gid_t ) throw()
# 480 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 487 "/usr/include/unistd.h" 3
extern "C" int fchownat(int , const char * , __uid_t , __gid_t , int ) throw()
# 489 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 493 "/usr/include/unistd.h" 3
extern "C" int chdir(const char * ) throw() __attribute((__nonnull__(1)));
# 497 "/usr/include/unistd.h" 3
extern "C" int fchdir(int ) throw();
# 507 "/usr/include/unistd.h" 3
extern "C" char *getcwd(char * , size_t ) throw();
# 513 "/usr/include/unistd.h" 3
extern "C" char *get_current_dir_name() throw();
# 520 "/usr/include/unistd.h" 3
extern "C" char *getwd(char * ) throw()
# 521 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1))) __attribute((__deprecated__));
# 526 "/usr/include/unistd.h" 3
extern "C" int dup(int ) throw();
# 529 "/usr/include/unistd.h" 3
extern "C" int dup2(int , int ) throw();
# 534 "/usr/include/unistd.h" 3
extern "C" int dup3(int , int , int ) throw();
# 538 "/usr/include/unistd.h" 3
extern "C" { extern char **__environ; }
# 540 "/usr/include/unistd.h" 3
extern "C" { extern char **environ; }
# 546 "/usr/include/unistd.h" 3
extern "C" int execve(const char * , char *const [], char *const []) throw()
# 547 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 552 "/usr/include/unistd.h" 3
extern "C" int fexecve(int , char *const [], char *const []) throw();
# 558 "/usr/include/unistd.h" 3
extern "C" int execv(const char * , char *const []) throw()
# 559 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 563 "/usr/include/unistd.h" 3
extern "C" int execle(const char * , const char * , ...) throw()
# 564 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 568 "/usr/include/unistd.h" 3
extern "C" int execl(const char * , const char * , ...) throw()
# 569 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 573 "/usr/include/unistd.h" 3
extern "C" int execvp(const char * , char *const []) throw()
# 574 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 579 "/usr/include/unistd.h" 3
extern "C" int execlp(const char * , const char * , ...) throw()
# 580 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 585 "/usr/include/unistd.h" 3
extern "C" int execvpe(const char * , char *const [], char *const []) throw()
# 587 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 593 "/usr/include/unistd.h" 3
extern "C" int nice(int ) throw();
# 598 "/usr/include/unistd.h" 3
extern "C" void _exit(int ) __attribute((__noreturn__));
# 27 "/usr/include/bits/confname.h" 3
enum {
# 28 "/usr/include/bits/confname.h" 3
_PC_LINK_MAX,
# 30 "/usr/include/bits/confname.h" 3
_PC_MAX_CANON,
# 32 "/usr/include/bits/confname.h" 3
_PC_MAX_INPUT,
# 34 "/usr/include/bits/confname.h" 3
_PC_NAME_MAX,
# 36 "/usr/include/bits/confname.h" 3
_PC_PATH_MAX,
# 38 "/usr/include/bits/confname.h" 3
_PC_PIPE_BUF,
# 40 "/usr/include/bits/confname.h" 3
_PC_CHOWN_RESTRICTED,
# 42 "/usr/include/bits/confname.h" 3
_PC_NO_TRUNC,
# 44 "/usr/include/bits/confname.h" 3
_PC_VDISABLE,
# 46 "/usr/include/bits/confname.h" 3
_PC_SYNC_IO,
# 48 "/usr/include/bits/confname.h" 3
_PC_ASYNC_IO,
# 50 "/usr/include/bits/confname.h" 3
_PC_PRIO_IO,
# 52 "/usr/include/bits/confname.h" 3
_PC_SOCK_MAXBUF,
# 54 "/usr/include/bits/confname.h" 3
_PC_FILESIZEBITS,
# 56 "/usr/include/bits/confname.h" 3
_PC_REC_INCR_XFER_SIZE,
# 58 "/usr/include/bits/confname.h" 3
_PC_REC_MAX_XFER_SIZE,
# 60 "/usr/include/bits/confname.h" 3
_PC_REC_MIN_XFER_SIZE,
# 62 "/usr/include/bits/confname.h" 3
_PC_REC_XFER_ALIGN,
# 64 "/usr/include/bits/confname.h" 3
_PC_ALLOC_SIZE_MIN,
# 66 "/usr/include/bits/confname.h" 3
_PC_SYMLINK_MAX,
# 68 "/usr/include/bits/confname.h" 3
_PC_2_SYMLINKS
# 70 "/usr/include/bits/confname.h" 3
};
# 74 "/usr/include/bits/confname.h" 3
enum {
# 75 "/usr/include/bits/confname.h" 3
_SC_ARG_MAX,
# 77 "/usr/include/bits/confname.h" 3
_SC_CHILD_MAX,
# 79 "/usr/include/bits/confname.h" 3
_SC_CLK_TCK,
# 81 "/usr/include/bits/confname.h" 3
_SC_NGROUPS_MAX,
# 83 "/usr/include/bits/confname.h" 3
_SC_OPEN_MAX,
# 85 "/usr/include/bits/confname.h" 3
_SC_STREAM_MAX,
# 87 "/usr/include/bits/confname.h" 3
_SC_TZNAME_MAX,
# 89 "/usr/include/bits/confname.h" 3
_SC_JOB_CONTROL,
# 91 "/usr/include/bits/confname.h" 3
_SC_SAVED_IDS,
# 93 "/usr/include/bits/confname.h" 3
_SC_REALTIME_SIGNALS,
# 95 "/usr/include/bits/confname.h" 3
_SC_PRIORITY_SCHEDULING,
# 97 "/usr/include/bits/confname.h" 3
_SC_TIMERS,
# 99 "/usr/include/bits/confname.h" 3
_SC_ASYNCHRONOUS_IO,
# 101 "/usr/include/bits/confname.h" 3
_SC_PRIORITIZED_IO,
# 103 "/usr/include/bits/confname.h" 3
_SC_SYNCHRONIZED_IO,
# 105 "/usr/include/bits/confname.h" 3
_SC_FSYNC,
# 107 "/usr/include/bits/confname.h" 3
_SC_MAPPED_FILES,
# 109 "/usr/include/bits/confname.h" 3
_SC_MEMLOCK,
# 111 "/usr/include/bits/confname.h" 3
_SC_MEMLOCK_RANGE,
# 113 "/usr/include/bits/confname.h" 3
_SC_MEMORY_PROTECTION,
# 115 "/usr/include/bits/confname.h" 3
_SC_MESSAGE_PASSING,
# 117 "/usr/include/bits/confname.h" 3
_SC_SEMAPHORES,
# 119 "/usr/include/bits/confname.h" 3
_SC_SHARED_MEMORY_OBJECTS,
# 121 "/usr/include/bits/confname.h" 3
_SC_AIO_LISTIO_MAX,
# 123 "/usr/include/bits/confname.h" 3
_SC_AIO_MAX,
# 125 "/usr/include/bits/confname.h" 3
_SC_AIO_PRIO_DELTA_MAX,
# 127 "/usr/include/bits/confname.h" 3
_SC_DELAYTIMER_MAX,
# 129 "/usr/include/bits/confname.h" 3
_SC_MQ_OPEN_MAX,
# 131 "/usr/include/bits/confname.h" 3
_SC_MQ_PRIO_MAX,
# 133 "/usr/include/bits/confname.h" 3
_SC_VERSION,
# 135 "/usr/include/bits/confname.h" 3
_SC_PAGESIZE,
# 138 "/usr/include/bits/confname.h" 3
_SC_RTSIG_MAX,
# 140 "/usr/include/bits/confname.h" 3
_SC_SEM_NSEMS_MAX,
# 142 "/usr/include/bits/confname.h" 3
_SC_SEM_VALUE_MAX,
# 144 "/usr/include/bits/confname.h" 3
_SC_SIGQUEUE_MAX,
# 146 "/usr/include/bits/confname.h" 3
_SC_TIMER_MAX,
# 151 "/usr/include/bits/confname.h" 3
_SC_BC_BASE_MAX,
# 153 "/usr/include/bits/confname.h" 3
_SC_BC_DIM_MAX,
# 155 "/usr/include/bits/confname.h" 3
_SC_BC_SCALE_MAX,
# 157 "/usr/include/bits/confname.h" 3
_SC_BC_STRING_MAX,
# 159 "/usr/include/bits/confname.h" 3
_SC_COLL_WEIGHTS_MAX,
# 161 "/usr/include/bits/confname.h" 3
_SC_EQUIV_CLASS_MAX,
# 163 "/usr/include/bits/confname.h" 3
_SC_EXPR_NEST_MAX,
# 165 "/usr/include/bits/confname.h" 3
_SC_LINE_MAX,
# 167 "/usr/include/bits/confname.h" 3
_SC_RE_DUP_MAX,
# 169 "/usr/include/bits/confname.h" 3
_SC_CHARCLASS_NAME_MAX,
# 172 "/usr/include/bits/confname.h" 3
_SC_2_VERSION,
# 174 "/usr/include/bits/confname.h" 3
_SC_2_C_BIND,
# 176 "/usr/include/bits/confname.h" 3
_SC_2_C_DEV,
# 178 "/usr/include/bits/confname.h" 3
_SC_2_FORT_DEV,
# 180 "/usr/include/bits/confname.h" 3
_SC_2_FORT_RUN,
# 182 "/usr/include/bits/confname.h" 3
_SC_2_SW_DEV,
# 184 "/usr/include/bits/confname.h" 3
_SC_2_LOCALEDEF,
# 187 "/usr/include/bits/confname.h" 3
_SC_PII,
# 189 "/usr/include/bits/confname.h" 3
_SC_PII_XTI,
# 191 "/usr/include/bits/confname.h" 3
_SC_PII_SOCKET,
# 193 "/usr/include/bits/confname.h" 3
_SC_PII_INTERNET,
# 195 "/usr/include/bits/confname.h" 3
_SC_PII_OSI,
# 197 "/usr/include/bits/confname.h" 3
_SC_POLL,
# 199 "/usr/include/bits/confname.h" 3
_SC_SELECT,
# 201 "/usr/include/bits/confname.h" 3
_SC_UIO_MAXIOV,
# 203 "/usr/include/bits/confname.h" 3
_SC_IOV_MAX = 60,
# 205 "/usr/include/bits/confname.h" 3
_SC_PII_INTERNET_STREAM,
# 207 "/usr/include/bits/confname.h" 3
_SC_PII_INTERNET_DGRAM,
# 209 "/usr/include/bits/confname.h" 3
_SC_PII_OSI_COTS,
# 211 "/usr/include/bits/confname.h" 3
_SC_PII_OSI_CLTS,
# 213 "/usr/include/bits/confname.h" 3
_SC_PII_OSI_M,
# 215 "/usr/include/bits/confname.h" 3
_SC_T_IOV_MAX,
# 219 "/usr/include/bits/confname.h" 3
_SC_THREADS,
# 221 "/usr/include/bits/confname.h" 3
_SC_THREAD_SAFE_FUNCTIONS,
# 223 "/usr/include/bits/confname.h" 3
_SC_GETGR_R_SIZE_MAX,
# 225 "/usr/include/bits/confname.h" 3
_SC_GETPW_R_SIZE_MAX,
# 227 "/usr/include/bits/confname.h" 3
_SC_LOGIN_NAME_MAX,
# 229 "/usr/include/bits/confname.h" 3
_SC_TTY_NAME_MAX,
# 231 "/usr/include/bits/confname.h" 3
_SC_THREAD_DESTRUCTOR_ITERATIONS,
# 233 "/usr/include/bits/confname.h" 3
_SC_THREAD_KEYS_MAX,
# 235 "/usr/include/bits/confname.h" 3
_SC_THREAD_STACK_MIN,
# 237 "/usr/include/bits/confname.h" 3
_SC_THREAD_THREADS_MAX,
# 239 "/usr/include/bits/confname.h" 3
_SC_THREAD_ATTR_STACKADDR,
# 241 "/usr/include/bits/confname.h" 3
_SC_THREAD_ATTR_STACKSIZE,
# 243 "/usr/include/bits/confname.h" 3
_SC_THREAD_PRIORITY_SCHEDULING,
# 245 "/usr/include/bits/confname.h" 3
_SC_THREAD_PRIO_INHERIT,
# 247 "/usr/include/bits/confname.h" 3
_SC_THREAD_PRIO_PROTECT,
# 249 "/usr/include/bits/confname.h" 3
_SC_THREAD_PROCESS_SHARED,
# 252 "/usr/include/bits/confname.h" 3
_SC_NPROCESSORS_CONF,
# 254 "/usr/include/bits/confname.h" 3
_SC_NPROCESSORS_ONLN,
# 256 "/usr/include/bits/confname.h" 3
_SC_PHYS_PAGES,
# 258 "/usr/include/bits/confname.h" 3
_SC_AVPHYS_PAGES,
# 260 "/usr/include/bits/confname.h" 3
_SC_ATEXIT_MAX,
# 262 "/usr/include/bits/confname.h" 3
_SC_PASS_MAX,
# 265 "/usr/include/bits/confname.h" 3
_SC_XOPEN_VERSION,
# 267 "/usr/include/bits/confname.h" 3
_SC_XOPEN_XCU_VERSION,
# 269 "/usr/include/bits/confname.h" 3
_SC_XOPEN_UNIX,
# 271 "/usr/include/bits/confname.h" 3
_SC_XOPEN_CRYPT,
# 273 "/usr/include/bits/confname.h" 3
_SC_XOPEN_ENH_I18N,
# 275 "/usr/include/bits/confname.h" 3
_SC_XOPEN_SHM,
# 278 "/usr/include/bits/confname.h" 3
_SC_2_CHAR_TERM,
# 280 "/usr/include/bits/confname.h" 3
_SC_2_C_VERSION,
# 282 "/usr/include/bits/confname.h" 3
_SC_2_UPE,
# 285 "/usr/include/bits/confname.h" 3
_SC_XOPEN_XPG2,
# 287 "/usr/include/bits/confname.h" 3
_SC_XOPEN_XPG3,
# 289 "/usr/include/bits/confname.h" 3
_SC_XOPEN_XPG4,
# 292 "/usr/include/bits/confname.h" 3
_SC_CHAR_BIT,
# 294 "/usr/include/bits/confname.h" 3
_SC_CHAR_MAX,
# 296 "/usr/include/bits/confname.h" 3
_SC_CHAR_MIN,
# 298 "/usr/include/bits/confname.h" 3
_SC_INT_MAX,
# 300 "/usr/include/bits/confname.h" 3
_SC_INT_MIN,
# 302 "/usr/include/bits/confname.h" 3
_SC_LONG_BIT,
# 304 "/usr/include/bits/confname.h" 3
_SC_WORD_BIT,
# 306 "/usr/include/bits/confname.h" 3
_SC_MB_LEN_MAX,
# 308 "/usr/include/bits/confname.h" 3
_SC_NZERO,
# 310 "/usr/include/bits/confname.h" 3
_SC_SSIZE_MAX,
# 312 "/usr/include/bits/confname.h" 3
_SC_SCHAR_MAX,
# 314 "/usr/include/bits/confname.h" 3
_SC_SCHAR_MIN,
# 316 "/usr/include/bits/confname.h" 3
_SC_SHRT_MAX,
# 318 "/usr/include/bits/confname.h" 3
_SC_SHRT_MIN,
# 320 "/usr/include/bits/confname.h" 3
_SC_UCHAR_MAX,
# 322 "/usr/include/bits/confname.h" 3
_SC_UINT_MAX,
# 324 "/usr/include/bits/confname.h" 3
_SC_ULONG_MAX,
# 326 "/usr/include/bits/confname.h" 3
_SC_USHRT_MAX,
# 329 "/usr/include/bits/confname.h" 3
_SC_NL_ARGMAX,
# 331 "/usr/include/bits/confname.h" 3
_SC_NL_LANGMAX,
# 333 "/usr/include/bits/confname.h" 3
_SC_NL_MSGMAX,
# 335 "/usr/include/bits/confname.h" 3
_SC_NL_NMAX,
# 337 "/usr/include/bits/confname.h" 3
_SC_NL_SETMAX,
# 339 "/usr/include/bits/confname.h" 3
_SC_NL_TEXTMAX,
# 342 "/usr/include/bits/confname.h" 3
_SC_XBS5_ILP32_OFF32,
# 344 "/usr/include/bits/confname.h" 3
_SC_XBS5_ILP32_OFFBIG,
# 346 "/usr/include/bits/confname.h" 3
_SC_XBS5_LP64_OFF64,
# 348 "/usr/include/bits/confname.h" 3
_SC_XBS5_LPBIG_OFFBIG,
# 351 "/usr/include/bits/confname.h" 3
_SC_XOPEN_LEGACY,
# 353 "/usr/include/bits/confname.h" 3
_SC_XOPEN_REALTIME,
# 355 "/usr/include/bits/confname.h" 3
_SC_XOPEN_REALTIME_THREADS,
# 358 "/usr/include/bits/confname.h" 3
_SC_ADVISORY_INFO,
# 360 "/usr/include/bits/confname.h" 3
_SC_BARRIERS,
# 362 "/usr/include/bits/confname.h" 3
_SC_BASE,
# 364 "/usr/include/bits/confname.h" 3
_SC_C_LANG_SUPPORT,
# 366 "/usr/include/bits/confname.h" 3
_SC_C_LANG_SUPPORT_R,
# 368 "/usr/include/bits/confname.h" 3
_SC_CLOCK_SELECTION,
# 370 "/usr/include/bits/confname.h" 3
_SC_CPUTIME,
# 372 "/usr/include/bits/confname.h" 3
_SC_THREAD_CPUTIME,
# 374 "/usr/include/bits/confname.h" 3
_SC_DEVICE_IO,
# 376 "/usr/include/bits/confname.h" 3
_SC_DEVICE_SPECIFIC,
# 378 "/usr/include/bits/confname.h" 3
_SC_DEVICE_SPECIFIC_R,
# 380 "/usr/include/bits/confname.h" 3
_SC_FD_MGMT,
# 382 "/usr/include/bits/confname.h" 3
_SC_FIFO,
# 384 "/usr/include/bits/confname.h" 3
_SC_PIPE,
# 386 "/usr/include/bits/confname.h" 3
_SC_FILE_ATTRIBUTES,
# 388 "/usr/include/bits/confname.h" 3
_SC_FILE_LOCKING,
# 390 "/usr/include/bits/confname.h" 3
_SC_FILE_SYSTEM,
# 392 "/usr/include/bits/confname.h" 3
_SC_MONOTONIC_CLOCK,
# 394 "/usr/include/bits/confname.h" 3
_SC_MULTI_PROCESS,
# 396 "/usr/include/bits/confname.h" 3
_SC_SINGLE_PROCESS,
# 398 "/usr/include/bits/confname.h" 3
_SC_NETWORKING,
# 400 "/usr/include/bits/confname.h" 3
_SC_READER_WRITER_LOCKS,
# 402 "/usr/include/bits/confname.h" 3
_SC_SPIN_LOCKS,
# 404 "/usr/include/bits/confname.h" 3
_SC_REGEXP,
# 406 "/usr/include/bits/confname.h" 3
_SC_REGEX_VERSION,
# 408 "/usr/include/bits/confname.h" 3
_SC_SHELL,
# 410 "/usr/include/bits/confname.h" 3
_SC_SIGNALS,
# 412 "/usr/include/bits/confname.h" 3
_SC_SPAWN,
# 414 "/usr/include/bits/confname.h" 3
_SC_SPORADIC_SERVER,
# 416 "/usr/include/bits/confname.h" 3
_SC_THREAD_SPORADIC_SERVER,
# 418 "/usr/include/bits/confname.h" 3
_SC_SYSTEM_DATABASE,
# 420 "/usr/include/bits/confname.h" 3
_SC_SYSTEM_DATABASE_R,
# 422 "/usr/include/bits/confname.h" 3
_SC_TIMEOUTS,
# 424 "/usr/include/bits/confname.h" 3
_SC_TYPED_MEMORY_OBJECTS,
# 426 "/usr/include/bits/confname.h" 3
_SC_USER_GROUPS,
# 428 "/usr/include/bits/confname.h" 3
_SC_USER_GROUPS_R,
# 430 "/usr/include/bits/confname.h" 3
_SC_2_PBS,
# 432 "/usr/include/bits/confname.h" 3
_SC_2_PBS_ACCOUNTING,
# 434 "/usr/include/bits/confname.h" 3
_SC_2_PBS_LOCATE,
# 436 "/usr/include/bits/confname.h" 3
_SC_2_PBS_MESSAGE,
# 438 "/usr/include/bits/confname.h" 3
_SC_2_PBS_TRACK,
# 440 "/usr/include/bits/confname.h" 3
_SC_SYMLOOP_MAX,
# 442 "/usr/include/bits/confname.h" 3
_SC_STREAMS,
# 444 "/usr/include/bits/confname.h" 3
_SC_2_PBS_CHECKPOINT,
# 447 "/usr/include/bits/confname.h" 3
_SC_V6_ILP32_OFF32,
# 449 "/usr/include/bits/confname.h" 3
_SC_V6_ILP32_OFFBIG,
# 451 "/usr/include/bits/confname.h" 3
_SC_V6_LP64_OFF64,
# 453 "/usr/include/bits/confname.h" 3
_SC_V6_LPBIG_OFFBIG,
# 456 "/usr/include/bits/confname.h" 3
_SC_HOST_NAME_MAX,
# 458 "/usr/include/bits/confname.h" 3
_SC_TRACE,
# 460 "/usr/include/bits/confname.h" 3
_SC_TRACE_EVENT_FILTER,
# 462 "/usr/include/bits/confname.h" 3
_SC_TRACE_INHERIT,
# 464 "/usr/include/bits/confname.h" 3
_SC_TRACE_LOG,
# 467 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_ICACHE_SIZE,
# 469 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_ICACHE_ASSOC,
# 471 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_ICACHE_LINESIZE,
# 473 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_DCACHE_SIZE,
# 475 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_DCACHE_ASSOC,
# 477 "/usr/include/bits/confname.h" 3
_SC_LEVEL1_DCACHE_LINESIZE,
# 479 "/usr/include/bits/confname.h" 3
_SC_LEVEL2_CACHE_SIZE,
# 481 "/usr/include/bits/confname.h" 3
_SC_LEVEL2_CACHE_ASSOC,
# 483 "/usr/include/bits/confname.h" 3
_SC_LEVEL2_CACHE_LINESIZE,
# 485 "/usr/include/bits/confname.h" 3
_SC_LEVEL3_CACHE_SIZE,
# 487 "/usr/include/bits/confname.h" 3
_SC_LEVEL3_CACHE_ASSOC,
# 489 "/usr/include/bits/confname.h" 3
_SC_LEVEL3_CACHE_LINESIZE,
# 491 "/usr/include/bits/confname.h" 3
_SC_LEVEL4_CACHE_SIZE,
# 493 "/usr/include/bits/confname.h" 3
_SC_LEVEL4_CACHE_ASSOC,
# 495 "/usr/include/bits/confname.h" 3
_SC_LEVEL4_CACHE_LINESIZE,
# 499 "/usr/include/bits/confname.h" 3
_SC_IPV6 = 235,
# 501 "/usr/include/bits/confname.h" 3
_SC_RAW_SOCKETS,
# 504 "/usr/include/bits/confname.h" 3
_SC_V7_ILP32_OFF32,
# 506 "/usr/include/bits/confname.h" 3
_SC_V7_ILP32_OFFBIG,
# 508 "/usr/include/bits/confname.h" 3
_SC_V7_LP64_OFF64,
# 510 "/usr/include/bits/confname.h" 3
_SC_V7_LPBIG_OFFBIG,
# 513 "/usr/include/bits/confname.h" 3
_SC_SS_REPL_MAX,
# 516 "/usr/include/bits/confname.h" 3
_SC_TRACE_EVENT_NAME_MAX,
# 518 "/usr/include/bits/confname.h" 3
_SC_TRACE_NAME_MAX,
# 520 "/usr/include/bits/confname.h" 3
_SC_TRACE_SYS_MAX,
# 522 "/usr/include/bits/confname.h" 3
_SC_TRACE_USER_EVENT_MAX,
# 525 "/usr/include/bits/confname.h" 3
_SC_XOPEN_STREAMS,
# 528 "/usr/include/bits/confname.h" 3
_SC_THREAD_ROBUST_PRIO_INHERIT,
# 530 "/usr/include/bits/confname.h" 3
_SC_THREAD_ROBUST_PRIO_PROTECT
# 532 "/usr/include/bits/confname.h" 3
};
# 536 "/usr/include/bits/confname.h" 3
enum {
# 537 "/usr/include/bits/confname.h" 3
_CS_PATH,
# 540 "/usr/include/bits/confname.h" 3
_CS_V6_WIDTH_RESTRICTED_ENVS,
# 544 "/usr/include/bits/confname.h" 3
_CS_GNU_LIBC_VERSION,
# 546 "/usr/include/bits/confname.h" 3
_CS_GNU_LIBPTHREAD_VERSION,
# 549 "/usr/include/bits/confname.h" 3
_CS_V5_WIDTH_RESTRICTED_ENVS,
# 553 "/usr/include/bits/confname.h" 3
_CS_V7_WIDTH_RESTRICTED_ENVS,
# 557 "/usr/include/bits/confname.h" 3
_CS_LFS_CFLAGS = 1000,
# 559 "/usr/include/bits/confname.h" 3
_CS_LFS_LDFLAGS,
# 561 "/usr/include/bits/confname.h" 3
_CS_LFS_LIBS,
# 563 "/usr/include/bits/confname.h" 3
_CS_LFS_LINTFLAGS,
# 565 "/usr/include/bits/confname.h" 3
_CS_LFS64_CFLAGS,
# 567 "/usr/include/bits/confname.h" 3
_CS_LFS64_LDFLAGS,
# 569 "/usr/include/bits/confname.h" 3
_CS_LFS64_LIBS,
# 571 "/usr/include/bits/confname.h" 3
_CS_LFS64_LINTFLAGS,
# 574 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_CFLAGS = 1100,
# 576 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LDFLAGS,
# 578 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LIBS,
# 580 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFF32_LINTFLAGS,
# 582 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_CFLAGS,
# 584 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LDFLAGS,
# 586 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LIBS,
# 588 "/usr/include/bits/confname.h" 3
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
# 590 "/usr/include/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_CFLAGS,
# 592 "/usr/include/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LDFLAGS,
# 594 "/usr/include/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LIBS,
# 596 "/usr/include/bits/confname.h" 3
_CS_XBS5_LP64_OFF64_LINTFLAGS,
# 598 "/usr/include/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_CFLAGS,
# 600 "/usr/include/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
# 602 "/usr/include/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LIBS,
# 604 "/usr/include/bits/confname.h" 3
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
# 607 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_CFLAGS,
# 609 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
# 611 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LIBS,
# 613 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
# 615 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
# 617 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
# 619 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LIBS,
# 621 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
# 623 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_CFLAGS,
# 625 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LDFLAGS,
# 627 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LIBS,
# 629 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
# 631 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
# 633 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
# 635 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
# 637 "/usr/include/bits/confname.h" 3
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
# 640 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_CFLAGS,
# 642 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
# 644 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LIBS,
# 646 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
# 648 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
# 650 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
# 652 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LIBS,
# 654 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
# 656 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_CFLAGS,
# 658 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LDFLAGS,
# 660 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LIBS,
# 662 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
# 664 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
# 666 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
# 668 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
# 670 "/usr/include/bits/confname.h" 3
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
# 672 "/usr/include/bits/confname.h" 3
};
# 607 "/usr/include/unistd.h" 3
extern "C" long pathconf(const char * , int ) throw()
# 608 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 611 "/usr/include/unistd.h" 3
extern "C" long fpathconf(int , int ) throw();
# 614 "/usr/include/unistd.h" 3
extern "C" long sysconf(int ) throw();
# 618 "/usr/include/unistd.h" 3
extern "C" size_t confstr(int , char * , size_t ) throw();
# 623 "/usr/include/unistd.h" 3
extern "C" __pid_t getpid() throw();
# 626 "/usr/include/unistd.h" 3
extern "C" __pid_t getppid() throw();
# 631 "/usr/include/unistd.h" 3
extern "C" __pid_t getpgrp() throw();
# 641 "/usr/include/unistd.h" 3
extern "C" __pid_t __getpgid(__pid_t ) throw();
# 643 "/usr/include/unistd.h" 3
extern "C" __pid_t getpgid(__pid_t ) throw();
# 650 "/usr/include/unistd.h" 3
extern "C" int setpgid(__pid_t , __pid_t ) throw();
# 667 "/usr/include/unistd.h" 3
extern "C" int setpgrp() throw();
# 684 "/usr/include/unistd.h" 3
extern "C" __pid_t setsid() throw();
# 688 "/usr/include/unistd.h" 3
extern "C" __pid_t getsid(__pid_t ) throw();
# 692 "/usr/include/unistd.h" 3
extern "C" __uid_t getuid() throw();
# 695 "/usr/include/unistd.h" 3
extern "C" __uid_t geteuid() throw();
# 698 "/usr/include/unistd.h" 3
extern "C" __gid_t getgid() throw();
# 701 "/usr/include/unistd.h" 3
extern "C" __gid_t getegid() throw();
# 706 "/usr/include/unistd.h" 3
extern "C" int getgroups(int , __gid_t []) throw();
# 710 "/usr/include/unistd.h" 3
extern "C" int group_member(__gid_t ) throw();
# 717 "/usr/include/unistd.h" 3
extern "C" int setuid(__uid_t ) throw();
# 722 "/usr/include/unistd.h" 3
extern "C" int setreuid(__uid_t , __uid_t ) throw();
# 727 "/usr/include/unistd.h" 3
extern "C" int seteuid(__uid_t ) throw();
# 734 "/usr/include/unistd.h" 3
extern "C" int setgid(__gid_t ) throw();
# 739 "/usr/include/unistd.h" 3
extern "C" int setregid(__gid_t , __gid_t ) throw();
# 744 "/usr/include/unistd.h" 3
extern "C" int setegid(__gid_t ) throw();
# 750 "/usr/include/unistd.h" 3
extern "C" int getresuid(__uid_t * , __uid_t * , __uid_t * ) throw();
# 755 "/usr/include/unistd.h" 3
extern "C" int getresgid(__gid_t * , __gid_t * , __gid_t * ) throw();
# 760 "/usr/include/unistd.h" 3
extern "C" int setresuid(__uid_t , __uid_t , __uid_t ) throw();
# 765 "/usr/include/unistd.h" 3
extern "C" int setresgid(__gid_t , __gid_t , __gid_t ) throw();
# 773 "/usr/include/unistd.h" 3
extern "C" __pid_t fork() throw();
# 780 "/usr/include/unistd.h" 3
extern "C" __pid_t vfork() throw();
# 786 "/usr/include/unistd.h" 3
extern "C" char *ttyname(int ) throw();
# 790 "/usr/include/unistd.h" 3
extern "C" int ttyname_r(int , char * , size_t ) throw()
# 791 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 795 "/usr/include/unistd.h" 3
extern "C" int isatty(int ) throw();
# 801 "/usr/include/unistd.h" 3
extern "C" int ttyslot() throw();
# 806 "/usr/include/unistd.h" 3
extern "C" int link(const char * , const char * ) throw()
# 807 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 812 "/usr/include/unistd.h" 3
extern "C" int linkat(int , const char * , int , const char * , int ) throw()
# 814 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2, 4)));
# 819 "/usr/include/unistd.h" 3
extern "C" int symlink(const char * , const char * ) throw()
# 820 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 825 "/usr/include/unistd.h" 3
extern "C" ssize_t readlink(const char *__restrict__ , char *__restrict__ , size_t ) throw()
# 827 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 832 "/usr/include/unistd.h" 3
extern "C" int symlinkat(const char * , int , const char * ) throw()
# 833 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 3)));
# 836 "/usr/include/unistd.h" 3
extern "C" ssize_t readlinkat(int , const char *__restrict__ , char *__restrict__ , size_t ) throw()
# 838 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2, 3)));
# 842 "/usr/include/unistd.h" 3
extern "C" int unlink(const char * ) throw() __attribute((__nonnull__(1)));
# 846 "/usr/include/unistd.h" 3
extern "C" int unlinkat(int , const char * , int ) throw()
# 847 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(2)));
# 851 "/usr/include/unistd.h" 3
extern "C" int rmdir(const char * ) throw() __attribute((__nonnull__(1)));
# 855 "/usr/include/unistd.h" 3
extern "C" __pid_t tcgetpgrp(int ) throw();
# 858 "/usr/include/unistd.h" 3
extern "C" int tcsetpgrp(int , __pid_t ) throw();
# 865 "/usr/include/unistd.h" 3
extern "C" char *getlogin();
# 873 "/usr/include/unistd.h" 3
extern "C" int getlogin_r(char * , size_t ) __attribute((__nonnull__(1)));
# 878 "/usr/include/unistd.h" 3
extern "C" int setlogin(const char * ) throw() __attribute((__nonnull__(1)));
# 59 "/usr/include/getopt.h" 3
extern "C" { extern char *optarg; }
# 73 "/usr/include/getopt.h" 3
extern "C" { extern int optind; }
# 78 "/usr/include/getopt.h" 3
extern "C" { extern int opterr; }
# 82 "/usr/include/getopt.h" 3
extern "C" { extern int optopt; }
# 152 "/usr/include/getopt.h" 3
extern "C" int getopt(int , char *const * , const char * ) throw();
# 895 "/usr/include/unistd.h" 3
extern "C" int gethostname(char * , size_t ) throw() __attribute((__nonnull__(1)));
# 902 "/usr/include/unistd.h" 3
extern "C" int sethostname(const char * , size_t ) throw()
# 903 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 907 "/usr/include/unistd.h" 3
extern "C" int sethostid(long ) throw();
# 913 "/usr/include/unistd.h" 3
extern "C" int getdomainname(char * , size_t ) throw()
# 914 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 915 "/usr/include/unistd.h" 3
extern "C" int setdomainname(const char * , size_t ) throw()
# 916 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 922 "/usr/include/unistd.h" 3
extern "C" int vhangup() throw();
# 925 "/usr/include/unistd.h" 3
extern "C" int revoke(const char * ) throw() __attribute((__nonnull__(1)));
# 933 "/usr/include/unistd.h" 3
extern "C" int profil(unsigned short * , size_t , size_t , unsigned ) throw()
# 935 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 941 "/usr/include/unistd.h" 3
extern "C" int acct(const char * ) throw();
# 945 "/usr/include/unistd.h" 3
extern "C" char *getusershell() throw();
# 946 "/usr/include/unistd.h" 3
extern "C" void endusershell() throw();
# 947 "/usr/include/unistd.h" 3
extern "C" void setusershell() throw();
# 953 "/usr/include/unistd.h" 3
extern "C" int daemon(int , int ) throw();
# 960 "/usr/include/unistd.h" 3
extern "C" int chroot(const char * ) throw() __attribute((__nonnull__(1)));
# 964 "/usr/include/unistd.h" 3
extern "C" char *getpass(const char * ) __attribute((__nonnull__(1)));
# 973 "/usr/include/unistd.h" 3
extern "C" int fsync(int );
# 980 "/usr/include/unistd.h" 3
extern "C" long gethostid();
# 983 "/usr/include/unistd.h" 3
extern "C" void sync() throw();
# 988 "/usr/include/unistd.h" 3
extern "C" int getpagesize() throw() __attribute((const));
# 993 "/usr/include/unistd.h" 3
extern "C" int getdtablesize() throw();
# 998 "/usr/include/unistd.h" 3
extern "C" int truncate(const char * , __off_t ) throw()
# 999 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 1010 "/usr/include/unistd.h" 3
extern "C" int truncate64(const char * , __off64_t ) throw()
# 1011 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1)));
# 1020 "/usr/include/unistd.h" 3
extern "C" int ftruncate(int , __off_t ) throw();
# 1030 "/usr/include/unistd.h" 3
extern "C" int ftruncate64(int , __off64_t ) throw();
# 1040 "/usr/include/unistd.h" 3
extern "C" int brk(void * ) throw();
# 1046 "/usr/include/unistd.h" 3
extern "C" void *sbrk(intptr_t ) throw();
# 1061 "/usr/include/unistd.h" 3
extern "C" long syscall(long , ...) throw();
# 1084 "/usr/include/unistd.h" 3
extern "C" int lockf(int , int , __off_t );
# 1094 "/usr/include/unistd.h" 3
extern "C" int lockf64(int , int , __off64_t );
# 1115 "/usr/include/unistd.h" 3
extern "C" int fdatasync(int );
# 1123 "/usr/include/unistd.h" 3
extern "C" char *crypt(const char * , const char * ) throw()
# 1124 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 1128 "/usr/include/unistd.h" 3
extern "C" void encrypt(char * , int ) throw() __attribute((__nonnull__(1)));
# 1135 "/usr/include/unistd.h" 3
extern "C" void swab(const void *__restrict__ , void *__restrict__ , ssize_t ) throw()
# 1136 "/usr/include/unistd.h" 3
 __attribute((__nonnull__(1, 2)));
# 1144 "/usr/include/unistd.h" 3
extern "C" char *ctermid(char * ) throw();
# 44 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_t __gthread_t;
# 45 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_key_t __gthread_key_t;
# 46 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_once_t __gthread_once_t;
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_mutex_t;
# 48 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_recursive_mutex_t;
# 49 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef pthread_cond_t __gthread_cond_t;
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
typedef timespec __gthread_time_t;
# 118 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_once) __gthrw_pthread_once __attribute((__weakref__("pthread_once")));
# 119 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_getspecific) __gthrw_pthread_getspecific __attribute((__weakref__("pthread_getspecific")));
# 120 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_setspecific) __gthrw_pthread_setspecific __attribute((__weakref__("pthread_setspecific")));
# 122 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_create) __gthrw_pthread_create __attribute((__weakref__("pthread_create")));
# 123 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_join) __gthrw_pthread_join __attribute((__weakref__("pthread_join")));
# 124 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_equal) __gthrw_pthread_equal __attribute((__weakref__("pthread_equal")));
# 125 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_self) __gthrw_pthread_self __attribute((__weakref__("pthread_self")));
# 126 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_detach) __gthrw_pthread_detach __attribute((__weakref__("pthread_detach")));
# 127 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cancel) __gthrw_pthread_cancel __attribute((__weakref__("pthread_cancel")));
# 128 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(sched_yield) __gthrw_sched_yield __attribute((__weakref__("sched_yield")));
# 130 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_lock) __gthrw_pthread_mutex_lock __attribute((__weakref__("pthread_mutex_lock")));
# 131 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_trylock) __gthrw_pthread_mutex_trylock __attribute((__weakref__("pthread_mutex_trylock")));
# 134 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock __attribute((__weakref__("pthread_mutex_timedlock")));
# 137 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_unlock) __gthrw_pthread_mutex_unlock __attribute((__weakref__("pthread_mutex_unlock")));
# 138 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_init) __gthrw_pthread_mutex_init __attribute((__weakref__("pthread_mutex_init")));
# 139 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_destroy) __gthrw_pthread_mutex_destroy __attribute((__weakref__("pthread_mutex_destroy")));
# 141 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_broadcast) __gthrw_pthread_cond_broadcast __attribute((__weakref__("pthread_cond_broadcast")));
# 142 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_signal) __gthrw_pthread_cond_signal __attribute((__weakref__("pthread_cond_signal")));
# 143 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_wait) __gthrw_pthread_cond_wait __attribute((__weakref__("pthread_cond_wait")));
# 144 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_timedwait) __gthrw_pthread_cond_timedwait __attribute((__weakref__("pthread_cond_timedwait")));
# 145 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_cond_destroy) __gthrw_pthread_cond_destroy __attribute((__weakref__("pthread_cond_destroy")));
# 148 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_key_create) __gthrw_pthread_key_create __attribute((__weakref__("pthread_key_create")));
# 149 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_key_delete) __gthrw_pthread_key_delete __attribute((__weakref__("pthread_key_delete")));
# 150 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_init) __gthrw_pthread_mutexattr_init __attribute((__weakref__("pthread_mutexattr_init")));
# 151 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype __attribute((__weakref__("pthread_mutexattr_settype")));
# 152 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy __attribute((__weakref__("pthread_mutexattr_destroy")));
# 238 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_active_p()
# 239 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 240 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static void *const __gthread_active_ptr = __extension__ ((void *)(&__gthrw_pthread_cancel));
# 242 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_active_ptr != (0);
# 243 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 676 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *
# 677 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
__args)
# 678 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 679 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_create(__threadid, __null, __func, __args);
# 680 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 683 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr)
# 684 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 685 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_join(__threadid, __value_ptr);
# 686 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 689 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_detach(__gthread_t __threadid)
# 690 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 691 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_detach(__threadid);
# 692 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 695 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2)
# 696 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 697 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_equal(__t1, __t2);
# 698 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 701 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline __gthread_t __gthread_self()
# 702 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 703 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_self();
# 704 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 707 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_yield()
# 708 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 709 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_sched_yield();
# 710 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 713 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_once(__gthread_once_t *__once, void (*__func)(void))
# 714 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 715 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 716 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_once(__once, __func); } else {
# 718 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return -1; }
# 719 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 722 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *))
# 723 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 724 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_key_create(__key, __dtor);
# 725 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 728 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_key_delete(__gthread_key_t __key)
# 729 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 730 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_key_delete(__key);
# 731 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 734 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline void *__gthread_getspecific(__gthread_key_t __key)
# 735 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 736 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_getspecific(__key);
# 737 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 740 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr)
# 741 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 742 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_setspecific(__key, __ptr);
# 743 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 746 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex)
# 747 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 748 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 749 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_destroy(__mutex); } else {
# 751 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 752 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 755 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex)
# 756 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 757 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 758 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_lock(__mutex); } else {
# 760 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 761 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 764 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex)
# 765 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 766 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 767 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_trylock(__mutex); } else {
# 769 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 770 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 775 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *
# 776 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
__abs_timeout)
# 777 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 778 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 779 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_timedlock(__mutex, __abs_timeout); } else {
# 781 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 782 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 787 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex)
# 788 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 789 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 790 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_unlock(__mutex); } else {
# 792 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return 0; }
# 793 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 819 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex)
# 820 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 821 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_mutex_lock(__mutex);
# 822 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 825 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex)
# 826 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 827 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_mutex_trylock(__mutex);
# 828 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 833 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *
# 834 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
__abs_timeout)
# 835 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 836 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_mutex_timedlock(__mutex, __abs_timeout);
# 837 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 842 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex)
# 843 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 844 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_mutex_unlock(__mutex);
# 845 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 848 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond)
# 849 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 850 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_broadcast(__cond);
# 851 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 854 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_signal(__gthread_cond_t *__cond)
# 855 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 856 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_signal(__cond);
# 857 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 860 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex)
# 861 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 862 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_wait(__cond, __mutex);
# 863 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 866 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *
# 867 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
__abs_timeout)
# 868 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 869 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_timedwait(__cond, __mutex, __abs_timeout);
# 870 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 873 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *
# 874 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
__mutex)
# 875 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 876 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_cond_wait(__cond, __mutex);
# 877 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 880 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_timedwait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *
# 881 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
__mutex, const __gthread_time_t *
# 882 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
__abs_timeout)
# 883 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 884 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthread_cond_timedwait(__cond, __mutex, __abs_timeout);
# 885 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 888 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
static inline int __gthread_cond_destroy(__gthread_cond_t *__cond)
# 889 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
{
# 890 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
return __gthrw_pthread_cond_destroy(__cond);
# 891 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/gthr-default.h" 3
}
# 32 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/atomic_word.h" 3
typedef int _Atomic_word;
# 37 "/usr/include/c++/4.4/ext/atomicity.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val)
# 46 "/usr/include/c++/4.4/ext/atomicity.h" 3
{ return __sync_fetch_and_add_4(__mem, __val); }
# 49 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline void __atomic_add(volatile _Atomic_word *__mem, int __val)
# 50 "/usr/include/c++/4.4/ext/atomicity.h" 3
{ __sync_fetch_and_add_4(__mem, __val); }
# 62 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val)
# 63 "/usr/include/c++/4.4/ext/atomicity.h" 3
{
# 64 "/usr/include/c++/4.4/ext/atomicity.h" 3
_Atomic_word __result = (*__mem);
# 65 "/usr/include/c++/4.4/ext/atomicity.h" 3
(*__mem) += __val;
# 66 "/usr/include/c++/4.4/ext/atomicity.h" 3
return __result;
# 67 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 70 "/usr/include/c++/4.4/ext/atomicity.h" 3
static inline void __atomic_add_single(_Atomic_word *__mem, int __val)
# 71 "/usr/include/c++/4.4/ext/atomicity.h" 3
{ (*__mem) += __val; }
# 74 "/usr/include/c++/4.4/ext/atomicity.h" 3
__attribute((__unused__)) static inline _Atomic_word
# 75 "/usr/include/c++/4.4/ext/atomicity.h" 3
__exchange_and_add_dispatch(_Atomic_word *__mem, int __val)
# 76 "/usr/include/c++/4.4/ext/atomicity.h" 3
{
# 78 "/usr/include/c++/4.4/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 79 "/usr/include/c++/4.4/ext/atomicity.h" 3
return __exchange_and_add(__mem, __val); } else {
# 81 "/usr/include/c++/4.4/ext/atomicity.h" 3
return __exchange_and_add_single(__mem, __val); }
# 85 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 88 "/usr/include/c++/4.4/ext/atomicity.h" 3
__attribute((__unused__)) static inline void
# 89 "/usr/include/c++/4.4/ext/atomicity.h" 3
__atomic_add_dispatch(_Atomic_word *__mem, int __val)
# 90 "/usr/include/c++/4.4/ext/atomicity.h" 3
{
# 92 "/usr/include/c++/4.4/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 93 "/usr/include/c++/4.4/ext/atomicity.h" 3
__atomic_add(__mem, __val); } else {
# 95 "/usr/include/c++/4.4/ext/atomicity.h" 3
__atomic_add_single(__mem, __val); }
# 99 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 101 "/usr/include/c++/4.4/ext/atomicity.h" 3
}
# 46 "/usr/include/c++/4.4/new" 3
namespace std {
# 54 "/usr/include/c++/4.4/new" 3
class bad_alloc : public exception {
# 57 "/usr/include/c++/4.4/new" 3
public: bad_alloc() throw() { }
# 61 "/usr/include/c++/4.4/new" 3
virtual ~bad_alloc() throw();
# 64 "/usr/include/c++/4.4/new" 3
virtual const char *what() const throw();
# 65 "/usr/include/c++/4.4/new" 3
};
# 67 "/usr/include/c++/4.4/new" 3
struct nothrow_t { };
# 69 "/usr/include/c++/4.4/new" 3
extern const nothrow_t nothrow;
# 73 "/usr/include/c++/4.4/new" 3
typedef void (*new_handler)(void);
# 77 "/usr/include/c++/4.4/new" 3
new_handler set_new_handler(new_handler) throw();
# 78 "/usr/include/c++/4.4/new" 3
}
# 91 "/usr/include/c++/4.4/new" 3
void *operator new(size_t) throw(std::bad_alloc);
# 92 "/usr/include/c++/4.4/new" 3
void *operator new[](size_t) throw(std::bad_alloc);
# 93 "/usr/include/c++/4.4/new" 3
void operator delete(void *) throw();
# 94 "/usr/include/c++/4.4/new" 3
void operator delete[](void *) throw();
# 95 "/usr/include/c++/4.4/new" 3
void *operator new(size_t, const std::nothrow_t &) throw();
# 96 "/usr/include/c++/4.4/new" 3
void *operator new[](size_t, const std::nothrow_t &) throw();
# 97 "/usr/include/c++/4.4/new" 3
void operator delete(void *, const std::nothrow_t &) throw();
# 98 "/usr/include/c++/4.4/new" 3
void operator delete[](void *, const std::nothrow_t &) throw();
# 101 "/usr/include/c++/4.4/new" 3
inline void *operator new(size_t, void *__p) throw() { return __p; }
# 102 "/usr/include/c++/4.4/new" 3
inline void *operator new[](size_t, void *__p) throw() { return __p; }
# 105 "/usr/include/c++/4.4/new" 3
inline void operator delete(void *, void *) throw() { }
# 106 "/usr/include/c++/4.4/new" 3
inline void operator delete[](void *, void *) throw() { }
# 37 "/usr/include/c++/4.4/ext/new_allocator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 39 "/usr/include/c++/4.4/ext/new_allocator.h" 3
using std::size_t;
# 40 "/usr/include/c++/4.4/ext/new_allocator.h" 3
using std::ptrdiff_t;
# 50 "/usr/include/c++/4.4/ext/new_allocator.h" 3
template < typename _Tp >
    class new_allocator
    {
    public :
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp * pointer;
      typedef const _Tp * const_pointer;
      typedef _Tp & reference;
      typedef const _Tp & const_reference;
      typedef _Tp value_type;

      template < typename _Tp1 >
        struct rebind
        { typedef new_allocator < _Tp1 > other; };

      new_allocator ( ) throw ( ) { }

      new_allocator ( const new_allocator & ) throw ( ) { }

      template < typename _Tp1 >
        new_allocator ( const new_allocator < _Tp1 > & ) throw ( ) { }

      ~ new_allocator ( ) throw ( ) { }

      pointer
      address ( reference __x ) const { return & __x; }

      const_pointer
      address ( const_reference __x ) const { return & __x; }



      pointer
      allocate ( size_type __n, const void * = 0 )
      {
 if ( __builtin_expect ( __n > this -> max_size ( ), false ) )
   std :: __throw_bad_alloc ( );

 return static_cast < _Tp * > ( :: operator new ( __n * sizeof ( _Tp ) ) );
      }


      void
      deallocate ( pointer __p, size_type )
      { :: operator delete ( __p ); }

      size_type
      max_size ( ) const throw ( )
      { return size_t ( - 1 ) / sizeof ( _Tp ); }



      void
      construct ( pointer __p, const _Tp & __val )
      { :: new ( ( void * ) __p ) _Tp ( __val ); }

      void
      destroy ( pointer __p ) { __p -> ~ _Tp ( ); }
    };
# 118 "/usr/include/c++/4.4/ext/new_allocator.h" 3
template < typename _Tp >
    inline bool
    operator == ( const new_allocator < _Tp > &, const new_allocator < _Tp > & )
    { return true; }
# 123 "/usr/include/c++/4.4/ext/new_allocator.h" 3
template < typename _Tp >
    inline bool
    operator != ( const new_allocator < _Tp > &, const new_allocator < _Tp > & )
    { return false; }
# 128 "/usr/include/c++/4.4/ext/new_allocator.h" 3
}
# 50 "/usr/include/c++/4.4/bits/allocator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 59 "/usr/include/c++/4.4/bits/allocator.h" 3
template< class _Tp> class allocator;
# 64 "/usr/include/c++/4.4/bits/allocator.h" 3
template<> class allocator< void> {
# 67 "/usr/include/c++/4.4/bits/allocator.h" 3
public: typedef size_t size_type;
# 68 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef ptrdiff_t difference_type;
# 69 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef void *pointer;
# 70 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef const void *const_pointer;
# 71 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef void value_type;
# 73 "/usr/include/c++/4.4/bits/allocator.h" 3
template< class _Tp1>
# 74 "/usr/include/c++/4.4/bits/allocator.h" 3
struct rebind {
# 75 "/usr/include/c++/4.4/bits/allocator.h" 3
typedef std::allocator< _Tp1> other; };
# 76 "/usr/include/c++/4.4/bits/allocator.h" 3
};
# 85 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Tp >
    class allocator : public __gnu_cxx :: new_allocator < _Tp >
    {
   public :
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp * pointer;
      typedef const _Tp * const_pointer;
      typedef _Tp & reference;
      typedef const _Tp & const_reference;
      typedef _Tp value_type;

      template < typename _Tp1 >
        struct rebind
        { typedef allocator < _Tp1 > other; };

      allocator ( ) throw ( ) { }

      allocator ( const allocator & __a ) throw ( )
      : __gnu_cxx :: new_allocator < _Tp > ( __a ) { }

      template < typename _Tp1 >
        allocator ( const allocator < _Tp1 > & ) throw ( ) { }

      ~ allocator ( ) throw ( ) { }


    };
# 114 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _T1, typename _T2 >
    inline bool
    operator == ( const allocator < _T1 > &, const allocator < _T2 > & )
    { return true; }
# 119 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Tp >
    inline bool
    operator == ( const allocator < _Tp > &, const allocator < _Tp > & )
    { return true; }
# 124 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _T1, typename _T2 >
    inline bool
    operator != ( const allocator < _T1 > &, const allocator < _T2 > & )
    { return false; }
# 129 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Tp >
    inline bool
    operator != ( const allocator < _Tp > &, const allocator < _Tp > & )
    { return false; }
# 138 "/usr/include/c++/4.4/bits/allocator.h" 3
extern template class allocator< char> ;
# 139 "/usr/include/c++/4.4/bits/allocator.h" 3
extern template class allocator< wchar_t> ;
# 146 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc, bool = __is_empty ( _Alloc ) >
    struct __alloc_swap
    { static void _S_do_it ( _Alloc &, _Alloc & ) { } };
# 150 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc >
    struct __alloc_swap < _Alloc, false >
    {
      static void
      _S_do_it ( _Alloc & __one, _Alloc & __two )
      {

 if ( __one != __two )
   swap ( __one, __two );
      }
    };
# 163 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc, bool = __is_empty ( _Alloc ) >
    struct __alloc_neq
    {
      static bool
      _S_do_it ( const _Alloc &, const _Alloc & )
      { return false; }
    };
# 171 "/usr/include/c++/4.4/bits/allocator.h" 3
template < typename _Alloc >
    struct __alloc_neq < _Alloc, false >
    {
      static bool
      _S_do_it ( const _Alloc & __one, const _Alloc & __two )
      { return __one != __two; }
    };
# 179 "/usr/include/c++/4.4/bits/allocator.h" 3
}
# 32 "/usr/include/c++/4.4/cxxabi-forced.h" 3
namespace __cxxabiv1 {
# 41 "/usr/include/c++/4.4/cxxabi-forced.h" 3
class __forced_unwind {
# 43 "/usr/include/c++/4.4/cxxabi-forced.h" 3
virtual ~__forced_unwind() throw();
# 44 "/usr/include/c++/4.4/cxxabi-forced.h" 3
virtual void __pure_dummy() = 0;
# 45 "/usr/include/c++/4.4/cxxabi-forced.h" 3
};
# 46 "/usr/include/c++/4.4/cxxabi-forced.h" 3
}
# 38 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
namespace std __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    inline void
    __ostream_write ( basic_ostream < _CharT, _Traits > & __out,
      const _CharT * __s, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      const streamsize __put = __out . rdbuf ( ) -> sputn ( __s, __n );
      if ( __put != __n )
 __out . setstate ( __ios_base :: badbit );
    }
# 53 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    inline void
    __ostream_fill ( basic_ostream < _CharT, _Traits > & __out, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      const _CharT __c = __out . fill ( );
      for (; __n > 0; -- __n )
 {
   const typename _Traits :: int_type __put = __out . rdbuf ( ) -> sputc ( __c );
   if ( _Traits :: eq_int_type ( __put, _Traits :: eof ( ) ) )
     {
       __out . setstate ( __ios_base :: badbit );
       break;
     }
 }
    }
# 72 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    __ostream_insert ( basic_ostream < _CharT, _Traits > & __out,
       const _CharT * __s, streamsize __n )
    {
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef typename __ostream_type :: ios_base __ios_base;

      typename __ostream_type :: sentry __cerb ( __out );
      if ( __cerb )
 {
   try
     {
       const streamsize __w = __out . width ( );
       if ( __w > __n )
  {
    const bool __left = ( ( __out . flags ( )
     & __ios_base :: adjustfield )
           == __ios_base :: left );
    if ( ! __left )
      __ostream_fill ( __out, __w - __n );
    if ( __out . good ( ) )
      __ostream_write ( __out, __s, __n );
    if ( __left && __out . good ( ) )
      __ostream_fill ( __out, __w - __n );
  }
       else
  __ostream_write ( __out, __s, __n );
       __out . width ( 0 );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __out . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __out . _M_setstate ( __ios_base :: badbit ); }
 }
      return __out;
    }
# 117 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
extern template basic_ostream< char, char_traits< char> > &__ostream_insert(basic_ostream< char, char_traits< char> > & , const char * , streamsize );
# 120 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &__ostream_insert(basic_ostream< wchar_t, char_traits< wchar_t> > & , const wchar_t * , streamsize );
# 125 "/usr/include/c++/4.4/bits/ostream_insert.h" 3
}
# 60 "/usr/include/c++/4.4/bits/stl_function.h" 3
namespace std __attribute((__visibility__("default"))) {
# 99 "/usr/include/c++/4.4/bits/stl_function.h" 3
template< class _Arg, class _Result>
# 100 "/usr/include/c++/4.4/bits/stl_function.h" 3
struct unary_function {
# 102 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Arg argument_type;
# 105 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Result result_type;
# 106 "/usr/include/c++/4.4/bits/stl_function.h" 3
};
# 111 "/usr/include/c++/4.4/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result>
# 112 "/usr/include/c++/4.4/bits/stl_function.h" 3
struct binary_function {
# 114 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Arg1 first_argument_type;
# 117 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Arg2 second_argument_type;
# 118 "/usr/include/c++/4.4/bits/stl_function.h" 3
typedef _Result result_type;
# 119 "/usr/include/c++/4.4/bits/stl_function.h" 3
};
# 134 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct plus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x + __y; }
    };
# 143 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct minus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x - __y; }
    };
# 152 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct multiplies : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x * __y; }
    };
# 161 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct divides : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x / __y; }
    };
# 170 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct modulus : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x % __y; }
    };
# 179 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct negate : public unary_function < _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x ) const
      { return - __x; }
    };
# 198 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct equal_to : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x == __y; }
    };
# 207 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct not_equal_to : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x != __y; }
    };
# 216 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct greater : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x > __y; }
    };
# 225 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct less : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x < __y; }
    };
# 234 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct greater_equal : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x >= __y; }
    };
# 243 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct less_equal : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x <= __y; }
    };
# 262 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_and : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x && __y; }
    };
# 271 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_or : public binary_function < _Tp, _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x || __y; }
    };
# 280 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct logical_not : public unary_function < _Tp, bool >
    {
      bool
      operator ( ) ( const _Tp & __x ) const
      { return ! __x; }
    };
# 291 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_and : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x & __y; }
    };
# 299 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_or : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x | __y; }
    };
# 307 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct bit_xor : public binary_function < _Tp, _Tp, _Tp >
    {
      _Tp
      operator ( ) ( const _Tp & __x, const _Tp & __y ) const
      { return __x ^ __y; }
    };
# 345 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    class unary_negate
    : public unary_function < typename _Predicate :: argument_type, bool >
    {
    protected :
      _Predicate _M_pred;

    public :
      explicit
      unary_negate ( const _Predicate & __x ) : _M_pred ( __x ) { }

      bool
      operator ( ) ( const typename _Predicate :: argument_type & __x ) const
      { return ! _M_pred ( __x ); }
    };
# 362 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    inline unary_negate < _Predicate >
    not1 ( const _Predicate & __pred )
    { return unary_negate < _Predicate > ( __pred ); }
# 368 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    class binary_negate
    : public binary_function < typename _Predicate :: first_argument_type,
        typename _Predicate :: second_argument_type, bool >
    {
    protected :
      _Predicate _M_pred;

    public :
      explicit
      binary_negate ( const _Predicate & __x ) : _M_pred ( __x ) { }

      bool
      operator ( ) ( const typename _Predicate :: first_argument_type & __x,
   const typename _Predicate :: second_argument_type & __y ) const
      { return ! _M_pred ( __x, __y ); }
    };
# 387 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Predicate >
    inline binary_negate < _Predicate >
    not2 ( const _Predicate & __pred )
    { return binary_negate < _Predicate > ( __pred ); }
# 416 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg, typename _Result >
    class pointer_to_unary_function : public unary_function < _Arg, _Result >
    {
    protected :
      _Result ( * _M_ptr ) ( _Arg );

    public :
      pointer_to_unary_function ( ) { }

      explicit
      pointer_to_unary_function ( _Result ( * __x ) ( _Arg ) )
      : _M_ptr ( __x ) { }

      _Result
      operator ( ) ( _Arg __x ) const
      { return _M_ptr ( __x ); }
    };
# 435 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg, typename _Result >
    inline pointer_to_unary_function < _Arg, _Result >
    ptr_fun ( _Result ( * __x ) ( _Arg ) )
    { return pointer_to_unary_function < _Arg, _Result > ( __x ); }
# 441 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg1, typename _Arg2, typename _Result >
    class pointer_to_binary_function
    : public binary_function < _Arg1, _Arg2, _Result >
    {
    protected :
      _Result ( * _M_ptr ) ( _Arg1, _Arg2 );

    public :
      pointer_to_binary_function ( ) { }

      explicit
      pointer_to_binary_function ( _Result ( * __x ) ( _Arg1, _Arg2 ) )
      : _M_ptr ( __x ) { }

      _Result
      operator ( ) ( _Arg1 __x, _Arg2 __y ) const
      { return _M_ptr ( __x, __y ); }
    };
# 461 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Arg1, typename _Arg2, typename _Result >
    inline pointer_to_binary_function < _Arg1, _Arg2, _Result >
    ptr_fun ( _Result ( * __x ) ( _Arg1, _Arg2 ) )
    { return pointer_to_binary_function < _Arg1, _Arg2, _Result > ( __x ); }
# 467 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Tp >
    struct _Identity : public unary_function < _Tp, _Tp >
    {
      _Tp &
      operator ( ) ( _Tp & __x ) const
      { return __x; }

      const _Tp &
      operator ( ) ( const _Tp & __x ) const
      { return __x; }
    };
# 479 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Pair >
    struct _Select1st : public unary_function < _Pair,
           typename _Pair :: first_type >
    {
      typename _Pair :: first_type &
      operator ( ) ( _Pair & __x ) const
      { return __x . first; }

      const typename _Pair :: first_type &
      operator ( ) ( const _Pair & __x ) const
      { return __x . first; }
    };
# 492 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Pair >
    struct _Select2nd : public unary_function < _Pair,
           typename _Pair :: second_type >
    {
      typename _Pair :: second_type &
      operator ( ) ( _Pair & __x ) const
      { return __x . second; }

      const typename _Pair :: second_type &
      operator ( ) ( const _Pair & __x ) const
      { return __x . second; }
    };
# 523 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class mem_fun_t : public unary_function < _Tp *, _Ret >
    {
    public :
      explicit
      mem_fun_t ( _Ret ( _Tp :: * __pf ) ( ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp * __p ) const
      { return ( __p ->* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( );
    };
# 541 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class const_mem_fun_t : public unary_function < const _Tp *, _Ret >
    {
    public :
      explicit
      const_mem_fun_t ( _Ret ( _Tp :: * __pf ) ( ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp * __p ) const
      { return ( __p ->* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( ) const;
    };
# 559 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class mem_fun_ref_t : public unary_function < _Tp, _Ret >
    {
    public :
      explicit
      mem_fun_ref_t ( _Ret ( _Tp :: * __pf ) ( ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp & __r ) const
      { return ( __r .* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( );
  };
# 577 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    class const_mem_fun_ref_t : public unary_function < _Tp, _Ret >
    {
    public :
      explicit
      const_mem_fun_ref_t ( _Ret ( _Tp :: * __pf ) ( ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp & __r ) const
      { return ( __r .* _M_f ) ( ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( ) const;
    };
# 595 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class mem_fun1_t : public binary_function < _Tp *, _Arg, _Ret >
    {
    public :
      explicit
      mem_fun1_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp * __p, _Arg __x ) const
      { return ( __p ->* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg );
    };
# 613 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class const_mem_fun1_t : public binary_function < const _Tp *, _Arg, _Ret >
    {
    public :
      explicit
      const_mem_fun1_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp * __p, _Arg __x ) const
      { return ( __p ->* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg ) const;
    };
# 631 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class mem_fun1_ref_t : public binary_function < _Tp, _Arg, _Ret >
    {
    public :
      explicit
      mem_fun1_ref_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( _Tp & __r, _Arg __x ) const
      { return ( __r .* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg );
    };
# 649 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    class const_mem_fun1_ref_t : public binary_function < _Tp, _Arg, _Ret >
    {
    public :
      explicit
      const_mem_fun1_ref_t ( _Ret ( _Tp :: * __pf ) ( _Arg ) const )
      : _M_f ( __pf ) { }

      _Ret
      operator ( ) ( const _Tp & __r, _Arg __x ) const
      { return ( __r .* _M_f ) ( __x ); }

    private :
      _Ret ( _Tp :: * _M_f ) ( _Arg ) const;
    };
# 667 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline mem_fun_t < _Ret, _Tp >
    mem_fun ( _Ret ( _Tp :: * __f ) ( ) )
    { return mem_fun_t < _Ret, _Tp > ( __f ); }
# 672 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline const_mem_fun_t < _Ret, _Tp >
    mem_fun ( _Ret ( _Tp :: * __f ) ( ) const )
    { return const_mem_fun_t < _Ret, _Tp > ( __f ); }
# 677 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline mem_fun_ref_t < _Ret, _Tp >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( ) )
    { return mem_fun_ref_t < _Ret, _Tp > ( __f ); }
# 682 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp >
    inline const_mem_fun_ref_t < _Ret, _Tp >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( ) const )
    { return const_mem_fun_ref_t < _Ret, _Tp > ( __f ); }
# 687 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline mem_fun1_t < _Ret, _Tp, _Arg >
    mem_fun ( _Ret ( _Tp :: * __f ) ( _Arg ) )
    { return mem_fun1_t < _Ret, _Tp, _Arg > ( __f ); }
# 692 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline const_mem_fun1_t < _Ret, _Tp, _Arg >
    mem_fun ( _Ret ( _Tp :: * __f ) ( _Arg ) const )
    { return const_mem_fun1_t < _Ret, _Tp, _Arg > ( __f ); }
# 697 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline mem_fun1_ref_t < _Ret, _Tp, _Arg >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( _Arg ) )
    { return mem_fun1_ref_t < _Ret, _Tp, _Arg > ( __f ); }
# 702 "/usr/include/c++/4.4/bits/stl_function.h" 3
template < typename _Ret, typename _Tp, typename _Arg >
    inline const_mem_fun1_ref_t < _Ret, _Tp, _Arg >
    mem_fun_ref ( _Ret ( _Tp :: * __f ) ( _Arg ) const )
    { return const_mem_fun1_ref_t < _Ret, _Tp, _Arg > ( __f ); }
# 709 "/usr/include/c++/4.4/bits/stl_function.h" 3
}
# 60 "/usr/include/c++/4.4/backward/binders.h" 3
namespace std __attribute((__visibility__("default"))) {
# 96 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation >
    class binder1st
    : public unary_function < typename _Operation :: second_argument_type,
       typename _Operation :: result_type >
    {
    protected :
      _Operation op;
      typename _Operation :: first_argument_type value;

    public :
      binder1st ( const _Operation & __x,
  const typename _Operation :: first_argument_type & __y )
      : op ( __x ), value ( __y ) { }

      typename _Operation :: result_type
      operator ( ) ( const typename _Operation :: second_argument_type & __x ) const
      { return op ( value, __x ); }



      typename _Operation :: result_type
      operator ( ) ( typename _Operation :: second_argument_type & __x ) const
      { return op ( value, __x ); }
    };
# 122 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation, typename _Tp >
    inline binder1st < _Operation >
    bind1st ( const _Operation & __fn, const _Tp & __x )
    {
      typedef typename _Operation :: first_argument_type _Arg1_type;
      return binder1st < _Operation > ( __fn, _Arg1_type ( __x ) );
    }
# 131 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation >
    class binder2nd
    : public unary_function < typename _Operation :: first_argument_type,
       typename _Operation :: result_type >
    {
    protected :
      _Operation op;
      typename _Operation :: second_argument_type value;

    public :
      binder2nd ( const _Operation & __x,
  const typename _Operation :: second_argument_type & __y )
      : op ( __x ), value ( __y ) { }

      typename _Operation :: result_type
      operator ( ) ( const typename _Operation :: first_argument_type & __x ) const
      { return op ( __x, value ); }



      typename _Operation :: result_type
      operator ( ) ( typename _Operation :: first_argument_type & __x ) const
      { return op ( __x, value ); }
    };
# 157 "/usr/include/c++/4.4/backward/binders.h" 3
template < typename _Operation, typename _Tp >
    inline binder2nd < _Operation >
    bind2nd ( const _Operation & __fn, const _Tp & __x )
    {
      typedef typename _Operation :: second_argument_type _Arg2_type;
      return binder2nd < _Operation > ( __fn, _Arg2_type ( __x ) );
    }
# 166 "/usr/include/c++/4.4/backward/binders.h" 3
}
# 45 "/usr/include/c++/4.4/bits/basic_string.h" 3
namespace std __attribute((__visibility__("default"))) {
# 103 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    class basic_string
    {
      typedef typename _Alloc :: template rebind < _CharT > :: other _CharT_alloc_type;


    public :
      typedef _Traits traits_type;
      typedef typename _Traits :: char_type value_type;
      typedef _Alloc allocator_type;
      typedef typename _CharT_alloc_type :: size_type size_type;
      typedef typename _CharT_alloc_type :: difference_type difference_type;
      typedef typename _CharT_alloc_type :: reference reference;
      typedef typename _CharT_alloc_type :: const_reference const_reference;
      typedef typename _CharT_alloc_type :: pointer pointer;
      typedef typename _CharT_alloc_type :: const_pointer const_pointer;
      typedef __gnu_cxx :: __normal_iterator < pointer, basic_string > iterator;
      typedef __gnu_cxx :: __normal_iterator < const_pointer, basic_string >
                                                            const_iterator;
      typedef std :: reverse_iterator < const_iterator > const_reverse_iterator;
      typedef std :: reverse_iterator < iterator > reverse_iterator;

    private :

      struct _Rep_base
      {
 size_type _M_length;
 size_type _M_capacity;
 _Atomic_word _M_refcount;
      };

      struct _Rep : _Rep_base
      {

 typedef typename _Alloc :: template rebind < char > :: other _Raw_bytes_alloc;

 static const size_type _S_max_size;
 static const _CharT _S_terminal;



        static size_type _S_empty_rep_storage [ ];

        static _Rep &
        _S_empty_rep ( )
        {



   void * __p = reinterpret_cast < void * > ( & _S_empty_rep_storage );
   return * reinterpret_cast < _Rep * > ( __p );
 }

        bool
 _M_is_leaked ( ) const
        { return this -> _M_refcount < 0; }

        bool
 _M_is_shared ( ) const
        { return this -> _M_refcount > 0; }

        void
 _M_set_leaked ( )
        { this -> _M_refcount = - 1; }

        void
 _M_set_sharable ( )
        { this -> _M_refcount = 0; }

 void
 _M_set_length_and_sharable ( size_type __n )
 {
   this -> _M_set_sharable ( );
   this -> _M_length = __n;
   traits_type :: assign ( this -> _M_refdata ( ) [ __n ], _S_terminal );


 }

 _CharT *
 _M_refdata ( ) throw ( )
 { return reinterpret_cast < _CharT * > ( this + 1 ); }

 _CharT *
 _M_grab ( const _Alloc & __alloc1, const _Alloc & __alloc2 )
 {
   return ( ! _M_is_leaked ( ) && __alloc1 == __alloc2 )
           ? _M_refcopy ( ) : _M_clone ( __alloc1 );
 }


 static _Rep *
 _S_create ( size_type, size_type, const _Alloc & );

 void
 _M_dispose ( const _Alloc & __a )
 {

   if ( __builtin_expect ( this != & _S_empty_rep ( ), false ) )

     if ( __gnu_cxx :: __exchange_and_add_dispatch ( & this -> _M_refcount,
             - 1 ) <= 0 )
       _M_destroy ( __a );
 }

 void
 _M_destroy ( const _Alloc & ) throw ( );

 _CharT *
 _M_refcopy ( ) throw ( )
 {

   if ( __builtin_expect ( this != & _S_empty_rep ( ), false ) )

            __gnu_cxx :: __atomic_add_dispatch ( & this -> _M_refcount, 1 );
   return _M_refdata ( );
 }

 _CharT *
 _M_clone ( const _Alloc &, size_type __res = 0 );
      };


      struct _Alloc_hider : _Alloc
      {
 _Alloc_hider ( _CharT * __dat, const _Alloc & __a )
 : _Alloc ( __a ), _M_p ( __dat ) { }

 _CharT * _M_p;
      };

    public :




      static const size_type npos = static_cast < size_type > ( - 1 );

    private :

      mutable _Alloc_hider _M_dataplus;

      _CharT *
      _M_data ( ) const
      { return _M_dataplus . _M_p; }

      _CharT *
      _M_data ( _CharT * __p )
      { return ( _M_dataplus . _M_p = __p ); }

      _Rep *
      _M_rep ( ) const
      { return & ( ( reinterpret_cast < _Rep * > ( _M_data ( ) ) ) [ - 1 ] ); }



      iterator
      _M_ibegin ( ) const
      { return iterator ( _M_data ( ) ); }

      iterator
      _M_iend ( ) const
      { return iterator ( _M_data ( ) + this -> size ( ) ); }

      void
      _M_leak ( )
      {
 if ( ! _M_rep ( ) -> _M_is_leaked ( ) )
   _M_leak_hard ( );
      }

      size_type
      _M_check ( size_type __pos, const char * __s ) const
      {
 if ( __pos > this -> size ( ) )
   __throw_out_of_range ( ( __s ) );
 return __pos;
      }

      void
      _M_check_length ( size_type __n1, size_type __n2, const char * __s ) const
      {
 if ( this -> max_size ( ) - ( this -> size ( ) - __n1 ) < __n2 )
   __throw_length_error ( ( __s ) );
      }


      size_type
      _M_limit ( size_type __pos, size_type __off ) const
      {
 const bool __testoff = __off < this -> size ( ) - __pos;
 return __testoff ? __off : this -> size ( ) - __pos;
      }


      bool
      _M_disjunct ( const _CharT * __s ) const
      {
 return ( less < const _CharT * > ( ) ( __s, _M_data ( ) )
  || less < const _CharT * > ( ) ( _M_data ( ) + this -> size ( ), __s ) );
      }



      static void
      _M_copy ( _CharT * __d, const _CharT * __s, size_type __n )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, * __s );
 else
   traits_type :: copy ( __d, __s, __n );
      }

      static void
      _M_move ( _CharT * __d, const _CharT * __s, size_type __n )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, * __s );
 else
   traits_type :: move ( __d, __s, __n );
      }

      static void
      _M_assign ( _CharT * __d, size_type __n, _CharT __c )
      {
 if ( __n == 1 )
   traits_type :: assign ( * __d, __c );
 else
   traits_type :: assign ( __d, __n, __c );
      }



      template < class _Iterator >
        static void
        _S_copy_chars ( _CharT * __p, _Iterator __k1, _Iterator __k2 )
        {
   for (; __k1 != __k2; ++ __k1, ++ __p )
     traits_type :: assign ( * __p, * __k1 );
 }

      static void
      _S_copy_chars ( _CharT * __p, iterator __k1, iterator __k2 )
      { _S_copy_chars ( __p, __k1 . base ( ), __k2 . base ( ) ); }

      static void
      _S_copy_chars ( _CharT * __p, const_iterator __k1, const_iterator __k2 )
      { _S_copy_chars ( __p, __k1 . base ( ), __k2 . base ( ) ); }

      static void
      _S_copy_chars ( _CharT * __p, _CharT * __k1, _CharT * __k2 )
      { _M_copy ( __p, __k1, __k2 - __k1 ); }

      static void
      _S_copy_chars ( _CharT * __p, const _CharT * __k1, const _CharT * __k2 )
      { _M_copy ( __p, __k1, __k2 - __k1 ); }

      static int
      _S_compare ( size_type __n1, size_type __n2 )
      {
 const difference_type __d = difference_type ( __n1 - __n2 );

 if ( __d > __gnu_cxx :: __numeric_traits < int > :: __max )
   return __gnu_cxx :: __numeric_traits < int > :: __max;
 else if ( __d < __gnu_cxx :: __numeric_traits < int > :: __min )
   return __gnu_cxx :: __numeric_traits < int > :: __min;
 else
   return int ( __d );
      }

      void
      _M_mutate ( size_type __pos, size_type __len1, size_type __len2 );

      void
      _M_leak_hard ( );

      static _Rep &
      _S_empty_rep ( )
      { return _Rep :: _S_empty_rep ( ); }

    public :







      inline
      basic_string ( );




      explicit
      basic_string ( const _Alloc & __a );






      basic_string ( const basic_string & __str );






      basic_string ( const basic_string & __str, size_type __pos,
     size_type __n = npos );







      basic_string ( const basic_string & __str, size_type __pos,
     size_type __n, const _Alloc & __a );

      basic_string ( const _CharT * __s, size_type __n,
     const _Alloc & __a = _Alloc ( ) );





      basic_string ( const _CharT * __s, const _Alloc & __a = _Alloc ( ) );






      basic_string ( size_type __n, _CharT __c, const _Alloc & __a = _Alloc ( ) );

      template < class _InputIterator >
        basic_string ( _InputIterator __beg, _InputIterator __end,
       const _Alloc & __a = _Alloc ( ) );




      ~ basic_string ( )
      { _M_rep ( ) -> _M_dispose ( this -> get_allocator ( ) ); }





      basic_string &
      operator = ( const basic_string & __str )
      { return this -> assign ( __str ); }





      basic_string &
      operator = ( const _CharT * __s )
      { return this -> assign ( __s ); }

      basic_string &
      operator = ( _CharT __c )
      {
 this -> assign ( 1, __c );
 return * this;
      }

      iterator
      begin ( )
      {
 _M_leak ( );
 return iterator ( _M_data ( ) );
      }





      const_iterator
      begin ( ) const
      { return const_iterator ( _M_data ( ) ); }





      iterator
      end ( )
      {
 _M_leak ( );
 return iterator ( _M_data ( ) + this -> size ( ) );
      }





      const_iterator
      end ( ) const
      { return const_iterator ( _M_data ( ) + this -> size ( ) ); }






      reverse_iterator
      rbegin ( )
      { return reverse_iterator ( this -> end ( ) ); }






      const_reverse_iterator
      rbegin ( ) const
      { return const_reverse_iterator ( this -> end ( ) ); }






      reverse_iterator
      rend ( )
      { return reverse_iterator ( this -> begin ( ) ); }






      const_reverse_iterator
      rend ( ) const
      { return const_reverse_iterator ( this -> begin ( ) ); }

    public :



      size_type
      size ( ) const
      { return _M_rep ( ) -> _M_length; }



      size_type
      length ( ) const
      { return _M_rep ( ) -> _M_length; }


      size_type
      max_size ( ) const
      { return _Rep :: _S_max_size; }

      void
      resize ( size_type __n, _CharT __c );

      void
      resize ( size_type __n )
      { this -> resize ( __n, _CharT ( ) ); }





      size_type
      capacity ( ) const
      { return _M_rep ( ) -> _M_capacity; }

      void
      reserve ( size_type __res_arg = 0 );




      void
      clear ( )
      { _M_mutate ( 0, this -> size ( ), 0 ); }




      bool
      empty ( ) const
      { return this -> size ( ) == 0; }

      const_reference
      operator [ ] ( size_type __pos ) const
      {
 ;
 return _M_data ( ) [ __pos ];
      }

      reference
      operator [ ] ( size_type __pos )
      {

 ;

 ;
 _M_leak ( );
 return _M_data ( ) [ __pos ];
      }

      const_reference
      at ( size_type __n ) const
      {
 if ( __n >= this -> size ( ) )
   __throw_out_of_range ( ( "basic_string::at" ) );
 return _M_data ( ) [ __n ];
      }

      reference
      at ( size_type __n )
      {
 if ( __n >= size ( ) )
   __throw_out_of_range ( ( "basic_string::at" ) );
 _M_leak ( );
 return _M_data ( ) [ __n ];
      }







      basic_string &
      operator += ( const basic_string & __str )
      { return this -> append ( __str ); }






      basic_string &
      operator += ( const _CharT * __s )
      { return this -> append ( __s ); }






      basic_string &
      operator += ( _CharT __c )
      {
 this -> push_back ( __c );
 return * this;
      }

      basic_string &
      append ( const basic_string & __str );

      basic_string &
      append ( const basic_string & __str, size_type __pos, size_type __n );







      basic_string &
      append ( const _CharT * __s, size_type __n );






      basic_string &
      append ( const _CharT * __s )
      {
 ;
 return this -> append ( __s, traits_type :: length ( __s ) );
      }

      basic_string &
      append ( size_type __n, _CharT __c );

      template < class _InputIterator >
        basic_string &
        append ( _InputIterator __first, _InputIterator __last )
        { return this -> replace ( _M_iend ( ), _M_iend ( ), __first, __last ); }





      void
      push_back ( _CharT __c )
      {
 const size_type __len = 1 + this -> size ( );
 if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
   this -> reserve ( __len );
 traits_type :: assign ( _M_data ( ) [ this -> size ( ) ], __c );
 _M_rep ( ) -> _M_set_length_and_sharable ( __len );
      }






      basic_string &
      assign ( const basic_string & __str );

      basic_string &
      assign ( const basic_string & __str, size_type __pos, size_type __n )
      { return this -> assign ( __str . _M_data ( )
       + __str . _M_check ( __pos, "basic_string::assign" ),
       __str . _M_limit ( __pos, __n ) ); }

      basic_string &
      assign ( const _CharT * __s, size_type __n );

      basic_string &
      assign ( const _CharT * __s )
      {
 ;
 return this -> assign ( __s, traits_type :: length ( __s ) );
      }

      basic_string &
      assign ( size_type __n, _CharT __c )
      { return _M_replace_aux ( size_type ( 0 ), this -> size ( ), __n, __c ); }

      template < class _InputIterator >
        basic_string &
        assign ( _InputIterator __first, _InputIterator __last )
        { return this -> replace ( _M_ibegin ( ), _M_iend ( ), __first, __last ); }

      void
      insert ( iterator __p, size_type __n, _CharT __c )
      { this -> replace ( __p, __p, __n, __c ); }

      template < class _InputIterator >
        void
        insert ( iterator __p, _InputIterator __beg, _InputIterator __end )
        { this -> replace ( __p, __p, __beg, __end ); }

      basic_string &
      insert ( size_type __pos1, const basic_string & __str )
      { return this -> insert ( __pos1, __str, size_type ( 0 ), __str . size ( ) ); }

      basic_string &
      insert ( size_type __pos1, const basic_string & __str,
      size_type __pos2, size_type __n )
      { return this -> insert ( __pos1, __str . _M_data ( )
       + __str . _M_check ( __pos2, "basic_string::insert" ),
       __str . _M_limit ( __pos2, __n ) ); }

      basic_string &
      insert ( size_type __pos, const _CharT * __s, size_type __n );

      basic_string &
      insert ( size_type __pos, const _CharT * __s )
      {
 ;
 return this -> insert ( __pos, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      insert ( size_type __pos, size_type __n, _CharT __c )
      { return _M_replace_aux ( _M_check ( __pos, "basic_string::insert" ),
         size_type ( 0 ), __n, __c ); }

      iterator
      insert ( iterator __p, _CharT __c )
      {
 ;
 const size_type __pos = __p - _M_ibegin ( );
 _M_replace_aux ( __pos, size_type ( 0 ), size_type ( 1 ), __c );
 _M_rep ( ) -> _M_set_leaked ( );
 return iterator ( _M_data ( ) + __pos );
      }

      basic_string &
      erase ( size_type __pos = 0, size_type __n = npos )
      {
 _M_mutate ( _M_check ( __pos, "basic_string::erase" ),
    _M_limit ( __pos, __n ), size_type ( 0 ) );
 return * this;
      }

      iterator
      erase ( iterator __position )
      {
 ;

 const size_type __pos = __position - _M_ibegin ( );
 _M_mutate ( __pos, size_type ( 1 ), size_type ( 0 ) );
 _M_rep ( ) -> _M_set_leaked ( );
 return iterator ( _M_data ( ) + __pos );
      }

      iterator
      erase ( iterator __first, iterator __last )
      {
 ;

        const size_type __pos = __first - _M_ibegin ( );
 _M_mutate ( __pos, __last - __first, size_type ( 0 ) );
 _M_rep ( ) -> _M_set_leaked ( );
 return iterator ( _M_data ( ) + __pos );
      }

      basic_string &
      replace ( size_type __pos, size_type __n, const basic_string & __str )
      { return this -> replace ( __pos, __n, __str . _M_data ( ), __str . size ( ) ); }

      basic_string &
      replace ( size_type __pos1, size_type __n1, const basic_string & __str,
       size_type __pos2, size_type __n2 )
      { return this -> replace ( __pos1, __n1, __str . _M_data ( )
        + __str . _M_check ( __pos2, "basic_string::replace" ),
        __str . _M_limit ( __pos2, __n2 ) ); }

      basic_string &
      replace ( size_type __pos, size_type __n1, const _CharT * __s,
       size_type __n2 );

      basic_string &
      replace ( size_type __pos, size_type __n1, const _CharT * __s )
      {
 ;
 return this -> replace ( __pos, __n1, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      replace ( size_type __pos, size_type __n1, size_type __n2, _CharT __c )
      { return _M_replace_aux ( _M_check ( __pos, "basic_string::replace" ),
         _M_limit ( __pos, __n1 ), __n2, __c ); }

      basic_string &
      replace ( iterator __i1, iterator __i2, const basic_string & __str )
      { return this -> replace ( __i1, __i2, __str . _M_data ( ), __str . size ( ) ); }

      basic_string &
      replace ( iterator __i1, iterator __i2, const _CharT * __s, size_type __n )
      {
 ;

 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1, __s, __n );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, const _CharT * __s )
      {
 ;
 return this -> replace ( __i1, __i2, __s, traits_type :: length ( __s ) );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, size_type __n, _CharT __c )
      {
 ;

 return _M_replace_aux ( __i1 - _M_ibegin ( ), __i2 - __i1, __n, __c );
      }

      template < class _InputIterator >
        basic_string &
        replace ( iterator __i1, iterator __i2,
  _InputIterator __k1, _InputIterator __k2 )
        {
   ;

   ;
   typedef typename std :: __is_integer < _InputIterator > :: __type _Integral;
   return _M_replace_dispatch ( __i1, __i2, __k1, __k2, _Integral ( ) );
 }



      basic_string &
      replace ( iterator __i1, iterator __i2, _CharT * __k1, _CharT * __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1, __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2,
       const _CharT * __k1, const _CharT * __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1, __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2, iterator __k1, iterator __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1 . base ( ), __k2 - __k1 );
      }

      basic_string &
      replace ( iterator __i1, iterator __i2,
       const_iterator __k1, const_iterator __k2 )
      {
 ;

 ;
 return this -> replace ( __i1 - _M_ibegin ( ), __i2 - __i1,
        __k1 . base ( ), __k2 - __k1 );
      }

    private :
      template < class _Integer >
 basic_string &
 _M_replace_dispatch ( iterator __i1, iterator __i2, _Integer __n,
       _Integer __val, __true_type )
        { return _M_replace_aux ( __i1 - _M_ibegin ( ), __i2 - __i1, __n, __val ); }

      template < class _InputIterator >
 basic_string &
 _M_replace_dispatch ( iterator __i1, iterator __i2, _InputIterator __k1,
       _InputIterator __k2, __false_type );

      basic_string &
      _M_replace_aux ( size_type __pos1, size_type __n1, size_type __n2,
       _CharT __c );

      basic_string &
      _M_replace_safe ( size_type __pos1, size_type __n1, const _CharT * __s,
        size_type __n2 );



      template < class _InIterator >
        static _CharT *
        _S_construct_aux ( _InIterator __beg, _InIterator __end,
    const _Alloc & __a, __false_type )
 {
          typedef typename iterator_traits < _InIterator > :: iterator_category _Tag;
          return _S_construct ( __beg, __end, __a, _Tag ( ) );
 }



      template < class _Integer >
        static _CharT *
        _S_construct_aux ( _Integer __beg, _Integer __end,
    const _Alloc & __a, __true_type )
        { return _S_construct ( static_cast < size_type > ( __beg ), __end, __a ); }

      template < class _InIterator >
        static _CharT *
        _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a )
 {
   typedef typename std :: __is_integer < _InIterator > :: __type _Integral;
   return _S_construct_aux ( __beg, __end, __a, _Integral ( ) );
        }


      template < class _InIterator >
        static _CharT *
         _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
        input_iterator_tag );



      template < class _FwdIterator >
        static _CharT *
        _S_construct ( _FwdIterator __beg, _FwdIterator __end, const _Alloc & __a,
       forward_iterator_tag );

      static _CharT *
      _S_construct ( size_type __req, _CharT __c, const _Alloc & __a );

    public :

      size_type
      copy ( _CharT * __s, size_type __n, size_type __pos = 0 ) const;

      void
      swap ( basic_string & __s );

      const _CharT *
      c_str ( ) const
      { return _M_data ( ); }







      const _CharT *
      data ( ) const
      { return _M_data ( ); }




      allocator_type
      get_allocator ( ) const
      { return _M_dataplus; }

      size_type
      find ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find ( _CharT __c, size_type __pos = 0 ) const;

      size_type
      rfind ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> rfind ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      rfind ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      rfind ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> rfind ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      rfind ( _CharT __c, size_type __pos = npos ) const;

      size_type
      find_first_of ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find_first_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_first_of ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find_first_of ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find_first_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_first_of ( _CharT __c, size_type __pos = 0 ) const
      { return this -> find ( __c, __pos ); }

      size_type
      find_last_of ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> find_last_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_last_of ( const _CharT * __s, size_type __pos, size_type __n ) const;

      size_type
      find_last_of ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> find_last_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_last_of ( _CharT __c, size_type __pos = npos ) const
      { return this -> rfind ( __c, __pos ); }

      size_type
      find_first_not_of ( const basic_string & __str, size_type __pos = 0 ) const
      { return this -> find_first_not_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_first_not_of ( const _CharT * __s, size_type __pos,
   size_type __n ) const;

      size_type
      find_first_not_of ( const _CharT * __s, size_type __pos = 0 ) const
      {
 ;
 return this -> find_first_not_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_first_not_of ( _CharT __c, size_type __pos = 0 ) const;

      size_type
      find_last_not_of ( const basic_string & __str, size_type __pos = npos ) const
      { return this -> find_last_not_of ( __str . data ( ), __pos, __str . size ( ) ); }

      size_type
      find_last_not_of ( const _CharT * __s, size_type __pos,
         size_type __n ) const;

      size_type
      find_last_not_of ( const _CharT * __s, size_type __pos = npos ) const
      {
 ;
 return this -> find_last_not_of ( __s, __pos, traits_type :: length ( __s ) );
      }

      size_type
      find_last_not_of ( _CharT __c, size_type __pos = npos ) const;

      basic_string
      substr ( size_type __pos = 0, size_type __n = npos ) const
      { return basic_string ( * this,
       _M_check ( __pos, "basic_string::substr" ), __n ); }

      int
      compare ( const basic_string & __str ) const
      {
 const size_type __size = this -> size ( );
 const size_type __osize = __str . size ( );
 const size_type __len = std :: min ( __size, __osize );

 int __r = traits_type :: compare ( _M_data ( ), __str . data ( ), __len );
 if ( ! __r )
   __r = _S_compare ( __size, __osize );
 return __r;
      }

      int
      compare ( size_type __pos, size_type __n, const basic_string & __str ) const;

      int
      compare ( size_type __pos1, size_type __n1, const basic_string & __str,
       size_type __pos2, size_type __n2 ) const;

      int
      compare ( const _CharT * __s ) const;

      int
      compare ( size_type __pos, size_type __n1, const _CharT * __s ) const;

      int
      compare ( size_type __pos, size_type __n1, const _CharT * __s,
       size_type __n2 ) const;
  };
# 2146 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( )

    : _M_dataplus ( _S_empty_rep ( ) . _M_refdata ( ), _Alloc ( ) ) { }
# 2162 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      basic_string < _CharT, _Traits, _Alloc > __str ( __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 2178 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs );
# 2189 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( _CharT __lhs, const basic_string < _CharT, _Traits, _Alloc > & __rhs );
# 2199 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
      const _CharT * __rhs )
    {
      basic_string < _CharT, _Traits, _Alloc > __str ( __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 2215 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_string < _CharT, _Traits, _Alloc >
    operator + ( const basic_string < _CharT, _Traits, _Alloc > & __lhs, _CharT __rhs )
    {
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      __string_type __str ( __lhs );
      __str . append ( __size_type ( 1 ), __rhs );
      return __str;
    }
# 2233 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) == 0; }
# 2239 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT >
    inline
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value, bool > :: __type
    operator == ( const basic_string < _CharT > & __lhs,
        const basic_string < _CharT > & __rhs )
    { return ( __lhs . size ( ) == __rhs . size ( )
       && ! std :: char_traits < _CharT > :: compare ( __lhs . data ( ), __rhs . data ( ),
          __lhs . size ( ) ) ); }
# 2254 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) == 0; }
# 2266 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator == ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) == 0; }
# 2279 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return ! ( __lhs == __rhs ); }
# 2291 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return ! ( __lhs == __rhs ); }
# 2303 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator != ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return ! ( __lhs == __rhs ); }
# 2316 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) < 0; }
# 2328 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) < 0; }
# 2340 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator < ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) > 0; }
# 2353 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) > 0; }
# 2365 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
       const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) > 0; }
# 2377 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator > ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) < 0; }
# 2390 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) <= 0; }
# 2402 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) <= 0; }
# 2414 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator <= ( const _CharT * __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) >= 0; }
# 2427 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __lhs . compare ( __rhs ) >= 0; }
# 2439 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const basic_string < _CharT, _Traits, _Alloc > & __lhs,
        const _CharT * __rhs )
    { return __lhs . compare ( __rhs ) >= 0; }
# 2451 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline bool
    operator >= ( const _CharT * __lhs,
      const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { return __rhs . compare ( __lhs ) <= 0; }
# 2464 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline void
    swap ( basic_string < _CharT, _Traits, _Alloc > & __lhs,
  basic_string < _CharT, _Traits, _Alloc > & __rhs )
    { __lhs . swap ( __rhs ); }
# 2481 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __is,
        basic_string < _CharT, _Traits, _Alloc > & __str );
# 2488 "/usr/include/c++/4.4/bits/basic_string.h" 3
template<> basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & );
# 2499 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __os,
        const basic_string < _CharT, _Traits, _Alloc > & __str )
    {


      return __ostream_insert ( __os, __str . data ( ), __str . size ( ) );
    }
# 2522 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __is,
     basic_string < _CharT, _Traits, _Alloc > & __str, _CharT __delim );
# 2539 "/usr/include/c++/4.4/bits/basic_string.h" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    inline basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __is,
     basic_string < _CharT, _Traits, _Alloc > & __str )
    { return getline ( __is, __str, __is . widen ( '\n' ) ); }
# 2547 "/usr/include/c++/4.4/bits/basic_string.h" 3
template<> basic_istream< char, char_traits< char> > &getline(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & , char );
# 2553 "/usr/include/c++/4.4/bits/basic_string.h" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &getline(basic_istream< wchar_t, char_traits< wchar_t> > & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & , wchar_t );
# 2557 "/usr/include/c++/4.4/bits/basic_string.h" 3
}
# 46 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 51 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_max_size = ((((npos - sizeof(typename ::std::basic_string< _CharT, _Traits, _Alloc> ::_Rep_base)) / sizeof(_CharT)) - 1) / 4);
# 53 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const _CharT
# 56 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_terminal = (_CharT());
# 58 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 60 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::npos;
# 64 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename basic_string< _CharT, _Traits, _Alloc> ::size_type
# 66 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
basic_string< _CharT, _Traits, _Alloc> ::_Rep::_S_empty_rep_storage[];
# 74 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InIterator >
      _CharT *
      basic_string < _CharT, _Traits, _Alloc > ::
      _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
     input_iterator_tag )
      {

 if ( __beg == __end && __a == _Alloc ( ) )
   return _S_empty_rep ( ) . _M_refdata ( );


 _CharT __buf [ 128 ];
 size_type __len = 0;
 while ( __beg != __end && __len < sizeof ( __buf ) / sizeof ( _CharT ) )
   {
     __buf [ __len ++ ] = * __beg;
     ++ __beg;
   }
 _Rep * __r = _Rep :: _S_create ( __len, size_type ( 0 ), __a );
 _M_copy ( __r -> _M_refdata ( ), __buf, __len );
 try
   {
     while ( __beg != __end )
       {
  if ( __len == __r -> _M_capacity )
    {

      _Rep * __another = _Rep :: _S_create ( __len + 1, __len, __a );
      _M_copy ( __another -> _M_refdata ( ), __r -> _M_refdata ( ), __len );
      __r -> _M_destroy ( __a );
      __r = __another;
    }
  __r -> _M_refdata ( ) [ __len ++ ] = * __beg;
  ++ __beg;
       }
   }
 catch ( ... )
   {
     __r -> _M_destroy ( __a );
     throw;
   }
 __r -> _M_set_length_and_sharable ( __len );
 return __r -> _M_refdata ( );
      }
# 120 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InIterator >
      _CharT *
      basic_string < _CharT, _Traits, _Alloc > ::
      _S_construct ( _InIterator __beg, _InIterator __end, const _Alloc & __a,
     forward_iterator_tag )
      {

 if ( __beg == __end && __a == _Alloc ( ) )
   return _S_empty_rep ( ) . _M_refdata ( );


 if ( __builtin_expect ( __gnu_cxx :: __is_null_pointer ( __beg )
        && __beg != __end, 0 ) )
   __throw_logic_error ( ( "basic_string::_S_construct NULL not valid" ) );

 const size_type __dnew = static_cast < size_type > ( std :: distance ( __beg,
              __end ) );

 _Rep * __r = _Rep :: _S_create ( __dnew, size_type ( 0 ), __a );
 try
   { _S_copy_chars ( __r -> _M_refdata ( ), __beg, __end ); }
 catch ( ... )
   {
     __r -> _M_destroy ( __a );
     throw;
   }
 __r -> _M_set_length_and_sharable ( __dnew );
 return __r -> _M_refdata ( );
      }
# 151 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    _CharT *
    basic_string < _CharT, _Traits, _Alloc > ::
    _S_construct ( size_type __n, _CharT __c, const _Alloc & __a )
    {

      if ( __n == 0 && __a == _Alloc ( ) )
 return _S_empty_rep ( ) . _M_refdata ( );


      _Rep * __r = _Rep :: _S_create ( __n, size_type ( 0 ), __a );
      if ( __n )
 _M_assign ( __r -> _M_refdata ( ), __n, __c );

      __r -> _M_set_length_and_sharable ( __n );
      return __r -> _M_refdata ( );
    }
# 169 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str )
    : _M_dataplus ( __str . _M_rep ( ) -> _M_grab ( _Alloc ( __str . get_allocator ( ) ),
       __str . get_allocator ( ) ),
    __str . get_allocator ( ) )
    { }
# 177 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _Alloc & __a )
    : _M_dataplus ( _S_construct ( size_type ( ), _CharT ( ), __a ), __a )
    { }
# 183 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str, size_type __pos, size_type __n )
    : _M_dataplus ( _S_construct ( __str . _M_data ( )
          + __str . _M_check ( __pos,
      "basic_string::basic_string" ),
          __str . _M_data ( ) + __str . _M_limit ( __pos, __n )
          + __pos, _Alloc ( ) ), _Alloc ( ) )
    { }
# 193 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const basic_string & __str, size_type __pos,
   size_type __n, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __str . _M_data ( )
          + __str . _M_check ( __pos,
      "basic_string::basic_string" ),
          __str . _M_data ( ) + __str . _M_limit ( __pos, __n )
          + __pos, __a ), __a )
    { }
# 205 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _CharT * __s, size_type __n, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __s, __s + __n, __a ), __a )
    { }
# 212 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( const _CharT * __s, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __s, __s ? __s + traits_type :: length ( __s ) :
          __s + npos, __a ), __a )
    { }
# 219 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( size_type __n, _CharT __c, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __n, __c, __a ), __a )
    { }
# 226 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InputIterator >
    basic_string < _CharT, _Traits, _Alloc > ::
    basic_string ( _InputIterator __beg, _InputIterator __end, const _Alloc & __a )
    : _M_dataplus ( _S_construct ( __beg, __end, __a ), __a )
    { }
# 241 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    assign ( const basic_string & __str )
    {
      if ( _M_rep ( ) != __str . _M_rep ( ) )
 {

   const allocator_type __a = this -> get_allocator ( );
   _CharT * __tmp = __str . _M_rep ( ) -> _M_grab ( __a, __str . get_allocator ( ) );
   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __tmp );
 }
      return * this;
    }
# 257 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    assign ( const _CharT * __s, size_type __n )
    {
      ;
      _M_check_length ( this -> size ( ), __n, "basic_string::assign" );
      if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
 return _M_replace_safe ( size_type ( 0 ), this -> size ( ), __s, __n );
      else
 {

   const size_type __pos = __s - _M_data ( );
   if ( __pos >= __n )
     _M_copy ( _M_data ( ), __s, __n );
   else if ( __pos )
     _M_move ( _M_data ( ), __s, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __n );
   return * this;
 }
     }
# 279 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( size_type __n, _CharT __c )
    {
      if ( __n )
 {
   _M_check_length ( size_type ( 0 ), __n, "basic_string::append" );
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_assign ( _M_data ( ) + this -> size ( ), __n, __c );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 296 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const _CharT * __s, size_type __n )
    {
      ;
      if ( __n )
 {
   _M_check_length ( size_type ( 0 ), __n, "basic_string::append" );
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     {
       if ( _M_disjunct ( __s ) )
  this -> reserve ( __len );
       else
  {
    const size_type __off = __s - _M_data ( );
    this -> reserve ( __len );
    __s = _M_data ( ) + __off;
  }
     }
   _M_copy ( _M_data ( ) + this -> size ( ), __s, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 323 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const basic_string & __str )
    {
      const size_type __size = __str . size ( );
      if ( __size )
 {
   const size_type __len = __size + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_copy ( _M_data ( ) + this -> size ( ), __str . _M_data ( ), __size );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 340 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    append ( const basic_string & __str, size_type __pos, size_type __n )
    {
      __str . _M_check ( __pos, "basic_string::append" );
      __n = __str . _M_limit ( __pos, __n );
      if ( __n )
 {
   const size_type __len = __n + this -> size ( );
   if ( __len > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
     this -> reserve ( __len );
   _M_copy ( _M_data ( ) + this -> size ( ), __str . _M_data ( ) + __pos, __n );
   _M_rep ( ) -> _M_set_length_and_sharable ( __len );
 }
      return * this;
    }
# 358 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
     basic_string < _CharT, _Traits, _Alloc > &
     basic_string < _CharT, _Traits, _Alloc > ::
     insert ( size_type __pos, const _CharT * __s, size_type __n )
     {
       ;
       _M_check ( __pos, "basic_string::insert" );
       _M_check_length ( size_type ( 0 ), __n, "basic_string::insert" );
       if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
         return _M_replace_safe ( __pos, size_type ( 0 ), __s, __n );
       else
         {

           const size_type __off = __s - _M_data ( );
           _M_mutate ( __pos, 0, __n );
           __s = _M_data ( ) + __off;
           _CharT * __p = _M_data ( ) + __pos;
           if ( __s + __n <= __p )
             _M_copy ( __p, __s, __n );
           else if ( __s >= __p )
             _M_copy ( __p, __s + __n, __n );
           else
             {
        const size_type __nleft = __p - __s;
               _M_copy ( __p, __s, __nleft );
               _M_copy ( __p + __nleft, __p + __n, __n - __nleft );
             }
           return * this;
         }
     }
# 389 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
     basic_string < _CharT, _Traits, _Alloc > &
     basic_string < _CharT, _Traits, _Alloc > ::
     replace ( size_type __pos, size_type __n1, const _CharT * __s,
      size_type __n2 )
     {
       ;
       _M_check ( __pos, "basic_string::replace" );
       __n1 = _M_limit ( __pos, __n1 );
       _M_check_length ( __n1, __n2, "basic_string::replace" );
       bool __left;
       if ( _M_disjunct ( __s ) || _M_rep ( ) -> _M_is_shared ( ) )
         return _M_replace_safe ( __pos, __n1, __s, __n2 );
       else if ( ( __left = __s + __n2 <= _M_data ( ) + __pos )
  || _M_data ( ) + __pos + __n1 <= __s )
  {

    size_type __off = __s - _M_data ( );
    __left ? __off : ( __off += __n2 - __n1 );
    _M_mutate ( __pos, __n1, __n2 );
    _M_copy ( _M_data ( ) + __pos, _M_data ( ) + __off, __n2 );
    return * this;
  }
       else
  {

    const basic_string __tmp ( __s, __n2 );
    return _M_replace_safe ( __pos, __n1, __tmp . _M_data ( ), __n2 );
  }
     }
# 420 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _M_destroy ( const _Alloc & __a ) throw ( )
    {
      const size_type __size = sizeof ( _Rep_base ) +
                        ( this -> _M_capacity + 1 ) * sizeof ( _CharT );
      _Raw_bytes_alloc ( __a ) . deallocate ( reinterpret_cast < char * > ( this ), __size );
    }
# 430 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_leak_hard ( )
    {

      if ( _M_rep ( ) == & _S_empty_rep ( ) )
 return;

      if ( _M_rep ( ) -> _M_is_shared ( ) )
 _M_mutate ( 0, 0, 0 );
      _M_rep ( ) -> _M_set_leaked ( );
    }
# 444 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_mutate ( size_type __pos, size_type __len1, size_type __len2 )
    {
      const size_type __old_size = this -> size ( );
      const size_type __new_size = __old_size + __len2 - __len1;
      const size_type __how_much = __old_size - __pos - __len1;

      if ( __new_size > this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
 {

   const allocator_type __a = get_allocator ( );
   _Rep * __r = _Rep :: _S_create ( __new_size, this -> capacity ( ), __a );

   if ( __pos )
     _M_copy ( __r -> _M_refdata ( ), _M_data ( ), __pos );
   if ( __how_much )
     _M_copy ( __r -> _M_refdata ( ) + __pos + __len2,
      _M_data ( ) + __pos + __len1, __how_much );

   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __r -> _M_refdata ( ) );
 }
      else if ( __how_much && __len1 != __len2 )
 {

   _M_move ( _M_data ( ) + __pos + __len2,
    _M_data ( ) + __pos + __len1, __how_much );
 }
      _M_rep ( ) -> _M_set_length_and_sharable ( __new_size );
    }
# 477 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    reserve ( size_type __res )
    {
      if ( __res != this -> capacity ( ) || _M_rep ( ) -> _M_is_shared ( ) )
        {

   if ( __res < this -> size ( ) )
     __res = this -> size ( );
   const allocator_type __a = get_allocator ( );
   _CharT * __tmp = _M_rep ( ) -> _M_clone ( __a, __res - this -> size ( ) );
   _M_rep ( ) -> _M_dispose ( __a );
   _M_data ( __tmp );
        }
    }
# 494 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    swap ( basic_string & __s )
    {
      if ( _M_rep ( ) -> _M_is_leaked ( ) )
 _M_rep ( ) -> _M_set_sharable ( );
      if ( __s . _M_rep ( ) -> _M_is_leaked ( ) )
 __s . _M_rep ( ) -> _M_set_sharable ( );
      if ( this -> get_allocator ( ) == __s . get_allocator ( ) )
 {
   _CharT * __tmp = _M_data ( );
   _M_data ( __s . _M_data ( ) );
   __s . _M_data ( __tmp );
 }

      else
 {
   const basic_string __tmp1 ( _M_ibegin ( ), _M_iend ( ),
        __s . get_allocator ( ) );
   const basic_string __tmp2 ( __s . _M_ibegin ( ), __s . _M_iend ( ),
        this -> get_allocator ( ) );
   * this = __tmp2;
   __s = __tmp1;
 }
    }
# 521 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: _Rep *
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _S_create ( size_type __capacity, size_type __old_capacity,
       const _Alloc & __alloc )
    {


      if ( __capacity > _S_max_size )
 __throw_length_error ( ( "basic_string::_S_create" ) );

      const size_type __pagesize = 4096;
      const size_type __malloc_header_size = 4 * sizeof ( void * );







      if ( __capacity > __old_capacity && __capacity < 2 * __old_capacity )
 __capacity = 2 * __old_capacity;




      size_type __size = ( __capacity + 1 ) * sizeof ( _CharT ) + sizeof ( _Rep );

      const size_type __adj_size = __size + __malloc_header_size;
      if ( __adj_size > __pagesize && __capacity > __old_capacity )
 {
   const size_type __extra = __pagesize - __adj_size % __pagesize;
   __capacity += __extra / sizeof ( _CharT );

   if ( __capacity > _S_max_size )
     __capacity = _S_max_size;
   __size = ( __capacity + 1 ) * sizeof ( _CharT ) + sizeof ( _Rep );
 }



      void * __place = _Raw_bytes_alloc ( __alloc ) . allocate ( __size );
      _Rep * __p = new ( __place ) _Rep;
      __p -> _M_capacity = __capacity;







      __p -> _M_set_sharable ( );
      return __p;
    }
# 599 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    _CharT *
    basic_string < _CharT, _Traits, _Alloc > :: _Rep ::
    _M_clone ( const _Alloc & __alloc, size_type __res )
    {

      const size_type __requested_cap = this -> _M_length + __res;
      _Rep * __r = _Rep :: _S_create ( __requested_cap, this -> _M_capacity,
      __alloc );
      if ( this -> _M_length )
 _M_copy ( __r -> _M_refdata ( ), _M_refdata ( ), this -> _M_length );

      __r -> _M_set_length_and_sharable ( this -> _M_length );
      return __r -> _M_refdata ( );
    }
# 615 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    void
    basic_string < _CharT, _Traits, _Alloc > ::
    resize ( size_type __n, _CharT __c )
    {
      const size_type __size = this -> size ( );
      _M_check_length ( __size, __n, "basic_string::resize" );
      if ( __size < __n )
 this -> append ( __n - __size, __c );
      else if ( __n < __size )
 this -> erase ( __n );

    }
# 629 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    template < typename _InputIterator >
      basic_string < _CharT, _Traits, _Alloc > &
      basic_string < _CharT, _Traits, _Alloc > ::
      _M_replace_dispatch ( iterator __i1, iterator __i2, _InputIterator __k1,
     _InputIterator __k2, __false_type )
      {
 const basic_string __s ( __k1, __k2 );
 const size_type __n1 = __i2 - __i1;
 _M_check_length ( __n1, __s . size ( ), "basic_string::_M_replace_dispatch" );
 return _M_replace_safe ( __i1 - _M_ibegin ( ), __n1, __s . _M_data ( ),
          __s . size ( ) );
      }
# 643 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_replace_aux ( size_type __pos1, size_type __n1, size_type __n2,
     _CharT __c )
    {
      _M_check_length ( __n1, __n2, "basic_string::_M_replace_aux" );
      _M_mutate ( __pos1, __n1, __n2 );
      if ( __n2 )
 _M_assign ( _M_data ( ) + __pos1, __n2, __c );
      return * this;
    }
# 656 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc > &
    basic_string < _CharT, _Traits, _Alloc > ::
    _M_replace_safe ( size_type __pos1, size_type __n1, const _CharT * __s,
      size_type __n2 )
    {
      _M_mutate ( __pos1, __n1, __n2 );
      if ( __n2 )
 _M_copy ( _M_data ( ) + __pos1, __s, __n2 );
      return * this;
    }
# 668 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( const _CharT * __lhs,
       const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      ;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      const __size_type __len = _Traits :: length ( __lhs );
      __string_type __str;
      __str . reserve ( __len + __rhs . size ( ) );
      __str . append ( __lhs, __len );
      __str . append ( __rhs );
      return __str;
    }
# 684 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_string < _CharT, _Traits, _Alloc >
    operator + ( _CharT __lhs, const basic_string < _CharT, _Traits, _Alloc > & __rhs )
    {
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __string_type :: size_type __size_type;
      __string_type __str;
      const __size_type __len = __rhs . size ( );
      __str . reserve ( __len + 1 );
      __str . append ( __size_type ( 1 ), __lhs );
      __str . append ( __rhs );
      return __str;
    }
# 698 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    copy ( _CharT * __s, size_type __n, size_type __pos ) const
    {
      _M_check ( __pos, "basic_string::copy" );
      __n = _M_limit ( __pos, __n );
      ;
      if ( __n )
 _M_copy ( __s, _M_data ( ) + __pos, __n );

      return __n;
    }
# 712 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      const size_type __size = this -> size ( );
      const _CharT * __data = _M_data ( );

      if ( __n == 0 )
 return __pos <= __size ? __pos : npos;

      if ( __n <= __size )
 {
   for (; __pos <= __size - __n; ++ __pos )
     if ( traits_type :: eq ( __data [ __pos ], __s [ 0 ] )
  && traits_type :: compare ( __data + __pos + 1,
     __s + 1, __n - 1 ) == 0 )
       return __pos;
 }
      return npos;
    }
# 735 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find ( _CharT __c, size_type __pos ) const
    {
      size_type __ret = npos;
      const size_type __size = this -> size ( );
      if ( __pos < __size )
 {
   const _CharT * __data = _M_data ( );
   const size_type __n = __size - __pos;
   const _CharT * __p = traits_type :: find ( __data + __pos, __n, __c );
   if ( __p )
     __ret = __p - __data;
 }
      return __ret;
    }
# 753 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    rfind ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      const size_type __size = this -> size ( );
      if ( __n <= __size )
 {
   __pos = std :: min ( size_type ( __size - __n ), __pos );
   const _CharT * __data = _M_data ( );
   do
     {
       if ( traits_type :: compare ( __data + __pos, __s, __n ) == 0 )
  return __pos;
     }
   while ( __pos -- > 0 );
 }
      return npos;
    }
# 774 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    rfind ( _CharT __c, size_type __pos ) const
    {
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   for ( ++ __size; __size -- > 0; )
     if ( traits_type :: eq ( _M_data ( ) [ __size ], __c ) )
       return __size;
 }
      return npos;
    }
# 791 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      for (; __n && __pos < this -> size ( ); ++ __pos )
 {
   const _CharT * __p = traits_type :: find ( __s, __n, _M_data ( ) [ __pos ] );
   if ( __p )
     return __pos;
 }
      return npos;
    }
# 806 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      size_type __size = this -> size ( );
      if ( __size && __n )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( traits_type :: find ( __s, __n, _M_data ( ) [ __size ] ) )
  return __size;
     }
   while ( __size -- != 0 );
 }
      return npos;
    }
# 827 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_not_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      for (; __pos < this -> size ( ); ++ __pos )
 if ( ! traits_type :: find ( __s, __n, _M_data ( ) [ __pos ] ) )
   return __pos;
      return npos;
    }
# 839 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_first_not_of ( _CharT __c, size_type __pos ) const
    {
      for (; __pos < this -> size ( ); ++ __pos )
 if ( ! traits_type :: eq ( _M_data ( ) [ __pos ], __c ) )
   return __pos;
      return npos;
    }
# 850 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_not_of ( const _CharT * __s, size_type __pos, size_type __n ) const
    {
      ;
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( ! traits_type :: find ( __s, __n, _M_data ( ) [ __size ] ) )
  return __size;
     }
   while ( __size -- );
 }
      return npos;
    }
# 871 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    typename basic_string < _CharT, _Traits, _Alloc > :: size_type
    basic_string < _CharT, _Traits, _Alloc > ::
    find_last_not_of ( _CharT __c, size_type __pos ) const
    {
      size_type __size = this -> size ( );
      if ( __size )
 {
   if ( -- __size > __pos )
     __size = __pos;
   do
     {
       if ( ! traits_type :: eq ( _M_data ( ) [ __size ], __c ) )
  return __size;
     }
   while ( __size -- );
 }
      return npos;
    }
# 891 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n, const basic_string & __str ) const
    {
      _M_check ( __pos, "basic_string::compare" );
      __n = _M_limit ( __pos, __n );
      const size_type __osize = __str . size ( );
      const size_type __len = std :: min ( __n, __osize );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __str . data ( ), __len );
      if ( ! __r )
 __r = _S_compare ( __n, __osize );
      return __r;
    }
# 906 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos1, size_type __n1, const basic_string & __str,
     size_type __pos2, size_type __n2 ) const
    {
      _M_check ( __pos1, "basic_string::compare" );
      __str . _M_check ( __pos2, "basic_string::compare" );
      __n1 = _M_limit ( __pos1, __n1 );
      __n2 = __str . _M_limit ( __pos2, __n2 );
      const size_type __len = std :: min ( __n1, __n2 );
      int __r = traits_type :: compare ( _M_data ( ) + __pos1,
         __str . data ( ) + __pos2, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __n2 );
      return __r;
    }
# 924 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( const _CharT * __s ) const
    {
      ;
      const size_type __size = this -> size ( );
      const size_type __osize = traits_type :: length ( __s );
      const size_type __len = std :: min ( __size, __osize );
      int __r = traits_type :: compare ( _M_data ( ), __s, __len );
      if ( ! __r )
 __r = _S_compare ( __size, __osize );
      return __r;
    }
# 939 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n1, const _CharT * __s ) const
    {
      ;
      _M_check ( __pos, "basic_string::compare" );
      __n1 = _M_limit ( __pos, __n1 );
      const size_type __osize = traits_type :: length ( __s );
      const size_type __len = std :: min ( __n1, __osize );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __s, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __osize );
      return __r;
    }
# 955 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    int
    basic_string < _CharT, _Traits, _Alloc > ::
    compare ( size_type __pos, size_type __n1, const _CharT * __s,
     size_type __n2 ) const
    {
      ;
      _M_check ( __pos, "basic_string::compare" );
      __n1 = _M_limit ( __pos, __n1 );
      const size_type __len = std :: min ( __n1, __n2 );
      int __r = traits_type :: compare ( _M_data ( ) + __pos, __s, __len );
      if ( ! __r )
 __r = _S_compare ( __n1, __n2 );
      return __r;
    }
# 972 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in,
        basic_string < _CharT, _Traits, _Alloc > & __str )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __istream_type :: ios_base __ios_base;
      typedef typename __istream_type :: int_type __int_type;
      typedef typename __string_type :: size_type __size_type;
      typedef ctype < _CharT > __ctype_type;
      typedef typename __ctype_type :: ctype_base __ctype_base;

      __size_type __extracted = 0;
      typename __ios_base :: iostate __err = __ios_base :: goodbit;
      typename __istream_type :: sentry __cerb ( __in, false );
      if ( __cerb )
 {
   try
     {

       __str . erase ( );
       _CharT __buf [ 128 ];
       __size_type __len = 0;
       const streamsize __w = __in . width ( );
       const __size_type __n = __w > 0 ? static_cast < __size_type > ( __w )
                                : __str . max_size ( );
       const __ctype_type & __ct = use_facet < __ctype_type > ( __in . getloc ( ) );
       const __int_type __eof = _Traits :: eof ( );
       __int_type __c = __in . rdbuf ( ) -> sgetc ( );

       while ( __extracted < __n
       && ! _Traits :: eq_int_type ( __c, __eof )
       && ! __ct . is ( __ctype_base :: space,
     _Traits :: to_char_type ( __c ) ) )
  {
    if ( __len == sizeof ( __buf ) / sizeof ( _CharT ) )
      {
        __str . append ( __buf, sizeof ( __buf ) / sizeof ( _CharT ) );
        __len = 0;
      }
    __buf [ __len ++ ] = _Traits :: to_char_type ( __c );
    ++ __extracted;
    __c = __in . rdbuf ( ) -> snextc ( );
  }
       __str . append ( __buf, __len );

       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __err |= __ios_base :: eofbit;
       __in . width ( 0 );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     {



       __in . _M_setstate ( __ios_base :: badbit );
     }
 }

      if ( ! __extracted )
 __err |= __ios_base :: failbit;
      if ( __err )
 __in . setstate ( __err );
      return __in;
    }
# 1044 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    basic_istream < _CharT, _Traits > &
    getline ( basic_istream < _CharT, _Traits > & __in,
     basic_string < _CharT, _Traits, _Alloc > & __str, _CharT __delim )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_string < _CharT, _Traits, _Alloc > __string_type;
      typedef typename __istream_type :: ios_base __ios_base;
      typedef typename __istream_type :: int_type __int_type;
      typedef typename __string_type :: size_type __size_type;

      __size_type __extracted = 0;
      const __size_type __n = __str . max_size ( );
      typename __ios_base :: iostate __err = __ios_base :: goodbit;
      typename __istream_type :: sentry __cerb ( __in, true );
      if ( __cerb )
 {
   try
     {
       __str . erase ( );
       const __int_type __idelim = _Traits :: to_int_type ( __delim );
       const __int_type __eof = _Traits :: eof ( );
       __int_type __c = __in . rdbuf ( ) -> sgetc ( );

       while ( __extracted < __n
       && ! _Traits :: eq_int_type ( __c, __eof )
       && ! _Traits :: eq_int_type ( __c, __idelim ) )
  {
    __str += _Traits :: to_char_type ( __c );
    ++ __extracted;
    __c = __in . rdbuf ( ) -> snextc ( );
  }

       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __err |= __ios_base :: eofbit;
       else if ( _Traits :: eq_int_type ( __c, __idelim ) )
  {
    ++ __extracted;
    __in . rdbuf ( ) -> sbumpc ( );
  }
       else
  __err |= __ios_base :: failbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( __ios_base :: badbit );
       throw;
     }
   catch ( ... )
     {



       __in . _M_setstate ( __ios_base :: badbit );
     }
 }
      if ( ! __extracted )
 __err |= __ios_base :: failbit;
      if ( __err )
 __in . setstate ( __err );
      return __in;
    }
# 1111 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template class basic_string< char, char_traits< char> , allocator< char> > ;
# 1112 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & );
# 1115 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const basic_string< char, char_traits< char> , allocator< char> > & );
# 1118 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< char, char_traits< char> > &getline(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & , char );
# 1121 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< char, char_traits< char> > &getline(basic_istream< char, char_traits< char> > & , basic_string< char, char_traits< char> , allocator< char> > & );
# 1126 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template class basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > ;
# 1127 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1130 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , const basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1133 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &getline(basic_istream< wchar_t, char_traits< wchar_t> > & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & , wchar_t );
# 1136 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &getline(basic_istream< wchar_t, char_traits< wchar_t> > & , basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & );
# 1142 "/usr/include/c++/4.4/bits/basic_string.tcc" 3
}
# 45 "/usr/include/c++/4.4/bits/locale_classes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 61 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale {
# 66 "/usr/include/c++/4.4/bits/locale_classes.h" 3
public: typedef int category;
# 69 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class facet;
# 70 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class id;
# 71 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class _Impl;
# 73 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class facet;
# 74 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class _Impl;
# 76 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 80 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 84 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Cache> friend struct __use_cache;
# 97 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category none = 0;
# 98 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category ctype = (1L << 0);
# 99 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category numeric = (1L << 1);
# 100 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category collate = (1L << 2);
# 101 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category time = (1L << 3);
# 102 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category monetary = (1L << 4);
# 103 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category messages = (1L << 5);
# 104 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const category all = (((((ctype | numeric) | collate) | time) | monetary) | messages);
# 116 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale() throw();
# 125 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale(const locale & ) throw();
# 136 "/usr/include/c++/4.4/bits/locale_classes.h" 3
explicit locale(const char * );
# 150 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale(const locale & , const char * , category );
# 163 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale(const locale & , const locale & , category );
# 175 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Facet >
      locale ( const locale & __other, _Facet * __f );
# 179 "/usr/include/c++/4.4/bits/locale_classes.h" 3
~locale() throw();
# 190 "/usr/include/c++/4.4/bits/locale_classes.h" 3
const locale &operator=(const locale & ) throw();
# 204 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Facet >
      locale
      combine ( const locale & __other ) const;
# 214 "/usr/include/c++/4.4/bits/locale_classes.h" 3
string name() const;
# 224 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool operator==(const locale & ) const throw();
# 233 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool operator!=(const locale &__other) const throw()
# 234 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ return !this->operator==(__other); }
# 251 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Char, typename _Traits, typename _Alloc >
      bool
      operator ( ) ( const basic_string < _Char, _Traits, _Alloc > & __s1,
   const basic_string < _Char, _Traits, _Alloc > & __s2 ) const;
# 268 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static locale global(const locale &);
# 274 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale &classic();
# 278 "/usr/include/c++/4.4/bits/locale_classes.h" 3
private: _Impl *_M_impl;
# 281 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static _Impl *_S_classic;
# 284 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static _Impl *_S_global;
# 290 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const char *const *const _S_categories;
# 302 "/usr/include/c++/4.4/bits/locale_classes.h" 3
enum { _S_categories_size = 12};
# 305 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __gthread_once_t _S_once;
# 309 "/usr/include/c++/4.4/bits/locale_classes.h" 3
explicit locale(_Impl *) throw();
# 312 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_initialize();
# 315 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_initialize_once();
# 318 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static category _S_normalize_category(category);
# 321 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_coalesce(const locale & , const locale & , category );
# 322 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 335 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale::facet {
# 338 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale;
# 339 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale::_Impl;
# 341 "/usr/include/c++/4.4/bits/locale_classes.h" 3
mutable _Atomic_word _M_refcount;
# 344 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __c_locale _S_c_locale;
# 347 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const char _S_c_name[2];
# 350 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __gthread_once_t _S_once;
# 354 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_initialize_once();
# 367 "/usr/include/c++/4.4/bits/locale_classes.h" 3
protected: explicit facet(size_t __refs = (0)) throw() : _M_refcount(((__refs) ? 1 : 0))
# 368 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ }
# 372 "/usr/include/c++/4.4/bits/locale_classes.h" 3
virtual ~facet();
# 375 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_create_c_locale(__c_locale & , const char * , __c_locale = 0);
# 379 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __c_locale _S_clone_c_locale(__c_locale & );
# 382 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static void _S_destroy_c_locale(__c_locale & );
# 387 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static __c_locale _S_get_c_locale();
# 390 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const char *_S_get_c_name();
# 394 "/usr/include/c++/4.4/bits/locale_classes.h" 3
private: void _M_add_reference() const throw()
# 395 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 398 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_remove_reference() const throw()
# 399 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 400 "/usr/include/c++/4.4/bits/locale_classes.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1) == 1)
# 401 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 402 "/usr/include/c++/4.4/bits/locale_classes.h" 3
try
# 403 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ delete this; }
# 404 "/usr/include/c++/4.4/bits/locale_classes.h" 3
catch (...)
# 405 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ }
# 406 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 407 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 409 "/usr/include/c++/4.4/bits/locale_classes.h" 3
facet(const locale::facet &);
# 412 "/usr/include/c++/4.4/bits/locale_classes.h" 3
locale::facet &operator=(const locale::facet &);
# 413 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 426 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale::id {
# 429 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale;
# 430 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale::_Impl;
# 432 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 436 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 443 "/usr/include/c++/4.4/bits/locale_classes.h" 3
mutable size_t _M_index;
# 446 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static _Atomic_word _S_refcount;
# 449 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void operator=(const locale::id &);
# 451 "/usr/include/c++/4.4/bits/locale_classes.h" 3
id(const locale::id &);
# 457 "/usr/include/c++/4.4/bits/locale_classes.h" 3
public: id() { }
# 460 "/usr/include/c++/4.4/bits/locale_classes.h" 3
size_t _M_id() const;
# 461 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 465 "/usr/include/c++/4.4/bits/locale_classes.h" 3
class locale::_Impl {
# 469 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale;
# 470 "/usr/include/c++/4.4/bits/locale_classes.h" 3
friend class locale::facet;
# 472 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 476 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 480 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Cache> friend struct __use_cache;
# 485 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Atomic_word _M_refcount;
# 486 "/usr/include/c++/4.4/bits/locale_classes.h" 3
const locale::facet **_M_facets;
# 487 "/usr/include/c++/4.4/bits/locale_classes.h" 3
size_t _M_facets_size;
# 488 "/usr/include/c++/4.4/bits/locale_classes.h" 3
const locale::facet **_M_caches;
# 489 "/usr/include/c++/4.4/bits/locale_classes.h" 3
char **_M_names;
# 490 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_ctype[];
# 491 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_numeric[];
# 492 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_collate[];
# 493 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_time[];
# 494 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_monetary[];
# 495 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const _S_id_messages[];
# 496 "/usr/include/c++/4.4/bits/locale_classes.h" 3
static const locale::id *const *const _S_facet_categories[];
# 499 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_add_reference() throw()
# 500 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 503 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_remove_reference() throw()
# 504 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 505 "/usr/include/c++/4.4/bits/locale_classes.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1) == 1)
# 506 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 507 "/usr/include/c++/4.4/bits/locale_classes.h" 3
try
# 508 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ delete this; }
# 509 "/usr/include/c++/4.4/bits/locale_classes.h" 3
catch (...)
# 510 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{ }
# 511 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 512 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 514 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(const locale::_Impl &, size_t);
# 515 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(const char *, size_t);
# 516 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(size_t) throw();
# 518 "/usr/include/c++/4.4/bits/locale_classes.h" 3
~_Impl() throw();
# 520 "/usr/include/c++/4.4/bits/locale_classes.h" 3
_Impl(const locale::_Impl &);
# 523 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void operator=(const locale::_Impl &);
# 526 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool _M_check_same_name()
# 527 "/usr/include/c++/4.4/bits/locale_classes.h" 3
{
# 528 "/usr/include/c++/4.4/bits/locale_classes.h" 3
bool __ret = true;
# 529 "/usr/include/c++/4.4/bits/locale_classes.h" 3
if ((_M_names)[1]) {
# 531 "/usr/include/c++/4.4/bits/locale_classes.h" 3
for (size_t __i = (0); __ret && (__i < ((_S_categories_size) - 1)); ++__i) {
# 532 "/usr/include/c++/4.4/bits/locale_classes.h" 3
__ret = (__builtin_strcmp((_M_names)[__i], (_M_names)[__i + (1)]) == 0); } }
# 533 "/usr/include/c++/4.4/bits/locale_classes.h" 3
return __ret;
# 534 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 537 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_replace_categories(const locale::_Impl *, locale::category);
# 540 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_replace_category(const locale::_Impl *, const locale::id *const *);
# 543 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_replace_facet(const locale::_Impl *, const locale::id *);
# 546 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_install_facet(const locale::id *, const locale::facet *);
# 548 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _Facet >
      void
      _M_init_facet ( _Facet * __facet )
      { _M_install_facet ( & _Facet :: id, __facet ); }
# 554 "/usr/include/c++/4.4/bits/locale_classes.h" 3
void _M_install_cache(const locale::facet *, size_t);
# 555 "/usr/include/c++/4.4/bits/locale_classes.h" 3
};
# 569 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> bool has_facet(const locale & ) throw();
# 586 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _Facet> const _Facet &use_facet(const locale & );
# 603 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _CharT >
    class collate : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;


    protected :


      __c_locale _M_c_locale_collate;

    public :

      static locale :: id id;

      explicit
      collate ( size_t __refs = 0 )
      : facet ( __refs ), _M_c_locale_collate ( _S_get_c_locale ( ) )
      { }

      explicit
      collate ( __c_locale __cloc, size_t __refs = 0 )
      : facet ( __refs ), _M_c_locale_collate ( _S_clone_c_locale ( __cloc ) )
      { }

      int
      compare ( const _CharT * __lo1, const _CharT * __hi1,
       const _CharT * __lo2, const _CharT * __hi2 ) const
      { return this -> do_compare ( __lo1, __hi1, __lo2, __hi2 ); }

      string_type
      transform ( const _CharT * __lo, const _CharT * __hi ) const
      { return this -> do_transform ( __lo, __hi ); }

      long
      hash ( const _CharT * __lo, const _CharT * __hi ) const
      { return this -> do_hash ( __lo, __hi ); }


      int
      _M_compare ( const _CharT *, const _CharT * ) const;

      size_t
      _M_transform ( _CharT *, const _CharT *, size_t ) const;

  protected :

      virtual
      ~ collate ( )
      { _S_destroy_c_locale ( _M_c_locale_collate ); }

      virtual int
      do_compare ( const _CharT * __lo1, const _CharT * __hi1,
   const _CharT * __lo2, const _CharT * __hi2 ) const;

      virtual string_type
      do_transform ( const _CharT * __lo, const _CharT * __hi ) const;

      virtual long
      do_hash ( const _CharT * __lo, const _CharT * __hi ) const;
    };
# 756 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template< class _CharT> locale::id
# 757 "/usr/include/c++/4.4/bits/locale_classes.h" 3
collate< _CharT> ::id;
# 762 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> int collate< char> ::_M_compare(const char *, const char *) const;
# 766 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> size_t collate< char> ::_M_transform(char *, const char *, size_t) const;
# 771 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> int collate< wchar_t> ::_M_compare(const wchar_t *, const wchar_t *) const;
# 775 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template<> size_t collate< wchar_t> ::_M_transform(wchar_t *, const wchar_t *, size_t) const;
# 779 "/usr/include/c++/4.4/bits/locale_classes.h" 3
template < typename _CharT >
    class collate_byname : public collate < _CharT >
    {
    public :


      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;


      explicit
      collate_byname ( const char * __s, size_t __refs = 0 )
      : collate < _CharT > ( __refs )
      {
 if ( __builtin_strcmp ( __s, "C" ) != 0
     && __builtin_strcmp ( __s, "POSIX" ) != 0 )
   {
     this -> _S_destroy_c_locale ( this -> _M_c_locale_collate );
     this -> _S_create_c_locale ( this -> _M_c_locale_collate, __s );
   }
      }

    protected :
      virtual
      ~ collate_byname ( ) { }
    };
# 806 "/usr/include/c++/4.4/bits/locale_classes.h" 3
}
# 39 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    locale ::
    locale ( const locale & __other, _Facet * __f )
    {
      _M_impl = new _Impl ( * __other . _M_impl, 1 );

      try
 { _M_impl -> _M_install_facet ( & _Facet :: id, __f ); }
      catch ( ... )
 {
   _M_impl -> _M_remove_reference ( );
   throw;
 }
      delete [ ] _M_impl -> _M_names [ 0 ];
      _M_impl -> _M_names [ 0 ] = 0;
    }
# 58 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    locale
    locale ::
    combine ( const locale & __other ) const
    {
      _Impl * __tmp = new _Impl ( * _M_impl, 1 );
      try
 {
   __tmp -> _M_replace_facet ( __other . _M_impl, & _Facet :: id );
 }
      catch ( ... )
 {
   __tmp -> _M_remove_reference ( );
   throw;
 }
      return locale ( __tmp );
    }
# 76 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT, typename _Traits, typename _Alloc >
    bool
    locale ::
    operator ( ) ( const basic_string < _CharT, _Traits, _Alloc > & __s1,
        const basic_string < _CharT, _Traits, _Alloc > & __s2 ) const
    {
      typedef std :: collate < _CharT > __collate_type;
      const __collate_type & __collate = use_facet < __collate_type > ( * this );
      return ( __collate . compare ( __s1 . data ( ), __s1 . data ( ) + __s1 . length ( ),
    __s2 . data ( ), __s2 . data ( ) + __s2 . length ( ) ) < 0 );
    }
# 89 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    bool
    has_facet ( const locale & __loc ) throw ( )
    {
      const size_t __i = _Facet :: id . _M_id ( );
      const locale :: facet * * __facets = __loc . _M_impl -> _M_facets;
      return ( __i < __loc . _M_impl -> _M_facets_size

       && dynamic_cast < const _Facet * > ( __facets [ __i ] ) );



    }
# 103 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _Facet >
    const _Facet &
    use_facet ( const locale & __loc )
    {
      const size_t __i = _Facet :: id . _M_id ( );
      const locale :: facet * * __facets = __loc . _M_impl -> _M_facets;
      if ( __i >= __loc . _M_impl -> _M_facets_size || ! __facets [ __i ] )
        __throw_bad_cast ( );

      return dynamic_cast < const _Facet & > ( * __facets [ __i ] );



    }
# 120 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    int
    collate < _CharT > :: _M_compare ( const _CharT *, const _CharT * ) const
    { return 0; }
# 126 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    size_t
    collate < _CharT > :: _M_transform ( _CharT *, const _CharT *, size_t ) const
    { return 0; }
# 131 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    int
    collate < _CharT > ::
    do_compare ( const _CharT * __lo1, const _CharT * __hi1,
        const _CharT * __lo2, const _CharT * __hi2 ) const
    {


      const string_type __one ( __lo1, __hi1 );
      const string_type __two ( __lo2, __hi2 );

      const _CharT * __p = __one . c_str ( );
      const _CharT * __pend = __one . data ( ) + __one . length ( );
      const _CharT * __q = __two . c_str ( );
      const _CharT * __qend = __two . data ( ) + __two . length ( );




      for (;; )
 {
   const int __res = _M_compare ( __p, __q );
   if ( __res )
     return __res;

   __p += char_traits < _CharT > :: length ( __p );
   __q += char_traits < _CharT > :: length ( __q );
   if ( __p == __pend && __q == __qend )
     return 0;
   else if ( __p == __pend )
     return - 1;
   else if ( __q == __qend )
     return 1;

   __p ++;
   __q ++;
 }
    }
# 170 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    typename collate < _CharT > :: string_type
    collate < _CharT > ::
    do_transform ( const _CharT * __lo, const _CharT * __hi ) const
    {
      string_type __ret;


      const string_type __str ( __lo, __hi );

      const _CharT * __p = __str . c_str ( );
      const _CharT * __pend = __str . data ( ) + __str . length ( );

      size_t __len = ( __hi - __lo ) * 2;

      _CharT * __c = new _CharT [ __len ];

      try
 {



   for (;; )
     {

       size_t __res = _M_transform ( __c, __p, __len );


       if ( __res >= __len )
  {
    __len = __res + 1;
    delete [ ] __c, __c = 0;
    __c = new _CharT [ __len ];
    __res = _M_transform ( __c, __p, __len );
  }

       __ret . append ( __c, __res );
       __p += char_traits < _CharT > :: length ( __p );
       if ( __p == __pend )
  break;

       __p ++;
       __ret . push_back ( _CharT ( ) );
     }
 }
      catch ( ... )
 {
   delete [ ] __c;
   throw;
 }

      delete [ ] __c;

      return __ret;
    }
# 226 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
template < typename _CharT >
    long
    collate < _CharT > ::
    do_hash ( const _CharT * __lo, const _CharT * __hi ) const
    {
      unsigned long __val = 0;
      for (; __lo < __hi; ++ __lo )
 __val =
   * __lo + ( ( __val << 7 )
     | ( __val >> ( __gnu_cxx :: __numeric_traits < unsigned long > ::
    __digits - 7 ) ) );
      return static_cast < long > ( __val );
    }
# 244 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate< char> ;
# 245 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate_byname< char> ;
# 247 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template const collate< char> &use_facet< collate< char> > (const locale &);
# 251 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template bool has_facet< collate< char> > (const locale &) throw();
# 256 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate< wchar_t> ;
# 257 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template class collate_byname< wchar_t> ;
# 259 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template const collate< wchar_t> &use_facet< collate< wchar_t> > (const locale &);
# 263 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
extern template bool has_facet< collate< wchar_t> > (const locale &) throw();
# 269 "/usr/include/c++/4.4/bits/locale_classes.tcc" 3
}
# 54 "/usr/include/c++/4.4/bits/ios_base.h" 3
namespace std __attribute((__visibility__("default"))) {
# 60 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Fmtflags {
# 62 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_boolalpha = 1,
# 63 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_dec,
# 64 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_fixed = 4,
# 65 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_hex = 8,
# 66 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_internal = 16,
# 67 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_left = 32,
# 68 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_oct = 64,
# 69 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_right = 128,
# 70 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_scientific = 256,
# 71 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_showbase = 512,
# 72 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_showpoint = 1024,
# 73 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_showpos = 2048,
# 74 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_skipws = 4096,
# 75 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_unitbuf = 8192,
# 76 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_uppercase = 16384,
# 77 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_adjustfield = 176,
# 78 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_basefield = 74,
# 79 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_floatfield = 260,
# 80 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_fmtflags_end = 65536
# 81 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 84 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 85 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 88 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 89 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 92 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 93 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 96 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags &operator|=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 97 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a | __b); }
# 100 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags &operator&=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 101 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a & __b); }
# 104 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags &operator^=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 105 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a ^ __b); }
# 108 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Fmtflags operator~(_Ios_Fmtflags __a)
# 109 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)(~(static_cast< int>(__a))); }
# 112 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Openmode {
# 114 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_app = 1,
# 115 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ate,
# 116 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_bin = 4,
# 117 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_in = 8,
# 118 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_out = 16,
# 119 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_trunc = 32,
# 120 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_openmode_end = 65536
# 121 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 124 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator&(_Ios_Openmode __a, _Ios_Openmode __b)
# 125 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 128 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator|(_Ios_Openmode __a, _Ios_Openmode __b)
# 129 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 132 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator^(_Ios_Openmode __a, _Ios_Openmode __b)
# 133 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 136 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode &operator|=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 137 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a | __b); }
# 140 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode &operator&=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 141 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a & __b); }
# 144 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode &operator^=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 145 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a ^ __b); }
# 148 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Openmode operator~(_Ios_Openmode __a)
# 149 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Openmode)(~(static_cast< int>(__a))); }
# 152 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Iostate {
# 154 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_goodbit,
# 155 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_badbit,
# 156 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_eofbit,
# 157 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_failbit = 4,
# 158 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_iostate_end = 65536
# 159 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 162 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator&(_Ios_Iostate __a, _Ios_Iostate __b)
# 163 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 166 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator|(_Ios_Iostate __a, _Ios_Iostate __b)
# 167 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 170 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator^(_Ios_Iostate __a, _Ios_Iostate __b)
# 171 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 174 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate &operator|=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 175 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a | __b); }
# 178 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate &operator&=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 179 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a & __b); }
# 182 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate &operator^=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 183 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __a = (__a ^ __b); }
# 186 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline _Ios_Iostate operator~(_Ios_Iostate __a)
# 187 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return (_Ios_Iostate)(~(static_cast< int>(__a))); }
# 189 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum _Ios_Seekdir {
# 191 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_beg,
# 192 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_cur,
# 193 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_end,
# 194 "/usr/include/c++/4.4/bits/ios_base.h" 3
_S_ios_seekdir_end = 65536
# 195 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 207 "/usr/include/c++/4.4/bits/ios_base.h" 3
class ios_base {
# 217 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: class failure : public exception {
# 223 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: explicit failure(const string & ) throw();
# 228 "/usr/include/c++/4.4/bits/ios_base.h" 3
virtual ~failure() throw();
# 231 "/usr/include/c++/4.4/bits/ios_base.h" 3
virtual const char *what() const throw();
# 234 "/usr/include/c++/4.4/bits/ios_base.h" 3
private: string _M_msg;
# 235 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 263 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Fmtflags fmtflags;
# 266 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags boolalpha = ((fmtflags)1);
# 269 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags dec = ((fmtflags)2);
# 272 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags fixed = ((fmtflags)4);
# 275 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags hex = ((fmtflags)8);
# 280 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags internal = ((fmtflags)16);
# 284 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags left = ((fmtflags)32);
# 287 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags oct = ((fmtflags)64);
# 291 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags right = ((fmtflags)128);
# 294 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags scientific = ((fmtflags)256);
# 298 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags showbase = ((fmtflags)512);
# 302 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags showpoint = ((fmtflags)1024);
# 305 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags showpos = ((fmtflags)2048);
# 308 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags skipws = ((fmtflags)4096);
# 311 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags unitbuf = ((fmtflags)8192);
# 315 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags uppercase = ((fmtflags)16384);
# 318 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags adjustfield = ((fmtflags)176);
# 321 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags basefield = ((fmtflags)74);
# 324 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const fmtflags floatfield = ((fmtflags)260);
# 338 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Iostate iostate;
# 342 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate badbit = ((iostate)1);
# 345 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate eofbit = ((iostate)2);
# 350 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate failbit = ((iostate)4);
# 353 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const iostate goodbit = ((iostate)0);
# 369 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Openmode openmode;
# 372 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode app = ((openmode)1);
# 375 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode ate = ((openmode)2);
# 380 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode binary = ((openmode)4);
# 383 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode in = ((openmode)8);
# 386 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode out = ((openmode)16);
# 389 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const openmode trunc = ((openmode)32);
# 401 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef _Ios_Seekdir seekdir;
# 404 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const seekdir beg = ((seekdir)0);
# 407 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const seekdir cur = ((seekdir)1);
# 410 "/usr/include/c++/4.4/bits/ios_base.h" 3
static const seekdir end = ((seekdir)2);
# 413 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef int io_state;
# 414 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef int open_mode;
# 415 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef int seek_dir;
# 417 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef std::streampos streampos;
# 418 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef std::streamoff streamoff;
# 427 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum event {
# 429 "/usr/include/c++/4.4/bits/ios_base.h" 3
erase_event,
# 430 "/usr/include/c++/4.4/bits/ios_base.h" 3
imbue_event,
# 431 "/usr/include/c++/4.4/bits/ios_base.h" 3
copyfmt_event
# 432 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 444 "/usr/include/c++/4.4/bits/ios_base.h" 3
typedef void (*event_callback)(event, ios_base &, int);
# 457 "/usr/include/c++/4.4/bits/ios_base.h" 3
void register_callback(event_callback , int );
# 464 "/usr/include/c++/4.4/bits/ios_base.h" 3
protected: streamsize _M_precision;
# 465 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize _M_width;
# 466 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags _M_flags;
# 467 "/usr/include/c++/4.4/bits/ios_base.h" 3
iostate _M_exception;
# 468 "/usr/include/c++/4.4/bits/ios_base.h" 3
iostate _M_streambuf_state;
# 473 "/usr/include/c++/4.4/bits/ios_base.h" 3
struct _Callback_list {
# 476 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Callback_list *_M_next;
# 477 "/usr/include/c++/4.4/bits/ios_base.h" 3
event_callback _M_fn;
# 478 "/usr/include/c++/4.4/bits/ios_base.h" 3
int _M_index;
# 479 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Atomic_word _M_refcount;
# 481 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Callback_list(event_callback __fn, int __index, _Callback_list *
# 482 "/usr/include/c++/4.4/bits/ios_base.h" 3
__cb) : _M_next(__cb), _M_fn(__fn), _M_index(__index), _M_refcount(0)
# 483 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ }
# 486 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_add_reference() { __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 490 "/usr/include/c++/4.4/bits/ios_base.h" 3
int _M_remove_reference()
# 491 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return __gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1); }
# 492 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 494 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Callback_list *_M_callbacks;
# 497 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_call_callbacks(event ) throw();
# 500 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_dispose_callbacks();
# 503 "/usr/include/c++/4.4/bits/ios_base.h" 3
struct _Words {
# 505 "/usr/include/c++/4.4/bits/ios_base.h" 3
void *_M_pword;
# 506 "/usr/include/c++/4.4/bits/ios_base.h" 3
long _M_iword;
# 507 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words() : _M_pword((0)), _M_iword((0)) { }
# 508 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 511 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words _M_word_zero;
# 515 "/usr/include/c++/4.4/bits/ios_base.h" 3
enum { _S_local_word_size = 8};
# 516 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words _M_local_word[_S_local_word_size];
# 519 "/usr/include/c++/4.4/bits/ios_base.h" 3
int _M_word_size;
# 520 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words *_M_word;
# 523 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words &_M_grow_words(int , bool );
# 526 "/usr/include/c++/4.4/bits/ios_base.h" 3
locale _M_ios_locale;
# 529 "/usr/include/c++/4.4/bits/ios_base.h" 3
void _M_init();
# 537 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: class Init {
# 539 "/usr/include/c++/4.4/bits/ios_base.h" 3
friend class ios_base;
# 541 "/usr/include/c++/4.4/bits/ios_base.h" 3
public: Init();
# 542 "/usr/include/c++/4.4/bits/ios_base.h" 3
~Init();
# 545 "/usr/include/c++/4.4/bits/ios_base.h" 3
private: static _Atomic_word _S_refcount;
# 546 "/usr/include/c++/4.4/bits/ios_base.h" 3
static bool _S_synced_with_stdio;
# 547 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 555 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags flags() const
# 556 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_flags; }
# 566 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags flags(fmtflags __fmtfl)
# 567 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 568 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags __old = (_M_flags);
# 569 "/usr/include/c++/4.4/bits/ios_base.h" 3
(_M_flags) = __fmtfl;
# 570 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 571 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 582 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags setf(fmtflags __fmtfl)
# 583 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 584 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags __old = (_M_flags);
# 585 "/usr/include/c++/4.4/bits/ios_base.h" 3
((_M_flags) |= __fmtfl);
# 586 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 587 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 599 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags setf(fmtflags __fmtfl, fmtflags __mask)
# 600 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 601 "/usr/include/c++/4.4/bits/ios_base.h" 3
fmtflags __old = (_M_flags);
# 602 "/usr/include/c++/4.4/bits/ios_base.h" 3
((_M_flags) &= ((~__mask)));
# 603 "/usr/include/c++/4.4/bits/ios_base.h" 3
((_M_flags) |= ((__fmtfl & __mask)));
# 604 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 605 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 614 "/usr/include/c++/4.4/bits/ios_base.h" 3
void unsetf(fmtflags __mask)
# 615 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ ((_M_flags) &= ((~__mask))); }
# 625 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize precision() const
# 626 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_precision; }
# 634 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize precision(streamsize __prec)
# 635 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 636 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize __old = (_M_precision);
# 637 "/usr/include/c++/4.4/bits/ios_base.h" 3
(_M_precision) = __prec;
# 638 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 639 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 648 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize width() const
# 649 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_width; }
# 657 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize width(streamsize __wide)
# 658 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 659 "/usr/include/c++/4.4/bits/ios_base.h" 3
streamsize __old = (_M_width);
# 660 "/usr/include/c++/4.4/bits/ios_base.h" 3
(_M_width) = __wide;
# 661 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __old;
# 662 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 676 "/usr/include/c++/4.4/bits/ios_base.h" 3
static bool sync_with_stdio(bool = true);
# 688 "/usr/include/c++/4.4/bits/ios_base.h" 3
locale imbue(const locale & );
# 699 "/usr/include/c++/4.4/bits/ios_base.h" 3
locale getloc() const
# 700 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_ios_locale; }
# 710 "/usr/include/c++/4.4/bits/ios_base.h" 3
const locale &_M_getloc() const
# 711 "/usr/include/c++/4.4/bits/ios_base.h" 3
{ return _M_ios_locale; }
# 729 "/usr/include/c++/4.4/bits/ios_base.h" 3
static int xalloc() throw();
# 745 "/usr/include/c++/4.4/bits/ios_base.h" 3
long &iword(int __ix)
# 746 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 747 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words &__word = ((__ix < (_M_word_size)) ? ((_M_word)[__ix]) : this->_M_grow_words(__ix, true));
# 749 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __word._M_iword;
# 750 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 766 "/usr/include/c++/4.4/bits/ios_base.h" 3
void *&pword(int __ix)
# 767 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 768 "/usr/include/c++/4.4/bits/ios_base.h" 3
_Words &__word = ((__ix < (_M_word_size)) ? ((_M_word)[__ix]) : this->_M_grow_words(__ix, false));
# 770 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __word._M_pword;
# 771 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 782 "/usr/include/c++/4.4/bits/ios_base.h" 3
virtual ~ios_base();
# 785 "/usr/include/c++/4.4/bits/ios_base.h" 3
protected: ios_base();
# 790 "/usr/include/c++/4.4/bits/ios_base.h" 3
private: ios_base(const ios_base &);
# 793 "/usr/include/c++/4.4/bits/ios_base.h" 3
ios_base &operator=(const ios_base &);
# 794 "/usr/include/c++/4.4/bits/ios_base.h" 3
};
# 799 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &boolalpha(ios_base &__base)
# 800 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 801 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::boolalpha);
# 802 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 803 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 807 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noboolalpha(ios_base &__base)
# 808 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 809 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::boolalpha);
# 810 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 811 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 815 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &showbase(ios_base &__base)
# 816 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 817 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::showbase);
# 818 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 819 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 823 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noshowbase(ios_base &__base)
# 824 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 825 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::showbase);
# 826 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 827 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 831 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &showpoint(ios_base &__base)
# 832 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 833 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::showpoint);
# 834 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 835 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 839 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noshowpoint(ios_base &__base)
# 840 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 841 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::showpoint);
# 842 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 843 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 847 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &showpos(ios_base &__base)
# 848 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 849 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::showpos);
# 850 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 851 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 855 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noshowpos(ios_base &__base)
# 856 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 857 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::showpos);
# 858 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 859 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 863 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &skipws(ios_base &__base)
# 864 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 865 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::skipws);
# 866 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 867 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 871 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &noskipws(ios_base &__base)
# 872 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 873 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::skipws);
# 874 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 875 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 879 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &uppercase(ios_base &__base)
# 880 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 881 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::uppercase);
# 882 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 883 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 887 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &nouppercase(ios_base &__base)
# 888 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 889 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::uppercase);
# 890 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 891 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 895 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &unitbuf(ios_base &__base)
# 896 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 897 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::unitbuf);
# 898 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 899 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 903 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &nounitbuf(ios_base &__base)
# 904 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 905 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.unsetf(ios_base::unitbuf);
# 906 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 907 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 912 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &internal(ios_base &__base)
# 913 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 914 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::internal, ios_base::adjustfield);
# 915 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 916 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 920 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &left(ios_base &__base)
# 921 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 922 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::left, ios_base::adjustfield);
# 923 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 924 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 928 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &right(ios_base &__base)
# 929 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 930 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::right, ios_base::adjustfield);
# 931 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 932 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 937 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &dec(ios_base &__base)
# 938 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 939 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::dec, ios_base::basefield);
# 940 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 941 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 945 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &hex(ios_base &__base)
# 946 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 947 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::hex, ios_base::basefield);
# 948 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 949 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 953 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &oct(ios_base &__base)
# 954 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 955 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::oct, ios_base::basefield);
# 956 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 957 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 962 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &fixed(ios_base &__base)
# 963 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 964 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::fixed, ios_base::floatfield);
# 965 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 966 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 970 "/usr/include/c++/4.4/bits/ios_base.h" 3
inline ios_base &scientific(ios_base &__base)
# 971 "/usr/include/c++/4.4/bits/ios_base.h" 3
{
# 972 "/usr/include/c++/4.4/bits/ios_base.h" 3
__base.setf(ios_base::scientific, ios_base::floatfield);
# 973 "/usr/include/c++/4.4/bits/ios_base.h" 3
return __base;
# 974 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 976 "/usr/include/c++/4.4/bits/ios_base.h" 3
}
# 46 "/usr/include/c++/4.4/streambuf" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/4.4/streambuf" 3
template < typename _CharT, typename _Traits >
    streamsize
    __copy_streambufs_eof ( basic_streambuf < _CharT, _Traits > *,
     basic_streambuf < _CharT, _Traits > *, bool & );
# 113 "/usr/include/c++/4.4/streambuf" 3
template < typename _CharT, typename _Traits >
    class basic_streambuf
    {
    public :






      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;




      typedef basic_streambuf < char_type, traits_type > __streambuf_type;


      friend class basic_ios < char_type, traits_type >;
      friend class basic_istream < char_type, traits_type >;
      friend class basic_ostream < char_type, traits_type >;
      friend class istreambuf_iterator < char_type, traits_type >;
      friend class ostreambuf_iterator < char_type, traits_type >;

      friend streamsize
      __copy_streambufs_eof < > ( __streambuf_type *, __streambuf_type *, bool & );

      template < bool _IsMove, typename _CharT2 >
        friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
            _CharT2 * > :: __type
        __copy_move_a2 ( istreambuf_iterator < _CharT2 >,
         istreambuf_iterator < _CharT2 >, _CharT2 * );

      template < typename _CharT2 >
        friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
      istreambuf_iterator < _CharT2 > > :: __type
        find ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      const _CharT2 & );

      template < typename _CharT2, typename _Traits2 >
        friend basic_istream < _CharT2, _Traits2 > &
        operator >> ( basic_istream < _CharT2, _Traits2 > &, _CharT2 * );

      template < typename _CharT2, typename _Traits2, typename _Alloc >
        friend basic_istream < _CharT2, _Traits2 > &
        operator >> ( basic_istream < _CharT2, _Traits2 > &,
     basic_string < _CharT2, _Traits2, _Alloc > & );

      template < typename _CharT2, typename _Traits2, typename _Alloc >
        friend basic_istream < _CharT2, _Traits2 > &
        getline ( basic_istream < _CharT2, _Traits2 > &,
  basic_string < _CharT2, _Traits2, _Alloc > &, _CharT2 );

    protected :

      char_type * _M_in_beg;
      char_type * _M_in_cur;
      char_type * _M_in_end;
      char_type * _M_out_beg;
      char_type * _M_out_cur;
      char_type * _M_out_end;


      locale _M_buf_locale;

  public :

      virtual
      ~ basic_streambuf ( )
      { }

      locale
      pubimbue ( const locale & __loc )
      {
 locale __tmp ( this -> getloc ( ) );
 this -> imbue ( __loc );
 _M_buf_locale = __loc;
 return __tmp;
      }

      locale
      getloc ( ) const
      { return _M_buf_locale; }

      __streambuf_type *
      pubsetbuf ( char_type * __s, streamsize __n )
      { return this -> setbuf ( __s, __n ); }

      pos_type
      pubseekoff ( off_type __off, ios_base :: seekdir __way,
   ios_base :: openmode __mode = ios_base :: in | ios_base :: out )
      { return this -> seekoff ( __off, __way, __mode ); }

      pos_type
      pubseekpos ( pos_type __sp,
   ios_base :: openmode __mode = ios_base :: in | ios_base :: out )
      { return this -> seekpos ( __sp, __mode ); }

      int
      pubsync ( ) { return this -> sync ( ); }

      streamsize
      in_avail ( )
      {
 const streamsize __ret = this -> egptr ( ) - this -> gptr ( );
 return __ret ? __ret : this -> showmanyc ( );
      }

      int_type
      snextc ( )
      {
 int_type __ret = traits_type :: eof ( );
 if ( __builtin_expect ( ! traits_type :: eq_int_type ( this -> sbumpc ( ),
             __ret ), true ) )
   __ret = this -> sgetc ( );
 return __ret;
      }

      int_type
      sbumpc ( )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> gptr ( ) < this -> egptr ( ), true ) )
   {
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
     this -> gbump ( 1 );
   }
 else
   __ret = this -> uflow ( );
 return __ret;
      }

      int_type
      sgetc ( )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> gptr ( ) < this -> egptr ( ), true ) )
   __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
 else
   __ret = this -> underflow ( );
 return __ret;
      }

      streamsize
      sgetn ( char_type * __s, streamsize __n )
      { return this -> xsgetn ( __s, __n ); }

      int_type
      sputbackc ( char_type __c )
      {
 int_type __ret;
 const bool __testpos = this -> eback ( ) < this -> gptr ( );
 if ( __builtin_expect ( ! __testpos ||
        ! traits_type :: eq ( __c, this -> gptr ( ) [ - 1 ] ), false ) )
   __ret = this -> pbackfail ( traits_type :: to_int_type ( __c ) );
 else
   {
     this -> gbump ( - 1 );
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
   }
 return __ret;
      }

      int_type
      sungetc ( )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> eback ( ) < this -> gptr ( ), true ) )
   {
     this -> gbump ( - 1 );
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
   }
 else
   __ret = this -> pbackfail ( );
 return __ret;
      }

      int_type
      sputc ( char_type __c )
      {
 int_type __ret;
 if ( __builtin_expect ( this -> pptr ( ) < this -> epptr ( ), true ) )
   {
     * this -> pptr ( ) = __c;
     this -> pbump ( 1 );
     __ret = traits_type :: to_int_type ( __c );
   }
 else
   __ret = this -> overflow ( traits_type :: to_int_type ( __c ) );
 return __ret;
      }

      streamsize
      sputn ( const char_type * __s, streamsize __n )
      { return this -> xsputn ( __s, __n ); }

    protected :

      basic_streambuf ( )
      : _M_in_beg ( 0 ), _M_in_cur ( 0 ), _M_in_end ( 0 ),
      _M_out_beg ( 0 ), _M_out_cur ( 0 ), _M_out_end ( 0 ),
      _M_buf_locale ( locale ( ) )
      { }

      char_type *
      eback ( ) const { return _M_in_beg; }

      char_type *
      gptr ( ) const { return _M_in_cur; }

      char_type *
      egptr ( ) const { return _M_in_end; }

      void
      gbump ( int __n ) { _M_in_cur += __n; }

      void
      setg ( char_type * __gbeg, char_type * __gnext, char_type * __gend )
      {
 _M_in_beg = __gbeg;
 _M_in_cur = __gnext;
 _M_in_end = __gend;
      }

      char_type *
      pbase ( ) const { return _M_out_beg; }

      char_type *
      pptr ( ) const { return _M_out_cur; }

      char_type *
      epptr ( ) const { return _M_out_end; }

      void
      pbump ( int __n ) { _M_out_cur += __n; }

      void
      setp ( char_type * __pbeg, char_type * __pend )
      {
 _M_out_beg = _M_out_cur = __pbeg;
 _M_out_end = __pend;
      }

      virtual void
      imbue ( const locale & )
      { }

      virtual basic_streambuf < char_type, _Traits > *
      setbuf ( char_type *, streamsize )
      { return this; }

      virtual pos_type
      seekoff ( off_type, ios_base :: seekdir,
       ios_base :: openmode = ios_base :: in | ios_base :: out )
      { return pos_type ( off_type ( - 1 ) ); }

      virtual pos_type
      seekpos ( pos_type,
       ios_base :: openmode = ios_base :: in | ios_base :: out )
      { return pos_type ( off_type ( - 1 ) ); }

      virtual int
      sync ( ) { return 0; }

      virtual streamsize
      showmanyc ( ) { return 0; }

      virtual streamsize
      xsgetn ( char_type * __s, streamsize __n );

      virtual int_type
      underflow ( )
      { return traits_type :: eof ( ); }

      virtual int_type
      uflow ( )
      {
 int_type __ret = traits_type :: eof ( );
 const bool __testeof = traits_type :: eq_int_type ( this -> underflow ( ),
       __ret );
 if ( ! __testeof )
   {
     __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
     this -> gbump ( 1 );
   }
 return __ret;
      }

      virtual int_type
      pbackfail ( int_type = traits_type :: eof ( ) )
      { return traits_type :: eof ( ); }

      virtual streamsize
      xsputn ( const char_type * __s, streamsize __n );

      virtual int_type
      overflow ( int_type = traits_type :: eof ( ) )
      { return traits_type :: eof ( ); }



    public :

      void
      stossc ( )
      {
 if ( this -> gptr ( ) < this -> egptr ( ) )
   this -> gbump ( 1 );
 else
   this -> uflow ( );
      }


    private :


      basic_streambuf ( const __streambuf_type & __sb )
      : _M_in_beg ( __sb . _M_in_beg ), _M_in_cur ( __sb . _M_in_cur ),
      _M_in_end ( __sb . _M_in_end ), _M_out_beg ( __sb . _M_out_beg ),
      _M_out_cur ( __sb . _M_out_cur ), _M_out_end ( __sb . _M_out_cur ),
      _M_buf_locale ( __sb . _M_buf_locale )
      { }

      __streambuf_type &
      operator = ( const __streambuf_type & ) { return * this; };
    };
# 784 "/usr/include/c++/4.4/streambuf" 3
template<> streamsize __copy_streambufs_eof(basic_streambuf< char, char_traits< char> > * , basic_streambuf< char, char_traits< char> > * , bool & );
# 789 "/usr/include/c++/4.4/streambuf" 3
template<> streamsize __copy_streambufs_eof(basic_streambuf< wchar_t, char_traits< wchar_t> > * , basic_streambuf< wchar_t, char_traits< wchar_t> > * , bool & );
# 793 "/usr/include/c++/4.4/streambuf" 3
}
# 40 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_streambuf < _CharT, _Traits > ::
    xsgetn ( char_type * __s, streamsize __n )
    {
      streamsize __ret = 0;
      while ( __ret < __n )
 {
   const streamsize __buf_len = this -> egptr ( ) - this -> gptr ( );
   if ( __buf_len )
     {
       const streamsize __remaining = __n - __ret;
       const streamsize __len = std :: min ( __buf_len, __remaining );
       traits_type :: copy ( __s, this -> gptr ( ), __len );
       __ret += __len;
       __s += __len;
       this -> gbump ( __len );
     }

   if ( __ret < __n )
     {
       const int_type __c = this -> uflow ( );
       if ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
  {
    traits_type :: assign ( * __s ++, traits_type :: to_char_type ( __c ) );
    ++ __ret;
  }
       else
  break;
     }
 }
      return __ret;
    }
# 76 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_streambuf < _CharT, _Traits > ::
    xsputn ( const char_type * __s, streamsize __n )
    {
      streamsize __ret = 0;
      while ( __ret < __n )
 {
   const streamsize __buf_len = this -> epptr ( ) - this -> pptr ( );
   if ( __buf_len )
     {
       const streamsize __remaining = __n - __ret;
       const streamsize __len = std :: min ( __buf_len, __remaining );
       traits_type :: copy ( this -> pptr ( ), __s, __len );
       __ret += __len;
       __s += __len;
       this -> pbump ( __len );
     }

   if ( __ret < __n )
     {
       int_type __c = this -> overflow ( traits_type :: to_int_type ( * __s ) );
       if ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
  {
    ++ __ret;
    ++ __s;
  }
       else
  break;
     }
 }
      return __ret;
    }
# 113 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    __copy_streambufs_eof ( basic_streambuf < _CharT, _Traits > * __sbin,
     basic_streambuf < _CharT, _Traits > * __sbout,
     bool & __ineof )
    {
      streamsize __ret = 0;
      __ineof = true;
      typename _Traits :: int_type __c = __sbin -> sgetc ( );
      while ( ! _Traits :: eq_int_type ( __c, _Traits :: eof ( ) ) )
 {
   __c = __sbout -> sputc ( _Traits :: to_char_type ( __c ) );
   if ( _Traits :: eq_int_type ( __c, _Traits :: eof ( ) ) )
     {
       __ineof = false;
       break;
     }
   ++ __ret;
   __c = __sbin -> snextc ( );
 }
      return __ret;
    }
# 136 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
template < typename _CharT, typename _Traits >
    inline streamsize
    __copy_streambufs ( basic_streambuf < _CharT, _Traits > * __sbin,
        basic_streambuf < _CharT, _Traits > * __sbout )
    {
      bool __ineof;
      return __copy_streambufs_eof ( __sbin, __sbout, __ineof );
    }
# 149 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template class basic_streambuf< char, char_traits< char> > ;
# 150 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs(basic_streambuf< char, char_traits< char> > * , basic_streambuf< char, char_traits< char> > * );
# 154 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs_eof< char, char_traits< char> > (basic_streambuf< char, char_traits< char> > *, basic_streambuf< char, char_traits< char> > *, bool &);
# 160 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template class basic_streambuf< wchar_t, char_traits< wchar_t> > ;
# 161 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs(basic_streambuf< wchar_t, char_traits< wchar_t> > * , basic_streambuf< wchar_t, char_traits< wchar_t> > * );
# 165 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs_eof< wchar_t, char_traits< wchar_t> > (basic_streambuf< wchar_t, char_traits< wchar_t> > *, basic_streambuf< wchar_t, char_traits< wchar_t> > *, bool &);
# 172 "/usr/include/c++/4.4/bits/streambuf.tcc" 3
}
# 53 "/usr/include/wctype.h" 3
typedef unsigned long wctype_t;
# 73 "/usr/include/wctype.h" 3
enum {
# 74 "/usr/include/wctype.h" 3
__ISwupper,
# 75 "/usr/include/wctype.h" 3
__ISwlower,
# 76 "/usr/include/wctype.h" 3
__ISwalpha,
# 77 "/usr/include/wctype.h" 3
__ISwdigit,
# 78 "/usr/include/wctype.h" 3
__ISwxdigit,
# 79 "/usr/include/wctype.h" 3
__ISwspace,
# 80 "/usr/include/wctype.h" 3
__ISwprint,
# 81 "/usr/include/wctype.h" 3
__ISwgraph,
# 82 "/usr/include/wctype.h" 3
__ISwblank,
# 83 "/usr/include/wctype.h" 3
__ISwcntrl,
# 84 "/usr/include/wctype.h" 3
__ISwpunct,
# 85 "/usr/include/wctype.h" 3
__ISwalnum,
# 87 "/usr/include/wctype.h" 3
_ISwupper = 16777216,
# 88 "/usr/include/wctype.h" 3
_ISwlower = 33554432,
# 89 "/usr/include/wctype.h" 3
_ISwalpha = 67108864,
# 90 "/usr/include/wctype.h" 3
_ISwdigit = 134217728,
# 91 "/usr/include/wctype.h" 3
_ISwxdigit = 268435456,
# 92 "/usr/include/wctype.h" 3
_ISwspace = 536870912,
# 93 "/usr/include/wctype.h" 3
_ISwprint = 1073741824,
# 94 "/usr/include/wctype.h" 3
_ISwgraph = (-2147483647-1),
# 95 "/usr/include/wctype.h" 3
_ISwblank = 65536,
# 96 "/usr/include/wctype.h" 3
_ISwcntrl = 131072,
# 97 "/usr/include/wctype.h" 3
_ISwpunct = 262144,
# 98 "/usr/include/wctype.h" 3
_ISwalnum = 524288
# 99 "/usr/include/wctype.h" 3
};
# 112 "/usr/include/wctype.h" 3
extern "C" int iswalnum(wint_t ) throw();
# 118 "/usr/include/wctype.h" 3
extern "C" int iswalpha(wint_t ) throw();
# 121 "/usr/include/wctype.h" 3
extern "C" int iswcntrl(wint_t ) throw();
# 125 "/usr/include/wctype.h" 3
extern "C" int iswdigit(wint_t ) throw();
# 129 "/usr/include/wctype.h" 3
extern "C" int iswgraph(wint_t ) throw();
# 134 "/usr/include/wctype.h" 3
extern "C" int iswlower(wint_t ) throw();
# 137 "/usr/include/wctype.h" 3
extern "C" int iswprint(wint_t ) throw();
# 142 "/usr/include/wctype.h" 3
extern "C" int iswpunct(wint_t ) throw();
# 147 "/usr/include/wctype.h" 3
extern "C" int iswspace(wint_t ) throw();
# 152 "/usr/include/wctype.h" 3
extern "C" int iswupper(wint_t ) throw();
# 157 "/usr/include/wctype.h" 3
extern "C" int iswxdigit(wint_t ) throw();
# 163 "/usr/include/wctype.h" 3
extern "C" int iswblank(wint_t ) throw();
# 172 "/usr/include/wctype.h" 3
extern "C" wctype_t wctype(const char * ) throw();
# 176 "/usr/include/wctype.h" 3
extern "C" int iswctype(wint_t , wctype_t ) throw();
# 187 "/usr/include/wctype.h" 3
extern "C" { typedef const __int32_t *wctrans_t; }
# 195 "/usr/include/wctype.h" 3
extern "C" wint_t towlower(wint_t ) throw();
# 198 "/usr/include/wctype.h" 3
extern "C" wint_t towupper(wint_t ) throw();
# 219 "/usr/include/wctype.h" 3
extern "C" wctrans_t wctrans(const char * ) throw();
# 222 "/usr/include/wctype.h" 3
extern "C" wint_t towctrans(wint_t , wctrans_t ) throw();
# 231 "/usr/include/wctype.h" 3
extern "C" int iswalnum_l(wint_t , __locale_t ) throw();
# 237 "/usr/include/wctype.h" 3
extern "C" int iswalpha_l(wint_t , __locale_t ) throw();
# 240 "/usr/include/wctype.h" 3
extern "C" int iswcntrl_l(wint_t , __locale_t ) throw();
# 244 "/usr/include/wctype.h" 3
extern "C" int iswdigit_l(wint_t , __locale_t ) throw();
# 248 "/usr/include/wctype.h" 3
extern "C" int iswgraph_l(wint_t , __locale_t ) throw();
# 253 "/usr/include/wctype.h" 3
extern "C" int iswlower_l(wint_t , __locale_t ) throw();
# 256 "/usr/include/wctype.h" 3
extern "C" int iswprint_l(wint_t , __locale_t ) throw();
# 261 "/usr/include/wctype.h" 3
extern "C" int iswpunct_l(wint_t , __locale_t ) throw();
# 266 "/usr/include/wctype.h" 3
extern "C" int iswspace_l(wint_t , __locale_t ) throw();
# 271 "/usr/include/wctype.h" 3
extern "C" int iswupper_l(wint_t , __locale_t ) throw();
# 276 "/usr/include/wctype.h" 3
extern "C" int iswxdigit_l(wint_t , __locale_t ) throw();
# 281 "/usr/include/wctype.h" 3
extern "C" int iswblank_l(wint_t , __locale_t ) throw();
# 285 "/usr/include/wctype.h" 3
extern "C" wctype_t wctype_l(const char * , __locale_t ) throw();
# 290 "/usr/include/wctype.h" 3
extern "C" int iswctype_l(wint_t , wctype_t , __locale_t ) throw();
# 299 "/usr/include/wctype.h" 3
extern "C" wint_t towlower_l(wint_t , __locale_t ) throw();
# 302 "/usr/include/wctype.h" 3
extern "C" wint_t towupper_l(wint_t , __locale_t ) throw();
# 306 "/usr/include/wctype.h" 3
extern "C" wctrans_t wctrans_l(const char * , __locale_t ) throw();
# 310 "/usr/include/wctype.h" 3
extern "C" wint_t towctrans_l(wint_t , wctrans_t , __locale_t ) throw();
# 76 "/usr/include/c++/4.4/cwctype" 3
namespace std __attribute((__visibility__("default"))) {
# 78 "/usr/include/c++/4.4/cwctype" 3
using ::wctrans_t;
# 79 "/usr/include/c++/4.4/cwctype" 3
using ::wctype_t;
# 82 "/usr/include/c++/4.4/cwctype" 3
using ::iswalnum;
# 83 "/usr/include/c++/4.4/cwctype" 3
using ::iswalpha;
# 85 "/usr/include/c++/4.4/cwctype" 3
using ::iswblank;
# 87 "/usr/include/c++/4.4/cwctype" 3
using ::iswcntrl;
# 88 "/usr/include/c++/4.4/cwctype" 3
using ::iswctype;
# 89 "/usr/include/c++/4.4/cwctype" 3
using ::iswdigit;
# 90 "/usr/include/c++/4.4/cwctype" 3
using ::iswgraph;
# 91 "/usr/include/c++/4.4/cwctype" 3
using ::iswlower;
# 92 "/usr/include/c++/4.4/cwctype" 3
using ::iswprint;
# 93 "/usr/include/c++/4.4/cwctype" 3
using ::iswpunct;
# 94 "/usr/include/c++/4.4/cwctype" 3
using ::iswspace;
# 95 "/usr/include/c++/4.4/cwctype" 3
using ::iswupper;
# 96 "/usr/include/c++/4.4/cwctype" 3
using ::iswxdigit;
# 97 "/usr/include/c++/4.4/cwctype" 3
using ::towctrans;
# 98 "/usr/include/c++/4.4/cwctype" 3
using ::towlower;
# 99 "/usr/include/c++/4.4/cwctype" 3
using ::towupper;
# 100 "/usr/include/c++/4.4/cwctype" 3
using ::wctrans;
# 101 "/usr/include/c++/4.4/cwctype" 3
using ::wctype;
# 103 "/usr/include/c++/4.4/cwctype" 3
}
# 37 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
namespace std __attribute((__visibility__("default"))) {
# 40 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
struct ctype_base {
# 43 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
typedef const int *__to_type;
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
typedef unsigned short mask;
# 48 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask upper = (_ISupper);
# 49 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask lower = (_ISlower);
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask alpha = (_ISalpha);
# 51 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask digit = (_ISdigit);
# 52 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask xdigit = (_ISxdigit);
# 53 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask space = (_ISspace);
# 54 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask print = (_ISprint);
# 55 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask graph = (((_ISalpha) | (_ISdigit)) | (_ISpunct));
# 56 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask cntrl = (_IScntrl);
# 57 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask punct = (_ISpunct);
# 58 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
static const mask alnum = ((_ISalpha) | (_ISdigit));
# 59 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
};
# 61 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_base.h" 3
}
# 40 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    class istreambuf_iterator
    : public iterator < input_iterator_tag, _CharT, typename _Traits :: off_type,
        _CharT *, _CharT & >
    {
    public :



      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename _Traits :: int_type int_type;
      typedef basic_streambuf < _CharT, _Traits > streambuf_type;
      typedef basic_istream < _CharT, _Traits > istream_type;


      template < typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
                      ostreambuf_iterator < _CharT2 > > :: __type
 copy ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      ostreambuf_iterator < _CharT2 > );

      template < bool _IsMove, typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
            _CharT2 * > :: __type
 __copy_move_a2 ( istreambuf_iterator < _CharT2 >,
         istreambuf_iterator < _CharT2 >, _CharT2 * );

      template < typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
               istreambuf_iterator < _CharT2 > > :: __type
 find ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      const _CharT2 & );

    private :







      mutable streambuf_type * _M_sbuf;
      mutable int_type _M_c;

    public :

      istreambuf_iterator ( ) throw ( )
      : _M_sbuf ( 0 ), _M_c ( traits_type :: eof ( ) ) { }


      istreambuf_iterator ( istream_type & __s ) throw ( )
      : _M_sbuf ( __s . rdbuf ( ) ), _M_c ( traits_type :: eof ( ) ) { }


      istreambuf_iterator ( streambuf_type * __s ) throw ( )
      : _M_sbuf ( __s ), _M_c ( traits_type :: eof ( ) ) { }




      char_type
      operator * ( ) const
      {







 return traits_type :: to_char_type ( _M_get ( ) );
      }


      istreambuf_iterator &
      operator ++ ( )
      {
 ;


 if ( _M_sbuf )
   {
     _M_sbuf -> sbumpc ( );
     _M_c = traits_type :: eof ( );
   }
 return * this;
      }


      istreambuf_iterator
      operator ++ ( int )
      {
 ;



 istreambuf_iterator __old = * this;
 if ( _M_sbuf )
   {
     __old . _M_c = _M_sbuf -> sbumpc ( );
     _M_c = traits_type :: eof ( );
   }
 return __old;
      }





      bool
      equal ( const istreambuf_iterator & __b ) const
      { return _M_at_eof ( ) == __b . _M_at_eof ( ); }

    private :
      int_type
      _M_get ( ) const
      {
 const int_type __eof = traits_type :: eof ( );
 int_type __ret = __eof;
 if ( _M_sbuf )
   {
     if ( ! traits_type :: eq_int_type ( _M_c, __eof ) )
       __ret = _M_c;
     else if ( ! traits_type :: eq_int_type ( ( __ret = _M_sbuf -> sgetc ( ) ),
            __eof ) )
       _M_c = __ret;
     else
       _M_sbuf = 0;
   }
 return __ret;
      }

      bool
      _M_at_eof ( ) const
      {
 const int_type __eof = traits_type :: eof ( );
 return traits_type :: eq_int_type ( _M_get ( ), __eof );
      }
    };
# 185 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    inline bool
    operator == ( const istreambuf_iterator < _CharT, _Traits > & __a,
        const istreambuf_iterator < _CharT, _Traits > & __b )
    { return __a . equal ( __b ); }
# 191 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    inline bool
    operator != ( const istreambuf_iterator < _CharT, _Traits > & __a,
        const istreambuf_iterator < _CharT, _Traits > & __b )
    { return ! __a . equal ( __b ); }
# 198 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT, typename _Traits >
    class ostreambuf_iterator
    : public iterator < output_iterator_tag, void, void, void, void >
    {
    public :



      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef basic_streambuf < _CharT, _Traits > streambuf_type;
      typedef basic_ostream < _CharT, _Traits > ostream_type;


      template < typename _CharT2 >
 friend typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value,
                      ostreambuf_iterator < _CharT2 > > :: __type
 copy ( istreambuf_iterator < _CharT2 >, istreambuf_iterator < _CharT2 >,
      ostreambuf_iterator < _CharT2 > );

    private :
      streambuf_type * _M_sbuf;
      bool _M_failed;

    public :

      ostreambuf_iterator ( ostream_type & __s ) throw ( )
      : _M_sbuf ( __s . rdbuf ( ) ), _M_failed ( ! _M_sbuf ) { }


      ostreambuf_iterator ( streambuf_type * __s ) throw ( )
      : _M_sbuf ( __s ), _M_failed ( ! _M_sbuf ) { }


      ostreambuf_iterator &
      operator = ( _CharT __c )
      {
 if ( ! _M_failed &&
     _Traits :: eq_int_type ( _M_sbuf -> sputc ( __c ), _Traits :: eof ( ) ) )
   _M_failed = true;
 return * this;
      }


      ostreambuf_iterator &
      operator * ( )
      { return * this; }


      ostreambuf_iterator &
      operator ++ ( int )
      { return * this; }


      ostreambuf_iterator &
      operator ++ ( )
      { return * this; }


      bool
      failed ( ) const throw ( )
      { return _M_failed; }

      ostreambuf_iterator &
      _M_put ( const _CharT * __ws, streamsize __len )
      {
 if ( __builtin_expect ( ! _M_failed, true )
     && __builtin_expect ( this -> _M_sbuf -> sputn ( __ws, __len ) != __len,
    false ) )
   _M_failed = true;
 return * this;
      }
    };
# 273 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
                           ostreambuf_iterator < _CharT > > :: __type
    copy ( istreambuf_iterator < _CharT > __first,
  istreambuf_iterator < _CharT > __last,
  ostreambuf_iterator < _CharT > __result )
    {
      if ( __first . _M_sbuf && ! __last . _M_sbuf && ! __result . _M_failed )
 {
   bool __ineof;
   __copy_streambufs_eof ( __first . _M_sbuf, __result . _M_sbuf, __ineof );
   if ( ! __ineof )
     __result . _M_failed = true;
 }
      return __result;
    }
# 290 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
            ostreambuf_iterator < _CharT > > :: __type
    __copy_move_a2 ( _CharT * __first, _CharT * __last,
     ostreambuf_iterator < _CharT > __result )
    {
      const streamsize __num = __last - __first;
      if ( __num > 0 )
 __result . _M_put ( __first, __num );
      return __result;
    }
# 302 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
        ostreambuf_iterator < _CharT > > :: __type
    __copy_move_a2 ( const _CharT * __first, const _CharT * __last,
     ostreambuf_iterator < _CharT > __result )
    {
      const streamsize __num = __last - __first;
      if ( __num > 0 )
 __result . _M_put ( __first, __num );
      return __result;
    }
# 314 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < bool _IsMove, typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
            _CharT * > :: __type
    __copy_move_a2 ( istreambuf_iterator < _CharT > __first,
     istreambuf_iterator < _CharT > __last, _CharT * __result )
    {
      typedef istreambuf_iterator < _CharT > __is_iterator_type;
      typedef typename __is_iterator_type :: traits_type traits_type;
      typedef typename __is_iterator_type :: streambuf_type streambuf_type;
      typedef typename traits_type :: int_type int_type;

      if ( __first . _M_sbuf && ! __last . _M_sbuf )
 {
   streambuf_type * __sb = __first . _M_sbuf;
   int_type __c = __sb -> sgetc ( );
   while ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
     {
       const streamsize __n = __sb -> egptr ( ) - __sb -> gptr ( );
       if ( __n > 1 )
  {
    traits_type :: copy ( __result, __sb -> gptr ( ), __n );
    __sb -> gbump ( __n );
    __result += __n;
    __c = __sb -> underflow ( );
  }
       else
  {
    * __result ++ = traits_type :: to_char_type ( __c );
    __c = __sb -> snextc ( );
  }
     }
 }
      return __result;
    }
# 349 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
template < typename _CharT >
    typename __gnu_cxx :: __enable_if < __is_char < _CharT > :: __value,
          istreambuf_iterator < _CharT > > :: __type
    find ( istreambuf_iterator < _CharT > __first,
  istreambuf_iterator < _CharT > __last, const _CharT & __val )
    {
      typedef istreambuf_iterator < _CharT > __is_iterator_type;
      typedef typename __is_iterator_type :: traits_type traits_type;
      typedef typename __is_iterator_type :: streambuf_type streambuf_type;
      typedef typename traits_type :: int_type int_type;

      if ( __first . _M_sbuf && ! __last . _M_sbuf )
 {
   const int_type __ival = traits_type :: to_int_type ( __val );
   streambuf_type * __sb = __first . _M_sbuf;
   int_type __c = __sb -> sgetc ( );
   while ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) )
   && ! traits_type :: eq_int_type ( __c, __ival ) )
     {
       streamsize __n = __sb -> egptr ( ) - __sb -> gptr ( );
       if ( __n > 1 )
  {
    const _CharT * __p = traits_type :: find ( __sb -> gptr ( ),
       __n, __val );
    if ( __p )
      __n = __p - __sb -> gptr ( );
    __sb -> gbump ( __n );
    __c = __sb -> sgetc ( );
  }
       else
  __c = __sb -> snextc ( );
     }

   if ( ! traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
     __first . _M_c = __c;
   else
     __first . _M_sbuf = 0;
 }
      return __first;
    }
# 390 "/usr/include/c++/4.4/bits/streambuf_iterator.h" 3
}
# 52 "/usr/include/c++/4.4/bits/locale_facets.h" 3
namespace std __attribute((__visibility__("default"))) {
# 64 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _Tv> void __convert_to_v(const char * , _Tv & , ios_base::iostate & , const __c_locale & );
# 72 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &);
# 77 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &);
# 82 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &);
# 87 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT, class _Traits>
# 88 "/usr/include/c++/4.4/bits/locale_facets.h" 3
struct __pad {
# 91 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static void _S_pad(ios_base & , _CharT , _CharT * , const _CharT * , streamsize , streamsize );
# 93 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 100 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    _CharT *
    __add_grouping ( _CharT * __s, _CharT __sep,
     const char * __gbeg, size_t __gsize,
     const _CharT * __first, const _CharT * __last );
# 109 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline
    ostreambuf_iterator < _CharT >
    __write ( ostreambuf_iterator < _CharT > __s, const _CharT * __ws, int __len )
    {
      __s . _M_put ( __ws, __len );
      return __s;
    }
# 119 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT, typename _OutIter >
    inline
    _OutIter
    __write ( _OutIter __s, const _CharT * __ws, int __len )
    {
      for ( int __j = 0; __j < __len; __j ++, ++ __s )
 * __s = __ws [ __j ];
      return __s;
    }
# 143 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class __ctype_abstract_base : public locale :: facet, public ctype_base
    {
    public :


      typedef _CharT char_type;

      bool
      is ( mask __m, char_type __c ) const
      { return this -> do_is ( __m, __c ); }

      const char_type *
      is ( const char_type * __lo, const char_type * __hi, mask * __vec ) const
      { return this -> do_is ( __lo, __hi, __vec ); }

      const char_type *
      scan_is ( mask __m, const char_type * __lo, const char_type * __hi ) const
      { return this -> do_scan_is ( __m, __lo, __hi ); }

      const char_type *
      scan_not ( mask __m, const char_type * __lo, const char_type * __hi ) const
      { return this -> do_scan_not ( __m, __lo, __hi ); }

      char_type
      toupper ( char_type __c ) const
      { return this -> do_toupper ( __c ); }

      const char_type *
      toupper ( char_type * __lo, const char_type * __hi ) const
      { return this -> do_toupper ( __lo, __hi ); }

      char_type
      tolower ( char_type __c ) const
      { return this -> do_tolower ( __c ); }

      const char_type *
      tolower ( char_type * __lo, const char_type * __hi ) const
      { return this -> do_tolower ( __lo, __hi ); }

      char_type
      widen ( char __c ) const
      { return this -> do_widen ( __c ); }

      const char *
      widen ( const char * __lo, const char * __hi, char_type * __to ) const
      { return this -> do_widen ( __lo, __hi, __to ); }

      char
      narrow ( char_type __c, char __dfault ) const
      { return this -> do_narrow ( __c, __dfault ); }

      const char_type *
      narrow ( const char_type * __lo, const char_type * __hi,
       char __dfault, char * __to ) const
      { return this -> do_narrow ( __lo, __hi, __dfault, __to ); }

    protected :
      explicit
      __ctype_abstract_base ( size_t __refs = 0 ) : facet ( __refs ) { }

      virtual
      ~ __ctype_abstract_base ( ) { }

      virtual bool
      do_is ( mask __m, char_type __c ) const = 0;

      virtual const char_type *
      do_is ( const char_type * __lo, const char_type * __hi,
     mask * __vec ) const = 0;

      virtual const char_type *
      do_scan_is ( mask __m, const char_type * __lo,
   const char_type * __hi ) const = 0;

      virtual const char_type *
      do_scan_not ( mask __m, const char_type * __lo,
    const char_type * __hi ) const = 0;

      virtual char_type
      do_toupper ( char_type ) const = 0;

      virtual const char_type *
      do_toupper ( char_type * __lo, const char_type * __hi ) const = 0;

      virtual char_type
      do_tolower ( char_type ) const = 0;

      virtual const char_type *
      do_tolower ( char_type * __lo, const char_type * __hi ) const = 0;

      virtual char_type
      do_widen ( char ) const = 0;

      virtual const char *
      do_widen ( const char * __lo, const char * __hi,
        char_type * __dest ) const = 0;

      virtual char
      do_narrow ( char_type, char __dfault ) const = 0;

      virtual const char_type *
      do_narrow ( const char_type * __lo, const char_type * __hi,
  char __dfault, char * __dest ) const = 0;
    };
# 604 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class ctype : public __ctype_abstract_base < _CharT >
    {
    public :

      typedef _CharT char_type;
      typedef typename __ctype_abstract_base < _CharT > :: mask mask;


      static locale :: id id;

      explicit
      ctype ( size_t __refs = 0 ) : __ctype_abstract_base < _CharT > ( __refs ) { }

   protected :
      virtual
      ~ ctype ( );

      virtual bool
      do_is ( mask __m, char_type __c ) const;

      virtual const char_type *
      do_is ( const char_type * __lo, const char_type * __hi, mask * __vec ) const;

      virtual const char_type *
      do_scan_is ( mask __m, const char_type * __lo, const char_type * __hi ) const;

      virtual const char_type *
      do_scan_not ( mask __m, const char_type * __lo,
    const char_type * __hi ) const;

      virtual char_type
      do_toupper ( char_type __c ) const;

      virtual const char_type *
      do_toupper ( char_type * __lo, const char_type * __hi ) const;

      virtual char_type
      do_tolower ( char_type __c ) const;

      virtual const char_type *
      do_tolower ( char_type * __lo, const char_type * __hi ) const;

      virtual char_type
      do_widen ( char __c ) const;

      virtual const char *
      do_widen ( const char * __lo, const char * __hi, char_type * __dest ) const;

      virtual char
      do_narrow ( char_type, char __dfault ) const;

      virtual const char_type *
      do_narrow ( const char_type * __lo, const char_type * __hi,
  char __dfault, char * __dest ) const;
    };
# 661 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT> locale::id
# 662 "/usr/include/c++/4.4/bits/locale_facets.h" 3
ctype< _CharT> ::id;
# 674 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype< char> : public locale::facet, public ctype_base {
# 679 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: typedef char char_type;
# 683 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: __c_locale _M_c_locale_ctype;
# 684 "/usr/include/c++/4.4/bits/locale_facets.h" 3
bool _M_del;
# 685 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__to_type _M_toupper;
# 686 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__to_type _M_tolower;
# 687 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const mask *_M_table;
# 688 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_widen_ok;
# 689 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_widen[1 + (static_cast< unsigned char>((-1)))];
# 690 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_narrow[1 + (static_cast< unsigned char>((-1)))];
# 691 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mutable char _M_narrow_ok;
# 696 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: static locale::id id;
# 698 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const size_t table_size = (1 + (static_cast< unsigned char>((-1))));
# 711 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(const mask * = 0, bool = false, size_t = (0));
# 724 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(__c_locale , const mask * = 0, bool = false, size_t = (0));
# 737 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline bool is(mask , char ) const;
# 752 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline const char *is(const char * , const char * , mask * ) const;
# 766 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline const char *scan_is(mask , const char * , const char * ) const;
# 780 "/usr/include/c++/4.4/bits/locale_facets.h" 3
inline const char *scan_not(mask , const char * , const char * ) const;
# 795 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char_type toupper(char_type __c) const
# 796 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_toupper(__c); }
# 812 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char_type *toupper(char_type *__lo, const char_type *__hi) const
# 813 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_toupper(__lo, __hi); }
# 828 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char_type tolower(char_type __c) const
# 829 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_tolower(__c); }
# 845 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char_type *tolower(char_type *__lo, const char_type *__hi) const
# 846 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return this->do_tolower(__lo, __hi); }
# 865 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char_type widen(char __c) const
# 866 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 867 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (_M_widen_ok) {
# 868 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return (_M_widen)[static_cast< unsigned char>(__c)]; }
# 869 "/usr/include/c++/4.4/bits/locale_facets.h" 3
this->_M_widen_init();
# 870 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return this->do_widen(__c);
# 871 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 892 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char *widen(const char *__lo, const char *__hi, char_type *__to) const
# 893 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 894 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if ((_M_widen_ok) == 1)
# 895 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 896 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 897 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 898 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 899 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (!(_M_widen_ok)) {
# 900 "/usr/include/c++/4.4/bits/locale_facets.h" 3
this->_M_widen_init(); }
# 901 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return this->do_widen(__lo, __hi, __to);
# 902 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 923 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char narrow(char_type __c, char __dfault) const
# 924 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 925 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if ((_M_narrow)[static_cast< unsigned char>(__c)]) {
# 926 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return (_M_narrow)[static_cast< unsigned char>(__c)]; }
# 927 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char __t = this->do_narrow(__c, __dfault);
# 928 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (__t != __dfault) {
# 929 "/usr/include/c++/4.4/bits/locale_facets.h" 3
((_M_narrow)[static_cast< unsigned char>(__c)]) = __t; }
# 930 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __t;
# 931 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 956 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const char_type *narrow(const char_type *__lo, const char_type *__hi, char
# 957 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__dfault, char *__to) const
# 958 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 959 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (__builtin_expect((_M_narrow_ok) == 1, true))
# 960 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 961 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 962 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 963 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 964 "/usr/include/c++/4.4/bits/locale_facets.h" 3
if (!(_M_narrow_ok)) {
# 965 "/usr/include/c++/4.4/bits/locale_facets.h" 3
this->_M_narrow_init(); }
# 966 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return this->do_narrow(__lo, __hi, __dfault, __to);
# 967 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 974 "/usr/include/c++/4.4/bits/locale_facets.h" 3
const mask *table() const throw()
# 975 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return _M_table; }
# 979 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const mask *classic_table() throw();
# 989 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: virtual ~ctype();
# 1005 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type) const;
# 1022 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * , const char_type * ) const;
# 1038 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type) const;
# 1055 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * , const char_type * ) const;
# 1075 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const
# 1076 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return __c; }
# 1098 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const
# 1099 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 1100 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__dest, __lo, __hi - __lo);
# 1101 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 1102 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 1124 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char do_narrow(char_type __c, char) const
# 1125 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{ return __c; }
# 1150 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *
# 1151 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__dest) const
# 1152 "/usr/include/c++/4.4/bits/locale_facets.h" 3
{
# 1153 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__builtin_memcpy(__dest, __lo, __hi - __lo);
# 1154 "/usr/include/c++/4.4/bits/locale_facets.h" 3
return __hi;
# 1155 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 1158 "/usr/include/c++/4.4/bits/locale_facets.h" 3
private: void _M_narrow_init() const;
# 1159 "/usr/include/c++/4.4/bits/locale_facets.h" 3
void _M_widen_init() const;
# 1160 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1175 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype< wchar_t> : public __ctype_abstract_base< wchar_t> {
# 1180 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: typedef wchar_t char_type;
# 1181 "/usr/include/c++/4.4/bits/locale_facets.h" 3
typedef wctype_t __wmask_type;
# 1184 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: __c_locale _M_c_locale_ctype;
# 1187 "/usr/include/c++/4.4/bits/locale_facets.h" 3
bool _M_narrow_ok;
# 1188 "/usr/include/c++/4.4/bits/locale_facets.h" 3
char _M_narrow[128];
# 1189 "/usr/include/c++/4.4/bits/locale_facets.h" 3
wint_t _M_widen[1 + (static_cast< unsigned char>((-1)))];
# 1192 "/usr/include/c++/4.4/bits/locale_facets.h" 3
mask _M_bit[16];
# 1193 "/usr/include/c++/4.4/bits/locale_facets.h" 3
__wmask_type _M_wmask[16];
# 1198 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: static locale::id id;
# 1208 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(size_t = (0));
# 1219 "/usr/include/c++/4.4/bits/locale_facets.h" 3
explicit ctype(__c_locale , size_t = (0));
# 1223 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: __wmask_type _M_convert_to_wmask(const mask ) const;
# 1227 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual ~ctype();
# 1243 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual bool do_is(mask , char_type ) const;
# 1262 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_is(const char_type * , const char_type * , mask * ) const;
# 1280 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_scan_is(mask , const char_type * , const char_type * ) const;
# 1298 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_scan_not(mask , const char_type * , const char_type * ) const;
# 1315 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type) const;
# 1332 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * , const char_type * ) const;
# 1348 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type) const;
# 1365 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * , const char_type * ) const;
# 1385 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char_type do_widen(char) const;
# 1407 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char *do_widen(const char * , const char * , char_type * ) const;
# 1430 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual char do_narrow(char_type, char ) const;
# 1456 "/usr/include/c++/4.4/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type * , const char_type * , char , char * ) const;
# 1461 "/usr/include/c++/4.4/bits/locale_facets.h" 3
void _M_initialize_ctype();
# 1462 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1466 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class ctype_byname : public ctype < _CharT >
    {
    public :
      typedef typename ctype < _CharT > :: mask mask;

      explicit
      ctype_byname ( const char * __s, size_t __refs = 0 );

    protected :
      virtual
      ~ ctype_byname ( ) { };
    };
# 1482 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype_byname< char> : public ctype< char> {
# 1486 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: explicit ctype_byname(const char * , size_t = (0));
# 1490 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: virtual ~ctype_byname();
# 1491 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1495 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> class ctype_byname< wchar_t> : public ctype< wchar_t> {
# 1499 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: explicit ctype_byname(const char * , size_t = (0));
# 1503 "/usr/include/c++/4.4/bits/locale_facets.h" 3
protected: virtual ~ctype_byname();
# 1504 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1507 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 37 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
inline bool ctype< char> ::is(mask __m, char __c) const
# 42 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
{ return ((_M_table)[static_cast< unsigned char>(__c)]) & __m; }
# 46 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
inline const char *ctype< char> ::is(const char *__low, const char *__high, mask *__vec) const
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
{
# 48 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
while (__low < __high) {
# 49 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
(*(__vec++)) = ((_M_table)[static_cast< unsigned char>((*(__low++)))]); }
# 50 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
return __high;
# 51 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
}
# 55 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
inline const char *ctype< char> ::scan_is(mask __m, const char *__low, const char *__high) const
# 56 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
{
# 57 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
while ((__low < __high) && (!(((_M_table)[static_cast< unsigned char>((*__low))]) & __m))) {
# 59 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
++__low; }
# 60 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
return __low;
# 61 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
}
# 65 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
inline const char *ctype< char> ::scan_not(mask __m, const char *__low, const char *__high) const
# 66 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
{
# 67 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
while ((__low < __high) && ((((_M_table)[static_cast< unsigned char>((*__low))]) & __m) != 0)) {
# 69 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
++__low; }
# 70 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
return __low;
# 71 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
}
# 73 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/ctype_inline.h" 3
}
# 1512 "/usr/include/c++/4.4/bits/locale_facets.h" 3
namespace std __attribute((__visibility__("default"))) {
# 1515 "/usr/include/c++/4.4/bits/locale_facets.h" 3
class __num_base {
# 1521 "/usr/include/c++/4.4/bits/locale_facets.h" 3
public: enum {
# 1522 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ominus,
# 1523 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oplus,
# 1524 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ox,
# 1525 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oX,
# 1526 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_odigits,
# 1527 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_odigits_end = 20,
# 1528 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oudigits = 20,
# 1529 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oudigits_end = 36,
# 1530 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oe = 18,
# 1531 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oE = 34,
# 1532 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_oend = 36
# 1533 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1540 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const char *_S_atoms_out;
# 1544 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static const char *_S_atoms_in;
# 1547 "/usr/include/c++/4.4/bits/locale_facets.h" 3
enum {
# 1548 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iminus,
# 1549 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iplus,
# 1550 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ix,
# 1551 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iX,
# 1552 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_izero,
# 1553 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_ie = 18,
# 1554 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iE = 24,
# 1555 "/usr/include/c++/4.4/bits/locale_facets.h" 3
_S_iend = 26
# 1556 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1561 "/usr/include/c++/4.4/bits/locale_facets.h" 3
static void _S_format_float(const ios_base & , char * , char );
# 1562 "/usr/include/c++/4.4/bits/locale_facets.h" 3
};
# 1564 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    struct __numpunct_cache : public locale :: facet
    {
      const char * _M_grouping;
      size_t _M_grouping_size;
      bool _M_use_grouping;
      const _CharT * _M_truename;
      size_t _M_truename_size;
      const _CharT * _M_falsename;
      size_t _M_falsename_size;
      _CharT _M_decimal_point;
      _CharT _M_thousands_sep;





      _CharT _M_atoms_out [ __num_base :: _S_oend ];





      _CharT _M_atoms_in [ __num_base :: _S_iend ];

      bool _M_allocated;

      __numpunct_cache ( size_t __refs = 0 ) : facet ( __refs ),
      _M_grouping ( __null ), _M_grouping_size ( 0 ), _M_use_grouping ( false ),
      _M_truename ( __null ), _M_truename_size ( 0 ), _M_falsename ( __null ),
      _M_falsename_size ( 0 ), _M_decimal_point ( _CharT ( ) ),
      _M_thousands_sep ( _CharT ( ) ), _M_allocated ( false )
      { }

      ~ __numpunct_cache ( );

      void
      _M_cache ( const locale & __loc );

    private :
      __numpunct_cache &
      operator = ( const __numpunct_cache & );

      explicit
      __numpunct_cache ( const __numpunct_cache & );
    };
# 1611 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    __numpunct_cache < _CharT > :: ~ __numpunct_cache ( )
    {
      if ( _M_allocated )
 {
   delete [ ] _M_grouping;
   delete [ ] _M_truename;
   delete [ ] _M_falsename;
 }
    }
# 1635 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class numpunct : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;

      typedef __numpunct_cache < _CharT > __cache_type;

    protected :
      __cache_type * _M_data;

    public :

      static locale :: id id;






      explicit
      numpunct ( size_t __refs = 0 ) : facet ( __refs ), _M_data ( __null )
      { _M_initialize_numpunct ( ); }

      explicit
      numpunct ( __cache_type * __cache, size_t __refs = 0 )
      : facet ( __refs ), _M_data ( __cache )
      { _M_initialize_numpunct ( ); }

      explicit
      numpunct ( __c_locale __cloc, size_t __refs = 0 )
      : facet ( __refs ), _M_data ( __null )
      { _M_initialize_numpunct ( __cloc ); }

      char_type
      decimal_point ( ) const
      { return this -> do_decimal_point ( ); }

      char_type
      thousands_sep ( ) const
      { return this -> do_thousands_sep ( ); }

      string
      grouping ( ) const
      { return this -> do_grouping ( ); }

      string_type
      truename ( ) const
      { return this -> do_truename ( ); }

      string_type
      falsename ( ) const
      { return this -> do_falsename ( ); }

    protected :

      virtual
      ~ numpunct ( );

      virtual char_type
      do_decimal_point ( ) const
      { return _M_data -> _M_decimal_point; }

      virtual char_type
      do_thousands_sep ( ) const
      { return _M_data -> _M_thousands_sep; }

      virtual string
      do_grouping ( ) const
      { return _M_data -> _M_grouping; }

      virtual string_type
      do_truename ( ) const
      { return _M_data -> _M_truename; }

      virtual string_type
      do_falsename ( ) const
      { return _M_data -> _M_falsename; }


      void
      _M_initialize_numpunct ( __c_locale __cloc = __null );
    };
# 1847 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT> locale::id
# 1848 "/usr/include/c++/4.4/bits/locale_facets.h" 3
numpunct< _CharT> ::id;
# 1851 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> numpunct< char> ::~numpunct();
# 1855 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void numpunct< char> ::_M_initialize_numpunct(__c_locale );
# 1859 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> numpunct< wchar_t> ::~numpunct();
# 1863 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template<> void numpunct< wchar_t> ::_M_initialize_numpunct(__c_locale );
# 1867 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    class numpunct_byname : public numpunct < _CharT >
    {
    public :
      typedef _CharT char_type;
      typedef basic_string < _CharT > string_type;

      explicit
      numpunct_byname ( const char * __s, size_t __refs = 0 )
      : numpunct < _CharT > ( __refs )
      {
 if ( __builtin_strcmp ( __s, "C" ) != 0
     && __builtin_strcmp ( __s, "POSIX" ) != 0 )
   {
     __c_locale __tmp;
     this -> _S_create_c_locale ( __tmp, __s );
     this -> _M_initialize_numpunct ( __tmp );
     this -> _S_destroy_c_locale ( __tmp );
   }
      }

    protected :
      virtual
      ~ numpunct_byname ( ) { }
    };
# 1907 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT, typename _InIter >
    class num_get : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef _InIter iter_type;



      static locale :: id id;

      explicit
      num_get ( size_t __refs = 0 ) : facet ( __refs ) { }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, bool & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned short & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned int & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }


      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, long long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, unsigned long long & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, float & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, double & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, long double & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

      iter_type
      get ( iter_type __in, iter_type __end, ios_base & __io,
   ios_base :: iostate & __err, void * & __v ) const
      { return this -> do_get ( __in, __end, __io, __err, __v ); }

    protected :

      virtual ~ num_get ( ) { }

      iter_type
      _M_extract_float ( iter_type, iter_type, ios_base &, ios_base :: iostate &,
         string & ) const;

      template < typename _ValueT >
        iter_type
        _M_extract_int ( iter_type, iter_type, ios_base &, ios_base :: iostate &,
         _ValueT & ) const;

      template < typename _CharT2 >
      typename __gnu_cxx :: __enable_if < __is_char < _CharT2 > :: __value, int > :: __type
        _M_find ( const _CharT2 *, size_t __len, _CharT2 __c ) const
        {
   int __ret = - 1;
   if ( __len <= 10 )
     {
       if ( __c >= _CharT2 ( '0' ) && __c < _CharT2 ( _CharT2 ( '0' ) + __len ) )
  __ret = __c - _CharT2 ( '0' );
     }
   else
     {
       if ( __c >= _CharT2 ( '0' ) && __c <= _CharT2 ( '9' ) )
  __ret = __c - _CharT2 ( '0' );
       else if ( __c >= _CharT2 ( 'a' ) && __c <= _CharT2 ( 'f' ) )
  __ret = 10 + ( __c - _CharT2 ( 'a' ) );
       else if ( __c >= _CharT2 ( 'A' ) && __c <= _CharT2 ( 'F' ) )
  __ret = 10 + ( __c - _CharT2 ( 'A' ) );
     }
   return __ret;
 }

      template < typename _CharT2 >
      typename __gnu_cxx :: __enable_if < ! __is_char < _CharT2 > :: __value,
          int > :: __type
        _M_find ( const _CharT2 * __zero, size_t __len, _CharT2 __c ) const
        {
   int __ret = - 1;
   const char_type * __q = char_traits < _CharT2 > :: find ( __zero, __len, __c );
   if ( __q )
     {
       __ret = __q - __zero;
       if ( __ret > 15 )
  __ret -= 6;
     }
   return __ret;
 }

      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate &, bool & ) const;

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned short & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned int & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }


      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, long long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }

      virtual iter_type
      do_get ( iter_type __beg, iter_type __end, ios_base & __io,
      ios_base :: iostate & __err, unsigned long long & __v ) const
      { return _M_extract_int ( __beg, __end, __io, __err, __v ); }


      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      float & ) const;

      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      double & ) const;







      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      long double & ) const;


      virtual iter_type
      do_get ( iter_type, iter_type, ios_base &, ios_base :: iostate & __err,
      void * & ) const;

    };
# 2229 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT, class _InIter> locale::id
# 2230 "/usr/include/c++/4.4/bits/locale_facets.h" 3
num_get< _CharT, _InIter> ::id;
# 2244 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT, typename _OutIter >
    class num_put : public locale :: facet
    {
    public :



      typedef _CharT char_type;
      typedef _OutIter iter_type;



      static locale :: id id;

      explicit
      num_put ( size_t __refs = 0 ) : facet ( __refs ) { }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, bool __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   unsigned long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }


      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, long long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   unsigned long long __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill, double __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   long double __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

      iter_type
      put ( iter_type __s, ios_base & __f, char_type __fill,
   const void * __v ) const
      { return this -> do_put ( __s, __f, __fill, __v ); }

    protected :
      template < typename _ValueT >
        iter_type
        _M_insert_float ( iter_type, ios_base & __io, char_type __fill,
   char __mod, _ValueT __v ) const;

      void
      _M_group_float ( const char * __grouping, size_t __grouping_size,
       char_type __sep, const char_type * __p, char_type * __new,
       char_type * __cs, int & __len ) const;

      template < typename _ValueT >
        iter_type
        _M_insert_int ( iter_type, ios_base & __io, char_type __fill,
        _ValueT __v ) const;

      void
      _M_group_int ( const char * __grouping, size_t __grouping_size,
     char_type __sep, ios_base & __io, char_type * __new,
     char_type * __cs, int & __len ) const;

      void
      _M_pad ( char_type __fill, streamsize __w, ios_base & __io,
      char_type * __new, const char_type * __cs, int & __len ) const;


      virtual
      ~ num_put ( ) { };

      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, bool __v ) const;

      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill, long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }

      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill,
      unsigned long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }


      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill,
      long long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }

      virtual iter_type
      do_put ( iter_type __s, ios_base & __io, char_type __fill,
      unsigned long long __v ) const
      { return _M_insert_int ( __s, __io, __fill, __v ); }


      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, double __v ) const;






      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, long double __v ) const;


      virtual iter_type
      do_put ( iter_type, ios_base &, char_type __fill, const void * __v ) const;







    };
# 2508 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template< class _CharT, class _OutIter> locale::id
# 2509 "/usr/include/c++/4.4/bits/locale_facets.h" 3
num_put< _CharT, _OutIter> ::id;
# 2519 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isspace ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: space, __c ); }
# 2525 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isprint ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: print, __c ); }
# 2531 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    iscntrl ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: cntrl, __c ); }
# 2537 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isupper ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: upper, __c ); }
# 2543 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    islower ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: lower, __c ); }
# 2549 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isalpha ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: alpha, __c ); }
# 2555 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isdigit ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: digit, __c ); }
# 2561 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    ispunct ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: punct, __c ); }
# 2567 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isxdigit ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: xdigit, __c ); }
# 2573 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isalnum ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: alnum, __c ); }
# 2579 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline bool
    isgraph ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . is ( ctype_base :: graph, __c ); }
# 2585 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline _CharT
    toupper ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . toupper ( __c ); }
# 2591 "/usr/include/c++/4.4/bits/locale_facets.h" 3
template < typename _CharT >
    inline _CharT
    tolower ( _CharT __c, const locale & __loc )
    { return use_facet < ctype < _CharT > > ( __loc ) . tolower ( __c ); }
# 2596 "/usr/include/c++/4.4/bits/locale_facets.h" 3
}
# 37 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template< class _Facet>
# 42 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
struct __use_cache {
# 45 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
const _Facet *operator()(const locale & ) const;
# 46 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
};
# 49 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT >
    struct __use_cache < __numpunct_cache < _CharT > >
    {
      const __numpunct_cache < _CharT > *
      operator ( ) ( const locale & __loc ) const
      {
 const size_t __i = numpunct < _CharT > :: id . _M_id ( );
 const locale :: facet * * __caches = __loc . _M_impl -> _M_caches;
 if ( ! __caches [ __i ] )
   {
     __numpunct_cache < _CharT > * __tmp = __null;
     try
       {
  __tmp = new __numpunct_cache < _CharT >;
  __tmp -> _M_cache ( __loc );
       }
     catch ( ... )
       {
  delete __tmp;
  throw;
       }
     __loc . _M_impl -> _M_install_cache ( __tmp, __i );
   }
 return static_cast < const __numpunct_cache < _CharT > * > ( __caches [ __i ] );
      }
    };
# 76 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT >
    void
    __numpunct_cache < _CharT > :: _M_cache ( const locale & __loc )
    {
      _M_allocated = true;

      const numpunct < _CharT > & __np = use_facet < numpunct < _CharT > > ( __loc );

      _M_grouping_size = __np . grouping ( ) . size ( );
      char * __grouping = new char [ _M_grouping_size ];
      __np . grouping ( ) . copy ( __grouping, _M_grouping_size );
      _M_grouping = __grouping;
      _M_use_grouping = ( _M_grouping_size
    && static_cast < signed char > ( _M_grouping [ 0 ] ) > 0
    && ( _M_grouping [ 0 ]
        != __gnu_cxx :: __numeric_traits < char > :: __max ) );

      _M_truename_size = __np . truename ( ) . size ( );
      _CharT * __truename = new _CharT [ _M_truename_size ];
      __np . truename ( ) . copy ( __truename, _M_truename_size );
      _M_truename = __truename;

      _M_falsename_size = __np . falsename ( ) . size ( );
      _CharT * __falsename = new _CharT [ _M_falsename_size ];
      __np . falsename ( ) . copy ( __falsename, _M_falsename_size );
      _M_falsename = __falsename;

      _M_decimal_point = __np . decimal_point ( );
      _M_thousands_sep = __np . thousands_sep ( );

      const ctype < _CharT > & __ct = use_facet < ctype < _CharT > > ( __loc );
      __ct . widen ( __num_base :: _S_atoms_out,
   __num_base :: _S_atoms_out + __num_base :: _S_oend, _M_atoms_out );
      __ct . widen ( __num_base :: _S_atoms_in,
   __num_base :: _S_atoms_in + __num_base :: _S_iend, _M_atoms_in );
    }
# 122 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
bool __verify_grouping(const char * , size_t , const string & );
# 127 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    _M_extract_float ( _InIter __beg, _InIter __end, ios_base & __io,
       ios_base :: iostate & __err, string & __xtrc ) const
    {
      typedef char_traits < _CharT > __traits_type;
      typedef __numpunct_cache < _CharT > __cache_type;
      __use_cache < __cache_type > __uc;
      const locale & __loc = __io . _M_getloc ( );
      const __cache_type * __lc = __uc ( __loc );
      const _CharT * __lit = __lc -> _M_atoms_in;
      char_type __c = char_type ( );


      bool __testeof = __beg == __end;


      if ( ! __testeof )
 {
   __c = * __beg;
   const bool __plus = __c == __lit [ __num_base :: _S_iplus ];
   if ( ( __plus || __c == __lit [ __num_base :: _S_iminus ] )
       && ! ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
       && ! ( __c == __lc -> _M_decimal_point ) )
     {
       __xtrc += __plus ? '+' : '-';
       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }
 }


      bool __found_mantissa = false;
      int __sep_pos = 0;
      while ( ! __testeof )
 {
   if ( ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
       || __c == __lc -> _M_decimal_point )
     break;
   else if ( __c == __lit [ __num_base :: _S_izero ] )
     {
       if ( ! __found_mantissa )
  {
    __xtrc += '0';
    __found_mantissa = true;
  }
       ++ __sep_pos;

       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }
   else
     break;
 }


      bool __found_dec = false;
      bool __found_sci = false;
      string __found_grouping;
      if ( __lc -> _M_use_grouping )
 __found_grouping . reserve ( 32 );
      const char_type * __lit_zero = __lit + __num_base :: _S_izero;

      if ( ! __lc -> _M_allocated )

 while ( ! __testeof )
   {
     const int __digit = _M_find ( __lit_zero, 10, __c );
     if ( __digit != - 1 )
       {
  __xtrc += '0' + __digit;
  __found_mantissa = true;
       }
     else if ( __c == __lc -> _M_decimal_point
       && ! __found_dec && ! __found_sci )
       {
  __xtrc += '.';
  __found_dec = true;
       }
     else if ( ( __c == __lit [ __num_base :: _S_ie ]
        || __c == __lit [ __num_base :: _S_iE ] )
       && ! __found_sci && __found_mantissa )
       {

  __xtrc += 'e';
  __found_sci = true;


  if ( ++ __beg != __end )
    {
      __c = * __beg;
      const bool __plus = __c == __lit [ __num_base :: _S_iplus ];
      if ( __plus || __c == __lit [ __num_base :: _S_iminus ] )
        __xtrc += __plus ? '+' : '-';
      else
        continue;
    }
  else
    {
      __testeof = true;
      break;
    }
       }
     else
       break;

     if ( ++ __beg != __end )
       __c = * __beg;
     else
       __testeof = true;
   }
      else
 while ( ! __testeof )
   {


     if ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
       {
  if ( ! __found_dec && ! __found_sci )
    {


      if ( __sep_pos )
        {
   __found_grouping += static_cast < char > ( __sep_pos );
   __sep_pos = 0;
        }
      else
        {


   __xtrc . clear ( );
   break;
        }
    }
  else
    break;
       }
     else if ( __c == __lc -> _M_decimal_point )
       {
  if ( ! __found_dec && ! __found_sci )
    {



      if ( __found_grouping . size ( ) )
        __found_grouping += static_cast < char > ( __sep_pos );
      __xtrc += '.';
      __found_dec = true;
    }
  else
    break;
       }
     else
       {
  const char_type * __q =
    __traits_type :: find ( __lit_zero, 10, __c );
  if ( __q )
    {
      __xtrc += '0' + ( __q - __lit_zero );
      __found_mantissa = true;
      ++ __sep_pos;
    }
  else if ( ( __c == __lit [ __num_base :: _S_ie ]
     || __c == __lit [ __num_base :: _S_iE ] )
    && ! __found_sci && __found_mantissa )
    {

      if ( __found_grouping . size ( ) && ! __found_dec )
        __found_grouping += static_cast < char > ( __sep_pos );
      __xtrc += 'e';
      __found_sci = true;


      if ( ++ __beg != __end )
        {
   __c = * __beg;
   const bool __plus = __c == __lit [ __num_base :: _S_iplus ];
   if ( ( __plus || __c == __lit [ __num_base :: _S_iminus ] )
       && ! ( __lc -> _M_use_grouping
     && __c == __lc -> _M_thousands_sep )
       && ! ( __c == __lc -> _M_decimal_point ) )
        __xtrc += __plus ? '+' : '-';
   else
     continue;
        }
      else
        {
   __testeof = true;
   break;
        }
    }
  else
    break;
       }

     if ( ++ __beg != __end )
       __c = * __beg;
     else
       __testeof = true;
   }



      if ( __found_grouping . size ( ) )
        {

   if ( ! __found_dec && ! __found_sci )
     __found_grouping += static_cast < char > ( __sep_pos );

          if ( ! std :: __verify_grouping ( __lc -> _M_grouping,
          __lc -> _M_grouping_size,
          __found_grouping ) )
     __err = ios_base :: failbit;
        }

      return __beg;
    }
# 351 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    template < typename _ValueT >
      _InIter
      num_get < _CharT, _InIter > ::
      _M_extract_int ( _InIter __beg, _InIter __end, ios_base & __io,
       ios_base :: iostate & __err, _ValueT & __v ) const
      {
        typedef char_traits < _CharT > __traits_type;
 using __gnu_cxx :: __add_unsigned;
 typedef typename __add_unsigned < _ValueT > :: __type __unsigned_type;
 typedef __numpunct_cache < _CharT > __cache_type;
 __use_cache < __cache_type > __uc;
 const locale & __loc = __io . _M_getloc ( );
 const __cache_type * __lc = __uc ( __loc );
 const _CharT * __lit = __lc -> _M_atoms_in;
 char_type __c = char_type ( );


 const ios_base :: fmtflags __basefield = __io . flags ( )
                                        & ios_base :: basefield;
 const bool __oct = __basefield == ios_base :: oct;
 int __base = __oct ? 8 : ( __basefield == ios_base :: hex ? 16 : 10 );


 bool __testeof = __beg == __end;


 bool __negative = false;
 if ( ! __testeof )
   {
     __c = * __beg;
     __negative = __c == __lit [ __num_base :: _S_iminus ];
     if ( ( __negative || __c == __lit [ __num_base :: _S_iplus ] )
  && ! ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
  && ! ( __c == __lc -> _M_decimal_point ) )
       {
  if ( ++ __beg != __end )
    __c = * __beg;
  else
    __testeof = true;
       }
   }



 bool __found_zero = false;
 int __sep_pos = 0;
 while ( ! __testeof )
   {
     if ( ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
  || __c == __lc -> _M_decimal_point )
       break;
     else if ( __c == __lit [ __num_base :: _S_izero ]
       && ( ! __found_zero || __base == 10 ) )
       {
  __found_zero = true;
  ++ __sep_pos;
  if ( __basefield == 0 )
    __base = 8;
  if ( __base == 8 )
    __sep_pos = 0;
       }
     else if ( __found_zero
       && ( __c == __lit [ __num_base :: _S_ix ]
    || __c == __lit [ __num_base :: _S_iX ] ) )
       {
  if ( __basefield == 0 )
    __base = 16;
  if ( __base == 16 )
    {
      __found_zero = false;
      __sep_pos = 0;
    }
  else
    break;
       }
     else
       break;

     if ( ++ __beg != __end )
       {
  __c = * __beg;
  if ( ! __found_zero )
    break;
       }
     else
       __testeof = true;
   }



 const size_t __len = ( __base == 16 ? __num_base :: _S_iend
         - __num_base :: _S_izero : __base );


 string __found_grouping;
 if ( __lc -> _M_use_grouping )
   __found_grouping . reserve ( 32 );
 bool __testfail = false;
 bool __testoverflow = false;
 const __unsigned_type __max =
   ( __negative && __gnu_cxx :: __numeric_traits < _ValueT > :: __is_signed )
   ? - __gnu_cxx :: __numeric_traits < _ValueT > :: __min
   : __gnu_cxx :: __numeric_traits < _ValueT > :: __max;
 const __unsigned_type __smax = __max / __base;
 __unsigned_type __result = 0;
 int __digit = 0;
 const char_type * __lit_zero = __lit + __num_base :: _S_izero;

 if ( ! __lc -> _M_allocated )

   while ( ! __testeof )
     {
       __digit = _M_find ( __lit_zero, __len, __c );
       if ( __digit == - 1 )
  break;

       if ( __result > __smax )
  __testoverflow = true;
       else
  {
    __result *= __base;
    __testoverflow |= __result > __max - __digit;
    __result += __digit;
    ++ __sep_pos;
  }

       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }
 else
   while ( ! __testeof )
     {


       if ( __lc -> _M_use_grouping && __c == __lc -> _M_thousands_sep )
  {


    if ( __sep_pos )
      {
        __found_grouping += static_cast < char > ( __sep_pos );
        __sep_pos = 0;
      }
    else
      {
        __testfail = true;
        break;
      }
  }
       else if ( __c == __lc -> _M_decimal_point )
  break;
       else
  {
    const char_type * __q =
      __traits_type :: find ( __lit_zero, __len, __c );
    if ( ! __q )
      break;

    __digit = __q - __lit_zero;
    if ( __digit > 15 )
      __digit -= 6;
    if ( __result > __smax )
      __testoverflow = true;
    else
      {
        __result *= __base;
        __testoverflow |= __result > __max - __digit;
        __result += __digit;
        ++ __sep_pos;
      }
  }

       if ( ++ __beg != __end )
  __c = * __beg;
       else
  __testeof = true;
     }



 if ( __found_grouping . size ( ) )
   {

     __found_grouping += static_cast < char > ( __sep_pos );

     if ( ! std :: __verify_grouping ( __lc -> _M_grouping,
     __lc -> _M_grouping_size,
     __found_grouping ) )
       __err = ios_base :: failbit;
   }



 if ( ( ! __sep_pos && ! __found_zero && ! __found_grouping . size ( ) )
     || __testfail )
   {
     __v = 0;
     __err = ios_base :: failbit;
   }
 else if ( __testoverflow )
   {
     if ( __negative
  && __gnu_cxx :: __numeric_traits < _ValueT > :: __is_signed )
       __v = __gnu_cxx :: __numeric_traits < _ValueT > :: __min;
     else
       __v = __gnu_cxx :: __numeric_traits < _ValueT > :: __max;
     __err = ios_base :: failbit;
   }
 else
   __v = __negative ? - __result : __result;

 if ( __testeof )
   __err |= ios_base :: eofbit;
 return __beg;
      }
# 572 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, bool & __v ) const
    {
      if ( ! ( __io . flags ( ) & ios_base :: boolalpha ) )
        {



   long __l = - 1;
          __beg = _M_extract_int ( __beg, __end, __io, __err, __l );
   if ( __l == 0 || __l == 1 )
     __v = bool ( __l );
   else
     {


       __v = true;
       __err = ios_base :: failbit;
       if ( __beg == __end )
  __err |= ios_base :: eofbit;
     }
        }
      else
        {

   typedef __numpunct_cache < _CharT > __cache_type;
   __use_cache < __cache_type > __uc;
   const locale & __loc = __io . _M_getloc ( );
   const __cache_type * __lc = __uc ( __loc );

   bool __testf = true;
   bool __testt = true;
   bool __donef = __lc -> _M_falsename_size == 0;
   bool __donet = __lc -> _M_truename_size == 0;
   bool __testeof = false;
   size_t __n = 0;
   while ( ! __donef || ! __donet )
     {
       if ( __beg == __end )
  {
    __testeof = true;
    break;
  }

       const char_type __c = * __beg;

       if ( ! __donef )
  __testf = __c == __lc -> _M_falsename [ __n ];

       if ( ! __testf && __donet )
  break;

       if ( ! __donet )
  __testt = __c == __lc -> _M_truename [ __n ];

       if ( ! __testt && __donef )
  break;

       if ( ! __testt && ! __testf )
  break;

       ++ __n;
       ++ __beg;

       __donef = ! __testf || __n >= __lc -> _M_falsename_size;
       __donet = ! __testt || __n >= __lc -> _M_truename_size;
     }
   if ( __testf && __n == __lc -> _M_falsename_size && __n )
     {
       __v = false;
       if ( __testt && __n == __lc -> _M_truename_size )
  __err = ios_base :: failbit;
       else
  __err = __testeof ? ios_base :: eofbit : ios_base :: goodbit;
     }
   else if ( __testt && __n == __lc -> _M_truename_size && __n )
     {
       __v = true;
       __err = __testeof ? ios_base :: eofbit : ios_base :: goodbit;
     }
   else
     {


       __v = false;
       __err = ios_base :: failbit;
       if ( __testeof )
  __err |= ios_base :: eofbit;
     }
 }
      return __beg;
    }
# 668 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
    ios_base :: iostate & __err, float & __v ) const
    {
      string __xtrc;
      __xtrc . reserve ( 32 );
      __beg = _M_extract_float ( __beg, __end, __io, __err, __xtrc );
      std :: __convert_to_v ( __xtrc . c_str ( ), __v, __err, _S_get_c_locale ( ) );
      if ( __beg == __end )
 __err |= ios_base :: eofbit;
      return __beg;
    }
# 683 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, double & __v ) const
    {
      string __xtrc;
      __xtrc . reserve ( 32 );
      __beg = _M_extract_float ( __beg, __end, __io, __err, __xtrc );
      std :: __convert_to_v ( __xtrc . c_str ( ), __v, __err, _S_get_c_locale ( ) );
      if ( __beg == __end )
 __err |= ios_base :: eofbit;
      return __beg;
    }
# 715 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, long double & __v ) const
    {
      string __xtrc;
      __xtrc . reserve ( 32 );
      __beg = _M_extract_float ( __beg, __end, __io, __err, __xtrc );
      std :: __convert_to_v ( __xtrc . c_str ( ), __v, __err, _S_get_c_locale ( ) );
      if ( __beg == __end )
 __err |= ios_base :: eofbit;
      return __beg;
    }
# 730 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _InIter >
    _InIter
    num_get < _CharT, _InIter > ::
    do_get ( iter_type __beg, iter_type __end, ios_base & __io,
           ios_base :: iostate & __err, void * & __v ) const
    {

      typedef ios_base :: fmtflags fmtflags;
      const fmtflags __fmt = __io . flags ( );
      __io . flags ( ( __fmt & ~ ios_base :: basefield ) | ios_base :: hex );

      typedef __gnu_cxx :: __conditional_type < ( sizeof ( void * )
          <= sizeof ( unsigned long ) ),
 unsigned long, unsigned long long > :: __type _UIntPtrType;

      _UIntPtrType __ul;
      __beg = _M_extract_int ( __beg, __end, __io, __err, __ul );


      __io . flags ( __fmt );

      __v = reinterpret_cast < void * > ( __ul );
      return __beg;
    }
# 757 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    void
    num_put < _CharT, _OutIter > ::
    _M_pad ( _CharT __fill, streamsize __w, ios_base & __io,
    _CharT * __new, const _CharT * __cs, int & __len ) const
    {


      __pad < _CharT, char_traits < _CharT > > :: _S_pad ( __io, __fill, __new,
        __cs, __w, __len );
      __len = static_cast < int > ( __w );
    }
# 772 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _ValueT >
    int
    __int_to_char ( _CharT * __bufend, _ValueT __v, const _CharT * __lit,
    ios_base :: fmtflags __flags, bool __dec )
    {
      _CharT * __buf = __bufend;
      if ( __builtin_expect ( __dec, true ) )
 {

   do
     {
       * -- __buf = __lit [ ( __v % 10 ) + __num_base :: _S_odigits ];
       __v /= 10;
     }
   while ( __v != 0 );
 }
      else if ( ( __flags & ios_base :: basefield ) == ios_base :: oct )
 {

   do
     {
       * -- __buf = __lit [ ( __v & 7 ) + __num_base :: _S_odigits ];
       __v >>= 3;
     }
   while ( __v != 0 );
 }
      else
 {

   const bool __uppercase = __flags & ios_base :: uppercase;
   const int __case_offset = __uppercase ? __num_base :: _S_oudigits
                                         : __num_base :: _S_odigits;
   do
     {
       * -- __buf = __lit [ ( __v & 15 ) + __case_offset ];
       __v >>= 4;
     }
   while ( __v != 0 );
 }
      return __bufend - __buf;
    }
# 816 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    void
    num_put < _CharT, _OutIter > ::
    _M_group_int ( const char * __grouping, size_t __grouping_size, _CharT __sep,
   ios_base &, _CharT * __new, _CharT * __cs, int & __len ) const
    {
      _CharT * __p = std :: __add_grouping ( __new, __sep, __grouping,
     __grouping_size, __cs, __cs + __len );
      __len = __p - __new;
    }
# 827 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    template < typename _ValueT >
      _OutIter
      num_put < _CharT, _OutIter > ::
      _M_insert_int ( _OutIter __s, ios_base & __io, _CharT __fill,
      _ValueT __v ) const
      {
 using __gnu_cxx :: __add_unsigned;
 typedef typename __add_unsigned < _ValueT > :: __type __unsigned_type;
 typedef __numpunct_cache < _CharT > __cache_type;
 __use_cache < __cache_type > __uc;
 const locale & __loc = __io . _M_getloc ( );
 const __cache_type * __lc = __uc ( __loc );
 const _CharT * __lit = __lc -> _M_atoms_out;
 const ios_base :: fmtflags __flags = __io . flags ( );


 const int __ilen = 5 * sizeof ( _ValueT );
 _CharT * __cs = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
            * __ilen ) );



 const ios_base :: fmtflags __basefield = __flags & ios_base :: basefield;
 const bool __dec = ( __basefield != ios_base :: oct
       && __basefield != ios_base :: hex );
 const __unsigned_type __u = ( ( __v > 0 || ! __dec )
         ? __unsigned_type ( __v )
         : - __unsigned_type ( __v ) );
  int __len = __int_to_char ( __cs + __ilen, __u, __lit, __flags, __dec );
 __cs += __ilen - __len;


 if ( __lc -> _M_use_grouping )
   {


     _CharT * __cs2 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * ( __len + 1 )
          * 2 ) );
     _M_group_int ( __lc -> _M_grouping, __lc -> _M_grouping_size,
    __lc -> _M_thousands_sep, __io, __cs2 + 2, __cs, __len );
     __cs = __cs2 + 2;
   }


 if ( __builtin_expect ( __dec, true ) )
   {

     if ( __v >= 0 )
       {
  if ( bool ( __flags & ios_base :: showpos )
      && __gnu_cxx :: __numeric_traits < _ValueT > :: __is_signed )
    * -- __cs = __lit [ __num_base :: _S_oplus ], ++ __len;
       }
     else
       * -- __cs = __lit [ __num_base :: _S_ominus ], ++ __len;
   }
 else if ( bool ( __flags & ios_base :: showbase ) && __v )
   {
     if ( __basefield == ios_base :: oct )
       * -- __cs = __lit [ __num_base :: _S_odigits ], ++ __len;
     else
       {

  const bool __uppercase = __flags & ios_base :: uppercase;
  * -- __cs = __lit [ __num_base :: _S_ox + __uppercase ];

  * -- __cs = __lit [ __num_base :: _S_odigits ];
  __len += 2;
       }
   }


 const streamsize __w = __io . width ( );
 if ( __w > static_cast < streamsize > ( __len ) )
   {
     _CharT * __cs3 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * __w ) );
     _M_pad ( __fill, __w, __io, __cs3, __cs, __len );
     __cs = __cs3;
   }
 __io . width ( 0 );



 return std :: __write ( __s, __cs, __len );
      }
# 916 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    void
    num_put < _CharT, _OutIter > ::
    _M_group_float ( const char * __grouping, size_t __grouping_size,
     _CharT __sep, const _CharT * __p, _CharT * __new,
     _CharT * __cs, int & __len ) const
    {



      const int __declen = __p ? __p - __cs : __len;
      _CharT * __p2 = std :: __add_grouping ( __new, __sep, __grouping,
      __grouping_size,
      __cs, __cs + __declen );


      int __newlen = __p2 - __new;
      if ( __p )
 {
   char_traits < _CharT > :: copy ( __p2, __p, __len - __declen );
   __newlen += __len - __declen;
 }
      __len = __newlen;
    }
# 951 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    template < typename _ValueT >
      _OutIter
      num_put < _CharT, _OutIter > ::
      _M_insert_float ( _OutIter __s, ios_base & __io, _CharT __fill, char __mod,
         _ValueT __v ) const
      {
 typedef __numpunct_cache < _CharT > __cache_type;
 __use_cache < __cache_type > __uc;
 const locale & __loc = __io . _M_getloc ( );
 const __cache_type * __lc = __uc ( __loc );


 const streamsize __prec = __io . precision ( ) < 0 ? 6 : __io . precision ( );

 const int __max_digits =
   __gnu_cxx :: __numeric_traits < _ValueT > :: __digits10;


 int __len;

 char __fbuf [ 16 ];
 __num_base :: _S_format_float ( __io, __fbuf, __mod );




 int __cs_size = __max_digits * 3;
 char * __cs = static_cast < char * > ( __builtin_alloca ( __cs_size ) );
 __len = std :: __convert_from_v ( _S_get_c_locale ( ), __cs, __cs_size,
          __fbuf, __prec, __v );


 if ( __len >= __cs_size )
   {
     __cs_size = __len + 1;
     __cs = static_cast < char * > ( __builtin_alloca ( __cs_size ) );
     __len = std :: __convert_from_v ( _S_get_c_locale ( ), __cs, __cs_size,
       __fbuf, __prec, __v );
   }

 const ctype < _CharT > & __ctype = use_facet < ctype < _CharT > > ( __loc );

 _CharT * __ws = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
            * __len ) );
 __ctype . widen ( __cs, __cs + __len, __ws );


 _CharT * __wp = 0;
 const char * __p = char_traits < char > :: find ( __cs, __len, '.' );
 if ( __p )
   {
     __wp = __ws + ( __p - __cs );
     * __wp = __lc -> _M_decimal_point;
   }




 if ( __lc -> _M_use_grouping
     && ( __wp || __len < 3 || ( __cs [ 1 ] <= '9' && __cs [ 2 ] <= '9'
          && __cs [ 1 ] >= '0' && __cs [ 2 ] >= '0' ) ) )
   {


     _CharT * __ws2 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * __len * 2 ) );

     streamsize __off = 0;
     if ( __cs [ 0 ] == '-' || __cs [ 0 ] == '+' )
       {
  __off = 1;
  __ws2 [ 0 ] = __ws [ 0 ];
  __len -= 1;
       }

     _M_group_float ( __lc -> _M_grouping, __lc -> _M_grouping_size,
      __lc -> _M_thousands_sep, __wp, __ws2 + __off,
      __ws + __off, __len );
     __len += __off;

     __ws = __ws2;
   }


 const streamsize __w = __io . width ( );
 if ( __w > static_cast < streamsize > ( __len ) )
   {
     _CharT * __ws3 = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
          * __w ) );
     _M_pad ( __fill, __w, __io, __ws3, __ws, __len );
     __ws = __ws3;
   }
 __io . width ( 0 );



 return std :: __write ( __s, __ws, __len );
      }
# 1071 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill, bool __v ) const
    {
      const ios_base :: fmtflags __flags = __io . flags ( );
      if ( ( __flags & ios_base :: boolalpha ) == 0 )
        {
          const long __l = __v;
          __s = _M_insert_int ( __s, __io, __fill, __l );
        }
      else
        {
   typedef __numpunct_cache < _CharT > __cache_type;
   __use_cache < __cache_type > __uc;
   const locale & __loc = __io . _M_getloc ( );
   const __cache_type * __lc = __uc ( __loc );

   const _CharT * __name = __v ? __lc -> _M_truename
                              : __lc -> _M_falsename;
   int __len = __v ? __lc -> _M_truename_size
                   : __lc -> _M_falsename_size;

   const streamsize __w = __io . width ( );
   if ( __w > static_cast < streamsize > ( __len ) )
     {
       const streamsize __plen = __w - __len;
       _CharT * __ps
  = static_cast < _CharT * > ( __builtin_alloca ( sizeof ( _CharT )
       * __plen ) );

       char_traits < _CharT > :: assign ( __ps, __plen, __fill );
       __io . width ( 0 );

       if ( ( __flags & ios_base :: adjustfield ) == ios_base :: left )
  {
    __s = std :: __write ( __s, __name, __len );
    __s = std :: __write ( __s, __ps, __plen );
  }
       else
  {
    __s = std :: __write ( __s, __ps, __plen );
    __s = std :: __write ( __s, __name, __len );
  }
       return __s;
     }
   __io . width ( 0 );
   __s = std :: __write ( __s, __name, __len );
 }
      return __s;
    }
# 1123 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill, double __v ) const
    { return _M_insert_float ( __s, __io, __fill, char ( ), __v ); }
# 1137 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill,
    long double __v ) const
    { return _M_insert_float ( __s, __io, __fill, 'L', __v ); }
# 1144 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _OutIter >
    _OutIter
    num_put < _CharT, _OutIter > ::
    do_put ( iter_type __s, ios_base & __io, char_type __fill,
           const void * __v ) const
    {
      const ios_base :: fmtflags __flags = __io . flags ( );
      const ios_base :: fmtflags __fmt = ~ ( ios_base :: basefield
      | ios_base :: uppercase );
      __io . flags ( ( __flags & __fmt ) | ( ios_base :: hex | ios_base :: showbase ) );

      typedef __gnu_cxx :: __conditional_type < ( sizeof ( const void * )
          <= sizeof ( unsigned long ) ),
 unsigned long, unsigned long long > :: __type _UIntPtrType;

      __s = _M_insert_int ( __s, __io, __fill,
     reinterpret_cast < _UIntPtrType > ( __v ) );
      __io . flags ( __flags );
      return __s;
    }
# 1174 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT, typename _Traits >
    void
    __pad < _CharT, _Traits > :: _S_pad ( ios_base & __io, _CharT __fill,
       _CharT * __news, const _CharT * __olds,
       streamsize __newlen, streamsize __oldlen )
    {
      const size_t __plen = static_cast < size_t > ( __newlen - __oldlen );
      const ios_base :: fmtflags __adjust = __io . flags ( ) & ios_base :: adjustfield;


      if ( __adjust == ios_base :: left )
 {
   _Traits :: copy ( __news, __olds, __oldlen );
   _Traits :: assign ( __news + __oldlen, __plen, __fill );
   return;
 }

      size_t __mod = 0;
      if ( __adjust == ios_base :: internal )
 {



          const locale & __loc = __io . _M_getloc ( );
   const ctype < _CharT > & __ctype = use_facet < ctype < _CharT > > ( __loc );

   if ( __ctype . widen ( '-' ) == __olds [ 0 ]
       || __ctype . widen ( '+' ) == __olds [ 0 ] )
     {
       __news [ 0 ] = __olds [ 0 ];
       __mod = 1;
       ++ __news;
     }
   else if ( __ctype . widen ( '0' ) == __olds [ 0 ]
     && __oldlen > 1
     && ( __ctype . widen ( 'x' ) == __olds [ 1 ]
         || __ctype . widen ( 'X' ) == __olds [ 1 ] ) )
     {
       __news [ 0 ] = __olds [ 0 ];
       __news [ 1 ] = __olds [ 1 ];
       __mod = 2;
       __news += 2;
     }

 }
      _Traits :: assign ( __news, __plen, __fill );
      _Traits :: copy ( __news + __plen, __olds + __mod, __oldlen - __mod );
    }
# 1223 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
template < typename _CharT >
    _CharT *
    __add_grouping ( _CharT * __s, _CharT __sep,
     const char * __gbeg, size_t __gsize,
     const _CharT * __first, const _CharT * __last )
    {
      size_t __idx = 0;
      size_t __ctr = 0;

      while ( __last - __first > __gbeg [ __idx ]
      && static_cast < signed char > ( __gbeg [ __idx ] ) > 0
      && __gbeg [ __idx ] != __gnu_cxx :: __numeric_traits < char > :: __max )
 {
   __last -= __gbeg [ __idx ];
   __idx < __gsize - 1 ? ++ __idx : ++ __ctr;
 }

      while ( __first != __last )
 * __s ++ = * __first ++;

      while ( __ctr -- )
 {
   * __s ++ = __sep;
   for ( char __i = __gbeg [ __idx ]; __i > 0; -- __i )
     * __s ++ = * __first ++;
 }

      while ( __idx -- )
 {
   * __s ++ = __sep;
   for ( char __i = __gbeg [ __idx ]; __i > 0; -- __i )
     * __s ++ = * __first ++;
 }

      return __s;
    }
# 1264 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct< char> ;
# 1265 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct_byname< char> ;
# 1266 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_get< char, istreambuf_iterator< char, char_traits< char> > > ;
# 1267 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_put< char, ostreambuf_iterator< char, char_traits< char> > > ;
# 1270 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const ctype< char> &use_facet< ctype< char> > (const locale &);
# 1274 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const numpunct< char> &use_facet< numpunct< char> > (const locale &);
# 1278 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_put< char, ostreambuf_iterator< char, char_traits< char> > > &use_facet< num_put< char, ostreambuf_iterator< char, char_traits< char> > > > (const locale &);
# 1282 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_get< char, istreambuf_iterator< char, char_traits< char> > > &use_facet< num_get< char, istreambuf_iterator< char, char_traits< char> > > > (const locale &);
# 1286 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< ctype< char> > (const locale &) throw();
# 1290 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< numpunct< char> > (const locale &) throw();
# 1294 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_put< char, ostreambuf_iterator< char, char_traits< char> > > > (const locale &) throw();
# 1298 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_get< char, istreambuf_iterator< char, char_traits< char> > > > (const locale &) throw();
# 1303 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct< wchar_t> ;
# 1304 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class numpunct_byname< wchar_t> ;
# 1305 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > ;
# 1306 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template class num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > ;
# 1309 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const ctype< wchar_t> &use_facet< ctype< wchar_t> > (const locale &);
# 1313 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const numpunct< wchar_t> &use_facet< numpunct< wchar_t> > (const locale &);
# 1317 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > &use_facet< num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &);
# 1321 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template const num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > &use_facet< num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &);
# 1325 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< ctype< wchar_t> > (const locale &) throw();
# 1329 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< numpunct< wchar_t> > (const locale &) throw();
# 1333 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &) throw();
# 1337 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
extern template bool has_facet< num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &) throw();
# 1343 "/usr/include/c++/4.4/bits/locale_facets.tcc" 3
}
# 42 "/usr/include/c++/4.4/bits/basic_ios.h" 3
namespace std __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/4.4/bits/basic_ios.h" 3
template < typename _Facet >
    inline const _Facet &
    __check_facet ( const _Facet * __f )
    {
      if ( ! __f )
 __throw_bad_cast ( );
      return * __f;
    }
# 61 "/usr/include/c++/4.4/bits/basic_ios.h" 3
template < typename _CharT, typename _Traits >
    class basic_ios : public ios_base
    {
    public :






      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;






      typedef ctype < _CharT > __ctype_type;
      typedef num_put < _CharT, ostreambuf_iterator < _CharT, _Traits > >
           __num_put_type;
      typedef num_get < _CharT, istreambuf_iterator < _CharT, _Traits > >
           __num_get_type;



    protected :
      basic_ostream < _CharT, _Traits > * _M_tie;
      mutable char_type _M_fill;
      mutable bool _M_fill_init;
      basic_streambuf < _CharT, _Traits > * _M_streambuf;


      const __ctype_type * _M_ctype;

      const __num_put_type * _M_num_put;

      const __num_get_type * _M_num_get;

    public :







      operator void * ( ) const
      { return this -> fail ( ) ? 0 : const_cast < basic_ios * > ( this ); }

      bool
      operator ! ( ) const
      { return this -> fail ( ); }

      iostate
      rdstate ( ) const
      { return _M_streambuf_state; }

      void
      clear ( iostate __state = goodbit );







      void
      setstate ( iostate __state )
      { this -> clear ( this -> rdstate ( ) | __state ); }




      void
      _M_setstate ( iostate __state )
      {


 _M_streambuf_state |= __state;
 if ( this -> exceptions ( ) & __state )
   throw;
      }







      bool
      good ( ) const
      { return this -> rdstate ( ) == 0; }







      bool
      eof ( ) const
      { return ( this -> rdstate ( ) & eofbit ) != 0; }

      bool
      fail ( ) const
      { return ( this -> rdstate ( ) & ( badbit | failbit ) ) != 0; }







      bool
      bad ( ) const
      { return ( this -> rdstate ( ) & badbit ) != 0; }

      iostate
      exceptions ( ) const
      { return _M_exception; }

      void
      exceptions ( iostate __except )
      {
        _M_exception = __except;
        this -> clear ( _M_streambuf_state );
      }







      explicit
      basic_ios ( basic_streambuf < _CharT, _Traits > * __sb )
      : ios_base ( ), _M_tie ( 0 ), _M_fill ( ), _M_fill_init ( false ), _M_streambuf ( 0 ),
 _M_ctype ( 0 ), _M_num_put ( 0 ), _M_num_get ( 0 )
      { this -> init ( __sb ); }







      virtual
      ~ basic_ios ( ) { }

      basic_ostream < _CharT, _Traits > *
      tie ( ) const
      { return _M_tie; }

      basic_ostream < _CharT, _Traits > *
      tie ( basic_ostream < _CharT, _Traits > * __tiestr )
      {
        basic_ostream < _CharT, _Traits > * __old = _M_tie;
        _M_tie = __tiestr;
        return __old;
      }







      basic_streambuf < _CharT, _Traits > *
      rdbuf ( ) const
      { return _M_streambuf; }

      basic_streambuf < _CharT, _Traits > *
      rdbuf ( basic_streambuf < _CharT, _Traits > * __sb );

      basic_ios &
      copyfmt ( const basic_ios & __rhs );







      char_type
      fill ( ) const
      {
 if ( ! _M_fill_init )
   {
     _M_fill = this -> widen ( ' ' );
     _M_fill_init = true;
   }
 return _M_fill;
      }

      char_type
      fill ( char_type __ch )
      {
 char_type __old = this -> fill ( );
 _M_fill = __ch;
 return __old;
      }

      locale
      imbue ( const locale & __loc );

      char
      narrow ( char_type __c, char __dfault ) const
      { return __check_facet ( _M_ctype ) . narrow ( __c, __dfault ); }

      char_type
      widen ( char __c ) const
      { return __check_facet ( _M_ctype ) . widen ( __c ); }

    protected :







      basic_ios ( )
      : ios_base ( ), _M_tie ( 0 ), _M_fill ( char_type ( ) ), _M_fill_init ( false ),
 _M_streambuf ( 0 ), _M_ctype ( 0 ), _M_num_put ( 0 ), _M_num_get ( 0 )
      { }







      void
      init ( basic_streambuf < _CharT, _Traits > * __sb );

      void
      _M_cache_locale ( const locale & __loc );
    };
# 468 "/usr/include/c++/4.4/bits/basic_ios.h" 3
}
# 36 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 38 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_ios < _CharT, _Traits > :: clear ( iostate __state )
    {
      if ( this -> rdbuf ( ) )
 _M_streambuf_state = __state;
      else
   _M_streambuf_state = __state | badbit;
      if ( this -> exceptions ( ) & this -> rdstate ( ) )
 __throw_ios_failure ( ( "basic_ios::clear" ) );
    }
# 50 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    basic_streambuf < _CharT, _Traits > *
    basic_ios < _CharT, _Traits > :: rdbuf ( basic_streambuf < _CharT, _Traits > * __sb )
    {
      basic_streambuf < _CharT, _Traits > * __old = _M_streambuf;
      _M_streambuf = __sb;
      this -> clear ( );
      return __old;
    }
# 60 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ios < _CharT, _Traits > &
    basic_ios < _CharT, _Traits > :: copyfmt ( const basic_ios & __rhs )
    {


      if ( this != & __rhs )
 {




   _Words * __words = ( __rhs . _M_word_size <= _S_local_word_size ) ?
                      _M_local_word : new _Words [ __rhs . _M_word_size ];


   _Callback_list * __cb = __rhs . _M_callbacks;
   if ( __cb )
     __cb -> _M_add_reference ( );
   _M_call_callbacks ( erase_event );
   if ( _M_word != _M_local_word )
     {
       delete [ ] _M_word;
       _M_word = 0;
     }
   _M_dispose_callbacks ( );


   _M_callbacks = __cb;
   for ( int __i = 0; __i < __rhs . _M_word_size; ++ __i )
     __words [ __i ] = __rhs . _M_word [ __i ];
   _M_word = __words;
   _M_word_size = __rhs . _M_word_size;

   this -> flags ( __rhs . flags ( ) );
   this -> width ( __rhs . width ( ) );
   this -> precision ( __rhs . precision ( ) );
   this -> tie ( __rhs . tie ( ) );
   this -> fill ( __rhs . fill ( ) );
   _M_ios_locale = __rhs . getloc ( );
   _M_cache_locale ( _M_ios_locale );

   _M_call_callbacks ( copyfmt_event );


   this -> exceptions ( __rhs . exceptions ( ) );
 }
      return * this;
    }
# 111 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    locale
    basic_ios < _CharT, _Traits > :: imbue ( const locale & __loc )
    {
      locale __old ( this -> getloc ( ) );
      ios_base :: imbue ( __loc );
      _M_cache_locale ( __loc );
      if ( this -> rdbuf ( ) != 0 )
 this -> rdbuf ( ) -> pubimbue ( __loc );
      return __old;
    }
# 123 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_ios < _CharT, _Traits > :: init ( basic_streambuf < _CharT, _Traits > * __sb )
    {

      ios_base :: _M_init ( );


      _M_cache_locale ( _M_ios_locale );

      _M_fill = _CharT ( );
      _M_fill_init = false;

      _M_tie = 0;
      _M_exception = goodbit;
      _M_streambuf = __sb;
      _M_streambuf_state = __sb ? goodbit : badbit;
    }
# 154 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_ios < _CharT, _Traits > :: _M_cache_locale ( const locale & __loc )
    {
      if ( __builtin_expect ( has_facet < __ctype_type > ( __loc ), true ) )
 _M_ctype = & use_facet < __ctype_type > ( __loc );
      else
 _M_ctype = 0;

      if ( __builtin_expect ( has_facet < __num_put_type > ( __loc ), true ) )
 _M_num_put = & use_facet < __num_put_type > ( __loc );
      else
 _M_num_put = 0;

      if ( __builtin_expect ( has_facet < __num_get_type > ( __loc ), true ) )
 _M_num_get = & use_facet < __num_get_type > ( __loc );
      else
 _M_num_get = 0;
    }
# 178 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
extern template class basic_ios< char, char_traits< char> > ;
# 181 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
extern template class basic_ios< wchar_t, char_traits< wchar_t> > ;
# 185 "/usr/include/c++/4.4/bits/basic_ios.tcc" 3
}
# 43 "/usr/include/c++/4.4/ostream" 3
namespace std __attribute((__visibility__("default"))) {
# 54 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    class basic_ostream : virtual public basic_ios < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;


      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef basic_ios < _CharT, _Traits > __ios_type;
      typedef basic_ostream < _CharT, _Traits > __ostream_type;
      typedef num_put < _CharT, ostreambuf_iterator < _CharT, _Traits > >
             __num_put_type;
      typedef ctype < _CharT > __ctype_type;

      explicit
      basic_ostream ( __streambuf_type * __sb )
      { this -> init ( __sb ); }






      virtual
      ~ basic_ostream ( ) { }


      class sentry;
      friend class sentry;

      __ostream_type &
      operator << ( __ostream_type & ( * __pf ) ( __ostream_type & ) )
      {



 return __pf ( * this );
      }

      __ostream_type &
      operator << ( __ios_type & ( * __pf ) ( __ios_type & ) )
      {



 __pf ( * this );
 return * this;
      }

      __ostream_type &
      operator << ( ios_base & ( * __pf ) ( ios_base & ) )
      {



 __pf ( * this );
 return * this;
      }

      __ostream_type &
      operator << ( long __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( unsigned long __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( bool __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( short __n );

      __ostream_type &
      operator << ( unsigned short __n )
      {


 return _M_insert ( static_cast < unsigned long > ( __n ) );
      }

      __ostream_type &
      operator << ( int __n );

      __ostream_type &
      operator << ( unsigned int __n )
      {


 return _M_insert ( static_cast < unsigned long > ( __n ) );
      }


      __ostream_type &
      operator << ( long long __n )
      { return _M_insert ( __n ); }

      __ostream_type &
      operator << ( unsigned long long __n )
      { return _M_insert ( __n ); }


      __ostream_type &
      operator << ( double __f )
      { return _M_insert ( __f ); }

      __ostream_type &
      operator << ( float __f )
      {


 return _M_insert ( static_cast < double > ( __f ) );
      }

      __ostream_type &
      operator << ( long double __f )
      { return _M_insert ( __f ); }

      __ostream_type &
      operator << ( const void * __p )
      { return _M_insert ( __p ); }

      __ostream_type &
      operator << ( __streambuf_type * __sb );

      __ostream_type &
      put ( char_type __c );


      void
      _M_write ( const char_type * __s, streamsize __n )
      {
 const streamsize __put = this -> rdbuf ( ) -> sputn ( __s, __n );
 if ( __put != __n )
   this -> setstate ( ios_base :: badbit );
      }

      __ostream_type &
      write ( const char_type * __s, streamsize __n );

      __ostream_type &
      flush ( );

      pos_type
      tellp ( );

      __ostream_type &
      seekp ( pos_type );

       __ostream_type &
      seekp ( off_type, ios_base :: seekdir );

    protected :
      basic_ostream ( )
      { this -> init ( 0 ); }

      template < typename _ValueT >
        __ostream_type &
        _M_insert ( _ValueT __v );
    };
# 376 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    class basic_ostream < _CharT, _Traits > :: sentry
    {

      bool _M_ok;
      basic_ostream < _CharT, _Traits > & _M_os;

    public :

      explicit
      sentry ( basic_ostream < _CharT, _Traits > & __os );

      ~ sentry ( )
      {

 if ( bool ( _M_os . flags ( ) & ios_base :: unitbuf ) && ! uncaught_exception ( ) )
   {

     if ( _M_os . rdbuf ( ) && _M_os . rdbuf ( ) -> pubsync ( ) == - 1 )
       _M_os . setstate ( ios_base :: badbit );
   }
      }

      operator bool ( ) const
      { return _M_ok; }
    };
# 444 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, _CharT __c )
    { return __ostream_insert ( __out, & __c, 1 ); }
# 449 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, char __c )
    { return ( __out << __out . widen ( __c ) ); }
# 455 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, char __c )
    { return __ostream_insert ( __out, & __c, 1 ); }
# 461 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, signed char __c )
    { return ( __out << static_cast < char > ( __c ) ); }
# 466 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, unsigned char __c )
    { return ( __out << static_cast < char > ( __c ) ); }
# 486 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, const _CharT * __s )
    {
      if ( ! __s )
 __out . setstate ( ios_base :: badbit );
      else
 __ostream_insert ( __out, __s,
    static_cast < streamsize > ( _Traits :: length ( __s ) ) );
      return __out;
    }
# 498 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, const char * __s );
# 503 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, const char * __s )
    {
      if ( ! __s )
 __out . setstate ( ios_base :: badbit );
      else
 __ostream_insert ( __out, __s,
    static_cast < streamsize > ( _Traits :: length ( __s ) ) );
      return __out;
    }
# 516 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, const signed char * __s )
    { return ( __out << reinterpret_cast < const char * > ( __s ) ); }
# 521 "/usr/include/c++/4.4/ostream" 3
template < class _Traits >
    inline basic_ostream < char, _Traits > &
    operator << ( basic_ostream < char, _Traits > & __out, const unsigned char * __s )
    { return ( __out << reinterpret_cast < const char * > ( __s ) ); }
# 536 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    endl ( basic_ostream < _CharT, _Traits > & __os )
    { return flush ( __os . put ( __os . widen ( '\n' ) ) ); }
# 547 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    ends ( basic_ostream < _CharT, _Traits > & __os )
    { return __os . put ( _CharT ( ) ); }
# 557 "/usr/include/c++/4.4/ostream" 3
template < typename _CharT, typename _Traits >
    inline basic_ostream < _CharT, _Traits > &
    flush ( basic_ostream < _CharT, _Traits > & __os )
    { return __os . flush ( ); }
# 562 "/usr/include/c++/4.4/ostream" 3
}
# 43 "/usr/include/c++/4.4/bits/ostream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > :: sentry ::
    sentry ( basic_ostream < _CharT, _Traits > & __os )
    : _M_ok ( false ), _M_os ( __os )
    {

      if ( __os . tie ( ) && __os . good ( ) )
 __os . tie ( ) -> flush ( );

      if ( __os . good ( ) )
 _M_ok = true;
      else
 __os . setstate ( ios_base :: failbit );
    }
# 60 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    template < typename _ValueT >
      basic_ostream < _CharT, _Traits > &
      basic_ostream < _CharT, _Traits > ::
      _M_insert ( _ValueT __v )
      {
 sentry __cerb ( * this );
 if ( __cerb )
   {
     ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
     try
       {
  const __num_put_type & __np = __check_facet ( this -> _M_num_put );
  if ( __np . put ( * this, * this, this -> fill ( ), __v ) . failed ( ) )
    __err |= ios_base :: badbit;
       }
     catch ( __cxxabiv1 :: __forced_unwind & )
       {
  this -> _M_setstate ( ios_base :: badbit );
  throw;
       }
     catch ( ... )
       { this -> _M_setstate ( ios_base :: badbit ); }
     if ( __err )
       this -> setstate ( __err );
   }
 return * this;
      }
# 89 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    operator << ( short __n )
    {


      const ios_base :: fmtflags __fmt = this -> flags ( ) & ios_base :: basefield;
      if ( __fmt == ios_base :: oct || __fmt == ios_base :: hex )
 return _M_insert ( static_cast < long > ( static_cast < unsigned short > ( __n ) ) );
      else
 return _M_insert ( static_cast < long > ( __n ) );
    }
# 103 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    operator << ( int __n )
    {


      const ios_base :: fmtflags __fmt = this -> flags ( ) & ios_base :: basefield;
      if ( __fmt == ios_base :: oct || __fmt == ios_base :: hex )
 return _M_insert ( static_cast < long > ( static_cast < unsigned int > ( __n ) ) );
      else
 return _M_insert ( static_cast < long > ( __n ) );
    }
# 117 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    operator << ( __streambuf_type * __sbin )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this );
      if ( __cerb && __sbin )
 {
   try
     {
       if ( ! __copy_streambufs ( __sbin, this -> rdbuf ( ) ) )
  __err |= ios_base :: failbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: failbit ); }
 }
      else if ( ! __sbin )
 __err |= ios_base :: badbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 146 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    put ( char_type __c )
    {






      sentry __cerb ( * this );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __put = this -> rdbuf ( ) -> sputc ( __c );
       if ( traits_type :: eq_int_type ( __put, traits_type :: eof ( ) ) )
  __err |= ios_base :: badbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 180 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    write ( const _CharT * __s, streamsize __n )
    {







      sentry __cerb ( * this );
      if ( __cerb )
 {
   try
     { _M_write ( __s, __n ); }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      return * this;
    }
# 208 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    flush ( )
    {



      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( this -> rdbuf ( ) && this -> rdbuf ( ) -> pubsync ( ) == - 1 )
     __err |= ios_base :: badbit;
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 234 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_ostream < _CharT, _Traits > :: pos_type
    basic_ostream < _CharT, _Traits > ::
    tellp ( )
    {
      pos_type __ret = pos_type ( - 1 );
      try
 {
   if ( ! this -> fail ( ) )
     __ret = this -> rdbuf ( ) -> pubseekoff ( 0, ios_base :: cur, ios_base :: out );
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      return __ret;
    }
# 255 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    seekp ( pos_type __pos )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {


       const pos_type __p = this -> rdbuf ( ) -> pubseekpos ( __pos,
            ios_base :: out );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 287 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    basic_ostream < _CharT, _Traits > ::
    seekp ( off_type __off, ios_base :: seekdir __dir )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {


       const pos_type __p = this -> rdbuf ( ) -> pubseekoff ( __off, __dir,
            ios_base :: out );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 319 "/usr/include/c++/4.4/bits/ostream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_ostream < _CharT, _Traits > &
    operator << ( basic_ostream < _CharT, _Traits > & __out, const char * __s )
    {
      if ( ! __s )
 __out . setstate ( ios_base :: badbit );
      else
 {


   const size_t __clen = char_traits < char > :: length ( __s );
   try
     {
       struct __ptr_guard
       {
  _CharT * __p;
  __ptr_guard ( _CharT * __ip ) : __p ( __ip ) { }
  ~ __ptr_guard ( ) { delete [ ] __p; }
  _CharT * __get ( ) { return __p; }
       } __pg ( new _CharT [ __clen ] );

       _CharT * __ws = __pg . __get ( );
       for ( size_t __i = 0; __i < __clen; ++ __i )
  __ws [ __i ] = __out . widen ( __s [ __i ] );
       __ostream_insert ( __out, __ws, __clen );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __out . _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __out . _M_setstate ( ios_base :: badbit ); }
 }
      return __out;
    }
# 360 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template class basic_ostream< char, char_traits< char> > ;
# 361 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &endl(basic_ostream< char, char_traits< char> > & );
# 362 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &ends(basic_ostream< char, char_traits< char> > & );
# 363 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &flush(basic_ostream< char, char_traits< char> > & );
# 364 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , char );
# 365 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , unsigned char );
# 366 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , signed char );
# 367 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const char * );
# 368 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const unsigned char * );
# 369 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & , const signed char * );
# 371 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long );
# 372 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(unsigned long );
# 373 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(bool );
# 375 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long long );
# 376 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(unsigned long long );
# 378 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(double );
# 379 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long double );
# 380 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(const void * );
# 383 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template class basic_ostream< wchar_t, char_traits< wchar_t> > ;
# 384 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &endl(basic_ostream< wchar_t, char_traits< wchar_t> > & );
# 385 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &ends(basic_ostream< wchar_t, char_traits< wchar_t> > & );
# 386 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &flush(basic_ostream< wchar_t, char_traits< wchar_t> > & );
# 387 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , wchar_t );
# 388 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , char );
# 389 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , const wchar_t * );
# 390 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & , const char * );
# 392 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long );
# 393 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(unsigned long );
# 394 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(bool );
# 396 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long long );
# 397 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(unsigned long long );
# 399 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(double );
# 400 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long double );
# 401 "/usr/include/c++/4.4/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(const void * );
# 405 "/usr/include/c++/4.4/bits/ostream.tcc" 3
}
# 43 "/usr/include/c++/4.4/istream" 3
namespace std __attribute((__visibility__("default"))) {
# 54 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    class basic_istream : virtual public basic_ios < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;


      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef basic_ios < _CharT, _Traits > __ios_type;
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef num_get < _CharT, istreambuf_iterator < _CharT, _Traits > >
        __num_get_type;
      typedef ctype < _CharT > __ctype_type;

    protected :





      streamsize _M_gcount;

    public :

      explicit
      basic_istream ( __streambuf_type * __sb )
      : _M_gcount ( streamsize ( 0 ) )
      { this -> init ( __sb ); }






      virtual
      ~ basic_istream ( )
      { _M_gcount = streamsize ( 0 ); }


      class sentry;
      friend class sentry;

      __istream_type &
      operator >> ( __istream_type & ( * __pf ) ( __istream_type & ) )
      { return __pf ( * this ); }

      __istream_type &
      operator >> ( __ios_type & ( * __pf ) ( __ios_type & ) )
      {
 __pf ( * this );
 return * this;
      }

      __istream_type &
      operator >> ( ios_base & ( * __pf ) ( ios_base & ) )
      {
 __pf ( * this );
 return * this;
      }

      __istream_type &
      operator >> ( bool & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( short & __n );

      __istream_type &
      operator >> ( unsigned short & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( int & __n );

      __istream_type &
      operator >> ( unsigned int & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( long & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( unsigned long & __n )
      { return _M_extract ( __n ); }


      __istream_type &
      operator >> ( long long & __n )
      { return _M_extract ( __n ); }

      __istream_type &
      operator >> ( unsigned long long & __n )
      { return _M_extract ( __n ); }


      __istream_type &
      operator >> ( float & __f )
      { return _M_extract ( __f ); }

      __istream_type &
      operator >> ( double & __f )
      { return _M_extract ( __f ); }

      __istream_type &
      operator >> ( long double & __f )
      { return _M_extract ( __f ); }

      __istream_type &
      operator >> ( void * & __p )
      { return _M_extract ( __p ); }

      __istream_type &
      operator >> ( __streambuf_type * __sb );

      streamsize
      gcount ( ) const
      { return _M_gcount; }

      int_type
      get ( );

      __istream_type &
      get ( char_type & __c );

      __istream_type &
      get ( char_type * __s, streamsize __n, char_type __delim );

      __istream_type &
      get ( char_type * __s, streamsize __n )
      { return this -> get ( __s, __n, this -> widen ( '\n' ) ); }

      __istream_type &
      get ( __streambuf_type & __sb, char_type __delim );

      __istream_type &
      get ( __streambuf_type & __sb )
      { return this -> get ( __sb, this -> widen ( '\n' ) ); }

      __istream_type &
      getline ( char_type * __s, streamsize __n, char_type __delim );

      __istream_type &
      getline ( char_type * __s, streamsize __n )
      { return this -> getline ( __s, __n, this -> widen ( '\n' ) ); }

      __istream_type &
      ignore ( );

      __istream_type &
      ignore ( streamsize __n );

      __istream_type &
      ignore ( streamsize __n, int_type __delim );

      int_type
      peek ( );

      __istream_type &
      read ( char_type * __s, streamsize __n );

      streamsize
      readsome ( char_type * __s, streamsize __n );

      __istream_type &
      putback ( char_type __c );

      __istream_type &
      unget ( );

      int
      sync ( );

      pos_type
      tellg ( );

      __istream_type &
      seekg ( pos_type );

      __istream_type &
      seekg ( off_type, ios_base :: seekdir );


    protected :
      basic_istream ( )
      : _M_gcount ( streamsize ( 0 ) )
      { this -> init ( 0 ); }

      template < typename _ValueT >
        __istream_type &
        _M_extract ( _ValueT & __v );
    };
# 594 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::getline(char_type * , streamsize , char_type );
# 599 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::ignore(streamsize );
# 604 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::ignore(streamsize , int_type );
# 610 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::getline(char_type * , streamsize , char_type );
# 615 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::ignore(streamsize );
# 620 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::ignore(streamsize , int_type );
# 631 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    class basic_istream < _CharT, _Traits > :: sentry
    {
    public :

      typedef _Traits traits_type;
      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef typename __istream_type :: __ctype_type __ctype_type;
      typedef typename _Traits :: int_type __int_type;

      explicit
      sentry ( basic_istream < _CharT, _Traits > & __is, bool __noskipws = false );

      operator bool ( ) const
      { return _M_ok; }

    private :
      bool _M_ok;
    };
# 693 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in, _CharT & __c );
# 697 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, unsigned char & __c )
    { return ( __in >> reinterpret_cast < char & > ( __c ) ); }
# 702 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, signed char & __c )
    { return ( __in >> reinterpret_cast < char & > ( __c ) ); }
# 734 "/usr/include/c++/4.4/istream" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &operator>>(basic_istream< _CharT, _Traits> & , _CharT * );
# 741 "/usr/include/c++/4.4/istream" 3
template<> basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , char * );
# 743 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, unsigned char * __s )
    { return ( __in >> reinterpret_cast < char * > ( __s ) ); }
# 748 "/usr/include/c++/4.4/istream" 3
template < class _Traits >
    inline basic_istream < char, _Traits > &
    operator >> ( basic_istream < char, _Traits > & __in, signed char * __s )
    { return ( __in >> reinterpret_cast < char * > ( __s ) ); }
# 762 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    class basic_iostream
    : public basic_istream < _CharT, _Traits >,
      public basic_ostream < _CharT, _Traits >
    {
    public :



      typedef _CharT char_type;
      typedef typename _Traits :: int_type int_type;
      typedef typename _Traits :: pos_type pos_type;
      typedef typename _Traits :: off_type off_type;
      typedef _Traits traits_type;


      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_ostream < _CharT, _Traits > __ostream_type;







      explicit
      basic_iostream ( basic_streambuf < _CharT, _Traits > * __sb )
      : __istream_type ( __sb ), __ostream_type ( __sb ) { }




      virtual
      ~ basic_iostream ( ) { }

    protected :
      basic_iostream ( )
      : __istream_type ( ), __ostream_type ( ) { }
    };
# 823 "/usr/include/c++/4.4/istream" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    ws ( basic_istream < _CharT, _Traits > & __is );
# 827 "/usr/include/c++/4.4/istream" 3
}
# 43 "/usr/include/c++/4.4/bits/istream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > :: sentry ::
    sentry ( basic_istream < _CharT, _Traits > & __in, bool __noskip ) : _M_ok ( false )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      if ( __in . good ( ) )
 {
   if ( __in . tie ( ) )
     __in . tie ( ) -> flush ( );
   if ( ! __noskip && bool ( __in . flags ( ) & ios_base :: skipws ) )
     {
       const __int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = __in . rdbuf ( );
       __int_type __c = __sb -> sgetc ( );

       const __ctype_type & __ct = __check_facet ( __in . _M_ctype );
       while ( ! traits_type :: eq_int_type ( __c, __eof )
       && __ct . is ( ctype_base :: space,
    traits_type :: to_char_type ( __c ) ) )
  __c = __sb -> snextc ( );




       if ( traits_type :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;
     }
 }

      if ( __in . good ( ) && __err == ios_base :: goodbit )
 _M_ok = true;
      else
 {
   __err |= ios_base :: failbit;
   __in . setstate ( __err );
 }
    }
# 83 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    template < typename _ValueT >
      basic_istream < _CharT, _Traits > &
      basic_istream < _CharT, _Traits > ::
      _M_extract ( _ValueT & __v )
      {
 sentry __cerb ( * this, false );
 if ( __cerb )
   {
     ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
     try
       {
  const __num_get_type & __ng = __check_facet ( this -> _M_num_get );
  __ng . get ( * this, 0, * this, __err, __v );
       }
     catch ( __cxxabiv1 :: __forced_unwind & )
       {
  this -> _M_setstate ( ios_base :: badbit );
  throw;
       }
     catch ( ... )
       { this -> _M_setstate ( ios_base :: badbit ); }
     if ( __err )
       this -> setstate ( __err );
   }
 return * this;
      }
# 111 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    operator >> ( short & __n )
    {


      long __l;
      _M_extract ( __l );
      if ( ! this -> fail ( ) )
 {
   if ( __gnu_cxx :: __numeric_traits < short > :: __min <= __l
       && __l <= __gnu_cxx :: __numeric_traits < short > :: __max )
     __n = short ( __l );
   else
     this -> setstate ( ios_base :: failbit );
 }
      return * this;
    }
# 131 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    operator >> ( int & __n )
    {


      long __l;
      _M_extract ( __l );
      if ( ! this -> fail ( ) )
 {
   if ( __gnu_cxx :: __numeric_traits < int > :: __min <= __l
       && __l <= __gnu_cxx :: __numeric_traits < int > :: __max )
     __n = int ( __l );
   else
     this -> setstate ( ios_base :: failbit );
 }
      return * this;
    }
# 151 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    operator >> ( __streambuf_type * __sbout )
    {
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, false );
      if ( __cerb && __sbout )
 {
   try
     {
       bool __ineof;
       if ( ! __copy_streambufs_eof ( this -> rdbuf ( ), __sbout, __ineof ) )
  __err |= ios_base :: failbit;
       if ( __ineof )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: failbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: failbit ); }
 }
      else if ( ! __sbout )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 183 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_istream < _CharT, _Traits > :: int_type
    basic_istream < _CharT, _Traits > ::
    get ( void )
    {
      const int_type __eof = traits_type :: eof ( );
      int_type __c = __eof;
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       __c = this -> rdbuf ( ) -> sbumpc ( );

       if ( ! traits_type :: eq_int_type ( __c, __eof ) )
  _M_gcount = 1;
       else
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return __c;
    }
# 219 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    get ( char_type & __c )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       const int_type __cb = this -> rdbuf ( ) -> sbumpc ( );

       if ( ! traits_type :: eq_int_type ( __cb, traits_type :: eof ( ) ) )
  {
    _M_gcount = 1;
    __c = traits_type :: to_char_type ( __cb );
  }
       else
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 256 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    get ( char_type * __s, streamsize __n, char_type __delim )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       const int_type __idelim = traits_type :: to_int_type ( __delim );
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );
       int_type __c = __sb -> sgetc ( );

       while ( _M_gcount + 1 < __n
       && ! traits_type :: eq_int_type ( __c, __eof )
       && ! traits_type :: eq_int_type ( __c, __idelim ) )
  {
    * __s ++ = traits_type :: to_char_type ( __c );
    ++ _M_gcount;
    __c = __sb -> snextc ( );
  }
       if ( traits_type :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }


      if ( __n > 0 )
 * __s = char_type ( );
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 303 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    get ( __streambuf_type & __sb, char_type __delim )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   try
     {
       const int_type __idelim = traits_type :: to_int_type ( __delim );
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __this_sb = this -> rdbuf ( );
       int_type __c = __this_sb -> sgetc ( );
       char_type __c2 = traits_type :: to_char_type ( __c );

       while ( ! traits_type :: eq_int_type ( __c, __eof )
       && ! traits_type :: eq_int_type ( __c, __idelim )
       && ! traits_type :: eq_int_type ( __sb . sputc ( __c2 ), __eof ) )
  {
    ++ _M_gcount;
    __c = __this_sb -> snextc ( );
    __c2 = traits_type :: to_char_type ( __c );
  }
       if ( traits_type :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! _M_gcount )
 __err |= ios_base :: failbit;
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 347 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    getline ( char_type * __s, streamsize __n, char_type __delim )
    {
      _M_gcount = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      sentry __cerb ( * this, true );
      if ( __cerb )
        {
          try
            {
              const int_type __idelim = traits_type :: to_int_type ( __delim );
              const int_type __eof = traits_type :: eof ( );
              __streambuf_type * __sb = this -> rdbuf ( );
              int_type __c = __sb -> sgetc ( );

              while ( _M_gcount + 1 < __n
                     && ! traits_type :: eq_int_type ( __c, __eof )
                     && ! traits_type :: eq_int_type ( __c, __idelim ) )
                {
                  * __s ++ = traits_type :: to_char_type ( __c );
                  __c = __sb -> snextc ( );
                  ++ _M_gcount;
                }
              if ( traits_type :: eq_int_type ( __c, __eof ) )
                __err |= ios_base :: eofbit;
              else
                {
                  if ( traits_type :: eq_int_type ( __c, __idelim ) )
                    {
                      __sb -> sbumpc ( );
                      ++ _M_gcount;
                    }
                  else
                    __err |= ios_base :: failbit;
                }
            }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
          catch ( ... )
            { this -> _M_setstate ( ios_base :: badbit ); }
        }


      if ( __n > 0 )
 * __s = char_type ( );
      if ( ! _M_gcount )
        __err |= ios_base :: failbit;
      if ( __err )
        this -> setstate ( __err );
      return * this;
    }
# 407 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    ignore ( void )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );

       if ( traits_type :: eq_int_type ( __sb -> sbumpc ( ), __eof ) )
  __err |= ios_base :: eofbit;
       else
  _M_gcount = 1;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 440 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    ignore ( streamsize __n )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb && __n > 0 )
        {
          ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
          try
            {
              const int_type __eof = traits_type :: eof ( );
              __streambuf_type * __sb = this -> rdbuf ( );
              int_type __c = __sb -> sgetc ( );

       bool __large_ignore = false;
       while ( true )
  {
    while ( _M_gcount < __n
    && ! traits_type :: eq_int_type ( __c, __eof ) )
      {
        ++ _M_gcount;
        __c = __sb -> snextc ( );
      }
    if ( __n == __gnu_cxx :: __numeric_traits < streamsize > :: __max
        && ! traits_type :: eq_int_type ( __c, __eof ) )
      {
        _M_gcount =
   __gnu_cxx :: __numeric_traits < streamsize > :: __min;
        __large_ignore = true;
      }
    else
      break;
  }

       if ( __large_ignore )
  _M_gcount = __gnu_cxx :: __numeric_traits < streamsize > :: __max;

       if ( traits_type :: eq_int_type ( __c, __eof ) )
                __err |= ios_base :: eofbit;
            }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
          catch ( ... )
            { this -> _M_setstate ( ios_base :: badbit ); }
          if ( __err )
            this -> setstate ( __err );
        }
      return * this;
    }
# 502 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    ignore ( streamsize __n, int_type __delim )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb && __n > 0 )
        {
          ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
          try
            {
              const int_type __eof = traits_type :: eof ( );
              __streambuf_type * __sb = this -> rdbuf ( );
              int_type __c = __sb -> sgetc ( );


       bool __large_ignore = false;
       while ( true )
  {
    while ( _M_gcount < __n
    && ! traits_type :: eq_int_type ( __c, __eof )
    && ! traits_type :: eq_int_type ( __c, __delim ) )
      {
        ++ _M_gcount;
        __c = __sb -> snextc ( );
      }
    if ( __n == __gnu_cxx :: __numeric_traits < streamsize > :: __max
        && ! traits_type :: eq_int_type ( __c, __eof )
        && ! traits_type :: eq_int_type ( __c, __delim ) )
      {
        _M_gcount =
   __gnu_cxx :: __numeric_traits < streamsize > :: __min;
        __large_ignore = true;
      }
    else
      break;
  }

       if ( __large_ignore )
  _M_gcount = __gnu_cxx :: __numeric_traits < streamsize > :: __max;

              if ( traits_type :: eq_int_type ( __c, __eof ) )
                __err |= ios_base :: eofbit;
       else if ( traits_type :: eq_int_type ( __c, __delim ) )
  {
    if ( _M_gcount
        < __gnu_cxx :: __numeric_traits < streamsize > :: __max )
      ++ _M_gcount;
    __sb -> sbumpc ( );
  }
            }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
          catch ( ... )
            { this -> _M_setstate ( ios_base :: badbit ); }
          if ( __err )
            this -> setstate ( __err );
        }
      return * this;
    }
# 567 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_istream < _CharT, _Traits > :: int_type
    basic_istream < _CharT, _Traits > ::
    peek ( void )
    {
      int_type __c = traits_type :: eof ( );
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       __c = this -> rdbuf ( ) -> sgetc ( );
       if ( traits_type :: eq_int_type ( __c, traits_type :: eof ( ) ) )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return __c;
    }
# 597 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    read ( char_type * __s, streamsize __n )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       _M_gcount = this -> rdbuf ( ) -> sgetn ( __s, __n );
       if ( _M_gcount != __n )
  __err |= ( ios_base :: eofbit | ios_base :: failbit );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 626 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_istream < _CharT, _Traits > ::
    readsome ( char_type * __s, streamsize __n )
    {
      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {

       const streamsize __num = this -> rdbuf ( ) -> in_avail ( );
       if ( __num > 0 )
  _M_gcount = this -> rdbuf ( ) -> sgetn ( __s, std :: min ( __num, __n ) );
       else if ( __num == - 1 )
  __err |= ios_base :: eofbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return _M_gcount;
    }
# 658 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    putback ( char_type __c )
    {


      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );
       if ( ! __sb
    || traits_type :: eq_int_type ( __sb -> sputbackc ( __c ), __eof ) )
  __err |= ios_base :: badbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 691 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    unget ( void )
    {


      _M_gcount = 0;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const int_type __eof = traits_type :: eof ( );
       __streambuf_type * __sb = this -> rdbuf ( );
       if ( ! __sb
    || traits_type :: eq_int_type ( __sb -> sungetc ( ), __eof ) )
  __err |= ios_base :: badbit;
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return * this;
    }
# 724 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    int
    basic_istream < _CharT, _Traits > ::
    sync ( void )
    {


      int __ret = - 1;
      sentry __cerb ( * this, true );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       __streambuf_type * __sb = this -> rdbuf ( );
       if ( __sb )
  {
    if ( __sb -> pubsync ( ) == - 1 )
      __err |= ios_base :: badbit;
    else
      __ret = 0;
  }
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       this -> _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { this -> _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     this -> setstate ( __err );
 }
      return __ret;
    }
# 760 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_istream < _CharT, _Traits > :: pos_type
    basic_istream < _CharT, _Traits > ::
    tellg ( void )
    {


      pos_type __ret = pos_type ( - 1 );
      try
 {
   if ( ! this -> fail ( ) )
     __ret = this -> rdbuf ( ) -> pubseekoff ( 0, ios_base :: cur,
           ios_base :: in );
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      return __ret;
    }
# 784 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    seekg ( pos_type __pos )
    {


      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {

       const pos_type __p = this -> rdbuf ( ) -> pubseekpos ( __pos,
            ios_base :: in );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 817 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    basic_istream < _CharT, _Traits > ::
    seekg ( off_type __off, ios_base :: seekdir __dir )
    {


      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      try
 {
   if ( ! this -> fail ( ) )
     {

       const pos_type __p = this -> rdbuf ( ) -> pubseekoff ( __off, __dir,
            ios_base :: in );


       if ( __p == pos_type ( off_type ( - 1 ) ) )
  __err |= ios_base :: failbit;
     }
 }
      catch ( __cxxabiv1 :: __forced_unwind & )
 {
   this -> _M_setstate ( ios_base :: badbit );
   throw;
 }
      catch ( ... )
 { this -> _M_setstate ( ios_base :: badbit ); }
      if ( __err )
 this -> setstate ( __err );
      return * this;
    }
# 851 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in, _CharT & __c )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef typename __istream_type :: int_type __int_type;

      typename __istream_type :: sentry __cerb ( __in, false );
      if ( __cerb )
 {
   ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
   try
     {
       const __int_type __cb = __in . rdbuf ( ) -> sbumpc ( );
       if ( ! _Traits :: eq_int_type ( __cb, _Traits :: eof ( ) ) )
  __c = _Traits :: to_char_type ( __cb );
       else
  __err |= ( ios_base :: eofbit | ios_base :: failbit );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __in . _M_setstate ( ios_base :: badbit ); }
   if ( __err )
     __in . setstate ( __err );
 }
      return __in;
    }
# 883 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    operator >> ( basic_istream < _CharT, _Traits > & __in, _CharT * __s )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef typename _Traits :: int_type int_type;
      typedef _CharT char_type;
      typedef ctype < _CharT > __ctype_type;

      streamsize __extracted = 0;
      ios_base :: iostate __err = ios_base :: iostate ( ios_base :: goodbit );
      typename __istream_type :: sentry __cerb ( __in, false );
      if ( __cerb )
 {
   try
     {

       streamsize __num = __in . width ( );
       if ( __num <= 0 )
  __num = __gnu_cxx :: __numeric_traits < streamsize > :: __max;

       const __ctype_type & __ct = use_facet < __ctype_type > ( __in . getloc ( ) );

       const int_type __eof = _Traits :: eof ( );
       __streambuf_type * __sb = __in . rdbuf ( );
       int_type __c = __sb -> sgetc ( );

       while ( __extracted < __num - 1
       && ! _Traits :: eq_int_type ( __c, __eof )
       && ! __ct . is ( ctype_base :: space,
     _Traits :: to_char_type ( __c ) ) )
  {
    * __s ++ = _Traits :: to_char_type ( __c );
    ++ __extracted;
    __c = __sb -> snextc ( );
  }
       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __err |= ios_base :: eofbit;



       * __s = char_type ( );
       __in . width ( 0 );
     }
   catch ( __cxxabiv1 :: __forced_unwind & )
     {
       __in . _M_setstate ( ios_base :: badbit );
       throw;
     }
   catch ( ... )
     { __in . _M_setstate ( ios_base :: badbit ); }
 }
      if ( ! __extracted )
 __err |= ios_base :: failbit;
      if ( __err )
 __in . setstate ( __err );
      return __in;
    }
# 944 "/usr/include/c++/4.4/bits/istream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_istream < _CharT, _Traits > &
    ws ( basic_istream < _CharT, _Traits > & __in )
    {
      typedef basic_istream < _CharT, _Traits > __istream_type;
      typedef basic_streambuf < _CharT, _Traits > __streambuf_type;
      typedef typename __istream_type :: int_type __int_type;
      typedef ctype < _CharT > __ctype_type;

      const __ctype_type & __ct = use_facet < __ctype_type > ( __in . getloc ( ) );
      const __int_type __eof = _Traits :: eof ( );
      __streambuf_type * __sb = __in . rdbuf ( );
      __int_type __c = __sb -> sgetc ( );

      while ( ! _Traits :: eq_int_type ( __c, __eof )
      && __ct . is ( ctype_base :: space, _Traits :: to_char_type ( __c ) ) )
 __c = __sb -> snextc ( );

       if ( _Traits :: eq_int_type ( __c, __eof ) )
  __in . setstate ( ios_base :: eofbit );
      return __in;
    }
# 971 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_istream< char, char_traits< char> > ;
# 972 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &ws(basic_istream< char, char_traits< char> > & );
# 973 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , char & );
# 974 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > &, char *);
# 975 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , unsigned char & );
# 976 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , signed char & );
# 977 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , unsigned char * );
# 978 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & , signed char * );
# 980 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned short & );
# 981 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned & );
# 982 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long & );
# 983 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned long & );
# 984 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(bool & );
# 986 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long long & );
# 987 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned long long & );
# 989 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(float & );
# 990 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(double & );
# 991 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long double & );
# 992 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(void *& );
# 994 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_iostream< char, char_traits< char> > ;
# 997 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_istream< wchar_t, char_traits< wchar_t> > ;
# 998 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &ws(basic_istream< wchar_t, char_traits< wchar_t> > & );
# 999 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > & , wchar_t & );
# 1000 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > &, wchar_t *);
# 1002 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned short & );
# 1003 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned & );
# 1004 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long & );
# 1005 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned long & );
# 1006 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(bool & );
# 1008 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long long & );
# 1009 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned long long & );
# 1011 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(float & );
# 1012 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(double & );
# 1013 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long double & );
# 1014 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(void *& );
# 1016 "/usr/include/c++/4.4/bits/istream.tcc" 3
extern template class basic_iostream< wchar_t, char_traits< wchar_t> > ;
# 1020 "/usr/include/c++/4.4/bits/istream.tcc" 3
}
# 43 "/usr/include/c++/4.4/iostream" 3
namespace std __attribute((__visibility__("default"))) {
# 58 "/usr/include/c++/4.4/iostream" 3
extern istream cin;
# 59 "/usr/include/c++/4.4/iostream" 3
extern ostream cout;
# 60 "/usr/include/c++/4.4/iostream" 3
extern ostream cerr;
# 61 "/usr/include/c++/4.4/iostream" 3
extern ostream clog;
# 64 "/usr/include/c++/4.4/iostream" 3
extern wistream wcin;
# 65 "/usr/include/c++/4.4/iostream" 3
extern wostream wcout;
# 66 "/usr/include/c++/4.4/iostream" 3
extern wostream wcerr;
# 67 "/usr/include/c++/4.4/iostream" 3
extern wostream wclog;
# 72 "/usr/include/c++/4.4/iostream" 3
static ios_base::Init __ioinit;
# 74 "/usr/include/c++/4.4/iostream" 3
}
# 42 "/usr/include/c++/4.4/bits/codecvt.h" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/bits/codecvt.h" 3
class codecvt_base {
# 48 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: enum result {
# 50 "/usr/include/c++/4.4/bits/codecvt.h" 3
ok,
# 51 "/usr/include/c++/4.4/bits/codecvt.h" 3
partial,
# 52 "/usr/include/c++/4.4/bits/codecvt.h" 3
error,
# 53 "/usr/include/c++/4.4/bits/codecvt.h" 3
noconv
# 54 "/usr/include/c++/4.4/bits/codecvt.h" 3
};
# 55 "/usr/include/c++/4.4/bits/codecvt.h" 3
};
# 66 "/usr/include/c++/4.4/bits/codecvt.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class __codecvt_abstract_base
    : public locale :: facet, public codecvt_base
    {
    public :

      typedef codecvt_base :: result result;
      typedef _InternT intern_type;
      typedef _ExternT extern_type;
      typedef _StateT state_type;

      result
      out ( state_type & __state, const intern_type * __from,
   const intern_type * __from_end, const intern_type * & __from_next,
   extern_type * __to, extern_type * __to_end,
   extern_type * & __to_next ) const
      {
 return this -> do_out ( __state, __from, __from_end, __from_next,
       __to, __to_end, __to_next );
      }

      result
      unshift ( state_type & __state, extern_type * __to, extern_type * __to_end,
       extern_type * & __to_next ) const
      { return this -> do_unshift ( __state, __to, __to_end, __to_next ); }

      result
      in ( state_type & __state, const extern_type * __from,
  const extern_type * __from_end, const extern_type * & __from_next,
  intern_type * __to, intern_type * __to_end,
  intern_type * & __to_next ) const
      {
 return this -> do_in ( __state, __from, __from_end, __from_next,
      __to, __to_end, __to_next );
      }

      int
      encoding ( ) const throw ( )
      { return this -> do_encoding ( ); }

      bool
      always_noconv ( ) const throw ( )
      { return this -> do_always_noconv ( ); }

      int
      length ( state_type & __state, const extern_type * __from,
      const extern_type * __end, size_t __max ) const
      { return this -> do_length ( __state, __from, __end, __max ); }

      int
      max_length ( ) const throw ( )
      { return this -> do_max_length ( ); }

    protected :
      explicit
      __codecvt_abstract_base ( size_t __refs = 0 ) : locale :: facet ( __refs ) { }

      virtual
      ~ __codecvt_abstract_base ( ) { }

      virtual result
      do_out ( state_type & __state, const intern_type * __from,
      const intern_type * __from_end, const intern_type * & __from_next,
      extern_type * __to, extern_type * __to_end,
      extern_type * & __to_next ) const = 0;

      virtual result
      do_unshift ( state_type & __state, extern_type * __to,
   extern_type * __to_end, extern_type * & __to_next ) const = 0;

      virtual result
      do_in ( state_type & __state, const extern_type * __from,
     const extern_type * __from_end, const extern_type * & __from_next,
     intern_type * __to, intern_type * __to_end,
     intern_type * & __to_next ) const = 0;

      virtual int
      do_encoding ( ) const throw ( ) = 0;

      virtual bool
      do_always_noconv ( ) const throw ( ) = 0;

      virtual int
      do_length ( state_type &, const extern_type * __from,
  const extern_type * __end, size_t __max ) const = 0;

      virtual int
      do_max_length ( ) const throw ( ) = 0;
    };
# 267 "/usr/include/c++/4.4/bits/codecvt.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class codecvt
    : public __codecvt_abstract_base < _InternT, _ExternT, _StateT >
    {
    public :

      typedef codecvt_base :: result result;
      typedef _InternT intern_type;
      typedef _ExternT extern_type;
      typedef _StateT state_type;

    protected :
      __c_locale _M_c_locale_codecvt;

    public :
      static locale :: id id;

      explicit
      codecvt ( size_t __refs = 0 )
      : __codecvt_abstract_base < _InternT, _ExternT, _StateT > ( __refs ) { }

      explicit
      codecvt ( __c_locale __cloc, size_t __refs = 0 );

    protected :
      virtual
      ~ codecvt ( ) { }

      virtual result
      do_out ( state_type & __state, const intern_type * __from,
      const intern_type * __from_end, const intern_type * & __from_next,
      extern_type * __to, extern_type * __to_end,
      extern_type * & __to_next ) const;

      virtual result
      do_unshift ( state_type & __state, extern_type * __to,
   extern_type * __to_end, extern_type * & __to_next ) const;

      virtual result
      do_in ( state_type & __state, const extern_type * __from,
     const extern_type * __from_end, const extern_type * & __from_next,
     intern_type * __to, intern_type * __to_end,
     intern_type * & __to_next ) const;

      virtual int
      do_encoding ( ) const throw ( );

      virtual bool
      do_always_noconv ( ) const throw ( );

      virtual int
      do_length ( state_type &, const extern_type * __from,
  const extern_type * __end, size_t __max ) const;

      virtual int
      do_max_length ( ) const throw ( );
    };
# 325 "/usr/include/c++/4.4/bits/codecvt.h" 3
template< class _InternT, class _ExternT, class _StateT> locale::id
# 326 "/usr/include/c++/4.4/bits/codecvt.h" 3
codecvt< _InternT, _ExternT, _StateT> ::id;
# 330 "/usr/include/c++/4.4/bits/codecvt.h" 3
template<> class codecvt< char, char, __mbstate_t> : public __codecvt_abstract_base< char, char, __mbstate_t> {
# 335 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: typedef char intern_type;
# 336 "/usr/include/c++/4.4/bits/codecvt.h" 3
typedef char extern_type;
# 337 "/usr/include/c++/4.4/bits/codecvt.h" 3
typedef mbstate_t state_type;
# 340 "/usr/include/c++/4.4/bits/codecvt.h" 3
protected: __c_locale _M_c_locale_codecvt;
# 343 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: static locale::id id;
# 346 "/usr/include/c++/4.4/bits/codecvt.h" 3
explicit codecvt(size_t = (0));
# 349 "/usr/include/c++/4.4/bits/codecvt.h" 3
explicit codecvt(__c_locale , size_t = (0));
# 353 "/usr/include/c++/4.4/bits/codecvt.h" 3
protected: virtual ~codecvt();
# 356 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_out(state_type & , const intern_type * , const intern_type * , const intern_type *& , extern_type * , extern_type * , extern_type *& ) const;
# 362 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_unshift(state_type & , extern_type * , extern_type * , extern_type *& ) const;
# 366 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_in(state_type & , const extern_type * , const extern_type * , const extern_type *& , intern_type * , intern_type * , intern_type *& ) const;
# 372 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_encoding() const throw();
# 375 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual bool do_always_noconv() const throw();
# 378 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_length(state_type &, const extern_type * , const extern_type * , size_t ) const;
# 382 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_max_length() const throw();
# 383 "/usr/include/c++/4.4/bits/codecvt.h" 3
};
# 388 "/usr/include/c++/4.4/bits/codecvt.h" 3
template<> class codecvt< wchar_t, char, __mbstate_t> : public __codecvt_abstract_base< wchar_t, char, __mbstate_t> {
# 393 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: typedef wchar_t intern_type;
# 394 "/usr/include/c++/4.4/bits/codecvt.h" 3
typedef char extern_type;
# 395 "/usr/include/c++/4.4/bits/codecvt.h" 3
typedef mbstate_t state_type;
# 398 "/usr/include/c++/4.4/bits/codecvt.h" 3
protected: __c_locale _M_c_locale_codecvt;
# 401 "/usr/include/c++/4.4/bits/codecvt.h" 3
public: static locale::id id;
# 404 "/usr/include/c++/4.4/bits/codecvt.h" 3
explicit codecvt(size_t = (0));
# 407 "/usr/include/c++/4.4/bits/codecvt.h" 3
explicit codecvt(__c_locale , size_t = (0));
# 411 "/usr/include/c++/4.4/bits/codecvt.h" 3
protected: virtual ~codecvt();
# 414 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_out(state_type & , const intern_type * , const intern_type * , const intern_type *& , extern_type * , extern_type * , extern_type *& ) const;
# 420 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_unshift(state_type & , extern_type * , extern_type * , extern_type *& ) const;
# 425 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual result do_in(state_type & , const extern_type * , const extern_type * , const extern_type *& , intern_type * , intern_type * , intern_type *& ) const;
# 432 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_encoding() const throw();
# 435 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual bool do_always_noconv() const throw();
# 438 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_length(state_type &, const extern_type * , const extern_type * , size_t ) const;
# 442 "/usr/include/c++/4.4/bits/codecvt.h" 3
virtual int do_max_length() const throw();
# 443 "/usr/include/c++/4.4/bits/codecvt.h" 3
};
# 447 "/usr/include/c++/4.4/bits/codecvt.h" 3
template < typename _InternT, typename _ExternT, typename _StateT >
    class codecvt_byname : public codecvt < _InternT, _ExternT, _StateT >
    {
    public :
      explicit
      codecvt_byname ( const char * __s, size_t __refs = 0 )
      : codecvt < _InternT, _ExternT, _StateT > ( __refs )
      {
 if ( __builtin_strcmp ( __s, "C" ) != 0
     && __builtin_strcmp ( __s, "POSIX" ) != 0 )
   {
     this -> _S_destroy_c_locale ( this -> _M_c_locale_codecvt );
     this -> _S_create_c_locale ( this -> _M_c_locale_codecvt, __s );
   }
      }

    protected :
      virtual
      ~ codecvt_byname ( ) { }
    };
# 472 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template class codecvt_byname< char, char, __mbstate_t> ;
# 474 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template const codecvt< char, char, __mbstate_t> &use_facet< codecvt< char, char, __mbstate_t> > (const locale &);
# 478 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template bool has_facet< codecvt< char, char, __mbstate_t> > (const locale &) throw();
# 483 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template class codecvt_byname< wchar_t, char, __mbstate_t> ;
# 485 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template const codecvt< wchar_t, char, __mbstate_t> &use_facet< codecvt< wchar_t, char, __mbstate_t> > (const locale &);
# 489 "/usr/include/c++/4.4/bits/codecvt.h" 3
extern template bool has_facet< codecvt< wchar_t, char, __mbstate_t> > (const locale &) throw();
# 495 "/usr/include/c++/4.4/bits/codecvt.h" 3
}
# 26 "/usr/include/_G_config.h" 3
extern "C" { typedef
# 23 "/usr/include/_G_config.h" 3
struct {
# 24 "/usr/include/_G_config.h" 3
__off_t __pos;
# 25 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 26 "/usr/include/_G_config.h" 3
} _G_fpos_t; }
# 31 "/usr/include/_G_config.h" 3
extern "C" { typedef
# 28 "/usr/include/_G_config.h" 3
struct {
# 29 "/usr/include/_G_config.h" 3
__off64_t __pos;
# 30 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 31 "/usr/include/_G_config.h" 3
} _G_fpos64_t; }
# 53 "/usr/include/_G_config.h" 3
extern "C" { typedef short _G_int16_t __attribute((__mode__(__HI__))); }
# 54 "/usr/include/_G_config.h" 3
extern "C" { typedef int _G_int32_t __attribute((__mode__(__SI__))); }
# 55 "/usr/include/_G_config.h" 3
extern "C" { typedef unsigned short _G_uint16_t __attribute((__mode__(__HI__))); }
# 56 "/usr/include/_G_config.h" 3
extern "C" { typedef unsigned _G_uint32_t __attribute((__mode__(__SI__))); }
# 170 "/usr/include/libio.h" 3
struct _IO_jump_t; struct _IO_FILE;
# 180 "/usr/include/libio.h" 3
extern "C" { typedef void _IO_lock_t; }
# 186 "/usr/include/libio.h" 3
extern "C" { struct _IO_marker {
# 187 "/usr/include/libio.h" 3
_IO_marker *_next;
# 188 "/usr/include/libio.h" 3
_IO_FILE *_sbuf;
# 192 "/usr/include/libio.h" 3
int _pos;
# 203 "/usr/include/libio.h" 3
}; }
# 206 "/usr/include/libio.h" 3
enum __codecvt_result {
# 208 "/usr/include/libio.h" 3
__codecvt_ok,
# 209 "/usr/include/libio.h" 3
__codecvt_partial,
# 210 "/usr/include/libio.h" 3
__codecvt_error,
# 211 "/usr/include/libio.h" 3
__codecvt_noconv
# 212 "/usr/include/libio.h" 3
};
# 271 "/usr/include/libio.h" 3
extern "C" { struct _IO_FILE {
# 272 "/usr/include/libio.h" 3
int _flags;
# 277 "/usr/include/libio.h" 3
char *_IO_read_ptr;
# 278 "/usr/include/libio.h" 3
char *_IO_read_end;
# 279 "/usr/include/libio.h" 3
char *_IO_read_base;
# 280 "/usr/include/libio.h" 3
char *_IO_write_base;
# 281 "/usr/include/libio.h" 3
char *_IO_write_ptr;
# 282 "/usr/include/libio.h" 3
char *_IO_write_end;
# 283 "/usr/include/libio.h" 3
char *_IO_buf_base;
# 284 "/usr/include/libio.h" 3
char *_IO_buf_end;
# 286 "/usr/include/libio.h" 3
char *_IO_save_base;
# 287 "/usr/include/libio.h" 3
char *_IO_backup_base;
# 288 "/usr/include/libio.h" 3
char *_IO_save_end;
# 290 "/usr/include/libio.h" 3
_IO_marker *_markers;
# 292 "/usr/include/libio.h" 3
_IO_FILE *_chain;
# 294 "/usr/include/libio.h" 3
int _fileno;
# 298 "/usr/include/libio.h" 3
int _flags2;
# 300 "/usr/include/libio.h" 3
__off_t _old_offset;
# 304 "/usr/include/libio.h" 3
unsigned short _cur_column;
# 305 "/usr/include/libio.h" 3
signed char _vtable_offset;
# 306 "/usr/include/libio.h" 3
char _shortbuf[1];
# 310 "/usr/include/libio.h" 3
_IO_lock_t *_lock;
# 319 "/usr/include/libio.h" 3
__off64_t _offset;
# 328 "/usr/include/libio.h" 3
void *__pad1;
# 329 "/usr/include/libio.h" 3
void *__pad2;
# 330 "/usr/include/libio.h" 3
void *__pad3;
# 331 "/usr/include/libio.h" 3
void *__pad4;
# 332 "/usr/include/libio.h" 3
size_t __pad5;
# 334 "/usr/include/libio.h" 3
int _mode;
# 336 "/usr/include/libio.h" 3
char _unused2[(((15) * sizeof(int)) - ((4) * sizeof(void *))) - sizeof(size_t)];
# 338 "/usr/include/libio.h" 3
}; }
# 344 "/usr/include/libio.h" 3
struct _IO_FILE_plus;
# 346 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stdin_; }
# 347 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stdout_; }
# 348 "/usr/include/libio.h" 3
extern "C" { extern _IO_FILE_plus _IO_2_1_stderr_; }
# 364 "/usr/include/libio.h" 3
extern "C" { typedef __ssize_t __io_read_fn(void * , char * , size_t ); }
# 372 "/usr/include/libio.h" 3
extern "C" { typedef __ssize_t __io_write_fn(void * , const char * , size_t ); }
# 381 "/usr/include/libio.h" 3
extern "C" { typedef int __io_seek_fn(void * , __off64_t * , int ); }
# 384 "/usr/include/libio.h" 3
extern "C" { typedef int __io_close_fn(void * ); }
# 389 "/usr/include/libio.h" 3
extern "C" { typedef __io_read_fn cookie_read_function_t; }
# 390 "/usr/include/libio.h" 3
extern "C" { typedef __io_write_fn cookie_write_function_t; }
# 391 "/usr/include/libio.h" 3
extern "C" { typedef __io_seek_fn cookie_seek_function_t; }
# 392 "/usr/include/libio.h" 3
extern "C" { typedef __io_close_fn cookie_close_function_t; }
# 401 "/usr/include/libio.h" 3
extern "C" { typedef
# 396 "/usr/include/libio.h" 3
struct {
# 397 "/usr/include/libio.h" 3
__io_read_fn *read;
# 398 "/usr/include/libio.h" 3
__io_write_fn *write;
# 399 "/usr/include/libio.h" 3
__io_seek_fn *seek;
# 400 "/usr/include/libio.h" 3
__io_close_fn *close;
# 401 "/usr/include/libio.h" 3
} _IO_cookie_io_functions_t; }
# 402 "/usr/include/libio.h" 3
extern "C" { typedef _IO_cookie_io_functions_t cookie_io_functions_t; }
# 404 "/usr/include/libio.h" 3
struct _IO_cookie_file;
# 407 "/usr/include/libio.h" 3
extern "C" void _IO_cookie_init(_IO_cookie_file * , int , void * , _IO_cookie_io_functions_t );
# 416 "/usr/include/libio.h" 3
extern "C" int __underflow(_IO_FILE *);
# 417 "/usr/include/libio.h" 3
extern "C" int __uflow(_IO_FILE *);
# 418 "/usr/include/libio.h" 3
extern "C" int __overflow(_IO_FILE *, int);
# 460 "/usr/include/libio.h" 3
extern "C" int _IO_getc(_IO_FILE * );
# 461 "/usr/include/libio.h" 3
extern "C" int _IO_putc(int , _IO_FILE * );
# 462 "/usr/include/libio.h" 3
extern "C" int _IO_feof(_IO_FILE * ) throw();
# 463 "/usr/include/libio.h" 3
extern "C" int _IO_ferror(_IO_FILE * ) throw();
# 465 "/usr/include/libio.h" 3
extern "C" int _IO_peekc_locked(_IO_FILE * );
# 471 "/usr/include/libio.h" 3
extern "C" void _IO_flockfile(_IO_FILE *) throw();
# 472 "/usr/include/libio.h" 3
extern "C" void _IO_funlockfile(_IO_FILE *) throw();
# 473 "/usr/include/libio.h" 3
extern "C" int _IO_ftrylockfile(_IO_FILE *) throw();
# 490 "/usr/include/libio.h" 3
extern "C" int _IO_vfscanf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list, int *__restrict__);
# 492 "/usr/include/libio.h" 3
extern "C" int _IO_vfprintf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list);
# 494 "/usr/include/libio.h" 3
extern "C" __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
# 495 "/usr/include/libio.h" 3
extern "C" size_t _IO_sgetn(_IO_FILE *, void *, size_t);
# 497 "/usr/include/libio.h" 3
extern "C" __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
# 498 "/usr/include/libio.h" 3
extern "C" __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
# 500 "/usr/include/libio.h" 3
extern "C" void _IO_free_backup_area(_IO_FILE *) throw();
# 80 "/usr/include/stdio.h" 3
extern "C" { typedef __gnuc_va_list va_list; }
# 91 "/usr/include/stdio.h" 3
extern "C" { typedef _G_fpos_t fpos_t; }
# 97 "/usr/include/stdio.h" 3
extern "C" { typedef _G_fpos64_t fpos64_t; }
# 145 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stdin; }
# 146 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stdout; }
# 147 "/usr/include/stdio.h" 3
extern "C" { extern _IO_FILE *stderr; }
# 155 "/usr/include/stdio.h" 3
extern "C" int remove(const char * ) throw();
# 157 "/usr/include/stdio.h" 3
extern "C" int rename(const char * , const char * ) throw();
# 162 "/usr/include/stdio.h" 3
extern "C" int renameat(int , const char * , int , const char * ) throw();
# 172 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile();
# 182 "/usr/include/stdio.h" 3
extern "C" FILE *tmpfile64();
# 186 "/usr/include/stdio.h" 3
extern "C" char *tmpnam(char * ) throw();
# 192 "/usr/include/stdio.h" 3
extern "C" char *tmpnam_r(char * ) throw();
# 204 "/usr/include/stdio.h" 3
extern "C" char *tempnam(const char * , const char * ) throw()
# 205 "/usr/include/stdio.h" 3
 __attribute((__malloc__));
# 214 "/usr/include/stdio.h" 3
extern "C" int fclose(FILE * );
# 219 "/usr/include/stdio.h" 3
extern "C" int fflush(FILE * );
# 229 "/usr/include/stdio.h" 3
extern "C" int fflush_unlocked(FILE * );
# 239 "/usr/include/stdio.h" 3
extern "C" int fcloseall();
# 249 "/usr/include/stdio.h" 3
extern "C" FILE *fopen(const char *__restrict__ , const char *__restrict__ );
# 255 "/usr/include/stdio.h" 3
extern "C" FILE *freopen(const char *__restrict__ , const char *__restrict__ , FILE *__restrict__ );
# 274 "/usr/include/stdio.h" 3
extern "C" FILE *fopen64(const char *__restrict__ , const char *__restrict__ );
# 276 "/usr/include/stdio.h" 3
extern "C" FILE *freopen64(const char *__restrict__ , const char *__restrict__ , FILE *__restrict__ );
# 283 "/usr/include/stdio.h" 3
extern "C" FILE *fdopen(int , const char * ) throw();
# 289 "/usr/include/stdio.h" 3
extern "C" FILE *fopencookie(void *__restrict__ , const char *__restrict__ , _IO_cookie_io_functions_t ) throw();
# 296 "/usr/include/stdio.h" 3
extern "C" FILE *fmemopen(void * , size_t , const char * ) throw();
# 302 "/usr/include/stdio.h" 3
extern "C" FILE *open_memstream(char ** , size_t * ) throw();
# 309 "/usr/include/stdio.h" 3
extern "C" void setbuf(FILE *__restrict__ , char *__restrict__ ) throw();
# 313 "/usr/include/stdio.h" 3
extern "C" int setvbuf(FILE *__restrict__ , char *__restrict__ , int , size_t ) throw();
# 320 "/usr/include/stdio.h" 3
extern "C" void setbuffer(FILE *__restrict__ , char *__restrict__ , size_t ) throw();
# 324 "/usr/include/stdio.h" 3
extern "C" void setlinebuf(FILE * ) throw();
# 333 "/usr/include/stdio.h" 3
extern "C" int fprintf(FILE *__restrict__ , const char *__restrict__ , ...);
# 339 "/usr/include/stdio.h" 3
extern "C" int printf(const char *__restrict__ , ...);
# 341 "/usr/include/stdio.h" 3
extern "C" int sprintf(char *__restrict__ , const char *__restrict__ , ...) throw();
# 348 "/usr/include/stdio.h" 3
extern "C" int vfprintf(FILE *__restrict__ , const char *__restrict__ , __gnuc_va_list );
# 354 "/usr/include/stdio.h" 3
extern "C" int vprintf(const char *__restrict__ , __gnuc_va_list );
# 356 "/usr/include/stdio.h" 3
extern "C" int vsprintf(char *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw();
# 363 "/usr/include/stdio.h" 3
extern "C" int snprintf(char *__restrict__ , size_t , const char *__restrict__ , ...) throw()
# 365 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 367 "/usr/include/stdio.h" 3
extern "C" int vsnprintf(char *__restrict__ , size_t , const char *__restrict__ , __gnuc_va_list ) throw()
# 369 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 376 "/usr/include/stdio.h" 3
extern "C" int vasprintf(char **__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 378 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 379 "/usr/include/stdio.h" 3
extern "C" int __asprintf(char **__restrict__ , const char *__restrict__ , ...) throw()
# 381 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 382 "/usr/include/stdio.h" 3
extern "C" int asprintf(char **__restrict__ , const char *__restrict__ , ...) throw()
# 384 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 394 "/usr/include/stdio.h" 3
extern "C" int vdprintf(int , const char *__restrict__ , __gnuc_va_list )
# 396 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 397 "/usr/include/stdio.h" 3
extern "C" int dprintf(int , const char *__restrict__ , ...)
# 398 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 407 "/usr/include/stdio.h" 3
extern "C" int fscanf(FILE *__restrict__ , const char *__restrict__ , ...);
# 413 "/usr/include/stdio.h" 3
extern "C" int scanf(const char *__restrict__ , ...);
# 415 "/usr/include/stdio.h" 3
extern "C" int sscanf(const char *__restrict__ , const char *__restrict__ , ...) throw();
# 453 "/usr/include/stdio.h" 3
extern "C" int vfscanf(FILE *__restrict__ , const char *__restrict__ , __gnuc_va_list )
# 455 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 461 "/usr/include/stdio.h" 3
extern "C" int vscanf(const char *__restrict__ , __gnuc_va_list )
# 462 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 1, 0)));
# 465 "/usr/include/stdio.h" 3
extern "C" int vsscanf(const char *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 467 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 513 "/usr/include/stdio.h" 3
extern "C" int fgetc(FILE * );
# 514 "/usr/include/stdio.h" 3
extern "C" int getc(FILE * );
# 520 "/usr/include/stdio.h" 3
extern "C" int getchar();
# 532 "/usr/include/stdio.h" 3
extern "C" int getc_unlocked(FILE * );
# 533 "/usr/include/stdio.h" 3
extern "C" int getchar_unlocked();
# 543 "/usr/include/stdio.h" 3
extern "C" int fgetc_unlocked(FILE * );
# 555 "/usr/include/stdio.h" 3
extern "C" int fputc(int , FILE * );
# 556 "/usr/include/stdio.h" 3
extern "C" int putc(int , FILE * );
# 562 "/usr/include/stdio.h" 3
extern "C" int putchar(int );
# 576 "/usr/include/stdio.h" 3
extern "C" int fputc_unlocked(int , FILE * );
# 584 "/usr/include/stdio.h" 3
extern "C" int putc_unlocked(int , FILE * );
# 585 "/usr/include/stdio.h" 3
extern "C" int putchar_unlocked(int );
# 592 "/usr/include/stdio.h" 3
extern "C" int getw(FILE * );
# 595 "/usr/include/stdio.h" 3
extern "C" int putw(int , FILE * );
# 604 "/usr/include/stdio.h" 3
extern "C" char *fgets(char *__restrict__ , int , FILE *__restrict__ );
# 612 "/usr/include/stdio.h" 3
extern "C" char *gets(char * );
# 622 "/usr/include/stdio.h" 3
extern "C" char *fgets_unlocked(char *__restrict__ , int , FILE *__restrict__ );
# 638 "/usr/include/stdio.h" 3
extern "C" __ssize_t __getdelim(char **__restrict__ , size_t *__restrict__ , int , FILE *__restrict__ );
# 641 "/usr/include/stdio.h" 3
extern "C" __ssize_t getdelim(char **__restrict__ , size_t *__restrict__ , int , FILE *__restrict__ );
# 651 "/usr/include/stdio.h" 3
extern "C" __ssize_t getline(char **__restrict__ , size_t *__restrict__ , FILE *__restrict__ );
# 662 "/usr/include/stdio.h" 3
extern "C" int fputs(const char *__restrict__ , FILE *__restrict__ );
# 668 "/usr/include/stdio.h" 3
extern "C" int puts(const char * );
# 675 "/usr/include/stdio.h" 3
extern "C" int ungetc(int , FILE * );
# 682 "/usr/include/stdio.h" 3
extern "C" size_t fread(void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 688 "/usr/include/stdio.h" 3
extern "C" size_t fwrite(const void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 699 "/usr/include/stdio.h" 3
extern "C" int fputs_unlocked(const char *__restrict__ , FILE *__restrict__ );
# 710 "/usr/include/stdio.h" 3
extern "C" size_t fread_unlocked(void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 712 "/usr/include/stdio.h" 3
extern "C" size_t fwrite_unlocked(const void *__restrict__ , size_t , size_t , FILE *__restrict__ );
# 722 "/usr/include/stdio.h" 3
extern "C" int fseek(FILE * , long , int );
# 727 "/usr/include/stdio.h" 3
extern "C" long ftell(FILE * );
# 732 "/usr/include/stdio.h" 3
extern "C" void rewind(FILE * );
# 746 "/usr/include/stdio.h" 3
extern "C" int fseeko(FILE * , __off_t , int );
# 751 "/usr/include/stdio.h" 3
extern "C" __off_t ftello(FILE * );
# 771 "/usr/include/stdio.h" 3
extern "C" int fgetpos(FILE *__restrict__ , fpos_t *__restrict__ );
# 776 "/usr/include/stdio.h" 3
extern "C" int fsetpos(FILE * , const fpos_t * );
# 791 "/usr/include/stdio.h" 3
extern "C" int fseeko64(FILE * , __off64_t , int );
# 792 "/usr/include/stdio.h" 3
extern "C" __off64_t ftello64(FILE * );
# 793 "/usr/include/stdio.h" 3
extern "C" int fgetpos64(FILE *__restrict__ , fpos64_t *__restrict__ );
# 794 "/usr/include/stdio.h" 3
extern "C" int fsetpos64(FILE * , const fpos64_t * );
# 799 "/usr/include/stdio.h" 3
extern "C" void clearerr(FILE * ) throw();
# 801 "/usr/include/stdio.h" 3
extern "C" int feof(FILE * ) throw();
# 803 "/usr/include/stdio.h" 3
extern "C" int ferror(FILE * ) throw();
# 808 "/usr/include/stdio.h" 3
extern "C" void clearerr_unlocked(FILE * ) throw();
# 809 "/usr/include/stdio.h" 3
extern "C" int feof_unlocked(FILE * ) throw();
# 810 "/usr/include/stdio.h" 3
extern "C" int ferror_unlocked(FILE * ) throw();
# 819 "/usr/include/stdio.h" 3
extern "C" void perror(const char * );
# 27 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern int sys_nerr; }
# 28 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern const char *const sys_errlist[]; }
# 31 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern int _sys_nerr; }
# 32 "/usr/include/bits/sys_errlist.h" 3
extern "C" { extern const char *const _sys_errlist[]; }
# 831 "/usr/include/stdio.h" 3
extern "C" int fileno(FILE * ) throw();
# 836 "/usr/include/stdio.h" 3
extern "C" int fileno_unlocked(FILE * ) throw();
# 846 "/usr/include/stdio.h" 3
extern "C" FILE *popen(const char * , const char * );
# 852 "/usr/include/stdio.h" 3
extern "C" int pclose(FILE * );
# 858 "/usr/include/stdio.h" 3
extern "C" char *ctermid(char * ) throw();
# 864 "/usr/include/stdio.h" 3
extern "C" char *cuserid(char * );
# 869 "/usr/include/stdio.h" 3
struct obstack;
# 872 "/usr/include/stdio.h" 3
extern "C" int obstack_printf(obstack *__restrict__ , const char *__restrict__ , ...) throw()
# 874 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 875 "/usr/include/stdio.h" 3
extern "C" int obstack_vprintf(obstack *__restrict__ , const char *__restrict__ , __gnuc_va_list ) throw()
# 878 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 886 "/usr/include/stdio.h" 3
extern "C" void flockfile(FILE * ) throw();
# 890 "/usr/include/stdio.h" 3
extern "C" int ftrylockfile(FILE * ) throw();
# 893 "/usr/include/stdio.h" 3
extern "C" void funlockfile(FILE * ) throw();
# 93 "/usr/include/c++/4.4/cstdio" 3
namespace std __attribute((__visibility__("default"))) {
# 95 "/usr/include/c++/4.4/cstdio" 3
using ::FILE;
# 96 "/usr/include/c++/4.4/cstdio" 3
using ::fpos_t;
# 98 "/usr/include/c++/4.4/cstdio" 3
using ::clearerr;
# 99 "/usr/include/c++/4.4/cstdio" 3
using ::fclose;
# 100 "/usr/include/c++/4.4/cstdio" 3
using ::feof;
# 101 "/usr/include/c++/4.4/cstdio" 3
using ::ferror;
# 102 "/usr/include/c++/4.4/cstdio" 3
using ::fflush;
# 103 "/usr/include/c++/4.4/cstdio" 3
using ::fgetc;
# 104 "/usr/include/c++/4.4/cstdio" 3
using ::fgetpos;
# 105 "/usr/include/c++/4.4/cstdio" 3
using ::fgets;
# 106 "/usr/include/c++/4.4/cstdio" 3
using ::fopen;
# 107 "/usr/include/c++/4.4/cstdio" 3
using ::fprintf;
# 108 "/usr/include/c++/4.4/cstdio" 3
using ::fputc;
# 109 "/usr/include/c++/4.4/cstdio" 3
using ::fputs;
# 110 "/usr/include/c++/4.4/cstdio" 3
using ::fread;
# 111 "/usr/include/c++/4.4/cstdio" 3
using ::freopen;
# 112 "/usr/include/c++/4.4/cstdio" 3
using ::fscanf;
# 113 "/usr/include/c++/4.4/cstdio" 3
using ::fseek;
# 114 "/usr/include/c++/4.4/cstdio" 3
using ::fsetpos;
# 115 "/usr/include/c++/4.4/cstdio" 3
using ::ftell;
# 116 "/usr/include/c++/4.4/cstdio" 3
using ::fwrite;
# 117 "/usr/include/c++/4.4/cstdio" 3
using ::getc;
# 118 "/usr/include/c++/4.4/cstdio" 3
using ::getchar;
# 119 "/usr/include/c++/4.4/cstdio" 3
using ::gets;
# 120 "/usr/include/c++/4.4/cstdio" 3
using ::perror;
# 121 "/usr/include/c++/4.4/cstdio" 3
using ::printf;
# 122 "/usr/include/c++/4.4/cstdio" 3
using ::putc;
# 123 "/usr/include/c++/4.4/cstdio" 3
using ::putchar;
# 124 "/usr/include/c++/4.4/cstdio" 3
using ::puts;
# 125 "/usr/include/c++/4.4/cstdio" 3
using ::remove;
# 126 "/usr/include/c++/4.4/cstdio" 3
using ::rename;
# 127 "/usr/include/c++/4.4/cstdio" 3
using ::rewind;
# 128 "/usr/include/c++/4.4/cstdio" 3
using ::scanf;
# 129 "/usr/include/c++/4.4/cstdio" 3
using ::setbuf;
# 130 "/usr/include/c++/4.4/cstdio" 3
using ::setvbuf;
# 131 "/usr/include/c++/4.4/cstdio" 3
using ::sprintf;
# 132 "/usr/include/c++/4.4/cstdio" 3
using ::sscanf;
# 133 "/usr/include/c++/4.4/cstdio" 3
using ::tmpfile;
# 134 "/usr/include/c++/4.4/cstdio" 3
using ::tmpnam;
# 135 "/usr/include/c++/4.4/cstdio" 3
using ::ungetc;
# 136 "/usr/include/c++/4.4/cstdio" 3
using ::vfprintf;
# 137 "/usr/include/c++/4.4/cstdio" 3
using ::vprintf;
# 138 "/usr/include/c++/4.4/cstdio" 3
using ::vsprintf;
# 140 "/usr/include/c++/4.4/cstdio" 3
}
# 150 "/usr/include/c++/4.4/cstdio" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 165 "/usr/include/c++/4.4/cstdio" 3
using ::snprintf;
# 166 "/usr/include/c++/4.4/cstdio" 3
using ::vfscanf;
# 167 "/usr/include/c++/4.4/cstdio" 3
using ::vscanf;
# 168 "/usr/include/c++/4.4/cstdio" 3
using ::vsnprintf;
# 169 "/usr/include/c++/4.4/cstdio" 3
using ::vsscanf;
# 172 "/usr/include/c++/4.4/cstdio" 3
}
# 174 "/usr/include/c++/4.4/cstdio" 3
namespace std __attribute((__visibility__("default"))) {
# 176 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::snprintf;
# 177 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::vfscanf;
# 178 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::vscanf;
# 179 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::vsnprintf;
# 180 "/usr/include/c++/4.4/cstdio" 3
using __gnu_cxx::vsscanf;
# 182 "/usr/include/c++/4.4/cstdio" 3
}
# 40 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++io.h" 3
namespace std __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++io.h" 3
typedef __gthread_mutex_t __c_lock;
# 45 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++io.h" 3
typedef FILE __c_file;
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/c++io.h" 3
}
# 44 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
namespace std __attribute((__visibility__("default"))) {
# 47 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
template< class _CharT> class __basic_file;
# 52 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
template<> class __basic_file< char> {
# 55 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
__c_file *_M_cfile;
# 58 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
bool _M_cfile_created;
# 61 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
public: __basic_file(__c_lock * = 0);
# 64 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
std::__basic_file< char> *open(const char * , ios_base::openmode , int = 436);
# 67 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
std::__basic_file< char> *sys_open(__c_file * , ios_base::openmode);
# 70 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
std::__basic_file< char> *sys_open(int , ios_base::openmode );
# 73 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
std::__basic_file< char> *close();
# 76 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
bool is_open() const;
# 79 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
int fd();
# 82 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
__c_file *file();
# 84 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
~__basic_file();
# 87 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
streamsize xsputn(const char * , streamsize );
# 90 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
streamsize xsputn_2(const char * , streamsize , const char * , streamsize );
# 94 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
streamsize xsgetn(char * , streamsize );
# 97 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
streamoff seekoff(streamoff , ios_base::seekdir );
# 100 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
int sync();
# 103 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
streamsize showmanyc();
# 104 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
};
# 106 "/usr/include/c++/4.4/x86_64-linux-gnu/bits/basic_file.h" 3
}
# 49 "/usr/include/c++/4.4/fstream" 3
namespace std __attribute((__visibility__("default"))) {
# 66 "/usr/include/c++/4.4/fstream" 3
template < typename _CharT, typename _Traits >
    class basic_filebuf : public basic_streambuf < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;

      typedef basic_streambuf < char_type, traits_type > __streambuf_type;
      typedef basic_filebuf < char_type, traits_type > __filebuf_type;
      typedef __basic_file < char > __file_type;
      typedef typename traits_type :: state_type __state_type;
      typedef codecvt < char_type, char, __state_type > __codecvt_type;

      friend class ios_base;

    protected :


      __c_lock _M_lock;


      __file_type _M_file;


      ios_base :: openmode _M_mode;


      __state_type _M_state_beg;




      __state_type _M_state_cur;



      __state_type _M_state_last;


      char_type * _M_buf;






      size_t _M_buf_size;


      bool _M_buf_allocated;

      bool _M_reading;
      bool _M_writing;







      char_type _M_pback;
      char_type * _M_pback_cur_save;
      char_type * _M_pback_end_save;
      bool _M_pback_init;



      const __codecvt_type * _M_codecvt;






      char * _M_ext_buf;




      streamsize _M_ext_buf_size;






      const char * _M_ext_next;
      char * _M_ext_end;






      void
      _M_create_pback ( )
      {
 if ( ! _M_pback_init )
   {
     _M_pback_cur_save = this -> gptr ( );
     _M_pback_end_save = this -> egptr ( );
     this -> setg ( & _M_pback, & _M_pback, & _M_pback + 1 );
     _M_pback_init = true;
   }
      }






      void
      _M_destroy_pback ( ) throw ( )
      {
 if ( _M_pback_init )
   {

     _M_pback_cur_save += this -> gptr ( ) != this -> eback ( );
     this -> setg ( _M_buf, _M_pback_cur_save, _M_pback_end_save );
     _M_pback_init = false;
   }
      }

    public :







      basic_filebuf ( );




      virtual
      ~ basic_filebuf ( )
      { this -> close ( ); }





      bool
      is_open ( ) const throw ( )
      { return _M_file . is_open ( ); }

      __filebuf_type *
      open ( const char * __s, ios_base :: openmode __mode );

      __filebuf_type *
      close ( );

    protected :
      void
      _M_allocate_internal_buffer ( );

      void
      _M_destroy_internal_buffer ( ) throw ( );


      virtual streamsize
      showmanyc ( );






      virtual int_type
      underflow ( );

      virtual int_type
      pbackfail ( int_type __c = _Traits :: eof ( ) );

      virtual int_type
      overflow ( int_type __c = _Traits :: eof ( ) );



      bool
      _M_convert_to_external ( char_type *, streamsize );

      virtual __streambuf_type *
      setbuf ( char_type * __s, streamsize __n );

      virtual pos_type
      seekoff ( off_type __off, ios_base :: seekdir __way,
       ios_base :: openmode __mode = ios_base :: in | ios_base :: out );

      virtual pos_type
      seekpos ( pos_type __pos,
       ios_base :: openmode __mode = ios_base :: in | ios_base :: out );


      pos_type
      _M_seek ( off_type __off, ios_base :: seekdir __way, __state_type __state );

      virtual int
      sync ( );

      virtual void
      imbue ( const locale & __loc );

      virtual streamsize
      xsgetn ( char_type * __s, streamsize __n );

      virtual streamsize
      xsputn ( const char_type * __s, streamsize __n );


      bool
      _M_terminate_output ( );

      void
      _M_set_buffer ( streamsize __off )
      {
  const bool __testin = _M_mode & ios_base :: in;
  const bool __testout = _M_mode & ios_base :: out;

 if ( __testin && __off > 0 )
   this -> setg ( _M_buf, _M_buf, _M_buf + __off );
 else
   this -> setg ( _M_buf, _M_buf, _M_buf );

 if ( __testout && __off == 0 && _M_buf_size > 1 )
   this -> setp ( _M_buf, _M_buf + _M_buf_size - 1 );
 else
   this -> setp ( __null, __null );
      }
    };
# 413 "/usr/include/c++/4.4/fstream" 3
template < typename _CharT, typename _Traits >
    class basic_ifstream : public basic_istream < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;


      typedef basic_filebuf < char_type, traits_type > __filebuf_type;
      typedef basic_istream < char_type, traits_type > __istream_type;

    private :
      __filebuf_type _M_filebuf;

    public :

      basic_ifstream ( ) : __istream_type ( ), _M_filebuf ( )
      { this -> init ( & _M_filebuf ); }

      explicit
      basic_ifstream ( const char * __s, ios_base :: openmode __mode = ios_base :: in )
      : __istream_type ( ), _M_filebuf ( )
      {
 this -> init ( & _M_filebuf );
 this -> open ( __s, __mode );
      }

      ~ basic_ifstream ( )
      { }

      __filebuf_type *
      rdbuf ( ) const
      { return const_cast < __filebuf_type * > ( & _M_filebuf ); }





      bool
      is_open ( )
      { return _M_filebuf . is_open ( ); }



      bool
      is_open ( ) const
      { return _M_filebuf . is_open ( ); }

      void
      open ( const char * __s, ios_base :: openmode __mode = ios_base :: in )
      {
 if ( ! _M_filebuf . open ( __s, __mode | ios_base :: in ) )
   this -> setstate ( ios_base :: failbit );
 else


   this -> clear ( );
      }

      void
      close ( )
      {
 if ( ! _M_filebuf . close ( ) )
   this -> setstate ( ios_base :: failbit );
      }
    };
# 581 "/usr/include/c++/4.4/fstream" 3
template < typename _CharT, typename _Traits >
    class basic_ofstream : public basic_ostream < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;


      typedef basic_filebuf < char_type, traits_type > __filebuf_type;
      typedef basic_ostream < char_type, traits_type > __ostream_type;

    private :
      __filebuf_type _M_filebuf;

    public :

      basic_ofstream ( ) : __ostream_type ( ), _M_filebuf ( )
      { this -> init ( & _M_filebuf ); }

      explicit
      basic_ofstream ( const char * __s,
       ios_base :: openmode __mode = ios_base :: out | ios_base :: trunc )
      : __ostream_type ( ), _M_filebuf ( )
      {
 this -> init ( & _M_filebuf );
 this -> open ( __s, __mode );
      }

      ~ basic_ofstream ( )
      { }

      __filebuf_type *
      rdbuf ( ) const
      { return const_cast < __filebuf_type * > ( & _M_filebuf ); }





      bool
      is_open ( )
      { return _M_filebuf . is_open ( ); }



      bool
      is_open ( ) const
      { return _M_filebuf . is_open ( ); }

      void
      open ( const char * __s,
    ios_base :: openmode __mode = ios_base :: out | ios_base :: trunc )
      {
 if ( ! _M_filebuf . open ( __s, __mode | ios_base :: out ) )
   this -> setstate ( ios_base :: failbit );
 else


   this -> clear ( );
      }

      void
      close ( )
      {
 if ( ! _M_filebuf . close ( ) )
   this -> setstate ( ios_base :: failbit );
      }
    };
# 754 "/usr/include/c++/4.4/fstream" 3
template < typename _CharT, typename _Traits >
    class basic_fstream : public basic_iostream < _CharT, _Traits >
    {
    public :

      typedef _CharT char_type;
      typedef _Traits traits_type;
      typedef typename traits_type :: int_type int_type;
      typedef typename traits_type :: pos_type pos_type;
      typedef typename traits_type :: off_type off_type;


      typedef basic_filebuf < char_type, traits_type > __filebuf_type;
      typedef basic_ios < char_type, traits_type > __ios_type;
      typedef basic_iostream < char_type, traits_type > __iostream_type;

    private :
      __filebuf_type _M_filebuf;

    public :

      basic_fstream ( )
      : __iostream_type ( ), _M_filebuf ( )
      { this -> init ( & _M_filebuf ); }

      explicit
      basic_fstream ( const char * __s,
      ios_base :: openmode __mode = ios_base :: in | ios_base :: out )
      : __iostream_type ( __null ), _M_filebuf ( )
      {
 this -> init ( & _M_filebuf );
 this -> open ( __s, __mode );
      }

      ~ basic_fstream ( )
      { }

      __filebuf_type *
      rdbuf ( ) const
      { return const_cast < __filebuf_type * > ( & _M_filebuf ); }





      bool
      is_open ( )
      { return _M_filebuf . is_open ( ); }



      bool
      is_open ( ) const
      { return _M_filebuf . is_open ( ); }

      void
      open ( const char * __s,
    ios_base :: openmode __mode = ios_base :: in | ios_base :: out )
      {
 if ( ! _M_filebuf . open ( __s, __mode ) )
   this -> setstate ( ios_base :: failbit );
 else


   this -> clear ( );
      }

      void
      close ( )
      {
 if ( ! _M_filebuf . close ( ) )
   this -> setstate ( ios_base :: failbit );
      }
    };
# 912 "/usr/include/c++/4.4/fstream" 3
}
# 43 "/usr/include/c++/4.4/bits/fstream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_filebuf < _CharT, _Traits > ::
    _M_allocate_internal_buffer ( )
    {


      if ( ! _M_buf_allocated && ! _M_buf )
 {
   _M_buf = new char_type [ _M_buf_size ];
   _M_buf_allocated = true;
 }
    }
# 59 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_filebuf < _CharT, _Traits > ::
    _M_destroy_internal_buffer ( ) throw ( )
    {
      if ( _M_buf_allocated )
 {
   delete [ ] _M_buf;
   _M_buf = __null;
   _M_buf_allocated = false;
 }
      delete [ ] _M_ext_buf;
      _M_ext_buf = __null;
      _M_ext_buf_size = 0;
      _M_ext_next = __null;
      _M_ext_end = __null;
    }
# 77 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    basic_filebuf < _CharT, _Traits > ::
    basic_filebuf ( ) : __streambuf_type ( ), _M_lock ( ), _M_file ( & _M_lock ),
    _M_mode ( ios_base :: openmode ( 0 ) ), _M_state_beg ( ), _M_state_cur ( ),
    _M_state_last ( ), _M_buf ( __null ), _M_buf_size ( 8192 ),
    _M_buf_allocated ( false ), _M_reading ( false ), _M_writing ( false ), _M_pback ( ),
    _M_pback_cur_save ( 0 ), _M_pback_end_save ( 0 ), _M_pback_init ( false ),
    _M_codecvt ( 0 ), _M_ext_buf ( 0 ), _M_ext_buf_size ( 0 ), _M_ext_next ( 0 ),
    _M_ext_end ( 0 )
    {
      if ( has_facet < __codecvt_type > ( this -> _M_buf_locale ) )
 _M_codecvt = & use_facet < __codecvt_type > ( this -> _M_buf_locale );
    }
# 91 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: __filebuf_type *
    basic_filebuf < _CharT, _Traits > ::
    open ( const char * __s, ios_base :: openmode __mode )
    {
      __filebuf_type * __ret = __null;
      if ( ! this -> is_open ( ) )
 {
   _M_file . open ( __s, __mode );
   if ( this -> is_open ( ) )
     {
       _M_allocate_internal_buffer ( );
       _M_mode = __mode;


       _M_reading = false;
       _M_writing = false;
       _M_set_buffer ( - 1 );


       _M_state_last = _M_state_cur = _M_state_beg;


       if ( ( __mode & ios_base :: ate )
    && this -> seekoff ( 0, ios_base :: end, __mode )
    == pos_type ( off_type ( - 1 ) ) )
  this -> close ( );
       else
  __ret = this;
     }
 }
      return __ret;
    }
# 125 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: __filebuf_type *
    basic_filebuf < _CharT, _Traits > ::
    close ( )
    {
      if ( ! this -> is_open ( ) )
 return __null;

      bool __testfail = false;
      {

 struct __close_sentry
 {
   basic_filebuf * __fb;
   __close_sentry ( basic_filebuf * __fbi ) : __fb ( __fbi ) { }
   ~ __close_sentry ( )
   {
     __fb -> _M_mode = ios_base :: openmode ( 0 );
     __fb -> _M_pback_init = false;
     __fb -> _M_destroy_internal_buffer ( );
     __fb -> _M_reading = false;
     __fb -> _M_writing = false;
     __fb -> _M_set_buffer ( - 1 );
     __fb -> _M_state_last = __fb -> _M_state_cur = __fb -> _M_state_beg;
   }
 } __cs ( this );

 try
   {
     if ( ! _M_terminate_output ( ) )
       __testfail = true;
   }
 catch ( __cxxabiv1 :: __forced_unwind & )
   {
     _M_file . close ( );
     throw;
   }
 catch ( ... )
   { __testfail = true; }
      }

      if ( ! _M_file . close ( ) )
 __testfail = true;

      if ( __testfail )
 return __null;
      else
 return this;
    }
# 175 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    streamsize
    basic_filebuf < _CharT, _Traits > ::
    showmanyc ( )
    {
      streamsize __ret = - 1;
      const bool __testin = _M_mode & ios_base :: in;
      if ( __testin && this -> is_open ( ) )
 {


   __ret = this -> egptr ( ) - this -> gptr ( );







   if ( __check_facet ( _M_codecvt ) . encoding ( ) >= 0 )

     __ret += _M_file . showmanyc ( ) / _M_codecvt -> max_length ( );
 }
      return __ret;
    }
# 201 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: int_type
    basic_filebuf < _CharT, _Traits > ::
    underflow ( )
    {
      int_type __ret = traits_type :: eof ( );
      const bool __testin = _M_mode & ios_base :: in;
      if ( __testin && ! _M_writing )
 {



   _M_destroy_pback ( );

   if ( this -> gptr ( ) < this -> egptr ( ) )
     return traits_type :: to_int_type ( * this -> gptr ( ) );


   const size_t __buflen = _M_buf_size > 1 ? _M_buf_size - 1 : 1;


   bool __got_eof = false;

   streamsize __ilen = 0;
   codecvt_base :: result __r = codecvt_base :: ok;
   if ( __check_facet ( _M_codecvt ) . always_noconv ( ) )
     {
       __ilen = _M_file . xsgetn ( reinterpret_cast < char * > ( this -> eback ( ) ),
          __buflen );
       if ( __ilen == 0 )
  __got_eof = true;
     }
   else
     {


       const int __enc = _M_codecvt -> encoding ( );
       streamsize __blen;
       streamsize __rlen;
       if ( __enc > 0 )
  __blen = __rlen = __buflen * __enc;
       else
  {
    __blen = __buflen + _M_codecvt -> max_length ( ) - 1;
    __rlen = __buflen;
  }
       const streamsize __remainder = _M_ext_end - _M_ext_next;
       __rlen = __rlen > __remainder ? __rlen - __remainder : 0;



       if ( _M_reading && this -> egptr ( ) == this -> eback ( ) && __remainder )
  __rlen = 0;



       if ( _M_ext_buf_size < __blen )
  {
    char * __buf = new char [ __blen ];
    if ( __remainder )
      __builtin_memcpy ( __buf, _M_ext_next, __remainder );

    delete [ ] _M_ext_buf;
    _M_ext_buf = __buf;
    _M_ext_buf_size = __blen;
  }
       else if ( __remainder )
  __builtin_memmove ( _M_ext_buf, _M_ext_next, __remainder );

       _M_ext_next = _M_ext_buf;
       _M_ext_end = _M_ext_buf + __remainder;
       _M_state_last = _M_state_cur;

       do
  {
    if ( __rlen > 0 )
      {



        if ( _M_ext_end - _M_ext_buf + __rlen > _M_ext_buf_size )
   {
     __throw_ios_failure ( ( "basic_filebuf::underflow codecvt::max_length() is not valid" ) );


   }
        streamsize __elen = _M_file . xsgetn ( _M_ext_end, __rlen );
        if ( __elen == 0 )
   __got_eof = true;
        else if ( __elen == - 1 )
   break;
        _M_ext_end += __elen;
      }

    char_type * __iend = this -> eback ( );
    if ( _M_ext_next < _M_ext_end )
      __r = _M_codecvt -> in ( _M_state_cur, _M_ext_next,
      _M_ext_end, _M_ext_next,
      this -> eback ( ),
      this -> eback ( ) + __buflen, __iend );
    if ( __r == codecvt_base :: noconv )
      {
        size_t __avail = _M_ext_end - _M_ext_buf;
        __ilen = std :: min ( __avail, __buflen );
        traits_type :: copy ( this -> eback ( ),
     reinterpret_cast < char_type * >
     ( _M_ext_buf ), __ilen );
        _M_ext_next = _M_ext_buf + __ilen;
      }
    else
      __ilen = __iend - this -> eback ( );




    if ( __r == codecvt_base :: error )
      break;

    __rlen = 1;
  }
       while ( __ilen == 0 && ! __got_eof );
     }

   if ( __ilen > 0 )
     {
       _M_set_buffer ( __ilen );
       _M_reading = true;
       __ret = traits_type :: to_int_type ( * this -> gptr ( ) );
     }
   else if ( __got_eof )
     {



       _M_set_buffer ( - 1 );
       _M_reading = false;


       if ( __r == codecvt_base :: partial )
  __throw_ios_failure ( ( "basic_filebuf::underflow incomplete character in file" ) );

     }
   else if ( __r == codecvt_base :: error )
     __throw_ios_failure ( ( "basic_filebuf::underflow invalid byte sequence in file" ) );

   else
     __throw_ios_failure ( ( "basic_filebuf::underflow error reading the file" ) );

 }
      return __ret;
    }
# 353 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: int_type
    basic_filebuf < _CharT, _Traits > ::
    pbackfail ( int_type __i )
    {
      int_type __ret = traits_type :: eof ( );
      const bool __testin = _M_mode & ios_base :: in;
      if ( __testin && ! _M_writing )
 {


   const bool __testpb = _M_pback_init;
   const bool __testeof = traits_type :: eq_int_type ( __i, __ret );
   int_type __tmp;
   if ( this -> eback ( ) < this -> gptr ( ) )
     {
       this -> gbump ( - 1 );
       __tmp = traits_type :: to_int_type ( * this -> gptr ( ) );
     }
   else if ( this -> seekoff ( - 1, ios_base :: cur ) != pos_type ( off_type ( - 1 ) ) )
     {
       __tmp = this -> underflow ( );
       if ( traits_type :: eq_int_type ( __tmp, __ret ) )
  return __ret;
     }
   else
     {





       return __ret;
     }



   if ( ! __testeof && traits_type :: eq_int_type ( __i, __tmp ) )
     __ret = __i;
   else if ( __testeof )
     __ret = traits_type :: not_eof ( __i );
   else if ( ! __testpb )
     {
       _M_create_pback ( );
       _M_reading = true;
       * this -> gptr ( ) = traits_type :: to_char_type ( __i );
       __ret = __i;
     }
 }
      return __ret;
    }
# 405 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: int_type
    basic_filebuf < _CharT, _Traits > ::
    overflow ( int_type __c )
    {
      int_type __ret = traits_type :: eof ( );
      const bool __testeof = traits_type :: eq_int_type ( __c, __ret );
      const bool __testout = _M_mode & ios_base :: out;
      if ( __testout && ! _M_reading )
 {
   if ( this -> pbase ( ) < this -> pptr ( ) )
     {

       if ( ! __testeof )
  {
    * this -> pptr ( ) = traits_type :: to_char_type ( __c );
    this -> pbump ( 1 );
  }



       if ( _M_convert_to_external ( this -> pbase ( ),
      this -> pptr ( ) - this -> pbase ( ) ) )
  {
    _M_set_buffer ( 0 );
    __ret = traits_type :: not_eof ( __c );
  }
     }
   else if ( _M_buf_size > 1 )
     {



       _M_set_buffer ( 0 );
       _M_writing = true;
       if ( ! __testeof )
  {
    * this -> pptr ( ) = traits_type :: to_char_type ( __c );
    this -> pbump ( 1 );
  }
       __ret = traits_type :: not_eof ( __c );
     }
   else
     {

       char_type __conv = traits_type :: to_char_type ( __c );
       if ( __testeof || _M_convert_to_external ( & __conv, 1 ) )
  {
    _M_writing = true;
    __ret = traits_type :: not_eof ( __c );
  }
     }
 }
      return __ret;
    }
# 461 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    bool
    basic_filebuf < _CharT, _Traits > ::
    _M_convert_to_external ( _CharT * __ibuf, streamsize __ilen )
    {

      streamsize __elen;
      streamsize __plen;
      if ( __check_facet ( _M_codecvt ) . always_noconv ( ) )
 {
   __elen = _M_file . xsputn ( reinterpret_cast < char * > ( __ibuf ), __ilen );
   __plen = __ilen;
 }
      else
 {


   streamsize __blen = __ilen * _M_codecvt -> max_length ( );
   char * __buf = static_cast < char * > ( __builtin_alloca ( __blen ) );

   char * __bend;
   const char_type * __iend;
   codecvt_base :: result __r;
   __r = _M_codecvt -> out ( _M_state_cur, __ibuf, __ibuf + __ilen,
    __iend, __buf, __buf + __blen, __bend );

   if ( __r == codecvt_base :: ok || __r == codecvt_base :: partial )
     __blen = __bend - __buf;
   else if ( __r == codecvt_base :: noconv )
     {

       __buf = reinterpret_cast < char * > ( __ibuf );
       __blen = __ilen;
     }
   else
     __throw_ios_failure ( ( "basic_filebuf::_M_convert_to_external conversion error" ) );


   __elen = _M_file . xsputn ( __buf, __blen );
   __plen = __blen;


   if ( __r == codecvt_base :: partial && __elen == __plen )
     {
       const char_type * __iresume = __iend;
       streamsize __rlen = this -> pptr ( ) - __iend;
       __r = _M_codecvt -> out ( _M_state_cur, __iresume,
        __iresume + __rlen, __iend, __buf,
        __buf + __blen, __bend );
       if ( __r != codecvt_base :: error )
  {
    __rlen = __bend - __buf;
    __elen = _M_file . xsputn ( __buf, __rlen );
    __plen = __rlen;
  }
       else
  __throw_ios_failure ( ( "basic_filebuf::_M_convert_to_external conversion error" ) );

     }
 }
      return __elen == __plen;
    }
# 524 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
     streamsize
     basic_filebuf < _CharT, _Traits > ::
     xsgetn ( _CharT * __s, streamsize __n )
     {

       streamsize __ret = 0;
       if ( _M_pback_init )
  {
    if ( __n > 0 && this -> gptr ( ) == this -> eback ( ) )
      {
        * __s ++ = * this -> gptr ( );
        this -> gbump ( 1 );
        __ret = 1;
        -- __n;
      }
    _M_destroy_pback ( );
  }




       const bool __testin = _M_mode & ios_base :: in;
       const streamsize __buflen = _M_buf_size > 1 ? _M_buf_size - 1 : 1;

       if ( __n > __buflen && __check_facet ( _M_codecvt ) . always_noconv ( )
    && __testin && ! _M_writing )
  {

    const streamsize __avail = this -> egptr ( ) - this -> gptr ( );
    if ( __avail != 0 )
      {
        if ( __avail == 1 )
   * __s = * this -> gptr ( );
        else
   traits_type :: copy ( __s, this -> gptr ( ), __avail );
        __s += __avail;
        this -> gbump ( __avail );
        __ret += __avail;
        __n -= __avail;
      }



    streamsize __len;
    for (;; )
      {
        __len = _M_file . xsgetn ( reinterpret_cast < char * > ( __s ),
          __n );
        if ( __len == - 1 )
   __throw_ios_failure ( ( "basic_filebuf::xsgetn error reading the file" ) );

        if ( __len == 0 )
   break;

        __n -= __len;
        __ret += __len;
        if ( __n == 0 )
   break;

        __s += __len;
      }

    if ( __n == 0 )
      {
        _M_set_buffer ( 0 );
        _M_reading = true;
      }
    else if ( __len == 0 )
      {



        _M_set_buffer ( - 1 );
        _M_reading = false;
      }
  }
       else
  __ret += __streambuf_type :: xsgetn ( __s, __n );

       return __ret;
     }
# 607 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
     streamsize
     basic_filebuf < _CharT, _Traits > ::
     xsputn ( const _CharT * __s, streamsize __n )
     {



       streamsize __ret = 0;
       const bool __testout = _M_mode & ios_base :: out;
       if ( __check_facet ( _M_codecvt ) . always_noconv ( )
    && __testout && ! _M_reading )
 {

   const streamsize __chunk = 1UL << 10;
   streamsize __bufavail = this -> epptr ( ) - this -> pptr ( );


   if ( ! _M_writing && _M_buf_size > 1 )
     __bufavail = _M_buf_size - 1;

   const streamsize __limit = std :: min ( __chunk, __bufavail );
   if ( __n >= __limit )
     {
       const streamsize __buffill = this -> pptr ( ) - this -> pbase ( );
       const char * __buf = reinterpret_cast < const char * > ( this -> pbase ( ) );
       __ret = _M_file . xsputn_2 ( __buf, __buffill,
           reinterpret_cast < const char * > ( __s ),
           __n );
       if ( __ret == __buffill + __n )
  {
    _M_set_buffer ( 0 );
    _M_writing = true;
  }
       if ( __ret > __buffill )
  __ret -= __buffill;
       else
  __ret = 0;
     }
   else
     __ret = __streambuf_type :: xsputn ( __s, __n );
 }
       else
  __ret = __streambuf_type :: xsputn ( __s, __n );
       return __ret;
    }
# 654 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: __streambuf_type *
    basic_filebuf < _CharT, _Traits > ::
    setbuf ( char_type * __s, streamsize __n )
    {
      if ( ! this -> is_open ( ) )
 {
   if ( __s == 0 && __n == 0 )
     _M_buf_size = 1;
   else if ( __s && __n > 0 )
     {

       _M_buf = __s;
       _M_buf_size = __n;
     }
 }
      return this;
    }
# 683 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: pos_type
    basic_filebuf < _CharT, _Traits > ::
    seekoff ( off_type __off, ios_base :: seekdir __way, ios_base :: openmode )
    {
      int __width = 0;
      if ( _M_codecvt )
 __width = _M_codecvt -> encoding ( );
      if ( __width < 0 )
 __width = 0;

      pos_type __ret = pos_type ( off_type ( - 1 ) );
      const bool __testfail = __off != 0 && __width <= 0;
      if ( this -> is_open ( ) && ! __testfail )
 {

   _M_destroy_pback ( );






   __state_type __state = _M_state_beg;
   off_type __computed_off = __off * __width;
   if ( _M_reading && __way == ios_base :: cur )
     {
       if ( _M_codecvt -> always_noconv ( ) )
  __computed_off += this -> gptr ( ) - this -> egptr ( );
       else
  {



    const int __gptr_off =
      _M_codecvt -> length ( _M_state_last, _M_ext_buf, _M_ext_next,
           this -> gptr ( ) - this -> eback ( ) );
    __computed_off += _M_ext_buf + __gptr_off - _M_ext_end;



    __state = _M_state_last;
  }
     }
   __ret = _M_seek ( __computed_off, __way, __state );
 }
      return __ret;
    }
# 736 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: pos_type
    basic_filebuf < _CharT, _Traits > ::
    seekpos ( pos_type __pos, ios_base :: openmode )
    {
      pos_type __ret = pos_type ( off_type ( - 1 ) );
      if ( this -> is_open ( ) )
 {

   _M_destroy_pback ( );
   __ret = _M_seek ( off_type ( __pos ), ios_base :: beg, __pos . state ( ) );
 }
      return __ret;
    }
# 751 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    typename basic_filebuf < _CharT, _Traits > :: pos_type
    basic_filebuf < _CharT, _Traits > ::
    _M_seek ( off_type __off, ios_base :: seekdir __way, __state_type __state )
    {
      pos_type __ret = pos_type ( off_type ( - 1 ) );
      if ( _M_terminate_output ( ) )
 {

   __ret = pos_type ( _M_file . seekoff ( __off, __way ) );
   if ( __ret != pos_type ( off_type ( - 1 ) ) )
     {
       _M_reading = false;
       _M_writing = false;
       _M_ext_next = _M_ext_end = _M_ext_buf;
       _M_set_buffer ( - 1 );
       _M_state_cur = __state;
       __ret . state ( _M_state_cur );
     }
 }
      return __ret;
    }
# 774 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    bool
    basic_filebuf < _CharT, _Traits > ::
    _M_terminate_output ( )
    {

      bool __testvalid = true;
      if ( this -> pbase ( ) < this -> pptr ( ) )
 {
   const int_type __tmp = this -> overflow ( );
   if ( traits_type :: eq_int_type ( __tmp, traits_type :: eof ( ) ) )
     __testvalid = false;
 }


      if ( _M_writing && ! __check_facet ( _M_codecvt ) . always_noconv ( )
   && __testvalid )
 {



   const size_t __blen = 128;
   char __buf [ __blen ];
   codecvt_base :: result __r;
   streamsize __ilen = 0;

   do
     {
       char * __next;
       __r = _M_codecvt -> unshift ( _M_state_cur, __buf,
     __buf + __blen, __next );
       if ( __r == codecvt_base :: error )
  __testvalid = false;
       else if ( __r == codecvt_base :: ok ||
         __r == codecvt_base :: partial )
  {
    __ilen = __next - __buf;
    if ( __ilen > 0 )
      {
        const streamsize __elen = _M_file . xsputn ( __buf, __ilen );
        if ( __elen != __ilen )
   __testvalid = false;
      }
  }
     }
   while ( __r == codecvt_base :: partial && __ilen > 0 && __testvalid );

   if ( __testvalid )
     {




       const int_type __tmp = this -> overflow ( );
       if ( traits_type :: eq_int_type ( __tmp, traits_type :: eof ( ) ) )
  __testvalid = false;
     }
 }
      return __testvalid;
    }
# 835 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    int
    basic_filebuf < _CharT, _Traits > ::
    sync ( )
    {


      int __ret = 0;
      if ( this -> pbase ( ) < this -> pptr ( ) )
 {
   const int_type __tmp = this -> overflow ( );
   if ( traits_type :: eq_int_type ( __tmp, traits_type :: eof ( ) ) )
     __ret = - 1;
 }
      return __ret;
    }
# 852 "/usr/include/c++/4.4/bits/fstream.tcc" 3
template < typename _CharT, typename _Traits >
    void
    basic_filebuf < _CharT, _Traits > ::
    imbue ( const locale & __loc )
    {
      bool __testvalid = true;

      const __codecvt_type * _M_codecvt_tmp = 0;
      if ( __builtin_expect ( has_facet < __codecvt_type > ( __loc ), true ) )
 _M_codecvt_tmp = & use_facet < __codecvt_type > ( __loc );

      if ( this -> is_open ( ) )
 {

   if ( ( _M_reading || _M_writing )
       && __check_facet ( _M_codecvt ) . encoding ( ) == - 1 )
     __testvalid = false;
   else
     {
       if ( _M_reading )
  {
    if ( __check_facet ( _M_codecvt ) . always_noconv ( ) )
      {
        if ( _M_codecvt_tmp
     && ! __check_facet ( _M_codecvt_tmp ) . always_noconv ( ) )
   __testvalid = this -> seekoff ( 0, ios_base :: cur, _M_mode )
                 != pos_type ( off_type ( - 1 ) );
      }
    else
      {

        _M_ext_next = _M_ext_buf
   + _M_codecvt -> length ( _M_state_last, _M_ext_buf, _M_ext_next,
          this -> gptr ( ) - this -> eback ( ) );
        const streamsize __remainder = _M_ext_end - _M_ext_next;
        if ( __remainder )
   __builtin_memmove ( _M_ext_buf, _M_ext_next, __remainder );

        _M_ext_next = _M_ext_buf;
        _M_ext_end = _M_ext_buf + __remainder;
        _M_set_buffer ( - 1 );
        _M_state_last = _M_state_cur = _M_state_beg;
      }
  }
       else if ( _M_writing && ( __testvalid = _M_terminate_output ( ) ) )
  _M_set_buffer ( - 1 );
     }
 }

      if ( __testvalid )
 _M_codecvt = _M_codecvt_tmp;
      else
 _M_codecvt = 0;
    }
# 911 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_filebuf< char, char_traits< char> > ;
# 912 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_ifstream< char, char_traits< char> > ;
# 913 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_ofstream< char, char_traits< char> > ;
# 914 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_fstream< char, char_traits< char> > ;
# 917 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_filebuf< wchar_t, char_traits< wchar_t> > ;
# 918 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_ifstream< wchar_t, char_traits< wchar_t> > ;
# 919 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_ofstream< wchar_t, char_traits< wchar_t> > ;
# 920 "/usr/include/c++/4.4/bits/fstream.tcc" 3
extern template class basic_fstream< wchar_t, char_traits< wchar_t> > ;
# 924 "/usr/include/c++/4.4/bits/fstream.tcc" 3
}
# 7 "MRT.cu"
using namespace std;
# 57 "/usr/include/sys/time.h" 3
extern "C" { struct timezone {
# 59 "/usr/include/sys/time.h" 3
int tz_minuteswest;
# 60 "/usr/include/sys/time.h" 3
int tz_dsttime;
# 61 "/usr/include/sys/time.h" 3
}; }
# 63 "/usr/include/sys/time.h" 3
extern "C" { typedef struct timezone *__restrict__ __timezone_ptr_t; }
# 73 "/usr/include/sys/time.h" 3
extern "C" int gettimeofday(timeval *__restrict__ , __timezone_ptr_t ) throw()
# 74 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 79 "/usr/include/sys/time.h" 3
extern "C" int settimeofday(const timeval * , const struct timezone * ) throw()
# 81 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 87 "/usr/include/sys/time.h" 3
extern "C" int adjtime(const timeval * , timeval * ) throw();
# 93 "/usr/include/sys/time.h" 3
enum __itimer_which {
# 96 "/usr/include/sys/time.h" 3
ITIMER_REAL,
# 99 "/usr/include/sys/time.h" 3
ITIMER_VIRTUAL,
# 103 "/usr/include/sys/time.h" 3
ITIMER_PROF
# 105 "/usr/include/sys/time.h" 3
};
# 109 "/usr/include/sys/time.h" 3
extern "C" { struct itimerval {
# 112 "/usr/include/sys/time.h" 3
timeval it_interval;
# 114 "/usr/include/sys/time.h" 3
timeval it_value;
# 115 "/usr/include/sys/time.h" 3
}; }
# 122 "/usr/include/sys/time.h" 3
extern "C" { typedef int __itimer_which_t; }
# 127 "/usr/include/sys/time.h" 3
extern "C" int getitimer(__itimer_which_t , itimerval * ) throw();
# 133 "/usr/include/sys/time.h" 3
extern "C" int setitimer(__itimer_which_t , const itimerval *__restrict__ , itimerval *__restrict__ ) throw();
# 140 "/usr/include/sys/time.h" 3
extern "C" int utimes(const char * , const timeval [2]) throw()
# 141 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 145 "/usr/include/sys/time.h" 3
extern "C" int lutimes(const char * , const timeval [2]) throw()
# 146 "/usr/include/sys/time.h" 3
 __attribute((__nonnull__(1)));
# 149 "/usr/include/sys/time.h" 3
extern "C" int futimes(int , const timeval [2]) throw();
# 156 "/usr/include/sys/time.h" 3
extern "C" int futimesat(int , const char * , const timeval [2]) throw();
# 68 "MRT.cu"
__attribute__((unused)) inline int ImageFcn(float x, float y, float z) {int volatile ___ = 1;(void)x;(void)y;(void)z;
# 84 "MRT.cu"
exit(___);}
# 86 "MRT.cu"
__attribute__((unused)) inline int ImageFcn(int x, int y, int z) {int volatile ___ = 1;(void)x;(void)y;(void)z;
# 120 "MRT.cu"
exit(___);}
# 122 "MRT.cu"
__attribute__((unused)) inline float PoisProf(float x) {int volatile ___ = 1;(void)x;
# 127 "MRT.cu"
exit(___);}
# 129 "MRT.cu"
__attribute__((unused)) void DirichletWest(float &f0, float &f1, float &f2, float &
# 130 "MRT.cu"
f3, float &f4, float &f5, float &
# 131 "MRT.cu"
f6, float &f7, float &f8, float &f9, float &
# 132 "MRT.cu"
f10, float &f11, float &f12, float &
# 133 "MRT.cu"
f13, float &f14, float &f15, float &
# 134 "MRT.cu"
f16, float &f17, float &f18, int y, int z)
# 135 "MRT.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)f9;(void)f10;(void)f11;(void)f12;(void)f13;(void)f14;(void)f15;(void)f16;(void)f17;(void)f18;(void)y;(void)z;
# 174 "MRT.cu"
exit(___);}
# 176 "MRT.cu"
__attribute__((unused)) void DirichletWest_Reg(float &f0, float &f1, float &f2, float &
# 177 "MRT.cu"
f3, float &f4, float &f5, float &
# 178 "MRT.cu"
f6, float &f7, float &f8, float &f9, float &
# 179 "MRT.cu"
f10, float &f11, float &f12, float &
# 180 "MRT.cu"
f13, float &f14, float &f15, float &
# 181 "MRT.cu"
f16, float &f17, float &f18, int y, int z)
# 182 "MRT.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)f9;(void)f10;(void)f11;(void)f12;(void)f13;(void)f14;(void)f15;(void)f16;(void)f17;(void)f18;(void)y;(void)z;
# 250 "MRT.cu"
exit(___);}
# 252 "MRT.cu"
__attribute__((unused)) void NeumannEast_Reg(float &f0, float &f1, float &f2, float &
# 253 "MRT.cu"
f3, float &f4, float &f5, float &
# 254 "MRT.cu"
f6, float &f7, float &f8, float &f9, float &
# 255 "MRT.cu"
f10, float &f11, float &f12, float &
# 256 "MRT.cu"
f13, float &f14, float &f15, float &
# 257 "MRT.cu"
f16, float &f17, float &f18, int y, int z)
# 258 "MRT.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)f9;(void)f10;(void)f11;(void)f12;(void)f13;(void)f14;(void)f15;(void)f16;(void)f17;(void)f18;(void)y;(void)z;
# 373 "MRT.cu"
exit(___);}
# 375 "MRT.cu"
__attribute__((unused)) void DirichletNorth_Reg(float &f0, float &f1, float &f2, float &
# 376 "MRT.cu"
f3, float &f4, float &f5, float &
# 377 "MRT.cu"
f6, float &f7, float &f8, float &f9, float &
# 378 "MRT.cu"
f10, float &f11, float &f12, float &
# 379 "MRT.cu"
f13, float &f14, float &f15, float &
# 380 "MRT.cu"
f16, float &f17, float &f18, int y, int z)
# 381 "MRT.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)f9;(void)f10;(void)f11;(void)f12;(void)f13;(void)f14;(void)f15;(void)f16;(void)f17;(void)f18;(void)y;(void)z;
# 462 "MRT.cu"
exit(___);}
# 463 "MRT.cu"
__attribute__((unused)) void DirichletSouth_Reg(float &f0, float &f1, float &f2, float &
# 464 "MRT.cu"
f3, float &f4, float &f5, float &
# 465 "MRT.cu"
f6, float &f7, float &f8, float &f9, float &
# 466 "MRT.cu"
f10, float &f11, float &f12, float &
# 467 "MRT.cu"
f13, float &f14, float &f15, float &
# 468 "MRT.cu"
f16, float &f17, float &f18, int y, int z)
# 469 "MRT.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)f9;(void)f10;(void)f11;(void)f12;(void)f13;(void)f14;(void)f15;(void)f16;(void)f17;(void)f18;(void)y;(void)z;
# 540 "MRT.cu"
exit(___);}
# 543 "MRT.cu"
__attribute__((unused)) void ysymmetry_top(float &f0, float &f1, float &f2, float &
# 544 "MRT.cu"
f3, float &f4, float &f5, float &
# 545 "MRT.cu"
f6, float &f7, float &f8, float &f9, float &
# 546 "MRT.cu"
f10, float &f11, float &f12, float &
# 547 "MRT.cu"
f13, float &f14, float &f15, float &
# 548 "MRT.cu"
f16, float &f17, float &f18, int z)
# 549 "MRT.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)f9;(void)f10;(void)f11;(void)f12;(void)f13;(void)f14;(void)f15;(void)f16;(void)f17;(void)f18;(void)z;
# 569 "MRT.cu"
exit(___);}
# 571 "MRT.cu"
__attribute__((unused)) void ysymmetry_bot(float &f0, float &f1, float &f2, float &
# 572 "MRT.cu"
f3, float &f4, float &f5, float &
# 573 "MRT.cu"
f6, float &f7, float &f8, float &f9, float &
# 574 "MRT.cu"
f10, float &f11, float &f12, float &
# 575 "MRT.cu"
f13, float &f14, float &f15, float &
# 576 "MRT.cu"
f16, float &f17, float &f18, int z)
# 577 "MRT.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)f9;(void)f10;(void)f11;(void)f12;(void)f13;(void)f14;(void)f15;(void)f16;(void)f17;(void)f18;(void)z;
# 597 "MRT.cu"
exit(___);}
# 599 "MRT.cu"
__attribute__((unused)) void zsymmetry_top(float &f0, float &f1, float &f2, float &
# 600 "MRT.cu"
f3, float &f4, float &f5, float &
# 601 "MRT.cu"
f6, float &f7, float &f8, float &f9, float &
# 602 "MRT.cu"
f10, float &f11, float &f12, float &
# 603 "MRT.cu"
f13, float &f14, float &f15, float &
# 604 "MRT.cu"
f16, float &f17, float &f18, int y)
# 605 "MRT.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)f9;(void)f10;(void)f11;(void)f12;(void)f13;(void)f14;(void)f15;(void)f16;(void)f17;(void)f18;(void)y;
# 625 "MRT.cu"
exit(___);}
# 627 "MRT.cu"
__attribute__((unused)) void zsymmetry_bot(float &f0, float &f1, float &f2, float &
# 628 "MRT.cu"
f3, float &f4, float &f5, float &
# 629 "MRT.cu"
f6, float &f7, float &f8, float &f9, float &
# 630 "MRT.cu"
f10, float &f11, float &f12, float &
# 631 "MRT.cu"
f13, float &f14, float &f15, float &
# 632 "MRT.cu"
f16, float &f17, float &f18, int y)
# 633 "MRT.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)f9;(void)f10;(void)f11;(void)f12;(void)f13;(void)f14;(void)f15;(void)f16;(void)f17;(void)f18;(void)y;
# 653 "MRT.cu"
exit(___);}
# 655 "MRT.cu"
__attribute__((unused)) inline void boundaries(float &f0, float &f1, float &f2, float &
# 656 "MRT.cu"
f3, float &f4, float &f5, float &
# 657 "MRT.cu"
f6, float &f7, float &f8, float &f9, float &
# 658 "MRT.cu"
f10, float &f11, float &f12, float &
# 659 "MRT.cu"
f13, float &f14, float &f15, float &
# 660 "MRT.cu"
f16, float &f17, float &f18, int y, int z, int im)
# 661 "MRT.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)f9;(void)f10;(void)f11;(void)f12;(void)f13;(void)f14;(void)f15;(void)f16;(void)f17;(void)f18;(void)y;(void)z;(void)im;
# 698 "MRT.cu"
exit(___);}
# 699 "MRT.cu"
__attribute__((unused)) inline void boundaries_force(float &f0, float &f1, float &f2, float &
# 700 "MRT.cu"
f3, float &f4, float &f5, float &
# 701 "MRT.cu"
f6, float &f7, float &f8, float &f9, float &
# 702 "MRT.cu"
f10, float &f11, float &f12, float &
# 703 "MRT.cu"
f13, float &f14, float &f15, float &
# 704 "MRT.cu"
f16, float &f17, float &f18, int y, int z, int im)
# 705 "MRT.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)f9;(void)f10;(void)f11;(void)f12;(void)f13;(void)f14;(void)f15;(void)f16;(void)f17;(void)f18;(void)y;(void)z;(void)im;
# 742 "MRT.cu"
exit(___);}
# 746 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f0A;
# 747 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f1A;
# 748 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f2A;
# 749 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f3A;
# 750 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f4A;
# 751 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f5A;
# 752 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f6A;
# 753 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f7A;
# 754 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f8A;
# 755 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f9A;
# 756 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f10A;
# 757 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f11A;
# 758 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f12A;
# 759 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f13A;
# 760 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f14A;
# 761 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f15A;
# 762 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f16A;
# 763 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f17A;
# 764 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f18A;
# 766 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f0B;
# 767 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f1B;
# 768 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f2B;
# 769 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f3B;
# 770 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f4B;
# 771 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f5B;
# 772 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f6B;
# 773 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f7B;
# 774 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f8B;
# 775 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f9B;
# 776 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f10B;
# 777 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f11B;
# 778 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f12B;
# 779 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f13B;
# 780 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f14B;
# 781 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f15B;
# 782 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f16B;
# 783 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f17B;
# 784 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f18B;
# 787 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f0C;
# 788 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f1C;
# 789 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f2C;
# 790 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f3C;
# 791 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f4C;
# 792 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f5C;
# 793 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f6C;
# 794 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f7C;
# 795 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f8C;
# 796 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f9C;
# 797 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f10C;
# 798 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f11C;
# 799 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f12C;
# 800 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f13C;
# 801 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f14C;
# 802 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f15C;
# 803 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f16C;
# 804 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f17C;
# 805 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f18C;
# 807 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f0D;
# 808 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f1D;
# 809 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f2D;
# 810 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f3D;
# 811 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f4D;
# 812 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f5D;
# 813 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f6D;
# 814 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f7D;
# 815 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f8D;
# 816 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f9D;
# 817 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f10D;
# 818 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f11D;
# 819 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f12D;
# 820 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f13D;
# 821 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f14D;
# 822 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f15D;
# 823 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f16D;
# 824 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f17D;
# 825 "MRT.cu"
static texture< float, 2, cudaReadModeElementType> texRef_f18D;
# 829 "MRT.cu"
int timeval_subtract(double *result, timeval *x, timeval *y)
# 830 "MRT.cu"
{
# 831 "MRT.cu"
timeval result0;
# 834 "MRT.cu"
if ((x->tv_usec) < (y->tv_usec)) {
# 835 "MRT.cu"
int nsec = ((((y->tv_usec) - (x->tv_usec)) / (1000000)) + (1));
# 836 "MRT.cu"
(y->tv_usec) -= (1000000 * nsec);
# 837 "MRT.cu"
(y->tv_sec) += nsec;
# 838 "MRT.cu"
}
# 839 "MRT.cu"
if (((x->tv_usec) - (y->tv_usec)) > (1000000)) {
# 840 "MRT.cu"
int nsec = (((y->tv_usec) - (x->tv_usec)) / (1000000));
# 841 "MRT.cu"
(y->tv_usec) += (1000000 * nsec);
# 842 "MRT.cu"
(y->tv_sec) -= nsec;
# 843 "MRT.cu"
}
# 847 "MRT.cu"
(result0.tv_sec) = ((x->tv_sec) - (y->tv_sec));
# 848 "MRT.cu"
(result0.tv_usec) = ((x->tv_usec) - (y->tv_usec));
# 849 "MRT.cu"
(*result) = ((((double)(result0.tv_usec)) / (1000000.0)) + ((double)(result0.tv_sec)));
# 852 "MRT.cu"
return (x->tv_sec) < (y->tv_sec);
# 853 "MRT.cu"
}
# 855 "MRT.cu"
__attribute__((unused)) inline void bgk_collide(float &f0, float &f1, float &f2, float &
# 856 "MRT.cu"
f3, float &f4, float &f5, float &
# 857 "MRT.cu"
f6, float &f7, float &f8, float &f9, float &
# 858 "MRT.cu"
f10, float &f11, float &f12, float &
# 859 "MRT.cu"
f13, float &f14, float &f15, float &
# 860 "MRT.cu"
f16, float &f17, float &f18, float omega)
# 861 "MRT.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)f9;(void)f10;(void)f11;(void)f12;(void)f13;(void)f14;(void)f15;(void)f16;(void)f17;(void)f18;(void)omega;
# 891 "MRT.cu"
exit(___);}
# 894 "MRT.cu"
__attribute__((unused)) inline void mrt_collide(float &f0, float &f1, float &f2, float &
# 895 "MRT.cu"
f3, float &f4, float &f5, float &
# 896 "MRT.cu"
f6, float &f7, float &f8, float &f9, float &
# 897 "MRT.cu"
f10, float &f11, float &f12, float &
# 898 "MRT.cu"
f13, float &f14, float &f15, float &
# 899 "MRT.cu"
f16, float &f17, float &f18, float omega)
# 900 "MRT.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)f9;(void)f10;(void)f11;(void)f12;(void)f13;(void)f14;(void)f15;(void)f16;(void)f17;(void)f18;(void)omega;
# 1138 "MRT.cu"
exit(___);}
# 1195 "MRT.cu"
__attribute__((unused)) inline void mrt_scale_cf(float &f0, float &f1, float &f2, float &
# 1196 "MRT.cu"
f3, float &f4, float &f5, float &
# 1197 "MRT.cu"
f6, float &f7, float &f8, float &f9, float &
# 1198 "MRT.cu"
f10, float &f11, float &f12, float &
# 1199 "MRT.cu"
f13, float &f14, float &f15, float &
# 1200 "MRT.cu"
f16, float &f17, float &f18, float SF)
# 1201 "MRT.cu"
{int volatile ___ = 1;(void)f0;(void)f1;(void)f2;(void)f3;(void)f4;(void)f5;(void)f6;(void)f7;(void)f8;(void)f9;(void)f10;(void)f11;(void)f12;(void)f13;(void)f14;(void)f15;(void)f16;(void)f17;(void)f18;(void)SF;
# 1401 "MRT.cu"
exit(___);}
# 1406 "MRT.cu"
__attribute__((unused)) inline int f_mem(int f_num, int x, int y, int z, size_t pitch)
# 1407 "MRT.cu"
{int volatile ___ = 1;(void)f_num;(void)x;(void)y;(void)z;(void)pitch;
# 1410 "MRT.cu"
exit(___);}
# 1412 "MRT.cu"
__attribute__((unused)) inline int f_memLR(int f_num, int x, int y, int z, size_t pitch)
# 1413 "MRT.cu"
{int volatile ___ = 1;(void)f_num;(void)x;(void)y;(void)z;(void)pitch;
# 1416 "MRT.cu"
exit(___);}
# 1418 "MRT.cu"
__attribute__((unused)) int dmin(int a, int b)
# 1419 "MRT.cu"
{int volatile ___ = 1;(void)a;(void)b;
# 1422 "MRT.cu"
exit(___);}
# 1423 "MRT.cu"
__attribute__((unused)) int dmax(int a)
# 1424 "MRT.cu"
{int volatile ___ = 1;(void)a;
# 1427 "MRT.cu"
exit(___);}
# 1428 "MRT.cu"
void testfunc(float *output) ;
# 1475 "MRT.cu"
void simple_copy(float *fA, float *fB, size_t
# 1476 "MRT.cu"
pitch) ;
# 1486 "MRT.cu"
void simple_text(float *fA, float *fB, size_t
# 1487 "MRT.cu"
pitch) ;
# 1496 "MRT.cu"
void ExtractFromC_d(float *fout, size_t
# 1497 "MRT.cu"
pitch, float SF) ;
# 1729 "MRT.cu"
void LR_d_hybABCD_force(float *fin, float *fout, float
# 1730 "MRT.cu"
omega, size_t pitch, float *FX, float *FY, float *FZ, int t) ;
# 1880 "MRT.cu"
void LR_d_hybBACD_force(float *fin, float *fout, float
# 1881 "MRT.cu"
omega, size_t pitch, float *FX, float *FY, float *FZ, int t) ;
# 2027 "MRT.cu"
void LR_d_hybABCD(float *fin, float *fout, float
# 2028 "MRT.cu"
omega, size_t pitch) ;
# 2128 "MRT.cu"
void LR_d_hybABCD2(float *fin, float *fout, float
# 2129 "MRT.cu"
omega, size_t pitch, int n) ;
# 2228 "MRT.cu"
void LR_d_hybABDC(float *fin, float *fout, float
# 2229 "MRT.cu"
omega, size_t pitch, float SF) ;
# 2330 "MRT.cu"
void LR_d_hybABDC2(float *fin, float *fout, float
# 2331 "MRT.cu"
omega, size_t pitch, float SF, int n) ;
# 2432 "MRT.cu"
void LR_d_hybABDC_Interp(float *fin, float *fout, float
# 2433 "MRT.cu"
omega, size_t pitch, float SF) ;
# 2739 "MRT.cu"
void LR_d_hybBADC(float *fin, float *fout, float
# 2740 "MRT.cu"
omega, size_t pitch, float SF) ;
# 2841 "MRT.cu"
void LR_d_hybBADC2(float *fin, float *fout, float
# 2842 "MRT.cu"
omega, size_t pitch, float SF, int n) ;
# 2943 "MRT.cu"
void LR_d_hybBADC_Interp(float *fin, float *fout, float
# 2944 "MRT.cu"
omega, size_t pitch, float SF) ;
# 3248 "MRT.cu"
void LR_d_ABCD(float *fin, float *fout, float
# 3249 "MRT.cu"
omega, size_t pitch) ;
# 3340 "MRT.cu"
void LR_d_ABDC(float *fin, float *fout, float
# 3341 "MRT.cu"
omega, size_t pitch, float SF) ;
# 3535 "MRT.cu"
void LR_d_BACD(float *fin, float *fout, float
# 3536 "MRT.cu"
omega, size_t pitch) ;
# 3627 "MRT.cu"
void LR_d_BADC(float *fin, float *fout, float
# 3628 "MRT.cu"
omega, size_t pitch, float SF) ;
# 3821 "MRT.cu"
void mrt_d_hybAB_force(float *fin, float *fout, float
# 3822 "MRT.cu"
omega, size_t pitch, float *FX, float *FY, float *FZ, int t) ;
# 3992 "MRT.cu"
void mrt_d_hybBA_force(float *fin, float *fout, float
# 3993 "MRT.cu"
omega, size_t pitch, float *FX, float *FY, float *FZ, int t) ;
# 4166 "MRT.cu"
void mrt_d_hybAB(float *fin, float *fout, float
# 4167 "MRT.cu"
omega, size_t pitch) ;
# 4498 "MRT.cu"
void mrt_d_hybBA(float *fin, float *fout, float
# 4499 "MRT.cu"
omega, size_t pitch) ;
# 4640 "MRT.cu"
void mrt_d_single(float *fA, float *fB, float
# 4641 "MRT.cu"
omega, size_t pitch) ;
# 4732 "MRT.cu"
__attribute__((unused)) inline float ld_gb1_cg(const float *addr) {int volatile ___ = 1;(void)addr;
# 4736 "MRT.cu"
exit(___);}
# 4743 "MRT.cu"
void initialize_single(float *f, size_t pitch) ;
# 4804 "MRT.cu"
void initialize_LR(float *f, size_t pitch) ;
# 4839 "MRT.cu"
void initialize(float *f0, float *f1, float *f2, float *
# 4840 "MRT.cu"
f3, float *f4, float *f5, float *
# 4841 "MRT.cu"
f6, float *f7, float *f8, float *f9, float *
# 4842 "MRT.cu"
f10, float *f11, float *f12, float *
# 4843 "MRT.cu"
f13, float *f14, float *f15, float *
# 4844 "MRT.cu"
f16, float *f17, float *f18, size_t
# 4845 "MRT.cu"
pitch) ;
# 4907 "MRT.cu"
int main(int argc, char *argv[])
# 4908 "MRT.cu"
{
# 4912 "MRT.cu"
std::ofstream output;
# 4913 "MRT.cu"
std::ofstream output2;
# 4914 "MRT.cu"
std::string FileName = "test0";
# 4916 "MRT.cu"
output.open((FileName + (".dat")).c_str());
# 4917 "MRT.cu"
output2.open((FileName + (".force")).c_str());
# 4919 "MRT.cu"
size_t memsize, memsize2;
# 4920 "MRT.cu"
size_t pitch = (0);
# 4921 "MRT.cu"
size_t pitch2 = (0);
# 4922 "MRT.cu"
int i, n, nBlocks, nBlocks2, n2;
# 4923 "MRT.cu"
float omega, CharLength, omega2;
# 4925 "MRT.cu"
if (abs((0.5F) - ((1.0F) / (2))) > (0.001000000047F)) {
# 4926 "MRT.cu"
(((cout << ("LRLEVEL and LRFACTOR don\'t match! Exiting..."))) << (std::endl));
# 4927 "MRT.cu"
return 0;
# 4928 "MRT.cu"
}
# 4930 "MRT.cu"
CharLength = ((4.0F) * (2.0F));
# 4932 "MRT.cu"
omega = ((1.0F) / (((3.0F) * (((0.07999999821F) * CharLength) / (100.0F))) + (0.5F)));
# 4933 "MRT.cu"
omega2 = ((2.0F) / ((1.0F) + ((2.0F) * (((2.0F) / omega) - (1.0F)))));
# 4934 "MRT.cu"
if ((0.5F) == (0.25F)) {
# 4935 "MRT.cu"
omega2 = ((2.0F) / ((1.0F) + ((2.0F) * (((2.0F) / omega2) - (1.0F)))));
# 4936 "MRT.cu"
}
# 4937 "MRT.cu"
float SF_cf = ((omega * ((1.0F) - omega2)) / ((((1.0F) - omega) * omega2) / (0.5F)));
# 4938 "MRT.cu"
float SF_fc = ((1.0F) / SF_cf);
# 4940 "MRT.cu"
(((((cout << ("omega: "))) << omega)) << (std::endl));
# 4941 "MRT.cu"
(((((((((((((cout << ("blocksize: "))) << (64))) << ("x"))) << (1))) << ("x"))) << (1))) << (std::endl));
# 4942 "MRT.cu"
(((((((((((((cout << ("grid: "))) << (64))) << ("x"))) << (64))) << ("x"))) << (64))) << (std::endl));
# 4943 "MRT.cu"
(((((((((((((cout << ("LRblocksize: "))) << (64))) << ("x"))) << (1))) << ("x"))) << (1))) << (std::endl));
# 4944 "MRT.cu"
(((((((((((((cout << ("LRgrid: "))) << (64))) << ("x"))) << (64))) << ("x"))) << (64))) << (std::endl));
# 4945 "MRT.cu"
(((((cout << ("TMAX: "))) << (500))) << (std::endl));
# 4946 "MRT.cu"
(((((cout << ("Method: "))) << ("SINGLE"))) << (std::endl));
# 4947 "MRT.cu"
(((((cout << ("Model: "))) << ("MRT"))) << (std::endl));
# 4949 "MRT.cu"
nBlocks = (((((64 + 64) - 1) / 64) * ((64 / 1) + (64 % 1))) * ((64 / 1) + (64 % 1)));
# 4951 "MRT.cu"
nBlocks2 = ((((64 / 64) + (64 % 64)) * ((64 / 1) + (64 % 1))) * ((64 / 1) + (64 % 1)));
# 4953 "MRT.cu"
int B = ((64 * 1) * 1);
# 4954 "MRT.cu"
int B2 = ((64 * 1) * 1);
# 4955 "MRT.cu"
n = (nBlocks * B);
# 4956 "MRT.cu"
n2 = (nBlocks2 * B2);
# 4957 "MRT.cu"
(((((cout << ("nBlocks:"))) << nBlocks)) << (std::endl));
# 4959 "MRT.cu"
dim3 threads(64, 1, 1);
# 4960 "MRT.cu"
dim3 grid(((64 + 64) - 1) / 64, 64 / 1, 64 / 1);
# 4962 "MRT.cu"
dim3 threads2(64, 1, 1);
# 4963 "MRT.cu"
dim3 grid2(64 / 64, 64 / 1, 64 / 1);
# 4965 "MRT.cu"
memsize = (n * sizeof(float));
# 4967 "MRT.cu"
memsize2 = (n2 * sizeof(float));
# 4973 "MRT.cu"
float *fA_h, *fA_d, *fB_d, *fC_h, *fC_d, *fD_d;
# 4974 "MRT.cu"
float *FX_h, *FY_h, *FZ_h, *FX_d, *FY_d, *FZ_d;
# 4975 "MRT.cu"
fA_h = ((float *)malloc(memsize * (19)));
# 4976 "MRT.cu"
fC_h = ((float *)malloc(memsize2 * (19)));
# 4977 "MRT.cu"
FX_h = ((float *)malloc((500) * sizeof(float)));
# 4978 "MRT.cu"
FY_h = ((float *)malloc((500) * sizeof(float)));
# 4979 "MRT.cu"
FZ_h = ((float *)malloc((500) * sizeof(float)));
# 4980 "MRT.cu"
cudaMallocPitch((void **)(&fA_d), &pitch, (64) * sizeof(float), (64 * 64) * 19);
# 4981 "MRT.cu"
cudaMallocPitch((void **)(&fB_d), &pitch, (64) * sizeof(float), (64 * 64) * 19);
# 4983 "MRT.cu"
if (("NO") == ("YES")) {
# 4984 "MRT.cu"
cudaMallocPitch((void **)(&fC_d), &pitch2, (64) * sizeof(float), (64 * 64) * 19);
# 4985 "MRT.cu"
cudaMallocPitch((void **)(&fD_d), &pitch2, (64) * sizeof(float), (64 * 64) * 19);
# 4986 "MRT.cu"
}
# 4988 "MRT.cu"
cudaMalloc((void **)(&FX_d), (500) * sizeof(float));
# 4989 "MRT.cu"
cudaMalloc((void **)(&FY_d), (500) * sizeof(float));
# 4990 "MRT.cu"
cudaMalloc((void **)(&FZ_d), (500) * sizeof(float));
# 4992 "MRT.cu"
(((((((cout << pitch)) << (", "))) << pitch2)) << (std::endl));
# 4994 "MRT.cu"
size_t pitch_elements = (pitch / sizeof(float));
# 4995 "MRT.cu"
size_t pitch_elements2 = (pitch2 / sizeof(float));
# 4997 "MRT.cu"
cudaChannelFormatDesc desc = cudaCreateChannelDesc< float> ();
# 4998 "MRT.cu"
for (i = 0; i < (n * 19); i++)
# 4999 "MRT.cu"
{
# 5000 "MRT.cu"
(fA_h[i]) = i;
# 5001 "MRT.cu"
}
# 5002 "MRT.cu"
for (i = 0; i < (n2 * 19); i++)
# 5003 "MRT.cu"
{
# 5004 "MRT.cu"
(fC_h[i]) = (0);
# 5005 "MRT.cu"
}
# 5006 "MRT.cu"
for (i = 0; i < 500; i++) {
# 5007 "MRT.cu"
(FX_h[i]) = (0.0F);
# 5008 "MRT.cu"
(FY_h[i]) = (0.0F);
# 5009 "MRT.cu"
(FZ_h[i]) = (0.0F);
# 5010 "MRT.cu"
}
# 5011 "MRT.cu"
cudaMemcpy(FX_d, FX_h, (500) * sizeof(float), cudaMemcpyHostToDevice);
# 5012 "MRT.cu"
cudaMemcpy(FY_d, FY_h, (500) * sizeof(float), cudaMemcpyHostToDevice);
# 5013 "MRT.cu"
cudaMemcpy(FZ_d, FZ_h, (500) * sizeof(float), cudaMemcpyHostToDevice);
# 5028 "MRT.cu"
if (true)
# 5029 "MRT.cu"
{
# 5030 "MRT.cu"
(texRef_f0B.normalized) = (false);
# 5031 "MRT.cu"
(texRef_f1B.normalized) = (false);
# 5032 "MRT.cu"
(texRef_f2B.normalized) = (false);
# 5033 "MRT.cu"
(texRef_f3B.normalized) = (false);
# 5034 "MRT.cu"
(texRef_f4B.normalized) = (false);
# 5035 "MRT.cu"
(texRef_f5B.normalized) = (false);
# 5036 "MRT.cu"
(texRef_f6B.normalized) = (false);
# 5037 "MRT.cu"
(texRef_f7B.normalized) = (false);
# 5038 "MRT.cu"
(texRef_f8B.normalized) = (false);
# 5039 "MRT.cu"
(texRef_f9B.normalized) = (false);
# 5040 "MRT.cu"
(texRef_f10B.normalized) = (false);
# 5041 "MRT.cu"
(texRef_f11B.normalized) = (false);
# 5042 "MRT.cu"
(texRef_f12B.normalized) = (false);
# 5043 "MRT.cu"
(texRef_f13B.normalized) = (false);
# 5044 "MRT.cu"
(texRef_f14B.normalized) = (false);
# 5045 "MRT.cu"
(texRef_f15B.normalized) = (false);
# 5046 "MRT.cu"
(texRef_f16B.normalized) = (false);
# 5047 "MRT.cu"
(texRef_f17B.normalized) = (false);
# 5048 "MRT.cu"
(texRef_f18B.normalized) = (false);
# 5049 "MRT.cu"
(texRef_f0B.filterMode) = cudaFilterModeLinear;
# 5050 "MRT.cu"
(texRef_f1B.filterMode) = cudaFilterModeLinear;
# 5051 "MRT.cu"
(texRef_f2B.filterMode) = cudaFilterModeLinear;
# 5052 "MRT.cu"
(texRef_f3B.filterMode) = cudaFilterModeLinear;
# 5053 "MRT.cu"
(texRef_f4B.filterMode) = cudaFilterModeLinear;
# 5054 "MRT.cu"
(texRef_f5B.filterMode) = cudaFilterModeLinear;
# 5055 "MRT.cu"
(texRef_f6B.filterMode) = cudaFilterModeLinear;
# 5056 "MRT.cu"
(texRef_f7B.filterMode) = cudaFilterModeLinear;
# 5057 "MRT.cu"
(texRef_f8B.filterMode) = cudaFilterModeLinear;
# 5058 "MRT.cu"
(texRef_f9B.filterMode) = cudaFilterModeLinear;
# 5059 "MRT.cu"
(texRef_f10B.filterMode) = cudaFilterModeLinear;
# 5060 "MRT.cu"
(texRef_f11B.filterMode) = cudaFilterModeLinear;
# 5061 "MRT.cu"
(texRef_f12B.filterMode) = cudaFilterModeLinear;
# 5062 "MRT.cu"
(texRef_f13B.filterMode) = cudaFilterModeLinear;
# 5063 "MRT.cu"
(texRef_f14B.filterMode) = cudaFilterModeLinear;
# 5064 "MRT.cu"
(texRef_f15B.filterMode) = cudaFilterModeLinear;
# 5065 "MRT.cu"
(texRef_f16B.filterMode) = cudaFilterModeLinear;
# 5066 "MRT.cu"
(texRef_f17B.filterMode) = cudaFilterModeLinear;
# 5067 "MRT.cu"
(texRef_f18B.filterMode) = cudaFilterModeLinear;
# 5069 "MRT.cu"
(texRef_f0A.normalized) = (false);
# 5070 "MRT.cu"
(texRef_f1A.normalized) = (false);
# 5071 "MRT.cu"
(texRef_f2A.normalized) = (false);
# 5072 "MRT.cu"
(texRef_f3A.normalized) = (false);
# 5073 "MRT.cu"
(texRef_f4A.normalized) = (false);
# 5074 "MRT.cu"
(texRef_f5A.normalized) = (false);
# 5075 "MRT.cu"
(texRef_f6A.normalized) = (false);
# 5076 "MRT.cu"
(texRef_f7A.normalized) = (false);
# 5077 "MRT.cu"
(texRef_f8A.normalized) = (false);
# 5078 "MRT.cu"
(texRef_f9A.normalized) = (false);
# 5079 "MRT.cu"
(texRef_f10A.normalized) = (false);
# 5080 "MRT.cu"
(texRef_f11A.normalized) = (false);
# 5081 "MRT.cu"
(texRef_f12A.normalized) = (false);
# 5082 "MRT.cu"
(texRef_f13A.normalized) = (false);
# 5083 "MRT.cu"
(texRef_f14A.normalized) = (false);
# 5084 "MRT.cu"
(texRef_f15A.normalized) = (false);
# 5085 "MRT.cu"
(texRef_f16A.normalized) = (false);
# 5086 "MRT.cu"
(texRef_f17A.normalized) = (false);
# 5087 "MRT.cu"
(texRef_f18A.normalized) = (false);
# 5088 "MRT.cu"
(texRef_f0A.filterMode) = cudaFilterModeLinear;
# 5089 "MRT.cu"
(texRef_f1A.filterMode) = cudaFilterModeLinear;
# 5090 "MRT.cu"
(texRef_f2A.filterMode) = cudaFilterModeLinear;
# 5091 "MRT.cu"
(texRef_f3A.filterMode) = cudaFilterModeLinear;
# 5092 "MRT.cu"
(texRef_f4A.filterMode) = cudaFilterModeLinear;
# 5093 "MRT.cu"
(texRef_f5A.filterMode) = cudaFilterModeLinear;
# 5094 "MRT.cu"
(texRef_f6A.filterMode) = cudaFilterModeLinear;
# 5095 "MRT.cu"
(texRef_f7A.filterMode) = cudaFilterModeLinear;
# 5096 "MRT.cu"
(texRef_f8A.filterMode) = cudaFilterModeLinear;
# 5097 "MRT.cu"
(texRef_f9A.filterMode) = cudaFilterModeLinear;
# 5098 "MRT.cu"
(texRef_f10A.filterMode) = cudaFilterModeLinear;
# 5099 "MRT.cu"
(texRef_f11A.filterMode) = cudaFilterModeLinear;
# 5100 "MRT.cu"
(texRef_f12A.filterMode) = cudaFilterModeLinear;
# 5101 "MRT.cu"
(texRef_f13A.filterMode) = cudaFilterModeLinear;
# 5102 "MRT.cu"
(texRef_f14A.filterMode) = cudaFilterModeLinear;
# 5103 "MRT.cu"
(texRef_f15A.filterMode) = cudaFilterModeLinear;
# 5104 "MRT.cu"
(texRef_f16A.filterMode) = cudaFilterModeLinear;
# 5105 "MRT.cu"
(texRef_f17A.filterMode) = cudaFilterModeLinear;
# 5106 "MRT.cu"
(texRef_f18A.filterMode) = cudaFilterModeLinear;
# 5109 "MRT.cu"
(texRef_f0C.normalized) = (false);
# 5110 "MRT.cu"
(texRef_f1C.normalized) = (false);
# 5111 "MRT.cu"
(texRef_f2C.normalized) = (false);
# 5112 "MRT.cu"
(texRef_f3C.normalized) = (false);
# 5113 "MRT.cu"
(texRef_f4C.normalized) = (false);
# 5114 "MRT.cu"
(texRef_f5C.normalized) = (false);
# 5115 "MRT.cu"
(texRef_f6C.normalized) = (false);
# 5116 "MRT.cu"
(texRef_f7C.normalized) = (false);
# 5117 "MRT.cu"
(texRef_f8C.normalized) = (false);
# 5118 "MRT.cu"
(texRef_f9C.normalized) = (false);
# 5119 "MRT.cu"
(texRef_f10C.normalized) = (false);
# 5120 "MRT.cu"
(texRef_f11C.normalized) = (false);
# 5121 "MRT.cu"
(texRef_f12C.normalized) = (false);
# 5122 "MRT.cu"
(texRef_f13C.normalized) = (false);
# 5123 "MRT.cu"
(texRef_f14C.normalized) = (false);
# 5124 "MRT.cu"
(texRef_f15C.normalized) = (false);
# 5125 "MRT.cu"
(texRef_f16C.normalized) = (false);
# 5126 "MRT.cu"
(texRef_f17C.normalized) = (false);
# 5127 "MRT.cu"
(texRef_f18C.normalized) = (false);
# 5128 "MRT.cu"
(texRef_f0C.filterMode) = cudaFilterModeLinear;
# 5129 "MRT.cu"
(texRef_f1C.filterMode) = cudaFilterModeLinear;
# 5130 "MRT.cu"
(texRef_f2C.filterMode) = cudaFilterModeLinear;
# 5131 "MRT.cu"
(texRef_f3C.filterMode) = cudaFilterModeLinear;
# 5132 "MRT.cu"
(texRef_f4C.filterMode) = cudaFilterModeLinear;
# 5133 "MRT.cu"
(texRef_f5C.filterMode) = cudaFilterModeLinear;
# 5134 "MRT.cu"
(texRef_f6C.filterMode) = cudaFilterModeLinear;
# 5135 "MRT.cu"
(texRef_f7C.filterMode) = cudaFilterModeLinear;
# 5136 "MRT.cu"
(texRef_f8C.filterMode) = cudaFilterModeLinear;
# 5137 "MRT.cu"
(texRef_f9C.filterMode) = cudaFilterModeLinear;
# 5138 "MRT.cu"
(texRef_f10C.filterMode) = cudaFilterModeLinear;
# 5139 "MRT.cu"
(texRef_f11C.filterMode) = cudaFilterModeLinear;
# 5140 "MRT.cu"
(texRef_f12C.filterMode) = cudaFilterModeLinear;
# 5141 "MRT.cu"
(texRef_f13C.filterMode) = cudaFilterModeLinear;
# 5142 "MRT.cu"
(texRef_f14C.filterMode) = cudaFilterModeLinear;
# 5143 "MRT.cu"
(texRef_f15C.filterMode) = cudaFilterModeLinear;
# 5144 "MRT.cu"
(texRef_f16C.filterMode) = cudaFilterModeLinear;
# 5145 "MRT.cu"
(texRef_f17C.filterMode) = cudaFilterModeLinear;
# 5146 "MRT.cu"
(texRef_f18C.filterMode) = cudaFilterModeLinear;
# 5147 "MRT.cu"
(texRef_f0D.normalized) = (false);
# 5148 "MRT.cu"
(texRef_f1D.normalized) = (false);
# 5149 "MRT.cu"
(texRef_f2D.normalized) = (false);
# 5150 "MRT.cu"
(texRef_f3D.normalized) = (false);
# 5151 "MRT.cu"
(texRef_f4D.normalized) = (false);
# 5152 "MRT.cu"
(texRef_f5D.normalized) = (false);
# 5153 "MRT.cu"
(texRef_f6D.normalized) = (false);
# 5154 "MRT.cu"
(texRef_f7D.normalized) = (false);
# 5155 "MRT.cu"
(texRef_f8D.normalized) = (false);
# 5156 "MRT.cu"
(texRef_f9D.normalized) = (false);
# 5157 "MRT.cu"
(texRef_f10D.normalized) = (false);
# 5158 "MRT.cu"
(texRef_f11D.normalized) = (false);
# 5159 "MRT.cu"
(texRef_f12D.normalized) = (false);
# 5160 "MRT.cu"
(texRef_f13D.normalized) = (false);
# 5161 "MRT.cu"
(texRef_f14D.normalized) = (false);
# 5162 "MRT.cu"
(texRef_f15D.normalized) = (false);
# 5163 "MRT.cu"
(texRef_f16D.normalized) = (false);
# 5164 "MRT.cu"
(texRef_f17D.normalized) = (false);
# 5165 "MRT.cu"
(texRef_f18D.normalized) = (false);
# 5166 "MRT.cu"
(texRef_f0D.filterMode) = cudaFilterModeLinear;
# 5167 "MRT.cu"
(texRef_f1D.filterMode) = cudaFilterModeLinear;
# 5168 "MRT.cu"
(texRef_f2D.filterMode) = cudaFilterModeLinear;
# 5169 "MRT.cu"
(texRef_f3D.filterMode) = cudaFilterModeLinear;
# 5170 "MRT.cu"
(texRef_f4D.filterMode) = cudaFilterModeLinear;
# 5171 "MRT.cu"
(texRef_f5D.filterMode) = cudaFilterModeLinear;
# 5172 "MRT.cu"
(texRef_f6D.filterMode) = cudaFilterModeLinear;
# 5173 "MRT.cu"
(texRef_f7D.filterMode) = cudaFilterModeLinear;
# 5174 "MRT.cu"
(texRef_f8D.filterMode) = cudaFilterModeLinear;
# 5175 "MRT.cu"
(texRef_f9D.filterMode) = cudaFilterModeLinear;
# 5176 "MRT.cu"
(texRef_f10D.filterMode) = cudaFilterModeLinear;
# 5177 "MRT.cu"
(texRef_f11D.filterMode) = cudaFilterModeLinear;
# 5178 "MRT.cu"
(texRef_f12D.filterMode) = cudaFilterModeLinear;
# 5179 "MRT.cu"
(texRef_f13D.filterMode) = cudaFilterModeLinear;
# 5180 "MRT.cu"
(texRef_f14D.filterMode) = cudaFilterModeLinear;
# 5181 "MRT.cu"
(texRef_f15D.filterMode) = cudaFilterModeLinear;
# 5182 "MRT.cu"
(texRef_f16D.filterMode) = cudaFilterModeLinear;
# 5183 "MRT.cu"
(texRef_f17D.filterMode) = cudaFilterModeLinear;
# 5184 "MRT.cu"
(texRef_f18D.filterMode) = cudaFilterModeLinear;
# 5187 "MRT.cu"
for (int i = 0; i < 2; i++) {
# 5188 "MRT.cu"
((texRef_f0A.addressMode)[i]) = cudaAddressModeClamp;
# 5189 "MRT.cu"
((texRef_f1A.addressMode)[i]) = cudaAddressModeClamp;
# 5190 "MRT.cu"
((texRef_f2A.addressMode)[i]) = cudaAddressModeClamp;
# 5191 "MRT.cu"
((texRef_f3A.addressMode)[i]) = cudaAddressModeClamp;
# 5192 "MRT.cu"
((texRef_f4A.addressMode)[i]) = cudaAddressModeClamp;
# 5193 "MRT.cu"
((texRef_f5A.addressMode)[i]) = cudaAddressModeClamp;
# 5194 "MRT.cu"
((texRef_f6A.addressMode)[i]) = cudaAddressModeClamp;
# 5195 "MRT.cu"
((texRef_f7A.addressMode)[i]) = cudaAddressModeClamp;
# 5196 "MRT.cu"
((texRef_f8A.addressMode)[i]) = cudaAddressModeClamp;
# 5197 "MRT.cu"
((texRef_f9A.addressMode)[i]) = cudaAddressModeClamp;
# 5198 "MRT.cu"
((texRef_f10A.addressMode)[i]) = cudaAddressModeClamp;
# 5199 "MRT.cu"
((texRef_f11A.addressMode)[i]) = cudaAddressModeClamp;
# 5200 "MRT.cu"
((texRef_f12A.addressMode)[i]) = cudaAddressModeClamp;
# 5201 "MRT.cu"
((texRef_f13A.addressMode)[i]) = cudaAddressModeClamp;
# 5202 "MRT.cu"
((texRef_f14A.addressMode)[i]) = cudaAddressModeClamp;
# 5203 "MRT.cu"
((texRef_f15A.addressMode)[i]) = cudaAddressModeClamp;
# 5204 "MRT.cu"
((texRef_f16A.addressMode)[i]) = cudaAddressModeClamp;
# 5205 "MRT.cu"
((texRef_f17A.addressMode)[i]) = cudaAddressModeClamp;
# 5206 "MRT.cu"
((texRef_f18A.addressMode)[i]) = cudaAddressModeClamp;
# 5207 "MRT.cu"
((texRef_f0B.addressMode)[i]) = cudaAddressModeClamp;
# 5208 "MRT.cu"
((texRef_f1B.addressMode)[i]) = cudaAddressModeClamp;
# 5209 "MRT.cu"
((texRef_f2B.addressMode)[i]) = cudaAddressModeClamp;
# 5210 "MRT.cu"
((texRef_f3B.addressMode)[i]) = cudaAddressModeClamp;
# 5211 "MRT.cu"
((texRef_f4B.addressMode)[i]) = cudaAddressModeClamp;
# 5212 "MRT.cu"
((texRef_f5B.addressMode)[i]) = cudaAddressModeClamp;
# 5213 "MRT.cu"
((texRef_f6B.addressMode)[i]) = cudaAddressModeClamp;
# 5214 "MRT.cu"
((texRef_f7B.addressMode)[i]) = cudaAddressModeClamp;
# 5215 "MRT.cu"
((texRef_f8B.addressMode)[i]) = cudaAddressModeClamp;
# 5216 "MRT.cu"
((texRef_f9B.addressMode)[i]) = cudaAddressModeClamp;
# 5217 "MRT.cu"
((texRef_f10B.addressMode)[i]) = cudaAddressModeClamp;
# 5218 "MRT.cu"
((texRef_f11B.addressMode)[i]) = cudaAddressModeClamp;
# 5219 "MRT.cu"
((texRef_f12B.addressMode)[i]) = cudaAddressModeClamp;
# 5220 "MRT.cu"
((texRef_f13B.addressMode)[i]) = cudaAddressModeClamp;
# 5221 "MRT.cu"
((texRef_f14B.addressMode)[i]) = cudaAddressModeClamp;
# 5222 "MRT.cu"
((texRef_f15B.addressMode)[i]) = cudaAddressModeClamp;
# 5223 "MRT.cu"
((texRef_f16B.addressMode)[i]) = cudaAddressModeClamp;
# 5224 "MRT.cu"
((texRef_f17B.addressMode)[i]) = cudaAddressModeClamp;
# 5225 "MRT.cu"
((texRef_f18B.addressMode)[i]) = cudaAddressModeClamp;
# 5226 "MRT.cu"
}
# 5228 "MRT.cu"
}
# 5230 "MRT.cu"
cudaMemcpy2D(fA_d, pitch, fA_h, (64) * sizeof(float), (64) * sizeof(float), (64 * 64) * 19, cudaMemcpyHostToDevice);
# 5231 "MRT.cu"
cudaMemcpy2D(fB_d, pitch, fA_h, (64) * sizeof(float), (64) * sizeof(float), (64 * 64) * 19, cudaMemcpyHostToDevice);
# 5232 "MRT.cu"
if (("NO") == ("YES")) {
# 5233 "MRT.cu"
cudaMemcpy2D(fC_d, pitch2, fC_h, (64) * sizeof(float), (64) * sizeof(float), (64 * 64) * 19, cudaMemcpyHostToDevice);
# 5234 "MRT.cu"
cudaMemcpy2D(fD_d, pitch2, fC_h, (64) * sizeof(float), (64) * sizeof(float), (64 * 64) * 19, cudaMemcpyHostToDevice);
# 5235 "MRT.cu"
}
# 5243 "MRT.cu"
if (true)
# 5244 "MRT.cu"
{
# 5245 "MRT.cu"
cudaBindTexture2D(0, &texRef_f0A, fA_d, &desc, 64, 64 * 64, pitch);
# 5246 "MRT.cu"
cudaBindTexture2D(0, &texRef_f1A, fA_d + ((pitch_elements * (64)) * (64)), &desc, 64, 64 * 64, pitch);
# 5247 "MRT.cu"
cudaBindTexture2D(0, &texRef_f2A, fA_d + (((pitch_elements * (64)) * (64)) * (2)), &desc, 64, 64 * 64, pitch);
# 5248 "MRT.cu"
cudaBindTexture2D(0, &texRef_f3A, fA_d + (((pitch_elements * (64)) * (64)) * (3)), &desc, 64, 64 * 64, pitch);
# 5249 "MRT.cu"
cudaBindTexture2D(0, &texRef_f4A, fA_d + (((pitch_elements * (64)) * (64)) * (4)), &desc, 64, 64 * 64, pitch);
# 5250 "MRT.cu"
cudaBindTexture2D(0, &texRef_f5A, fA_d + (((pitch_elements * (64)) * (64)) * (5)), &desc, 64, 64 * 64, pitch);
# 5251 "MRT.cu"
cudaBindTexture2D(0, &texRef_f6A, fA_d + (((pitch_elements * (64)) * (64)) * (6)), &desc, 64, 64 * 64, pitch);
# 5252 "MRT.cu"
cudaBindTexture2D(0, &texRef_f7A, fA_d + (((pitch_elements * (64)) * (64)) * (7)), &desc, 64, 64 * 64, pitch);
# 5253 "MRT.cu"
cudaBindTexture2D(0, &texRef_f8A, fA_d + (((pitch_elements * (64)) * (64)) * (8)), &desc, 64, 64 * 64, pitch);
# 5254 "MRT.cu"
cudaBindTexture2D(0, &texRef_f9A, fA_d + (((pitch_elements * (64)) * (64)) * (9)), &desc, 64, 64 * 64, pitch);
# 5255 "MRT.cu"
cudaBindTexture2D(0, &texRef_f10A, fA_d + (((pitch_elements * (64)) * (64)) * (10)), &desc, 64, 64 * 64, pitch);
# 5256 "MRT.cu"
cudaBindTexture2D(0, &texRef_f11A, fA_d + (((pitch_elements * (64)) * (64)) * (11)), &desc, 64, 64 * 64, pitch);
# 5257 "MRT.cu"
cudaBindTexture2D(0, &texRef_f12A, fA_d + (((pitch_elements * (64)) * (64)) * (12)), &desc, 64, 64 * 64, pitch);
# 5258 "MRT.cu"
cudaBindTexture2D(0, &texRef_f13A, fA_d + (((pitch_elements * (64)) * (64)) * (13)), &desc, 64, 64 * 64, pitch);
# 5259 "MRT.cu"
cudaBindTexture2D(0, &texRef_f14A, fA_d + (((pitch_elements * (64)) * (64)) * (14)), &desc, 64, 64 * 64, pitch);
# 5260 "MRT.cu"
cudaBindTexture2D(0, &texRef_f15A, fA_d + (((pitch_elements * (64)) * (64)) * (15)), &desc, 64, 64 * 64, pitch);
# 5261 "MRT.cu"
cudaBindTexture2D(0, &texRef_f16A, fA_d + (((pitch_elements * (64)) * (64)) * (16)), &desc, 64, 64 * 64, pitch);
# 5262 "MRT.cu"
cudaBindTexture2D(0, &texRef_f17A, fA_d + (((pitch_elements * (64)) * (64)) * (17)), &desc, 64, 64 * 64, pitch);
# 5263 "MRT.cu"
cudaBindTexture2D(0, &texRef_f18A, fA_d + (((pitch_elements * (64)) * (64)) * (18)), &desc, 64, 64 * 64, pitch);
# 5264 "MRT.cu"
cudaBindTexture2D(0, &texRef_f0B, fB_d, &desc, 64, 64 * 64, pitch);
# 5265 "MRT.cu"
cudaBindTexture2D(0, &texRef_f1B, fB_d + ((pitch_elements * (64)) * (64)), &desc, 64, 64 * 64, pitch);
# 5266 "MRT.cu"
cudaBindTexture2D(0, &texRef_f2B, fB_d + (((pitch_elements * (64)) * (64)) * (2)), &desc, 64, 64 * 64, pitch);
# 5267 "MRT.cu"
cudaBindTexture2D(0, &texRef_f3B, fB_d + (((pitch_elements * (64)) * (64)) * (3)), &desc, 64, 64 * 64, pitch);
# 5268 "MRT.cu"
cudaBindTexture2D(0, &texRef_f4B, fB_d + (((pitch_elements * (64)) * (64)) * (4)), &desc, 64, 64 * 64, pitch);
# 5269 "MRT.cu"
cudaBindTexture2D(0, &texRef_f5B, fB_d + (((pitch_elements * (64)) * (64)) * (5)), &desc, 64, 64 * 64, pitch);
# 5270 "MRT.cu"
cudaBindTexture2D(0, &texRef_f6B, fB_d + (((pitch_elements * (64)) * (64)) * (6)), &desc, 64, 64 * 64, pitch);
# 5271 "MRT.cu"
cudaBindTexture2D(0, &texRef_f7B, fB_d + (((pitch_elements * (64)) * (64)) * (7)), &desc, 64, 64 * 64, pitch);
# 5272 "MRT.cu"
cudaBindTexture2D(0, &texRef_f8B, fB_d + (((pitch_elements * (64)) * (64)) * (8)), &desc, 64, 64 * 64, pitch);
# 5273 "MRT.cu"
cudaBindTexture2D(0, &texRef_f9B, fB_d + (((pitch_elements * (64)) * (64)) * (9)), &desc, 64, 64 * 64, pitch);
# 5274 "MRT.cu"
cudaBindTexture2D(0, &texRef_f10B, fB_d + (((pitch_elements * (64)) * (64)) * (10)), &desc, 64, 64 * 64, pitch);
# 5275 "MRT.cu"
cudaBindTexture2D(0, &texRef_f11B, fB_d + (((pitch_elements * (64)) * (64)) * (11)), &desc, 64, 64 * 64, pitch);
# 5276 "MRT.cu"
cudaBindTexture2D(0, &texRef_f12B, fB_d + (((pitch_elements * (64)) * (64)) * (12)), &desc, 64, 64 * 64, pitch);
# 5277 "MRT.cu"
cudaBindTexture2D(0, &texRef_f13B, fB_d + (((pitch_elements * (64)) * (64)) * (13)), &desc, 64, 64 * 64, pitch);
# 5278 "MRT.cu"
cudaBindTexture2D(0, &texRef_f14B, fB_d + (((pitch_elements * (64)) * (64)) * (14)), &desc, 64, 64 * 64, pitch);
# 5279 "MRT.cu"
cudaBindTexture2D(0, &texRef_f15B, fB_d + (((pitch_elements * (64)) * (64)) * (15)), &desc, 64, 64 * 64, pitch);
# 5280 "MRT.cu"
cudaBindTexture2D(0, &texRef_f16B, fB_d + (((pitch_elements * (64)) * (64)) * (16)), &desc, 64, 64 * 64, pitch);
# 5281 "MRT.cu"
cudaBindTexture2D(0, &texRef_f17B, fB_d + (((pitch_elements * (64)) * (64)) * (17)), &desc, 64, 64 * 64, pitch);
# 5282 "MRT.cu"
cudaBindTexture2D(0, &texRef_f18B, fB_d + (((pitch_elements * (64)) * (64)) * (18)), &desc, 64, 64 * 64, pitch);
# 5285 "MRT.cu"
cudaBindTexture2D(0, &texRef_f0C, fC_d, &desc, 64, 64 * 64, pitch2);
# 5286 "MRT.cu"
cudaBindTexture2D(0, &texRef_f1C, fC_d + ((pitch_elements2 * (64)) * (64)), &desc, 64, 64 * 64, pitch2);
# 5287 "MRT.cu"
cudaBindTexture2D(0, &texRef_f2C, fC_d + (((pitch_elements2 * (64)) * (64)) * (2)), &desc, 64, 64 * 64, pitch2);
# 5288 "MRT.cu"
cudaBindTexture2D(0, &texRef_f3C, fC_d + (((pitch_elements2 * (64)) * (64)) * (3)), &desc, 64, 64 * 64, pitch2);
# 5289 "MRT.cu"
cudaBindTexture2D(0, &texRef_f4C, fC_d + (((pitch_elements2 * (64)) * (64)) * (4)), &desc, 64, 64 * 64, pitch2);
# 5290 "MRT.cu"
cudaBindTexture2D(0, &texRef_f5C, fC_d + (((pitch_elements2 * (64)) * (64)) * (5)), &desc, 64, 64 * 64, pitch2);
# 5291 "MRT.cu"
cudaBindTexture2D(0, &texRef_f6C, fC_d + (((pitch_elements2 * (64)) * (64)) * (6)), &desc, 64, 64 * 64, pitch2);
# 5292 "MRT.cu"
cudaBindTexture2D(0, &texRef_f7C, fC_d + (((pitch_elements2 * (64)) * (64)) * (7)), &desc, 64, 64 * 64, pitch2);
# 5293 "MRT.cu"
cudaBindTexture2D(0, &texRef_f8C, fC_d + (((pitch_elements2 * (64)) * (64)) * (8)), &desc, 64, 64 * 64, pitch2);
# 5294 "MRT.cu"
cudaBindTexture2D(0, &texRef_f9C, fC_d + (((pitch_elements2 * (64)) * (64)) * (9)), &desc, 64, 64 * 64, pitch2);
# 5295 "MRT.cu"
cudaBindTexture2D(0, &texRef_f10C, fC_d + (((pitch_elements2 * (64)) * (64)) * (10)), &desc, 64, 64 * 64, pitch2);
# 5296 "MRT.cu"
cudaBindTexture2D(0, &texRef_f11C, fC_d + (((pitch_elements2 * (64)) * (64)) * (11)), &desc, 64, 64 * 64, pitch2);
# 5297 "MRT.cu"
cudaBindTexture2D(0, &texRef_f12C, fC_d + (((pitch_elements2 * (64)) * (64)) * (12)), &desc, 64, 64 * 64, pitch2);
# 5298 "MRT.cu"
cudaBindTexture2D(0, &texRef_f13C, fC_d + (((pitch_elements2 * (64)) * (64)) * (13)), &desc, 64, 64 * 64, pitch2);
# 5299 "MRT.cu"
cudaBindTexture2D(0, &texRef_f14C, fC_d + (((pitch_elements2 * (64)) * (64)) * (14)), &desc, 64, 64 * 64, pitch2);
# 5300 "MRT.cu"
cudaBindTexture2D(0, &texRef_f15C, fC_d + (((pitch_elements2 * (64)) * (64)) * (15)), &desc, 64, 64 * 64, pitch2);
# 5301 "MRT.cu"
cudaBindTexture2D(0, &texRef_f16C, fC_d + (((pitch_elements2 * (64)) * (64)) * (16)), &desc, 64, 64 * 64, pitch2);
# 5302 "MRT.cu"
cudaBindTexture2D(0, &texRef_f17C, fC_d + (((pitch_elements2 * (64)) * (64)) * (17)), &desc, 64, 64 * 64, pitch2);
# 5303 "MRT.cu"
cudaBindTexture2D(0, &texRef_f18C, fC_d + (((pitch_elements2 * (64)) * (64)) * (18)), &desc, 64, 64 * 64, pitch2);
# 5304 "MRT.cu"
cudaBindTexture2D(0, &texRef_f0D, fD_d, &desc, 64, 64 * 64, pitch2);
# 5305 "MRT.cu"
cudaBindTexture2D(0, &texRef_f1D, fD_d + ((pitch_elements2 * (64)) * (64)), &desc, 64, 64 * 64, pitch2);
# 5306 "MRT.cu"
cudaBindTexture2D(0, &texRef_f2D, fD_d + (((pitch_elements2 * (64)) * (64)) * (2)), &desc, 64, 64 * 64, pitch2);
# 5307 "MRT.cu"
cudaBindTexture2D(0, &texRef_f3D, fD_d + (((pitch_elements2 * (64)) * (64)) * (3)), &desc, 64, 64 * 64, pitch2);
# 5308 "MRT.cu"
cudaBindTexture2D(0, &texRef_f4D, fD_d + (((pitch_elements2 * (64)) * (64)) * (4)), &desc, 64, 64 * 64, pitch2);
# 5309 "MRT.cu"
cudaBindTexture2D(0, &texRef_f5D, fD_d + (((pitch_elements2 * (64)) * (64)) * (5)), &desc, 64, 64 * 64, pitch2);
# 5310 "MRT.cu"
cudaBindTexture2D(0, &texRef_f6D, fD_d + (((pitch_elements2 * (64)) * (64)) * (6)), &desc, 64, 64 * 64, pitch2);
# 5311 "MRT.cu"
cudaBindTexture2D(0, &texRef_f7D, fD_d + (((pitch_elements2 * (64)) * (64)) * (7)), &desc, 64, 64 * 64, pitch2);
# 5312 "MRT.cu"
cudaBindTexture2D(0, &texRef_f8D, fD_d + (((pitch_elements2 * (64)) * (64)) * (8)), &desc, 64, 64 * 64, pitch2);
# 5313 "MRT.cu"
cudaBindTexture2D(0, &texRef_f9D, fD_d + (((pitch_elements2 * (64)) * (64)) * (9)), &desc, 64, 64 * 64, pitch2);
# 5314 "MRT.cu"
cudaBindTexture2D(0, &texRef_f10D, fD_d + (((pitch_elements2 * (64)) * (64)) * (10)), &desc, 64, 64 * 64, pitch2);
# 5315 "MRT.cu"
cudaBindTexture2D(0, &texRef_f11D, fD_d + (((pitch_elements2 * (64)) * (64)) * (11)), &desc, 64, 64 * 64, pitch2);
# 5316 "MRT.cu"
cudaBindTexture2D(0, &texRef_f12D, fD_d + (((pitch_elements2 * (64)) * (64)) * (12)), &desc, 64, 64 * 64, pitch2);
# 5317 "MRT.cu"
cudaBindTexture2D(0, &texRef_f13D, fD_d + (((pitch_elements2 * (64)) * (64)) * (13)), &desc, 64, 64 * 64, pitch2);
# 5318 "MRT.cu"
cudaBindTexture2D(0, &texRef_f14D, fD_d + (((pitch_elements2 * (64)) * (64)) * (14)), &desc, 64, 64 * 64, pitch2);
# 5319 "MRT.cu"
cudaBindTexture2D(0, &texRef_f15D, fD_d + (((pitch_elements2 * (64)) * (64)) * (15)), &desc, 64, 64 * 64, pitch2);
# 5320 "MRT.cu"
cudaBindTexture2D(0, &texRef_f16D, fD_d + (((pitch_elements2 * (64)) * (64)) * (16)), &desc, 64, 64 * 64, pitch2);
# 5321 "MRT.cu"
cudaBindTexture2D(0, &texRef_f17D, fD_d + (((pitch_elements2 * (64)) * (64)) * (17)), &desc, 64, 64 * 64, pitch2);
# 5322 "MRT.cu"
cudaBindTexture2D(0, &texRef_f18D, fD_d + (((pitch_elements2 * (64)) * (64)) * (18)), &desc, 64, 64 * 64, pitch2);
# 5324 "MRT.cu"
}
# 5327 "MRT.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : initialize_single(fA_d, pitch_elements);
# 5328 "MRT.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : initialize_single(fB_d, pitch_elements);
# 5329 "MRT.cu"
if (("NO") == ("YES")) {
# 5330 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : initialize_LR(fC_d, pitch_elements2);
# 5331 "MRT.cu"
}
# 5333 "MRT.cu"
cudaFuncSetCacheConfig(mrt_d_single, cudaFuncCachePreferL1);
# 5334 "MRT.cu"
cudaFuncSetCacheConfig(mrt_d_hybAB, cudaFuncCachePreferL1);
# 5335 "MRT.cu"
cudaFuncSetCacheConfig(mrt_d_hybAB_force, cudaFuncCachePreferL1);
# 5336 "MRT.cu"
cudaFuncSetCacheConfig(LR_d_hybABCD_force, cudaFuncCachePreferL1);
# 5337 "MRT.cu"
cudaFuncSetCacheConfig(LR_d_hybABCD, cudaFuncCachePreferL1);
# 5338 "MRT.cu"
cudaFuncSetCacheConfig(LR_d_hybABCD2, cudaFuncCachePreferL1);
# 5339 "MRT.cu"
cudaFuncSetCacheConfig(LR_d_hybABDC2, cudaFuncCachePreferL1);
# 5340 "MRT.cu"
cudaFuncSetCacheConfig(LR_d_hybABDC_Interp, cudaFuncCachePreferL1);
# 5342 "MRT.cu"
cudaFuncSetCacheConfig(mrt_d_hybBA, cudaFuncCachePreferL1);
# 5343 "MRT.cu"
cudaFuncSetCacheConfig(mrt_d_hybBA_force, cudaFuncCachePreferL1);
# 5346 "MRT.cu"
cudaFuncSetCacheConfig(LR_d_hybBADC2, cudaFuncCachePreferL1);
# 5347 "MRT.cu"
cudaFuncSetCacheConfig(LR_d_hybBADC_Interp, cudaFuncCachePreferL1);
# 5349 "MRT.cu"
cudaFuncSetCacheConfig(ExtractFromC_d, cudaFuncCachePreferL1);
# 5351 "MRT.cu"
cudaFuncSetCacheConfig(simple_copy, cudaFuncCachePreferL1);
# 5354 "MRT.cu"
timeval tdr0, tdr1;
# 5355 "MRT.cu"
double restime;
# 5356 "MRT.cu"
cudaDeviceSynchronize();
# 5357 "MRT.cu"
gettimeofday(&tdr0, __null);
# 5358 "MRT.cu"
for (int t = 0; t < 500; t = (t + 2)) {
# 5359 "MRT.cu"
if (("SINGLE") == ("SINGLE")) {
# 5360 "MRT.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_single(fA_d, fB_d, omega, pitch_elements);
# 5362 "MRT.cu"
if (("NO") == ("YES")) {
# 5363 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_ABCD(fC_d, fD_d, omega2, pitch_elements2);
# 5364 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_ABDC(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 5366 "MRT.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : ExtractFromC_d(fB_d, pitch_elements, SF_fc);
# 5367 "MRT.cu"
}
# 5368 "MRT.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_single(fB_d, fA_d, omega, pitch_elements);
# 5370 "MRT.cu"
if (("NO") == ("YES")) {
# 5371 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_BACD(fC_d, fD_d, omega2, pitch_elements2);
# 5372 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_BADC(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 5374 "MRT.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : ExtractFromC_d(fA_d, pitch_elements, SF_fc);
# 5375 "MRT.cu"
}
# 5376 "MRT.cu"
} else {
# 5382 "MRT.cu"
if (("SINGLE") == ("HYB")) {
# 5383 "MRT.cu"
if ((t >= 10000) && (("NO") == ("NO"))) {
# 5384 "MRT.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_hybAB_force(fA_d, fB_d, omega, pitch_elements, FX_d, FY_d, FZ_d, t); } else {
# 5386 "MRT.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_hybAB(fA_d, fB_d, omega, pitch_elements); }
# 5388 "MRT.cu"
if (("NO") == ("YES")) {
# 5389 "MRT.cu"
if ((0.5F) == (0.5F))
# 5390 "MRT.cu"
{
# 5391 "MRT.cu"
if (t >= 10000) {
# 5392 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD_force(fC_d, fD_d, omega2, pitch_elements2, FX_d, FY_d, FZ_d, t); } else {
# 5394 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD(fC_d, fD_d, omega2, pitch_elements2); }
# 5396 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABDC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 5397 "MRT.cu"
} else {
# 5398 "MRT.cu"
if ((0.5F) == (0.25F))
# 5399 "MRT.cu"
{
# 5400 "MRT.cu"
if (t >= 10000) {
# 5401 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD_force(fC_d, fD_d, omega2, pitch_elements2, FX_d, FY_d, FZ_d, t); } else {
# 5403 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD(fC_d, fD_d, omega2, pitch_elements2); }
# 5405 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABDC2(fD_d, fC_d, omega2, pitch_elements2, SF_cf, 2);
# 5407 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD2(fC_d, fD_d, omega2, pitch_elements2, 3);
# 5408 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABDC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 5409 "MRT.cu"
} }
# 5411 "MRT.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : ExtractFromC_d(fB_d, pitch_elements, SF_fc);
# 5412 "MRT.cu"
}
# 5414 "MRT.cu"
if ((t >= 10000) && (("NO") == ("NO"))) {
# 5415 "MRT.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_hybBA_force(fB_d, fA_d, omega, pitch_elements, FX_d, FY_d, FZ_d, t + 1); } else {
# 5417 "MRT.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : mrt_d_hybBA(fB_d, fA_d, omega, pitch_elements); }
# 5419 "MRT.cu"
if (("NO") == ("YES")) {
# 5420 "MRT.cu"
if ((0.5F) == (0.5F))
# 5421 "MRT.cu"
{
# 5422 "MRT.cu"
if (t >= 10000) {
# 5423 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD_force(fC_d, fD_d, omega2, pitch_elements2, FX_d, FY_d, FZ_d, t + 1); } else {
# 5425 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD(fC_d, fD_d, omega2, pitch_elements2); }
# 5427 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBADC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 5428 "MRT.cu"
} else {
# 5429 "MRT.cu"
if ((0.5F) == (0.25F))
# 5430 "MRT.cu"
{
# 5431 "MRT.cu"
if (t >= 10000) {
# 5432 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD_force(fC_d, fD_d, omega2, pitch_elements2, FX_d, FY_d, FZ_d, t + 1); } else {
# 5434 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD(fC_d, fD_d, omega2, pitch_elements2); }
# 5436 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBADC2(fD_d, fC_d, omega2, pitch_elements2, SF_cf, 2);
# 5438 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybABCD2(fC_d, fD_d, omega2, pitch_elements2, 3);
# 5439 "MRT.cu"
cudaConfigureCall(grid2, threads2) ? ((void)0) : LR_d_hybBADC_Interp(fD_d, fC_d, omega2, pitch_elements2, SF_cf);
# 5440 "MRT.cu"
} }
# 5442 "MRT.cu"
cudaConfigureCall(grid, threads) ? ((void)0) : ExtractFromC_d(fA_d, pitch_elements, SF_fc);
# 5443 "MRT.cu"
}
# 5444 "MRT.cu"
} }
# 5453 "MRT.cu"
if (((t % 1000) == 0) && (t > 0)) { (((((cout << ("finished "))) << t)) << (" timesteps\n")); }
# 5454 "MRT.cu"
}
# 5455 "MRT.cu"
cudaDeviceSynchronize();
# 5457 "MRT.cu"
gettimeofday(&tdr1, __null);
# 5458 "MRT.cu"
timeval_subtract(&restime, &tdr1, &tdr0);
# 5459 "MRT.cu"
int Nodes;
# 5460 "MRT.cu"
if (("NO") == ("YES")) {
# 5461 "MRT.cu"
Nodes = (((64 * 64) * 64) + (((64 * 64) * 64) * 2));
# 5462 "MRT.cu"
} else
# 5463 "MRT.cu"
{
# 5464 "MRT.cu"
Nodes = ((64 * 64) * 64);
# 5465 "MRT.cu"
}
# 5466 "MRT.cu"
(((((((((cout << ("Time taken for main kernel: "))) << restime)) << (" ("))) << (((double)(Nodes * ((double)((500) / (1000000.0F))))) / restime))) << ("MLUPS)"));
# 5468 "MRT.cu"
if (("NO") == ("YES")) {
# 5469 "MRT.cu"
int effNodes = ((((64 * 64) * 64) + (((64 * 64) * 64) * 2)) - (((64 / 2) * (64 / 2)) * (64 / 2)));
# 5471 "MRT.cu"
(((((cout << (" (eff: "))) << (((double)(effNodes * ((double)((500) / (1000000.0F))))) / restime))) << ("MLUPS)"));
# 5472 "MRT.cu"
}
# 5473 "MRT.cu"
(cout << (std::endl));
# 5474 "MRT.cu"
(((((((((((((((((((cout << (64))) << (","))) << (64))) << (","))) << (64))) << (","))) << (500))) << (","))) << restime)) << (std::endl));
# 5477 "MRT.cu"
if (true) {
# 5478 "MRT.cu"
cudaUnbindTexture(texRef_f0A);
# 5479 "MRT.cu"
cudaUnbindTexture(texRef_f1A);
# 5480 "MRT.cu"
cudaUnbindTexture(texRef_f2A);
# 5481 "MRT.cu"
cudaUnbindTexture(texRef_f3A);
# 5482 "MRT.cu"
cudaUnbindTexture(texRef_f4A);
# 5483 "MRT.cu"
cudaUnbindTexture(texRef_f5A);
# 5484 "MRT.cu"
cudaUnbindTexture(texRef_f6A);
# 5485 "MRT.cu"
cudaUnbindTexture(texRef_f7A);
# 5486 "MRT.cu"
cudaUnbindTexture(texRef_f8A);
# 5487 "MRT.cu"
cudaUnbindTexture(texRef_f9A);
# 5488 "MRT.cu"
cudaUnbindTexture(texRef_f10A);
# 5489 "MRT.cu"
cudaUnbindTexture(texRef_f11A);
# 5490 "MRT.cu"
cudaUnbindTexture(texRef_f12A);
# 5491 "MRT.cu"
cudaUnbindTexture(texRef_f13A);
# 5492 "MRT.cu"
cudaUnbindTexture(texRef_f14A);
# 5493 "MRT.cu"
cudaUnbindTexture(texRef_f15A);
# 5494 "MRT.cu"
cudaUnbindTexture(texRef_f16A);
# 5495 "MRT.cu"
cudaUnbindTexture(texRef_f17A);
# 5496 "MRT.cu"
cudaUnbindTexture(texRef_f18A);
# 5497 "MRT.cu"
cudaUnbindTexture(texRef_f0B);
# 5498 "MRT.cu"
cudaUnbindTexture(texRef_f1B);
# 5499 "MRT.cu"
cudaUnbindTexture(texRef_f2B);
# 5500 "MRT.cu"
cudaUnbindTexture(texRef_f3B);
# 5501 "MRT.cu"
cudaUnbindTexture(texRef_f4B);
# 5502 "MRT.cu"
cudaUnbindTexture(texRef_f5B);
# 5503 "MRT.cu"
cudaUnbindTexture(texRef_f6B);
# 5504 "MRT.cu"
cudaUnbindTexture(texRef_f7B);
# 5505 "MRT.cu"
cudaUnbindTexture(texRef_f8B);
# 5506 "MRT.cu"
cudaUnbindTexture(texRef_f9B);
# 5507 "MRT.cu"
cudaUnbindTexture(texRef_f10B);
# 5508 "MRT.cu"
cudaUnbindTexture(texRef_f11B);
# 5509 "MRT.cu"
cudaUnbindTexture(texRef_f12B);
# 5510 "MRT.cu"
cudaUnbindTexture(texRef_f13B);
# 5511 "MRT.cu"
cudaUnbindTexture(texRef_f14B);
# 5512 "MRT.cu"
cudaUnbindTexture(texRef_f15B);
# 5513 "MRT.cu"
cudaUnbindTexture(texRef_f16B);
# 5514 "MRT.cu"
cudaUnbindTexture(texRef_f17B);
# 5515 "MRT.cu"
cudaUnbindTexture(texRef_f18B);
# 5517 "MRT.cu"
cudaUnbindTexture(texRef_f0C);
# 5518 "MRT.cu"
cudaUnbindTexture(texRef_f1C);
# 5519 "MRT.cu"
cudaUnbindTexture(texRef_f2C);
# 5520 "MRT.cu"
cudaUnbindTexture(texRef_f3C);
# 5521 "MRT.cu"
cudaUnbindTexture(texRef_f4C);
# 5522 "MRT.cu"
cudaUnbindTexture(texRef_f5C);
# 5523 "MRT.cu"
cudaUnbindTexture(texRef_f6C);
# 5524 "MRT.cu"
cudaUnbindTexture(texRef_f7C);
# 5525 "MRT.cu"
cudaUnbindTexture(texRef_f8C);
# 5526 "MRT.cu"
cudaUnbindTexture(texRef_f9C);
# 5527 "MRT.cu"
cudaUnbindTexture(texRef_f10C);
# 5528 "MRT.cu"
cudaUnbindTexture(texRef_f11C);
# 5529 "MRT.cu"
cudaUnbindTexture(texRef_f12C);
# 5530 "MRT.cu"
cudaUnbindTexture(texRef_f13C);
# 5531 "MRT.cu"
cudaUnbindTexture(texRef_f14C);
# 5532 "MRT.cu"
cudaUnbindTexture(texRef_f15C);
# 5533 "MRT.cu"
cudaUnbindTexture(texRef_f16C);
# 5534 "MRT.cu"
cudaUnbindTexture(texRef_f17C);
# 5535 "MRT.cu"
cudaUnbindTexture(texRef_f18C);
# 5536 "MRT.cu"
cudaUnbindTexture(texRef_f0D);
# 5537 "MRT.cu"
cudaUnbindTexture(texRef_f1D);
# 5538 "MRT.cu"
cudaUnbindTexture(texRef_f2D);
# 5539 "MRT.cu"
cudaUnbindTexture(texRef_f3D);
# 5540 "MRT.cu"
cudaUnbindTexture(texRef_f4D);
# 5541 "MRT.cu"
cudaUnbindTexture(texRef_f5D);
# 5542 "MRT.cu"
cudaUnbindTexture(texRef_f6D);
# 5543 "MRT.cu"
cudaUnbindTexture(texRef_f7D);
# 5544 "MRT.cu"
cudaUnbindTexture(texRef_f8D);
# 5545 "MRT.cu"
cudaUnbindTexture(texRef_f9D);
# 5546 "MRT.cu"
cudaUnbindTexture(texRef_f10D);
# 5547 "MRT.cu"
cudaUnbindTexture(texRef_f11D);
# 5548 "MRT.cu"
cudaUnbindTexture(texRef_f12D);
# 5549 "MRT.cu"
cudaUnbindTexture(texRef_f13D);
# 5550 "MRT.cu"
cudaUnbindTexture(texRef_f14D);
# 5551 "MRT.cu"
cudaUnbindTexture(texRef_f15D);
# 5552 "MRT.cu"
cudaUnbindTexture(texRef_f16D);
# 5553 "MRT.cu"
cudaUnbindTexture(texRef_f17D);
# 5554 "MRT.cu"
cudaUnbindTexture(texRef_f18D);
# 5555 "MRT.cu"
}
# 5557 "MRT.cu"
cudaMemcpy2D(fA_h, (64) * sizeof(float), fA_d, pitch, (64) * sizeof(float), (64 * 64) * 19, cudaMemcpyDeviceToHost);
# 5558 "MRT.cu"
if (("NO") == ("YES")) {
# 5559 "MRT.cu"
cudaMemcpy2D(fC_h, (64) * sizeof(float), fC_d, pitch2, (64) * sizeof(float), (64 * 64) * 19, cudaMemcpyDeviceToHost);
# 5560 "MRT.cu"
}
# 5561 "MRT.cu"
cudaMemcpy(FX_h, FX_d, (500) * sizeof(float), cudaMemcpyDeviceToHost);
# 5562 "MRT.cu"
cudaMemcpy(FY_h, FY_d, (500) * sizeof(float), cudaMemcpyDeviceToHost);
# 5563 "MRT.cu"
cudaMemcpy(FZ_h, FZ_d, (500) * sizeof(float), cudaMemcpyDeviceToHost);
# 5568 "MRT.cu"
(output << ("VARIABLES = \"X\",\"Y\",\"Z\",\"u\",\"v\",\"w\",\"rho\"\n"));
# 5569 "MRT.cu"
(((((((((((((output << ("ZONE F=POINT, I="))) << (64))) << (", J="))) << (64))) << (", K="))) << (64))) << ("\n"));
# 5571 "MRT.cu"
int row = 0;
# 5572 "MRT.cu"
int col = 0;
# 5573 "MRT.cu"
int dep = 0;
# 5574 "MRT.cu"
i = 0;
# 5575 "MRT.cu"
float rho, u, v, w;
# 5576 "MRT.cu"
int j;
# 5578 "MRT.cu"
for (dep = 0; dep < 64; dep++) {
# 5579 "MRT.cu"
for (row = 0; row < 64; row++) {
# 5580 "MRT.cu"
for (col = 0; col < 64; col++) {
# 5581 "MRT.cu"
i = ((((dep * 64) * 64) + (row * 64)) + col);
# 5583 "MRT.cu"
rho = (fA_h[i]);
# 5584 "MRT.cu"
for (j = 1; j < 19; j++) {
# 5585 "MRT.cu"
rho += (fA_h[i + (((64 * 64) * 64) * j)]); }
# 5588 "MRT.cu"
u = ((((((((((fA_h[i + (((64 * 64) * 64) * 1)]) - (fA_h[i + (((64 * 64) * 64) * 3)])) + (fA_h[i + (((64 * 64) * 64) * 5)])) - (fA_h[i + (((64 * 64) * 64) * 6)])) - (fA_h[i + (((64 * 64) * 64) * 7)])) + (fA_h[i + (((64 * 64) * 64) * 8)])) + (fA_h[i + (((64 * 64) * 64) * 10)])) - (fA_h[i + (((64 * 64) * 64) * 12)])) + (fA_h[i + (((64 * 64) * 64) * 15)])) - (fA_h[i + (((64 * 64) * 64) * 17)]));
# 5591 "MRT.cu"
v = ((((((((((fA_h[i + (((64 * 64) * 64) * 2)]) - (fA_h[i + (((64 * 64) * 64) * 4)])) + (fA_h[i + (((64 * 64) * 64) * 5)])) + (fA_h[i + (((64 * 64) * 64) * 6)])) - (fA_h[i + (((64 * 64) * 64) * 7)])) - (fA_h[i + (((64 * 64) * 64) * 8)])) + (fA_h[i + (((64 * 64) * 64) * 11)])) - (fA_h[i + (((64 * 64) * 64) * 13)])) + (fA_h[i + (((64 * 64) * 64) * 16)])) - (fA_h[i + (((64 * 64) * 64) * 18)]));
# 5592 "MRT.cu"
w = ((((((((((fA_h[i + (((64 * 64) * 64) * 9)]) + (fA_h[i + (((64 * 64) * 64) * 10)])) + (fA_h[i + (((64 * 64) * 64) * 11)])) + (fA_h[i + (((64 * 64) * 64) * 12)])) + (fA_h[i + (((64 * 64) * 64) * 13)])) - (fA_h[i + (((64 * 64) * 64) * 14)])) - (fA_h[i + (((64 * 64) * 64) * 15)])) - (fA_h[i + (((64 * 64) * 64) * 16)])) - (fA_h[i + (((64 * 64) * 64) * 17)])) - (fA_h[i + (((64 * 64) * 64) * 18)]));
# 5593 "MRT.cu"
(((((((((((((((((((((((((((output << col)) << (", "))) << row)) << (", "))) << dep)) << (", "))) << u)) << (","))) << v)) << (","))) << w)) << (","))) << rho)) << (std::endl));
# 5595 "MRT.cu"
}
# 5596 "MRT.cu"
}
# 5597 "MRT.cu"
}
# 5599 "MRT.cu"
if (("NO") == ("YES")) {
# 5600 "MRT.cu"
(((output << (std::endl))) << ("VARIABLES = \"X\",\"Y\",\"Z\",\"u\",\"v\",\"w\",\"rho\"\n"));
# 5601 "MRT.cu"
(((((((((((((output << ("ZONE F=POINT, I="))) << (64 - 0))) << (", J="))) << (64 - 0))) << (", K="))) << (64 - 0))) << ("\n"));
# 5603 "MRT.cu"
for (dep = 0; dep < (64 - 0); dep++) {
# 5604 "MRT.cu"
for (row = 0; row < (64 - 0); row++) {
# 5605 "MRT.cu"
for (col = 0; col < (64 - 0); col++) {
# 5606 "MRT.cu"
i = ((((dep * 64) * 64) + (row * 64)) + col);
# 5607 "MRT.cu"
rho = (fC_h[i]);
# 5608 "MRT.cu"
for (j = 1; j < 19; j++) {
# 5610 "MRT.cu"
rho += (fC_h[i + (((64 * 64) * 64) * j)]); }
# 5611 "MRT.cu"
u = ((((((((((fC_h[i + (((64 * 64) * 64) * 1)]) - (fC_h[i + (((64 * 64) * 64) * 3)])) + (fC_h[i + (((64 * 64) * 64) * 5)])) - (fC_h[i + (((64 * 64) * 64) * 6)])) - (fC_h[i + (((64 * 64) * 64) * 7)])) + (fC_h[i + (((64 * 64) * 64) * 8)])) + (fC_h[i + (((64 * 64) * 64) * 10)])) - (fC_h[i + (((64 * 64) * 64) * 12)])) + (fC_h[i + (((64 * 64) * 64) * 15)])) - (fC_h[i + (((64 * 64) * 64) * 17)]));
# 5614 "MRT.cu"
v = ((((((((((fC_h[i + (((64 * 64) * 64) * 2)]) - (fC_h[i + (((64 * 64) * 64) * 4)])) + (fC_h[i + (((64 * 64) * 64) * 5)])) + (fC_h[i + (((64 * 64) * 64) * 6)])) - (fC_h[i + (((64 * 64) * 64) * 7)])) - (fC_h[i + (((64 * 64) * 64) * 8)])) + (fC_h[i + (((64 * 64) * 64) * 11)])) - (fC_h[i + (((64 * 64) * 64) * 13)])) + (fC_h[i + (((64 * 64) * 64) * 16)])) - (fC_h[i + (((64 * 64) * 64) * 18)]));
# 5615 "MRT.cu"
w = ((((((((((fC_h[i + (((64 * 64) * 64) * 9)]) + (fC_h[i + (((64 * 64) * 64) * 10)])) + (fC_h[i + (((64 * 64) * 64) * 11)])) + (fC_h[i + (((64 * 64) * 64) * 12)])) + (fC_h[i + (((64 * 64) * 64) * 13)])) - (fC_h[i + (((64 * 64) * 64) * 14)])) - (fC_h[i + (((64 * 64) * 64) * 15)])) - (fC_h[i + (((64 * 64) * 64) * 16)])) - (fC_h[i + (((64 * 64) * 64) * 17)])) - (fC_h[i + (((64 * 64) * 64) * 18)]));
# 5616 "MRT.cu"
(((((((((((((((((((((((((((output << ((15.75F) + (col * (0.5F))))) << (", "))) << ((15.75F) + (row * (0.5F))))) << (", "))) << ((15.75F) + (dep * (0.5F))))) << (", "))) << u)) << (","))) << v)) << (","))) << w)) << (","))) << rho)) << (std::endl));
# 5619 "MRT.cu"
}
# 5620 "MRT.cu"
}
# 5621 "MRT.cu"
}
# 5622 "MRT.cu"
}
# 5624 "MRT.cu"
output.close();
# 5627 "MRT.cu"
for (int t = 0; t < 500; t++) {
# 5628 "MRT.cu"
(((((((((((((((output2 << t)) << (", "))) << ((FX_h[t]) / ((((((0.5F) * (0.07999999821F)) * (0.07999999821F)) * (4.0F)) * (4.0F)) * (3.141580105F))))) << (", "))) << ((FY_h[t]) / ((((((0.5F) * (0.07999999821F)) * (0.07999999821F)) * (4.0F)) * (4.0F)) * (3.141580105F))))) << (", "))) << ((FZ_h[t]) / ((((((0.5F) * (0.07999999821F)) * (0.07999999821F)) * (4.0F)) * (4.0F)) * (3.141580105F))))) << (std::endl));
# 5631 "MRT.cu"
}
# 5632 "MRT.cu"
output2.close();
# 5639 "MRT.cu"
cudaFree(fA_d);
# 5640 "MRT.cu"
cudaFree(fB_d);
# 5641 "MRT.cu"
cudaFree(fC_d);
# 5642 "MRT.cu"
cudaFree(fD_d);
# 5643 "MRT.cu"
return 0;
# 5645 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
# 1 "MRT.cudafe1.stub.c"
# 1 "MRT.cudafe1.stub.c" 1 3
# 1 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 1 3
# 74 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 3
template <typename T>
static inline void *__cudaAddressOf(T &val)
{
    return (void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val))));
}
# 103 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 3
extern "C" {

extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);



extern int atexit(void(*)(void)) throw();







}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

# 1 "/usr/local/cuda/bin/../include/common_functions.h" 1 3
# 159 "/usr/local/cuda/bin/../include/common_functions.h" 3
# 1 "/usr/local/cuda/bin/../include/math_functions.h" 1 3
# 2935 "/usr/local/cuda/bin/../include/math_functions.h" 3
# 1 "/usr/local/cuda/bin/../include/math_constants.h" 1 3
# 2936 "/usr/local/cuda/bin/../include/math_functions.h" 2 3
# 5550 "/usr/local/cuda/bin/../include/math_functions.h" 3
# 1 "/usr/local/cuda/bin/../include/crt/func_macro.h" 1 3
# 5551 "/usr/local/cuda/bin/../include/math_functions.h" 2 3
# 7292 "/usr/local/cuda/bin/../include/math_functions.h" 3
inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  }
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a);
  if (x < 32.0) {
# 7577 "/usr/local/cuda/bin/../include/math_functions.h" 3
    t1 = x - 4.0;
    t2 = x + 4.0;
    t2 = t1 / t2;

    t1 = - 3.5602694826817400E-010;
    t1 = t1 * t2 - 9.7239122591447274E-009;
    t1 = t1 * t2 - 8.9350224851649119E-009;
    t1 = t1 * t2 + 1.0404430921625484E-007;
    t1 = t1 * t2 + 5.8806698585341259E-008;
    t1 = t1 * t2 - 8.2147414929116908E-007;
    t1 = t1 * t2 + 3.0956409853306241E-007;
    t1 = t1 * t2 + 5.7087871844325649E-006;
    t1 = t1 * t2 - 1.1231787437600085E-005;
    t1 = t1 * t2 - 2.4399558857200190E-005;
    t1 = t1 * t2 + 1.5062557169571788E-004;
    t1 = t1 * t2 - 1.9925637684786154E-004;
    t1 = t1 * t2 - 7.5777429182785833E-004;
    t1 = t1 * t2 + 5.0319698792599572E-003;
    t1 = t1 * t2 - 1.6197733895953217E-002;
    t1 = t1 * t2 + 3.7167515553018733E-002;
    t1 = t1 * t2 - 6.6330365827532434E-002;
    t1 = t1 * t2 + 9.3732834997115544E-002;
    t1 = t1 * t2 - 1.0103906603555676E-001;
    t1 = t1 * t2 + 6.8097054254735140E-002;
    t1 = t1 * t2 + 1.5379652102605428E-002;
    t1 = t1 * t2 - 1.3962111684056291E-001;
    t1 = t1 * t2 + 1.2329951186255526E+000;

    t2 = 2.0 * x + 1.0;
    t1 = t1 / t2;
  } else {

    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 = -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {

    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

inline float cospif(float a)
{
  return (float)cospi((double)a);
}

inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}







inline int min(int a, int b)
{
  return a < b ? a : b;
}

inline unsigned int umin(unsigned int a, unsigned int b)
{
  return a < b ? a : b;
}

inline long long int llmin(long long int a, long long int b)
{
  return a < b ? a : b;
}

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b)
{
  return a < b ? a : b;
}

inline int max(int a, int b)
{
  return a > b ? a : b;
}

inline unsigned int umax(unsigned int a, unsigned int b)
{
  return a > b ? a : b;
}

inline long long int llmax(long long int a, long long int b)
{
  return a > b ? a : b;
}

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b)
{
  return a > b ? a : b;
}
# 7730 "/usr/local/cuda/bin/../include/math_functions.h" 3
# 1 "/usr/local/cuda/bin/../include/math_functions_dbl_ptx3.h" 1 3
# 7731 "/usr/local/cuda/bin/../include/math_functions.h" 2 3
# 160 "/usr/local/cuda/bin/../include/common_functions.h" 2 3
# 176 "/usr/local/cuda/bin/../include/crt/host_runtime.h" 2 3







#pragma pack()
# 2 "MRT.cudafe1.stub.c" 2 3
# 1 "MRT.fatbin.c" 1 3


asm(
".section .nv_fatbin, \"a\"\n"
".align 8\n"
"fatbinData:\n"
".quad 0x00100001ba55ed50,0x00000000000dbf70,0x0000004001000002,0x0000000000029cc8\n"
".quad 0x0000000000000000,0x0000001400010004,0x0000000600000038,0x0000000000000015\n"
".quad 0x0000000000000000,0x000075632e54524d,0x33010102464c457f,0x0000000000000004\n"
".quad 0x0000000100be0002,0x0000000000000000,0x0000000000029590,0x0000000000000040\n"
".quad 0x0038004000140514,0x0001006e00400021,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000300000001,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000001bc0,0x0000000000000f2d,0x0000000000000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x000000030000000b,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000002aed,0x0000000000000624,0x0000000000000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000200000013,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000003111,0x0000000000001458,0x0000006f00000002\n"
".quad 0x0000000000000001,0x0000000000000018,0x00000001000006d6,0x0000000000000006\n"
".quad 0x0000000000000000,0x0000000000004569,0x00000000000026a0,0x3f00003900000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000a80,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000006c09,0x0000000000000044,0x0000000400000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000a5d,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000006c4d,0x0000000000000040,0x0000000400000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000006f0,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000006c8d,0x0000000000000154,0x0000000400000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x000000010000069d,0x0000000000000006\n"
".quad 0x0000000000000000,0x0000000000006de1,0x00000000000000f8,0x0800003700000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000da1,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000006ed9,0x0000000000000038,0x0000000800000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000006b8,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000006f11,0x0000000000000050,0x0000000800000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000100000622,0x0000000000000006\n"
".quad 0x0000000000000000,0x0000000000006f61,0x00000000000002f0,0x1600003500000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000c74,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000007251,0x00000000000000c0,0x0000000b00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x000000010000065e,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000007311,0x0000000000000154,0x0000000b00000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x00000001000005df,0x0000000000000006\n"
".quad 0x0000000000000000,0x0000000000007465,0x0000000000001878,0x3100003300000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000d79,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000008cdd,0x0000000000000048,0x0000000e00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000d50,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000008d25,0x0000000000000028,0x0000000e00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000005ff,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000008d4d,0x00000000000000f8,0x0000000e00000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x00000001000005a4,0x0000000000000006\n"
".quad 0x0000000000000000,0x0000000000008e45,0x00000000000016a0,0x3200003100000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000de9,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000000a4e5,0x0000000000000040,0x0000001200000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000dc4,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000000a525,0x0000000000000030,0x0000001200000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000005c0,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000000a555,0x00000000000000d8,0x0000001200000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x000000010000054d,0x0000000000100006\n"
".quad 0x0000000000000000,0x000000000000a62d,0x0000000000001b90,0x3300002f00000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000ed9,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000000c1bd,0x000000000000005c,0x0000001600000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000ea6,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000000c219,0x0000000000000028,0x0000001600000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000577,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000000c241,0x0000000000000118,0x0000001600000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000800000e77,0x0000000000000003\n"
".quad 0x0000000000000000,0x000000000000c359,0x0000000000000304,0x0000001600000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000500,0x0000000000000006\n"
".quad 0x0000000000000000,0x000000000000c359,0x0000000000002540,0x3f00002d00000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000b1b,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000000e899,0x0000000000000044,0x0000001b00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000aed,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000000e8dd,0x0000000000000040,0x0000001b00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000525,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000000e91d,0x00000000000001cc,0x0000001b00000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x00000001000004bf,0x0000000000000006\n"
".quad 0x0000000000000000,0x000000000000eae9,0x0000000000000588,0x1600002b00000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000e50,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000000f071,0x0000000000000030,0x0000001f00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000004de,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000000f0a1,0x0000000000000040,0x0000001f00000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x000000010000047e,0x0000000000000006\n"
".quad 0x0000000000000000,0x000000000000f0e1,0x0000000000001878,0x3100002900000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000a1a,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000010959,0x0000000000000044,0x0000002200000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000009f2,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000001099d,0x0000000000000028,0x0000002200000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x000000010000049d,0x0000000000000002\n"
".quad 0x0000000000000000,0x00000000000109c5,0x00000000000000e8,0x0000002200000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000100000447,0x0000000000000006\n"
".quad 0x0000000000000000,0x0000000000010aad,0x00000000000026a0,0x3f00002700000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000b6b,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000001314d,0x0000000000000044,0x0000002600000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000b48,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000013191,0x0000000000000040,0x0000002600000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000461,0x0000000000000002\n"
".quad 0x0000000000000000,0x00000000000131d1,0x0000000000000154,0x0000002600000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x00000001000003f2,0x0000000000100006\n"
".quad 0x0000000000000000,0x0000000000013325,0x0000000000001680,0x3300002500000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x000000010000088a,0x0000000000000002\n"
".quad 0x0000000000000000,0x00000000000149a5,0x000000000000005c,0x0000002a00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000858,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000014a01,0x0000000000000028,0x0000002a00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x000000010000041b,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000014a29,0x0000000000000118,0x0000002a00000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x000000080000082a,0x0000000000000003\n"
".quad 0x0000000000000000,0x0000000000014b41,0x0000000000000304,0x0000002a00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000003b5,0x0000000000000006\n"
".quad 0x0000000000000000,0x0000000000014b41,0x0000000000000dc0,0x3400002300000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000009cd,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000015901,0x0000000000000034,0x0000002f00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000009a7,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000015935,0x000000000000001c,0x0000002f00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000003d2,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000015951,0x0000000000000134,0x0000002f00000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000100000376,0x0000000000000006\n"
".quad 0x0000000000000000,0x0000000000015a85,0x0000000000001868,0x3100002100000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000c05,0x0000000000000002\n"
".quad 0x0000000000000000,0x00000000000172ed,0x0000000000000044,0x0000003300000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000bde,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000017331,0x0000000000000028,0x0000003300000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000394,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000017359,0x00000000000000e8,0x0000003300000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000100000341,0x0000000000000006\n"
".quad 0x0000000000000000,0x0000000000017441,0x00000000000019b8,0x3100001f00000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000007e6,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000018df9,0x0000000000000040,0x0000003700000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000007c4,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000018e39,0x0000000000000028,0x0000003700000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x000000010000035a,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000018e61,0x0000000000000060,0x0000003700000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000100000316,0x0000000000000006\n"
".quad 0x0000000000000000,0x0000000000018ec1,0x00000000000001a0,0x0600001d00000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000a41,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000019061,0x0000000000000028,0x0000003b00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x000000010000032a,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000019089,0x0000000000000020,0x0000003b00000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x00000001000002dd,0x0000000000000006\n"
".quad 0x0000000000000000,0x00000000000190a9,0x0000000000000310,0x1600001b00000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000007a1,0x0000000000000002\n"
".quad 0x0000000000000000,0x00000000000193b9,0x0000000000000030,0x0000003e00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000002f8,0x0000000000000002\n"
".quad 0x0000000000000000,0x00000000000193e9,0x0000000000000034,0x0000003e00000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x000000010000029e,0x0000000000000006\n"
".quad 0x0000000000000000,0x000000000001941d,0x0000000000001868,0x3100001900000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000d2a,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000001ac85,0x0000000000000044,0x0000004100000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000d03,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000001acc9,0x0000000000000028,0x0000004100000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000002bc,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000001acf1,0x00000000000000e8,0x0000004100000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000100000263,0x0000000000000006\n"
".quad 0x0000000000000000,0x000000000001add9,0x00000000000016a0,0x3200001700000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000c50,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000001c479,0x0000000000000040,0x0000004500000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000c2b,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000001c4b9,0x0000000000000030,0x0000004500000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x000000010000027f,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000001c4e9,0x00000000000000d8,0x0000004500000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x000000010000020c,0x0000000000100006\n"
".quad 0x0000000000000000,0x000000000001c5c1,0x0000000000001b38,0x3300001500000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x000000010000076f,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000001e0f9,0x000000000000005c,0x0000004900000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x000000010000073c,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000001e155,0x0000000000000028,0x0000004900000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000236,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000001e17d,0x0000000000000118,0x0000004900000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x000000080000070d,0x0000000000000003\n"
".quad 0x0000000000000000,0x000000000001e295,0x0000000000000304,0x0000004900000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000001c9,0x0000000000000006\n"
".quad 0x0000000000000000,0x000000000001e295,0x0000000000001878,0x3100001300000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000bb6,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000001fb0d,0x0000000000000048,0x0000004e00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000b8d,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000001fb55,0x0000000000000028,0x0000004e00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000001e9,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000001fb7d,0x00000000000000f8,0x0000004e00000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x000000010000018c,0x0000000000000006\n"
".quad 0x0000000000000000,0x000000000001fc75,0x0000000000001a78,0x3100001100000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000ac8,0x0000000000000002\n"
".quad 0x0000000000000000,0x00000000000216ed,0x0000000000000040,0x0000005200000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000aa2,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000002172d,0x0000000000000030,0x0000005200000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000001a9,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000002175d,0x0000000000000060,0x0000005200000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x000000010000014f,0x0000000000000006\n"
".quad 0x0000000000000000,0x00000000000217bd,0x0000000000001850,0x3100000f00000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000cde,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000002300d,0x0000000000000040,0x0000005600000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000cb8,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000002304d,0x0000000000000028,0x0000005600000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x000000010000016c,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000023075,0x00000000000000d8,0x0000005600000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x000000010000011a,0x0000000000000006\n"
".quad 0x0000000000000000,0x000000000002314d,0x00000000000019b8,0x3100000d00000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000e2f,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000024b05,0x0000000000000040,0x0000005a00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000e0d,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000024b45,0x0000000000000028,0x0000005a00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000133,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000024b6d,0x0000000000000060,0x0000005a00000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x00000001000000c5,0x0000000000100006\n"
".quad 0x0000000000000000,0x0000000000024bcd,0x0000000000001680,0x3300000b00000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000976,0x0000000000000002\n"
".quad 0x0000000000000000,0x000000000002624d,0x000000000000005c,0x0000005e00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000944,0x0000000000000002\n"
".quad 0x0000000000000000,0x00000000000262a9,0x0000000000000028,0x0000005e00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000000ee,0x0000000000000002\n"
".quad 0x0000000000000000,0x00000000000262d1,0x0000000000000118,0x0000005e00000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000800000916,0x0000000000000003\n"
".quad 0x0000000000000000,0x00000000000263e9,0x0000000000000304,0x0000005e00000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x000000010000008c,0x0000000000000006\n"
".quad 0x0000000000000000,0x00000000000263e9,0x00000000000000c0,0x0800000900000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000807,0x0000000000000002\n"
".quad 0x0000000000000000,0x00000000000264a9,0x0000000000000038,0x0000006300000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000000a7,0x0000000000000002\n"
".quad 0x0000000000000000,0x00000000000264e1,0x0000000000000050,0x0000006300000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000100000036,0x0000000000000006\n"
".quad 0x0000000000000000,0x0000000000026531,0x0000000000002540,0x3f00000600000003\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000008e9,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000028a71,0x0000000000000044,0x0000006600000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x00000001000008bb,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000028ab5,0x0000000000000040,0x0000006600000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x000000010000005b,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000028af5,0x00000000000001cc,0x0000006600000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000100000f0b,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000028cc1,0x0000000000000020,0x0000000000000000\n"
".quad 0x0000000000000008,0x0000000000000000,0x0000000900000f1a,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000028ce1,0x0000000000000040,0x0000006a00000003\n"
".quad 0x0000000000000004,0x0000000000000010,0x000000010000001b,0x0000000000000003\n"
".quad 0x0000000000000000,0x0000000000028d21,0x000000000000000f,0x0000000000000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000083,0x0000000000000002\n"
".quad 0x0000000000000000,0x0000000000028d30,0x0000000000000860,0x0000000000000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x7472747368732e00,0x747274732e006261\n"
".quad 0x746d79732e006261,0x672e766e2e006261,0x6e692e6c61626f6c,0x672e766e2e007469\n"
".quad 0x742e006c61626f6c,0x39315a5f2e747865,0x6279685f645f524c,0x746e495f43444241\n"
".quad 0x665f536650707265,0x692e766e2e00666d,0x39315a5f2e6f666e,0x6279685f645f524c\n"
".quad 0x746e495f43444241,0x665f536650707265,0x692e766e2e00666d,0x7865742e006f666e\n"
".quad 0x697331315a5f2e74,0x7865745f656c706d,0x2e006d5f53665074,0x2e6f666e692e766e\n"
".quad 0x706d697331315a5f,0x50747865745f656c,0x65742e006d5f5366,0x6d37315a5f2e7478\n"
".quad 0x6279685f645f7472,0x6563726f665f4241,0x5f536d665f536650,0x6e2e00695f535f53\n"
".quad 0x5f2e6f666e692e76,0x645f74726d37315a,0x665f42416279685f,0x5f5366506563726f\n"
".quad 0x5f535f535f536d66,0x2e747865742e0069,0x5f645f524c395a5f,0x5f53665044434241\n"
".quad 0x692e766e2e006d66,0x4c395a5f2e6f666e,0x444342415f645f52,0x2e006d665f536650\n"
".quad 0x315a5f2e74786574,0x79685f645f524c32,0x5366504443424162,0x2e766e2e006d665f\n"
".quad 0x315a5f2e6f666e69,0x79685f645f524c32,0x5366504443424162,0x7865742e006d665f\n"
".quad 0x726d32315a5f2e74,0x676e69735f645f74,0x6d665f536650656c,0x666e692e766e2e00\n"
".quad 0x726d32315a5f2e6f,0x676e69735f645f74,0x6d665f536650656c,0x5f2e747865742e00\n"
".quad 0x5f645f524c33315a,0x3243444142627968,0x69666d665f536650,0x666e692e766e2e00\n"
".quad 0x524c33315a5f2e6f,0x41426279685f645f,0x665f536650324344,0x7865742e0069666d\n"
".quad 0x524c38315a5f2e74,0x42416279685f645f,0x6563726f665f4443,0x5f536d665f536650\n"
".quad 0x6e2e00695f535f53,0x5f2e6f666e692e76,0x5f645f524c38315a,0x5f44434241627968\n"
".quad 0x5366506563726f66,0x535f535f536d665f,0x747865742e00695f,0x74726d31315a5f2e\n"
".quad 0x42416279685f645f,0x2e006d665f536650,0x2e6f666e692e766e,0x5f74726d31315a5f\n"
".quad 0x5042416279685f64,0x742e006d665f5366,0x32315a5f2e747865,0x6279685f645f524c\n"
".quad 0x5f53665043444241,0x2e766e2e00666d66,0x315a5f2e6f666e69,0x79685f645f524c32\n"
".quad 0x5366504344424162,0x65742e00666d665f,0x6933315a5f2e7478,0x7a696c616974696e\n"
".quad 0x006d6650524c5f65,0x6f666e692e766e2e,0x696e6933315a5f2e,0x5f657a696c616974\n"
".quad 0x742e006d6650524c,0x74385a5f2e747865,0x50636e7566747365,0x6e692e766e2e0066\n"
".quad 0x6574385a5f2e6f66,0x6650636e75667473,0x5f2e747865742e00,0x425f645f524c395a\n"
".quad 0x665f536650444341,0x6e692e766e2e006d,0x524c395a5f2e6f66,0x50444341425f645f\n"
".quad 0x742e006d665f5366,0x32315a5f2e747865,0x6279685f645f524c,0x5f53665043444142\n"
".quad 0x2e766e2e00666d66,0x315a5f2e6f666e69,0x79685f645f524c32,0x5366504344414262\n"
".quad 0x65742e00666d665f,0x4534315a5f2e7478,0x7246746361727478,0x6d6650645f436d6f\n"
".quad 0x6e692e766e2e0066,0x4534315a5f2e6f66,0x7246746361727478,0x6d6650645f436d6f\n"
".quad 0x2e747865742e0066,0x5f74726d37315a5f,0x5f41426279685f64,0x5366506563726f66\n"
".quad 0x535f535f536d665f,0x692e766e2e00695f,0x37315a5f2e6f666e,0x79685f645f74726d\n"
".quad 0x63726f665f414262,0x536d665f53665065,0x2e00695f535f535f,0x395a5f2e74786574\n"
".quad 0x4442415f645f524c,0x666d665f53665043,0x666e692e766e2e00,0x5f524c395a5f2e6f\n"
".quad 0x6650434442415f64,0x742e00666d665f53,0x33315a5f2e747865,0x6279685f645f524c\n"
".quad 0x5366503244434241,0x766e2e00696d665f,0x5a5f2e6f666e692e,0x685f645f524c3331\n"
".quad 0x5032444342416279,0x2e00696d665f5366,0x315a5f2e74786574,0x6c616974696e6937\n"
".quad 0x676e69735f657a69,0x6e2e006d6650656c,0x5f2e6f666e692e76,0x6974696e6937315a\n"
".quad 0x69735f657a696c61,0x006d6650656c676e,0x5a5f2e747865742e,0x685f645f524c3931\n"
".quad 0x495f434441426279,0x536650707265746e,0x766e2e00666d665f,0x5a5f2e6f666e692e\n"
".quad 0x685f645f524c3931,0x495f434441426279,0x536650707265746e,0x65742e00666d665f\n"
".quad 0x4c38315a5f2e7478,0x426279685f645f52,0x63726f665f444341,0x536d665f53665065\n"
".quad 0x2e00695f535f535f,0x2e6f666e692e766e,0x645f524c38315a5f,0x444341426279685f\n"
".quad 0x66506563726f665f,0x5f535f536d665f53,0x7865742e00695f53,0x726d31315a5f2e74\n"
".quad 0x426279685f645f74,0x006d665f53665041,0x6f666e692e766e2e,0x74726d31315a5f2e\n"
".quad 0x41426279685f645f,0x2e006d665f536650,0x315a5f2e74786574,0x79685f645f524c33\n"
".quad 0x6650324344424162,0x2e0069666d665f53,0x2e6f666e692e766e,0x645f524c33315a5f\n"
".quad 0x434442416279685f,0x666d665f53665032,0x2e747865742e0069,0x74696e6930315a5f\n"
".quad 0x6650657a696c6169,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x6e2e006d5f535f53,0x5f2e6f666e692e76,0x6974696e6930315a\n"
".quad 0x536650657a696c61,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x65742e006d5f535f,0x7331315a5f2e7478,0x6f635f656c706d69\n"
".quad 0x006d5f5366507970,0x6f666e692e766e2e,0x6d697331315a5f2e,0x79706f635f656c70\n"
".quad 0x742e006d5f536650,0x4c395a5f2e747865,0x434441425f645f52,0x00666d665f536650\n"
".quad 0x6f666e692e766e2e,0x645f524c395a5f2e,0x536650434441425f,0x766e2e00666d665f\n"
".quad 0x2e6465726168732e,0x645f524c38315a5f,0x444342416279685f,0x66506563726f665f\n"
".quad 0x5f535f536d665f53,0x2e766e2e00695f53,0x746e6174736e6f63,0x4c38315a5f2e3631\n"
".quad 0x416279685f645f52,0x63726f665f444342,0x536d665f53665065,0x2e00695f535f535f\n"
".quad 0x74736e6f632e766e,0x315a5f2e30746e61,0x79685f645f524c38,0x6f665f4443424162\n"
".quad 0x665f536650656372,0x695f535f535f536d,0x6e6f632e766e2e00,0x5f2e30746e617473\n"
".quad 0x6974696e6933315a,0x524c5f657a696c61,0x2e766e2e006d6650,0x746e6174736e6f63\n"
".quad 0x524c395a5f2e3631,0x50444341425f645f,0x6e2e006d665f5366,0x6174736e6f632e76\n"
".quad 0x4c395a5f2e30746e,0x444341425f645f52,0x2e006d665f536650,0x74736e6f632e766e\n"
".quad 0x315a5f2e30746e61,0x5f656c706d697331,0x5f53665074786574,0x68732e766e2e006d\n"
".quad 0x315a5f2e64657261,0x685f645f74726d37,0x726f665f41426279,0x6d665f5366506563\n"
".quad 0x00695f535f535f53,0x736e6f632e766e2e,0x5f2e3631746e6174,0x645f74726d37315a\n"
".quad 0x665f41426279685f,0x5f5366506563726f,0x5f535f535f536d66,0x6f632e766e2e0069\n"
".quad 0x2e30746e6174736e,0x5f74726d37315a5f,0x5f41426279685f64,0x5366506563726f66\n"
".quad 0x535f535f536d665f,0x632e766e2e00695f,0x31746e6174736e6f,0x524c39315a5f2e36\n"
".quad 0x42416279685f645f,0x7265746e495f4344,0x666d665f53665070,0x6e6f632e766e2e00\n"
".quad 0x5f2e30746e617473,0x5f645f524c39315a,0x5f43444241627968,0x6650707265746e49\n"
".quad 0x6e2e00666d665f53,0x6465726168732e76,0x74726d37315a5f2e,0x42416279685f645f\n"
".quad 0x66506563726f665f,0x5f535f536d665f53,0x2e766e2e00695f53,0x746e6174736e6f63\n"
".quad 0x6d37315a5f2e3631,0x6279685f645f7472,0x6563726f665f4241,0x5f536d665f536650\n"
".quad 0x6e2e00695f535f53,0x6174736e6f632e76,0x37315a5f2e30746e,0x79685f645f74726d\n"
".quad 0x63726f665f424162,0x536d665f53665065,0x2e00695f535f535f,0x74736e6f632e766e\n"
".quad 0x5a5f2e3631746e61,0x6361727478453431,0x645f436d6f724674,0x766e2e00666d6650\n"
".quad 0x6e6174736e6f632e,0x4534315a5f2e3074,0x7246746361727478,0x6d6650645f436d6f\n"
".quad 0x6f632e766e2e0066,0x3631746e6174736e,0x5f524c33315a5f2e,0x4342416279685f64\n"
".quad 0x6d665f5366503244,0x6f632e766e2e0069,0x2e30746e6174736e,0x645f524c33315a5f\n"
".quad 0x444342416279685f,0x696d665f53665032,0x6e6f632e766e2e00,0x5f2e30746e617473\n"
".quad 0x756674736574385a,0x766e2e006650636e,0x6e6174736e6f632e,0x4c395a5f2e363174\n"
".quad 0x434441425f645f52,0x00666d665f536650,0x736e6f632e766e2e,0x5a5f2e30746e6174\n"
".quad 0x41425f645f524c39,0x6d665f5366504344,0x6f632e766e2e0066,0x3631746e6174736e\n"
".quad 0x74726d32315a5f2e,0x6c676e69735f645f,0x006d665f53665065,0x736e6f632e766e2e\n"
".quad 0x5a5f2e30746e6174,0x5f645f74726d3231,0x6650656c676e6973,0x766e2e006d665f53\n"
".quad 0x6e6174736e6f632e,0x39315a5f2e363174,0x6279685f645f524c,0x746e495f43444142\n"
".quad 0x665f536650707265,0x632e766e2e00666d,0x30746e6174736e6f,0x5f524c39315a5f2e\n"
".quad 0x4441426279685f64,0x707265746e495f43,0x00666d665f536650,0x736e6f632e766e2e\n"
".quad 0x5f2e3631746e6174,0x415f645f524c395a,0x665f536650434442,0x632e766e2e00666d\n"
".quad 0x30746e6174736e6f,0x645f524c395a5f2e,0x536650434442415f,0x766e2e00666d665f\n"
".quad 0x6e6174736e6f632e,0x33315a5f2e363174,0x6279685f645f524c,0x5366503243444142\n"
".quad 0x6e2e0069666d665f,0x6174736e6f632e76,0x33315a5f2e30746e,0x6279685f645f524c\n"
".quad 0x5366503243444142,0x6e2e0069666d665f,0x6174736e6f632e76,0x315a5f2e3631746e\n"
".quad 0x79685f645f524c32,0x5366504344414262,0x766e2e00666d665f,0x6e6174736e6f632e\n"
".quad 0x4c32315a5f2e3074,0x426279685f645f52,0x665f536650434441,0x632e766e2e00666d\n"
".quad 0x31746e6174736e6f,0x726d31315a5f2e36,0x416279685f645f74,0x006d665f53665042\n"
".quad 0x736e6f632e766e2e,0x5a5f2e30746e6174,0x5f645f74726d3131,0x5366504241627968\n"
".quad 0x2e766e2e006d665f,0x746e6174736e6f63,0x6e6930315a5f2e30,0x657a696c61697469\n"
".quad 0x5f535f535f536650,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x006d5f535f535f53,0x736e6f632e766e2e,0x5f2e3631746e6174,0x5f645f524c32315a\n"
".quad 0x5044434241627968,0x6e2e006d665f5366,0x6174736e6f632e76,0x32315a5f2e30746e\n"
".quad 0x6279685f645f524c,0x5f53665044434241,0x632e766e2e006d66,0x31746e6174736e6f\n"
".quad 0x524c32315a5f2e36,0x42416279685f645f,0x6d665f5366504344,0x6f632e766e2e0066\n"
".quad 0x2e30746e6174736e,0x645f524c32315a5f,0x434442416279685f,0x00666d665f536650\n"
".quad 0x736e6f632e766e2e,0x5f2e3631746e6174,0x5f645f524c33315a,0x3243444241627968\n"
".quad 0x69666d665f536650,0x6e6f632e766e2e00,0x5f2e30746e617473,0x5f645f524c33315a\n"
".quad 0x3243444241627968,0x69666d665f536650,0x6e6f632e766e2e00,0x5f2e30746e617473\n"
".quad 0x6c706d697331315a,0x665079706f635f65,0x2e766e2e006d5f53,0x746e6174736e6f63\n"
".quad 0x6d31315a5f2e3631,0x6279685f645f7472,0x6d665f5366504142,0x6e6f632e766e2e00\n"
".quad 0x5f2e30746e617473,0x645f74726d31315a,0x665041426279685f,0x766e2e006d665f53\n"
".quad 0x6e6174736e6f632e,0x4c395a5f2e363174,0x444342415f645f52,0x2e006d665f536650\n"
".quad 0x74736e6f632e766e,0x395a5f2e30746e61,0x4342415f645f524c,0x006d665f53665044\n"
".quad 0x736e6f632e766e2e,0x5a5f2e30746e6174,0x616974696e693731,0x6e69735f657a696c\n"
".quad 0x2e006d6650656c67,0x65726168732e766e,0x524c38315a5f2e64,0x41426279685f645f\n"
".quad 0x6563726f665f4443,0x5f536d665f536650,0x6e2e00695f535f53,0x6174736e6f632e76\n"
".quad 0x315a5f2e3631746e,0x79685f645f524c38,0x6f665f4443414262,0x665f536650656372\n"
".quad 0x695f535f535f536d,0x6e6f632e766e2e00,0x5f2e30746e617473,0x5f645f524c38315a\n"
".quad 0x5f44434142627968,0x5366506563726f66,0x535f535f536d665f,0x632e766e2e00695f\n"
".quad 0x31746e6174736e6f,0x6e2e6c65722e0034,0x6174736e6f632e76,0x5a5f00003431746e\n"
".quad 0x685f645f524c3931,0x495f434442416279,0x536650707265746e,0x315a5f00666d665f\n"
".quad 0x5f656c706d697331,0x5f53665074786574,0x726d37315a5f006d,0x416279685f645f74\n"
".quad 0x506563726f665f42,0x535f536d665f5366,0x395a5f00695f535f,0x4342415f645f524c\n"
".quad 0x006d665f53665044,0x645f524c32315a5f,0x444342416279685f,0x5f006d665f536650\n"
".quad 0x645f74726d32315a,0x50656c676e69735f,0x5a5f006d665f5366,0x685f645f524c3331\n"
".quad 0x5032434441426279,0x0069666d665f5366,0x645f524c38315a5f,0x444342416279685f\n"
".quad 0x66506563726f665f,0x5f535f536d665f53,0x31315a5f00695f53,0x79685f645f74726d\n"
".quad 0x665f536650424162,0x524c32315a5f006d,0x42416279685f645f,0x6d665f5366504344\n"
".quad 0x6e6933315a5f0066,0x657a696c61697469,0x5f006d6650524c5f,0x756674736574385a\n"
".quad 0x395a5f006650636e,0x4341425f645f524c,0x006d665f53665044,0x645f524c32315a5f\n"
".quad 0x434441426279685f,0x00666d665f536650,0x7274784534315a5f,0x436d6f7246746361\n"
".quad 0x5f00666d6650645f,0x645f74726d37315a,0x665f41426279685f,0x5f5366506563726f\n"
".quad 0x5f535f535f536d66,0x5f524c395a5f0069,0x6650434442415f64,0x5a5f00666d665f53\n"
".quad 0x685f645f524c3331,0x5032444342416279,0x5f00696d665f5366,0x6974696e6937315a\n"
".quad 0x69735f657a696c61,0x006d6650656c676e,0x645f524c39315a5f,0x434441426279685f\n"
".quad 0x50707265746e495f,0x5f00666d665f5366,0x5f645f524c38315a,0x5f44434142627968\n"
".quad 0x5366506563726f66,0x535f535f536d665f,0x6d31315a5f00695f,0x6279685f645f7472\n"
".quad 0x6d665f5366504142,0x5f524c33315a5f00,0x4442416279685f64,0x6d665f5366503243\n"
".quad 0x6930315a5f006966,0x7a696c616974696e,0x535f535f53665065,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x6d5f535f535f535f,0x6d697331315a5f00\n"
".quad 0x79706f635f656c70,0x5a5f006d5f536650,0x41425f645f524c39,0x6d665f5366504344\n"
".quad 0x6665527865740066,0x786574004130665f,0x004131665f666552,0x665f666552786574\n"
".quad 0x6552786574004132,0x6574004133665f66,0x4134665f66655278,0x5f66655278657400\n"
".quad 0x5278657400413566,0x74004136665f6665,0x37665f6665527865,0x6665527865740041\n"
".quad 0x786574004138665f,0x004139665f666552,0x665f666552786574,0x5278657400413031\n"
".quad 0x00413131665f6665,0x665f666552786574,0x5278657400413231,0x00413331665f6665\n"
".quad 0x665f666552786574,0x5278657400413431,0x00413531665f6665,0x665f666552786574\n"
".quad 0x5278657400413631,0x00413731665f6665,0x665f666552786574,0x5278657400413831\n"
".quad 0x74004230665f6665,0x31665f6665527865,0x6665527865740042,0x786574004232665f\n"
".quad 0x004233665f666552,0x665f666552786574,0x6552786574004234,0x6574004235665f66\n"
".quad 0x4236665f66655278,0x5f66655278657400,0x5278657400423766,0x74004238665f6665\n"
".quad 0x39665f6665527865,0x6665527865740042,0x657400423031665f,0x3131665f66655278\n"
".quad 0x6665527865740042,0x657400423231665f,0x3331665f66655278,0x6665527865740042\n"
".quad 0x657400423431665f,0x3531665f66655278,0x6665527865740042,0x657400423631665f\n"
".quad 0x3731665f66655278,0x6665527865740042,0x657400423831665f,0x4330665f66655278\n"
".quad 0x5f66655278657400,0x5278657400433166,0x74004332665f6665,0x33665f6665527865\n"
".quad 0x6665527865740043,0x786574004334665f,0x004335665f666552,0x665f666552786574\n"
".quad 0x6552786574004336,0x6574004337665f66,0x4338665f66655278,0x5f66655278657400\n"
".quad 0x5278657400433966,0x00433031665f6665,0x665f666552786574,0x5278657400433131\n"
".quad 0x00433231665f6665,0x665f666552786574,0x5278657400433331,0x00433431665f6665\n"
".quad 0x665f666552786574,0x5278657400433531,0x00433631665f6665,0x665f666552786574\n"
".quad 0x5278657400433731,0x00433831665f6665,0x665f666552786574,0x6552786574004430\n"
".quad 0x6574004431665f66,0x4432665f66655278,0x5f66655278657400,0x5278657400443366\n"
".quad 0x74004434665f6665,0x35665f6665527865,0x6665527865740044,0x786574004436665f\n"
".quad 0x004437665f666552,0x665f666552786574,0x6552786574004438,0x6574004439665f66\n"
".quad 0x3031665f66655278,0x6665527865740044,0x657400443131665f,0x3231665f66655278\n"
".quad 0x6665527865740044,0x657400443331665f,0x3431665f66655278,0x6665527865740044\n"
".quad 0x657400443531665f,0x3631665f66655278,0x6665527865740044,0x657400443731665f\n"
".quad 0x3831665f66655278,0x2400727473240044,0x7473240033727473,0x3172747324003272\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0100030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0200030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0300030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x6c00030000000000,0x0000000000000000,0x0000000000000000,0x0000030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x6600030000000000,0x0000000000000000\n"
".quad 0x0000000000254000,0x6900030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x6d00030000000000,0x0000000000000000,0x0000000000000000,0x6300030000000000\n"
".quad 0x0000000000000000,0x000000000000c000,0x6500030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x5e00030000000000,0x0000000000000000,0x0000000000168000\n"
".quad 0x6100030000000000,0x0000000000000000,0x0000000000000000,0x5a00030000000000\n"
".quad 0x0000000000000000,0x000000000019b800,0x5d00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x5600030000000000,0x0000000000000000,0x0000000000185000\n"
".quad 0x5900030000000000,0x0000000000000000,0x0000000000000000,0x5200030000000000\n"
".quad 0x0000000000000000,0x00000000001a7800,0x5500030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x4e00030000000000,0x0000000000000000,0x0000000000187800\n"
".quad 0x5100030000000000,0x0000000000000000,0x0000000000000000,0x4900030000000000\n"
".quad 0x0000000000000000,0x00000000001b3800,0x4c00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x4500030000000000,0x0000000000000000,0x000000000016a000\n"
".quad 0x4800030000000000,0x0000000000000000,0x0000000000000000,0x4100030000000000\n"
".quad 0x0000000000000000,0x0000000000186800,0x4400030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x3e00030000000000,0x0000000000000000,0x0000000000031000\n"
".quad 0x4000030000000000,0x0000000000000000,0x0000000000000000,0x3b00030000000000\n"
".quad 0x0000000000000000,0x000000000001a000,0x3d00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x3700030000000000,0x0000000000000000,0x000000000019b800\n"
".quad 0x3a00030000000000,0x0000000000000000,0x0000000000000000,0x3300030000000000\n"
".quad 0x0000000000000000,0x0000000000186800,0x3600030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x2f00030000000000,0x0000000000000000,0x00000000000dc000\n"
".quad 0x3200030000000000,0x0000000000000000,0x0000000000000000,0x2a00030000000000\n"
".quad 0x0000000000000000,0x0000000000168000,0x2d00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x2600030000000000,0x0000000000000000,0x000000000026a000\n"
".quad 0x2900030000000000,0x0000000000000000,0x0000000000000000,0x2200030000000000\n"
".quad 0x0000000000000000,0x0000000000187800,0x2500030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x1f00030000000000,0x0000000000000000,0x0000000000058800\n"
".quad 0x2100030000000000,0x0000000000000000,0x0000000000000000,0x1b00030000000000\n"
".quad 0x0000000000000000,0x0000000000254000,0x1e00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x1600030000000000,0x0000000000000000,0x00000000001b9000\n"
".quad 0x1900030000000000,0x0000000000000000,0x0000000000000000,0x1200030000000000\n"
".quad 0x0000000000000000,0x000000000016a000,0x1500030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0e00030000000000,0x0000000000000000,0x0000000000187800\n"
".quad 0x1100030000000000,0x0000000000000000,0x0000000000000000,0x0b00030000000000\n"
".quad 0x0000000000000000,0x000000000002f000,0x0d00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0800030000000000,0x0000000000000000,0x000000000000f800\n"
".quad 0x0a00030000000000,0x0000000000000000,0x0000000000000000,0x0400030000000000\n"
".quad 0x0000000000000000,0x000000000026a000,0x0700030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x4d00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x4b00030000000000,0x0000000000000000,0x0000000000000000,0x4a00030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x3f00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x3900030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x3800030000000000,0x0000000000000000,0x0000000000000000,0x6400030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x2e00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x2c00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x2b00030000000000,0x0000000000000000,0x0000000000000000,0x6800030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x6700030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x6200030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x6000030000000000,0x0000000000000000,0x0000000000000000,0x5f00030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x3100030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x3000030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x2400030000000000,0x0000000000000000,0x0000000000000000,0x2300030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x3c00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0600030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0500030000000000,0x0000000000000000,0x0000000000000000,0x5400030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x5300030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x1d00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x1c00030000000000,0x0000000000000000,0x0000000000000000,0x2800030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x2700030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x5000030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x4f00030000000000,0x0000000000000000,0x0000000000000000,0x3500030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x3400030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x4700030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x4600030000000000,0x0000000000000000,0x0000000000000000,0x0c00030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x5800030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x5700030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x4300030000000000,0x0000000000000000,0x0000000000000000,0x4200030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x1000030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0f00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0900030000000000,0x0000000000000000,0x0000000000000000,0x1400030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x1300030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x5c00030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x5b00030000000000,0x0000000000000000,0x0000000000000000,0x2000030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x1a00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x1800030000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x1700030000000000,0x0000000000000000,0x0000000000000000,0x6a00030000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x6b00030000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x6610120000000100,0x0000000000000000,0x0000000000254000\n"
".quad 0x6310120000002000,0x0000000000000000,0x000000000000c000,0x5e10120000003500\n"
".quad 0x0000000000000000,0x0000000000168000,0x5a10120000005800,0x0000000000000000\n"
".quad 0x000000000019b800,0x5610120000006b00,0x0000000000000000,0x0000000000185000\n"
".quad 0x5210120000008200,0x0000000000000000,0x00000000001a7800,0x4e10120000009900\n"
".quad 0x0000000000000000,0x0000000000187800,0x491012000000b300,0x0000000000000000\n"
".quad 0x00000000001b3800,0x451012000000d700,0x0000000000000000,0x000000000016a000\n"
".quad 0x411012000000ed00,0x0000000000000000,0x0000000000186800,0x3e10120000010500\n"
".quad 0x0000000000000000,0x0000000000031000,0x3b10120000011a00,0x0000000000000000\n"
".quad 0x000000000001a000,0x3710120000012800,0x0000000000000000,0x000000000019b800\n"
".quad 0x3310120000013b00,0x0000000000000000,0x0000000000186800,0x2f10120000015300\n"
".quad 0x0000000000000000,0x00000000000dc000,0x2a10120000016a00,0x0000000000000000\n"
".quad 0x0000000000168000,0x2610120000018d00,0x0000000000000000,0x000000000026a000\n"
".quad 0x221012000001a100,0x0000000000000000,0x0000000000187800,0x1f1012000001ba00\n"
".quad 0x0000000000000000,0x0000000000058800,0x1b1012000001d300,0x0000000000000000\n"
".quad 0x0000000000254000,0x161012000001f200,0x0000000000000000,0x00000000001b9000\n"
".quad 0x1210120000021600,0x0000000000000000,0x000000000016a000,0x0e10120000022c00\n"
".quad 0x0000000000000000,0x0000000000187800,0x0b10120000024600,0x0000000000000000\n"
".quad 0x000000000002f000,0x0810120000027c00,0x0000000000000000,0x000000000000f800\n"
".quad 0x0410120000029100,0x0000000000000000,0x000000000026a000,0x00001a000002a500\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a000002b000,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a000002bb00,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a000002c600,0x0000000000000000,0x0000000000000000,0x00001a000002d100\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a000002dc00,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a000002e700,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a000002f200,0x0000000000000000,0x0000000000000000,0x00001a000002fd00\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000030800,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a0000031300,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000031f00,0x0000000000000000,0x0000000000000000,0x00001a0000032b00\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000033700,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a0000034300,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000034f00,0x0000000000000000,0x0000000000000000,0x00001a0000035b00\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000036700,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a0000037300,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000037f00,0x0000000000000000,0x0000000000000000,0x00001a0000038a00\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000039500,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a000003a000,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a000003ab00,0x0000000000000000,0x0000000000000000,0x00001a000003b600\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a000003c100,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a000003cc00,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a000003d700,0x0000000000000000,0x0000000000000000,0x00001a000003e200\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a000003ed00,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a000003f900,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000040500,0x0000000000000000,0x0000000000000000,0x00001a0000041100\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000041d00,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a0000042900,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000043500,0x0000000000000000,0x0000000000000000,0x00001a0000044100\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000044d00,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a0000045900,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000046400,0x0000000000000000,0x0000000000000000,0x00001a0000046f00\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000047a00,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a0000048500,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000049000,0x0000000000000000,0x0000000000000000,0x00001a0000049b00\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a000004a600,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a000004b100,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a000004bc00,0x0000000000000000,0x0000000000000000,0x00001a000004c700\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a000004d300,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a000004df00,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a000004eb00,0x0000000000000000,0x0000000000000000,0x00001a000004f700\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000050300,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a0000050f00,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000051b00,0x0000000000000000,0x0000000000000000,0x00001a0000052700\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000053300,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a0000053e00,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000054900,0x0000000000000000,0x0000000000000000,0x00001a0000055400\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000055f00,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a0000056a00,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000057500,0x0000000000000000,0x0000000000000000,0x00001a0000058000\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a0000058b00,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a0000059600,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a000005a100,0x0000000000000000,0x0000000000000000,0x00001a000005ad00\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a000005b900,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a000005c500,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a000005d100,0x0000000000000000,0x0000000000000000,0x00001a000005dd00\n"
".quad 0x0000000000000000,0x0000000000000000,0x00001a000005e900,0x0000000000000000\n"
".quad 0x0000000000000000,0x00001a000005f500,0x0000000000000000,0x0000000000000000\n"
".quad 0x00001a0000060100,0x0000000000000000,0x0000000000000000,0x6c00110000060d00\n"
".quad 0x0000000000000000,0x0000000000000400,0x6c00110000061200,0x0000000000000400\n"
".quad 0x0000000000000400,0x6c00110000061800,0x0000000000000800,0x0000000000000300\n"
".quad 0x6c00110000061e00,0x0000000000000b00,0x0000000000000400,0x00440400005de400\n"
".quad 0x0000009c019c0428,0x0000008c01dc042c,0x0000009400dc042c,0x00000084011c042c\n"
".quad 0x00000098001c042c,0x00000088015c042c,0x0e400040619ca32c,0x08400020379ca320\n"
".quad 0x0a400030001ca320,0x00c00018641c0320,0x05f00000025de260,0x8ec0000801dc2319\n"
".quad 0x00fffff9e1dc0318,0x00000001211e0448,0x00000001035c0318,0x00000019215e0448\n"
".quad 0x0000007920de0418,0x20c000ec71dc0318,0x12cfc000469c001a,0x00c34000d1dc0330\n"
".quad 0x12cfc000521c0048,0x12cfc000331c0030,0x00f07f01a15c0030,0x3c4000e0749c0350\n"
".quad 0x00c38000d25c0320,0x00f09f80c11c0048,0x00000014515c0050,0x004000a0009de458\n"
".quad 0x00c00081255c2328,0x00c00079259c0358,0x3c4000e094dc0358,0x00c3c000d2dc0320\n"
".quad 0x0a00001046dc0048,0x05c00011261c0330,0x00000059511c4320,0x00c00081315c2340\n"
".quad 0x00c00079349c0358,0x3c4000e0b51c0358,0x00c40000d39c0320,0x004000b0465c4348\n"
".quad 0x05c00011359c0348,0x00000048511c4320,0x00c00081415c2340,0x00c00079449c0358\n"
".quad 0x3c4000e0e71c0358,0x00c44000d3dc0320,0x004000b045dc4348,0x05c00011451c0348\n"
".quad 0x00000048511c4320,0x00c00081c15c2340,0x00c00079c4dc0358,0x3c4000e0f75c0358\n"
".quad 0x00c48000d45c0320,0x004000b0455c4348,0x05c00011c49c0348,0x0000004c511c4320\n"
".quad 0x00c00081d15c2340,0x00c00079d71c0358,0x20c000f401dc2358,0x3c4000e117dc031a\n"
".quad 0x004000b044dc4320,0x00f07f0080dc0048,0x05c00011d11c0350,0x00000070515c4320\n"
".quad 0xa0c0000861dc2340,0x00c00081f71c2318,0x00c00079f75c0358,0x004000b0515c4358\n"
".quad 0x3600000c30dc0048,0x05c00011f09c0330,0x00000075c6dc4320,0x20c000f463dc2340\n"
".quad 0x8ed0600031dc001a,0x00c00060105d0320,0x060000212c9c8448,0x3c4000e0d29c0314\n"
".quad 0x004000b1b0dc4320,0x000063800005e748,0x00c00080a09c2340,0x00c00078a0dc0358\n"
".quad 0x00000040021c0358,0x00c00004015c0348,0x00400080041de448,0x0000000c25dc4328\n"
".quad 0x8ec0010053dc2340,0x00c4800050dc0318,0x21c00010a09c0348,0x00c00004661c0320\n"
".quad 0x00fffffde11c0348,0x00c20004851c0348,0x00c3c100865c0348,0x02c480fc391c0448\n"
".quad 0x00c04000829c0320,0x00c13ffc815c0348,0x0040009170dc4348,0x00c00005e19c0348\n"
".quad 0x8ec0010185dc2348,0x00c17ffc84dc0318,0x084000e145dc0348,0x00c07ffc849c0320\n"
".quad 0x00c23f00875c0348,0x00c33f04881c0348,0x084000e1951c0348,0x00c27f00855c0320\n"
".quad 0x00c1000486dc0348,0x084000e0571c0348,0x084000e0a65c0320,0x00c1c004859c0320\n"
".quad 0x00c2ff00869c0348,0x00c0001986080348,0x00003f000629e260,0x0c4000e1315c0318\n"
".quad 0x00c0c000831c0320,0x00c4410088dc0348,0x3c4000e124dc0348,0x3c4000e1db5c0320\n"
".quad 0x3c4000e20b1c0320,0x084000e1555c0320,0x3c4000e1b49c0320,0x00c00081975c2320\n"
".quad 0x00c00079981c0358,0x0c4000e1611c0358,0x0c4000e1aa9c0320,0x0000006246dc0320\n"
".quad 0x0c4000e2369c0348,0x0c4000e0c59c0320,0x21c00011961c0320,0x00000000219c8520\n"
".quad 0x00000081d65c4384,0x00c00081c75c2340,0x00c00079c81c0358,0x00400091965c4358\n"
".quad 0x21c00011c71c0348,0x00000081d09c4320,0x00c0008170dc2340,0x00c00079781c0358\n"
".quad 0x00c2befc87dc0358,0x00400090275c4348,0x00c400fc889c0348,0x21c000117a1c0348\n"
".quad 0x00000080309c4320,0x00c0008150dc2340,0x00c0007955dc0358,0x3c4000e1fadc0358\n"
".quad 0x3c4000e227dc0320,0x004000902a5c4320,0x21c00011589c0348,0x0000005c309c4320\n"
".quad 0x00c0008140dc2340,0x00c00079455c0358,0x0040009028dc4358,0x00c38100885c0348\n"
".quad 0x21c00011481c0348,0x00000054351c4320,0x00c00081609c2340,0x00c0007960dc0358\n"
".quad 0x3c4000e21b9c0358,0x00400091485c4320,0x21c00011691c0348,0x0000000c209c4320\n"
".quad 0x00c0008130dc2340,0x00c00079351c0358,0x00400090295c4358,0x21c00011399c0348\n"
".quad 0x00000050309c4320,0x00c0008050dc2340,0x00c0007854dc0358,0x0040009029dc4358\n"
".quad 0x21c00010559c0348,0x0000004c309c4320,0x00c0008120dc2340,0x00c00079215c0358\n"
".quad 0x0040009025dc4358,0x21c00011251c0348,0x00000014309c4320,0x00c0008040dc2340\n"
".quad 0x00c00078415c0358,0x00400090255c4358,0x21c00010449c0348,0x00000014309c4320\n"
".quad 0x00c00082d0dc2340,0x00c0007ad15c0358,0x0040009024dc4358,0x21c00012d11c0348\n"
".quad 0x00000014309c4320,0x00c00082b0dc2340,0x00c0007abb5c0358,0x00400090215c4358\n"
".quad 0x21c00012b09c0348,0x000000b430dc4320,0x00c00082aadc2340,0x00c0007aab5c0358\n"
".quad 0x0040009030dc4358,0x21c00012aa9c0348,0x000000b6badc4320,0x00c00082cb5c2340\n"
".quad 0x00c0007acbdc0358,0x00400092badc4358,0x21c00012cb1c0348,0x000000bedb5c4320\n"
".quad 0x00c00082ebdc2340,0x00c0007aec1c0358,0x00400092db5c4358,0x21c00012eb9c0348\n"
".quad 0x000000c2fbdc4320,0x00c00081fc5c2340,0x00c00079fc9c0358,0x00400092fbdc4358\n"
".quad 0x21c00011fc1c0348,0x000000cb17dc4320,0x00c00081acdc2340,0x00c00079ad1c0358\n"
".quad 0x00400091fc5c4358,0x21c00011ac9c0348,0x000000d3341c4320,0x00400080001de440\n"
".quad 0x3c4000e1b6dc0328,0x004000910cdc4320,0x00000001c71c8548,0x00c00081b69c2384\n"
".quad 0x00c00079b7dc0358,0x01c00011bd1c0358,0x0000000286dc8520,0x0000007da01c4384\n"
".quad 0x00000001675c8540,0x0000000147dc8584,0x000000012a5c8584,0x00000001869c8584\n"
".quad 0x00000002289c8584,0x00000002081c8584,0x004000900d5c4384,0x00000002465c8548\n"
".quad 0x00000002661c8584,0x00000002a85c8584,0x00000002c8dc8584,0x00000000495c8584\n"
".quad 0x00000000291c8584,0x00000002e9dc8584,0x00000003099c8584,0x00000003201c8584\n"
".quad 0x000000034a1c8584,0x00000050171c8584,0x0000001016dc85c8,0x00000040175c85c8\n"
".quad 0x0000003017dc85c8,0x000000201a5c85c8,0x00003c600001e7c8,0x00000069a4dc0040\n"
".quad 0x0000008a511c0050,0x00000065a21d0050,0x00d028027b5c0050,0x0000007d841d0058\n"
".quad 0x00d02801959c0050,0x000000618adc0058,0x000000613b9d0050,0x00d02801fb1c0050\n"
".quad 0x00000019c0dd0058,0x0000009044dc0050,0x00f02001aa9c0050,0x00000070851c0058\n"
".quad 0x5af02802511c0050,0x0000007105dc0030,0x2cf02801a21c0050,0x56f02001ab5c0030\n"
".quad 0x000000862c1d0030,0x58f02801841c0050,0x00000074359c0030,0x0000007d8bdc0050\n"
".quad 0x54d050006b1c0050,0x00000065929c0030,0x0000007df55c0050,0x000000754a9d0050\n"
".quad 0x5af020019b5c0050,0x000000830c9d0030,0x000000757adc0050,0x000000a5659c0050\n"
".quad 0x00000072fc1c0050,0x0000008535dc0050,0x58f020018b1c0050,0x2af000018bdd0030\n"
".quad 0x0000002aeb9c0030,0x00000056db5c0050,0x000000a6aa9d0050,0x000000a6badd0050\n"
".quad 0x0000006d655c0050,0x0000008d75dc0050,0x58f020019b1c0050,0x0000007eeb9d0030\n"
".quad 0x0000006eaa9c0050,0x0000006ebadd0050,0x00000089555c0050,0x00000072fbdc0050\n"
".quad 0x0000009d759d0050,0x58f02001fb1c0050,0x00000072db5c0030,0x00000072eb9c0050\n"
".quad 0x0000008aa5dc0050,0x00000075cd1d0050,0x00000092b7dc0050,0x00000091555c0050\n"
".quad 0x00000076fbdc0050,0x00000072c71c0050,0x00000076dadc0050,0x00000076eb9c0050\n"
".quad 0x0000008575dd0050,0x000000770c1c0050,0x00000085555c0050,0x000000a6fbdc0050\n"
".quad 0x00000075ca9c0050,0x000000a6badc0050,0x0000008e4c5d0050,0x00000081659d0050\n"
".quad 0x000000a6eb1c0050,0x0000008df7dd0050,0x00000081771c0050,0x000000a70c1c0050\n"
".quad 0x0000008d55dc0050,0x00000096549c0050,0x0000006efb5c0050,0x0000006eb55c0050\n"
".quad 0x0000009b1cdd0050,0x00000099659d0050,0x0000006ecb1c0050,0x00000099f75c0050\n"
".quad 0x000000a74c5c0050,0x0000006f0c1c0050,0x000000a6a7dc0050,0x0000004adb5c0050\n"
".quad 0x000000495a5c0050,0x00000001659d0050,0x00000096c49d0050,0x000000970bdd0050\n"
".quad 0x00000001c55d0050,0x0000006f151d0050,0x000000a1d71d0050,0x0000008175dc0050\n"
".quad 0x000000a334dc0050,0x000000a1659d0050,0x0000006df6dc0050,0x00000089275c0050\n"
".quad 0x00000003229c0050,0x0000008afb9d0050,0x10400015549c0050,0x280000715e9e0030\n"
".quad 0x00000099721c0030,0x0000008ada9d0050,0x20400015cedc0050,0x26000059ce5e0030\n"
".quad 0x36f02002551c0030,0x00000086eadd0030,0x14000059541e0050,0x0000005964dc0030\n"
".quad 0x00000071c29c0058,0x0000000085dc0058,0x00000086a7dd0050,0x0000008a96dc0050\n"
".quad 0x00000089421c0050,0x0000009eba9d0050,0x26000071ca5c0050,0x3af00002471c0030\n"
".quad 0x1400005554dc0030,0x140000596ade0030,0x00000090829c0030,0x0000009e715c0050\n"
".quad 0x36f00002451c0050,0x00000085c71c0030,0x084000156e1c0050,0x00000084a6dc0030\n"
".quad 0x00000015f11c0050,0x0000005557dc0050,0x38f00002371c0050,0x0000008db6dc0030\n"
".quad 0x52000055f7dd0050,0x0000009dc71d0030,0x36f02002755c0050,0x00000082aa9d0030\n"
".quad 0x00000081c6dc0050,0x00000081555c0050,0x00000002a75d0050,0x36f00002671c0050\n"
".quad 0x0000009956dc0030,0x26000059659c0050,0x000000a1755c0030,0x000000add4dd0050\n"
".quad 0x00000001b5dc0050,0x00000001c75c0050,0x00000085471c0050,0x000000a1751c0050\n"
".quad 0x0000005956dd0050,0x38f0000235dc0050,0x28400005651c0030,0x004000c0031de430\n"
".quad 0x0000001575dc0028,0xee082085459c0250,0x3af00002875c0030,0xf3333337b21c0230\n"
".quad 0x00d05001615c0030,0x00f02001671c0058,0x2c400075bd9c0058,0x0a400045bb9c0030\n"
".quad 0x38400055bb5c0030,0xf3333337829c0230,0x6c40008526de0030,0x6c400085259c0030\n"
".quad 0x00400034c0dc0030,0x0000007dd55d0058,0x5af02000815c0050,0x5af02000aa5c0030\n"
".quad 0x5ad02000ac1c0030,0x36400087b71e0030,0x5ad02000821c0030,0x2c400087b29c0030\n"
".quad 0x2c400087b75e0030,0x2c4000878bdc0030,0x2c4000878c5e0030,0x0000000d5ddc0030\n"
".quad 0x36400087b59c0058,0x3640008787dc0030,0x364000878a9e0030,0x3c4000e0d09c0330\n"
".quad 0x3800000d56dc0020,0x1000000d5b1e0030,0x5200000d5ade0030,0x3a00000d571c0030\n"
".quad 0x6e00000d551c0030,0x0a00000d515e0030,0x6000000d521e0030,0x1400000d529c0030\n"
".quad 0x2c00000d559c0030,0x5e00000d575c0030,0x6200000d5a5c0030,0x3e00000d57dc0030\n"
".quad 0x5400000d5a9c0030,0x00c0008020dc2330,0x00c00078255c0358,0x000000b86b9d0058\n"
".quad 0x000000001d1c8550,0x000000543bdc43c8,0xf3333335255c0240,0x004000a0049de430\n"
".quad 0x0000008170dc0028,0x5af02001519c0050,0x25c00010209c0330,0x06f0000265dc0020\n"
".quad 0x5ad02001555c0030,0x00c04000db5c0330,0x004000b2f0dc4348,0x0000000175dc0048\n"
".quad 0x3c4000e2dbdc0350,0x000000002b9c8520,0x2ef000028b5c0094,0x00c00082f5dc2330\n"
".quad 0x00c0007afc1c0358,0xf18e38e6dd5c0258,0x00000050609c0030,0x000000c175dc4350\n"
".quad 0x00000051519c0040,0x04f0200350dc0050,0x25c00012f09c0330,0x0cf02003519c0020\n"
".quad 0x0000000da51d0030,0x004000b170dc4350,0x00000019919d0048,0x00000080411d0050\n"
".quad 0x00000000251c8550,0x6a400066d65c0094,0x00c08000d55c0330,0x00400024c5dc0048\n"
".quad 0x000000004d1d0058,0x00000064509c0050,0x3c4000e150dc0350,0xf4aaaaaf4cdc0220\n"
".quad 0x0400005d309c0030,0x00c0c000d69c0330,0x00c00080311c2348,0x00c00078315c0358\n"
".quad 0x04f00003309c0058,0x3c4000e1a55c0330,0x00000014415c4320,0x00000009851d0040\n"
".quad 0x00c00081509c2350,0x00c00079561c0358,0x25c00010311c0358,0x00c1c000d69c0320\n"
".quad 0x0000006020dc4348,0x004000b0515c4340,0x25c00011509c0348,0x00c10000d55c0320\n"
".quad 0x00000000451c8548,0x004000b030dc4394,0x00c14000d61c0348,0x3c4000e1555c0348\n"
".quad 0x00000000219c8520,0x3c4000e1811c0394,0x00c18000d15c0320,0x38400066d71c0048\n"
".quad 0x00c00081509c2330,0x00c0007950dc0358,0x00c00080451c2358,0x00c00078461c0358\n"
".quad 0x3c4000e0519c0358,0x0000000c20dc4320,0x00000061415c4340,0x00c00080609c2340\n"
".quad 0x00c00078651c0358,0x00000066b61c0058,0x000000648adc0050,0x00000050251c4350\n"
".quad 0x3c4000e1a21c0340,0x00000066c09c0020,0x14400066d65c0050,0x2c400066d69c0030\n"
".quad 0x00c00080829c2330,0x00c00078859c0358,0x36400066db1c0058,0x3a400066d6dc0030\n"
".quad 0x00000058a59c4330,0x00c20000d29c0340,0x52400066d75c0048,0x3e400066d7dc0030\n"
".quad 0x54400066da5c0030,0x3c4000e0a29c0330,0x3200005d3bdc0020,0x5800005d3b5c0030\n"
".quad 0x3400005d3b9c0030,0x3800005d3b1c0030,0x3600005d365e0030,0x0400005d3c9c0030\n"
".quad 0x3000005d3c5e0030,0x5600005d3c1e0030,0x3a00005d36de0030,0x3e00005d369e0030\n"
".quad 0x5200005d371e0030,0x00c00080a09c2330,0x00c00078a4dc0358,0x3440009745de0058\n"
".quad 0x38400097469e0030,0x0000004c261c4330,0x00c24000d4dc0340,0x00cfa000c09c0048\n"
".quad 0x3c4000e0e39c0358,0x3c4000e1331c0320,0x3240009744de0020,0x36400097465e0030\n"
".quad 0x2e0000090a5e0030,0x260000090adc0030,0x320000090a9e0030,0x3400000904dc0030\n"
".quad 0x00c00080c09c2330,0x00c00078c41c0358,0x00c00078ef1c0358,0x3c4000e0ff5c0358\n"
".quad 0x00000040269c4320,0x00c28000d09c0340,0x00c00083d3dc2348,0x64f000033c9c0058\n"
".quad 0x3c4000e0275c0330,0x664000974cdc0020,0x5e4000974bdc0030,0x00c00081d09c2330\n"
".quad 0x00c00079d41c0358,0x000000cf1c5c0058,0x000000cf0c1c0050,0x00000040271c4350\n"
".quad 0x00c2c000d41c0340,0x25c00011509c0348,0x000000c6595d0020,0x3c4000e1041c0350\n"
".quad 0x004000b030dc4320,0x25c00010411c0348,0x00c00081055c2320,0x00c0007905dc0358\n"
".quad 0x004000b0515c4358,0x25c00010619c0348,0x0000005d57dc4320,0x3c4000e0755c0340\n"
".quad 0x5c4000974b9c0020,0x000000c279dd0030,0x00c0008151dc2350,0x00c0007955dc0358\n"
".quad 0x5ecfa003ac5c0058,0x584000974cdc0030,0x0000005c75dc4330,0x004000b141dc4340\n"
".quad 0x25c00011551c0348,0x000000401c1e8520,0x000000501bde85c0,0x004000b1755c43c0\n"
".quad 0x3c4000e095dc0348,0x25c00010821c0320,0x5a4000974b5c0020,0x00c00081725c2330\n"
".quad 0x00c00079765c0358,0x000000bf0d1f0058,0x5acfa003ab5c0050,0x00000064965c4330\n"
".quad 0x004000b1625c4340,0x25c00011759c0348,0x004000b195dc4320,0x3c4000e0b65c0348\n"
".quad 0x25c00010a29c0320,0x00c0008192dc2320,0x00c0007996dc0358,0x0000006cb6dc4358\n"
".quad 0x004000b182dc4340,0x25c00011961c0348,0x004000b1b65c4320,0x00c00080e6dc2348\n"
".quad 0x25c00010c31c0358,0x000000f1b6dc4320,0x00c30000df1c0340,0x004000b1a35c4348\n"
".quad 0x25c00010e69c0348,0x3c4000e3cf1c0320,0x3c4000e1179c0320,0x004000b1b6dc4320\n"
".quad 0x25c00011d39c0348,0x00c0007bd75c0320,0x00c00081e45c2358,0x00000074f75c4358\n"
".quad 0x004000b1c3dc4340,0x25c00013d71c0348,0x00c00079ef5c0320,0x004000b1d75c4358\n"
".quad 0x25c00011041c0348,0x000000f51f5c4320,0x004000b1f45c4340,0x25c00011e79c0348\n"
".quad 0x004000b3d7dc4320,0x25c00013c49c0348,0x00c00083cf5c2320,0x00c0007bcf1c0358\n"
".quad 0x000000f3df1c4358,0x6c400087bf5c0040,0x6c400087bd9e0030,0x7a4000878edc0030\n"
".quad 0x7a4000878f9e0030,0x6c4000878f5c0030,0x6c4000878d9e0030,0x76f000037edc0030\n"
".quad 0x7af000037f5c0030,0x7cf000037f9c0030,0x6cf000037d9c0030,0x7af000035e1c0030\n"
".quad 0x76f000035edc0030,0x7cf000035ddc0030,0x6cf000035f5c0030,0x70cfa0039d9e0030\n"
".quad 0x76cfa0039d5c0030,0x6ecfa0039dde0030,0x7acfa0039e1c0030,0x000000301e5e8530\n"
".quad 0x000000cb9b1d00c0,0x5ccfa003ac9e0050,0x000000201b9e8530,0x66cfa003ae5e00c0\n"
".quad 0x000000101cde8530,0x000000922e9d00c0,0x000000002b1c8550,0x000000bb4d1c0094\n"
".quad 0x00000087ae9c0050,0x000000cf4d1c0050,0x0000008fae9d0050,0x000000934d1c0050\n"
".quad 0x00000083ae9d0050,0x0000008f4d1d0050,0x0000009bae9c0050,0x0000009b4d1c0050\n"
".quad 0x00000003ae9d0050,0x000000a34d1d0050,0x000000a3ae9c0050,0x6acf80034d5c0050\n"
".quad 0x6ecf80034ddc0030,0x6acf8003aede0030,0x000000001d5e8530,0x6ecf8003addc00c0\n"
".quad 0x000000ee491d0030,0x000000de699d0050,0x000000bb5d5d0050,0x000000cf5d5c0050\n"
".quad 0x0000008b5d5d0050,0x000000875d5c0050,0x000000835d5d0050,0x000000035d5c0050\n"
".quad 0x62cf80035c5c0050,0x64cf80035c9e0030,0x5acf80035b5e0030,0x72cf80035ddc0030\n"
".quad 0x56cf80035ade0030,0x54cf80035a9e0030,0x52cf80035a5c0030,0x26cf800354dc0030\n"
".quad 0x6ccf80034d5e0030,0x5acf80034b5c0030,0x52cf8003ad9c0030,0x6acf8003ad5e0030\n"
".quad 0x000000da10dd0030,0x000000d638dd0050,0x70cf80034d5e0050,0x26cf8003ae1e0030\n"
".quad 0x004000b3c4dc4330,0x6acf8003ad5c0048,0x000000e0001d0030,0x000000d68a1d0050\n"
".quad 0x62cf80034d5e0050,0x64cf80034c5e0030,0x6ecf80034c9c0030,0x54cf8003adde0030\n"
".quad 0x000000d6fa5d0030,0x56cf8003ad1c0050,0x000000c70a9d0030,0x000000b6eadd0050\n"
".quad 0x000000cb3b5d0050,0x000000004a5c8550,0x000000006a9c8594,0x000000d2209d0094\n"
".quad 0x000000008adc8550,0x00000000ab5c8594,0x00000000c95c8594,0x00000000e09c8594\n"
".quad 0x00000001091c8594,0x000000de081d0094,0x0000000120dc8550,0x0000000148dc8594\n"
".quad 0x0000000169dc8594,0x00000001881c8594,0x00000001a99c8594,0x00000001c01c8594\n"
".quad 0x00000001ea1c8594,0x00003f00001de794,0x3c4000e0a09c0340,0x00c0800080dc0320\n"
".quad 0x00c1000081dc0348,0x00c14000825c0348,0x00c1800082dc0348,0x00c1c000835c0348\n"
".quad 0x00c2000083dc0348,0x00c24000845c0348,0x00c2800084dc0348,0x00c2c000855c0348\n"
".quad 0x00c3000085dc0348,0x00c340008adc0348,0x00c380008b5c0348,0x00c3c0008bdc0348\n"
".quad 0x00c400008c9c0348,0x00c440008cdc0348,0x00c480008c5c0348,0x004000a00d9de448\n"
".quad 0x00c00080219c2328,0x00c00078221c0358,0x3c4000e0c15c0358,0x3c4000e0311c0320\n"
".quad 0x6dc00010209c0320,0x0000002060dc4320,0x00c000805d5c2340,0x00c000785ddc0358\n"
".quad 0x004000b030dc4358,0x3c4000e0721c0348,0x6dc00010519c0320,0x3c4000e0929c0320\n"
".quad 0x000000df51dc4320,0x00c00080415c2340,0x00c00078425c0358,0x004000b071dc4358\n"
".quad 0x3c4000e0b31c0348,0x6dc00010411c0320,0x00000024515c4320,0x00c00080825c2340\n"
".quad 0x00c0007882dc0358,0x004000b0515c4358,0x3c4000e0d39c0348,0x6dc00010821c0320\n"
".quad 0x0000002c925c4320,0x00c00080a2dc2340,0x00c00078a35c0358,0x004000b0925c4358\n"
".quad 0x3c4000e0f41c0348,0x6dc00010a29c0320,0x00000034b2dc4320,0x00c00080c35c2340\n"
".quad 0x00c00078c3dc0358,0x004000b0b2dc4358,0x3c4000e1149c0348,0x6dc00010c31c0320\n"
".quad 0x0000003cd35c4320,0x00c00080e3dc2340,0x00c00078e45c0358,0x004000b0d35c4358\n"
".quad 0x3c4000e1351c0348,0x6dc00010e39c0320,0x00000044f3dc4320,0x00c00081045c2340\n"
".quad 0x00c0007904dc0358,0x004000b0f3dc4358,0x3c4000e1559c0348,0x6dc00011041c0320\n"
".quad 0x0000004d145c4320,0x00c0008124dc2340,0x00c00079255c0358,0x004000b1145c4358\n"
".quad 0x3c4000e17a9c0348,0x6dc00011249c0320,0x0000005534dc4320,0x00c00081455c2340\n"
".quad 0x00c0007945dc0358,0x004000b134dc4358,0x3c4000e2bb1c0348,0x6dc00011451c0320\n"
".quad 0x0000005d555c4320,0x00c0008165dc2340,0x00c000796adc0358,0x004000b1555c4358\n"
".quad 0x3c4000e2db9c0348,0x6dc00011659c0320,0x000000ad75dc4320,0x00c00082aadc2340\n"
".quad 0x00c0007aab5c0358,0x004000b175dc4358,0x3c4000e2fc1c0348,0x6dc00012aa9c0320\n"
".quad 0x000000b6badc4320,0x00c00082cb5c2340,0x00c0007acbdc0358,0x004000b2badc4358\n"
".quad 0x3c4000e33d1c0348,0x6dc00012cb1c0320,0x000000bedb5c4320,0x00c00082ecdc2340\n"
".quad 0x00c0007aed5c0358,0x004000b2db5c4358,0x6dc00012eb9c0348,0x000000d73bdc4320\n"
".quad 0x00c000830ddc2340,0x00c0007b0e1c0358,0x3c4000e32c9c0358,0x004000b2fbdc4320\n"
".quad 0x000000e37cdc4348,0x6dc000130c1c0340,0x00c000832d5c2320,0x00c0007b2ddc0358\n"
".quad 0x00000000265c8558,0x3c4000e3179c0394,0x0000000047dc8520,0x004000b33c5c4394\n"
".quad 0x00000000669c8548,0x000000df5d5c4394,0x6dc000132c9c0340,0x00000000861c8520\n"
".quad 0x00c000834ddc2394,0x00c0007b4e1c0358,0x00000000aa5c8558,0x00000000c6dc8594\n"
".quad 0x004000b35cdc4394,0x00000000e71c8548,0x000000e37ddc4394,0x6dc000134d1c0340\n"
".quad 0x00000001075c8520,0x00c00081ee1c2394,0x00c00079ee5c0358,0x0000000129dc8558\n"
".quad 0x00000001401c8594,0x004000b37d5c4394,0x000000016a1c8548,0x000000e78e1c4394\n"
".quad 0x6dc00011ed9c0340,0x00000002a81c8520,0x00000002c99c8594,0x00000002e95c8594\n"
".quad 0x004000b38ddc4394,0x00000003085c8548,0x0000000328dc8594,0x00000003489c8594\n"
".quad 0x00000003691c8594,0x00002d00001de794,0x00c000072d1c0340,0x00cfc001a01c0048\n"
".quad 0x00c0001b419c0350,0x0000001921de0460,0x00cfc000c19c0018,0x0000001c01dc0050\n"
".quad 0x104000fc6e5c8650,0x104101fc6d9c8680,0x104202fc6d5c8680,0x104303fc6cdc8680\n"
".quad 0x104404fc6e1c8680,0x104505fc6c1c8680,0x104606fc6b1c8680,0x104707fc68dc8680\n"
".quad 0x104808fc685c8680,0x104909fc6ddc8680,0x104a0afc699c8680,0x104b0bfc6b9c8680\n"
".quad 0x104c0cfc6a5c8680,0x104d0dfc695c8680,0x104e0efc689c8680,0x104f0ffc645c8680\n"
".quad 0x105010fc641c8680,0x105111fc671c8680,0x105212fc631c8680,0x00c0001b21dc0380\n"
".quad 0x0000001d21de0460,0x0000001c01dc0018,0x104000fc6c5c8650,0x104101fc69dc8680\n"
".quad 0x104202fc6b5c8680,0x104303fc625c8680,0x104404fc6a9c8680,0x104505fc6bdc8680\n"
".quad 0x104606fc6a1c8680,0x104707fc675c8680,0x104808fc669c8680,0x104909fc6adc8680\n"
".quad 0x104a0afc62dc8680,0x104b0bfc67dc8680,0x104c0cfc691c8680,0x104d0dfc681c8680\n"
".quad 0x104e0efc66dc8680,0x104f0ffc639c8680,0x105010fc601c8680,0x105111fc63dc8680\n"
".quad 0x105212fc629c8680,0x000000c921de0480,0x000000d1219e0418,0x0000001c8d1d0018\n"
".quad 0x00000020621d0050,0x000000db4d9c0050,0x000000d74d5c0058,0x000000e741dc0058\n"
".quad 0x000000df419c0058,0x000000bb4b9c0058,0x6c00009c89dc0058,0x6a0000b48b5c0030\n"
".quad 0x000000b34b1c0030,0x0e0000c481dc0058,0x0c0000ac819c0030,0x000000a74a5c0030\n"
".quad 0x000000b67c5d0058,0x5c00007c87dc0050,0x0000009b499c0030,0x580000a08a1c0058\n"
".quad 0x000000187adc0030,0x00000097495c0050,0x0000007f1b1c0058,0x52000090891c0050\n"
".quad 0x0000008f48dc0030,0x0000009eba5c0058,0x4c00002c82dc0050,0x0000008b489c0030\n"
".quad 0x00000092c99c0058,0x4a0000808e5c0050,0x00000087485c0030,0x46000074881c0058\n"
".quad 0x0000002e975c0030,0x000000e34c9c0050,0x000000e668dd0058,0x4400006c8d5c0050\n"
".quad 0x42000068895c0030,0x000000b5d69c0030,0x000000c34c1c0050,0x640000a88a9c0058\n"
".quad 0x000000d6375d0030,0x0000002c66dd0050,0x0000007da69c0050,0x600000bc8d9c0050\n"
".quad 0x000000a9d75c0030,0x0000007db6dc0050,0x00000091a69c0050,0x000000d9d75d0050\n"
".quad 0x00000091b6dd0050,0x000000cf4cdc0050,0x000000e5a69c0058,0x00000073471c0050\n"
".quad 0x00000081d85c0058,0x000000e5b75d0050,0x00000047445c0050,0x66000024825c0058\n"
".quad 0x000000d5a6dc0030,0x00000043441c0050,0x00000096169d0058,0x00000025b85c0050\n"
".quad 0x220000388c5c0050,0x00000033431c0030,0x200000008c1c0058,0x000000d5d89c0030\n"
".quad 0x00000069a75c0050,0x00cfa001a6dc0058,0x3800003c8e1c0058,0x00efa001a3dc0030\n"
".quad 0x000000e0939c0058,0x000000e2101c0050,0x000000a8e39c0050,0x000000a8001c0050\n"
".quad 0x180000288ddc0050,0x000000e2229c0030,0x000000dce21c0050,0x000000dc001c0050\n"
".quad 0x000000dca29d0050,0x000000d8821c0050,0x000000d8001c0050,0x000000c4a29c0050\n"
".quad 0x000000a0821d0050,0x000000a0001c0050,0x000000c0ab9d0050,0x000000c4821d0050\n"
".quad 0x000000c4001c0050,0x3a0000bae29c0050,0x00000080821d0030,0x00000080001c0050\n"
".quad 0x000000bae31c0050,0x000000c0821d0050,0x000000c0001c0050,0x00cfa002e39c0050\n"
".quad 0x00000094821d0058,0x000000940bdc0050,0x00efa002e8dc0050,0x00000020801c0058\n"
".quad 0x3a000020845e0058,0x14000020871c0030,0x00000069a01c0030,0xf6aaaaad1c9c0230\n"
".quad 0x00000020f99c0030,0x000000b8c29d0058,0xf6aaaaad131c0230,0x00000021bb1c0032\n"
".quad 0x644000f4a3de0058,0x184000f4a75e0030,0xf58e38e4acdc0230,0x1e000068e01c0032\n"
".quad 0x1e00006a345c0030,0x3a000020e39c0030,0x3a00002233dc0030,0xf4127271c75c0230\n"
".quad 0x66000021b8de0030,0xfc637575c6dc0230,0xf4260e11cd1c0232,0x3a4000b6fcdc0030\n"
".quad 0x364000a6f71c0030,0x684000d6f75c0030,0x0000006ae41c0030,0x0000006aeadd0050\n"
".quad 0x00000021a85c0050,0x00000021a6dd0050,0x644000f4ad1c0050,0x664000c5abdc0030\n"
".quad 0x664000c5ae9e0030,0x00000022ea5c0030,0x00000022e89d0050,0x664000c6e69c0050\n"
".quad 0x664000c6ec9e0030,0x664000c48b9c0030,0x664000c48cde0030,0x000000d2fbdc0030\n"
".quad 0x000000d3a21c0050,0x184000f4ad1c0050,0x584000e4a31e0030,0x4c4000e4ab1e0030\n"
".quad 0x344000e4a69c0030,0x000000d2eb9c0030,0x000000d33f1c0050,0x644000e4a29c0050\n"
".quad 0x3a400026be9e0030,0x3a400026bd1c0030,0x3a400025b99c0030,0x3a4000250edc0030\n"
".quad 0x3a4000269cdc0030,0x3a4000262c9e0030,0x3a4000262adc0030,0x3a400025b6de0030\n"
".quad 0x3a400025041e0030,0x3a4000269a5e0030,0x3a400026189c0030,0x3a400026175e0030\n"
".quad 0x00400100085de430,0x000000b2699c0028,0x000000322b1c0050,0x00cfe002185e0050\n"
".quad 0x00000031d31c0050,0x004000a0089de450,0x00000072171c0028,0x0000006a175c0058\n"
".quad 0x3c4000e0d69c0358,0x38400100771c0020,0x3a400100675c0030,0x00c00081a19c2330\n"
".quad 0x00c00079a1dc0358,0x0000008db8dc0058,0x00000003bedc0050,0x0000001c61dc4350\n"
".quad 0x45c00011a19c0340,0x00c04000d69c0320,0x00000001001c0048,0x004000b071dc4350\n"
".quad 0x3c4000e1a69c0348,0x00000047ae9c0020,0x00000000671c8550,0x000000474d1c0094\n"
".quad 0x0000003b3cdc0050,0x0000003a9a5c0050,0x00c00081a19c2350,0x00c00079a1dc0358\n"
".quad 0x0000003f2c9c0058,0x0000003ebadc0050,0x0000001c61dc4350,0x45c00011a19c0340\n"
".quad 0x00c08000d69c0320,0x000000f21f1c0048,0x004000b071dc4358,0x3c4000e1a71c0348\n"
".quad 0x00c0c000d69c0320,0x00000000675c8548,0x00c00081cf5c2394,0x3c4000e1a69c0358\n"
".quad 0x00c00079cf9c0320,0x45c00011c71c0358,0x00c00081a19c2320,0x00c00079a1dc0358\n"
".quad 0x000000fbd75c4358,0x00c18000df5c0340,0x0000001c66dc4348,0x00c10000d19c0340\n"
".quad 0x004000b1d75c4348,0x45c00011a69c0348,0x3c4000e0641c0320,0x0000009a199c0020\n"
".quad 0x004000b1b6dc4358,0x00c00081019c2348,0x00c0007901dc0358,0x45c00011041c0358\n"
".quad 0x000000ea1e9c0020,0x0000001c645c4358,0x00c14000d19c0340,0x00000002101c0048\n"
".quad 0x004000b1145c4358,0x3c4000e0639c0348,0x000000d21d1c0020,0x000000ce1cdc0058\n"
".quad 0x00c00080e19c2358,0x00c00078e1dc0358,0x45c00010e39c0358,0x000000ca1c9c0020\n"
".quad 0x0000001c63dc4358,0x000000be119c0040,0x0000002a11dc0058,0x3c4000e3d29c0358\n"
".quad 0x0c40010279dc0020,0x0e400100bbdc0030,0x00c00080a19c2330,0x00c00078a1dc0358\n"
".quad 0x00c1c000df5c0358,0x004000b0f3dc4348,0x0000001c62dc4348,0x00000022119c0040\n"
".quad 0x000000ba11dc0058,0x3c4000e3d21c0358,0x0c400102db9c0020,0x0e4001009b5c0030\n"
".quad 0x00c00080819c2330,0x00c0007881dc0358,0x45c00010a29c0358,0x0000008e18dc0020\n"
".quad 0x0000001c625c4358,0x00c20000d19c0340,0x000000b211dc0048,0x000000ae1adc0058\n"
".quad 0x3c4000e0619c0358,0x0e400102ab1c0020,0x784001028a9c0030,0x00c0008061dc2330\n"
".quad 0x00c000786a1c0358,0x00c24000df1c0358,0x000000a61a5c0048,0x000000a071dc4358\n"
".quad 0x4c4001020a1c0040,0x3c4000e3c81c0330,0x00000032199c0020,0x000000ee131c0058\n"
".quad 0x00c00082085c2358,0x00c0007a0edc0358,0x004000b0b2dc4358,0x45c00010821c0348\n"
".quad 0x000000ee185c4320,0x00c28000dedc0340,0x004000b0925c4348,0x4c400102599c0048\n"
".quad 0x45c00010619c0330,0x18400101f95c0020,0x3c4000e3b31c0330,0x00400103901c0020\n"
".quad 0x00c2c000de5c0330,0x004000b071dc4348,0x45c00012081c0348,0x00c00080c7dc2320\n"
".quad 0x00c00078cedc0358,0x3c4000e39e5c0358,0x00c30000d35c0320,0x004000b2185c4348\n"
".quad 0x000000edf7dc4348,0x45c00010c31c0340,0x74400102491c0020,0x00c000839edc2330\n"
".quad 0x00c0007b9f1c0358,0x3c4000e0de9c0358,0x004000b1f35c4320,0x000000f3bedc4348\n"
".quad 0x45c00013979c0340,0x00000001c9dc8520,0x00c00083ae5c2394,0x00c0007baf1c0358\n"
".quad 0x00000001abdc8558,0x000000010b9c8594,0x004000b3b7dc4394,0x684001035d1c0048\n"
".quad 0x00000000e95c8530,0x45c00013a89c0394,0x000000f39e5c4320,0x00000000a91c8540\n"
".quad 0x664001038cdc0094,0x00000000801c8530,0x464001036d5c0094,0x000000006d1c8530\n"
".quad 0x644001037c9c0094,0x004000b398dc4330,0x000000020b5c8548,0x00000000ccdc8594\n"
".quad 0x00000001eb1c8594,0x564001031adc0094,0x000000022c9c8530,0x000000018d5c8594\n"
".quad 0x524001030a5c0094,0x000000016a9c8530,0x000000014adc8594,0x000000012a1c8594\n"
".quad 0x000000004a5c8594,0x00000000299c8594,0x00000000001de794,0x0000000000000080\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0xf145140000000000\n"
".quad 0xaaaaab3fd5555540,0x73cf3d3ce38e393d,0x638e39bdb2cb2dbe,0xcccccd3d8208203c\n"
".quad 0x430c303d2aaaab3c,0x2aaaab3dd34d353e,0x638e393c8208203e,0x000401bce38e393d\n"
".quad 0x00008d0008020400,0x0802040000000200,0x00000a0000008c00,0x00008b0008020400\n"
".quad 0x0802040000000100,0x0000090000008a00,0x0000890008020400,0x0802040000000000\n"
".quad 0x0000080000009b00,0x00009a0008020400,0x0802040000001000,0x0000070000009900\n"
".quad 0x0000980008020400,0x0802040000000f00,0x0000060000009700,0x0000920008020400\n"
".quad 0x0802040000000300,0x0000050000009600,0x0000910008020400,0x0802040000000e00\n"
".quad 0x0000120000009500,0x0000900008020400,0x0802040000000d00,0x0000040000009400\n"
".quad 0x00008f0008020400,0x0802040000000c00,0x0000110000009300,0x00008e0008020400\n"
".quad 0x080a040000000b00,0x2400200000005000,0x0c17040024190300,0x2000040000000000\n"
".quad 0x0c17040011f00000,0x1800030000000000,0x0c17040021f00000,0x1000020000000000\n"
".quad 0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x080d040021f00000,0x0000020003002400,0x00440400005de400,0x00000094015c0428\n"
".quad 0x00000084019c042c,0x0000009c001c042c,0x0000008c009c042c,0x0000009800dc042c\n"
".quad 0x00000088011c042c,0x0c400020515ca32c,0x04400040001ca320,0x0840003030dca320\n"
".quad 0x00c00004509c0320,0x00000010019de248,0x0000000c001cc318,0x8ec0010021dc2340\n"
".quad 0x004000c001dc0318,0x000000fc00a1e250,0x00000014715c0318,0x00000008701c0348\n"
".quad 0x00c0008000dc2348,0x00c00078011c0358,0x0d800080009c0358,0x00000010301c4320\n"
".quad 0x00c00080511c2340,0x0040009000dc4358,0x00000000201c8548,0x00c0007850dc0384\n"
".quad 0x0d8000a0509c0358,0x0000000c40dc4320,0x004000b030dc4340,0x00000000201c8548\n"
".quad 0x00000000001de794,0x0000000000000080,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x080a040000040100,0x1800200000006400,0x0c17040018190300,0x1000020000000000\n"
".quad 0x0c17040021f00000,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x080d040021f00000,0x0000010002001800,0x00440400005de400,0x0000009800dc0428\n"
".quad 0x00000088011c042c,0x0000009c001c042c,0x0000008c009c042c,0x00000094015c042c\n"
".quad 0x00000084019c042c,0x0840003030dca32c,0x04400040001ca320,0x0c400020511ca320\n"
".quad 0x00000010045de220,0x0000000c001cc318,0x7e0000fff1dc0040,0xfe000000009de230\n"
".quad 0x084002e0041c0318,0x01000000015de220,0x0e0000fff21c0019,0x00c00081001c2330\n"
".quad 0x00c0007900dc0358,0x23800081019c0358,0x00000000025de220,0x0000000c001c431a\n"
".quad 0x04e00000515c0040,0x04d01003f0dc0030,0x0040009001dc4330,0x238000a1011c0348\n"
".quad 0x0ae00000929c0020,0x04f01003f31c0030,0x04cff000825e0030,0x004000b0015c4330\n"
".quad 0x238000c1009c0348,0x060000fff2dc0020,0x180000fff35c0030,0x004000d000dc4330\n"
".quad 0x238000e1031c0348,0x1acff000849e0020,0x16cff00084de0030,0x004000f0035c4330\n"
".quad 0x23800101039c0348,0x14cff000855e0020,0xfaaaaaac92dc0230,0x0040011003dc4330\n"
".quad 0x23800121021c0348,0x0000000062dc8520,0xf58e38e5351c0294,0x00400130025c4330\n"
".quad 0x23800141029c0348,0x00000000451c8520,0x00000000251c8594,0x0040015002dc4394\n"
".quad 0x23800161019c0348,0xf58e38e5249c0220,0xf38e38e534dc0230,0x0040017001dc4330\n"
".quad 0x23800181011c0348,0x00000000c49c8520,0x00000000e49c8594,0x00400190015c4394\n"
".quad 0x238001a1009c0348,0x0000000084dc8520,0x00000000a4dc8594,0x004001b000dc4394\n"
".quad 0x238001c1031c0348,0xf38e38e5555c0220,0x004001d0035c4330,0x238001e1039c0348\n"
".quad 0x00000000655c8520,0x0000000044dc8594,0x004001f003dc4394,0x23800201021c0348\n"
".quad 0x00000000251c8520,0x00000000c4dc8594,0x00400210025c4394,0x23800221029c0348\n"
".quad 0x00000000e4dc8520,0x0000000084dc8594,0x0040023002dc4394,0x23800241019c0348\n"
".quad 0x00000000a4dc8520,0x0040025001dc4394,0x23800261011c0348,0x00000000649c8520\n"
".quad 0x00400270015c4394,0x23800281009c0348,0x0000000044dc8520,0x0040029000dc4394\n"
".quad 0x238002a1031c0348,0x0000000024dc8520,0x004002b0035c4394,0x238002c1039c0348\n"
".quad 0x00000000c55c8520,0x004002d003dc4394,0x00000000e55c8548,0x00000000001de794\n"
".quad 0x0000000000000080,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x080a040000040100,0xa000200000005d00,0x0c170400a0190300,0x9800130000000000\n"
".quad 0x0c17040021f00000,0x9000120000000000,0x0c17040021f00000,0x8800110000000000\n"
".quad 0x0c17040021f00000,0x8000100000000000,0x0c17040021f00000,0x78000f0000000000\n"
".quad 0x0c17040021f00000,0x70000e0000000000,0x0c17040021f00000,0x68000d0000000000\n"
".quad 0x0c17040021f00000,0x60000c0000000000,0x0c17040021f00000,0x58000b0000000000\n"
".quad 0x0c17040021f00000,0x50000a0000000000,0x0c17040021f00000,0x4800090000000000\n"
".quad 0x0c17040021f00000,0x4000080000000000,0x0c17040021f00000,0x3800070000000000\n"
".quad 0x0c17040021f00000,0x3000060000000000,0x0c17040021f00000,0x2800050000000000\n"
".quad 0x0c17040021f00000,0x2000040000000000,0x0c17040021f00000,0x1800030000000000\n"
".quad 0x0c17040021f00000,0x1000020000000000,0x0c17040021f00000,0x0800010000000000\n"
".quad 0x0c17040021f00000,0x0000000000000000,0x005de40021f00000,0x00dc042800440400\n"
".quad 0x011c042c00000098,0x001c042c00000088,0x009c042c00000094,0x01dde42c00000084\n"
".quad 0x351ca32800400110,0x065ca32008400030,0x71de032004400020,0x015c044800c000fc\n"
".quad 0x019c042c0000009c,0x021de22c0000008c,0x91dc231905f00000,0x201e041a0e00001d\n"
".quad 0x50dca31800000051,0x211e04200c400040,0x015c001800000065,0x91dc233010cfc000\n"
".quad 0x209e0418a0400111,0x411c00180000000d,0x515c003010cfc000,0x41dc235000f07f00\n"
".quad 0x209c0018a0400111,0x411c003010cfc000,0x515c005000f09f80,0x41dc235800000014\n"
".quad 0x359c031a2000001d,0x209c006000c00018,0x411c005000f07f00,0x31dc23300a000010\n"
".quad 0x66dc0318a0400110,0x209c004800000051,0x33dc233008000008,0xb29c031a2000001c\n"
".quad 0x21dc0020324000e1,0x0005e7208ed06000,0x909c038000000000,0x001c004800fffffd\n"
".quad 0x211e045000cfc000,0x209e041800000059,0x915c031800000009,0x01dc004800c00005\n"
".quad 0x209c005000000010,0x085de45000cfc000,0x081de4280000001c,0x061c862800000008\n"
".quad 0x215e0480104000fe,0x431c031800000015,0x519c004800fffffd,0x215e045000cfc000\n"
".quad 0x671c861800000031,0x515c0080104101fc,0x021de45000cfc000,0x51dc002800000008\n"
".quad 0x025de45000000010,0x891c86280000001c,0x68dc8680104202fc,0x435c0380104303fc\n"
".quad 0x33dc234800c00005,0xa1dc23190ec000fc,0x215e045800c00080,0x021de41800000035\n"
".quad 0x04dde42800000018,0x50dc002800400080,0xa15c035000cfc000,0x639c035800c00078\n"
".quad 0x30dc004800ffff01,0x611c035000000010,0x72dc434800c00101,0x025de44000000014\n"
".quad 0x889c86280000000c,0xa41c0380104404fc,0xd2a4032027c00010,0x211e044800000010\n"
".quad 0x21de041800000011,0xc21c031800000039,0x04a5e44800000058,0x015c002800400080\n"
".quad 0x01dc005000000010,0x285c86500000001c,0x011de480104505fc,0xb45c432800000018\n"
".quad 0x80dc034800400090,0x825c034800c08000,0x831c034800c10008,0x835c034800c23f04\n"
".quad 0x839c034800c2bf00,0x83dc034800c33f08,0x855c034800c38104,0xa7a4034800c40100\n"
".quad 0x401c864800c48000,0x55dc0380104707fc,0x92dc0320324000e1,0xe5640320324000e0\n"
".quad 0x329c0320324000e1,0xc25c0320324000e0,0xd21c0320324000e0,0xe75c0320324000e0\n"
".quad 0xf69c0320324000e0,0x679c8620324000e0,0x00dde480104909fc,0xa19c23280000001c\n"
".quad 0xa1dc035800c00080,0x011de45800c00078,0xa39c032800000008,0x619c432027c00010\n"
".quad 0xb1dc23400000001c,0xb29c035800c00080,0x63dc435800c00078,0x47dc864800400090\n"
".quad 0xb31c0380104606fc,0x711c432027c00010,0x915c234000000028,0x919c035800c00080\n"
".quad 0x435c435800c00078,0x929c034800400090,0x511c432027c00010,0x81dc234000000018\n"
".quad 0x815c035800c00080,0x281c865800c00078,0x42dc4380104808fc,0x821c034800400090\n"
".quad 0x709c432027c00010,0xd0dc234000000014,0xd11c035800c00081,0x225c435800c00079\n"
".quad 0xd19c034800400090,0x309c432027c00011,0xa0dc234000000010,0xa15c035800c00081\n"
".quad 0x21dc435800c00079,0xa11c034800400090,0x309c432027c00011,0x70dc234000000014\n"
".quad 0x769c035800c00081,0x215c435800c00079,0x709c034800400090,0x30dc432027c00011\n"
".quad 0x54e4234000000068,0x55e4035800c00081,0x30dc435800c00079,0x54a4034800400090\n"
".quad 0x34e4432025c00011,0x055c85400000005d,0xe69c858400000001,0x34e4438400000000\n"
".quad 0xc75c854800400091,0xa95c858400000000,0x899c858400000000,0x69dc858400000000\n"
".quad 0x4a1c858400000000,0x2a5c858400000000,0x2aa4858400000000,0x0081e78400000001\n"
".quad 0x83a1004000003c40,0xa3e1005000000071,0x5320005000000075,0x65a1005000000082\n"
".quad 0xa26000500000009e,0xd1e0005000000069,0xe420005000000075,0xf3e0005000000090\n"
".quad 0xc3a0005000000090,0x4361005000000098,0x6321005000000056,0x85e00050000000a5\n"
".quad 0x82a0003012f02001,0xa5a1005800f02001,0xf3e000300ef00001,0xe3a000500000008c\n"
".quad 0xa1a0005000000078,0xd360005000000075,0x042100500000008c,0xc5e000500000008d\n"
".quad 0x52a000302ef02001,0x65a0003014d05001,0xf3e1005000000091,0x8160005000000088\n"
".quad 0xe3a0005000000061,0x61a000500000009c,0xd360005000000090,0x71e0005000000088\n"
".quad 0x042100500000001d,0xa2a0005000000089,0x65a0003014f02001,0xf3e100500000008d\n"
".quad 0xc520005000000084,0x5161005000000071,0xe3a1005000000068,0x61a00050000000a0\n"
".quad 0xd36000500000008c,0x0420005000000084,0x71e0005000000085,0xc2a0005000000090\n"
".quad 0x65a0003014f02001,0xf3e0005000000089,0x5160005000000098,0xe3a1005000000050\n"
".quad 0x61a000500000007c,0xd360005000000088,0x0420005000000080,0x71e0005000000081\n"
".quad 0x546000500000008c,0xd2a0005000000096,0x65a0003014f02001,0xf3e1005000000085\n"
".quad 0x516100500000009c,0xe3a1005000000074,0x61a00050000000a4,0xd360005000000084\n"
".quad 0x0421005000000098,0x71e0005000000079,0xd4e0005000000088,0x40a1005800d02801\n"
".quad 0xa2a000500000008e,0x65a0005000000090,0xf3e0005000000045,0x51600050000000a4\n"
".quad 0xe3a1005000000090,0xc4a0005000000000,0x61a1005800d02801,0xd360005000000094\n"
".quad 0x0420005000000078,0x75e000500000007d,0xa4e0005000000084,0x2260003026f02801\n"
".quad 0xa2a0005000000088,0x61e100500000008c,0xf3e1005000000081,0x51600050000000a8\n"
".quad 0xe3a100500000008c,0x84a00050000000a8,0x61a1003024f02801,0xd360005000000080\n"
".quad 0x042100500000009c,0x0221005000000001,0x80e000500000007a,0x92610050000000a2\n"
".quad 0xc320005000000084,0xa2a00050000000a8,0x71e1005000000088,0xf5a0005000000078\n"
".quad 0x5160003026400014,0xe4e0005000000088,0x61a1005800000038,0x7460005000000078\n"
".quad 0xd360005000000045,0x0ae000500000007c,0x8221003024400015,0xa2a000500000007c\n"
".quad 0x0262005000000084,0xf32200301200003d,0x74a0003018000038,0xf5e000500000000c\n"
".quad 0x516000580000003c,0xf3e0005000000084,0x01e000302600003c,0x61a1005000000041\n"
".quad 0xd3600050000000a0,0x82200050000000a4,0x52a0005000000000,0x5161003014f02002\n"
".quad 0x71e1005000000094,0x61a100301e000040,0xd3e000500000007c,0x0222005000000000\n"
".quad 0x04e0003010000039,0xa36000302e000041,0x5160005000000080,0xe422005000000080\n"
".quad 0x22a100302e000038,0x65e100500000007d,0xd4a0005000000000,0x8120005000000098\n"
".quad 0x1460005800d02802,0x6160005000000081,0x736100300af00002,0x2420005000000041\n"
".quad 0x5120005000000079,0x6460003008f02802,0x54a0003022f00002,0xf160005000000078\n"
".quad 0x03e00050000000a8,0xe12000500000009d,0x1420003008400014,0xe3a0005000000079\n"
".quad 0x7460003026000038,0x83e0003024f00002,0x54a100301ef02002,0x1461005000000038\n"
".quad 0xf1600050000000a1,0x73e000500000007c,0x1420003020f00002,0x516000500000007d\n"
".quad 0xf3e00050000000a4,0x942000500000000c,0x50e0003020f00002,0xf160005000000000\n"
".quad 0x03e000500000007c,0x30e0005000000001,0x91600050000000a8,0xa3e000300af00002\n"
".quad 0xe0e000301ef00002,0x02e1e43006400004,0xf4610028004000c0,0x31e002500000001c\n"
".quad 0x51600030ee082084,0xb520005000000000,0x73e0005800400034,0xa420005800f02000\n"
".quad 0x73a000300af00002,0xb1a0025800d05000,0x11600030f3333336,0x23e0005800000051\n"
".quad 0x23a000301e400055,0x25e000301c400045,0x10e000300e400075,0x64a000300a000051\n"
".quad 0x51e100301ef02000,0x64e0005000000039,0x03a002301ed02000,0x21a00030f18e38e5\n"
".quad 0x34e000500000000d,0x656002500000000d,0xe0e00030f3333335,0xeb2000300cf02000\n"
".quad 0x54e0003026f02000,0x81a100301ef02001,0x562000500000000d,0x44a002301ed02001\n"
".quad 0xc0e10030f3333334,0x05600050000000b1,0x14e200301c400065,0x1b22003026000051\n"
".quad 0x2720003030000051,0x24a000301ef02001,0xb3e000301ed02001,0xa2a1005800400024\n"
".quad 0x34e0005000000000,0xcb20005000000055,0x1b62005000000056,0xa620023038000051\n"
".quad 0xd4e00030f4aaaaac,0xd72000302600003c,0xdb2000305800003c,0x84e0005000000056\n"
".quad 0x8720003026f00001,0xa620003038f00001,0xdb22003030400094,0x1b6200305800003c\n"
".quad 0xa4e1003024000051,0xc6a000500000004d,0xd560005000000062,0xd4a1005000000056\n"
".quad 0x5961005000000071,0xd6a200500000006a,0xb72000302a00003c,0xbb2200302e400086\n"
".quad 0xa6a000302e400086,0x6560005000000061,0x65e200302e400085,0x8a2100302e400085\n"
".quad 0x662000500000006a,0x6ae0003038400085,0x66a2003058400085,0x65a2003058400085\n"
".quad 0x1760003038400085,0x1620003030000051,0x15a0003056000051,0x076000302c000051\n"
".quad 0x16a000303a400065,0x05a0003034000051,0xd76000302c400065,0x062000303a00003c\n"
".quad 0xd5a0003030400065,0x06a000302c00003c,0xa760003034400065,0xa5a000303a400094\n"
".quad 0xd62000302c400094,0xd6a000303000003c,0x9ae000303400003c,0x976200303acfa000\n"
".quad 0x35a300302ccfa000,0xa620005000000092,0xa6a0003030400094,0x0b61003034400094\n"
".quad 0x65a000500000009a,0x9622005000000089,0x96a0003030cfa000,0x2261003034cfa000\n"
".quad 0xd0a0005000000088,0x65a000500000007a,0x4b60005000000085,0x20a100302a400084\n"
".quad 0x65a000500000009c,0x5b60005000000099,0x20a100305af00000,0x65a100500000007c\n"
".quad 0x926000500000009d,0x20a0005000000084,0x65a00050000000a4,0xeb600050000000a5\n"
".quad 0x926100305af00000,0x20a1005000000080,0x65a1005000000000,0xcb600050000000a9\n"
".quad 0x926000305acfa000,0x20a0005000000078,0x6b600050000000a8,0x926100305acf8001\n"
".quad 0x4be200500000007c,0x2b62003038400084,0x926000305acf8000,0x4ba0005000000000\n"
".quad 0x69a1003058400084,0x4b600050000000b6,0x4c22003038400084,0x9ae0003058400084\n"
".quad 0x1b60003056cf8000,0x1be000305a000051,0x1ba000305e000051,0x1c2000305c000051\n"
".quad 0x6ae2003060000051,0x4522003056cf8001,0x446000302a400084,0x456200302e400084\n"
".quad 0xb12003302e400084,0x4ae10020324000e1,0x59200050000000ae,0x5460003028f00000\n"
".quad 0x5b20003022f00000,0x416023302af00000,0x4520035800c00080,0x0721e45800c00078\n"
".quad 0xe9200028004000a0,0x5160433048f00000,0x4120034000000050,0xb520032039c00010\n"
".quad 0xc922004800c04001,0x5160433048cfa000,0x45200348004000b0,0xb2e00020324000e1\n"
".quad 0x41e0855800cfa000,0x6920009400000000,0x9622003048cf8001,0x96a2003030cf8000\n"
".quad 0x4120233034cf8000,0x4160035800c00081,0xb1e0035800c00079,0x9760004800c08001\n"
".quad 0x416043303acf8000,0x4120034000000014,0x7520032039c00011,0x66a00020324000e0\n"
".quad 0x5160433034cf8001,0x41e02348004000b0,0x4560035800c00081,0x41a0855800c00079\n"
".quad 0x28a1009400000000,0x71e043500000006a,0x41a0034000000054,0xb120032039c00011\n"
".quad 0xb160034800c0c001,0x71e0434800c10001,0x41200348004000b0,0x55200320324000e0\n"
".quad 0x64e08520324000e0,0x4560239400000000,0x45e0035800c00080,0x4120035800c00078\n"
".quad 0x41a0232039c00010,0x5160435800c00081,0x41e003400000005d,0xb4e0035800c00079\n"
".quad 0x5160434800c14001,0x61e04348004000b0,0x41a003400000001c,0x40e0852039c00011\n"
".quad 0xb520039400000000,0x71e0434800c18001,0x35600348004000b0,0x45200320324000e1\n"
".quad 0xb0e00320324000e1,0x64a0854800c1c001,0x4120239400000000,0x4160035800c00081\n"
".quad 0x30e0035800c00079,0x51a02320324000e0,0x51e0035800c00081,0x44a0435800c00079\n"
".quad 0x3120234000000014,0x3160035800c00080,0x65e0435800c00078,0xb1a003400000001c\n"
".quad 0x44e0434800c20001,0x0120004000000014,0x016000305a400065,0x01e000305e400065\n"
".quad 0x0b6000305c400065,0x6420033060400065,0xe1a00020324000e0,0xeba0003022f00000\n"
".quad 0x03a0233058f00000,0x0460035800c00081,0xd122005800c00079,0xdb2200300800003c\n"
".quad 0xe46043300a00003c,0xb3a0034000000044,0xd1e2004800c24001,0xdb6200300e00003c\n"
".quad 0xe3a003305a00003c,0xc1a20020324000e0,0xa12200300ccfa000,0xe160233008400094\n"
".quad 0xe360035800c00080,0xab22005800c00078,0xa1e2003058400094,0x53e043300e400094\n"
".quad 0xb360034000000034,0xc160004800c28001,0xab6200305ccfa000,0xd32003305a400094\n"
".quad 0x81200020324000e0,0x8b2200300800002c,0xc2a023305800002c,0xc360035800c00080\n"
".quad 0x81e2005800c00078,0x8ba000300e00002c,0xa36043305a00002c,0xb2a0034000000034\n"
".quad 0x6be2004800c2c001,0x21a000300ccf8001,0xa2a0033048cf8000,0x6b620020324000e0\n"
".quad 0x6620003030cf8001,0xa22023303acf8001,0xa2e0035800c00080,0x65a2005800c00078\n"
".quad 0x992100300acf8001,0x82e043500000001a,0xb22003400000002c,0x9762004800c30001\n"
".quad 0x9a60003008cf8000,0x822003300ecf8000,0x9c220020324000e0,0x9ba0003058cf8000\n"
".quad 0x816023305ccf8000,0x81a0035800c00080,0x2260005800c00078,0x2b2000302ccf8000\n"
".quad 0x51a043303acf8000,0xb160034000000018,0xaaa1004800c34001,0x2760005000000026\n"
".quad 0x5160033052cf8000,0x2be20020324000e0,0x226200305ecf8000,0x5120233060cf8000\n"
".quad 0x51e0035800c00080,0x2a62005800c00078,0xf7e100305ccf8000,0x41e0435000000025\n"
".quad 0xb12003400000001c,0x1861004800c38001,0xb620035000000062,0x4120034800c40001\n"
".quad 0x38e10020324000e0,0x86200350000000b6,0x45a02320324000e1,0x40a0035800c00080\n"
".quad 0xe7a1005800c00078,0x0821005000000075,0x60a04350000000b2,0x55a0034000000009\n"
".quad 0xb560032039c00011,0x8b20034800c3c001,0x75e0435800c00079,0x45200348004000b1\n"
".quad 0x56a0032039c00011,0x6ae08520324000e1,0x2560439400000001,0x34a00348004000b1\n"
".quad 0xa0e0232039c00010,0xab60035800c00081,0x34e0435800c00079,0x04200348004000b1\n"
".quad 0x30e0432039c00011,0x8b602340000000b4,0x1460435800c00081,0xe3a00348004000b1\n"
".quad 0xdb20432039c00010,0x48e08540000000b2,0xf3e0439400000001,0xc3200348004000b0\n"
".quad 0x28a0852039c00010,0x0860859400000001,0xd360439400000001,0xa2a00348004000b0\n"
".quad 0xe960852039c00010,0x79e1009400000000,0xb2e04350000000be,0x82200348004000b0\n"
".quad 0xc820852039c00010,0xa9a0859400000000,0x6260439400000000,0x51a00348004000b0\n"
".quad 0xb160032039c00010,0xb6e0034800c44001,0x71e0434800c48001,0x41200348004000b0\n"
".quad 0x5760032039c00010,0xbba00320324000e0,0x21604320324000e1,0xa0a00348004000b0\n"
".quad 0xd6a0232039c00011,0xdb60035800c00081,0x30e0435800c00079,0x86200348004000b0\n"
".quad 0xa6e0432039c00011,0x87a08540000000b5,0xc660439400000000,0xd6a00348004000b2\n"
".quad 0xe760232039c00011,0xeb20035800c00082,0xb6e0435800c0007a,0xe7200348004000b1\n"
".quad 0xdb20432039c00012,0x69e08540000000b1,0x0021009400000000,0x4a208550000000a4\n"
".quad 0xc760439400000000,0x27e08548004000b2,0x8920859400000000,0xa020859400000001\n"
".quad 0xcaa0859400000001,0x00a1e79400000001,0x46c0034000001240,0x0ac1e44800000059\n"
".quad 0xb0800328004000a0,0xb180034800c04001,0xb1c0034800c10001,0x2140034800c14001\n"
".quad 0xb0c00320324000e0,0xb200034800c08001,0x6080034800c18001,0x75800320324000e0\n"
".quad 0x51802320324000e0,0x51c0035800c00080,0x30c0035800c00078,0x85000320324000e0\n"
".quad 0xb1000320324000e0,0x5200034800c0c001,0x6140432057c00010,0x31c023400000001c\n"
".quad 0x32c0035800c00080,0x4100035800c00078,0x52404320324000e0,0x31800348004000b0\n"
".quad 0x71c0432057c00010,0x414023400000002c,0x4540035800c00080,0x71c0435800c00078\n"
".quad 0x41000348004000b0,0x5140432057c00010,0x20c0234000000054,0x24c0035800c00080\n"
".quad 0x5140435800c00078,0x20800348004000b0,0x30c0432057c00010,0x62c023400000004c\n"
".quad 0x6540035800c00081,0xb480035800c00079,0x30c0434800c1c001,0xb5404348004000b0\n"
".quad 0x6580034000000054,0x44c0232057c00011,0x42c0035800c00081,0xb380035800c00079\n"
".quad 0x2480034800c24001,0xb4000320324000e1,0xb300034800c20001,0x55c0434800c28001\n"
".quad 0x34c04348004000b1,0x450003400000002d,0x8700852057c00011,0xe380039400000000\n"
".quad 0x2b002320324000e0,0x2b40035800c00081,0x6740855800c00079,0x0400039400000000\n"
".quad 0xc3000320324000e1,0xb2800320324000e0,0x3540434800c2c001,0xe2402348004000b1\n"
".quad 0xe700035800c00080,0xc4c0435800c00078,0x02002340000000b6,0x0b80035800c00081\n"
".quad 0xc1c0235800c00079,0xcb00035800c00080,0xa280035800c00078,0x24800320324000e0\n"
".quad 0x9740432057c00011,0x8180434000000070,0x72404340000000b8,0xa2002340000000b0\n"
".quad 0xa1c0035800c00080,0xb440035800c00078,0x34c0434800c30001,0x04000348004000b1\n"
".quad 0x8200432057c00011,0x11c003400000001c,0xb3c00320324000e1,0x6440434800c34001\n"
".quad 0xe3800348004000b0,0xf180032057c00010,0xb3400320324000e0,0xd3c0434800c38001\n"
".quad 0xc3000348004000b1,0xdb00032057c00010,0xb2c00320324000e0,0x9340434800c3c001\n"
".quad 0xa2800348004000b0,0x4600852057c00010,0x7240239400000000,0x7b40035800c00080\n"
".quad 0x2680855800c00078,0xb740039400000000,0xb7000320324000e0,0x82c0434800c40001\n"
".quad 0x72000348004000b0,0x9140432057c00010,0xc1c02340000000b4,0xc600035800c00082\n"
".quad 0xd0c0235800c0007a,0xd240035800c00081,0xc700035800c00079,0x61002320324000e1\n"
".quad 0x6b80035800c00080,0x7080435800c00078,0x30c0434000000060,0xc1c0234000000024\n"
".quad 0xc600035800c00081,0x5240435800c00079,0x41004348004000b0,0x61800340000000b8\n"
".quad 0x7680432057c00010,0xb140034000000060,0x41c0434800c44001,0xc1000348004000b0\n"
".quad 0x5b00032057c00012,0xb6c00320324000e0,0x2140434800c48001,0xd0800348004000b0\n"
".quad 0xc740232057c00011,0xcb40035800c00082,0x30c0435800c0007a,0xc6000348004000b0\n"
".quad 0x6880852057c00011,0xb700039400000001,0x48408520324000e1,0xa640439400000001\n"
".quad 0x29008548004000b1,0xd6c0439400000001,0xc6800340000000b5,0x08c0852057c00012\n"
".quad 0xc740239400000001,0xcb00035800c00081,0xea00855800c00079,0xc000859400000000\n"
".quad 0xb6c0439400000000,0xaa808548004000b1,0xc700039400000000,0xd740432057c00011\n"
".quad 0x87c08540000000b1,0x6a40859400000000,0x4940859400000000,0xd740439400000000\n"
".quad 0x27808548004000b1,0x89c0859400000000,0xa800859400000001,0xc980859400000001\n"
".quad 0x001de79400000001,0x0000008000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0xf145140000000000,0xaaaaab3fd5555540\n"
".quad 0x73cf3d3ce38e393d,0x638e39bdb2cb2dbe,0xcccccd3d8208203c,0x0004013d2aaaab3c\n"
".quad 0x0000ce0008020400,0x0802040000000900,0x000004000000c900,0x0000c80008020400\n"
".quad 0x0802040000000300,0x000008000000cc00,0x0000c70008020400,0x0802040000000200\n"
".quad 0x000001000000c500,0x0000c30008020400,0x0802040000000000,0x000007000000d300\n"
".quad 0x0000d10008020400,0x0802040000000600,0x000005000000ca00,0x00006300080a0400\n"
".quad 0x2819030028002000,0x000000000c170400,0x11f0000024000500,0x000000000c170400\n"
".quad 0x11f0000020000400,0x000000000c170400,0x21f0000018000300,0x000000000c170400\n"
".quad 0x11f0000010000200,0x000000000c170400,0x21f0000008000100,0x000000000c170400\n"
".quad 0x21f0000000000000,0x03002400080d0400,0x005de40000000200,0x00dc042800440400\n"
".quad 0x011c042c00000098,0x015c042c00000088,0x019c042c0000009c,0x001c042c0000008c\n"
".quad 0x009c042c00000094,0x335ca32c00000084,0x581ca32008400030,0x065ca3200c400040\n"
".quad 0x201e042004400020,0x061c031800000035,0x909c036000c0001a,0x001c004800fffffd\n"
".quad 0x20de045000cfc000,0x209e041800000061,0x015c001800000009,0x221c00500000000c\n"
".quad 0x909c035000cfc000,0x025de44800c00005,0x87dc862800000014,0x209e0480104000fc\n"
".quad 0x211c001800000009,0xd09c035000cfc000,0x209e044800fffffc,0x41dc861800000009\n"
".quad 0x209c0080104101fc,0x215c005000cfc000,0x025de4500000000c,0x855c862800000014\n"
".quad 0x451c8680104202fc,0xd19c0380104303fc,0x01dc234800c00004,0x82dc03190ec000fe\n"
".quad 0x209e044800c00101,0x085de41800000019,0x07a1e42800400080,0x209c002800400080\n"
".quad 0x831c035000cfc000,0x62a0034800ffff01,0x225c00480000002c,0x809c03500000000c\n"
".quad 0x015de44800000035,0x40dc862800000024,0x219e0480104404fc,0x215e041800000031\n"
".quad 0x239c03180000002d,0x23dc0320324000e0,0x241c034800c07ffc,0x245c034800c10004\n"
".quad 0x24dc034800c23f00,0x25dc034800c2befc,0x831c864800c33f04,0xa7600380104505fc\n"
".quad 0x02dc004800c48000,0x029de45000000014,0x015c002800000010,0xe89c235000000018\n"
".quad 0xe95c035800c00080,0x225c035800c00078,0x271c034800c38100,0xe39c034800c400fc\n"
".quad 0xf19c032043c00010,0xa01c8620324000e0,0x23dc4380104707fc,0x049c034000000096\n"
".quad 0x159c0320324000e1,0x36dc0320324000e1,0x769c0320324000e1,0x991c0320324000e1\n"
".quad 0xc8dc0320324000e0,0x029de420324000e1,0xd8a0032800000020,0x411c8620324000e1\n"
".quad 0x025de480104909fc,0x615c232800000014,0x645c035800c00080,0xf3dc435800c00078\n"
".quad 0x641c034800400090,0x24dc232043c00010,0x515c435800c00081,0x25dc034000000044\n"
".quad 0xa19c865800c00079,0x545c4380104606fc,0x249c034800400090,0x315c432043c00011\n"
".quad 0x629c23400000005d,0x62dc035800c00081,0x54dc435800c00079,0x659c034800400090\n"
".quad 0xb75c232043c00011,0xa15c435800c00081,0x825c86400000002c,0xb21c0380104808fc\n"
".quad 0x55dc435800c00079,0xb71c034800400090,0xd15c432043c00011,0xa21c234000000021\n"
".quad 0xa29c035800c00081,0x575c435800c00079,0xa69c034800400090,0x815c432043c00011\n"
".quad 0x421c234000000028,0x42dc035800c00082,0x56dc435800c0007a,0x429c034800400090\n"
".quad 0x815c432043c00012,0x321c23400000002c,0x395c035800c00082,0x52dc435800c0007a\n"
".quad 0x391c034800400090,0x815c432043c00012,0x2220234000000094,0x2860035800c00082\n"
".quad 0x99dc235800c0007a,0xd3dc23190ec000fd,0xd5dc23190e0000fc,0x595c43190ec000fc\n"
".quad 0x29a0034800400090,0x816043203dc00012,0x07dc234000000084,0x49dc04190e0000fe\n"
".quad 0x59e0430c24000044,0xe39c854800400090,0x49dc048400000000,0x079c850c2000004c\n"
".quad 0x24dc858400000001,0x685c858400000001,0xc71c858400000001,0xa6dc858400000001\n"
".quad 0xa89c858400000001,0x415c858400000000,0x68e0858400000002,0x021de48400000002\n"
".quad 0x00000728000000fc,0x0011e760000000a0,0x99dc234000000060,0x0031f4190e0000fd\n"
".quad 0x021df24000000000,0x021df2180000000c,0x89dc231800000004,0x0011e7190ec00004\n"
".quad 0x89dc234000004020,0x000007190ec0000c,0x0031f460000003a0,0x0000074000000000\n"
".quad 0x0005e76000000140,0x0029f440000000a0,0x08dde44000000000,0x06dde42800000014\n"
".quad 0x00dde42800000070,0x04ddf42800000050,0x015de42800000078,0x071de4280000008c\n"
".quad 0x051de4280000006c,0x079df4280000000c,0x000007280000004c,0x000de76000000140\n"
".quad 0x0021f440000000a0,0x001de44000000000,0x015de42800000010,0x08dde42800000070\n"
".quad 0x089df4280000006c,0x011de42800000084,0x071de42800000000,0x06dde42800000014\n"
".quad 0x085df4280000008c,0x019de22800000088,0xf7dc0018f38e38e4,0x655c00300e400007\n"
".quad 0x631e003006400014,0x625c003028400014,0x619c1030000000fc,0xf61d0030080000fc\n"
".quad 0x129c00500000001d,0xe75d005000000026,0x895c00500000004d,0xca5d005000000055\n"
".quad 0xa61c00500000006d,0xf35c005000000070,0x3a1c00500000007d,0xe81c005800d02801\n"
".quad 0x349c005000000079,0xf59c00500000004d,0xe41c005800f02001,0xd91c00500000004d\n"
".quad 0x929d005000000055,0x861c005000000016,0x7a9c005000000011,0xd35d00500000001c\n"
".quad 0xe75c005000000078,0xfa5c003050f02801,0xea1d003040f02001,0xe59c003024f00001\n"
".quad 0x041c00302cd05000,0x595d005000000055,0x491c005000000052,0x861c005000000052\n"
".quad 0xd35c00500000006d,0x7a5c0050000000a8,0x55dd003052f02000,0x8a1c005000000039\n"
".quad 0xe59c005000000056,0x041c00302cf02001,0x595d005000000051,0x491d00500000000e\n"
".quad 0x861d00500000000e,0x949c005000000089,0xd35d00500000004a,0x75dc00500000004c\n"
".quad 0x8a1c005000000051,0x759c005000000052,0x041c00302cf02000,0x595c00500000000d\n"
".quad 0x491d005000000032,0x861d005000000032,0xd35c005000000019,0x249c005000000054\n"
".quad 0x75dc005000000055,0x8a1c00500000000d,0x359c00500000000e,0x041c00302cf02001\n"
".quad 0x595c005000000031,0x491c005000000026,0x861d005000000072,0xd35c005000000015\n"
".quad 0x249c005000000050,0x19dc005000000051,0x75dc005000000086,0x8a1c005000000031\n"
".quad 0x569d005000000032,0x659c005000000051,0x041d005000000055,0x595d005000000085\n"
".quad 0x491d005000000012,0x861d00500000006e,0xd35c005000000001,0x249c00500000000c\n"
".quad 0x75dc00500000000d,0x8a1c005000000025,0xa81c00500000009e,0x659c00500000000d\n"
".quad 0x041d005000000051,0x595c005000000025,0x491c00500000001a,0x861d005000000016\n"
".quad 0x921d00500000008d,0xd35c005000000010,0x2a5c005000000030,0x75dc005000000031\n"
".quad 0x849d005000000071,0x081d005000000026,0xa29c005000000032,0x659c00500000008c\n"
".quad 0x041d00500000000d,0x595d005000000011,0x491d005000000002,0x8a1c00500000008e\n"
".quad 0x799c005800000061,0x821d005800d02800,0xd35d005000000018,0x75dc005000000084\n"
".quad 0x99dc005000000011,0x659c00500000009e,0x041d005000000031,0x475c005000000089\n"
".quad 0x581e00303a400036,0x429e003040000092,0x4a5c003014000062,0x4a9c005800000092\n"
".quad 0xf99c003050000092,0x821c00304cf02801,0xd35c005000000000,0x591c005000000024\n"
".quad 0x75dc005000000096,0x159c00500000006d,0x0a1d00302cf02002,0x245c005000000019\n"
".quad 0x599c005800d02802,0x521e00304c400036,0xc41c003010000062,0x491d00301af00001\n"
".quad 0x75dc003054000096,0x595c005000000019,0x835e003052000096,0x6a5c003052000061\n"
".quad 0x145c005000000025,0x75dc003022f02802,0x8a9d005000000015,0x9a1c005000000002\n"
".quad 0x845c005000000072,0x75dc003022400035,0x861c005000000001,0x895c00304a000061\n"
".quad 0x0a1c005000000012,0x79dc005000000011,0x741c005000000026,0x55dc00500000008d\n"
".quad 0xc9dc00500000006e,0xba1c00304ef00001,0x295c003050f00001,0x79dc00302ef02002\n"
".quad 0x05dd005000000012,0x541c005000000061,0x23dc00500000001a,0x249d00500000008a\n"
".quad 0xb95c005000000011,0x8a1d00304ef00001,0x041c00500000008a,0x249c005000000015\n"
".quad 0x595c00500000003d,0x89dc00500000003e,0x03dc00500000001a,0x541c005000000001\n"
".quad 0x59dc00500000001a,0xf3dc00304ef00000,0x02dde4500000008c,0x795c0028004000c0\n"
".quad 0x83dc005000000002,0xbb9c00301e400025,0x395c005800400054,0xf61c02304af00002\n"
".quad 0x541c0030ee082084,0x5b5d003020f00000,0x83dc005000000092,0x891c005800d05001\n"
".quad 0x659c025800f02001,0x7a1c0030f3333336,0x041c00301e400065,0xd95c005000000001\n"
".quad 0x73dc0058000000ba,0x791c003048400075,0x341c003030400095,0xd9dc003020f00002\n"
".quad 0x65dc00304a0000ba,0xe61d00301ef02001,0x6a1c0050000000a0,0x039c02301ed02001\n"
".quad 0x759c0030f18e38e5,0x8a1c00500000009d,0xd5dc02500000009e,0xe59c0030f3333335\n"
".quad 0xea1c00302cf02000,0x249d003050f02000,0x19dc025000000019,0xf59d0030f3333335\n"
".quad 0x77dc005000000059,0x7a5c00301ef02001,0xa35d00301ed02001,0x75dd005000000036\n"
".quad 0x7a9c0050000000a0,0x7a1c00301ef02002,0x21dd00301ed02002,0x09dc005000000001\n"
".quad 0xd49e00301c400085,0xda5e00303e0000ba,0xb3dc0030520000ba,0x249c005800400044\n"
".quad 0x9a5c00500000009d,0xda9e00500000009e,0x77dc0230540000ba,0xd49c0030f4aaaaac\n"
".quad 0xda5c00302400003c,0xaa9c00305200003c,0xf49c00500000009e,0xfa5c003024f00001\n"
".quad 0x77dc003052f00001,0xda9e00303e4000b4,0xda1e00305400003c,0xe49d0030500000ba\n"
".quad 0xa79c005000000049,0x89dc00500000007e,0x6b1e00500000009e,0x179d0030484000a6\n"
".quad 0xd85e00500000007a,0x6a9c00304e00003c,0xd9dc0030484000a6,0x185c0030484000a5\n"
".quad 0xda1e00500000007e,0xd91c0030484000a5,0x285d0030584000a5,0xd89e005000000086\n"
".quad 0xd7dc0030584000a5,0xd99e0030544000a5,0xd75c0030544000a5,0xd91c0030480000ba\n"
".quad 0xd89c0030440000ba,0xd7dc00304c0000ba,0x075c00303e0000ba,0x089c00303a400085\n"
".quad 0x07dc003044400085,0x091c00303e400085,0xd89c003048400085,0xd7dc00304400003c\n"
".quad 0xd75c00303e00003c,0x789c00303a00003c,0xd91c0030444000b4,0x77dc00304800003c\n"
".quad 0x099e00303e4000b4,0x775c003044cfa002,0x791c00303a4000b4,0x489f0030484000b4\n"
".quad 0x34dd005000000055,0x07dc0050000000a5,0x075e00303ecfa002,0x091c00303acfa002\n"
".quad 0x9a5d003048cfa002,0x289c005000000070,0xa81d00500000000e,0x969c00500000000d\n"
".quad 0x289c005000000012,0x081c005000000032,0xa69d005000000032,0x289c00500000006d\n"
".quad 0x1a5c005000000072,0x081d00304e4000a5,0xa69d005000000026,0x289d005000000019\n"
".quad 0x5a5c00500000006e,0x081c003052f00002,0xa69c005000000012,0x289c005000000015\n"
".quad 0xea5c005000000016,0x081d003052f00000,0xa69d00500000001a,0x289d005000000001\n"
".quad 0xaa5c00500000008e,0x081c003052cfa000,0xa69c005000000002,0x2a5c00500000008d\n"
".quad 0x0adc003052cf8002,0x19de00303ecf8002,0xa7de00304e4000a5,0x2a5e003052cf8001\n"
".quad 0x1ade003056cf8002,0xc7dd0030544000a5,0x571d00500000007d,0x1a5c0050000000a5\n"
".quad 0x1a9c0030544000a5,0x1b1e0030584000a5,0x155c0030584000a5,0xda5c0030504000a5\n"
".quad 0xdadc0030520000ba,0xda9c0030560000ba,0xdb1c0030540000ba,0x1a1e0030580000ba\n"
".quad 0x2b9c0330504000a5,0x59dc0020324000e0,0x545c00304ef00002,0x5a1c00302af00002\n"
".quad 0xe55c233050f00002,0xe95c035800c00082,0x0a5c005800c0007a,0xb2dc003052400085\n"
".quad 0x5bdc435800cfa000,0x095de44000000095,0x255c0328004000a0,0x075e004800c04000\n"
".quad 0xeb9c03303acf8002,0x555c03204bc00012,0x091e0020324000e1,0xfbdc433048cf8002\n"
".quad 0x5b5c0348004000b2,0x099c005800c00079,0xe61c85304ccf8002,0x275e009400000002\n"
".quad 0x561c23303acf8002,0x5b9c035800c00081,0x255c03204bc00011,0x8bdc434800c08000\n"
".quad 0x475d0040000000b5,0x555c035000000075,0xfbdc4320324000e1,0x561c2348004000b2\n"
".quad 0x5b5c035800c00081,0xe59c855800c00079,0x5c1c039400000002,0x8c5c43204bc00011\n"
".quad 0x255c0340000000b5,0x1c5c434800c0c000,0x5b9c0348004000b3,0x255c0320324000e1\n"
".quad 0x049c854800c10000,0xe59c239400000003,0xe61c035800c00082,0x555c035800c0007a\n"
".quad 0xeb9c0320324000e1,0x6bdc43204bc00012,0x549c234000000061,0x559c035800c00081\n"
".quad 0xfbdc435800c00079,0x5c1c0348004000b2,0x2c5c43204bc00011,0x249c034000000059\n"
".quad 0x255c034800c14000,0x1c5c434800c18000,0xe5dc8548004000b3,0x259c039400000002\n"
".quad 0x04dc8520324000e1,0x561c039400000003,0x249c0320324000e1,0x65dc234800c1c000\n"
".quad 0x6b5c035800c00081,0x84dc235800c00079,0x855c035800c00081,0x249c035800c00079\n"
".quad 0x75dc4320324000e1,0x355c4340000000b5,0x24dc234000000055,0x2b5c035800c00081\n"
".quad 0x2c1c035800c00079,0x0b9c004800c20000,0x34dc433056400085,0x0b5c0040000000b5\n"
".quad 0x0bdc003054400085,0x041c033058400085,0xea9c0020324000e3,0xe9dc00304ef00000\n"
".quad 0xeadc003022f00000,0x039c233050f00000,0x045c035800c00081,0xdb1e005800c00079\n"
".quad 0xdb9e00305200003c,0xe45c43305c00003c,0x239c034000000044,0xdb5e004800c24000\n"
".quad 0xdbde00305a00003c,0xe39c03305e00003c,0xaa1e0020324000e0,0xaa5c003054cfa000\n"
".quad 0xe35c233056cfa000,0xe3dc035800c00080,0x7a9e005800c00078,0x7ade0030584000b4\n"
".quad 0xd3dc43305a4000b4,0x235c03400000003c,0xa9de004800c28000,0x7b1e00304ecfa000\n"
".quad 0xd35c03305c4000b4,0x7b5e0020324000e0,0x8a9c00305e4000b4,0xd1dc23305400002c\n"
".quad 0xd29c035800c00080,0x8b1e005800c00078,0x8ade00305800002c,0x729c43305600002c\n"
".quad 0x21dc034000000028,0x8b5c004800c2c000,0x2bdc00305a00002c,0x71dc033050cf8002\n"
".quad 0x2b9e0020324000e0,0xabdc00304ecf8002,0x721c23305ecf8001,0x72dc035800c00080\n"
".quad 0x29dc005800c00078,0x2a1c003048cf8002,0x82dc43304ccf8002,0x221c03400000002c\n"
".quad 0x2a5e004800c30000,0x589d003052cf8002,0x821c0350000000bc,0xab9e0020324000e0\n"
".quad 0x0a9e00305ccf8001,0x815c233054cf8002,0x899c035800c00080,0x0c1e005800c00078\n"
".quad 0x0bdc003058cf8002,0x599c433056cf8002,0x215c034000000098,0x0b5c004800c34000\n"
".quad 0xb81d00305acf8002,0x515c0350000000b9,0x659c0320324000e0,0xab1c00204bc00011\n"
".quad 0x591c233054cf8001,0x56dc035800c00080,0x75dc435800c00078,0x851c0348004000b1\n"
".quad 0x46dc43204bc00011,0xa91c00400000006e,0x2a5c033052cf8001,0x555c434800c38000\n"
".quad 0x249c0348004000b1,0x9a5c03204bc00011,0x391d0020324000e2,0xaade005000000092\n"
".quad 0xaa9c003060cf8001,0xa8de00305ecf8001,0x9b5c23305acf8001,0x969c035800c00082\n"
".quad 0x34dc435800c0007a,0x041c0348004000b1,0xd69c43204bc00011,0x2b5c03400000006a\n"
".quad 0x145c434800c3c000,0xe39c0348004000b1,0xdb5c03204bc00010,0xca1d0020324000e2\n"
".quad 0xf3dc4350000000a0,0x39dd0048004000b0,0xd31c03500000009c,0xd0dc23204bc00010\n"
".quad 0xd61c035800c00082,0xa35c435800c0007a,0x729c0348004000b0,0x30dc43204bc00010\n"
".quad 0x261c034000000060,0xb2dc434800c40000,0x821c0348004000b0,0x861c03204bc00010\n"
".quad 0x9b1d0020324000e1,0x6b9d0050000000b0,0x81dc2350000000ac,0x8bdc035800c00081\n"
".quad 0x625c435800c00079,0x519c0348004000b2,0x7bdc43204bc00010,0x499d0040000000bc\n"
".quad 0x215c0350000000a8,0xb1dc434800c44000,0x911c0348004000b1,0x5a5c03204bc00012\n"
".quad 0x26dc0320324000e0,0xa15c434800c48000,0xd09c0348004000b1,0x969c23204bc00012\n"
".quad 0x9adc035800c00082,0x30dc435800c0007a,0x861c0348004000b0,0x671c85204bc00011\n"
".quad 0xba9c039400000001,0x475c8520324000e1,0xa6dc439400000001,0xf65c4340000000ad\n"
".quad 0x29dc8548004000b2,0x969c039400000001,0x0a1c85204bc00012,0xaa5c239400000001\n"
".quad 0xaadc035800c00082,0xe79c855800c0007a,0xcb1c859400000000,0xb6dc439400000000\n"
".quad 0xa7dc8548004000b1,0xaa9c039400000000,0x9adc43204bc00012,0x899c8540000000ae\n"
".quad 0x681c859400000000,0x001d009400000000,0x485c85500000008c,0xbadc439400000000\n"
".quad 0x2b9c8548004000b2,0x889c859400000000,0xa01c859400000001,0xa91c859400000001\n"
".quad 0x001de79400000002,0x809c034000000880,0x021de44800000035,0x039de428004000e0\n"
".quad 0x209c0328004000f0,0x829c0320324000e0,0x03dde45800c00050,0x22dc2328004000a0\n"
".quad 0xe29d835800c00080,0x809c034000000028,0x835c032005c04000,0xb29c435800c00048\n"
".quad 0x22dc034800000028,0x2b1c035800c00078,0xe35dc3201fc00010,0xa09c434000000034\n"
".quad 0x2b5c43400000002c,0x8b9c0348004000b0,0xc1dc852059c10000,0xdbdc439400000002\n"
".quad 0x8c1c034800000036,0xe4dc85205dc10000,0xfc5c439400000002,0x8a1c034800000036\n"
".quad 0x07dc852061c10000,0x1a5c439400000003,0x8a9c034800000037,0x879c852051c10000\n"
".quad 0x9adc439400000002,0x861c034800000036,0xa0dc852055c10000,0xb65c439400000002\n"
".quad 0x891c034800000036,0x831c852031c10000,0x995c439400000001,0x839c034800000035\n"
".quad 0x455c852049c10000,0x53dc439400000002,0x859c034800000036,0xe51c85201dc10000\n"
".quad 0xf5dc439400000000,0x829c034800000034,0x689c85202dc10000,0x72dc439400000001\n"
".quad 0x841c034800000035,0xa01c852015c10000,0xb45c439400000000,0x899c034800000034\n"
".quad 0x08dc852021c10000,0x19dc439400000001,0x849c034800000035,0x619c85204dc10000\n"
".quad 0x74dc439400000002,0x809c034800000036,0x215c852025c10000,0x30dc439400000001\n"
".quad 0x879c034800000035,0x285c852005c10000,0x37dc439400000000,0x861c034800000034\n"
".quad 0xe11c85203dc10000,0xf65c439400000001,0x839c034800000035,0x86dc852031c10000\n"
".quad 0x93dc439400000001,0x829c034800000035,0xe25c85201dc10000,0xf2dc439400000000\n"
".quad 0xa71c854800000034,0x001de79400000000,0x0000008000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x638e390000000000,0xf145143ef5c28f3d\n"
".quad 0xaaaaab3fd5555540,0x73cf3d3ce38e393d,0x638e39bdb2cb2dbe,0xcccccd3d8208203c\n"
".quad 0x0004013d2aaaab3c,0x0000a60008020400,0x0802040000000800,0x000002000000a100\n"
".quad 0x00009f0008020400,0x0802040000000100,0x0000000000009d00,0x0000ad0008020400\n"
".quad 0x0802040000000700,0x000006000000ab00,0x0000a40008020400,0x0802040000000500\n"
".quad 0x000009000000a800,0x0000a30008020400,0x0802040000000400,0x000003000000a200\n"
".quad 0x00006600080a0400,0x2019030020002000,0x000000000c170400,0x21f0000018000300\n"
".quad 0x000000000c170400,0x11f0000010000200,0x000000000c170400,0x21f0000008000100\n"
".quad 0x000000000c170400,0x21f0000000000000,0x06004800080d0400,0x005de40000000400\n"
".quad 0x009c042800440400,0x00dc042c00000098,0x001c042c00000088,0x079c042c00000094\n"
".quad 0x251ca32c00000084,0x011c042006400030,0x009c042c0000009c,0x019de22c0000008c\n"
".quad 0x071ca31905f00000,0x20de04203c400020,0x411ca31800000051,0x209e042004400040\n"
".quad 0x315c001800000071,0x201e04300ccfc000,0x209c001800000011,0x515c00300ccfc000\n"
".quad 0x001c005000f07f00,0x209c00300ccfc000,0x515c005000f09f80,0x459c035800000014\n"
".quad 0x001c006000c00018,0x209c005000f07f00,0x675c03300a000008,0xffdc854800000051\n"
".quad 0x009c00c900000c03,0x001de43004000000,0xd15c032800400020,0x21dc0020384000e1\n"
".quad 0x0fdc03208ed06000,0xffdc04200a000004,0x43dc2350ee0000ff,0xc09c03188ec00005\n"
".quad 0x019c044800fffffd,0x23dc032c00000084,0x0000071a22c000f4,0x619e036000006600\n"
".quad 0x43dc236000c00008,0x61dc031a22c000f9,0x621c034800c00400,0x43dc234800c00800\n"
".quad 0x43dc2318a2c00004,0x0005e71a22c000f8,0x209e0440000064c0,0x30dc001800000009\n"
".quad 0x21de045000cfc000,0x219c001800000059,0xc09c035000cfc000,0x32dc004800c00005\n"
".quad 0x029de4500000001c,0xa69c862800000018,0x209e0480104000fc,0x435c031800000009\n"
".quad 0x209c004800fffffd,0x221e045000cfc000,0x029de41800000035,0xa55c862800000008\n"
".quad 0x821c0080104101fc,0x825c005000cfc000,0x021de4500000001c,0x891c862800000018\n"
".quad 0x021de480104202fc,0x895c862800000008,0x439c0380104303fc,0x43dc234800c00005\n"
".quad 0x52dc23190ec000fc,0x221e045800c00080,0x531c031800000039,0x04dde45800c00078\n"
".quad 0x811c002800400080,0x021de45000cfc000,0x63dc032800000008,0x41dc004800ffff01\n"
".quad 0x611c03500000001c,0xb31c434800c00101,0x025de44000000030,0x899c86280000001c\n"
".quad 0xe2e40380104404fc,0x211e044800000010,0x221e041800000011,0x541c03180000003d\n"
".quad 0x315c002027c00010,0xd25c035000000010,0x04a5e44800000058,0x30dc002800400080\n"
".quad 0x68dc865000000020,0x011de480104505fc,0xc45c432800000018,0x91dc034800400090\n"
".quad 0x921c034800c08000,0x935c034800c10008,0x939c034800c23f04,0x93dc034800c2bf00\n"
".quad 0x95dc034800c33f08,0x965c034800c38104,0x485c864800c40100,0xb1240380104606fc\n"
".quad 0x72dc034800c48000,0x01dde420384000e0,0x831c03280000000c,0x761c0320384000e0\n"
".quad 0xd25c0320384000e1,0xe21c0320384000e0,0xf6dc0320384000e0,0x95dc0320384000e0\n"
".quad 0x689c8620384000e1,0xb19c2380104808fc,0xb1dc035800c00080,0x4664035800c00078\n"
".quad 0x011de420384000e0,0xb39c032800000008,0x619c432027c00010,0xc1dc23400000001c\n"
".quad 0xc29c035800c00080,0x63dc435800c00078,0x47dc864800400090,0xc31c0380104707fc\n"
".quad 0x711c432027c00010,0x915c234000000028,0x919c035800c00080,0x435c435800c00078\n"
".quad 0x929c034800400090,0x511c432027c00010,0x81dc234000000018,0x815c035800c00080\n"
".quad 0x281c865800c00078,0x42dc4380104909fc,0x821c034800400090,0x709c432027c00010\n"
".quad 0xb0dc234000000014,0xb11c035800c00081,0x225c435800c00079,0xb19c034800400090\n"
".quad 0x309c432027c00011,0x80dc234000000010,0x815c035800c00081,0x21dc435800c00079\n"
".quad 0x811c034800400090,0x309c432027c00011,0x70dc234000000014,0x761c035800c00081\n"
".quad 0x215c435800c00079,0x709c034800400090,0x30dc432027c00011,0x94e4234000000060\n"
".quad 0x95e4035800c00081,0x30dc435800c00079,0x94a4034800400090,0x34e4432025c00011\n"
".quad 0x041c85400000005d,0xe6dc858400000001,0x34e4438400000000,0xcb5c854800400091\n"
".quad 0xa9dc858400000000,0x8a1c858400000000,0x6a5c858400000000,0x4a9c858400000000\n"
".quad 0x2adc858400000000,0x2b24858400000000,0x0001e78400000001,0xa21c004000003cc0\n"
".quad 0xa19d005000000069,0xb1dd005000000055,0x545c0050000000b5,0x709c005000000055\n"
".quad 0x865d00500000008a,0x83dd0050000000a6,0x411d00500000006c,0x639c005000000096\n"
".quad 0xb4dc005000000090,0x729c00500000006d,0xa61c005000000090,0x221c005800d02802\n"
".quad 0x91dd0050000000a0,0xf45c0050000000ad,0x55dc005000000044,0xd51c005800d02801\n"
".quad 0xb49c0050000000b6,0x465c0050000000b5,0xe3dd005000000098,0x425d005000000094\n"
".quad 0xa59c005000000042,0xa4dc005800f02001,0xa39c003026f02001,0x719c005000000094\n"
".quad 0x829c003030f02802,0xa09c005000000080,0x249c00302ef02801,0xb61d005000000091\n"
".quad 0x921d003028f00001,0x925c00500000008d,0x05dc005000000094,0x565c00302cd05001\n"
".quad 0xf3dd003026f02001,0x84dc005000000098,0x249c005000000091,0xe39d005000000095\n"
".quad 0x925c005000000098,0xb5dc005000000098,0x951c00302ef02001,0xa29c005000000051\n"
".quad 0xf3dc0050000000a4,0x34dc00500000008c,0x249c005000000095,0xe39d005000000099\n"
".quad 0x145d00500000008c,0x925c0050000000b5,0x55dc00500000008c,0xa29d00302ef02001\n"
".quad 0x451c0050000000a8,0xf3dc005000000091,0x34dc005000000088,0x249c005000000099\n"
".quad 0xe39c00500000008d,0x145c0050000000a0,0x925c005000000091,0xd5dc005000000088\n"
".quad 0xa29d00302ef02002,0x451c005000000084,0xf3dd005000000095,0x72dc005000000080\n"
".quad 0x34dc00500000009e,0x249d00500000008d,0xe39d00500000009d,0x145c0050000000a4\n"
".quad 0x925c005000000095,0x75dc0050000000a0,0xa29d005000000091,0x451c0050000000ac\n"
".quad 0xf61c005000000099,0x215d005000000084,0x34dc005000000082,0x249d00500000002d\n"
".quad 0xe3dc005000000089,0x145c0050000000ac,0x925c005000000099,0x75dc005000000080\n"
".quad 0xa29d005000000095,0x439c00500000007c,0x515d00500000008d,0x351d005000000084\n"
".quad 0x2bdd005000000089,0x71dc005000000081,0x145c0050000000b0,0x925c00500000008d\n"
".quad 0x75dc0050000000a4,0xe4dc005000000099,0xf49d00500000002c,0xa29d0050000000b0\n"
".quad 0xd35c0050000000b0,0x839d005800d02802,0x515c00500000007d,0x12dd00500000007c\n"
".quad 0x9b9c00500000009d,0x765c005000000084,0x23de00500000008d,0xb35c00300e000029\n"
".quad 0xe25e00301af02801,0xe45c003010000048,0xa1dc003004400014,0x45dd005800000028\n"
".quad 0xa09c005000000081,0xe21e00300c400014,0xb51c00300a000028,0xe19c005000000088\n"
".quad 0x715c0050000000ae,0x22dc003032f02002,0x265c00301a400015,0x2b9c005800000049\n"
".quad 0xe49c00300e000049,0xa0dc005000000038,0xf61d0050000000aa,0x335c0050000000aa\n"
".quad 0x81dc005000000089,0x249d003028f00002,0x74dc00305c000039,0xe39c00500000000d\n"
".quad 0xa51e003032000038,0x85dd003032000028,0x565c005000000085,0x861c005000000088\n"
".quad 0x335d00301af00002,0x94dc005000000085,0x75dd0050000000a1,0xa39c00500000007d\n"
".quad 0x34dc00301c000028,0x729d005000000081,0x751c005000000051,0x31dc005000000080\n"
".quad 0x84dc0050000000a5,0x951c005000000081,0xa1dc003028f00002,0x94dc00300ef02002\n"
".quad 0x451d003026f00002,0x71dc0050000000a9,0x34dc005000000084,0x451c00500000000d\n"
".quad 0x71dc005000000085,0x619c0050000000ac,0xb51c00500000007c,0x70dc003028f00002\n"
".quad 0x31dc00500000007c,0x619c005000000085,0x30dc0050000000b0,0x44dc0050000000b0\n"
".quad 0xb1dc00500000007d,0xe0dc00300ef00002,0x619d003006400004,0xc4dc005000000038\n"
".quad 0x739c003026f00002,0x31dc02500000007c,0x031de430ee082084,0x34dd0028004000c0\n"
".quad 0xc49c005000000049,0x739c00301cf00002,0xc59c005800d05000,0x751c005800400034\n"
".quad 0x639c005800f02000,0x115c02301c400044,0x30dc0030f3333335,0x651c005800000059\n"
".quad 0x661c003028400054,0x01dd00300e400074,0x35dc005000000039,0x541c003006000059\n"
".quad 0x519c003028d02000,0x239c023028f02000,0x041c0030f18e38e5,0xb15c02500000005d\n"
".quad 0x619c0030f3333334,0xeb9c00500000005c,0x25dc023020f02000,0x541c0030f3333334\n"
".quad 0x565c003028f02000,0x515d003028d02000,0x755c0050000000b9,0xe19c003028f02001\n"
".quad 0x751c00300cf02000,0x25dc003028d02001,0x3b9e00301c400065,0x3bde003020000059\n"
".quad 0xa19d003032000059,0xc69c005000000019,0xe65c005800400024,0xd35d00500000005e\n"
".quad 0xfb9c00500000007c,0x3bde00500000005e,0xa55c00302a000059,0xd41c023032000068\n"
".quad 0xa65c0030f4aaaaac,0xfb9c00305c000068,0x055c00500000005e,0x065c00302af00001\n"
".quad 0x3bde003032f00001,0xd41c003028000059,0xab9e003020400094,0xb55d00305c000068\n"
".quad 0xf5dc005000000055,0xe6dc00500000005e,0xd51d005000000042,0xa65e005000000066\n"
".quad 0x79dd00302e000068,0x16dc00500000006e,0x1b9e003030400085,0x945c003030400085\n"
".quad 0xb41c005000000041,0xb5dc003036400084,0xaa9d003030400084,0xb45c005000000046\n"
".quad 0xb61e00305c400084,0xb65e003030400084,0xbb5e00305c400084,0x32dc003036400084\n"
".quad 0x341c003020000059,0x345c003022000059,0x365c003032000059,0x22dc00305a000059\n"
".quad 0x241c003016400065,0x245c003020400065,0x265c003022400065,0xa2dc003032400065\n"
".quad 0xa41c003016000068,0xa45c003020000068,0xa65c003022000068,0xd2dc003032000068\n"
".quad 0xd41c003016400094,0xd45c003020400094,0xd65c003022400094,0x9b5c003032400094\n"
".quad 0x941e003016cfa000,0x945c003020cfa000,0x965e003022cfa000,0x525f003032cfa000\n"
".quad 0x2bdd005000000092,0x42dd0050000000a2,0x911c005000000098,0xfbdc005000000098\n"
".quad 0xb25c005000000082,0x411c00500000008c,0xf2dd00500000008c,0x2bdc0050000000a6\n"
".quad 0x411c00302e400084,0xb2dd0050000000a0,0x3c1c005000000084,0x411d00305ef00000\n"
".quad 0xb2dc0050000000a4,0xec1c0050000000ac,0x4bdc003060f00000,0xb11d0050000000ac\n"
".quad 0x925d00500000007c,0xf2dd005000000088,0xfbdc0050000000b2,0x925c003060cfa000\n"
".quad 0x411c005000000080,0xbbdc0050000000b0,0x925d00305ecf8000,0x2c5e005000000084\n"
".quad 0x4bde003036400084,0x925c00305ecf8000,0x2c1c00500000007c,0x8a1d00305c400084\n"
".quad 0x2bdc0050000000be,0x2c9e003036400084,0x9b5c00305c400084,0x3bdc00305acf8000\n"
".quad 0x3c5c00305e000059,0x3c1c003062000059,0x3c9c003060000059,0xbb5e003064000059\n"
".quad 0x259e00305acf8000,0x24dc00302e400084,0x25de003030400084,0xd09c033030400084\n"
".quad 0x4b5d0020384000e1,0x36dc0050000000b6,0x34dc00302cf00000,0x391c003026f00000\n"
".quad 0x20dc23302ef00000,0x259c035800c00080,0x0b9de45800c00078,0x945e0028004000a0\n"
".quad 0x30dc433022cf8000,0x209c034000000058,0xd59c03205dc00010,0x965c004800c04001\n"
".quad 0x30dc433032cf8000,0x659c0348004000b0,0x21dc8520384000e1,0x609c239400000000\n"
".quad 0x60dc035800c00081,0x20dc435800c00079,0x609c03400000000c,0xd59c03205dc00011\n"
".quad 0x30dc434800c08001,0x659c0348004000b0,0x219c8520384000e1,0x61dc239400000000\n"
".quad 0x65dc035800c00081,0x619c035800c00079,0x71dc43205dc00011,0xd09c03400000005c\n"
".quad 0xd0dc034800c0c001,0x71dc434800c10001,0x209c0348004000b0,0x359c0320384000e0\n"
".quad 0x655c8520384000e0,0x25dc239400000000,0x261c035800c00080,0x209c035800c00078\n"
".quad 0x619c23205dc00010,0x70dc435800c00081,0x61dc034000000061,0xd55c035800c00079\n"
".quad 0x30dc434800c14001,0x61dc4348004000b0,0x619c03400000001c,0x215c85205dc00011\n"
".quad 0xd59c039400000000,0x71dc434800c18001,0x561c0348004000b0,0xd09c0320384000e1\n"
".quad 0x651c854800c1c001,0x615c039400000000,0x80dc2320384000e1,0x859c035800c00081\n"
".quad 0x251c035800c00079,0x519c2320384000e0,0x51dc035800c00080,0x359c435800c00078\n"
".quad 0x409c234000000058,0x40dc035800c00081,0x65dc435800c00079,0xd1dc03400000001c\n"
".quad 0x255c434800c20001,0x219c00400000000c,0x209c003060400065,0x20dc00305e400065\n"
".quad 0x2c1c003062400065,0x749c033064400065,0xebdc0020384000e0,0xe1dc003036f00000\n"
".quad 0xec5c003026f00000,0x239c233048f00000,0x24dc035800c00081,0xa09e005800c00079\n"
".quad 0xa6de003004000068,0xe4dc433006000068,0xd39c03400000004c,0xac9e004800c24001\n"
".quad 0xac1e00300c000068,0xe39c033060000068,0xfbde0020384000e0,0xf91e00305ecfa000\n"
".quad 0xe0dc23300ecfa000,0xe29c035800c00080,0xf19c005800c00078,0xd69e003062cfa000\n"
".quad 0x329c433036400094,0xd0dc034000000028,0xd1de004800c28001,0xd09e003004400094\n"
".quad 0x30dc033064400094,0xd35e0020384000e0,0xdc1c033060400094,0x33dc234800c2c001\n"
".quad 0x36dc035800c00080,0xbbdc005800c00078,0xbc5e00305ecf8000,0xf3dc433048cf8000\n"
".quad 0xc6dc00400000006c,0x031c035800cfa000,0x9c1e0020384000e3,0x81dc003020cf8000\n"
".quad 0x869e00300e00006c,0x809e00303400006c,0x86dc00300400006c,0xc21c23301a00006c\n"
".quad 0xc35c035800c00080,0x491c005800c00078,0xbbdc00305ecf8000,0x835c433022cf8000\n"
".quad 0xd21c034000000034,0xbc1e004800c30001,0xb41c003060cf8000,0x821c033032cf8000\n"
".quad 0xb45e0020384000e0,0xb91d00300ccf8000,0x819c235000000092,0x82dc035800c00080\n"
".quad 0x91de005800c00078,0x969e00300ecf8000,0x62dc433034cf8000,0xd19c03400000002c\n"
".quad 0x965c004800c34001,0x9adc003004cf8000,0x619c033036cf8000,0x861c0320384000e0\n"
".quad 0x46de00205dc00011,0x609c233034cf8000,0x625c035800c00080,0x469c005800c00078\n"
".quad 0x4c5e003032cf8000,0x225c433062cf8000,0x409c004000000024,0xd45c033022cf8000\n"
".quad 0x4ade004800c38001,0xcb1d003056cf8000,0x109c03500000000a,0x445c0020384000e1\n"
".quad 0x665c43300ecf8000,0x211c2348004000b1,0x21dc035800c00080,0x559c035800c00078\n"
".quad 0x699d00205dc00010,0x41dc4350000000be,0x75dc43400000001c,0xd11c0348004000b1\n"
".quad 0x451c034800c3c001,0x38dd00205dc00011,0x411c035000000042,0x555c4320384000e0\n"
".quad 0x249c0348004000b1,0x415c23205dc00011,0x4bdc035800c00080,0x34dc435800c00078\n"
".quad 0xe41c0348004000b1,0x515c43205dc00010,0xdbdc0340000000bc,0x289d004800c40001\n"
".quad 0xa45c435000000046,0x339c0348004000b0,0xfbdc03205dc00010,0x185d0020384000e2\n"
".quad 0xf3dc43500000006e,0xf0dc2348004000b0,0xf29c035800c00082,0xc31c035800c0007a\n"
".quad 0xd6dc03205dc00010,0x30dc434800c44001,0xd35c434000000028,0x829c0348004000b0\n"
".quad 0x081d00205dc00010,0xb69c03500000006a,0xb2dc4320384000e1,0x621c0348004000b0\n"
".quad 0xa6dc03205dc00010,0xd75c035800c00079,0x925c434800c48001,0x219c0348004000b0\n"
".quad 0xa09c23205dc00010,0x595d005800c00081,0x71dc4350000000c2,0x411c0348004000b0\n"
".quad 0x26dc43205dc00010,0xd75c03400000006c,0x515c4320384000e1,0xf09c0348004000b0\n"
".quad 0x8b5c85205dc00012,0x695c859400000001,0x30dc439400000001,0xa69c0348004000b0\n"
".quad 0x499c85205dc00011,0x28dc859400000001,0xb6dc439400000001,0xd71c0348004000b1\n"
".quad 0xdb9c23205dc00011,0xd75c035800c00081,0x09dc855800c00079,0x9a5d009400000001\n"
".quad 0x0bdc0450000000c6,0xe89c852c00000084,0xca1c859400000000,0xe75c439400000000\n"
".quad 0xa81c854000000076,0xfbde039400000000,0x8a5c856000c0000a,0xf61d009400000000\n"
".quad 0x6a9c8550000000ad,0xd75c439400000000,0x485c8548004000b1,0xffdc859400000000\n"
".quad 0x291c85c900000002,0xffdc859400000000,0xa61c85c900000402,0xffdc859400000001\n"
".quad 0xcb1c95c900000802,0x0081e79400000001,0x00a00440000000c0,0x20a2032c00000084\n"
".quad 0x2fe0856000c00008,0x2fe085c900000000,0x2fe085c900000400,0x00a1e7c900000800\n"
".quad 0xa380004000000640,0xd440005000000069,0xb4000050000000b6,0x43c000500000006d\n"
".quad 0x5380005000000092,0x040100301cf00001,0x3340005000000045,0xe38000500000008e\n"
".quad 0x03c000500000003c,0x530000500000003d,0x2280005000000096,0x748000500000008a\n"
".quad 0xe38000500000009e,0xf3c1005000000034,0x1140005000000034,0x62c0005000000086\n"
".quad 0x820000500000009a,0x24400050000000a2,0xe341005000000029,0xf380005000000030\n"
".quad 0xb100005000000030,0xa4810050000000ae,0x01c000300af00002,0x1400005000000082\n"
".quad 0xd301005000000021,0xe2c100500000002c,0xf0c000500000002c,0x244100500000007d\n"
".quad 0x9180005000000011,0x03c00050000000a6,0xc28000500000001d,0xb200005000000028\n"
".quad 0xc080005000000020,0x13410050000000b2,0xf2c000500000000d,0xa1c1005000000018\n"
".quad 0x818100500000001c,0x0240045000000018,0xd201002c00000084,0x7140005000000008\n"
".quad 0x04c1e25000000014,0x6100001800000004,0x9242035000000010,0xb180006000c00008\n"
".quad 0x50c1005000000020,0xf4c085500000000c,0x408100c900000c03,0x9180855000000008\n"
".quad 0x90c085c900000800,0x908085c900000000,0x4b9c03c900000400,0x075de44800000059\n"
".quad 0xe09c0328004000a0,0xe11c034800c04002,0xe1dc034800c08002,0xe25c034800c0c002\n"
".quad 0x20dc034800c14002,0xe21c0320384000e0,0x419c034800c10002,0x711c0320384000e0\n"
".quad 0x95dc0320384000e0,0x31dc2320384000e0,0x325c035800c00080,0x809c035800c00078\n"
".quad 0xe2dc0320384000e0,0x321c034800c18002,0x70dc43203bc00010,0xb51c034000000024\n"
".quad 0x61dc2320384000e0,0x62dc035800c00080,0x325c435800c00078,0x40dc2348004000b0\n"
".quad 0x43dc035800c00080,0x619c035800c00078,0x71dc43203bc00010,0x24dc23400000002c\n"
".quad 0x259c035800c00080,0x361c435800c00078,0x72dc23400000003c,0x73dc035800c00081\n"
".quad 0xe15c035800c00079,0x71dc434800c1c002,0x30dc4348004000b0,0x411c034000000059\n"
".quad 0xb59c43203bc00010,0x53dc03400000003c,0x815c4320384000e0,0x209c0348004000b1\n"
".quad 0x44dc23203bc00010,0x42dc035800c00081,0x30dc435800c00079,0x761c0348004000b0\n"
".quad 0xe49c03203bc00011,0x34dc434800c20002,0x665c43400000002d,0x459c0348004000b1\n"
".quad 0x855c85203bc00011,0x249c039400000000,0xe41c0320384000e1,0xe31c034800c24002\n"
".quad 0x35dc434800c28002,0xfbdc2348004000b1,0xfc1c035800c00080,0xf51c035800c00078\n"
".quad 0x6b5c85203bc00010,0x225c239400000000,0x23dc035800c00081,0x041c035800c00079\n"
".quad 0xc31c0320384000e1,0xe29c0320384000e0,0x919c434800c2c002,0x04dc23400000003c\n"
".quad 0x055c035800c00081,0xc1dc235800c00079,0xc25c035800c00080,0xa29c035800c00078\n"
".quad 0xf21c4320384000e0,0x3bdc4340000000c2,0x73dc434000000055,0xa4dc234000000024\n"
".quad 0xa1dc035800c00080,0x855c435800c00078,0x249c0348004000b0,0x325c43203bc00011\n"
".quad 0xe45c03400000001d,0x64dc434800c30002,0xe39c0348004000b0,0x041c034800c34002\n"
".quad 0x121c03203bc00011,0xe1dc0320384000e1,0xf45c4320384000e0,0xc39c0348004000b2\n"
".quad 0x469c85203bc00010,0xe35c039400000000,0xe2dc034800c38002,0xf3dc434800c3c002\n"
".quad 0xa31c0348004000b0,0x711c23203bc00010,0x26dc855800c00080,0x715c039400000000\n"
".quad 0xd19c035800c00078,0xbbdc0320384000e0,0xeb5c0320384000e0,0x82dc234800c40002\n"
".quad 0x8c1c035800c00080,0x935c435800c00078,0x411c4348004000b0,0x829c034000000014\n"
".quad 0x625c23203bc00010,0x669c035800c00080,0xf0dc235800c00078,0xf15c035800c00082\n"
".quad 0xdb5c035800c0007a,0xb21c4320384000e2,0x909c4340000000c0,0x315c434000000068\n"
".quad 0xd25c234000000014,0xd0dc035800c00082,0x82dc435800c0007a,0x721c0348004000b0\n"
".quad 0x90dc43203bc00010,0xe1dc03400000000c,0x425c434800c44002,0x619c0348004000b0\n"
".quad 0x769c03203bc00010,0xe6dc0320384000e0,0x21dc434800c48002,0xf11c0348004000b0\n"
".quad 0xab9c23203bc00012,0xabdc035800c00081,0x515c435800c00079,0xd09c0348004000b0\n"
".quad 0x899c85203bc00012,0xb71c039400000001,0x30dc4320384000e1,0x68dc8548004000b0\n"
".quad 0xe6dc439400000001,0xa69c0340000000be,0x491c85203bc00011,0x295c859400000001\n"
".quad 0xcb5c239400000001,0xcb9c035800c00081,0x0a9c855800c00079,0xb6dc439400000001\n"
".quad 0xe7dc8548004000b1,0xc71c039400000000,0xcb1c85203bc00011,0xd75c439400000000\n"
".quad 0xa85c8540000000ba,0x8adc859400000000,0x69dc859400000000,0xd75c439400000000\n"
".quad 0x481c8548004000b1,0x2a5c859400000000,0xa89c859400000000,0xca1c959400000001\n"
".quad 0x6fdc859400000001,0x7fdc85c900000000,0x8fdc95c900000000,0xffdc04c900000000\n"
".quad 0x00dde450ee0000ff,0xf09c852800400160,0x31dc23c100000c03,0x00dde41a0ec09c3c\n"
".quad 0x21dc232800400020,0x31dc231900c00004,0x0021e71a00c00004,0x001c238000000000\n"
".quad 0xe1dc035800c00004,0x0081e71b0e000001,0xe0a00340000001e0,0xe122034800000001\n"
".quad 0x2162036000c00009,0x40e0856000c00008,0x50a085c100000000,0x31a000c100000000\n"
".quad 0x40e0855000000008,0x41a085c100000400,0x50a085c900000000,0x31a000c100000400\n"
".quad 0x40e0855000000008,0x41a085c100000800,0x50a085c900000400,0x30a000c100000800\n"
".quad 0x40a0855000000008,0xffdc04c900000800,0x01dc2350ee0000ff,0x0001e71a0ec00004\n"
".quad 0x001de74003fffd60,0x0000008000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0xd5555540f1451400,0xe38e393daaaaab3f,0xb2cb2dbe73cf3d3c\n"
".quad 0x8208203c638e39bd,0x2aaaab3ccccccd3d,0x080204000004013d,0x000003000000b500\n"
".quad 0x0000b90008020400,0x0802040000000800,0x000002000000b400,0x0000b20008020400\n"
".quad 0x0802040000000100,0x000000000000b000,0x0000c00008020400,0x0802040000000700\n"
".quad 0x000006000000be00,0x0000b70008020400,0x0802040000000500,0x000009000000bb00\n"
".quad 0x0000b60008020400,0x080a040000000400,0x3c00200000006c00,0x0c1704003c190300\n"
".quad 0x3800070000000000,0x0c17040011f00000,0x3000060000000000,0x0c17040021f00000\n"
".quad 0x2800050000000000,0x0c17040021f00000,0x2000040000000000,0x0c17040021f00000\n"
".quad 0x1800030000000000,0x0c17040021f00000,0x1000020000000000,0x0c17040011f00000\n"
".quad 0x0800010000000000,0x0c17040021f00000,0x0000000000000000,0x080d040021f00000\n"
".quad 0x0000030005003c00,0x00440400005de400,0x0000009800dc0428,0x00000088011c042c\n"
".quad 0x00000094001c042c,0x00000084009c042c,0x0000009c015c042c,0x0000008c019c042c\n"
".quad 0x0840003033dca32c,0x0440002000dca320,0x0c400040559ca320,0x8ec00008f1dc2320\n"
".quad 0x00fffff8311c0318,0x00c00019675c0348,0x05f0000001dde260,0x0000003d261e0419\n"
".quad 0x20c000ec41dc0318,0x0000003dd11c031a,0x0000000d201e0448,0x0ecfc001865c0018\n"
".quad 0x00000059209e0430,0x00c34000439c0318,0x0ecfc00005dc0048,0x00f07f0192dc0030\n"
".quad 0x0ecfc00028dc0050,0x064000e0e31c0330,0x00c3800041dc0320,0x00f09f81729c0048\n"
".quad 0x0000002cb2dc0050,0x004000a0021de458,0x00c00080c45c2328,0x00c00078c49c0358\n"
".quad 0x064000e0735c0358,0x00c3c000419c0320,0x16000028a69c0048,0x11c00010c51c0330\n"
".quad 0x00000049129c4320,0x00c00080d2dc2340,0x00c00078d31c0358,0x064000e0641c0358\n"
".quad 0x00c40000415c0320,0x004000b0a55c4348,0x11c00010d49c0348,0x00000030b29c4320\n"
".quad 0x00c0008102dc2340,0x00c00079031c0358,0x064000e056dc0358,0x00c44000409c0320\n"
".quad 0x004000b0a4dc4348,0x11c00011041c0348,0x00000030b29c4320,0x00c00081b2dc2340\n"
".quad 0x00c00079b35c0358,0x064000e0279c0358,0x00c48000471c0320,0x004000b0a45c4348\n"
".quad 0x11c00011b31c0348,0x00000034b29c4320,0x00c00081e2dc2340,0x00c00079e6dc0358\n"
".quad 0x20c000f4f1dc2358,0x064000e1c7dc031a,0x004000b0a35c4320,0x00f07f02325c0048\n"
".quad 0x11c00011e29c0350,0x0000006cb2dc4320,0xa0c0000961dc2340,0x00c00081f6dc2318\n"
".quad 0x00c00079f79c0358,0x004000b0b2dc4358,0x34000024925c0048,0x11c00011f21c0330\n"
".quad 0x00000079b69c4320,0x20c000f563dc2340,0x8ed0600091dc001a,0x00c00060105d0320\n"
".quad 0x0600008d2adc8448,0x064000e0401c0314,0x004000b1a25c4320,0x00005e000005e748\n"
".quad 0x00fffffc321c0340,0x00cfc001829c0048,0x00000075225e0450,0x00000021221e0418\n"
".quad 0x00c0000432dc0318,0x00000024a35c0048,0x00cfc000821c0050,0x0000003404dde450\n"
".quad 0x00000020049de428,0x104000fd2c9c8628,0x0000002d22de0480,0x00fffffcf51c0318\n"
".quad 0x00cfc000b31c0048,0x0000005122de0450,0x104101fcccdc8618,0x00cfc000b2dc0080\n"
".quad 0x00000020041de450,0x00000024b35c0028,0x00000034045de450,0x104202fd0c1c8628\n"
".quad 0x104303fccd1c8680,0x00c00004f55c0380,0x00c00080041c2348,0x00c00078045c0358\n"
".quad 0x0000005522de0458,0x0ec000fd63dc2318,0x00400080079de419,0x00cfc000b2dc0028\n"
".quad 0x00ffff01d59c0350,0x0000004504dc4348,0x00000024b25c0040,0x00c00101d2dc0350\n"
".quad 0x00000024035de448,0x104404fccd5c8628,0x0000002d54640380,0x0000002d22de0448\n"
".quad 0x00000059235e0418,0x3dc00010069c0318,0x00000075441c0320,0x004000800025e448\n"
".quad 0x0000002ca2dc0028,0x00000034a35c0050,0x104505fc8d9c8650,0x00000030029de480\n"
".quad 0x0040009136dc4328,0x00c08001025c0348,0x00c1000904dc0348,0x00c23f05051c0348\n"
".quad 0x00c2bf01055c0348,0x00c33f09059c0348,0x00c3810505dc0348,0x00c40101061c0348\n"
".quad 0x00c4800116640348,0x104707fcaa5c8648,0x064000e0945c0380,0x064000e134dc0320\n"
".quad 0x064000e1451c0320,0x064000e1589c0320,0x064000e1641c0320,0x064000e1785c0320\n"
".quad 0x064000e1881c0320,0x064000e197e40320,0x104909fcca9c8620,0x00000034025de480\n"
".quad 0x00c00081131c2328,0x00c00079135c0358,0x00000020029de458,0x3dc00011161c0328\n"
".quad 0x00000034c31c4320,0x00c00081335c2340,0x00c00079345c0358,0x00400090c65c4358\n"
".quad 0x104606fcaadc8648,0x3dc00011359c0380,0x00000044d29c4320,0x00c0008142dc2340\n"
".quad 0x00c00079431c0358,0x00400090a5dc4358,0x3dc00011451c0348,0x00000030b29c4320\n"
".quad 0x00c00082235c2340,0x00c0007a22dc0358,0x104808fc8b1c8658,0x000000101c1c8580\n"
".quad 0x000000201d1c85c8,0x000000016bdc85c8,0x00400090a55c4384,0x3dc00012249c0348\n"
".quad 0x0000002cd21c4320,0x00c00081025c2340,0x00c00079029c0358,0x0040009084dc4358\n"
".quad 0x3dc00011041c0348,0x00000028921c4320,0x00c00082125c2340,0x00c0007a129c0358\n"
".quad 0x00400090845c4358,0x3dc00012131c0348,0x00000028921c4320,0x00c00082025c2340\n"
".quad 0x00c0007a02dc0358,0x00400090835c4358,0x3dc00012029c0348,0x0000002c921c4320\n"
".quad 0x00c00081f2642340,0x00c00079f7a40358,0x0040009082dc4358,0x01c00011f2240348\n"
".quad 0x0000007890244320,0x000000301d5c8540,0x00000001a69c85c8,0x0040009002644384\n"
".quad 0x000000401d9c8548,0x000000018c5c85c8,0x0000000149dc8584,0x00000001299c8584\n"
".quad 0x00000001001c8584,0x00000000cb9c8584,0x00000000aa1c8584,0x000000008b648584\n"
".quad 0x000000501bdc8584,0x00003c600001e7c8,0x000000cb249c0040,0x000000cf235d0050\n"
".quad 0x000000bf141d0050,0x000000b2729c0050,0x00d02802f65c0050,0x00d02802e6dc0058\n"
".quad 0x00f0200325dc0058,0x00d02803355c0058,0x000000c7161c0058,0x000000c5275d0050\n"
".quad 0x000000c0d4dc0050,0x000000c1059c0050,0x0000006b025d0050,0x00000098a49c0050\n"
".quad 0x32f02803141c0050,0x36f02802729c0030,0x2ed05001a65c0030,0x2af02803235c0030\n"
".quad 0x30f0200326dc0030,0x000000d135dd0030,0x000000aac7dd0050,0x000000d0955c0050\n"
".quad 0x000000d1661c0050,0x000000bf179c0050,0x000000a9259c0050,0x32f02003165c0050\n"
".quad 0x000000bef51c0030,0x36f0200336dc0050,0x000000d575dd0030,0x000000adf85d0050\n"
".quad 0x000000d5555c0050,0x000000d5861d0050,0x000000cf33dc0050,0x000000c1e7dc0050\n"
".quad 0x00000001659c0050,0x32f02003365c0050,0x28f00003179d0030,0x00000051b6dc0030\n"
".quad 0x000000d975dc0050,0x000000d9551c0050,0x000000d9861d0050,0x0000003dd75c0050\n"
".quad 0x000000b9655d0050,0x32f02002f65c0050,0x000000c1e79c0030,0x000000c1b6dc0050\n"
".quad 0x000000b1759c0050,0x0000009985dc0050,0x000000bdd75d0050,0x000000c1961c0050\n"
".quad 0x000000d1e79c0050,0x000000d1b65c0050,0x000000c1d75c0050,0x000000b1451c0050\n"
".quad 0x000000d5e79c0050,0x000000d5965c0050,0x00000002681d0050,0x000000ad555d0050\n"
".quad 0x000000a9659d0050,0x000000d308dd0050,0x000000d1d75c0050,0x00000099451c0050\n"
".quad 0x0000000175dd0050,0x0000009e745c0050,0x000000d9e79c0050,0x000000d1861c0050\n"
".quad 0x000000d9965c0050,0x000000a2089d0050,0x000000a1555d0050,0x000000ad659c0050\n"
".quad 0x000000d6381c0050,0x000000d5d6dc0050,0x000000a9451c0050,0x000000a175dc0050\n"
".quad 0x00000045e75c0050,0x000000d5861c0050,0x00000045965c0050,0x000000a5555d0050\n"
".quad 0x000000a5645d0050,0x000000da04dd0050,0x000000d1f7dc0050,0x00000001451c0050\n"
".quad 0x000000b5759d0050,0x000000d9b6dc0050,0x000000d985dc0050,0x000000a613dc0050\n"
".quad 0x000000b5555d0050,0x000000d5f7dc0050,0x000000ad451c0050,0x204000156c1c0050\n"
".quad 0x260000591bde0030,0x000000b6249c0030,0x0000009db6dd0050,0x1a400015141c0050\n"
".quad 0x2ef0200274dc0030,0x1e000055135e0030,0x0000005555dc0030,0x000000d9f7dc0058\n"
".quad 0x000000a143dc0050,0x000000b1b61c0050,0x24000055695e0050,0x00000059649c0030\n"
".quad 0x2e00005966dc0058,0x0000009df7dd0030,0x000000a4f59c0050,0x000000b133dc0050\n"
".quad 0x000000b1f79d0050,0x30f00002661c0050,0x00000098f3dc0030,0x000000b1d75d0050\n"
".quad 0x000000a9e79d0050,0x000000a9861c0050,0x000000b1951c0050,0x000000a8f3dc0050\n"
".quad 0x000000bae2dc0050,0x000000a9d75d0050,0x00000045165c0050,0x000000b9e79d0050\n"
".quad 0x30f00000061c0050,0x14400015591c0030,0x00000000f3dc0030,0x0000002dd29c0050\n"
".quad 0x2400004515dc0050,0x3600004596dd0030,0x000000ade75d0030,0x000000b9845d0050\n"
".quad 0x24000055579e0050,0x1ef02002e3dc0030,0x2e000055555c0030,0x000000ad15dc0030\n"
".quad 0x000000acf45c0050,0x28f00002649c0050,0x2ef00002861c0030,0x000000a115dc0030\n"
".quad 0x000000b5645c0050,0x000000a5865c0050,0x000000a5759c0050,0x000000a9261c0050\n"
".quad 0x000000a5d75d0050,0x000000b565dc0050,0x00000055159d0050,0x00000079d3dd0050\n"
".quad 0x2e400005545c0050,0x30f0000005dc0030,0x004000c0031de430,0xee082085155c0228\n"
".quad 0x0000002d77dc0030,0xf333333704dc0250,0x00d0500152dc0030,0x00f0200155dc0058\n"
".quad 0x2a400075689c0058,0x32f00002d49c0030,0x16400045679c0030,0x2e400055681c0030\n"
".quad 0x44400085059c0030,0x0000000018dc8530,0xf3333336451c02c8,0x44400085061e0030\n"
".quad 0x00400034c25c0030,0x0000006d249d0058,0x40d02001355c0050,0x2c40008705dc0030\n"
".quad 0x40f0200132dc0030,0x40f02001475c0030,0x40d020014d1c0030,0x2c40008706de0030\n"
".quad 0x2c400086485c0030,0x2c4000864e1e0030,0x30400087065e0030,0x0000002528dc0030\n"
".quad 0x30400087059c0058,0x3040008644dc0030,0x30400086451e0030,0x2a0000252dde0030\n"
".quad 0x064000e0421c0330,0x2e000025255c0020,0x3a0000252d9e0030,0x680000252d5e0030\n"
".quad 0x3200002525dc0030,0x36000025261c0030,0x46000025245c0030,0x1600002522de0030\n"
".quad 0x2c000025259c0030,0x42000025265c0030,0x70000025275c0030,0x2600002526dc0030\n"
".quad 0x280000252d1c0030,0x00c00080825c2330,0x00c00078849c0358,0x00000079a4dd0058\n"
".quad 0x004000a0079de450,0x00000048985c4328,0x000000adf25c0040,0x3dc00010821c0350\n"
".quad 0x00c04000469c0320,0x12f00002851c0048,0x004000b2125c4330,0xf3333335049c0248\n"
".quad 0x000000a5451c0030,0x064000e1a7dc0350,0x0000000084dc8520,0x40f02001241c0094\n"
".quad 0x28f00002d69c0030,0x40d02001249c0030,0x00000045021c0030,0xf18e38e5a85c0250\n"
".quad 0x00c00081f51c2330,0x00c00079f81c0358,0x10f02002125c0058,0x00000045241c0030\n"
".quad 0x0000008144dc4350,0x3dc00011f21c0340,0x00000027245d0020,0x20f02002141c0050\n"
".quad 0x004000b1325c4330,0x000000aca29d0048,0x00000043341d0050,0x00000000845c8550\n"
".quad 0x42400065acdc0094,0x00c08000449c0330,0x00400024c51c0048,0x000000a4a81d0058\n"
".quad 0x000000ccb21c0050,0x064000e1225c0350,0xf4aaaaae07dc0220,0x10000050f21c0030\n"
".quad 0x00c0c00044dc0330,0x00c00080929c2348,0x00c0007892dc0358,0x10f00001f21c0058\n"
".quad 0x064000e1349c0330,0x0000002ca2dc4320,0x00000023145d0040,0x00c00081221c2350\n"
".quad 0x00c0007924dc0358,0x3dc00010929c0358,0x00c140004c5c0320,0x0000004c825c4348\n"
".quad 0x004000b0b2dc4340,0x3dc00011221c0348,0x00c10000449c0320,0x00000000a45c8548\n"
".quad 0x004000b0925c4394,0x064000e124dc0348,0x30400065af1c0020,0x00000000841c8530\n"
".quad 0x00c18000429c0394,0x064000e3145c0348,0x000000cf6c9c0020,0x00c00081321c2350\n"
".quad 0x00c00079325c0358,0x064000e0a2dc0358,0x00c00081141c2320,0x00000024849c4358\n"
".quad 0x00c00080b21c2340,0x00c00078b25c0358,0x00c000791c5c0358,0x2a400065a55c0058\n"
".quad 0x00000024829c4330,0x00c1c000421c0340,0x000000c5041c4348,0x000000cf7c5c0040\n"
".quad 0x064000e0825c0350,0x000000cf5cdc0020,0x2e400065ad5c0050,0x00c00080921c2330\n"
".quad 0x00c00078961c0358,0x32400065a5dc0058,0x2c400065a59c0030,0x00000060821c4330\n"
".quad 0x00c20000461c0340,0x3a400065a65c0048,0x36400065a6dc0030,0x68400065a69c0030\n"
".quad 0x2a000050fe1c0030,0x064000e1861c0330,0x2e000050f55e0020,0x2c000050fddc0030\n"
".quad 0x6a000050fd9c0030,0x32000050f5de0030,0x62000050fedc0030,0x64000050fe9e0030\n"
".quad 0x66000050fe5e0030,0x78000050fd5c0030,0x36000050f59e0030,0x34000050f65e0030\n"
".quad 0x00c0008183dc2330,0x00c00079851c0358,0x00c24000469c0358,0x2a400096055e0048\n"
".quad 0x00000050f3dc4330,0x00cfa000c51c0040,0x2e40009605de0058,0x2c400096059e0030\n"
".quad 0x32400096065e0030,0x064000e1a31c0330,0x2a000050dd1c0020,0x2e000050dcde0030\n"
".quad 0x2c000050dc9e0030,0x32000050dc5c0030,0x00c00080c35c2330,0x00c00078c51c0358\n"
".quad 0x3dc00011359c0358,0x00c2c00044dc0320,0x00000050d35c4348,0x00c28000451c0340\n"
".quad 0x064000e13f1c0348,0x004000b125dc4320,0x064000e146dc0348,0x00c0007bc49c0320\n"
".quad 0x064000e071dc0358,0x00c00081b51c2320,0x00c00079b55c0358,0x064000e0619c0358\n"
".quad 0x064000e1c71c0320,0x00000055469c4320,0x3dc00011151c0340,0x00c00083c45c2320\n"
".quad 0x704000960e1c0058,0x004000b1055c4330,0x00000049175c4348,0x3dc00010b49c0340\n"
".quad 0x064000e0e2dc0320,0x6e4000960ddc0020,0x004000b0a4dc4330,0x00c00080b39c2348\n"
".quad 0x00c00078b41c0358,0x3dc00010b29c0358,0x6c4000960d9c0020,0x00000040e39c4330\n"
".quad 0x6a4000960d5c0040,0x6ccfa002fd9c0030,0x004000b0e2dc4330,0x3dc00010941c0348\n"
".quad 0x00c00080725c2320,0x00c00078739c0358,0x004000b0845c4358,0x3dc00010721c0348\n"
".quad 0x00000038925c4320,0x00c0008061dc2340,0x004000b0925c4358,0x3dc00011839c0348\n"
".quad 0x00c00078661c0320,0x004000b0f3dc4358,0x0000006071dc4348,0x3dc00010619c0340\n"
".quad 0x064000e0561c0320,0x004000b071dc4320,0x3dc00010c31c0348,0x00c00081815c2320\n"
".quad 0x00c00079865c0358,0x004000b0d35c4358,0x3dc00011861c0348,0x00000064565c4320\n"
".quad 0x00c30000415c0340,0x004000b1965c4348,0x3dc00011b11c0348,0x064000e026dc0320\n"
".quad 0x00c00081bf5c2320,0x00c00079b09c0358,0x0000000bd09c4358,0x064000e05f5c0340\n"
".quad 0x004000b1a15c4320,0x3dc00011b69c0348,0x00c00081c0dc2320,0x00c00083df9c2358\n"
".quad 0x004000b026dc4358,0x3dc00013c09c0348,0x00c00079cf1c0320,0x000000f03f1c4358\n"
".quad 0x004000b1d0dc4340,0x3dc00011c71c0348,0x004000b3c75c4320,0x3dc00013d79c0348\n"
".quad 0x00c0007bdf1c0320,0x444000870f5c0058,0x44400087089e0030,0x000000f3ef1c4330\n"
".quad 0x7a4000864c1c0040,0x7a4000864f9e0030,0x444000864f5c0030,0x44400086489e0030\n"
".quad 0x60f000023c1c0030,0x7af000023f5c0030,0x7cf000023f9c0030,0x44f00002389c0030\n"
".quad 0x60f000021c1c0030,0x7af00002191c0030,0x7cf0000218dc0030,0x44f000021f5c0030\n"
".quad 0x60cfa002585c0030,0x48cfa002589e0030,0x3e4000960c1c0030,0x46cfa00258de0030\n"
".quad 0x7acfa002591c0030,0x76f00001f95c0030,0x000000c3a7dc0030,0x000000c39c1c0050\n"
".quad 0x000000501e5e8550,0x0000009ace9d00c0,0x000000001ede8550,0x000000abae9c00c0\n"
".quad 0x00000097981d0050,0x0000007e795d0050,0x000000c2e9dd0050,0x000000201b9e8550\n"
".quad 0x000000101c1e85c0,0x70cfa002f7dc00c0,0x6ecfa002fe1e0030,0x000000301dde8530\n"
".quad 0x6acfa002fe5e00c0,0x000000401bde8530,0x000000c2ed5f00c0,0x00000003ae9d0050\n"
".quad 0x00000001681c8550,0x000000df5d5c0094,0x000000afae9d0050,0x000000bf5d5c0050\n"
".quad 0x000000a3ae9c0050,0x0000009b5d5c0050,0x000000a7ae9d0050,0x000000035d5d0050\n"
".quad 0x000000b7ae9c0050,0x000000a35d5c0050,0x000000b75d5d0050,0x42cf8003585c0050\n"
".quad 0x44cf8003589e0030,0x46cf800358dc0030,0x42cf8003a85e0030,0x44cf8003a89e0030\n"
".quad 0x46cf8003a8dc0030,0x00000086685d0030,0x000000dfb99d0050,0x00000088001d0050\n"
".quad 0x48cf8003589e0050,0x000000be699c0030,0x0000008e88dd0050,0x44cf8003a89c0050\n"
".quad 0x000000b2699d0030,0x0000008ad89d0050,0x000000aa699c0050,0x000000ae699d0050\n"
".quad 0x000000a6699c0050,0x3ecf800267dc0050,0x70cf80026a1e0030,0x6ccf80026d9e0030\n"
".quad 0x72cf80026e1c0030,0x68cf80026d1e0030,0x66cf80026cde0030,0x64cf80026c9c0030\n"
".quad 0x62cf8002699c0030,0x3ecf80035b5e0030,0x50cf8003591e0030,0x6ccf80035a1c0030\n"
".quad 0x70cf80035c5c0030,0x4ccf8003ad5e0030,0x000000b7099d0030,0x00000092e91d0050\n"
".quad 0x68cf8003ad1c0050,0x000000a37a1d0030,0x000000c6fb5d0050,0x00000001499c8550\n"
".quad 0x64cf8003ac9c0094,0x00000001291c8530,0x000000d2c59d0094,0x000000010a1c8550\n"
".quad 0x00000000eb5c8594,0x66cf8003acde0094,0x004000b3c7dc4330,0x000000caa5dd0048\n"
".quad 0x00000000c95c8550,0x00000000459c8594,0x00000000285c8594,0x000000ceb81d0094\n"
".quad 0x00000001e5dc8550,0x00000000a01c8594,0x000000d69a5d0094,0x0000000089dc8550\n"
".quad 0x00000000681c8594,0x0000000188dc8594,0x00000001aa5c8594,0x00000001c89c8594\n"
".quad 0x00003f60001de794,0x00000074f09c0340,0x004000a0091de448,0x00c04000211c0328\n"
".quad 0x00c18000229c0348,0x00c1c00022dc0348,0x00c24000251c0348,0x00c28000255c0348\n"
".quad 0x064000e0449c0348,0x00c08000219c0320,0x064000e0a39c0348,0x064000e0b35c0320\n"
".quad 0x064000e142dc0320,0x064000e1529c0320,0x00c00081251c2320,0x00c00079255c0358\n"
".quad 0x064000e064dc0358,0x49c00011281c0320,0x00c0c00021dc0320,0x00000055449c4348\n"
".quad 0x00c00081351c2340,0x00c00079355c0358,0x064000e0745c0358,0x004000b1285c4320\n"
".quad 0x00c44000271c0348,0x49c00011379c0348,0x00000055449c4320,0x00c10000221c0340\n"
".quad 0x00c0008114dc2348,0x00c00079151c0358,0x064000e1c89c0358,0x004000b127dc4320\n"
".quad 0x064000e0841c0348,0x49c00011171c0320,0x00c3c000269c0320,0x00000051345c4348\n"
".quad 0x00c14000225c0340,0x00c00081049c2348,0x00c0007904dc0358,0x064000e1a11c0358\n"
".quad 0x004000b1175c4320,0x00c4000026dc0348,0x064000e093dc0348,0x49c00011069c0320\n"
".quad 0x00c34000261c0320,0x0000004d241c4348,0x00c20000231c0340,0x00c2c000259c0348\n"
".quad 0x00c3000025dc0348,0x00c38000265c0348,0x00c48000215c0348,0x064000e1b09c0348\n"
".quad 0x00c00080f45c2320,0x00c00078f49c0358,0x064000e181dc0358,0x004000b106dc4320\n"
".quad 0x49c00010f61c0348,0x0000004913dc4320,0x064000e1919c0340,0x00c00080e41c2320\n"
".quad 0x00c00078e45c0358,0x064000e1625c0358,0x004000b0f65c4320,0x49c00010e59c0348\n"
".quad 0x00000045039c4320,0x064000e1721c0340,0x00c00080d3dc2320,0x00c00078d41c0358\n"
".quad 0x004000b0e5dc4358,0x064000e0c31c0348,0x49c00010d51c0320,0x00000040f35c4320\n"
".quad 0x00c00080c39c2340,0x00c00078c3dc0358,0x004000b0d55c4358,0x49c00010c49c0348\n"
".quad 0x0000003ce31c4320,0x00c00080b35c2340,0x00c00078b39c0358,0x004000b0c4dc4358\n"
".quad 0x49c00010b41c0348,0x00000038d2dc4320,0x00c00080a31c2340,0x00c00078a35c0358\n"
".quad 0x004000b0b45c4358,0x49c00010a39c0348,0x00000034c29c4320,0x00c0008092dc2340\n"
".quad 0x00c00078935c0358,0x004000b0a3dc4358,0x49c00010931c0348,0x00000034b25c4320\n"
".quad 0x00c0008082dc2340,0x00c0007888dc0358,0x004000b0935c4358,0x49c00010829c0348\n"
".quad 0x0000008cb21c4320,0x00c00080725c2340,0x00c0007878dc0358,0x004000b082dc4358\n"
".quad 0x49c00010721c0348,0x0000008c91dc4320,0x00c00080695c2340,0x00c000786ddc0358\n"
".quad 0x00c000804e1c2358,0x00c00078425c0358,0x000000de5ddc4358,0x00c00080295c2340\n"
".quad 0x0000002788dc4358,0x00c000782e1c0340,0x004000b0725c4358,0x49c00010619c0348\n"
".quad 0x000000e2595c4320,0x00c000822e1c2340,0x00c0007a2e5c0358,0x004000b371dc4358\n"
".quad 0x49c00010411c0348,0x000000e78ddc4320,0x000000020cdc8540,0x064000e05e1c0394\n"
".quad 0x00000001ebdc8520,0x004000b2315c4394,0x00000001cc9c8548,0x49c00010209c0394\n"
".quad 0x00000001ac5c8520,0x000000018d5c8594,0x000000016d9c8594,0x00c0008388dc2394\n"
".quad 0x00c0007b8e5c0358,0x004000b250dc4358,0x000000014c1c8548,0x49c00012289c0394\n"
".quad 0x000000012d1c8520,0x000000010b9c8594,0x000000e6395c4394,0x00000000ea5c8540\n"
".quad 0x004000b378dc4394,0x00000000cb5c8548,0x49c00013891c0394,0x00000000aadc8520\n"
".quad 0x000000008a1c8594,0x0000000069dc8594,0x004000b2595c4394,0x000000004a9c8548\n"
".quad 0x00000000201c8594,0x000000022b1c8594,0x00000002499c8594,0x00002d00001de794\n"
".quad 0x00c00006b09c0340,0x00cfc001901c0048,0x00cfc001719c0050,0x00c00018215c0350\n"
".quad 0x00000015215e0460,0x0000001401dc0018,0x104a0afc6e5c8650,0x104b0bfc6d9c8680\n"
".quad 0x104c0cfc6d5c8680,0x104d0dfc6cdc8680,0x104e0efc6c9c8680,0x104f0ffc6c1c8680\n"
".quad 0x105010fc6e1c8680,0x105111fc6ddc8680,0x105212fc67dc8680,0x105313fc6bdc8680\n"
".quad 0x105414fc699c8680,0x105515fc6b1c8680,0x105616fc6a5c8680,0x105717fc695c8680\n"
".quad 0x105818fc689c8680,0x105919fc669c8680,0x105a1afc665c8680,0x105b1bfc675c8680\n"
".quad 0x105c1cfc639c8680,0x00c0001ab15c0380,0x00000015215e0460,0x0000001401dc0018\n"
".quad 0x104a0afc6c5c8650,0x104b0bfc69dc8680,0x104c0cfc6b5c8680,0x104d0dfc63dc8680\n"
".quad 0x104e0efc6a9c8680,0x104f0ffc6b9c8680,0x105010fc6a1c8680,0x105111fc679c8680\n"
".quad 0x105212fc66dc8680,0x105313fc615c8680,0x105414fc65dc8680,0x105515fc681c8680\n"
".quad 0x105616fc691c8680,0x105717fc685c8680,0x105818fc671c8680,0x105919fc659c8680\n"
".quad 0x105a1afc601c8680,0x105b1bfc661c8680,0x105c1cfc61dc8680,0x000000ad219e0480\n"
".quad 0x00000009209e0418,0x0000001a3d1d0018,0x0000008c209d0050,0x000000db4d9c0050\n"
".quad 0x000000d74d5c0058,0x000000e7419c0058,0x000000bf4bdc0058,0x000000e34adc0058\n"
".quad 0x000000b34b1c0058,0x6c00009c29dc0058,0x6a0000b42b5c0030,0x0c0000c4219c0030\n"
".quad 0x5e000014215c0030,0x000000a74a5c0030,0x000000b67c5d0058,0x58000080281c0050\n"
".quad 0x560000a02a1c0030,0x0000009b499c0030,0x000000146adc0058,0x00000097495c0050\n"
".quad 0x000000df48dc0058,0x000000831b1c0058,0x52000090291c0050,0x0000009eba5c0030\n"
".quad 0x4c00005c25dc0050,0x4a0000842e5c0030,0x0000007f47dc0030,0x0000008b489c0058\n"
".quad 0x00000092c99c0058,0x46000078285c0050,0x0000005e979c0030,0x000000cb4c9c0050\n"
".quad 0x000000e668dd0058,0x440000702d5c0050,0x3e00006c295c0030,0x000000b5e6dc0030\n"
".quad 0x000000c34c1c0050,0x640000a82a9c0058,0x000000d6379d0030,0x00000081b6dc0050\n"
".quad 0x600000b82d9c0050,0x000000a9e79c0030,0x00000091b6dc0050,0x000000cf4cdc0050\n"
".quad 0x000000d9e79d0058,0x000000e5b6dc0050,0x00000077475c0050,0x00000085e79c0058\n"
".quad 0x0000006b469c0050,0x6600003c23dc0058,0x000000d5b6dc0030,0x00000067465c0050\n"
".quad 0x00000095e99d0058,0x0000003db79c0050,0x340000582c5c0050,0x0000003b439c0030\n"
".quad 0x320000002c1c0058,0x0000005c571d0030,0x0000009a66dc0050,0x00000081c71c0058\n"
".quad 0x00000091c71d0050,0x000000e5c71d0050,0x000000d5c7dc0050,0x00cfa002671c0050\n"
".quad 0x3a0000602e1c0058,0x00efa002661c0030,0x000000e0f59c0058,0x000000e1e01c0050\n"
".quad 0x000000a9659c0050,0x000000a8001c0050,0x1c00001c2ddc0050,0x000000e1f1dc0030\n"
".quad 0x000000dd609c0050,0x000000dc001c0050,0x000000dc71dd0050,0x000000d8209c0050\n"
".quad 0x000000d8001c0050,0x000000c471dc0050,0x000000a0209d0050,0x000000a0001c0050\n"
".quad 0x000000c0739d0050,0x000000c4209d0050,0x000000c4001c0050,0x36000038e1dc0050\n"
".quad 0x00000084209d0030,0x00000084001c0050,0x00000038e59c0050,0x000000c0209d0050\n"
".quad 0x000000c0001c0050,0x00cfa000e65c0050,0x00000094209d0058,0x00000094075c0050\n"
".quad 0x00efa000e8dc0050,0x00000008201c0058,0x3600000826de0058,0x0e000008279c0030\n"
".quad 0x0000009a601c0030,0xf6aaaaadbbdc0230,0xf6aaaaadbb1c0230,0x00000039659d0032\n"
".quad 0x0000000981dc0030,0x00000009cb9c0058,0x5e4000f5661e0058,0x584000f56c9e0030\n"
".quad 0xf58e38e56cdc0230,0x30000099901c0032,0x3000009a36dc0030,0x64000009961c0030\n"
".quad 0x6400000a365c0030,0xf4127271ec9c0230,0x66000009c8de0030,0xfc637575e71c0230\n"
".quad 0x644000b5dd1c0032,0xf4260e11e79c0230,0x5e4000f56e9c0030,0x684000c66bdc0030\n"
".quad 0x684000c66ede0030,0x384000a5d71c0030,0x3c4000d5d79c0030,0x00000098e69c0030\n"
".quad 0x00000098eadd0050,0x00000008ea5c0050,0x00000008e89d0050,0x0000000a67dc0050\n"
".quad 0x0000000a675d0050,0x684000c4ecdc0050,0x684000c4ec9e0030,0x684000c4299c0030\n"
".quad 0x000000eafbdc0030,0x000000ebb39c0050,0x684000c42d1e0050,0x0e4000e56e9e0030\n"
".quad 0x584000f56b1c0030,0x5c4000e5609e0030,0x664000e561dc0030,0x644000e5659c0030\n"
".quad 0x3c400025dc9c0030,0x000000b26b9c0030,0x000000b34f1c0050,0x000000eb299c0050\n"
".quad 0x3c400026be9e0050,0x3c400026bd1c0030,0x3c4000262c9e0030,0x3c4000262adc0030\n"
".quad 0x3c400025aedc0030,0x3c4000269cdc0030,0x3c400025f89c0030,0x3c400025d75e0030\n"
".quad 0x3c400025a69e0030,0x3c4000269a5e0030,0x3c400025f7de0030,0x00400100079de430\n"
".quad 0x0000000a2b1c0028,0x00000009f09c0050,0x00cfe001e79e0050,0x004000a0089de450\n"
".quad 0x0000008dd8dc0028,0x00000071e71c0050,0x0000001de7dc0058,0x064000e041dc0358\n"
".quad 0x38400100671c0020,0x3e40010057dc0030,0x00c00080715c2330,0x00c00078719c0358\n"
".quad 0x00000003bedc0058,0x00000001a01c0050,0x00000018515c4350,0x45c00010719c0340\n"
".quad 0x0000006fae9c0020,0x0000006f4d1c0050,0x004000b051dc4350,0x00c04000415c0348\n"
".quad 0x000000633cdc0048,0x00000000671c8550,0x064000e0515c0394,0x000000629a5c0020\n"
".quad 0x000000672c9c0050,0x00c00080519c2350,0x00c0007851dc0358,0x00c0c000471c0358\n"
".quad 0x00000066badc0048,0x0000001c61dc4350,0x45c00010519c0340,0x064000e1c71c0320\n"
".quad 0x00c08000415c0320,0x004000b071dc4348,0x000000f1ef1c0048,0x064000e0515c0358\n"
".quad 0x0000000067dc8520,0x00000099e99c0094,0x00c000805f5c2358,0x00c000785f9c0358\n"
".quad 0x00c00081c19c2358,0x00c00079c1dc0358,0x000000fbd7dc4358,0x00c180004f5c0340\n"
".quad 0x0000001c675c4348,0x00c10000419c0340,0x000000e9ee9c0048,0x00000001e01c0058\n"
".quad 0x064000e0669c0358,0x000000d1ed1c0020,0x000000cdecdc0058,0x00c00081a19c2358\n"
".quad 0x00c00079a1dc0358,0x000000c9ec9c0058,0x0000008de8dc0058,0x0000001c66dc4358\n"
".quad 0x00c14000419c0340,0x000000adeadc0048,0x000000a5ea5c0058,0x064000e0661c0358\n"
".quad 0x74400102491c0020,0x00400103901c0030,0x00c00081819c2330,0x00c0007981dc0358\n"
".quad 0x00c2c0004e5c0358,0x00c300004e9c0348,0x0000001c665c4348,0x000000bde19c0040\n"
".quad 0x00000059e1dc0058,0x064000e3d59c0358,0x0c40010279dc0020,0x0e4001017bdc0030\n"
".quad 0x00c00081619c2330,0x00c0007961dc0358,0x00c1c0004f5c0358,0x064000e39e5c0348\n"
".quad 0x0000001c65dc4320,0x00000039e19c0040,0x000000b9e1dc0058,0x064000e3d39c0358\n"
".quad 0x0c400102db9c0020,0x0e400100fb5c0030,0x00c00080e19c2330,0x00c00078e1dc0358\n"
".quad 0x064000e3ae9c0358,0x684001035d1c0020,0x0000001c63dc4330,0x00c20000419c0340\n"
".quad 0x000000b1e1dc0048,0x664001038cdc0058,0x064000e0619c0330,0x0e400102ab1c0020\n"
".quad 0x784001028a9c0030,0x00c0008061dc2330,0x00c000786a1c0358,0x00c240004f1c0358\n"
".quad 0x464001036d5c0048,0x000000a071dc4330,0x4c4001021a1c0040,0x00000009e99c0030\n"
".quad 0x000000ede09c0058,0x45c00010579c0358,0x064000e3c85c0320,0x4c400102599c0020\n"
".quad 0x004000b1f7dc4330,0x45c00011c71c0348,0x00c000821edc2320,0x00c0007a1f1c0358\n"
".quad 0x004000b1d75c4358,0x45c00011a69c0348,0x000000f3b15c4320,0x00c280004edc0340\n"
".quad 0x004000b1b6dc4348,0x45c00011861c0348,0x04400102095c0020,0x064000e3b09c0330\n"
".quad 0x004000b1965c4320,0x45c00011659c0348,0x00c00080281c2320,0x00c000782edc0358\n"
".quad 0x004000b175dc4358,0x45c00010e39c0348,0x000000ee081c4320,0x00c0007b9edc0340\n"
".quad 0x004000b0f3dc4358,0x45c00010619c0348,0x00000001e9dc8520,0x00000001cbdc8594\n"
".quad 0x004000b071dc4394,0x45c00012111c0348,0x00c00083985c2320,0x00000001ab9c8558\n"
".quad 0x004000b0515c4394,0x45c00010209c0348,0x000000ee185c4320,0x00c0007baedc0340\n"
".quad 0x004000b200dc4358,0x45c00013981c0348,0x00c00083ae5c2320,0x00000001895c8558\n"
".quad 0x004000b2185c4394,0x45c00013a89c0348,0x000000ef9e5c4320,0x00000001691c8540\n"
".quad 0x00000000e01c8594,0x000000006d1c8594,0x644001037c9c0094,0x004000b398dc4330\n"
".quad 0x000000004b5c8548,0x000000002cdc8594,0x000000020b1c8594,0x564001031adc0094\n"
".quad 0x000000022c9c8530,0x000000014d5c8594,0x524001030a5c0094,0x000000012a9c8530\n"
".quad 0x000000010adc8594,0x00000000ca1c8594,0x00000000aa5c8594,0x00000000899c8594\n"
".quad 0x00000000001de794,0x0000000000000080,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0xf145140000000000,0xaaaaab3fd5555540,0x73cf3d3ce38e393d\n"
".quad 0x638e39bdb2cb2dbe,0xcccccd3d8208203c,0x430c303d2aaaab3c,0x2aaaab3dd34d353e\n"
".quad 0x638e393c8208203e,0x000401bce38e393d,0x0000ce0008020400,0x0802040000000900\n"
".quad 0x000004000000c900,0x00008d0008020400,0x0802040000000c00,0x000003000000c800\n"
".quad 0x00008c0008020400,0x0802040000001400,0x000008000000cc00,0x0000c70008020400\n"
".quad 0x0802040000000200,0x00000b0000008b00,0x00008a0008020400,0x0802040000001300\n"
".quad 0x000001000000c500,0x0000890008020400,0x0802040000000a00,0x000000000000c300\n"
".quad 0x00009b0008020400,0x0802040000001200,0x00001a0000009a00,0x0000990008020400\n"
".quad 0x0802040000001100,0x0000190000009800,0x0000d30008020400,0x0802040000000700\n"
".quad 0x0000100000009700,0x0000920008020400,0x0802040000000d00,0x00000f0000009600\n"
".quad 0x0000910008020400,0x0802040000001800,0x000006000000d100,0x0000950008020400\n"
".quad 0x0802040000001c00,0x0000170000009000,0x0000940008020400,0x0802040000000e00\n"
".quad 0x0000160000008f00,0x0000ca0008020400,0x0802040000000500,0x00001b0000009300\n"
".quad 0x00008e0008020400,0x080a040000001500,0x2400200000005400,0x0c17040024190300\n"
".quad 0x2000040000000000,0x0c17040011f00000,0x1800030000000000,0x0c17040021f00000\n"
".quad 0x1000020000000000,0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000\n"
".quad 0x0000000000000000,0x080d040021f00000,0x0000020003002400,0x00440400005de400\n"
".quad 0x00000098015c0428,0x00000088019c042c,0x0000009c001c042c,0x0000008c011c042c\n"
".quad 0x0c400030515ca32c,0x0000009401dc0420,0x08400040001ca32c,0x00000084021c0420\n"
".quad 0x004000a0049de42c,0x00000014001cc328,0x10400020741ca340,0x7e0000fff29c0020\n"
".quad 0x004000a0001c0330,0x004000b0011de450,0x01c001012fdd0328,0x00000040019c0348\n"
".quad 0xfe00000000dde248,0x0100000002dde218,0x00400080009de419,0x00c0008061dc2328\n"
".quad 0x00c00078621c0358,0x140000fff3dc0058,0x0e0000fc41dc4330,0x06e00000b29c001a\n"
".quad 0x05c00010619c0330,0x00c0004922dc0320,0x00000020709c4358,0x06d01003f15c0040\n"
".quad 0x0000002c445dc330,0x0040009021dc4340,0x06cff000f11e0048,0x0dc10001209c0330\n"
".quad 0x06f01003f21c0020,0xfaaaaaac42dc0230,0x0000004470dc4330,0x05c10001211c0348\n"
".quad 0x0a0000fff35c0020,0x00000000025de230,0x00000044315c431a,0x09c10001231c0348\n"
".quad 0x1acff000f51e0020,0x0000000062dc8530,0x14e00000955c0094,0x00000044535c4330\n"
".quad 0x19c10001229c0348,0x100000fff1dc0020,0xf58e38e5439c0230,0x00000044d2dc4330\n"
".quad 0x15c10001219c0348,0x0ecff000f4de0020,0x00000000239c8530,0x00000044b1dc4394\n"
".quad 0x0dc10001221c0348,0x00000000439c8520,0xf58e38e534dc0294,0x00000044725c4330\n"
".quad 0x11c10001209c0348,0x00000000c4dc8520,0x00000000a4dc8594,0x0000004490dc4394\n"
".quad 0x05c10001211c0348,0xf38e38e5451c0220,0x2acff000f55e0030,0x00000044315c4330\n"
".quad 0x09c10001231c0348,0x00000000651c8520,0x00000000851c8594,0x00000044535c4394\n"
".quad 0x19c10001229c0348,0xf38e38e5555c0220,0x00c000fd01dc2330,0x00000044d2dc4319\n"
".quad 0x15c10001219c0348,0x00000000255c8520,0x00000000451c8594,0x00000044b1dc4394\n"
".quad 0x0dc10001221c0348,0x00000000c39c8520,0x00000000a51c8594,0x00000044725c4394\n"
".quad 0x11c10001209c0348,0x00000000651c8520,0x00000000851c8594,0x0000004490dc4394\n"
".quad 0x05c10001211c0348,0x00000000251c8520,0x00000044315c4394,0x09c10001231c0348\n"
".quad 0x0000000044dc8520,0x00000044535c4394,0x19c10001239c0348,0x00000000c51c8520\n"
".quad 0x00000044d3dc4394,0x1dc10001229c0348,0x00000000e51c8520,0x00000044f2dc4394\n"
".quad 0x15c10001219c0348,0x00000000a55c8520,0x00000044b1dc4394,0x00000000655c8548\n"
".quad 0x000000000021e794,0x004000a000dde480,0x004000b0011de428,0x00000100019de228\n"
".quad 0x00c00048309c0318,0x00400080051de458,0x00c00038349c0328,0x0000000844ddc360\n"
".quad 0x00c00004655c0340,0x00000018009c0348,0x014000a15fdd0348,0x00c0047d50dc2348\n"
".quad 0x00c00080211c2370,0x00c00078215c0358,0x8e4000b031dc4358,0x29c00010229c0318\n"
".quad 0x00000014409c4320,0x0040009022dc4340,0x01000048a11c0348,0x00000000afdc8548\n"
".quad 0x0000004cb15c4394,0x01000048409c0348,0x000000004fdc8548,0x0000004c50dc4394\n"
".quad 0x01000048219c0348,0x000000002fdc8548,0x0000004c31dc4394,0x01000048621c0348\n"
".quad 0x000000006fdc8548,0x0000004c725c4394,0x01000048831c0348,0x000000008fdc8548\n"
".quad 0x0000004c935c4394,0x01000048c39c0348,0x00000000cfdc8548,0x0000004cd3dc4394\n"
".quad 0x01000048e41c0348,0x00000000efdc8548,0x0000004cf45c4394,0x01000049029c0348\n"
".quad 0x000000010fdc8548,0x0000004d12dc4394,0x01000048a11c0348,0x00000000afdc8548\n"
".quad 0x0000004cb15c4394,0x01000048409c0348,0x000000004fdc8548,0x0000004c50dc4394\n"
".quad 0x01000048219c0348,0x000000002fdc8548,0x0000004c31dc4394,0x01000048621c0348\n"
".quad 0x000000006fdc8548,0x0000004c725c4394,0x01000048831c0348,0x000000008fdc8548\n"
".quad 0x0000004c935c4394,0x01000048c39c0348,0x00000054019de448,0x00000000cfdc8528\n"
".quad 0x0000004cd3dc4394,0x01000048e41c0348,0x00000000efdc8548,0x0000004cf45c4394\n"
".quad 0x01000049029c0348,0x000000010fdc8548,0x0000004d12dc4394,0x01000048a09c0348\n"
".quad 0x00000000afdc8548,0x0000004cb0dc4394,0x01000048211c0348,0x000000002fdc8548\n"
".quad 0x0000004c315c4394,0x000000004fdc8548,0x03fff7a00001e794,0x00000000001de740\n"
".quad 0x0000000000000080,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x080a040000040100,0x1000200000006900\n"
".quad 0x0c17040010190300,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x080d040021f00000,0x0000010001000c00,0x00440400005de400,0x0000009800dc0428\n"
".quad 0x00000088011c042c,0x00000094001c042c,0x00000084009c042c,0x0040010001dde42c\n"
".quad 0x08400030351ca328,0x04400020065ca320,0x00c000fc71de0320,0x0000009c015c0448\n"
".quad 0x0000008c019c042c,0x05f00000021de22c,0x0e00001d91dc2319,0x00000051201e041a\n"
".quad 0x0c40004050dca318,0x00000065211e0420,0x10cfc000015c0018,0xa040010191dc2330\n"
".quad 0x0000000d209e0418,0x10cfc000411c0018,0x00f07f00515c0030,0xa040010141dc2350\n"
".quad 0x10cfc000209c0018,0x00f09f80411c0030,0x00000014515c0050,0x2000001d41dc2358\n"
".quad 0x00c00018359c031a,0x00f07f00209c0060,0x0a000010411c0050,0xa040010031dc2330\n"
".quad 0x0000005166dc0318,0x08000008209c0048,0x2000001c33dc2330,0x324000e1b29c031a\n"
".quad 0x8ed0600021dc0020,0x000000000005e720,0x00fffffd909c0380,0x00cfc000001c0048\n"
".quad 0x00000059211e0450,0x00000009209e0418,0x00c00005915c0318,0x0000001001dc0048\n"
".quad 0x00cfc000209c0050,0x0000001c085de450,0x00000008081de428,0x104000fe061c8628\n"
".quad 0x00000015215e0480,0x00fffffd431c0318,0x00cfc000519c0048,0x00000031215e0450\n"
".quad 0x104101fc671c8618,0x00cfc000515c0080,0x00000008021de450,0x0000001051dc0028\n"
".quad 0x0000001c025de450,0x104202fc891c8628,0x104303fc68dc8680,0x00c00005435c0380\n"
".quad 0x0ec000fc33dc2348,0x00c00080a1dc2319,0x00000035215e0458,0x00000018021de418\n"
".quad 0x0040008004dde428,0x00cfc00050dc0028,0x00c00078a15c0350,0x00ffff01639c0358\n"
".quad 0x0000001030dc0048,0x00c00101611c0350,0x0000001472dc4348,0x0000000c025de440\n"
".quad 0x104404fc889c8628,0x27c00010a41c0380,0x00000010d2a40320,0x00000011211e0448\n"
".quad 0x0000003921de0418,0x00000058c21c0318,0x0040008004a5e448,0x00000010015c0028\n"
".quad 0x0000001c01dc0050,0x104505fc285c8650,0x00000018011de480,0x00400090b45c4328\n"
".quad 0x00c0800080dc0348,0x00c10008825c0348,0x00c23f04831c0348,0x00c2bf00835c0348\n"
".quad 0x00c33f08839c0348,0x00c3810483dc0348,0x00c40100855c0348,0x00c48000a7a40348\n"
".quad 0x104707fc401c8648,0x324000e155dc0380,0x324000e092dc0320,0x324000e1e5640320\n"
".quad 0x324000e0329c0320,0x324000e0c25c0320,0x324000e0d21c0320,0x324000e0e75c0320\n"
".quad 0x324000e0f69c0320,0x104909fc679c8620,0x0000001c00dde480,0x00c00080a19c2328\n"
".quad 0x00c00078a1dc0358,0x00000008011de458,0x27c00010a39c0328,0x0000001c619c4320\n"
".quad 0x00c00080b1dc2340,0x00c00078b29c0358,0x0040009063dc4358,0x104606fc47dc8648\n"
".quad 0x27c00010b31c0380,0x00000028711c4320,0x00c00080915c2340,0x00c00078919c0358\n"
".quad 0x00400090435c4358,0x27c00010929c0348,0x00000018511c4320,0x00c0008081dc2340\n"
".quad 0x00c00078815c0358,0x104808fc281c8658,0x0040009042dc4380,0x27c00010821c0348\n"
".quad 0x00000014709c4320,0x00c00081d0dc2340,0x00c00079d11c0358,0x00400090225c4358\n"
".quad 0x27c00011d19c0348,0x00000010309c4320,0x00c00081a0dc2340,0x00c00079a15c0358\n"
".quad 0x0040009021dc4358,0x27c00011a11c0348,0x00000014309c4320,0x00c0008170dc2340\n"
".quad 0x00c00079769c0358,0x00400090215c4358,0x27c00011709c0348,0x0000006830dc4320\n"
".quad 0x00c0008154e42340,0x00c0007955e40358,0x0040009030dc4358,0x25c0001154a40348\n"
".quad 0x0000005d34e44320,0x00000001055c8540,0x00000000e69c8584,0x0040009134e44384\n"
".quad 0x00000000c75c8548,0x00000000a95c8584,0x00000000899c8584,0x0000000069dc8584\n"
".quad 0x000000004a1c8584,0x000000002a5c8584,0x000000012aa48584,0x00003c400081e784\n"
".quad 0x0000007183a10040,0x00000075a3e10050,0x0000008253200050,0x0000009e65a10050\n"
".quad 0x00000069a2600050,0x00000075d1e00050,0x00000090e4200050,0x00000090f3e00050\n"
".quad 0x00000098c3a00050,0x0000005643610050,0x000000a563210050,0x12f0200185e00050\n"
".quad 0x00f0200182a00030,0x0ef00001a5a10058,0x0000008cf3e00030,0x00000078e3a00050\n"
".quad 0x00000075a1a00050,0x0000008cd3600050,0x0000008d04210050,0x2ef02001c5e00050\n"
".quad 0x14d0500152a00030,0x0000009165a00030,0x00000088f3e10050,0x0000006181600050\n"
".quad 0x0000009ce3a00050,0x0000009061a00050,0x00000088d3600050,0x0000001d71e00050\n"
".quad 0x0000008904210050,0x14f02001a2a00050,0x0000008d65a00030,0x00000084f3e10050\n"
".quad 0x00000071c5200050,0x0000006851610050,0x000000a0e3a10050,0x0000008c61a00050\n"
".quad 0x00000084d3600050,0x0000008504200050,0x0000009071e00050,0x14f02001c2a00050\n"
".quad 0x0000008965a00030,0x00000098f3e00050,0x0000005051600050,0x0000007ce3a10050\n"
".quad 0x0000008861a00050,0x00000080d3600050,0x0000008104200050,0x0000008c71e00050\n"
".quad 0x0000009654600050,0x14f02001d2a00050,0x0000008565a00030,0x0000009cf3e10050\n"
".quad 0x0000007451610050,0x000000a4e3a10050,0x0000008461a00050,0x00000098d3600050\n"
".quad 0x0000007904210050,0x0000008871e00050,0x00d02801d4e00050,0x0000008e40a10058\n"
".quad 0x00000090a2a00050,0x0000004565a00050,0x000000a4f3e00050,0x0000009051600050\n"
".quad 0x00000000e3a10050,0x00d02801c4a00050,0x0000009461a10058,0x00000078d3600050\n"
".quad 0x0000007d04200050,0x0000008475e00050,0x26f02801a4e00050,0x0000008822600030\n"
".quad 0x0000008ca2a00050,0x0000008161e10050,0x000000a8f3e10050,0x0000008c51600050\n"
".quad 0x000000a8e3a10050,0x24f0280184a00050,0x0000008061a10030,0x0000009cd3600050\n"
".quad 0x0000000104210050,0x0000007a02210050,0x000000a280e00050,0x0000008492610050\n"
".quad 0x000000a8c3200050,0x00000088a2a00050,0x0000007871e10050,0x26400014f5a00050\n"
".quad 0x0000008851600030,0x00000038e4e00050,0x0000007861a10058,0x0000004574600050\n"
".quad 0x0000007cd3600050,0x244000150ae00050,0x0000007c82210030,0x00000084a2a00050\n"
".quad 0x1200003d02620050,0x18000038f3220030,0x0000000c74a00030,0x0000003cf5e00050\n"
".quad 0x0000008451600058,0x2600003cf3e00050,0x0000004101e00030,0x000000a061a10050\n"
".quad 0x000000a4d3600050,0x0000000082200050,0x14f0200252a00050,0x0000009451610030\n"
".quad 0x1e00004071e10050,0x0000007c61a10030,0x00000000d3e00050,0x1000003902220050\n"
".quad 0x2e00004104e00030,0x00000080a3600030,0x0000008051600050,0x2e000038e4220050\n"
".quad 0x0000007d22a10030,0x0000000065e10050,0x00000098d4a00050,0x00d0280281200050\n"
".quad 0x0000008114600058,0x0af0000261600050,0x0000004173610030,0x0000007924200050\n"
".quad 0x08f0280251200050,0x22f0000264600030,0x0000007854a00030,0x000000a8f1600050\n"
".quad 0x0000009d03e00050,0x08400014e1200050,0x0000007914200030,0x26000038e3a00050\n"
".quad 0x24f0000274600030,0x1ef0200283e00030,0x0000003854a10030,0x000000a114610050\n"
".quad 0x0000007cf1600050,0x20f0000273e00050,0x0000007d14200030,0x000000a451600050\n"
".quad 0x0000000cf3e00050,0x20f0000294200050,0x0000000050e00030,0x0000007cf1600050\n"
".quad 0x0000000103e00050,0x000000a830e00050,0x0af0000291600050,0x1ef00002a3e00030\n"
".quad 0x06400004e0e00030,0x004000c002e1e430,0x0000001cf4610028,0xee08208431e00250\n"
".quad 0x0000000051600030,0x00400034b5200050,0x00f0200073e00058,0x0af00002a4200058\n"
".quad 0x00d0500073a00030,0xf3333336b1a00258,0x0000005111600030,0x1e40005523e00058\n"
".quad 0x1c40004523a00030,0x0e40007525e00030,0x0a00005110e00030,0x1ef0200064a00030\n"
".quad 0x0000003951e10030,0x1ed0200064e00050,0xf18e38e503a00230,0x0000000d21a00030\n"
".quad 0x0000000d34e00050,0xf333333565600250,0x0cf02000e0e00030,0x26f02000eb200030\n"
".quad 0x1ef0200154e00030,0x0000000d81a10030,0x1ed0200156200050,0xf333333444a00230\n"
".quad 0x000000b1c0e10030,0x1c40006505600050,0x2600005114e20030,0x300000511b220030\n"
".quad 0x1ef0200127200030,0x1ed0200124a00030,0x00400024b3e00030,0x00000000a2a10058\n"
".quad 0x0000005534e00050,0x00000056cb200050,0x380000511b620050,0xf4aaaaaca6200230\n"
".quad 0x2600003cd4e00030,0x5800003cd7200030,0x00000056db200030,0x26f0000184e00050\n"
".quad 0x38f0000187200030,0x30400094a6200030,0x5800003cdb220030,0x240000511b620030\n"
".quad 0x0000004da4e10030,0x00000062c6a00050,0x00000056d5600050,0x00000071d4a10050\n"
".quad 0x0000006a59610050,0x2a00003cd6a20050,0x2e400086b7200030,0x2e400086bb220030\n"
".quad 0x00000061a6a00030,0x2e40008565600050,0x2e40008565e20030,0x0000006a8a210030\n"
".quad 0x3840008566200050,0x584000856ae00030,0x5840008566a20030,0x3840008565a20030\n"
".quad 0x3000005117600030,0x5600005116200030,0x2c00005115a00030,0x3a40006507600030\n"
".quad 0x3400005116a00030,0x2c40006505a00030,0x3a00003cd7600030,0x3040006506200030\n"
".quad 0x2c00003cd5a00030,0x3440006506a00030,0x3a400094a7600030,0x2c400094a5a00030\n"
".quad 0x3000003cd6200030,0x3400003cd6a00030,0x3acfa0009ae00030,0x2ccfa00097620030\n"
".quad 0x0000009235a30030,0x30400094a6200050,0x34400094a6a00030,0x0000009a0b610030\n"
".quad 0x0000008965a00050,0x30cfa00096220050,0x34cfa00096a00030,0x0000008822610030\n"
".quad 0x0000007ad0a00050,0x0000008565a00050,0x2a4000844b600050,0x0000009c20a10030\n"
".quad 0x0000009965a00050,0x5af000005b600050,0x0000007c20a10030,0x0000009d65a10050\n"
".quad 0x0000008492600050,0x000000a420a00050,0x000000a565a00050,0x5af00000eb600050\n"
".quad 0x0000008092610030,0x0000000020a10050,0x000000a965a10050,0x5acfa000cb600050\n"
".quad 0x0000007892600030,0x000000a820a00050,0x5acf80016b600050,0x0000007c92610030\n"
".quad 0x384000844be20050,0x5acf80002b620030,0x0000000092600030,0x584000844ba00050\n"
".quad 0x000000b669a10030,0x384000844b600050,0x584000844c220030,0x56cf80009ae00030\n"
".quad 0x5a0000511b600030,0x5e0000511be00030,0x5c0000511ba00030,0x600000511c200030\n"
".quad 0x56cf80016ae20030,0x2a40008445220030,0x2e40008444600030,0x2e40008445620030\n"
".quad 0x324000e1b1200330,0x000000ae4ae10020,0x28f0000059200050,0x22f0000054600030\n"
".quad 0x2af000005b200030,0x00c0008041602330,0x00c0007845200358,0x004000a00721e458\n"
".quad 0x48f00000e9200028,0x0000005051604330,0x39c0001041200340,0x00c04001b5200320\n"
".quad 0x48cfa000c9220048,0x004000b051604330,0x324000e145200348,0x00cfa000b2e00020\n"
".quad 0x0000000041e08558,0x48cf800169200094,0x30cf800096220030,0x34cf800096a20030\n"
".quad 0x00c0008141202330,0x00c0007941600358,0x00c08001b1e00358,0x3acf800097600048\n"
".quad 0x0000001441604330,0x39c0001141200340,0x324000e075200320,0x34cf800166a00020\n"
".quad 0x004000b051604330,0x00c0008141e02348,0x00c0007945600358,0x0000000041a08558\n"
".quad 0x0000006a28a10094,0x0000005471e04350,0x39c0001141a00340,0x00c0c001b1200320\n"
".quad 0x00c10001b1600348,0x004000b071e04348,0x324000e041200348,0x324000e055200320\n"
".quad 0x0000000064e08520,0x00c0008045602394,0x00c0007845e00358,0x39c0001041200358\n"
".quad 0x00c0008141a02320,0x0000005d51604358,0x00c0007941e00340,0x00c14001b4e00358\n"
".quad 0x004000b051604348,0x0000001c61e04348,0x39c0001141a00340,0x0000000040e08520\n"
".quad 0x00c18001b5200394,0x004000b071e04348,0x324000e135600348,0x324000e145200320\n"
".quad 0x00c1c001b0e00320,0x0000000064a08548,0x00c0008141202394,0x00c0007941600358\n"
".quad 0x324000e030e00358,0x00c0008151a02320,0x00c0007951e00358,0x0000001444a04358\n"
".quad 0x00c0008031202340,0x00c0007831600358,0x0000001c65e04358,0x00c20001b1a00340\n"
".quad 0x0000001444e04348,0x5a40006501200040,0x5e40006501600030,0x5c40006501e00030\n"
".quad 0x604000650b600030,0x324000e064200330,0x22f00000e1a00020,0x58f00000eba00030\n"
".quad 0x00c0008103a02330,0x00c0007904600358,0x0800003cd1220058,0x0a00003cdb220030\n"
".quad 0x00000044e4604330,0x00c24001b3a00340,0x0e00003cd1e20048,0x5a00003cdb620030\n"
".quad 0x324000e0e3a00330,0x0ccfa000c1a20020,0x08400094a1220030,0x00c00080e1602330\n"
".quad 0x00c00078e3600358,0x58400094ab220058,0x0e400094a1e20030,0x0000003453e04330\n"
".quad 0x00c28001b3600340,0x5ccfa000c1600048,0x5a400094ab620030,0x324000e0d3200330\n"
".quad 0x0800002c81200020,0x5800002c8b220030,0x00c00080c2a02330,0x00c00078c3600358\n"
".quad 0x0e00002c81e20058,0x5a00002c8ba00030,0x00000034a3604330,0x00c2c001b2a00340\n"
".quad 0x0ccf80016be20048,0x48cf800021a00030,0x324000e0a2a00330,0x30cf80016b620020\n"
".quad 0x3acf800166200030,0x00c00080a2202330,0x00c00078a2e00358,0x0acf800165a20058\n"
".quad 0x0000001a99210030,0x0000002c82e04350,0x00c30001b2200340,0x08cf800097620048\n"
".quad 0x0ecf80009a600030,0x324000e082200330,0x58cf80009c220020,0x5ccf80009ba00030\n"
".quad 0x00c0008081602330,0x00c0007881a00358,0x2ccf800022600058,0x3acf80002b200030\n"
".quad 0x0000001851a04330,0x00c34001b1600340,0x00000026aaa10048,0x52cf800027600050\n"
".quad 0x324000e051600330,0x5ecf80002be20020,0x60cf800022620030,0x00c0008051202330\n"
".quad 0x00c0007851e00358,0x5ccf80002a620058,0x00000025f7e10030,0x0000001c41e04350\n"
".quad 0x00c38001b1200340,0x0000006218610048,0x00c40001b6200350,0x324000e041200348\n"
".quad 0x000000b638e10020,0x324000e186200350,0x00c0008045a02320,0x00c0007840a00358\n"
".quad 0x00000075e7a10058,0x000000b208210050,0x0000000960a04350,0x39c0001155a00340\n"
".quad 0x00c3c001b5600320,0x00c000798b200348,0x004000b175e04358,0x39c0001145200348\n"
".quad 0x324000e156a00320,0x000000016ae08520,0x004000b125604394,0x39c0001034a00348\n"
".quad 0x00c00081a0e02320,0x00c00079ab600358,0x004000b134e04358,0x39c0001104200348\n"
".quad 0x000000b430e04320,0x00c000818b602340,0x004000b114604358,0x39c00010e3a00348\n"
".quad 0x000000b2db204320,0x0000000148e08540,0x004000b0f3e04394,0x39c00010c3200348\n"
".quad 0x0000000128a08520,0x0000000108608594,0x004000b0d3604394,0x39c00010a2a00348\n"
".quad 0x00000000e9608520,0x000000be79e10094,0x004000b0b2e04350,0x39c0001082200348\n"
".quad 0x00000000c8208520,0x00000000a9a08594,0x004000b062604394,0x39c0001051a00348\n"
".quad 0x00c44001b1600320,0x00c48001b6e00348,0x004000b071e04348,0x39c0001041200348\n"
".quad 0x324000e057600320,0x324000e1bba00320,0x004000b021604320,0x39c00011a0a00348\n"
".quad 0x00c00081d6a02320,0x00c00079db600358,0x004000b030e04358,0x39c0001186200348\n"
".quad 0x000000b5a6e04320,0x0000000087a08540,0x004000b2c6604394,0x39c00011d6a00348\n"
".quad 0x00c00082e7602320,0x00c0007aeb200358,0x004000b1b6e04358,0x39c00012e7200348\n"
".quad 0x000000b1db204320,0x0000000069e08540,0x000000a400210094,0x000000004a208550\n"
".quad 0x004000b2c7604394,0x0000000027e08548,0x0000000189208594,0x00000001a0208594\n"
".quad 0x00000001caa08594,0x0000124000a1e794,0x0000005946c00340,0x004000a00ac1e448\n"
".quad 0x00c04001b0800328,0x00c10001b1800348,0x00c14001b1c00348,0x324000e021400348\n"
".quad 0x00c08001b0c00320,0x00c18001b2000348,0x324000e060800348,0x324000e075800320\n"
".quad 0x00c0008051802320,0x00c0007851c00358,0x324000e030c00358,0x324000e085000320\n"
".quad 0x00c0c001b1000320,0x57c0001052000348,0x0000001c61404320,0x00c0008031c02340\n"
".quad 0x00c0007832c00358,0x324000e041000358,0x004000b052404320,0x57c0001031800348\n"
".quad 0x0000002c71c04320,0x00c0008041402340,0x00c0007845400358,0x004000b071c04358\n"
".quad 0x57c0001041000348,0x0000005451404320,0x00c0008020c02340,0x00c0007824c00358\n"
".quad 0x004000b051404358,0x57c0001020800348,0x0000004c30c04320,0x00c0008162c02340\n"
".quad 0x00c0007965400358,0x00c1c001b4800358,0x004000b030c04348,0x00000054b5404348\n"
".quad 0x57c0001165800340,0x00c0008144c02320,0x00c0007942c00358,0x00c24001b3800358\n"
".quad 0x324000e124800348,0x00c20001b4000320,0x00c28001b3000348,0x004000b155c04348\n"
".quad 0x0000002d34c04348,0x57c0001145000340,0x0000000087008520,0x324000e0e3800394\n"
".quad 0x00c000812b002320,0x00c000792b400358,0x0000000067408558,0x324000e104000394\n"
".quad 0x324000e0c3000320,0x00c2c001b2800320,0x004000b135404348,0x00c00080e2402348\n"
".quad 0x00c00078e7000358,0x000000b6c4c04358,0x00c0008102002340,0x00c000790b800358\n"
".quad 0x00c00080c1c02358,0x00c00078cb000358,0x324000e0a2800358,0x57c0001124800320\n"
".quad 0x0000007097404320,0x000000b881804340,0x000000b072404340,0x00c00080a2002340\n"
".quad 0x00c00078a1c00358,0x00c30001b4400358,0x004000b134c04348,0x57c0001104000348\n"
".quad 0x0000001c82004320,0x324000e111c00340,0x00c34001b3c00320,0x004000b064404348\n"
".quad 0x57c00010e3800348,0x324000e0f1800320,0x00c38001b3400320,0x004000b1d3c04348\n"
".quad 0x57c00010c3000348,0x324000e0db000320,0x00c3c001b2c00320,0x004000b093404348\n"
".quad 0x57c00010a2800348,0x0000000046008520,0x00c0008072402394,0x00c000787b400358\n"
".quad 0x0000000026808558,0x324000e0b7400394,0x00c40001b7000320,0x004000b082c04348\n"
".quad 0x57c0001072000348,0x000000b491404320,0x00c00082c1c02340,0x00c0007ac6000358\n"
".quad 0x00c00081d0c02358,0x00c00079d2400358,0x324000e1c7000358,0x00c0008061002320\n"
".quad 0x00c000786b800358,0x0000006070804358,0x0000002430c04340,0x00c00081c1c02340\n"
".quad 0x00c00079c6000358,0x004000b052404358,0x000000b841004348,0x57c0001061800340\n"
".quad 0x0000006076804320,0x00c44001b1400340,0x004000b041c04348,0x57c00012c1000348\n"
".quad 0x324000e05b000320,0x00c48001b6c00320,0x004000b021404348,0x57c00011d0800348\n"
".quad 0x00c00082c7402320,0x00c0007acb400358,0x004000b030c04358,0x57c00011c6000348\n"
".quad 0x0000000168808520,0x324000e1b7000394,0x0000000148408520,0x004000b1a6404394\n"
".quad 0x0000000129008548,0x000000b5d6c04394,0x57c00012c6800340,0x0000000108c08520\n"
".quad 0x00c00081c7402394,0x00c00079cb000358,0x00000000ea008558,0x00000000c0008594\n"
".quad 0x004000b1b6c04394,0x00000000aa808548,0x57c00011c7000394,0x000000b1d7404320\n"
".quad 0x0000000087c08540,0x000000006a408594,0x0000000049408594,0x004000b1d7404394\n"
".quad 0x0000000027808548,0x0000000189c08594,0x00000001a8008594,0x00000001c9808594\n"
".quad 0x00000000001de794,0x0000000000000080,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0xf145140000000000,0xaaaaab3fd5555540,0x73cf3d3ce38e393d\n"
".quad 0x638e39bdb2cb2dbe,0xcccccd3d8208203c,0x0004013d2aaaab3c,0x0000b50008020400\n"
".quad 0x0802040000000300,0x000008000000b900,0x0000b40008020400,0x0802040000000200\n"
".quad 0x000001000000b200,0x0000b00008020400,0x0802040000000000,0x000007000000c000\n"
".quad 0x0000be0008020400,0x0802040000000600,0x000005000000b700,0x0000bb0008020400\n"
".quad 0x0802040000000900,0x000004000000b600,0x00004d00080a0400,0x2419030024002000\n"
".quad 0x000000000c170400,0x11f0000020000400,0x000000000c170400,0x21f0000018000300\n"
".quad 0x000000000c170400,0x11f0000010000200,0x000000000c170400,0x21f0000008000100\n"
".quad 0x000000000c170400,0x21f0000000000000,0x03002400080d0400,0x005de40000000200\n"
".quad 0x019c042800440400,0x01dc042c0000009c,0x00dc042c0000008c,0x011c042c00000094\n"
".quad 0x001c042c00000084,0x015c042c00000098,0x619ca32c00000088,0x379ca3200e400040\n"
".quad 0x001ca32008400020,0x641c03200a400030,0x025de26000c00018,0x01dc231905f00000\n"
".quad 0xe1dc03188ec00008,0x211e044800fffff9,0x035c031800000001,0x215e044800000001\n"
".quad 0x20de041800000019,0x71dc031800000079,0x469c001a20c000ec,0xd1dc033012cfc000\n"
".quad 0x521c004800c34000,0x331c003012cfc000,0xa15c003012cfc000,0x749c035000f07f01\n"
".quad 0xd25c03203c4000e0,0xc11c004800c38000,0x515c005000f09f80,0x009de45800000014\n"
".quad 0x255c2328004000a0,0x259c035800c00081,0x94dc035800c00079,0xd2dc03203c4000e0\n"
".quad 0x46dc004800c3c000,0x261c03300a000010,0x511c432005c00011,0x315c234000000059\n"
".quad 0x349c035800c00081,0xb51c035800c00079,0xd39c03203c4000e0,0x465c434800c40000\n"
".quad 0x359c0348004000b0,0x511c432005c00011,0x415c234000000048,0x449c035800c00081\n"
".quad 0xe71c035800c00079,0xd3dc03203c4000e0,0x45dc434800c44000,0x451c0348004000b0\n"
".quad 0x511c432005c00011,0xc15c234000000048,0xc4dc035800c00081,0xf75c035800c00079\n"
".quad 0xd45c03203c4000e0,0x455c434800c48000,0xc49c0348004000b0,0x511c432005c00011\n"
".quad 0xd15c23400000004c,0xd71c035800c00081,0x01dc235800c00079,0x17dc031a20c000f4\n"
".quad 0x44dc43203c4000e1,0x80dc0048004000b0,0xd11c035000f07f00,0x515c432005c00011\n"
".quad 0x61dc234000000070,0xf71c2318a0c00008,0xf75c035800c00081,0x515c435800c00079\n"
".quad 0x30dc0048004000b0,0xf09c03303600000c,0xc6dc432005c00011,0x63dc234000000075\n"
".quad 0x31dc001a20c000f4,0x105d03208ed06000,0x2c9c844800c00060,0xd29c031406000021\n"
".quad 0xb0dc43203c4000e0,0x0005e748004000b1,0xa09c234000006380,0xa0dc035800c00080\n"
".quad 0x021c035800c00078,0x015c034800000040,0x041de44800c00004,0x25dc432800400080\n"
".quad 0x53dc23400000000c,0x50dc03188ec00100,0xa09c034800c48000,0x661c032021c00010\n"
".quad 0xe11c034800c00004,0x851c034800fffffd,0x865c034800c20004,0x391c044800c3c100\n"
".quad 0x829c032002c480fc,0x815c034800c04000,0x70dc434800c13ffc,0xe19c034800400091\n"
".quad 0x85dc234800c00005,0x84dc03188ec00101,0x45dc034800c17ffc,0x849c0320084000e1\n"
".quad 0x875c034800c07ffc,0x881c034800c23f00,0x951c034800c33f04,0x855c0320084000e1\n"
".quad 0x86dc034800c27f00,0x571c034800c10004,0xa65c0320084000e0,0x859c0320084000e0\n"
".quad 0x869c034800c1c004,0x8608034800c2ff00,0x0629e26000c00019,0x315c031800003f00\n"
".quad 0x831c03200c4000e1,0x88dc034800c0c000,0x24dc034800c44100,0xdb5c03203c4000e1\n"
".quad 0x0b1c03203c4000e1,0x555c03203c4000e2,0xb49c0320084000e1,0x975c23203c4000e1\n"
".quad 0x981c035800c00081,0x611c035800c00079,0xaa9c03200c4000e1,0x46dc03200c4000e1\n"
".quad 0x369c034800000062,0xc59c03200c4000e2,0x961c03200c4000e0,0x219c852021c00011\n"
".quad 0xd65c438400000000,0xc75c234000000081,0xc81c035800c00081,0x965c435800c00079\n"
".quad 0xc71c034800400091,0xd09c432021c00011,0x70dc234000000081,0x781c035800c00081\n"
".quad 0x87dc035800c00079,0x275c434800c2befc,0x889c034800400090,0x7a1c034800c400fc\n"
".quad 0x309c432021c00011,0x50dc234000000080,0x55dc035800c00081,0xfadc035800c00079\n"
".quad 0x27dc03203c4000e1,0x2a5c43203c4000e2,0x589c034800400090,0x309c432021c00011\n"
".quad 0x40dc23400000005c,0x455c035800c00081,0x28dc435800c00079,0x885c034800400090\n"
".quad 0x481c034800c38100,0x351c432021c00011,0x609c234000000054,0x60dc035800c00081\n"
".quad 0x1b9c035800c00079,0x485c43203c4000e2,0x691c034800400091,0x209c432021c00011\n"
".quad 0x30dc23400000000c,0x351c035800c00081,0x295c435800c00079,0x399c034800400090\n"
".quad 0x309c432021c00011,0x50dc234000000050,0x54dc035800c00080,0x29dc435800c00078\n"
".quad 0x559c034800400090,0x309c432021c00010,0x20dc23400000004c,0x215c035800c00081\n"
".quad 0x25dc435800c00079,0x251c034800400090,0x309c432021c00011,0x40dc234000000014\n"
".quad 0x415c035800c00080,0x255c435800c00078,0x449c034800400090,0x309c432021c00010\n"
".quad 0xd0dc234000000014,0xd15c035800c00082,0x24dc435800c0007a,0xd11c034800400090\n"
".quad 0x309c432021c00012,0xb0dc234000000014,0xbb5c035800c00082,0x215c435800c0007a\n"
".quad 0xb09c034800400090,0x30dc432021c00012,0xaadc2340000000b4,0xab5c035800c00082\n"
".quad 0x30dc435800c0007a,0xaa9c034800400090,0xbadc432021c00012,0xcb5c2340000000b6\n"
".quad 0xcbdc035800c00082,0xbadc435800c0007a,0xcb1c034800400092,0xdb5c432021c00012\n"
".quad 0xebdc2340000000be,0xec1c035800c00082,0xdb5c435800c0007a,0xeb9c034800400092\n"
".quad 0xfbdc432021c00012,0xfc5c2340000000c2,0xfc9c035800c00081,0xfbdc435800c00079\n"
".quad 0xfc1c034800400092,0x17dc432021c00011,0xacdc2340000000cb,0xad1c035800c00081\n"
".quad 0xfc5c435800c00079,0xac9c034800400091,0x341c432021c00011,0x001de440000000d3\n"
".quad 0xb6dc032800400080,0x0cdc43203c4000e1,0xc71c854800400091,0xb69c238400000001\n"
".quad 0xb7dc035800c00081,0xbd1c035800c00079,0x86dc852001c00011,0xa01c438400000002\n"
".quad 0x675c85400000007d,0x47dc858400000001,0x2a5c858400000001,0x869c858400000001\n"
".quad 0x289c858400000001,0x081c858400000002,0x0d5c438400000002,0x465c854800400090\n"
".quad 0x661c858400000002,0xa85c858400000002,0xc8dc858400000002,0x495c858400000002\n"
".quad 0x291c858400000000,0xe9dc858400000000,0x099c858400000002,0x201c858400000003\n"
".quad 0x4a1c858400000003,0x171c858400000003,0x16dc85c800000050,0x175c85c800000010\n"
".quad 0x17dc85c800000040,0x1a5c85c800000030,0x0001e7c800000020,0xa4dc004000003c60\n"
".quad 0x511c005000000069,0xa21d00500000008a,0x7b5c005000000065,0x841d005800d02802\n"
".quad 0x959c00500000007d,0x8adc005800d02801,0x3b9d005000000061,0xfb1c005000000061\n"
".quad 0xc0dd005800d02801,0x44dc005000000019,0xaa9c005000000090,0x851c005800f02001\n"
".quad 0x511c005000000070,0x05dc00305af02802,0xa21c005000000071,0xab5c00302cf02801\n"
".quad 0x2c1d003056f02001,0x841c005000000086,0x359c003058f02801,0x8bdc005000000074\n"
".quad 0x6b1c00500000007d,0x929c003054d05000,0xf55c005000000065,0x4a9d00500000007d\n"
".quad 0x9b5c005000000075,0x0c9d00305af02001,0x7adc005000000083,0x659c005000000075\n"
".quad 0xfc1c0050000000a5,0x35dc005000000072,0x8b1c005000000085,0x8bdd003058f02001\n"
".quad 0xeb9c00302af00001,0xdb5c00500000002a,0xaa9d005000000056,0xbadd0050000000a6\n"
".quad 0x655c0050000000a6,0x75dc00500000006d,0x9b1c00500000008d,0xeb9d003058f02001\n"
".quad 0xaa9c00500000007e,0xbadd00500000006e,0x555c00500000006e,0xfbdc005000000089\n"
".quad 0x759d005000000072,0xfb1c00500000009d,0xdb5c003058f02001,0xeb9c005000000072\n"
".quad 0xa5dc005000000072,0xcd1d00500000008a,0xb7dc005000000075,0x555c005000000092\n"
".quad 0xfbdc005000000091,0xc71c005000000076,0xdadc005000000072,0xeb9c005000000076\n"
".quad 0x75dd005000000076,0x0c1c005000000085,0x555c005000000077,0xfbdc005000000085\n"
".quad 0xca9c0050000000a6,0xbadc005000000075,0x4c5d0050000000a6,0x659d00500000008e\n"
".quad 0xeb1c005000000081,0xf7dd0050000000a6,0x771c00500000008d,0x0c1c005000000081\n"
".quad 0x55dc0050000000a7,0x549c00500000008d,0xfb5c005000000096,0xb55c00500000006e\n"
".quad 0x1cdd00500000006e,0x659d00500000009b,0xcb1c005000000099,0xf75c00500000006e\n"
".quad 0x4c5c005000000099,0x0c1c0050000000a7,0xa7dc00500000006f,0xdb5c0050000000a6\n"
".quad 0x5a5c00500000004a,0x659d005000000049,0xc49d005000000001,0x0bdd005000000096\n"
".quad 0xc55d005000000097,0x151d005000000001,0xd71d00500000006f,0x75dc0050000000a1\n"
".quad 0x34dc005000000081,0x659d0050000000a3,0xf6dc0050000000a1,0x275c00500000006d\n"
".quad 0x229c005000000089,0xfb9d005000000003,0x549c00500000008a,0x5e9e003010400015\n"
".quad 0x721c003028000071,0xda9d005000000099,0xcedc00500000008a,0xce5e003020400015\n"
".quad 0x551c003026000059,0xeadd003036f02002,0x541e005000000086,0x64dc003014000059\n"
".quad 0xc29c005800000059,0x85dc005800000071,0xa7dd005000000000,0x96dc005000000086\n"
".quad 0x421c00500000008a,0xba9d005000000089,0xca5c00500000009e,0x471c003026000071\n"
".quad 0x54dc00303af00002,0x6ade003014000055,0x829c003014000059,0x715c005000000090\n"
".quad 0x451c00500000009e,0xc71c003036f00002,0x6e1c005000000085,0xa6dc003008400015\n"
".quad 0xf11c005000000084,0x57dc005000000015,0x371c005000000055,0xb6dc003038f00002\n"
".quad 0xf7dd00500000008d,0xc71d003052000055,0x755c00500000009d,0xaa9d003036f02002\n"
".quad 0xc6dc005000000082,0x555c005000000081,0xa75d005000000081,0x671c005000000002\n"
".quad 0x56dc003036f00002,0x659c005000000099,0x755c003026000059,0xd4dd0050000000a1\n"
".quad 0xb5dc0050000000ad,0xc75c005000000001,0x471c005000000001,0x751c005000000085\n"
".quad 0x56dd0050000000a1,0x35dc005000000059,0x651c003038f00002,0x031de43028400005\n"
".quad 0x75dc0028004000c0,0x459c025000000015,0x875c0030ee082085,0xb21c02303af00002\n"
".quad 0x615c0030f3333337,0x671c005800d05001,0xbd9c005800f02001,0xbb9c00302c400075\n"
".quad 0xbb5c00300a400045,0x829c023038400055,0x26de0030f3333337,0x259c00306c400085\n"
".quad 0xc0dc00306c400085,0xd55d005800400034,0x815c00500000007d,0xaa5c00305af02000\n"
".quad 0xac1c00305af02000,0xb71e00305ad02000,0x821c003036400087,0xb29c00305ad02000\n"
".quad 0xb75e00302c400087,0x8bdc00302c400087,0x8c5e00302c400087,0x5ddc00302c400087\n"
".quad 0xb59c00580000000d,0x87dc003036400087,0x8a9e003036400087,0xd09c033036400087\n"
".quad 0x56dc00203c4000e0,0x5b1e00303800000d,0x5ade00301000000d,0x571c00305200000d\n"
".quad 0x551c00303a00000d,0x515e00306e00000d,0x521e00300a00000d,0x529c00306000000d\n"
".quad 0x559c00301400000d,0x575c00302c00000d,0x5a5c00305e00000d,0x57dc00306200000d\n"
".quad 0x5a9c00303e00000d,0x20dc23305400000d,0x255c035800c00080,0x6b9d005800c00078\n"
".quad 0x1d1c8550000000b8,0x3bdc43c800000000,0x255c024000000054,0x049de430f3333335\n"
".quad 0x70dc0028004000a0,0x519c005000000081,0x209c03305af02001,0x65dc002025c00010\n"
".quad 0x555c003006f00002,0xdb5c03305ad02001,0xf0dc434800c04000,0x75dc0048004000b2\n"
".quad 0xdbdc035000000001,0x2b9c85203c4000e2,0x8b5c009400000000,0xf5dc23302ef00002\n"
".quad 0xfc1c035800c00082,0xdd5c025800c0007a,0x609c0030f18e38e6,0x75dc435000000050\n"
".quad 0x519c0040000000c1,0x50dc005000000051,0xf09c033004f02003,0x519c002025c00012\n"
".quad 0xa51d00300cf02003,0x70dc43500000000d,0x919d0048004000b1,0x411d005000000019\n"
".quad 0x251c855000000080,0xd65c009400000000,0xd55c03306a400066,0xc5dc004800c08000\n"
".quad 0x4d1d005800400024,0x509c005000000000,0x50dc035000000064,0x4cdc02203c4000e1\n"
".quad 0x309c0030f4aaaaaf,0xd69c03300400005d,0x311c234800c0c000,0x315c035800c00080\n"
".quad 0x309c005800c00078,0xa55c033004f00003,0x415c43203c4000e1,0x851d004000000014\n"
".quad 0x509c235000000009,0x561c035800c00081,0x311c035800c00079,0xd69c032025c00010\n"
".quad 0x20dc434800c1c000,0x515c434000000060,0x509c0348004000b0,0xd55c032025c00011\n"
".quad 0x451c854800c10000,0x30dc439400000000,0xd61c0348004000b0,0x555c034800c14000\n"
".quad 0x219c85203c4000e1,0x811c039400000000,0xd15c03203c4000e1,0xd71c004800c18000\n"
".quad 0x509c233038400066,0x50dc035800c00081,0x451c235800c00079,0x461c035800c00080\n"
".quad 0x519c035800c00078,0x20dc43203c4000e0,0x415c43400000000c,0x609c234000000061\n"
".quad 0x651c035800c00080,0xb61c005800c00078,0x8adc005000000066,0x251c435000000064\n"
".quad 0xa21c034000000050,0xc09c00203c4000e1,0xd65c005000000066,0xd69c003014400066\n"
".quad 0x829c23302c400066,0x859c035800c00080,0xdb1c005800c00078,0xd6dc003036400066\n"
".quad 0xa59c43303a400066,0xd29c034000000058,0xd75c004800c20000,0xd7dc003052400066\n"
".quad 0xda5c00303e400066,0xa29c033054400066,0x3bdc00203c4000e0,0x3b5c00303200005d\n"
".quad 0x3b9c00305800005d,0x3b1c00303400005d,0x365e00303800005d,0x3c9c00303600005d\n"
".quad 0x3c5e00300400005d,0x3c1e00303000005d,0x36de00305600005d,0x369e00303a00005d\n"
".quad 0x371e00303e00005d,0xa09c23305200005d,0xa4dc035800c00080,0x45de005800c00078\n"
".quad 0x469e003034400097,0x261c433038400097,0xd4dc03400000004c,0xc09c004800c24000\n"
".quad 0xe39c035800cfa000,0x331c03203c4000e0,0x44de00203c4000e1,0x465e003032400097\n"
".quad 0x0a5e003036400097,0x0adc00302e000009,0x0a9e003026000009,0x04dc003032000009\n"
".quad 0xc09c233034000009,0xc41c035800c00080,0xef1c035800c00078,0xff5c035800c00078\n"
".quad 0x269c43203c4000e0,0xd09c034000000040,0xd3dc234800c28000,0x3c9c005800c00083\n"
".quad 0x275c033064f00003,0x4cdc00203c4000e0,0x4bdc003066400097,0xd09c23305e400097\n"
".quad 0xd41c035800c00081,0x1c5c005800c00079,0x0c1c0050000000cf,0x271c4350000000cf\n"
".quad 0xd41c034000000040,0x509c034800c2c000,0x595d002025c00011,0x041c0350000000c6\n"
".quad 0x30dc43203c4000e1,0x411c0348004000b0,0x055c232025c00010,0x05dc035800c00081\n"
".quad 0x515c435800c00079,0x619c0348004000b0,0x57dc432025c00010,0x755c03400000005d\n"
".quad 0x4b9c00203c4000e0,0x79dd00305c400097,0x51dc2350000000c2,0x55dc035800c00081\n"
".quad 0xac5c005800c00079,0x4cdc00305ecfa003,0x75dc433058400097,0x41dc43400000005c\n"
".quad 0x551c0348004000b1,0x1c1e852025c00011,0x1bde85c000000040,0x755c43c000000050\n"
".quad 0x95dc0348004000b1,0x821c03203c4000e0,0x4b5c002025c00010,0x725c23305a400097\n"
".quad 0x765c035800c00081,0x0d1f005800c00079,0xab5c0050000000bf,0x965c43305acfa003\n"
".quad 0x625c434000000064,0x759c0348004000b1,0x95dc432025c00011,0xb65c0348004000b1\n"
".quad 0xa29c03203c4000e0,0x92dc232025c00010,0x96dc035800c00081,0xb6dc435800c00079\n"
".quad 0x82dc43400000006c,0x961c0348004000b1,0xb65c432025c00011,0xe6dc2348004000b1\n"
".quad 0xc31c035800c00080,0xb6dc432025c00010,0xdf1c0340000000f1,0xa35c434800c30000\n"
".quad 0xe69c0348004000b1,0xcf1c032025c00010,0x179c03203c4000e3,0xb6dc43203c4000e1\n"
".quad 0xd39c0348004000b1,0xd75c032025c00011,0xe45c235800c0007b,0xf75c435800c00081\n"
".quad 0xc3dc434000000074,0xd71c0348004000b1,0xef5c032025c00013,0xd75c435800c00079\n"
".quad 0x041c0348004000b1,0x1f5c432025c00011,0xf45c4340000000f5,0xe79c0348004000b1\n"
".quad 0xd7dc432025c00011,0xc49c0348004000b3,0xcf5c232025c00013,0xcf1c035800c00083\n"
".quad 0xdf1c435800c0007b,0xbf5c0040000000f3,0xbd9e00306c400087,0x8edc00306c400087\n"
".quad 0x8f9e00307a400087,0x8f5c00307a400087,0x8d9e00306c400087,0x7edc00306c400087\n"
".quad 0x7f5c003076f00003,0x7f9c00307af00003,0x7d9c00307cf00003,0x5e1c00306cf00003\n"
".quad 0x5edc00307af00003,0x5ddc003076f00003,0x5f5c00307cf00003,0x9d9e00306cf00003\n"
".quad 0x9d5c003070cfa003,0x9dde003076cfa003,0x9e1c00306ecfa003,0x1e5e85307acfa003\n"
".quad 0x9b1d00c000000030,0xac9e0050000000cb,0x1b9e85305ccfa003,0xae5e00c000000020\n"
".quad 0x1cde853066cfa003,0x2e9d00c000000010,0x2b1c855000000092,0x4d1c009400000000\n"
".quad 0xae9c0050000000bb,0x4d1c005000000087,0xae9d0050000000cf,0x4d1c00500000008f\n"
".quad 0xae9d005000000093,0x4d1d005000000083,0xae9c00500000008f,0x4d1c00500000009b\n"
".quad 0xae9d00500000009b,0x4d1d005000000003,0xae9c0050000000a3,0x4d5c0050000000a3\n"
".quad 0x4ddc00306acf8003,0xaede00306ecf8003,0x1d5e85306acf8003,0xaddc00c000000000\n"
".quad 0x491d00306ecf8003,0x699d0050000000ee,0x5d5d0050000000de,0x5d5c0050000000bb\n"
".quad 0x5d5d0050000000cf,0x5d5c00500000008b,0x5d5d005000000087,0x5d5c005000000083\n"
".quad 0x5c5c005000000003,0x5c9e003062cf8003,0x5b5e003064cf8003,0x5ddc00305acf8003\n"
".quad 0x5ade003072cf8003,0x5a9e003056cf8003,0x5a5c003054cf8003,0x54dc003052cf8003\n"
".quad 0x4d5e003026cf8003,0x4b5c00306ccf8003,0xad9c00305acf8003,0xad5e003052cf8003\n"
".quad 0x10dd00306acf8003,0x38dd0050000000da,0x4d5e0050000000d6,0xae1e003070cf8003\n"
".quad 0xc4dc433026cf8003,0xad5c0048004000b3,0x001d00306acf8003,0x8a1d0050000000e0\n"
".quad 0x4d5e0050000000d6,0x4c5e003062cf8003,0x4c9c003064cf8003,0xadde00306ecf8003\n"
".quad 0xfa5d003054cf8003,0xad1c0050000000d6,0x0a9d003056cf8003,0xeadd0050000000c7\n"
".quad 0x3b5d0050000000b6,0x4a5c8550000000cb,0x6a9c859400000000,0x209d009400000000\n"
".quad 0x8adc8550000000d2,0xab5c859400000000,0xc95c859400000000,0xe09c859400000000\n"
".quad 0x091c859400000000,0x081d009400000001,0x20dc8550000000de,0x48dc859400000001\n"
".quad 0x69dc859400000001,0x881c859400000001,0xa99c859400000001,0xc01c859400000001\n"
".quad 0xea1c859400000001,0x001de79400000001,0xa09c034000003f00,0x80dc03203c4000e0\n"
".quad 0x81dc034800c08000,0x825c034800c10000,0x82dc034800c14000,0x835c034800c18000\n"
".quad 0x83dc034800c1c000,0x845c034800c20000,0x84dc034800c24000,0x855c034800c28000\n"
".quad 0x85dc034800c2c000,0x8adc034800c30000,0x8b5c034800c34000,0x8bdc034800c38000\n"
".quad 0x8c9c034800c3c000,0x8cdc034800c40000,0x8c5c034800c44000,0x0d9de44800c48000\n"
".quad 0x219c2328004000a0,0x221c035800c00080,0xc15c035800c00078,0x311c03203c4000e0\n"
".quad 0x209c03203c4000e0,0x60dc43206dc00010,0x5d5c234000000020,0x5ddc035800c00080\n"
".quad 0x30dc435800c00078,0x721c0348004000b0,0x519c03203c4000e0,0x929c03206dc00010\n"
".quad 0x51dc43203c4000e0,0x415c2340000000df,0x425c035800c00080,0x71dc435800c00078\n"
".quad 0xb31c0348004000b0,0x411c03203c4000e0,0x515c43206dc00010,0x825c234000000024\n"
".quad 0x82dc035800c00080,0x515c435800c00078,0xd39c0348004000b0,0x821c03203c4000e0\n"
".quad 0x925c43206dc00010,0xa2dc23400000002c,0xa35c035800c00080,0x925c435800c00078\n"
".quad 0xf41c0348004000b0,0xa29c03203c4000e0,0xb2dc43206dc00010,0xc35c234000000034\n"
".quad 0xc3dc035800c00080,0xb2dc435800c00078,0x149c0348004000b0,0xc31c03203c4000e1\n"
".quad 0xd35c43206dc00010,0xe3dc23400000003c,0xe45c035800c00080,0xd35c435800c00078\n"
".quad 0x351c0348004000b0,0xe39c03203c4000e1,0xf3dc43206dc00010,0x045c234000000044\n"
".quad 0x04dc035800c00081,0xf3dc435800c00079,0x559c0348004000b0,0x041c03203c4000e1\n"
".quad 0x145c43206dc00011,0x24dc23400000004d,0x255c035800c00081,0x145c435800c00079\n"
".quad 0x7a9c0348004000b1,0x249c03203c4000e1,0x34dc43206dc00011,0x455c234000000055\n"
".quad 0x45dc035800c00081,0x34dc435800c00079,0xbb1c0348004000b1,0x451c03203c4000e2\n"
".quad 0x555c43206dc00011,0x65dc23400000005d,0x6adc035800c00081,0x555c435800c00079\n"
".quad 0xdb9c0348004000b1,0x659c03203c4000e2,0x75dc43206dc00011,0xaadc2340000000ad\n"
".quad 0xab5c035800c00082,0x75dc435800c0007a,0xfc1c0348004000b1,0xaa9c03203c4000e2\n"
".quad 0xbadc43206dc00012,0xcb5c2340000000b6,0xcbdc035800c00082,0xbadc435800c0007a\n"
".quad 0x3d1c0348004000b2,0xcb1c03203c4000e3,0xdb5c43206dc00012,0xecdc2340000000be\n"
".quad 0xed5c035800c00082,0xdb5c435800c0007a,0xeb9c0348004000b2,0x3bdc43206dc00012\n"
".quad 0x0ddc2340000000d7,0x0e1c035800c00083,0x2c9c035800c0007b,0xfbdc43203c4000e3\n"
".quad 0x7cdc4348004000b2,0x0c1c0340000000e3,0x2d5c23206dc00013,0x2ddc035800c00083\n"
".quad 0x265c855800c0007b,0x179c039400000000,0x47dc85203c4000e3,0x3c5c439400000000\n"
".quad 0x669c8548004000b3,0x5d5c439400000000,0x2c9c0340000000df,0x861c85206dc00013\n"
".quad 0x4ddc239400000000,0x4e1c035800c00083,0xaa5c855800c0007b,0xc6dc859400000000\n"
".quad 0x5cdc439400000000,0xe71c8548004000b3,0x7ddc439400000000,0x4d1c0340000000e3\n"
".quad 0x075c85206dc00013,0xee1c239400000001,0xee5c035800c00081,0x29dc855800c00079\n"
".quad 0x401c859400000001,0x7d5c439400000001,0x6a1c8548004000b3,0x8e1c439400000001\n"
".quad 0xed9c0340000000e7,0xa81c85206dc00011,0xc99c859400000002,0xe95c859400000002\n"
".quad 0x8ddc439400000002,0x085c8548004000b3,0x28dc859400000003,0x489c859400000003\n"
".quad 0x691c859400000003,0x001de79400000003,0x2d1c034000002d00,0xa01c004800c00007\n"
".quad 0x419c035000cfc001,0x21de046000c0001b,0xc19c001800000019,0x01dc005000cfc000\n"
".quad 0x6e5c86500000001c,0x6d9c8680104000fc,0x6d5c8680104101fc,0x6cdc8680104202fc\n"
".quad 0x6e1c8680104303fc,0x6c1c8680104404fc,0x6b1c8680104505fc,0x68dc8680104606fc\n"
".quad 0x685c8680104707fc,0x6ddc8680104808fc,0x699c8680104909fc,0x6b9c8680104a0afc\n"
".quad 0x6a5c8680104b0bfc,0x695c8680104c0cfc,0x689c8680104d0dfc,0x645c8680104e0efc\n"
".quad 0x641c8680104f0ffc,0x671c8680105010fc,0x631c8680105111fc,0x21dc0380105212fc\n"
".quad 0x21de046000c0001b,0x01dc00180000001d,0x6c5c86500000001c,0x69dc8680104000fc\n"
".quad 0x6b5c8680104101fc,0x625c8680104202fc,0x6a9c8680104303fc,0x6bdc8680104404fc\n"
".quad 0x6a1c8680104505fc,0x675c8680104606fc,0x669c8680104707fc,0x6adc8680104808fc\n"
".quad 0x62dc8680104909fc,0x67dc8680104a0afc,0x691c8680104b0bfc,0x681c8680104c0cfc\n"
".quad 0x66dc8680104d0dfc,0x639c8680104e0efc,0x601c8680104f0ffc,0x63dc8680105010fc\n"
".quad 0x629c8680105111fc,0x21de0480105212fc,0x219e0418000000c9,0x8d1d0018000000d1\n"
".quad 0x621d00500000001c,0x4d9c005000000020,0x4d5c0058000000db,0x41dc0058000000d7\n"
".quad 0x419c0058000000e7,0x4b9c0058000000df,0x89dc0058000000bb,0x8b5c00306c00009c\n"
".quad 0x4b1c00306a0000b4,0x81dc0058000000b3,0x819c00300e0000c4,0x4a5c00300c0000ac\n"
".quad 0x7c5d0058000000a7,0x87dc0050000000b6,0x499c00305c00007c,0x8a1c00580000009b\n"
".quad 0x7adc0030580000a0,0x495c005000000018,0x1b1c005800000097,0x891c00500000007f\n"
".quad 0x48dc003052000090,0xba5c00580000008f,0x82dc00500000009e,0x489c00304c00002c\n"
".quad 0xc99c00580000008b,0x8e5c005000000092,0x485c00304a000080,0x881c005800000087\n"
".quad 0x975c003046000074,0x4c9c00500000002e,0x68dd0058000000e3,0x8d5c0050000000e6\n"
".quad 0x895c00304400006c,0xd69c003042000068,0x4c1c0050000000b5,0x8a9c0058000000c3\n"
".quad 0x375d0030640000a8,0x66dd0050000000d6,0xa69c00500000002c,0x8d9c00500000007d\n"
".quad 0xd75c0030600000bc,0xb6dc0050000000a9,0xa69c00500000007d,0xd75d005000000091\n"
".quad 0xb6dd0050000000d9,0x4cdc005000000091,0xa69c0058000000cf,0x471c0050000000e5\n"
".quad 0xd85c005800000073,0xb75d005000000081,0x445c0050000000e5,0x825c005800000047\n"
".quad 0xa6dc003066000024,0x441c0050000000d5,0x169d005800000043,0xb85c005000000096\n"
".quad 0x8c5c005000000025,0x431c003022000038,0x8c1c005800000033,0xd89c003020000000\n"
".quad 0xa75c0050000000d5,0xa6dc005800000069,0x8e1c005800cfa001,0xa3dc00303800003c\n"
".quad 0x939c005800efa001,0x101c0050000000e0,0xe39c0050000000e2,0x001c0050000000a8\n"
".quad 0x8ddc0050000000a8,0x229c003018000028,0xe21c0050000000e2,0x001c0050000000dc\n"
".quad 0xa29d0050000000dc,0x821c0050000000dc,0x001c0050000000d8,0xa29c0050000000d8\n"
".quad 0x821d0050000000c4,0x001c0050000000a0,0xab9d0050000000a0,0x821d0050000000c0\n"
".quad 0x001c0050000000c4,0xe29c0050000000c4,0x821d00303a0000ba,0x001c005000000080\n"
".quad 0xe31c005000000080,0x821d0050000000ba,0x001c0050000000c0,0xe39c0050000000c0\n"
".quad 0x821d005800cfa002,0x0bdc005000000094,0xe8dc005000000094,0x801c005800efa002\n"
".quad 0x845e005800000020,0x871c00303a000020,0xa01c003014000020,0x1c9c023000000069\n"
".quad 0xf99c0030f6aaaaad,0xc29d005800000020,0x131c0230000000b8,0xbb1c0032f6aaaaad\n"
".quad 0xa3de005800000021,0xa75e0030644000f4,0xacdc0230184000f4,0xe01c0032f58e38e4\n"
".quad 0x345c00301e000068,0xe39c00301e00006a,0x33dc00303a000020,0xc75c02303a000022\n"
".quad 0xb8de0030f4127271,0xc6dc023066000021,0xcd1c0232fc637575,0xfcdc0030f4260e11\n"
".quad 0xf71c00303a4000b6,0xf75c0030364000a6,0xe41c0030684000d6,0xeadd00500000006a\n"
".quad 0xa85c00500000006a,0xa6dd005000000021,0xad1c005000000021,0xabdc0030644000f4\n"
".quad 0xae9e0030664000c5,0xea5c0030664000c5,0xe89d005000000022,0xe69c005000000022\n"
".quad 0xec9e0030664000c6,0x8b9c0030664000c6,0x8cde0030664000c4,0xfbdc0030664000c4\n"
".quad 0xa21c0050000000d2,0xad1c0050000000d3,0xa31e0030184000f4,0xab1e0030584000e4\n"
".quad 0xa69c00304c4000e4,0xeb9c0030344000e4,0x3f1c0050000000d2,0xa29c0050000000d3\n"
".quad 0xbe9e0030644000e4,0xbd1c00303a400026,0xb99c00303a400026,0x0edc00303a400025\n"
".quad 0x9cdc00303a400025,0x2c9e00303a400026,0x2adc00303a400026,0xb6de00303a400026\n"
".quad 0x041e00303a400025,0x9a5e00303a400025,0x189c00303a400026,0x175e00303a400026\n"
".quad 0x085de4303a400026,0x699c002800400100,0x2b1c0050000000b2,0x185e005000000032\n"
".quad 0xd31c005000cfe002,0x089de45000000031,0x171c0028004000a0,0x175c005800000072\n"
".quad 0xd69c03580000006a,0x771c00203c4000e0,0x675c003038400100,0xa19c23303a400100\n"
".quad 0xa1dc035800c00081,0xb8dc005800c00079,0xbedc00500000008d,0x61dc435000000003\n"
".quad 0xa19c03400000001c,0xd69c032045c00011,0x001c004800c04000,0x71dc435000000001\n"
".quad 0xa69c0348004000b0,0xae9c00203c4000e1,0x671c855000000047,0x4d1c009400000000\n"
".quad 0x3cdc005000000047,0x9a5c00500000003b,0xa19c23500000003a,0xa1dc035800c00081\n"
".quad 0x2c9c005800c00079,0xbadc00500000003f,0x61dc43500000003e,0xa19c03400000001c\n"
".quad 0xd69c032045c00011,0x1f1c004800c08000,0x71dc4358000000f2,0xa71c0348004000b0\n"
".quad 0xd69c03203c4000e1,0x675c854800c0c000,0xcf5c239400000000,0xa69c035800c00081\n"
".quad 0xcf9c03203c4000e1,0xc71c035800c00079,0xa19c232045c00011,0xa1dc035800c00081\n"
".quad 0xd75c435800c00079,0xdf5c0340000000fb,0x66dc434800c18000,0xd19c03400000001c\n"
".quad 0xd75c434800c10000,0xa69c0348004000b1,0x641c032045c00011,0x199c00203c4000e0\n"
".quad 0xb6dc43580000009a,0x019c2348004000b1,0x01dc035800c00081,0x041c035800c00079\n"
".quad 0x1e9c002045c00011,0x645c4358000000ea,0xd19c03400000001c,0x101c004800c14000\n"
".quad 0x145c435800000002,0x639c0348004000b1,0x1d1c00203c4000e0,0x1cdc0058000000d2\n"
".quad 0xe19c2358000000ce,0xe1dc035800c00080,0xe39c035800c00078,0x1c9c002045c00010\n"
".quad 0x63dc4358000000ca,0x119c00400000001c,0x11dc0058000000be,0xd29c03580000002a\n"
".quad 0x79dc00203c4000e3,0xbbdc00300c400102,0xa19c23300e400100,0xa1dc035800c00080\n"
".quad 0xdf5c035800c00078,0xf3dc434800c1c000,0x62dc4348004000b0,0x119c00400000001c\n"
".quad 0x11dc005800000022,0xd21c0358000000ba,0xdb9c00203c4000e3,0x9b5c00300c400102\n"
".quad 0x819c23300e400100,0x81dc035800c00080,0xa29c035800c00078,0x18dc002045c00010\n"
".quad 0x625c43580000008e,0xd19c03400000001c,0x11dc004800c20000,0x1adc0058000000b2\n"
".quad 0x619c0358000000ae,0xab1c00203c4000e0,0x8a9c00300e400102,0x61dc233078400102\n"
".quad 0x6a1c035800c00080,0xdf1c035800c00078,0x1a5c004800c24000,0x71dc4358000000a6\n"
".quad 0x0a1c0040000000a0,0xc81c03304c400102,0x199c00203c4000e3,0x131c005800000032\n"
".quad 0x085c2358000000ee,0x0edc035800c00082,0xb2dc435800c0007a,0x821c0348004000b0\n"
".quad 0x185c432045c00010,0xdedc0340000000ee,0x925c434800c28000,0x599c0048004000b0\n"
".quad 0x619c03304c400102,0xf95c002045c00010,0xb31c033018400101,0x901c00203c4000e3\n"
".quad 0xde5c033000400103,0x71dc434800c2c000,0x081c0348004000b0,0xc7dc232045c00012\n"
".quad 0xcedc035800c00080,0x9e5c035800c00078,0xd35c03203c4000e3,0x185c434800c30000\n"
".quad 0xf7dc4348004000b2,0xc31c0340000000ed,0x491c002045c00010,0x9edc233074400102\n"
".quad 0x9f1c035800c00083,0xde9c035800c0007b,0xf35c43203c4000e0,0xbedc4348004000b1\n"
".quad 0x979c0340000000f3,0xc9dc852045c00013,0xae5c239400000001,0xaf1c035800c00083\n"
".quad 0xabdc855800c0007b,0x0b9c859400000001,0xb7dc439400000001,0x5d1c0048004000b3\n"
".quad 0xe95c853068400103,0xa89c039400000000,0x9e5c432045c00013,0xa91c8540000000f3\n"
".quad 0x8cdc009400000000,0x801c853066400103,0x6d5c009400000000,0x6d1c853046400103\n"
".quad 0x7c9c009400000000,0x98dc433064400103,0x0b5c8548004000b3,0xccdc859400000002\n"
".quad 0xeb1c859400000000,0x1adc009400000001,0x2c9c853056400103,0x8d5c859400000002\n"
".quad 0x0a5c009400000001,0x6a9c853052400103,0x4adc859400000001,0x2a1c859400000001\n"
".quad 0x4a5c859400000001,0x299c859400000000,0x001de79400000000,0x0000008000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0xd5555540f1451400,0xe38e393daaaaab3f,0xb2cb2dbe73cf3d3c,0x8208203c638e39bd\n"
".quad 0x2aaaab3ccccccd3d,0xd34d353e430c303d,0x8208203e2aaaab3d,0xe38e393d638e393c\n"
".quad 0x08020400000401bc,0x000011000000a600,0x0000a10008020400,0x0802040000000b00\n"
".quad 0x000002000000a000,0x00009f0008020400,0x0802040000000a00,0x0000010000009e00\n"
".quad 0x00009d0008020400,0x0802040000000900,0x0000000000009c00,0x0000ae0008020400\n"
".quad 0x0802040000000800,0x000010000000ad00,0x0000ac0008020400,0x0802040000000700\n"
".quad 0x00000f000000ab00,0x0000aa0008020400,0x0802040000000600,0x000003000000a500\n"
".quad 0x0000a90008020400,0x0802040000000500,0x00000e000000a400,0x0000a80008020400\n"
".quad 0x0802040000001200,0x00000d000000a300,0x0000a70008020400,0x0802040000000400\n"
".quad 0x00000c000000a200,0x00005600080a0400,0x2419030024002000,0x000000000c170400\n"
".quad 0x11f0000020000400,0x000000000c170400,0x21f0000018000300,0x000000000c170400\n"
".quad 0x11f0000010000200,0x000000000c170400,0x21f0000008000100,0x000000000c170400\n"
".quad 0x21f0000000000000,0x03002400080d0400,0x005de40000000200,0x011c042800440400\n"
".quad 0x015c042c0000009c,0x009c042c0000008c,0x00dc042c00000098,0x45dca32c00000088\n"
".quad 0x001c04200a400040,0x079c042c00000094,0x259ca32c00000084,0x715c032006400030\n"
".quad 0x08dca36000c00019,0x001de4203c400020,0x599c032800400020,0xffdc854800000058\n"
".quad 0x651c03c900000c03,0x0fdc0320464000e2,0xffdc042028000004,0x20de0450ee0000ff\n"
".quad 0x309c031800000059,0x21de044800fffffe,0x319c001800000015,0x209e045000cfc000\n"
".quad 0x30dc031800000009,0x625c004800c00006,0x209c00500000001c,0x0a5de45000cfc000\n"
".quad 0x0a1de42800000024,0x891c862800000008,0x20de0480104000fe,0x311c00180000000d\n"
".quad 0x60dc035000cfc000,0x021de44800fffffd,0x20de042800000010,0x865c86180000000d\n"
".quad 0x30dc0080104101fc,0x325c005000cfc000,0x00dde4500000001c,0x271c862800000024\n"
".quad 0x889c8680104202fc,0x625c0380104303fc,0x529c034800c00005,0x52dc034800c00100\n"
".quad 0x20de044800ffff00,0x75dc231800000025,0x041de4190ec000fd,0x30dc002800400080\n"
".quad 0x30dc005000cfc000,0x61dc03500000001c,0x015de44800c07ffe,0x485c86280000000c\n"
".quad 0x621c0380104404fc,0x631c034800c10006,0x635c034800c23f02,0x639c034800c2befe\n"
".quad 0x63dc034800c33f06,0x645c034800c38102,0x455c234800c400fe,0x449c035800c00081\n"
".quad 0x281c865800c00079,0x20de0480104505fc,0x96a8031800000029,0x229e044800000028\n"
".quad 0x615c00180000002d,0x72dc03500000000c,0x825c0320464000e0,0xc21c0320464000e0\n"
".quad 0xd1dc0320464000e0,0xe61c0320464000e0,0x47dc8620464000e0,0x00dde480104707fc\n"
".quad 0x531c432800000014,0xf4dc034000000049,0x145c0320464000e0,0x04a9e420464000e1\n"
".quad 0x439c032800400080,0x615c002021c00011,0xa968035000000028,0x26dc864800c48001\n"
".quad 0xb0dc2380104606fc,0xb19c035800c00080,0xc3dc435800c00078,0xb31c034800400090\n"
".quad 0x30dc432021c00010,0x919c234000000018,0x92dc035800c00080,0x335c435800c00078\n"
".quad 0x929c034800400090,0x469c862021c00010,0x60dc4380104909fc,0x811c23400000002c\n"
".quad 0x819c035800c00080,0x32dc435800c00078,0x821c034800400090,0x00dde42021c00010\n"
".quad 0x411c432800000014,0x79dc234000000018,0x715c035800c00080,0x275c865800c00078\n"
".quad 0x425c4380104808fc,0x719c034800400090,0x709c432021c00010,0x80dc234000000016\n"
".quad 0x815c035800c00081,0x21dc435800c00079,0x811c034800400090,0x309c432021c00011\n"
".quad 0x30dc234000000014,0x361c035800c00081,0x215c435800c00079,0x309c034800400090\n"
".quad 0x30dc432021c00011,0x161c234000000060,0x19dc035800c00081,0x30dc435800c00079\n"
".quad 0x54e8034800400090,0x4a9c8520464000e2,0x61dc238400000000,0x141c03190e0000fd\n"
".quad 0x845c432021c00011,0xe39c85400000009d,0x3628238400000000,0x3968035800c00081\n"
".quad 0x2adc855800c00079,0x33dc238400000000,0x011c041920c000fe,0x145c432c00000084\n"
".quad 0x34a8034800400091,0x83e8432025c00011,0x71dc234000000095,0x63dc23190e0000fd\n"
".quad 0x409e031922c000fd,0xf4e8436000c00008,0x11dc044800400090,0x2fdc850c24000040\n"
".quad 0x2fdc85c900000000,0xc95c85c900000400,0xaa5c858400000000,0x89dc858400000000\n"
".quad 0x6a1c858400000000,0x0b1c858400000000,0x2b68858400000001,0x2fdc858400000001\n"
".quad 0x0081e7c900000800,0x4220004000003c40,0x4121005000000092,0x51e1005000000066\n"
".quad 0x70a00050000000a6,0x9460005000000076,0x8621005000000065,0x84210050000000aa\n"
".quad 0xc0e1005000000094,0x43e0005000000089,0x54e0005000000070,0x72e0005000000096\n"
".quad 0x2220005000000070,0x80a10050000000a0,0x04600050000000b1,0x3620005000000045\n"
".quad 0xf421005000000084,0x44e0005000000088,0xb3e0003026f02002,0xb5e0005000000088\n"
".quad 0x54a0005800d02802,0x82e00050000000a6,0x9520005000000068,0x82210050000000a6\n"
".quad 0xc261005000000081,0x4560005000000039,0x9620005800f02002,0x71e0003026f02001\n"
".quad 0x24a000302ef02802,0x0421005000000071,0x55e1005000000085,0xf3e1003028f00002\n"
".quad 0x9260005000000084,0xe560005000000088,0x852000302ad05000,0x24a0005000000051\n"
".quad 0xb2e0005000000089,0x04200050000000a8,0x1461005000000081,0xf3e10050000000a5\n"
".quad 0x9260005000000080,0x5560005000000084,0x74e000302af02002,0x4520005000000071\n"
".quad 0x24a0005000000071,0xb2e1005000000085,0x04200050000000ac,0x1460005000000075\n"
".quad 0xf3e0005000000071,0x92600050000000a0,0x9560005000000080,0x34e000302af02001\n"
".quad 0x4520005000000089,0x24a0005000000089,0xb2e1005000000081,0x042100500000006c\n"
".quad 0x1460005000000069,0xf3e1005000000089,0x92600050000000a8,0x9560005000000074\n"
".quad 0x34e000302af02002,0x4520005000000085,0x24a1005000000085,0xb2e100500000009d\n"
".quad 0x06200050000000b0,0x936000500000006d,0x1460005800d02802,0xf420005000000085\n"
".quad 0x73200050000000b0,0x926000500000009e,0x55600050000000a0,0x34e0005000000071\n"
".quad 0x43e0005000000081,0x25e1005000000081,0xb2e1005000000075,0xd1a100500000007c\n"
".quad 0x5360005000000069,0x14a000301af02802,0x0421005000000081,0x92600050000000b5\n"
".quad 0x5560005000000068,0x34e0005000000089,0xf460005000000031,0xb321005000000030\n"
".quad 0x95a00050000000b4,0x61a1005800d02801,0x02e000500000006c,0x926000301a400015\n"
".quad 0x55600050000000a8,0x1360005000000085,0x83e1005000000075,0xc46000500000007d\n"
".quad 0x4120005800000030,0x61a000302cf02802,0x34e100500000007c,0x9620005000000075\n"
".quad 0x556000500000006c,0x7521005000000081,0xf262005000000069,0x0ba0003010000040\n"
".quad 0xb160003022000041,0x34e10050000000ae,0xf5e0005000000069,0xf222003008400014\n"
".quad 0xf46000300c000030,0x24a100500000003c,0xc12000500000009d,0x71a000300e400014\n"
".quad 0x452100302af02002,0x81e00050000000ad,0x20a00050000000b1,0x34e00050000000b4\n"
".quad 0x0620005000000015,0x1461005800000041,0x24a000305c00003d,0x6ba0005000000075\n"
".quad 0x4561005000000074,0x00a200500000006d,0xf3e0003004000031,0x352100303000003c\n"
".quad 0x842000500000006d,0xe4e0003024f00002,0xc4a20050000000a2,0x8620003030000030\n"
".quad 0xc32000301af00002,0x536100301e000030,0x33e000500000007d,0x71e0005000000069\n"
".quad 0xd36100500000007c,0xf3e0005000000048,0x04a00050000000a8,0x8420005000000069\n"
".quad 0xb3e0005000000069,0xa4a000301ef02002,0xa420003024f00002,0xf3e0003020f00002\n"
".quad 0x24a100500000006c,0x04200050000000ad,0xf3e0005000000015,0x24a00050000000b0\n"
".quad 0x71e000500000006d,0xf1600050000000b4,0xc4a000500000007c,0x03e0003024f00002\n"
".quad 0x516000500000006d,0x24200050000000b4,0xc3e000500000007d,0xc16000301ef00002\n"
".quad 0x71e100300a400004,0xd420005000000030,0xf320003020f00002,0x53e002500000007c\n"
".quad 0x02a1e430ee082084,0x04e10028004000c0,0xd420005000000045,0xf320003018f00002\n"
".quad 0xa5a0005800d05000,0xf560005800400034,0x74a0005800f02000,0x71a0023018400044\n"
".quad 0x31600030f3333335,0x7320005800000059,0x762000302a400054,0xe1e100301e400074\n"
".quad 0x3460005000000048,0x63a000300a000059,0x6560003018f02000,0x03e0023018d02000\n"
".quad 0xe1a00030f18e38e5,0x53a0005000000044,0xb4a0025000000045,0xf1a00030f3333334\n"
".quad 0xfba000300cf02000,0x446002301cf02000,0x23a00030f3333334,0x2560003018f02001\n"
".quad 0x41a1003018d02001,0x94a100500000001a,0x1ba00050000000b9,0x1920003018f02001\n"
".quad 0x4321003018d02001,0x066000500000007d,0x352200301e400065,0x356200301c000059\n"
".quad 0xa46000302a000059,0x4520005800400024,0x5560005000000065,0xc3a0025000000065\n"
".quad 0xd5200030f4aaaaac,0x3be2003028000044,0xdba000305c000059,0xe56000302a000044\n"
".quad 0xfbe0003028f00000,0xe520005000000066,0x556100305cf00000,0x3962005000000056\n"
".quad 0xc3a0003048000059,0xdba200301c400094,0x566000305e000044,0x7ca2005000000066\n"
".quad 0xe920003030400085,0xd66200500000003a,0x7ba0003032000044,0xb5e0003030400085\n"
".quad 0x9960003030400084,0xb662005000000039,0xb3a0003030400084,0x952100305c400084\n"
".quad 0x7921005000000052,0xb620005000000092,0xb9e2003064400084,0xba62003064400084\n"
".quad 0x32e000305c400084,0x33a000301c000059,0x3620003030000059,0x39e000304e000059\n"
".quad 0x02e0003052000059,0x03a0003016400065,0x062000301c400065,0x09e0003030400065\n"
".quad 0xd2e000304e400065,0xd3a0003016000044,0xd62000301c000044,0xd9e0003030000044\n"
".quad 0xc2e000304e000044,0xc3a0003016400094,0xc62000301c400094,0xca60003030400094\n"
".quad 0xb96100304e400094,0x99e0005000000096,0x93a2003016cfa000,0x962000301ccfa000\n"
".quad 0x9ae2003030cfa000,0x2263003052cfa000,0xda61005000000072,0x32e10050000000a1\n"
".quad 0x90e0005000000084,0x9a60005000000084,0xb26000500000006a,0x30e0005000000080\n"
".quad 0x9a61005000000080,0x92610050000000aa,0x32e0005000000074,0x90e10050000000a0\n"
".quad 0x4a6000500000006e,0xb2e100302e400084,0x92600050000000a8,0x5a60005000000068\n"
".quad 0x30e0003052f00000,0xb2e00050000000b0,0xfa600050000000b0,0x9261003052f00000\n"
".quad 0x30e100500000006c,0xb2e100500000007c,0x2a600050000000b4,0x9260003052cfa000\n"
".quad 0x30e000500000007c,0xbbe00050000000b4,0x9a60003052cf8000,0x4c2000304ecf8000\n"
".quad 0x39e2003064400084,0x4be000305ecf8000,0x4c6200305c400084,0x4ca200305c400084\n"
".quad 0x3be0003064400084,0x3c6000305e000059,0x3c20003062000059,0x3ca0003060000059\n"
".quad 0x45a2003064000059,0xba6200302e400084,0x44e0003052cf8000,0x45e2003032400084\n"
".quad 0x6120033032400084,0x89e10020464000e2,0xca6100500000009e,0x5a200050000000a5\n"
".quad 0x54e000302cf00000,0x5ba0003026f00000,0x416023302ef00000,0x45a0035800c00080\n"
".quad 0x0721e45800c00078,0xa2a00028004000a0,0x5160435800cfa000,0x4120034000000058\n"
".quad 0x65a0032039c00010,0x93a2004800c04002,0x516043301ccf8000,0x65a00348004000b0\n"
".quad 0x96220020464000e1,0x41e0853030cf8000,0x9ae0009400000000,0x6120233056cf8000\n"
".quad 0x6160035800c00081,0x4160435800c00079,0x6120034000000014,0x65a0032039c00011\n"
".quad 0x5160434800c08002,0x65a00348004000b0,0x41a08520464000e1,0x61e0239400000000\n"
".quad 0x65e0035800c00081,0x61a0035800c00079,0x71e0432039c00011,0x612003400000005c\n"
".quad 0x6160034800c0c002,0x71e0434800c10002,0x41200348004000b0,0x55a00320464000e0\n"
".quad 0x65608520464000e0,0x45e0239400000000,0x4660035800c00080,0x4120035800c00078\n"
".quad 0x61a0232039c00010,0x7160435800c00081,0x61e0034000000065,0x6560035800c00079\n"
".quad 0x5160434800c14002,0x61e04348004000b0,0x61a003400000001c,0x44a0852039c00011\n"
".quad 0x65a0039400000000,0x71e0434800c18002,0x55e00348004000b0,0x61600320464000e1\n"
".quad 0x6520854800c1c002,0x65a0039400000000,0x71202320464000e1,0x5160035800c00081\n"
".quad 0x71a00320464000e0,0x61e0235800c00079,0x64a0035800c00081,0x4660435800c00079\n"
".quad 0x5120234000000018,0x7520435800c00080,0x51a0034000000048,0x64a0035800c00078\n"
".quad 0x01e0004800c20002,0x4560433060400065,0x0120004000000018,0x24a003305e400065\n"
".quad 0x01a00020464000e1,0xfbe0003062400065,0x0c20003050f00000,0xfa20003064400065\n"
".quad 0xfc60003026f00000,0x23e023305cf00000,0x2420035800c00081,0xd1a2005800c00079\n"
".quad 0xd1e200300c000044,0xf4e043300e000044,0x6420034000000040,0xd3e2004800c24002\n"
".quad 0xdc22003008000044,0x0420033060000044,0x2ba20020464000e1,0x2a2200305ecfa000\n"
".quad 0x0120233050cfa000,0x0360035800c00081,0xcbe2005800c00079,0xc1a200300c400094\n"
".quad 0x446043300e400094,0x6360034000000034,0x2120004800c28002,0xcc62003062cfa000\n"
".quad 0xd0a0033060400094,0xc3620020464000e0,0x632003301e400094,0x21e0234800c2c002\n"
".quad 0x23e0035800c00080,0xc320035800c00078,0x8c220020464000e0,0x73e043305e000028\n"
".quad 0x81e000400000003c,0x81a200301a000028,0x8c6000300c000028,0xc220233062000028\n"
".quad 0xc2a0035800c00080,0xbbe2005800c00078,0xbca200301ccf8000,0x8360433050cf8000\n"
".quad 0xb220004000000028,0x62a003305ccf8000,0xbba0004800c30002,0x3220003030cf8000\n"
".quad 0xa2a0033010cf8000,0xb3a00020464000e0,0xb2e2003056cf8000,0xca21003008cf8000\n"
".quad 0xa120235000000022,0xa220035800c00080,0x9622005800c00078,0x9ae000300ecf8000\n"
".quad 0x422043300ccf8000,0x6120034000000020,0x3b20004800c34002,0x9c22003016cf8000\n"
".quad 0x4120033060cf8000,0x9c600020464000e0,0xdb21003062cf8000,0x41a02350000000b2\n"
".quad 0x41e0035800c00080,0x3260005800c00078,0x3ca2003056cf8000,0x61e0433064cf8000\n"
".quad 0x61a003400000001c,0x3b60004800c38002,0x32e2003030cf8000,0x61a0033060cf8000\n"
".quad 0x3ae20020464000e0,0x1861003062cf8000,0x66202350000000ba,0x60e0035800c00080\n"
".quad 0x28a1005800c00078,0x08210050000000be,0x80e043500000003a,0x762003400000000d\n"
".quad 0x65e0032039c00011,0xdb61004800c3c002,0x96604350000000b5,0x65a00348004000b1\n"
".quad 0x7ba0032039c00011,0xac210020464000e1,0x45e0435000000025,0x55200348004000b1\n"
".quad 0xe160232039c00010,0xebe0035800c00082,0x5560435800c0007a,0x24a00348004000b1\n"
".quad 0x5160432039c00011,0x6be00340000000bc,0x34e0434800c40002,0x04200348004000b1\n"
".quad 0x8a60852039c00011,0x68a0859400000001,0x1460439400000001,0x23a00348004000b1\n"
".quad 0xf0a0032039c00010,0x48608520464000e2,0xf3e0439400000001,0xc3200348004000b0\n"
".quad 0x2be0232039c00010,0x2760035800c00080,0xd360435800c00078,0xa2a00348004000b0\n"
".quad 0xf760432039c00010,0xbbe1004000000076,0x82e043500000002d,0x42200348004000b0\n"
".quad 0x6120032039c00010,0x66e0034800c44002,0x7260434800c48002,0x61a00348004000b0\n"
".quad 0x46a0032039c00010,0xb8e00320464000e0,0x31e04320464000e1,0xe1200348004000b0\n"
".quad 0xa0e0232039c00012,0xa9a0035800c00081,0x5160435800c00079,0x20a00348004000b0\n"
".quad 0x36e0432039c00010,0x2820854000000098,0xd0e0439400000001,0xa6a00348004000b1\n"
".quad 0x3760232039c00011,0x39a0035800c00082,0x0920855800c0007a,0xaaa1009400000001\n"
".quad 0xeb608550000000ca,0xb6e0439400000000,0xc9e08548004000b1,0x3720039400000000\n"
".quad 0xd760432039c00012,0xac20854000000099,0x8aa0859400000000,0xf7e1009400000000\n"
".quad 0x69608550000000ad,0xd760439400000000,0x4be08548004000b1,0x2a20859400000000\n"
".quad 0xa7e0859400000000,0xcb20859400000001,0x00a1e79400000001,0x0981e44000000820\n"
".quad 0x0181e428004000e0,0x01c1e428004000f0,0x60c00328004000a0,0x6080035800c00052\n"
".quad 0x6140032029c04002,0x60c1835800c0004a,0x210003400000000c,0x68c1c35800c00078\n"
".quad 0x50c0434000000014,0x258003480000000d,0x308043200fc00010,0x25c0434000000010\n"
".quad 0x65000348004000b0,0x664085202dc10002,0x7540439400000001,0x648003480000008d\n"
".quad 0x4a40852029c10002,0x54c0439400000001,0x638003480000008d,0x2900852025c10002\n"
".quad 0x33c0439400000001,0x630003480000008d,0xe94085201dc10002,0xf340439400000000\n"
".quad 0x620003480000008c,0xc840852019c10002,0xd240439400000000,0x628003480000008c\n"
".quad 0x8800852011c10002,0x92c0439400000000,0x610003480000008c,0xa700852015c10002\n"
".quad 0xb140439400000000,0x618003480000008c,0x4880852009c10002,0x51c0439400000000\n"
".quad 0x608003480000008c,0x6ac085200dc10002,0x70c0439400000000,0x640003480000008c\n"
".quad 0x27c0852005c10002,0x3440439400000000,0x660003480000008c,0x0b40852021c10002\n"
".quad 0x1640439400000001,0x658003480000008d,0x86c0852031c10002,0x95c0439400000001\n"
".quad 0x648003480000008d,0x6b0085202dc10002,0x74c0439400000001,0x630003480000008d\n"
".quad 0x29c0852025c10002,0x3340439400000001,0x620003480000008d,0xc680852019c10002\n"
".quad 0xd240439400000000,0x610003480000008c,0x8a80852011c10002,0x9140439400000000\n"
".quad 0x608003480000008c,0x4740852009c10002,0x50c0439400000000,0x2a0085480000008c\n"
".quad 0xffdc049400000000,0x00dde450ee0000ff,0xf09c852800400160,0x31dc23c100000c03\n"
".quad 0x00dde41a0ec09c3c,0x21dc232800400020,0x31dc231900c00004,0x0021e71a00c00004\n"
".quad 0x001c238000000000,0xe1dc035800c00004,0x0081e71b0e000001,0xe0a00340000001e0\n"
".quad 0xe122034800000001,0x2162036000c00009,0x40e0856000c00008,0x50a085c100000000\n"
".quad 0x31a000c100000000,0x40e0855000000008,0x41a085c100000400,0x50a085c900000000\n"
".quad 0x31a000c100000400,0x40e0855000000008,0x41a085c100000800,0x50a085c900000400\n"
".quad 0x30a000c100000800,0x40a0855000000008,0xffdc04c900000800,0x01dc2350ee0000ff\n"
".quad 0x0001e71a0ec00004,0x001de74003fffd60,0x0000008000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0xd5555540f1451400,0xe38e393daaaaab3f\n"
".quad 0xb2cb2dbe73cf3d3c,0x8208203c638e39bd,0x2aaaab3ccccccd3d,0x080204000004013d\n"
".quad 0x000008000000a600,0x0000a10008020400,0x0802040000000200,0x0000010000009f00\n"
".quad 0x00009d0008020400,0x0802040000000000,0x000007000000ad00,0x0000ab0008020400\n"
".quad 0x0802040000000600,0x000005000000a400,0x0000a80008020400,0x0802040000000900\n"
".quad 0x000004000000a300,0x0000a20008020400,0x080a040000000300,0x3c00200000004400\n"
".quad 0x0c1704003c190300,0x3800070000000000,0x0c17040011f00000,0x3000060000000000\n"
".quad 0x0c17040021f00000,0x2800050000000000,0x0c17040021f00000,0x2000040000000000\n"
".quad 0x0c17040021f00000,0x1800030000000000,0x0c17040021f00000,0x1000020000000000\n"
".quad 0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x080d040021f00000,0x0000010002001800,0x00440400005de400,0x00000094001c0428\n"
".quad 0x00000084009c042c,0x0000009c00dc042c,0x0000008c011c042c,0x0440002006dca32c\n"
".quad 0x00000098001c0420,0x00000088009c042c,0x0000006d219e042c,0x08400040329ca318\n"
".quad 0x04400030015ca320,0x8ed08ec061dc0020,0x00d0618061dc0020,0x000000000021e722\n"
".quad 0x00000015201e0480,0x8ed08ec001dc0018,0x00d0618001dc0020,0x000000000021e722\n"
".quad 0x00000029209e0480,0x8ed08ec021dc0018,0x00d0618021dc0020,0x000000000021e722\n"
".quad 0x0ec000b9b1dc2380,0x20c00045b1dc2319,0x20c0004451dc2319,0x20c000b851dc2319\n"
".quad 0x20c00044a1dc2319,0x20c000b8a1dc2319,0x0000334000a1e719,0x00f05f0020800040\n"
".quad 0x0000000821c00050,0x00f05f0000800050,0x00f05f0060000050,0x0600001d2b408450\n"
".quad 0x0000000820800014,0x0000000000000050,0x00c00006db800350,0x00cfc00020800048\n"
".quad 0x00cfc00003000050,0x00c0001ae0c00350,0x0000000d20c20460,0x0000000c23400018\n"
".quad 0x104000fcca408650,0x104101fccac08680,0x104202fccb008680,0x104303fcc9c08680\n"
".quad 0x104404fcc9408680,0x104505fcc9808680,0x104606fcc7c08680,0x104707fcc6008680\n"
".quad 0x104808fcc5808680,0x104909fcc8808680,0x104a0afcc7008680,0x104b0bfcc8008680\n"
".quad 0x104c0cfcc7808680,0x104d0dfcc6808680,0x104e0efcc5c08680,0x104f0ffcc4408680\n"
".quad 0x105010fcc4008680,0x105111fcc4808680,0x105212fcca008680,0x00c0001ad0000380\n"
".quad 0x0000000120020460,0x0000000023400018,0x104000fcc2c08650,0x104101fcc5008680\n"
".quad 0x104202fcca808680,0x104303fcc9008680,0x104404fcc8c08680,0x104505fcc8408680\n"
".quad 0x104606fcc2408680,0x104707fcc1808680,0x104808fcc1008680,0x104909fcc3808680\n"
".quad 0x104a0afcc0c08680,0x104b0bfcc7408680,0x104c0cfcc6408680,0x104d0dfcc5408680\n"
".quad 0x104e0efcc0808680,0x104f0ffcc0008680,0x105010fcc3c08680,0x105111fcc4c08680\n"
".quad 0x105212fcc2008680,0x000000b523020480,0x000000b923420418,0x00000014a140c318\n"
".quad 0x0000003073010040,0x0000001cd1c10050,0x364000a052800350,0x000000accac00020\n"
".quad 0x000000b0c3400058,0x000000a4ca400058,0x00000088c8800058,0x00000080c8000058\n"
".quad 0x5600005075000058,0x1a0000a873400030,0x0000009cc9c00030,0x00000094c9400058\n"
".quad 0x00000098c9800058,0x0000007cc7c00058,0x00000060c6000058,0x00000058c5800058\n"
".quad 0x00000070c7000058,0x00000078c7800058,0x00000068c6800058,0x0000005cc5c00058\n"
".quad 0x00000044c4400058,0x00000040c4000058,0x00000048c4800058,0x000000a0c3000058\n"
".quad 0x5200002c72c00058,0x4400003873800030,0x000000354a010030,0x400000747c000050\n"
".quad 0x3e00002472400030,0x00000038b7c00030,0x000000c288000050,0x3c00006477400050\n"
".quad 0x00000051f6400030,0x3800000c70c00050,0x0000007607000030,0x3400005475400050\n"
".quad 0x3000001871800030,0x0000000d96000030,0x00000055c6410050,0x2e00000870800050\n"
".quad 0x2c00001071000030,0x0000003585800030,0x4a00008c79400050,0x0000000996010030\n"
".quad 0x0000000ce5c10050,0x000000c165800050,0x4c0000847bc00050,0x0000009586000030\n"
".quad 0x000000c175c00050,0x0000007565800050,0x000000bd86010050,0x0000007575c10050\n"
".quad 0x0000005565800050,0x0000001986400050,0x0000005576010050,0x4e00009079c00050\n"
".quad 0x0000000965c00030,0x2200000070000050,0x2000003c7b400030,0x0000009d76800030\n"
".quad 0x0000000987800050,0x0000001195810050,0x0000005966000050,0x00cfa00165c00058\n"
".quad 0x00efa00166400058,0x2400004c77000058,0x0000007274400030,0x00000071a3c00050\n"
".quad 0x0000009514000050,0x1800002076800050,0x00000071e3000030,0x00000094f1c00050\n"
".quad 0x0000006902000050,0x00000068c3010050,0x0000006871c00050,0x000000bc82000050\n"
".quad 0x00000000c3000050,0x000000bc71c00050,0x0000002482010050,0x000000b4c4810050\n"
".quad 0x0000002471c00050,0x0000000082010050,0x3000004924400050,0x0000000071c00030\n"
".quad 0x0000001882010050,0x0000004924000050,0x0000001871c00050,0x000000b482010050\n"
".quad 0x00cfa00123000050,0x000000b471c00058,0x0000001083c10050,0x00efa00127c00050\n"
".quad 0x0000001074c00058,0x2200003cf2000050,0x0000003cf4400030,0x3000003cf9820058\n"
".quad 0xf41272708a000230,0x2200005964400030,0xf6aaaaae68000230,0xf6aaaaae69800230\n"
".quad 0x2200004904010032,0x0000003d99000030,0x0000003d71c00058,0x404000650a420058\n"
".quad 0x4c4000650ac20030,0x0000005928800030,0x52000058c4400050,0x52000059fa800030\n"
".quad 0x5600003cc3000030,0x5600003df7c00030,0xf58e38e50ac00230,0x504000153a400032\n"
".quad 0x404000650a000030,0x5600003d78020030,0x524000256ac20030,0x524000256b000030\n"
".quad 0x0000005928410030,0x000000a2bc400050,0x0000003d27800050,0x0000003d26410050\n"
".quad 0x0000003d66000050,0x0000003d68c10050,0x52400024f5c00050,0x52400024fb820030\n"
".quad 0x4c4000650ac00030,0x5240002525800030,0x000000a2c3c00030,0xfc63757489800250\n"
".quad 0x5240002524820032,0xf4260e108a000230,0x000000ad7a400030,0x4c40000535c00050\n"
".quad 0x5040003534c00030,0x4840005509820030,0x0e40005501c20030,0x2640004639000030\n"
".quad 0x2c40005505800030,0x2440005504800030,0x000000aee2000030,0x2640004634020050\n"
".quad 0x0000009a49000030,0x264000461b020050,0x264000461c800030,0x2640004628c00030\n"
".quad 0x264000462ac20030,0x26400045ea000030,0x26400045e8420030,0x2640004599820030\n"
".quad 0x264000459b800030,0x264000458cc00030,0x2640004584c20030,0x004000c00601e430\n"
".quad 0x004000800781e428,0x0000008108000028,0x00cfe00188820050,0x0000004638c00050\n"
".quad 0x00000046bac00050,0x0000005e25c00050,0x0000005a25800058,0x0000004a24800058\n"
".quad 0x2e4000c0b5c00058,0x2c4000c0e5800030,0x00c00080a2c02330,0x00c00078a3800358\n"
".quad 0x3dc00010a2800358,0x244000c030c00020,0x00000038b2c04330,0x00c0400053800340\n"
".quad 0x000000328a000048,0x00400090b2c04350,0x364000a0e3800348,0x0000003218400020\n"
".quad 0x00000000a5c08550,0x000000c62c400094,0x0000007e69800058,0x0000007ee7c00050\n"
".quad 0x00c00080e2802350,0x00c00078e2c00358,0x0000003e25c00058,0x624000c0db800058\n"
".quad 0x0000002ca2c04330,0x3dc00010e2800340,0x00c0800053800320,0x2e4000c145000048\n"
".quad 0x00400090b2c04330,0x364000a0e3800348,0x000000aacb000020,0x00000000a5808550\n"
".quad 0x00c00080e6002394,0x00c00078e6400358,0x3dc00010e3800358,0x00c0c00052800320\n"
".quad 0x0000006583c04348,0x000000ab2a800040,0x364000a0a2800350,0x00400090f3c04320\n"
".quad 0x000000ae2ac00048,0x00c00080a2c02358,0x00c00078a5800358,0x00000000e5008558\n"
".quad 0x3dc00010a2800394,0x00000058b2c04320,0x00c1000055800340,0x00c1800055000348\n"
".quad 0x00400090b2c04348,0x364000a166000348,0x00c1400055800320,0x00000000a0c08548\n"
".quad 0x00c0008185c02394,0x364000a165800358,0x00c0007986400320,0x0000001f32c00058\n"
".quad 0x00c0008163802350,0x00c0007963c00358,0x0000006576404358,0x0000001d31c00040\n"
".quad 0x0000003ce5c04350,0x00c1c00053800340,0x364000a145000348,0x3dc0001186000320\n"
".quad 0x364000a0e0c00320,0x00c0008143c02320,0x00c0007944800358,0x00c0008032802358\n"
".quad 0x00c0007833800358,0x00000048f4804358,0x0040009196404340,0x00000038a4c04348\n"
".quad 0x00c2000052800340,0x000000a62a400048,0x3dc0001165800358,0x364000a0a4000320\n"
".quad 0x0000002e22c00020,0x000000aa2a800058,0x00c0008102802358,0x00c0007903800358\n"
".quad 0x564000c15ac00058,0x524000c27a400030,0x00000038a4404330,0x00c2400052800340\n"
".quad 0x00c3c00055400348,0x0040009175c04348,0x364000a0a3800348,0x164000c259c00020\n"
".quad 0x3dc0001145000330,0x00c00080e2802320,0x00c00078e3000358,0x544000c02a800058\n"
".quad 0x364000a150800330,0x00000030a3c04320,0x00c2800053000340,0x00c300005c400348\n"
".quad 0x0040009125404348,0x364000a0c3000348,0x3dc0001034800320,0x0000009229000020\n"
".quad 0x00c00080c2802358,0x00c00078c3400358,0x0040009134c04358,0x484000c069000048\n"
".quad 0x00000034a3404330,0x00c2c00052800340,0x3dc0001104000348,0x0000001e21c00020\n"
".quad 0x364000a0a2800358,0x0040009114404320,0x3dc00010e3800348,0x00c00080a2c02320\n"
".quad 0x00c00078a9400358,0x00400090f3c04358,0x3dc00010c3000348,0x00000094b2c04320\n"
".quad 0x0000002229400040,0x364000a312000358,0x0000008e28c00020,0x4a4000c099400058\n"
".quad 0x00c0008081802330,0x00c0007882400358,0x000000b22b000058,0x000000a22a000058\n"
".quad 0x0000002462404358,0x00c3400051800340,0x0000009a29800048,0x0000008228000058\n"
".quad 0x364000a061800358,0x0000007e27c00020,0x0000008628400058,0x0e4000c048800058\n"
".quad 0x00c0008061002330,0x00c0007861c00358,0x00400090d3404358,0x3dc00010a2800348\n"
".quad 0x0000001c41c04320,0x00c3800051000340,0x00400090b2c04348,0x3dc0001082000348\n"
".quad 0x364000a041000320,0x464000c308c00020,0x0040009092404330,0x584000c1db000048\n"
".quad 0x3dc0001061800330,0x00c000804c002320,0x00c0007847400358,0x504000c1ca000058\n"
".quad 0x00c4000057000330,0x0040009071c04348,0x0000007707404348,0x3dc0001041000340\n"
".quad 0x00c0008020c02320,0x00c000782c000358,0x4c4000c1a9800058,0x404000c2f8000030\n"
".quad 0x3e4000c000000030,0x364000a1c6800330,0x00c4400057c00320,0x00c480005bc00348\n"
".quad 0x00400091d1404348,0x000000c030c04348,0x3dc0001020800340,0x00c00081ac002320\n"
".quad 0x00c00079a7000358,0x364000a1f7c00358,0x0040009030c04320,0x0000007307004348\n"
".quad 0x3dc00011a6800340,0x000000018b808520,0x00c00081f7402394,0x00c00079fc000358\n"
".quad 0x0000000168c08558,0x364000a2fbc00394,0x000000014b008520,0x00400091c6c04394\n"
".quad 0x000000012ac08548,0x000000c1d7404394,0x3dc00011f7000340,0x000000010a808520\n"
".quad 0x00c00082f7c02394,0x00c0007afc000358,0x00000000ea408558,0x00000000ca008594\n"
".quad 0x00400091d7404394,0x00000000a9c08548,0x3dc00012f7800394,0x000000c1fc004320\n"
".quad 0x0000000089808540,0x0000000068008594,0x424000c2d8400094,0x0000000049408530\n"
".quad 0x0040009307c04394,0x0000000020008548,0x00000001a9008594,0x00000001c8408594\n"
".quad 0x00000001e8808594,0x00000000001de794,0x0000000000000080,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x430c300000000000,0x2aaaab3dd34d353e,0xaaaaab3c8208203e,0xe38e393d638e393d\n"
".quad 0x08020400000401bc,0x000004000000ba00,0x0000b50008020400,0x0802040000000c00\n"
".quad 0x000011000000b900,0x0000b40008020400,0x0802040000000b00,0x000002000000b300\n"
".quad 0x0000b20008020400,0x0802040000000a00,0x000001000000b100,0x0000b00008020400\n"
".quad 0x0802040000000900,0x000000000000af00,0x0000c10008020400,0x0802040000000800\n"
".quad 0x000010000000c000,0x0000bf0008020400,0x0802040000000700,0x00000f000000be00\n"
".quad 0x0000bd0008020400,0x0802040000000600,0x000003000000b800,0x0000bc0008020400\n"
".quad 0x0802040000000500,0x00000e000000b700,0x0000bb0008020400,0x0802040000001200\n"
".quad 0x00000d000000b600,0x00004b00080a0400,0x1419030014002000,0x000000000c170400\n"
".quad 0x11f0000010000200,0x000000000c170400,0x21f0000008000100,0x000000000c170400\n"
".quad 0x21f0000000000000,0x04003000080d0400,0x005de40000000400,0x00dc042800440400\n"
".quad 0x011c042c00000098,0x001c042c00000088,0x009c042c00000094,0x351ca32c00000084\n"
".quad 0x015c042008400030,0x019c042c0000009c,0x065ca32c0000008c,0x01dde22004400020\n"
".quad 0x201e041905f00000,0x50dca31800000051,0x41dc23200c400040,0x211e04188ec00009\n"
".quad 0x919c031800000065,0x015c004800fffff9,0x209e04300ecfc000,0x411c00180000000d\n"
".quad 0x515c00300ecfc000,0x61dc035000f07f00,0x209c001a20c000ec,0x411c00300ecfc000\n"
".quad 0x515c005000f09f80,0x41dc235800000014,0x359c031a20c000f5,0x209c006000c00018\n"
".quad 0x411c005000f07f00,0x31dc23300a000010,0x66dc0318a0c00008,0x209c004800000051\n"
".quad 0x33dc233008000008,0xb29c031a20c000f4,0x21dc0020324000e1,0x0005e7208ed06000\n"
".quad 0x909c038000000000,0x001c004800fffffd,0x211e045000cfc000,0x209e041800000059\n"
".quad 0x915c031800000009,0x01dc004800c00005,0x209c005000000010,0x085de45000cfc000\n"
".quad 0x081de4280000001c,0x061c862800000008,0x215e0480104000fe,0x431c031800000015\n"
".quad 0x519c004800fffffd,0x215e045000cfc000,0x671c861800000031,0x515c0080104101fc\n"
".quad 0x021de45000cfc000,0x51dc002800000008,0x025de45000000010,0x891c86280000001c\n"
".quad 0x68dc8680104202fc,0x435c0380104303fc,0x33dc234800c00005,0xa1dc23190ec000fc\n"
".quad 0x215e045800c00080,0x021de41800000035,0x04dde42800000018,0x50dc002800400080\n"
".quad 0xa15c035000cfc000,0x639c035800c00078,0x30dc004800ffff01,0x611c035000000010\n"
".quad 0x72dc434800c00101,0x025de44000000014,0x889c86280000000c,0xa41c0380104404fc\n"
".quad 0xd2a4032027c00010,0x211e044800000010,0x21de041800000011,0xc21c031800000039\n"
".quad 0x04a5e44800000058,0x015c002800400080,0x01dc005000000010,0x285c86500000001c\n"
".quad 0x011de480104505fc,0xb45c432800000018,0x80dc034800400090,0x825c034800c08000\n"
".quad 0x831c034800c10008,0x835c034800c23f04,0x839c034800c2bf00,0x83dc034800c33f08\n"
".quad 0x855c034800c38104,0xa7a4034800c40100,0x401c864800c48000,0x55dc0380104707fc\n"
".quad 0x92dc0320324000e1,0xe5640320324000e0,0x329c0320324000e1,0xc25c0320324000e0\n"
".quad 0xd21c0320324000e0,0xe75c0320324000e0,0xf69c0320324000e0,0x679c8620324000e0\n"
".quad 0x00dde480104909fc,0xa19c23280000001c,0xa1dc035800c00080,0x011de45800c00078\n"
".quad 0xa39c032800000008,0x619c432027c00010,0xb1dc23400000001c,0xb29c035800c00080\n"
".quad 0x63dc435800c00078,0x47dc864800400090,0xb31c0380104606fc,0x711c432027c00010\n"
".quad 0x915c234000000028,0x919c035800c00080,0x435c435800c00078,0x929c034800400090\n"
".quad 0x511c432027c00010,0x81dc234000000018,0x815c035800c00080,0x281c865800c00078\n"
".quad 0x42dc4380104808fc,0x821c034800400090,0x709c432027c00010,0xd0dc234000000014\n"
".quad 0xd11c035800c00081,0x225c435800c00079,0xd19c034800400090,0x309c432027c00011\n"
".quad 0xa0dc234000000010,0xa15c035800c00081,0x21dc435800c00079,0xa11c034800400090\n"
".quad 0x309c432027c00011,0x70dc234000000014,0x769c035800c00081,0x215c435800c00079\n"
".quad 0x709c034800400090,0x30dc432027c00011,0x54e4234000000068,0x55e4035800c00081\n"
".quad 0x30dc435800c00079,0x54a4034800400090,0x34e4432025c00011,0x055c85400000005d\n"
".quad 0xe69c858400000001,0x34e4438400000000,0xc75c854800400091,0xa95c858400000000\n"
".quad 0x899c858400000000,0x69dc858400000000,0x4a1c858400000000,0x2a5c858400000000\n"
".quad 0x2aa4858400000000,0x0081e78400000001,0x83a1004000003c40,0xa3e1005000000071\n"
".quad 0x5320005000000075,0x65a1005000000082,0xa26000500000009e,0xd1e0005000000069\n"
".quad 0xe420005000000075,0xf3e0005000000090,0xc3a0005000000090,0x4361005000000098\n"
".quad 0x6321005000000056,0x85e00050000000a5,0x82a0003012f02001,0xa5a1005800f02001\n"
".quad 0xf3e000300ef00001,0xe3a000500000008c,0xa1a0005000000078,0xd360005000000075\n"
".quad 0x042100500000008c,0xc5e000500000008d,0x52a000302ef02001,0x65a0003014d05001\n"
".quad 0xf3e1005000000091,0x8160005000000088,0xe3a0005000000061,0x61a000500000009c\n"
".quad 0xd360005000000090,0x71e0005000000088,0x042100500000001d,0xa2a0005000000089\n"
".quad 0x65a0003014f02001,0xf3e100500000008d,0xc520005000000084,0x5161005000000071\n"
".quad 0xe3a1005000000068,0x61a00050000000a0,0xd36000500000008c,0x0420005000000084\n"
".quad 0x71e0005000000085,0xc2a0005000000090,0x65a0003014f02001,0xf3e0005000000089\n"
".quad 0x5160005000000098,0xe3a1005000000050,0x61a000500000007c,0xd360005000000088\n"
".quad 0x0420005000000080,0x71e0005000000081,0x546000500000008c,0xd2a0005000000096\n"
".quad 0x65a0003014f02001,0xf3e1005000000085,0x516100500000009c,0xe3a1005000000074\n"
".quad 0x61a00050000000a4,0xd360005000000084,0x0421005000000098,0x71e0005000000079\n"
".quad 0xd4e0005000000088,0x40a1005800d02801,0xa2a000500000008e,0x65a0005000000090\n"
".quad 0xf3e0005000000045,0x51600050000000a4,0xe3a1005000000090,0xc4a0005000000000\n"
".quad 0x61a1005800d02801,0xd360005000000094,0x0420005000000078,0x75e000500000007d\n"
".quad 0xa4e0005000000084,0x2260003026f02801,0xa2a0005000000088,0x61e100500000008c\n"
".quad 0xf3e1005000000081,0x51600050000000a8,0xe3a100500000008c,0x84a00050000000a8\n"
".quad 0x61a1003024f02801,0xd360005000000080,0x042100500000009c,0x0221005000000001\n"
".quad 0x80e000500000007a,0x92610050000000a2,0xc320005000000084,0xa2a00050000000a8\n"
".quad 0x71e1005000000088,0xf5a0005000000078,0x5160003026400014,0xe4e0005000000088\n"
".quad 0x61a1005800000038,0x7460005000000078,0xd360005000000045,0x0ae000500000007c\n"
".quad 0x8221003024400015,0xa2a000500000007c,0x0262005000000084,0xf32200301200003d\n"
".quad 0x74a0003018000038,0xf5e000500000000c,0x516000580000003c,0xf3e0005000000084\n"
".quad 0x01e000302600003c,0x61a1005000000041,0xd3600050000000a0,0x82200050000000a4\n"
".quad 0x52a0005000000000,0x5161003014f02002,0x71e1005000000094,0x61a100301e000040\n"
".quad 0xd3e000500000007c,0x0222005000000000,0x04e0003010000039,0xa36000302e000041\n"
".quad 0x5160005000000080,0xe422005000000080,0x22a100302e000038,0x65e100500000007d\n"
".quad 0xd4a0005000000000,0x8120005000000098,0x1460005800d02802,0x6160005000000081\n"
".quad 0x736100300af00002,0x2420005000000041,0x5120005000000079,0x6460003008f02802\n"
".quad 0x54a0003022f00002,0xf160005000000078,0x03e00050000000a8,0xe12000500000009d\n"
".quad 0x1420003008400014,0xe3a0005000000079,0x7460003026000038,0x83e0003024f00002\n"
".quad 0x54a100301ef02002,0x1461005000000038,0xf1600050000000a1,0x73e000500000007c\n"
".quad 0x1420003020f00002,0x516000500000007d,0xf3e00050000000a4,0x942000500000000c\n"
".quad 0x50e0003020f00002,0xf160005000000000,0x03e000500000007c,0x30e0005000000001\n"
".quad 0x91600050000000a8,0xa3e000300af00002,0xe0e000301ef00002,0x02e1e43006400004\n"
".quad 0xf4610028004000c0,0x31e002500000001c,0x51600030ee082084,0xb520005000000000\n"
".quad 0x73e0005800400034,0xa420005800f02000,0x73a000300af00002,0xb1a0025800d05000\n"
".quad 0x11600030f3333336,0x23e0005800000051,0x23a000301e400055,0x25e000301c400045\n"
".quad 0x10e000300e400075,0x64a000300a000051,0x51e100301ef02000,0x64e0005000000039\n"
".quad 0x03a002301ed02000,0x21a00030f18e38e5,0x34e000500000000d,0x656002500000000d\n"
".quad 0xe0e00030f3333335,0xeb2000300cf02000,0x54e0003026f02000,0x81a100301ef02001\n"
".quad 0x562000500000000d,0x44a002301ed02001,0xc0e10030f3333334,0x05600050000000b1\n"
".quad 0x14e200301c400065,0x1b22003026000051,0x2720003030000051,0x24a000301ef02001\n"
".quad 0xb3e000301ed02001,0xa2a1005800400024,0x34e0005000000000,0xcb20005000000055\n"
".quad 0x1b62005000000056,0xa620023038000051,0xd4e00030f4aaaaac,0xd72000302600003c\n"
".quad 0xdb2000305800003c,0x84e0005000000056,0x8720003026f00001,0xa620003038f00001\n"
".quad 0xdb22003030400094,0x1b6200305800003c,0xa4e1003024000051,0xc6a000500000004d\n"
".quad 0xd560005000000062,0xd4a1005000000056,0x5961005000000071,0xd6a200500000006a\n"
".quad 0xb72000302a00003c,0xbb2200302e400086,0xa6a000302e400086,0x6560005000000061\n"
".quad 0x65e200302e400085,0x8a2100302e400085,0x662000500000006a,0x6ae0003038400085\n"
".quad 0x66a2003058400085,0x65a2003058400085,0x1760003038400085,0x1620003030000051\n"
".quad 0x15a0003056000051,0x076000302c000051,0x16a000303a400065,0x05a0003034000051\n"
".quad 0xd76000302c400065,0x062000303a00003c,0xd5a0003030400065,0x06a000302c00003c\n"
".quad 0xa760003034400065,0xa5a000303a400094,0xd62000302c400094,0xd6a000303000003c\n"
".quad 0x9ae000303400003c,0x976200303acfa000,0x35a300302ccfa000,0xa620005000000092\n"
".quad 0xa6a0003030400094,0x0b61003034400094,0x65a000500000009a,0x9622005000000089\n"
".quad 0x96a0003030cfa000,0x2261003034cfa000,0xd0a0005000000088,0x65a000500000007a\n"
".quad 0x4b60005000000085,0x20a100302a400084,0x65a000500000009c,0x5b60005000000099\n"
".quad 0x20a100305af00000,0x65a100500000007c,0x926000500000009d,0x20a0005000000084\n"
".quad 0x65a00050000000a4,0xeb600050000000a5,0x926100305af00000,0x20a1005000000080\n"
".quad 0x65a1005000000000,0xcb600050000000a9,0x926000305acfa000,0x20a0005000000078\n"
".quad 0x6b600050000000a8,0x926100305acf8001,0x4be200500000007c,0x2b62003038400084\n"
".quad 0x926000305acf8000,0x4ba0005000000000,0x69a1003058400084,0x4b600050000000b6\n"
".quad 0x4c22003038400084,0x9ae0003058400084,0x1b60003056cf8000,0x1be000305a000051\n"
".quad 0x1ba000305e000051,0x1c2000305c000051,0x6ae2003060000051,0x4522003056cf8001\n"
".quad 0x446000302a400084,0x456200302e400084,0xb12003302e400084,0x4ae10020324000e1\n"
".quad 0x59200050000000ae,0x5460003028f00000,0x5b20003022f00000,0x416023302af00000\n"
".quad 0x4520035800c00080,0x0721e45800c00078,0xe9200028004000a0,0x5160433048f00000\n"
".quad 0x4120034000000050,0xb520032039c00010,0xc922004800c04001,0x5160433048cfa000\n"
".quad 0x45200348004000b0,0xb2e00020324000e1,0x41e0855800cfa000,0x6920009400000000\n"
".quad 0x9622003048cf8001,0x96a2003030cf8000,0x4120233034cf8000,0x4160035800c00081\n"
".quad 0xb1e0035800c00079,0x9760004800c08001,0x416043303acf8000,0x4120034000000014\n"
".quad 0x7520032039c00011,0x66a00020324000e0,0x5160433034cf8001,0x41e02348004000b0\n"
".quad 0x4560035800c00081,0x41a0855800c00079,0x28a1009400000000,0x71e043500000006a\n"
".quad 0x41a0034000000054,0xb120032039c00011,0xb160034800c0c001,0x71e0434800c10001\n"
".quad 0x41200348004000b0,0x55200320324000e0,0x64e08520324000e0,0x4560239400000000\n"
".quad 0x45e0035800c00080,0x4120035800c00078,0x41a0232039c00010,0x5160435800c00081\n"
".quad 0x41e003400000005d,0xb4e0035800c00079,0x5160434800c14001,0x61e04348004000b0\n"
".quad 0x41a003400000001c,0x40e0852039c00011,0xb520039400000000,0x71e0434800c18001\n"
".quad 0x35600348004000b0,0x45200320324000e1,0xb0e00320324000e1,0x64a0854800c1c001\n"
".quad 0x4120239400000000,0x4160035800c00081,0x30e0035800c00079,0x51a02320324000e0\n"
".quad 0x51e0035800c00081,0x44a0435800c00079,0x3120234000000014,0x3160035800c00080\n"
".quad 0x65e0435800c00078,0xb1a003400000001c,0x44e0434800c20001,0x0120004000000014\n"
".quad 0x016000305a400065,0x01e000305e400065,0x0b6000305c400065,0x6420033060400065\n"
".quad 0xe1a00020324000e0,0xeba0003022f00000,0x03a0233058f00000,0x0460035800c00081\n"
".quad 0xd122005800c00079,0xdb2200300800003c,0xe46043300a00003c,0xb3a0034000000044\n"
".quad 0xd1e2004800c24001,0xdb6200300e00003c,0xe3a003305a00003c,0xc1a20020324000e0\n"
".quad 0xa12200300ccfa000,0xe160233008400094,0xe360035800c00080,0xab22005800c00078\n"
".quad 0xa1e2003058400094,0x53e043300e400094,0xb360034000000034,0xc160004800c28001\n"
".quad 0xab6200305ccfa000,0xd32003305a400094,0x81200020324000e0,0x8b2200300800002c\n"
".quad 0xc2a023305800002c,0xc360035800c00080,0x81e2005800c00078,0x8ba000300e00002c\n"
".quad 0xa36043305a00002c,0xb2a0034000000034,0x6be2004800c2c001,0x21a000300ccf8001\n"
".quad 0xa2a0033048cf8000,0x6b620020324000e0,0x6620003030cf8001,0xa22023303acf8001\n"
".quad 0xa2e0035800c00080,0x65a2005800c00078,0x992100300acf8001,0x82e043500000001a\n"
".quad 0xb22003400000002c,0x9762004800c30001,0x9a60003008cf8000,0x822003300ecf8000\n"
".quad 0x9c220020324000e0,0x9ba0003058cf8000,0x816023305ccf8000,0x81a0035800c00080\n"
".quad 0x2260005800c00078,0x2b2000302ccf8000,0x51a043303acf8000,0xb160034000000018\n"
".quad 0xaaa1004800c34001,0x2760005000000026,0x5160033052cf8000,0x2be20020324000e0\n"
".quad 0x226200305ecf8000,0x5120233060cf8000,0x51e0035800c00080,0x2a62005800c00078\n"
".quad 0xf7e100305ccf8000,0x41e0435000000025,0xb12003400000001c,0x1861004800c38001\n"
".quad 0xb620035000000062,0x4120034800c40001,0x38e10020324000e0,0x86200350000000b6\n"
".quad 0x45a02320324000e1,0x40a0035800c00080,0xe7a1005800c00078,0x0821005000000075\n"
".quad 0x60a04350000000b2,0x55a0034000000009,0xb560032039c00011,0x8b20034800c3c001\n"
".quad 0x75e0435800c00079,0x45200348004000b1,0x56a0032039c00011,0x6ae08520324000e1\n"
".quad 0x2560439400000001,0x34a00348004000b1,0xa0e0232039c00010,0xab60035800c00081\n"
".quad 0x34e0435800c00079,0x04200348004000b1,0x30e0432039c00011,0x8b602340000000b4\n"
".quad 0x1460435800c00081,0xe3a00348004000b1,0xdb20432039c00010,0x48e08540000000b2\n"
".quad 0xf3e0439400000001,0xc3200348004000b0,0x28a0852039c00010,0x0860859400000001\n"
".quad 0xd360439400000001,0xa2a00348004000b0,0xe960852039c00010,0x79e1009400000000\n"
".quad 0xb2e04350000000be,0x82200348004000b0,0xc820852039c00010,0xa9a0859400000000\n"
".quad 0x6260439400000000,0x51a00348004000b0,0xb160032039c00010,0xb6e0034800c44001\n"
".quad 0x71e0434800c48001,0x41200348004000b0,0x5760032039c00010,0xbba00320324000e0\n"
".quad 0x21604320324000e1,0xa0a00348004000b0,0xd6a0232039c00011,0xdb60035800c00081\n"
".quad 0x30e0435800c00079,0x86200348004000b0,0xa6e0432039c00011,0x87a08540000000b5\n"
".quad 0xc660439400000000,0xd6a00348004000b2,0xe760232039c00011,0xeb20035800c00082\n"
".quad 0xb6e0435800c0007a,0xe7200348004000b1,0xdb20432039c00012,0x69e08540000000b1\n"
".quad 0x0021009400000000,0x4a208550000000a4,0xc760439400000000,0x27e08548004000b2\n"
".quad 0x8920859400000000,0xa020859400000001,0xcaa0859400000001,0x00a1e79400000001\n"
".quad 0x46c0034000001240,0x0ac1e44800000059,0xb0800328004000a0,0xb180034800c04001\n"
".quad 0xb1c0034800c10001,0x2140034800c14001,0xb0c00320324000e0,0xb200034800c08001\n"
".quad 0x6080034800c18001,0x75800320324000e0,0x51802320324000e0,0x51c0035800c00080\n"
".quad 0x30c0035800c00078,0x85000320324000e0,0xb1000320324000e0,0x5200034800c0c001\n"
".quad 0x6140432057c00010,0x31c023400000001c,0x32c0035800c00080,0x4100035800c00078\n"
".quad 0x52404320324000e0,0x31800348004000b0,0x71c0432057c00010,0x414023400000002c\n"
".quad 0x4540035800c00080,0x71c0435800c00078,0x41000348004000b0,0x5140432057c00010\n"
".quad 0x20c0234000000054,0x24c0035800c00080,0x5140435800c00078,0x20800348004000b0\n"
".quad 0x30c0432057c00010,0x62c023400000004c,0x6540035800c00081,0xb480035800c00079\n"
".quad 0x30c0434800c1c001,0xb5404348004000b0,0x6580034000000054,0x44c0232057c00011\n"
".quad 0x42c0035800c00081,0xb380035800c00079,0x2480034800c24001,0xb4000320324000e1\n"
".quad 0xb300034800c20001,0x55c0434800c28001,0x34c04348004000b1,0x450003400000002d\n"
".quad 0x8700852057c00011,0xe380039400000000,0x2b002320324000e0,0x2b40035800c00081\n"
".quad 0x6740855800c00079,0x0400039400000000,0xc3000320324000e1,0xb2800320324000e0\n"
".quad 0x3540434800c2c001,0xe2402348004000b1,0xe700035800c00080,0xc4c0435800c00078\n"
".quad 0x02002340000000b6,0x0b80035800c00081,0xc1c0235800c00079,0xcb00035800c00080\n"
".quad 0xa280035800c00078,0x24800320324000e0,0x9740432057c00011,0x8180434000000070\n"
".quad 0x72404340000000b8,0xa2002340000000b0,0xa1c0035800c00080,0xb440035800c00078\n"
".quad 0x34c0434800c30001,0x04000348004000b1,0x8200432057c00011,0x11c003400000001c\n"
".quad 0xb3c00320324000e1,0x6440434800c34001,0xe3800348004000b0,0xf180032057c00010\n"
".quad 0xb3400320324000e0,0xd3c0434800c38001,0xc3000348004000b1,0xdb00032057c00010\n"
".quad 0xb2c00320324000e0,0x9340434800c3c001,0xa2800348004000b0,0x4600852057c00010\n"
".quad 0x7240239400000000,0x7b40035800c00080,0x2680855800c00078,0xb740039400000000\n"
".quad 0xb7000320324000e0,0x82c0434800c40001,0x72000348004000b0,0x9140432057c00010\n"
".quad 0xc1c02340000000b4,0xc600035800c00082,0xd0c0235800c0007a,0xd240035800c00081\n"
".quad 0xc700035800c00079,0x61002320324000e1,0x6b80035800c00080,0x7080435800c00078\n"
".quad 0x30c0434000000060,0xc1c0234000000024,0xc600035800c00081,0x5240435800c00079\n"
".quad 0x41004348004000b0,0x61800340000000b8,0x7680432057c00010,0xb140034000000060\n"
".quad 0x41c0434800c44001,0xc1000348004000b0,0x5b00032057c00012,0xb6c00320324000e0\n"
".quad 0x2140434800c48001,0xd0800348004000b0,0xc740232057c00011,0xcb40035800c00082\n"
".quad 0x30c0435800c0007a,0xc6000348004000b0,0x6880852057c00011,0xb700039400000001\n"
".quad 0x48408520324000e1,0xa640439400000001,0x29008548004000b1,0xd6c0439400000001\n"
".quad 0xc6800340000000b5,0x08c0852057c00012,0xc740239400000001,0xcb00035800c00081\n"
".quad 0xea00855800c00079,0xc000859400000000,0xb6c0439400000000,0xaa808548004000b1\n"
".quad 0xc700039400000000,0xd740432057c00011,0x87c08540000000b1,0x6a40859400000000\n"
".quad 0x4940859400000000,0xd740439400000000,0x27808548004000b1,0x89c0859400000000\n"
".quad 0xa800859400000001,0xc980859400000001,0x001de79400000001,0x0000008000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0xd5555540f1451400,0xe38e393daaaaab3f,0xb2cb2dbe73cf3d3c,0x8208203c638e39bd\n"
".quad 0x2aaaab3ccccccd3d,0x080204000004013d,0x000009000000ce00,0x0000c90008020400\n"
".quad 0x0802040000000400,0x000003000000c800,0x0000cc0008020400,0x0802040000000800\n"
".quad 0x000002000000c700,0x0000c50008020400,0x0802040000000100,0x000000000000c300\n"
".quad 0x0000d30008020400,0x0802040000000700,0x000006000000d100,0x0000ca0008020400\n"
".quad 0x080a040000000500,0x2400200000005a00,0x0c17040024190300,0x2000040000000000\n"
".quad 0x0c17040011f00000,0x1800030000000000,0x0c17040021f00000,0x1000020000000000\n"
".quad 0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x080d040021f00000,0x0000020003002400,0x00440400005de400,0x0000009800dc0428\n"
".quad 0x00000088011c042c,0x00000094001c042c,0x00000084009c042c,0x0840003030dca32c\n"
".quad 0x0000009c015c0420,0x0000008c019c042c,0x05f00000021de22c,0x04400020065ca319\n"
".quad 0x0000000d21de0420,0x0c400040501ca318,0x8ec0000431dc2320,0x00000065219e0418\n"
".quad 0x00fffffd911c0318,0x10cfc00071dc0048,0x00000001215e0430,0x10cfc000619c0018\n"
".quad 0x00f07f0071dc0030,0x20c000f441dc0350,0x10cfc000515c001a,0x00f09f80619c0030\n"
".quad 0x0000001c71dc0050,0x20c000f831dc2358,0x00c00018009c031a,0x00f07f00515c0060\n"
".quad 0x0e000018619c0050,0xa0c0000401dc2330,0x0000000c271c0318,0x0c000014515c0048\n"
".quad 0x20c000f803dc2330,0x324000e1c19c031a,0x8ed0600051dc0020,0x000000000005e720\n"
".quad 0x00000008361c0380,0x00c00080615c2348,0x00c0007861dc0358,0x00400080009de458\n"
".quad 0x00c27f0182dc0328,0x0000001c531c4348,0x05c00010689c0340,0x00c3c101849c0320\n"
".quad 0x00c040018bdc0348,0x00c13ffd819c0348,0x00c2000581dc0348,0x00400090c8dc4348\n"
".quad 0x00c00004321c0348,0x00c07ffd815c0348,0x00c10005829c0348,0x084000e0b31c0348\n"
".quad 0x00c0000590dc0320,0x00c2ff0184dc0348,0x00c33f05855c0348,0x084000e122dc0348\n"
".quad 0x084000e063dc0320,0x084000e0735c0320,0x084000e2f49c0320,0x324000e051dc0320\n"
".quad 0x324000e0a11c0320,0x064000e1329c0320,0x324000e1515c0320,0x00c0008124dc2320\n"
".quad 0x00c00079255c0358,0x05c00011269c0358,0x00c1c005839c0320,0x00000055349c4348\n"
".quad 0x00c00080f4dc2340,0x00c00078f55c0358,0x0040009126dc4358,0x05c00010f99c0348\n"
".quad 0x0000005533dc4320,0x00c00080d49c2340,0x00c00078d4dc0358,0x00400090f9dc4358\n"
".quad 0x05c00010db1c0348,0x0000004d235c4320,0x00c00080c3dc2340,0x00c00078c49c0358\n"
".quad 0x00c2befd845c0358,0x00400090db5c4348,0x00c0c0018c1c0348,0x05c00010ca9c0348\n"
".quad 0x064000e0e51c0320,0x00000048f31c4320,0x324000e1139c0340,0x00c00080b35c2320\n"
".quad 0x00c00078b3dc0358,0x064000e3045c0358,0x00400090cadc4320,0x05c00010ba1c0348\n"
".quad 0x0000003cd35c4320,0x00c0008112dc2340,0x00c00079131c0358,0x00400090da5c4358\n"
".quad 0x8ec0010083dc2348,0x00c48000825c0318,0x05c00011181c0348,0x00000030b2dc4320\n"
".quad 0x00c17ffd821c0340,0x00c00080731c2348,0x00c00078735c0358,0x00400090b85c4358\n"
".quad 0x064000e0819c0348,0x05c00010779c0320,0x00c38101859c0320,0x00000034c1dc4348\n"
".quad 0x00c0008062dc2340,0x00c00078631c0358,0x324000e1621c0358,0x0040009077dc4320\n"
".quad 0x05c00010659c0348,0x00000030b19c4320,0x00c23f01841c0340,0x00c0008042dc2348\n"
".quad 0x00c0007843dc0358,0x0040009065dc4358,0x324000e1041c0348,0x05c00010449c0320\n"
".quad 0x0000003cb4dc4320,0x00c00081419c2340,0x00c00079445c0358,0x00c00081031c2358\n"
".quad 0x00c00079035c0358,0x00c00080e11c2358,0x00c00078e1dc0358,0x0040009134dc4358\n"
".quad 0x00000044655c4348,0x05c00011451c0340,0x00c00080a2dc2320,0x00c00078a19c0358\n"
".quad 0x00000034c45c4358,0x0000001c43dc4340,0x00c00080531c2340,0x00c00078511c0358\n"
".quad 0x00400091555c4358,0x05c00011041c0348,0x00000018b19c4320,0x00000010c2dc4340\n"
".quad 0x00c0008081dc2340,0x00c00078811c0358,0x00400091145c4358,0x05c00010e39c0348\n"
".quad 0x00000010711c4320,0x00c4410181dc0340,0x00400090f3dc4348,0x05c00010a31c0348\n"
".quad 0x00c00004001c0320,0x064000e071dc0348,0x00c400fd80dc0320,0x00400090635c4348\n"
".quad 0x8ec0010005dc2348,0x05c00010529c0318,0x324000e030dc0320,0x02c480fc925c0420\n"
".quad 0x00c0001800080320,0x00003f000029e260,0x00400090b2dc4318,0x05c00010821c0348\n"
".quad 0x00c00080315c2320,0x00c00078319c0358,0x00000000901c0358,0x00400090425c4348\n"
".quad 0x00000018515c4348,0x05c00010311c0340,0x00c0008070dc2320,0x00c00078719c0358\n"
".quad 0x00400090515c4358,0x05c00010709c0348,0x00000018319c4320,0x0040008001dde440\n"
".quad 0x324000e0001c0328,0x0040009060dc4320,0x000000022b9c8548,0x0fc00010019c0384\n"
".quad 0x00c00080075c2320,0x00c0007801dc0358,0x00000001a6dc8558,0x00000002699c8584\n"
".quad 0x0000001dd1dc4384,0x00000002a91c8540,0x0000000288dc8584,0x00000002075c8584\n"
".quad 0x00000001e69c8584,0x0040009071dc4384,0x00000002c95c8548,0x00000001689c8584\n"
".quad 0x0000000124dc8584,0x0000000149dc8584,0x00000001085c8584,0x00000000e81c8584\n"
".quad 0x00000000c7dc8584,0x00000000a79c8584,0x00000000801c8584,0x000000004a1c8584\n"
".quad 0x000000002a5c8584,0x000000006a9c8584,0x00003c400081e784,0x00000075b3a10040\n"
".quad 0x0000009213200050,0x0000004da3e10050,0x00000098e4200050,0x00000080c3a00050\n"
".quad 0x0000007a05610050,0x00000069a1a00050,0x0000004d32200050,0x000000ba62e10050\n"
".quad 0x0000004da0a00050,0x00000098f3e00050,0x0000007ce3a00050,0x00f02001b2a00050\n"
".quad 0x000000a153210058,0x0cf02001b5a00050,0x10f00001a5610030,0x00000088b2e00030\n"
".quad 0x0000009821a00050,0x0000008904210050,0x00000088f3e00050,0x00000078e3a00050\n"
".quad 0x14d05002e2a00050,0x2cf02001d5a00030,0x0000006db1600030,0x0000009955600050\n"
".quad 0x0000009cb2e00050,0x0000008861a00050,0x0000009d04210050,0x0000009cf3e10050\n"
".quad 0x00000000e3a10050,0x14f02001a2a00050,0x0000002162200030,0x00000075d1e00050\n"
".quad 0x0000006851610050,0x0000008955600050,0x00000094b2e00050,0x0000009c61a00050\n"
".quad 0x0000009504200050,0x00000094f3e10050,0x0000008ce3a10050,0x14f02001d2a00050\n"
".quad 0x0000009882200030,0x0000001c51600050,0x0000009d55600050,0x00000090b2e00050\n"
".quad 0x0000009461a00050,0x0000009104200050,0x00000080f3e00050,0x000000a0e3a10050\n"
".quad 0x14f0200132a00050,0x0000008882200030,0x0000008614a00050,0x0000004c51610050\n"
".quad 0x0000009555600050,0x0000008a66210050,0x00000080b2e00050,0x0000008461a10050\n"
".quad 0x0000007d04210050,0x00000078f3e10050,0x000000a4e3a10050,0x00000098a2a00050\n"
".quad 0x0000009c82200050,0x0000009851600050,0x0000004955600050,0x00d0280134600050\n"
".quad 0x0000009d80a00058,0x0000007cb2e00050,0x0000009061a10050,0x0000008d04200050\n"
".quad 0x000000a0f3e00050,0x000000a8e3a10050,0x00000088a2a00050,0x0000009485a00050\n"
".quad 0x0000007e42610050,0x0000008851600050,0x0000009152210050,0x22f02801a4600050\n"
".quad 0x0000009420a10030,0x000000a8c3200050,0x00000078b2e00050,0x0000007c61a10050\n"
".quad 0x000000a504210050,0x000000a8f3e10050,0x00000038e5600050,0x0000009ca2a00058\n"
".quad 0x00d02801d5200050,0x0000008c92610058,0x0000009c51600050,0x0000004964a00050\n"
".quad 0x0000008cb2e00050,0x0000000061a10050,0x22400014f4600050,0x0400003d00a20030\n"
".quad 0x18000038f3220030,0x0000003cf5a00030,0x2a00003cf5e00058,0x00000094a2a00030\n"
".quad 0x0000004103e00050,0x28f02801b5200050,0x000000a492600030,0x0000009451600050\n"
".quad 0x000000a0b2e00050,0x0000008c65610050,0x14f0200212a00050,0x2e000040f1a10030\n"
".quad 0x0000008451610030,0x2840001505200050,0x1200003902620030,0x2c00004105e00030\n"
".quad 0x0000009124a00030,0x000000a4b4200050,0x00000090a2e00050,0x0000009051600050\n"
".quad 0x24f0000202a00050,0x2c000038e5a20030,0x000000a555610030,0x00000080b4a00050\n"
".quad 0x00d0280001200050,0x0af0000201600058,0x0000005952e10030,0x0000007d24a00050\n"
".quad 0x08f0280211200050,0x0000007c55600030,0x000000a901600050,0x0000007924200050\n"
".quad 0x08400014e1200050,0x2e000038e3a00030,0x0000007ca4a00030,0x20f0200002a00050\n"
".quad 0x0000003854210030,0x2af00001e5600050,0x0000008ca1600030,0x0000000000e00050\n"
".quad 0x0000007c82210050,0x24f00001e2a00050,0x000000a051600030,0x0000000155610050\n"
".quad 0x0000000c82200050,0x0000000ca2a00050,0x000000a450e00050,0x0000008d54a00050\n"
".quad 0x0000008ca1600050,0x000000a830e00050,0x24f0000284a00050,0x0af0000281600030\n"
".quad 0x06400004e0e00030,0x000000a522a00030,0x004000c00361e450,0xee08208434a00228\n"
".quad 0x14f00002a2a00030,0x000000a451600030,0x00d0500123a00050,0x00400034d1e00058\n"
".quad 0x00000018a1a10058,0x00f0200125a00050,0x0000008c83e10058,0x0af00002a2a00050\n"
".quad 0x1c40004505600030,0xf333333542200230,0x0000001c61600030,0x2c40005503a00058\n"
".quad 0x00000056ebe10030,0x0a00001c60e00050,0x1cf0200085600030,0x1cd0200085e00030\n"
".quad 0x2440007504a00030,0xf18e38e4a4200230,0x0000000d52200030,0x0000000d75600050\n"
".quad 0xf333333515a00250,0x10f0200100e00030,0x2af020010ae00030,0x1cf0200165600030\n"
".quad 0x0000000db2210030,0x1cd0200165a00050,0xf333333445e00230,0x000000add0e10030\n"
".quad 0x20400064a6e00050,0x2a00001c6ae20030,0x2c00001c6b220030,0x1cf0200177600030\n"
".quad 0x1cd0200175e00030,0x0000006eb5a00030,0x00400024d3a00050,0x000000a4f3e10058\n"
".quad 0x0000006ecae00050,0x3a00001c6b220050,0xf4aaaaacf5600230,0x56000038b7600030\n"
".quad 0x2c000038b5a00030,0x0000006ecae00030,0x3af0000157600050,0x2e00001c6b220030\n"
".quad 0x2cf0000155a00030,0x0000007535e10030,0x2a400094f5600050,0x56000038bae20030\n"
".quad 0x0000006ec4e00030,0x00000059a5a10050,0x00000056b6a00050,0x26000038b4e20050\n"
".quad 0x2440008547620030,0x0000006a18610030,0x0000005534e00050,0x2440008546a00050\n"
".quad 0x244000851b200030,0x244000851ba20030,0x0000004c00210030,0x3440008514a00050\n"
".quad 0x3a40008515600030,0x3a40008514e20030,0x3440008514620030,0x2400001c65200030\n"
".quad 0x2a00001c64a00030,0x2200001c64600030,0x2600001c64e00030,0x28400064a5200030\n"
".quad 0x22400064a4600030,0x24400064a4a00030,0x26400064a4e00030,0x22000038b4600030\n"
".quad 0x28000038b5200030,0x24000038b4a00030,0x26000038b4e00030,0x22400094f4600030\n"
".quad 0x28400094f5200030,0x24400094f4a00030,0x26400094f4e00030,0x22cfa00025620030\n"
".quad 0x0000009a24630030,0x28cfa00026e00050,0x24cfa00024a20030,0x26cfa00025200030\n"
".quad 0x0000008240a10030,0x0000009d14600050,0x0000009d84e10050,0x0000007c20a00050\n"
".quad 0x0000009514600050,0x0000009534e00050,0x0000007820a10050,0x0000008114600050\n"
".quad 0x5840008446200050,0x0000009134e10030,0x0000008c20a10050,0x0000007914610050\n"
".quad 0x30f0000056200050,0x0000007d34e00030,0x000000a020a00050,0x000000a114600050\n"
".quad 0x30f0000106200050,0x0000008d34e10030,0x000000a420a10050,0x000000a914610050\n"
".quad 0x30cfa000c6200050,0x000000a534e00030,0x000000a820a00050,0x30cf800116200050\n"
".quad 0x36cf800136e00030,0x3a4000844b620030,0x30cf80002ae20030,0x36cf800116220030\n"
".quad 0x3440008446e20030,0x000000ae08210030,0x000000626ae10050,0x3440008446200050\n"
".quad 0x3a40008446a00030,0x3600001c66e00030,0x3000001c66200030,0x3400001c66a00030\n"
".quad 0x5a00001c6b600030,0x5840008441e20030,0x5c40008441a00030,0x5c40008447620030\n"
".quad 0x324000e1c1200330,0x0ef000005b200020,0x0cf0000059a00030,0x3af000005ba00030\n"
".quad 0x00c0008041602330,0x00c0007841a00358,0x004000a00761e458,0x36400064a6e00028\n"
".quad 0x0000001851604330,0x3bc0001041200340,0x00c04001c1a00320,0x34400064a6a00048\n"
".quad 0x004000b051604330,0x324000e061a00348,0x5a400064ab600020,0x000000004be08530\n"
".quad 0x36000038b6e20094,0x34000038b6a20030,0x5a000038bb620030,0x00c0008061202330\n"
".quad 0x00c0007861600358,0x58f000010b200058,0x5a400094fb620030,0x0000001441604330\n"
".quad 0x3bc0001061200340,0x00c08001c1a00320,0x00cfa000d3600048,0x004000b051604358\n"
".quad 0x324000e061a00348,0x28cf800135220020,0x0000000042208530,0x00c0008061e02394\n"
".quad 0x00c000786be00358,0x24cf800134a20058,0x3bc0001061200330,0x000000bc71604320\n"
".quad 0x00c0c001c1a00340,0x00c10001c1e00348,0x004000b051604348,0x324000e061a00348\n"
".quad 0x324000e072200320,0x0000000045a08520,0x00c000806be02394,0x00c000786c200358\n"
".quad 0x3bc0001061a00358,0x00c0008081202320,0x000000c2f1e04358,0x00c0007881600340\n"
".quad 0x00c18001cbe00358,0x004000b071e04348,0x0000001441604348,0x3bc0001081200340\n"
".quad 0x00c14001c2200320,0x0000000060e08548,0x004000b051604394,0x324000e085a00348\n"
".quad 0x324000e2f2200320,0x0000000045e08520,0x00c1c001c1a00394,0x00c0008160e02348\n"
".quad 0x00c0007961e00358,0x00c0008081202358,0x00c0007881600358,0x324000e061a00358\n"
".quad 0x0000001c30e04320,0x0000001445e04340,0x00c0008061202340,0x00c0007861600358\n"
".quad 0x30400064abe00058,0x4cf0000106200030,0x0000001441e04330,0x00c20001c1200340\n"
".quad 0x5e000038bbe20048,0x5cf0000109a00030,0x324000e041200330,0x58cfa000c4220020\n"
".quad 0x36400094fba20030,0x00c0008041602330,0x00c0007842a00358,0x30cfa000c6220058\n"
".quad 0x4ccfa000c9a00030,0x0000002851604330,0x00c24001c2a00340,0x5e400094fb220048\n"
".quad 0x34400094f6e20030,0x324000e0a2a00330,0x5800003496a00020,0x5c0000349b220030\n"
".quad 0x00c00080a2e02330,0x00c00078a3a00358,0x3600003496e20058,0x5a0000349ba00030\n"
".quad 0x00000038b2e04330,0x00c28001c3a00340,0x20cf80011c200048,0x2acf800135600030\n"
".quad 0x324000e0e3a00330,0x30cf80011be20020,0x24cf80011b620030,0x00c00080e3202330\n"
".quad 0x00c00078e3e00358,0x2acf800116200058,0x60cf80002c200030,0x0000003cc3e04330\n"
".quad 0x00c2c001c3200340,0x34cf800136a20048,0x36cf800135600030,0x324000e0c3200330\n"
".quad 0x5ccf80013ba00020,0x5ecf80002be20030,0x00c00080c2602330,0x00c00078c3600358\n"
".quad 0x0000006259610058,0x00c40001c6200350,0x0000003493604348,0x00c30001c2600340\n"
".quad 0x000000b628a10048,0x324000e186200350,0x324000e094200320,0x28cf800112600020\n"
".quad 0x4ccf800115220030,0x00c0008104a02330,0x00c0007904600358,0x000000c289a10058\n"
".quad 0x58cf80013a220050,0x0000004524604330,0x00c34001c4a00340,0x34cf80002b200048\n"
".quad 0x2acf800026a00030,0x324000e124a00330,0x0000002679e10020,0x00000069f7e10050\n"
".quad 0x00c0008126e02350,0x00c0007924e00358,0x00c44001c6a00358,0x000000b249210048\n"
".quad 0x0000004db4e04350,0x28cf800026e00040,0x00c38001c5200330,0x00c000798b200348\n"
".quad 0x0000006eaaa10058,0x324000e145200350,0x50cf800026e20020,0x5ccf80002a220030\n"
".quad 0x00c0008140a02330,0x00c0007945600358,0x0000006e38e10058,0x324000e1a6a00350\n"
".quad 0x0000005425604320,0x3bc0001160a00340,0x00c3c001c5a00320,0x00c48001c6e00348\n"
".quad 0x004000b030e04348,0x3bc0001082200348,0x324000e165a00320,0x00c00079aba00320\n"
".quad 0x004000b172604358,0x3bc0001061a00348,0x00c0008165e02320,0x00c000796b600358\n"
".quad 0x004000b071e04358,0x3bc0001041200348,0x000000b575e04320,0x00c000818b602340\n"
".quad 0x004000b051604358,0x3bc00010a2a00348,0x000000b2db204320,0x00c00081ab602340\n"
".quad 0x004000b0b2e04358,0x3bc00010e3a00348,0x000000002ae08520,0x324000e1b7200394\n"
".quad 0x004000b0f3e04320,0x3bc00010c3200348,0x0000000088a08520,0x0000000069e08594\n"
".quad 0x004000b0d3604394,0x3bc0001104200348,0x000000bad6e04320,0x0000000049608540\n"
".quad 0x004000b114604394,0x3bc0001124a00348,0x00c00079cb600320,0x00000000a8608558\n"
".quad 0x004000b134e04394,0x3bc0001145200348,0x000000bde7a10020,0x00000000e9208550\n"
".quad 0x004000b155604394,0x3bc0001165a00348,0x00000000c8208520,0x0000000107e08594\n"
".quad 0x004000b175e04394,0x3bc0001186200348,0x0000000127a08520,0x000000a29a210094\n"
".quad 0x004000b2c6604350,0x3bc00011a6a00348,0x00c00081cb202320,0x0000000140208558\n"
".quad 0x004000b1b6e04394,0x3bc00011c7200348,0x000000b6cb604320,0x0000000168e08540\n"
".quad 0x0000000189a08594,0x004000b2d7604394,0x00000001aa208548,0x00000001caa08594\n"
".quad 0x000011e000a1e794,0x324000e2f0800340,0x004000a00701e420,0x324000e301400328\n"
".quad 0x00c0008022402320,0x00c0007825000358,0x39c0001022000358,0x00c0800181000320\n"
".quad 0x0000005090804348,0x00c1000181c00340,0x00c1800180c00348,0x00c0008055402348\n"
".quad 0x00c0007855c00358,0x324000e041800358,0x004000b022404320,0x39c0001051000348\n"
".quad 0x324000e070800320,0x324000e035000320,0x0000005d51404320,0x00c0008060c02340\n"
".quad 0x00c0007861c00358,0x00c1400182c00358,0x004000b051404348,0x0000001c31c04348\n"
".quad 0x39c0001061800340,0x00c0008025402320,0x00c0007825c00358,0x324000e0b5800358\n"
".quad 0x004000b071c04320,0x0000005d50c04348,0x39c0001020800340,0x00c0008162c02320\n"
".quad 0x00c000796ac00358,0x00c1c00184800358,0x00c2400183800348,0x004000b030c04348\n"
".quad 0x00c2000184000348,0x00c2800183000348,0x000000acb5c04348,0x39c0001165800340\n"
".quad 0x00c0008145402320,0x00c0007942c00358,0x324000e124800358,0x0000000087408520\n"
".quad 0x324000e0e3800394,0x0000000064c08520,0x324000e104000394,0x324000e0c3000320\n"
".quad 0x004000b175c04320,0x00c2c00182800348,0x0000002d55404348,0x39c0001145000340\n"
".quad 0x00c000812ac02320,0x00c000792b000358,0x00c00080e2402358,0x00c00078eb400358\n"
".quad 0x00c0008102002358,0x00c000790b800358,0x00c00080c1c02358,0x00c00078c4c00358\n"
".quad 0x324000e0a2800358,0x004000b155404320,0x000000b2b7404348,0x39c0001124800340\n"
".quad 0x000000b49ac04320,0x000000b881804340,0x0000004c72404340,0x00c00080a2002340\n"
".quad 0x00c00078a1c00358,0x00c3000184400358,0x004000b1d4c04348,0x39c0001104000348\n"
".quad 0x0000001c82004320,0x324000e111c00340,0x00c3400183c00320,0x004000b064404348\n"
".quad 0x39c00010e3800348,0x324000e0f1800320,0x00c3800183400320,0x004000b2b3c04348\n"
".quad 0x39c00010c3000348,0x324000e0db000320,0x00c3c00182c00320,0x004000b093404348\n"
".quad 0x39c00010a2800348,0x0000000046c08520,0x00c0008072402394,0x00c000787b400358\n"
".quad 0x0000000026808558,0x324000e0bac00394,0x00c4000187400320,0x004000b082c04348\n"
".quad 0x39c0001072000348,0x000000b491404320,0x00c00082c1c02340,0x00c0007ac6c00358\n"
".quad 0x00c00082b0c02358,0x00c0007ab2400358,0x324000e1d7400358,0x00c0008061002320\n"
".quad 0x00c000786b800358,0x0000006c70804358,0x0000002430c04340,0x00c00081d1c02340\n"
".quad 0x00c00079d6800358,0x004000b052404358,0x000000b841004348,0x39c0001061800340\n"
".quad 0x0000006876804320,0x00c4400181400340,0x004000b041c04348,0x39c00012c1000348\n"
".quad 0x324000e05b000320,0x00c4800186c00320,0x004000b021404348,0x39c00012b0800348\n"
".quad 0x00c00082cac02320,0x00c0007acb400358,0x004000b030c04358,0x39c00011d6000348\n"
".quad 0x324000e1b7400320,0x0000000169c08520,0x004000b1a6404394,0x0000000149408548\n"
".quad 0x000000b6b6c04394,0x39c00012c6800340,0x0000000129808520,0x0000000108808594\n"
".quad 0x00c00081dac02394,0x00c00079db000358,0x00000000e0008558,0x004000b1b6c04394\n"
".quad 0x00000000ca408548,0x39c00011d7000394,0x00000000aa808520,0x000000b2b7404394\n"
".quad 0x0000000088c08540,0x000000006a008594,0x0000000048408594,0x004000b1d7404394\n"
".quad 0x0000000027c08548,0x0000000187808594,0x00000001a9008594,0x00000001c8008594\n"
".quad 0x00000000001de794,0x0000000000000080,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0xd5555540f1451400,0xe38e393daaaaab3f,0xb2cb2dbe73cf3d3c\n"
".quad 0x8208203c638e39bd,0x2aaaab3ccccccd3d,0x080a04000004013d,0x2000200000004000\n"
".quad 0x0c17040020190300,0x1800030000000000,0x0c17040021f00000,0x1000020000000000\n"
".quad 0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x080d040021f00000,0x0000020003002400,0x00440400005de400,0x00000084001c0428\n"
".quad 0x00400080011de42c,0x00000000015de228,0x00000001209c0419,0x00d00000209c0018\n"
".quad 0x00f00000209c0050,0x00d00000209c0050,0x00f00000209c0050,0x00d00000209c0050\n"
".quad 0x00f00000209c0050,0x00d00000209c0050,0x00f00000209c0050,0x00d00000209c0050\n"
".quad 0x00f00000209c0050,0x00d00000209c0050,0x00f00000209c0050,0x00d0000020dc0050\n"
".quad 0x09c00010009c0350,0x00f00000311c0020,0x00c0001000dc4350,0x00d00000411c0050\n"
".quad 0x0040009030dc4350,0x00f00000401c0048,0x00000010215c8550,0x00000020215c8594\n"
".quad 0x00d00000001c0094,0x00000030215c8550,0x00000040215c8594,0x00f00000001c0094\n"
".quad 0x00000050215c8550,0x00000060215c8594,0x00d00000001c0094,0x00000070215c8550\n"
".quad 0x00000080215c8594,0x00f00000001c0094,0x00000090215c8550,0x000000a0215c8594\n"
".quad 0x00d00000001c0094,0x000000b0215c8550,0x000000c0215c8594,0x00f00000001c0094\n"
".quad 0x000000d0215c8550,0x000000e0215c8594,0x00d00000001c0094,0x000000f0215c8550\n"
".quad 0x00000100215c8594,0x00f00000001c0094,0x00000110215c8550,0x00000120215c8594\n"
".quad 0x00000000201c8594,0x00000000001de794,0x0000000000000080,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x00004e00080a0400\n"
".quad 0x0819030008002000,0x000000000c170400,0x21f0000000000000,0x00440400005de400\n"
".quad 0x00000098015c0428,0x00000088019c042c,0x0000009c009c042c,0x0000008c00dc042c\n"
".quad 0x0000009401dc042c,0x00000084021c042c,0x0c400030515ca32c,0x06400040209ca320\n"
".quad 0x10400020719ca320,0x00400080001de420,0x00000014209cc328,0x004000a0049de440\n"
".quad 0xfe000000011de228,0x0c4000a0209c0318,0x0100000000dde220,0x004000b0029de419\n"
".quad 0x00c00080219c2328,0x00c0007821dc0358,0x01c00010209c0358,0x00c00049221c0320\n"
".quad 0x0000001c619c4358,0x7e0000fff25c0040,0x08e0000031dc0030,0x0040009060dc4330\n"
".quad 0x00000020a01dc348,0x05c10001231c0340,0x120000fff45c0020,0x08d01003f25c0030\n"
".quad 0x00000000335c4330,0x08cff001121e0048,0x19c10001239c0330,0x08f01003f19c0020\n"
".quad 0xfaaaaaac811c0230,0x00000000d3dc4330,0x1dc10001221c0348,0x120000fff2dc0020\n"
".quad 0x00000000211c8530,0x00000000f25c4394,0x11c10001229c0348,0x16cff001151e0020\n"
".quad 0x00000000015de230,0x0000000092dc431a,0x15c10001211c0348,0x0ee00000555c0020\n"
".quad 0x0c0000fff09c0030,0x00000000b15c4330,0x09c10001219c0348,0xf58e38e5441c0220\n"
".quad 0x04cff00110de0030,0x0000000051dc4330,0x00000000c41c8548,0x0dc10001209c0394\n"
".quad 0xf58e38e434dc0220,0x00000000e41c8530,0x0000000070dc4394,0x05c10001231c0348\n"
".quad 0x0000000084dc8520,0x00000000a4dc8594,0x00000000335c4394,0x19c10001239c0348\n"
".quad 0xf38e38e5451c0220,0x2acff001155e0030,0x00000000d3dc4330,0x1dc10001221c0348\n"
".quad 0x00000000451c8520,0x00000000651c8594,0x00000000f25c4394,0x11c10001229c0348\n"
".quad 0xf38e38e5555c0220,0x0000000092dc4330,0x15c10001211c0348,0x00000000255c8520\n"
".quad 0x00000000c51c8594,0x00000000b15c4394,0x09c10001219c0348,0x00000000e41c8520\n"
".quad 0x00000000851c8594,0x0000000051dc4394,0x0dc10001209c0348,0x00000000a51c8520\n"
".quad 0x00000000451c8594,0x0000000070dc4394,0x05c10001231c0348,0x00000000651c8520\n"
".quad 0x0000000024dc8594,0x00000000335c4394,0x19c10001239c0348,0x00000000c51c8520\n"
".quad 0x00000000d3dc4394,0x1dc10001241c0348,0x00000000e51c8520,0x00000000f45c4394\n"
".quad 0x21c10001221c0348,0x00000001055c8520,0x00000001125c4394,0x00000000855c8548\n"
".quad 0x00000000001de794,0x0000000000000080,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x080a040000040100\n"
".quad 0x1000200000003e00,0x0c17040010190300,0x0800010000000000,0x0c17040021f00000\n"
".quad 0x0000000000000000,0x005de40021f00000,0x00dc042800440400,0x011c042c00000098\n"
".quad 0x001c042c00000088,0x009c042c00000094,0x351ca32c00000084,0x015c042008400030\n"
".quad 0x019c042c0000009c,0x065ca32c0000008c,0x01dde22004400020,0x201e041905f00000\n"
".quad 0x50dca31800000051,0x41dc23200c400040,0x211e04188ec00009,0x919c031800000065\n"
".quad 0x015c004800fffff9,0x209e04300ecfc000,0x411c00180000000d,0x515c00300ecfc000\n"
".quad 0x61dc035000f07f00,0x209c001a20c000ec,0x411c00300ecfc000,0x515c005000f09f80\n"
".quad 0x41dc235800000014,0x359c031a20c000f5,0x209c006000c00018,0x411c005000f07f00\n"
".quad 0x31dc23300a000010,0x66dc0318a0c00008,0x209c004800000051,0x33dc233008000008\n"
".quad 0xb29c031a20c000f4,0x21dc0020324000e1,0x0005e7208ed06000,0x909c038000000000\n"
".quad 0x001c004800fffffd,0x211e045000cfc000,0x209e041800000059,0x915c031800000009\n"
".quad 0x01dc004800c00005,0x209c005000000010,0x085de45000cfc000,0x081de4280000001c\n"
".quad 0x061c862800000008,0x215e0480104000fe,0x431c031800000015,0x519c004800fffffd\n"
".quad 0x215e045000cfc000,0x671c861800000031,0x515c0080104101fc,0x021de45000cfc000\n"
".quad 0x51dc002800000008,0x025de45000000010,0x891c86280000001c,0x68dc8680104202fc\n"
".quad 0x435c0380104303fc,0x33dc234800c00005,0xa1dc23190ec000fc,0x215e045800c00080\n"
".quad 0x021de41800000035,0x04dde42800000018,0x50dc002800400080,0xa15c035000cfc000\n"
".quad 0x639c035800c00078,0x30dc004800ffff01,0x611c035000000010,0x72dc434800c00101\n"
".quad 0x025de44000000014,0x889c86280000000c,0xa41c0380104404fc,0xd2a4032027c00010\n"
".quad 0x211e044800000010,0x21de041800000011,0xc21c031800000039,0x04a5e44800000058\n"
".quad 0x015c002800400080,0x01dc005000000010,0x285c86500000001c,0x011de480104505fc\n"
".quad 0xb45c432800000018,0x80dc034800400090,0x825c034800c08000,0x831c034800c10008\n"
".quad 0x835c034800c23f04,0x839c034800c2bf00,0x83dc034800c33f08,0x855c034800c38104\n"
".quad 0xa7a4034800c40100,0x401c864800c48000,0x55dc0380104707fc,0x92dc0320324000e1\n"
".quad 0xe5640320324000e0,0x329c0320324000e1,0xc25c0320324000e0,0xd21c0320324000e0\n"
".quad 0xe75c0320324000e0,0xf69c0320324000e0,0x679c8620324000e0,0x00dde480104909fc\n"
".quad 0xa19c23280000001c,0xa1dc035800c00080,0x011de45800c00078,0xa39c032800000008\n"
".quad 0x619c432027c00010,0xb1dc23400000001c,0xb29c035800c00080,0x63dc435800c00078\n"
".quad 0x47dc864800400090,0xb31c0380104606fc,0x711c432027c00010,0x915c234000000028\n"
".quad 0x919c035800c00080,0x435c435800c00078,0x929c034800400090,0x511c432027c00010\n"
".quad 0x81dc234000000018,0x815c035800c00080,0x281c865800c00078,0x42dc4380104808fc\n"
".quad 0x821c034800400090,0x709c432027c00010,0xd0dc234000000014,0xd11c035800c00081\n"
".quad 0x225c435800c00079,0xd19c034800400090,0x309c432027c00011,0xa0dc234000000010\n"
".quad 0xa15c035800c00081,0x21dc435800c00079,0xa11c034800400090,0x309c432027c00011\n"
".quad 0x70dc234000000014,0x769c035800c00081,0x215c435800c00079,0x709c034800400090\n"
".quad 0x30dc432027c00011,0x54e4234000000068,0x55e4035800c00081,0x30dc435800c00079\n"
".quad 0x54a4034800400090,0x34e4432025c00011,0x055c85400000005d,0xe69c858400000001\n"
".quad 0x34e4438400000000,0xc75c854800400091,0xa95c858400000000,0x899c858400000000\n"
".quad 0x69dc858400000000,0x4a1c858400000000,0x2a5c858400000000,0x2aa4858400000000\n"
".quad 0x0081e78400000001,0x83a1004000003c40,0xa3e1005000000071,0x5320005000000075\n"
".quad 0x65a1005000000082,0xa26000500000009e,0xd1e0005000000069,0xe420005000000075\n"
".quad 0xf3e0005000000090,0xc3a0005000000090,0x4361005000000098,0x6321005000000056\n"
".quad 0x85e00050000000a5,0x82a0003012f02001,0xa5a1005800f02001,0xf3e000300ef00001\n"
".quad 0xe3a000500000008c,0xa1a0005000000078,0xd360005000000075,0x042100500000008c\n"
".quad 0xc5e000500000008d,0x52a000302ef02001,0x65a0003014d05001,0xf3e1005000000091\n"
".quad 0x8160005000000088,0xe3a0005000000061,0x61a000500000009c,0xd360005000000090\n"
".quad 0x71e0005000000088,0x042100500000001d,0xa2a0005000000089,0x65a0003014f02001\n"
".quad 0xf3e100500000008d,0xc520005000000084,0x5161005000000071,0xe3a1005000000068\n"
".quad 0x61a00050000000a0,0xd36000500000008c,0x0420005000000084,0x71e0005000000085\n"
".quad 0xc2a0005000000090,0x65a0003014f02001,0xf3e0005000000089,0x5160005000000098\n"
".quad 0xe3a1005000000050,0x61a000500000007c,0xd360005000000088,0x0420005000000080\n"
".quad 0x71e0005000000081,0x546000500000008c,0xd2a0005000000096,0x65a0003014f02001\n"
".quad 0xf3e1005000000085,0x516100500000009c,0xe3a1005000000074,0x61a00050000000a4\n"
".quad 0xd360005000000084,0x0421005000000098,0x71e0005000000079,0xd4e0005000000088\n"
".quad 0x40a1005800d02801,0xa2a000500000008e,0x65a0005000000090,0xf3e0005000000045\n"
".quad 0x51600050000000a4,0xe3a1005000000090,0xc4a0005000000000,0x61a1005800d02801\n"
".quad 0xd360005000000094,0x0420005000000078,0x75e000500000007d,0xa4e0005000000084\n"
".quad 0x2260003026f02801,0xa2a0005000000088,0x61e100500000008c,0xf3e1005000000081\n"
".quad 0x51600050000000a8,0xe3a100500000008c,0x84a00050000000a8,0x61a1003024f02801\n"
".quad 0xd360005000000080,0x042100500000009c,0x0221005000000001,0x80e000500000007a\n"
".quad 0x92610050000000a2,0xc320005000000084,0xa2a00050000000a8,0x71e1005000000088\n"
".quad 0xf5a0005000000078,0x5160003026400014,0xe4e0005000000088,0x61a1005800000038\n"
".quad 0x7460005000000078,0xd360005000000045,0x0ae000500000007c,0x8221003024400015\n"
".quad 0xa2a000500000007c,0x0262005000000084,0xf32200301200003d,0x74a0003018000038\n"
".quad 0xf5e000500000000c,0x516000580000003c,0xf3e0005000000084,0x01e000302600003c\n"
".quad 0x61a1005000000041,0xd3600050000000a0,0x82200050000000a4,0x52a0005000000000\n"
".quad 0x5161003014f02002,0x71e1005000000094,0x61a100301e000040,0xd3e000500000007c\n"
".quad 0x0222005000000000,0x04e0003010000039,0xa36000302e000041,0x5160005000000080\n"
".quad 0xe422005000000080,0x22a100302e000038,0x65e100500000007d,0xd4a0005000000000\n"
".quad 0x8120005000000098,0x1460005800d02802,0x6160005000000081,0x736100300af00002\n"
".quad 0x2420005000000041,0x5120005000000079,0x6460003008f02802,0x54a0003022f00002\n"
".quad 0xf160005000000078,0x03e00050000000a8,0xe12000500000009d,0x1420003008400014\n"
".quad 0xe3a0005000000079,0x7460003026000038,0x83e0003024f00002,0x54a100301ef02002\n"
".quad 0x1461005000000038,0xf1600050000000a1,0x73e000500000007c,0x1420003020f00002\n"
".quad 0x516000500000007d,0xf3e00050000000a4,0x942000500000000c,0x50e0003020f00002\n"
".quad 0xf160005000000000,0x03e000500000007c,0x30e0005000000001,0x91600050000000a8\n"
".quad 0xa3e000300af00002,0xe0e000301ef00002,0x02e1e43006400004,0xf4610028004000c0\n"
".quad 0x31e002500000001c,0x51600030ee082084,0xb520005000000000,0x73e0005800400034\n"
".quad 0xa420005800f02000,0x73a000300af00002,0xb1a0025800d05000,0x11600030f3333336\n"
".quad 0x23e0005800000051,0x23a000301e400055,0x25e000301c400045,0x10e000300e400075\n"
".quad 0x64a000300a000051,0x51e100301ef02000,0x64e0005000000039,0x03a002301ed02000\n"
".quad 0x21a00030f18e38e5,0x34e000500000000d,0x656002500000000d,0xe0e00030f3333335\n"
".quad 0xeb2000300cf02000,0x54e0003026f02000,0x81a100301ef02001,0x562000500000000d\n"
".quad 0x44a002301ed02001,0xc0e10030f3333334,0x05600050000000b1,0x14e200301c400065\n"
".quad 0x1b22003026000051,0x2720003030000051,0x24a000301ef02001,0xb3e000301ed02001\n"
".quad 0xa2a1005800400024,0x34e0005000000000,0xcb20005000000055,0x1b62005000000056\n"
".quad 0xa620023038000051,0xd4e00030f4aaaaac,0xd72000302600003c,0xdb2000305800003c\n"
".quad 0x84e0005000000056,0x8720003026f00001,0xa620003038f00001,0xdb22003030400094\n"
".quad 0x1b6200305800003c,0xa4e1003024000051,0xc6a000500000004d,0xd560005000000062\n"
".quad 0xd4a1005000000056,0x5961005000000071,0xd6a200500000006a,0xb72000302a00003c\n"
".quad 0xbb2200302e400086,0xa6a000302e400086,0x6560005000000061,0x65e200302e400085\n"
".quad 0x8a2100302e400085,0x662000500000006a,0x6ae0003038400085,0x66a2003058400085\n"
".quad 0x65a2003058400085,0x1760003038400085,0x1620003030000051,0x15a0003056000051\n"
".quad 0x076000302c000051,0x16a000303a400065,0x05a0003034000051,0xd76000302c400065\n"
".quad 0x062000303a00003c,0xd5a0003030400065,0x06a000302c00003c,0xa760003034400065\n"
".quad 0xa5a000303a400094,0xd62000302c400094,0xd6a000303000003c,0x9ae000303400003c\n"
".quad 0x976200303acfa000,0x35a300302ccfa000,0xa620005000000092,0xa6a0003030400094\n"
".quad 0x0b61003034400094,0x65a000500000009a,0x9622005000000089,0x96a0003030cfa000\n"
".quad 0x2261003034cfa000,0xd0a0005000000088,0x65a000500000007a,0x4b60005000000085\n"
".quad 0x20a100302a400084,0x65a000500000009c,0x5b60005000000099,0x20a100305af00000\n"
".quad 0x65a100500000007c,0x926000500000009d,0x20a0005000000084,0x65a00050000000a4\n"
".quad 0xeb600050000000a5,0x926100305af00000,0x20a1005000000080,0x65a1005000000000\n"
".quad 0xcb600050000000a9,0x926000305acfa000,0x20a0005000000078,0x6b600050000000a8\n"
".quad 0x926100305acf8001,0x4be200500000007c,0x2b62003038400084,0x926000305acf8000\n"
".quad 0x4ba0005000000000,0x69a1003058400084,0x4b600050000000b6,0x4c22003038400084\n"
".quad 0x9ae0003058400084,0x1b60003056cf8000,0x1be000305a000051,0x1ba000305e000051\n"
".quad 0x1c2000305c000051,0x6ae2003060000051,0x4522003056cf8001,0x446000302a400084\n"
".quad 0x456200302e400084,0xb12003302e400084,0x4ae10020324000e1,0x59200050000000ae\n"
".quad 0x5460003028f00000,0x5b20003022f00000,0x416023302af00000,0x4520035800c00080\n"
".quad 0x0721e45800c00078,0xe9200028004000a0,0x5160433048f00000,0x4120034000000050\n"
".quad 0xb520032039c00010,0xc922004800c04001,0x5160433048cfa000,0x45200348004000b0\n"
".quad 0xb2e00020324000e1,0x41e0855800cfa000,0x6920009400000000,0x9622003048cf8001\n"
".quad 0x96a2003030cf8000,0x4120233034cf8000,0x4160035800c00081,0xb1e0035800c00079\n"
".quad 0x9760004800c08001,0x416043303acf8000,0x4120034000000014,0x7520032039c00011\n"
".quad 0x66a00020324000e0,0x5160433034cf8001,0x41e02348004000b0,0x4560035800c00081\n"
".quad 0x41a0855800c00079,0x28a1009400000000,0x71e043500000006a,0x41a0034000000054\n"
".quad 0xb120032039c00011,0xb160034800c0c001,0x71e0434800c10001,0x41200348004000b0\n"
".quad 0x55200320324000e0,0x64e08520324000e0,0x4560239400000000,0x45e0035800c00080\n"
".quad 0x4120035800c00078,0x41a0232039c00010,0x5160435800c00081,0x41e003400000005d\n"
".quad 0xb4e0035800c00079,0x5160434800c14001,0x61e04348004000b0,0x41a003400000001c\n"
".quad 0x40e0852039c00011,0xb520039400000000,0x71e0434800c18001,0x35600348004000b0\n"
".quad 0x45200320324000e1,0xb0e00320324000e1,0x64a0854800c1c001,0x4120239400000000\n"
".quad 0x4160035800c00081,0x30e0035800c00079,0x51a02320324000e0,0x51e0035800c00081\n"
".quad 0x44a0435800c00079,0x3120234000000014,0x3160035800c00080,0x65e0435800c00078\n"
".quad 0xb1a003400000001c,0x44e0434800c20001,0x0120004000000014,0x016000305a400065\n"
".quad 0x01e000305e400065,0x0b6000305c400065,0x6420033060400065,0xe1a00020324000e0\n"
".quad 0xeba0003022f00000,0x03a0233058f00000,0x0460035800c00081,0xd122005800c00079\n"
".quad 0xdb2200300800003c,0xe46043300a00003c,0xb3a0034000000044,0xd1e2004800c24001\n"
".quad 0xdb6200300e00003c,0xe3a003305a00003c,0xc1a20020324000e0,0xa12200300ccfa000\n"
".quad 0xe160233008400094,0xe360035800c00080,0xab22005800c00078,0xa1e2003058400094\n"
".quad 0x53e043300e400094,0xb360034000000034,0xc160004800c28001,0xab6200305ccfa000\n"
".quad 0xd32003305a400094,0x81200020324000e0,0x8b2200300800002c,0xc2a023305800002c\n"
".quad 0xc360035800c00080,0x81e2005800c00078,0x8ba000300e00002c,0xa36043305a00002c\n"
".quad 0xb2a0034000000034,0x6be2004800c2c001,0x21a000300ccf8001,0xa2a0033048cf8000\n"
".quad 0x6b620020324000e0,0x6620003030cf8001,0xa22023303acf8001,0xa2e0035800c00080\n"
".quad 0x65a2005800c00078,0x992100300acf8001,0x82e043500000001a,0xb22003400000002c\n"
".quad 0x9762004800c30001,0x9a60003008cf8000,0x822003300ecf8000,0x9c220020324000e0\n"
".quad 0x9ba0003058cf8000,0x816023305ccf8000,0x81a0035800c00080,0x2260005800c00078\n"
".quad 0x2b2000302ccf8000,0x51a043303acf8000,0xb160034000000018,0xaaa1004800c34001\n"
".quad 0x2760005000000026,0x5160033052cf8000,0x2be20020324000e0,0x226200305ecf8000\n"
".quad 0x5120233060cf8000,0x51e0035800c00080,0x2a62005800c00078,0xf7e100305ccf8000\n"
".quad 0x41e0435000000025,0xb12003400000001c,0x1861004800c38001,0xb620035000000062\n"
".quad 0x4120034800c40001,0x38e10020324000e0,0x86200350000000b6,0x45a02320324000e1\n"
".quad 0x40a0035800c00080,0xe7a1005800c00078,0x0821005000000075,0x60a04350000000b2\n"
".quad 0x55a0034000000009,0xb560032039c00011,0x8b20034800c3c001,0x75e0435800c00079\n"
".quad 0x45200348004000b1,0x56a0032039c00011,0x6ae08520324000e1,0x2560439400000001\n"
".quad 0x34a00348004000b1,0xa0e0232039c00010,0xab60035800c00081,0x34e0435800c00079\n"
".quad 0x04200348004000b1,0x30e0432039c00011,0x8b602340000000b4,0x1460435800c00081\n"
".quad 0xe3a00348004000b1,0xdb20432039c00010,0x48e08540000000b2,0xf3e0439400000001\n"
".quad 0xc3200348004000b0,0x28a0852039c00010,0x0860859400000001,0xd360439400000001\n"
".quad 0xa2a00348004000b0,0xe960852039c00010,0x79e1009400000000,0xb2e04350000000be\n"
".quad 0x82200348004000b0,0xc820852039c00010,0xa9a0859400000000,0x6260439400000000\n"
".quad 0x51a00348004000b0,0xb160032039c00010,0xb6e0034800c44001,0x71e0434800c48001\n"
".quad 0x41200348004000b0,0x5760032039c00010,0xbba00320324000e0,0x21604320324000e1\n"
".quad 0xa0a00348004000b0,0xd6a0232039c00011,0xdb60035800c00081,0x30e0435800c00079\n"
".quad 0x86200348004000b0,0xa6e0432039c00011,0x87a08540000000b5,0xc660439400000000\n"
".quad 0xd6a00348004000b2,0xe760232039c00011,0xeb20035800c00082,0xb6e0435800c0007a\n"
".quad 0xe7200348004000b1,0xdb20432039c00012,0x69e08540000000b1,0x0021009400000000\n"
".quad 0x4a208550000000a4,0xc760439400000000,0x27e08548004000b2,0x8920859400000000\n"
".quad 0xa020859400000001,0xcaa0859400000001,0x00a1e79400000001,0x46c0034000001240\n"
".quad 0x0ac1e44800000059,0xb0800328004000a0,0xb180034800c04001,0xb1c0034800c10001\n"
".quad 0x2140034800c14001,0xb0c00320324000e0,0xb200034800c08001,0x6080034800c18001\n"
".quad 0x75800320324000e0,0x51802320324000e0,0x51c0035800c00080,0x30c0035800c00078\n"
".quad 0x85000320324000e0,0xb1000320324000e0,0x5200034800c0c001,0x6140432057c00010\n"
".quad 0x31c023400000001c,0x32c0035800c00080,0x4100035800c00078,0x52404320324000e0\n"
".quad 0x31800348004000b0,0x71c0432057c00010,0x414023400000002c,0x4540035800c00080\n"
".quad 0x71c0435800c00078,0x41000348004000b0,0x5140432057c00010,0x20c0234000000054\n"
".quad 0x24c0035800c00080,0x5140435800c00078,0x20800348004000b0,0x30c0432057c00010\n"
".quad 0x62c023400000004c,0x6540035800c00081,0xb480035800c00079,0x30c0434800c1c001\n"
".quad 0xb5404348004000b0,0x6580034000000054,0x44c0232057c00011,0x42c0035800c00081\n"
".quad 0xb380035800c00079,0x2480034800c24001,0xb4000320324000e1,0xb300034800c20001\n"
".quad 0x55c0434800c28001,0x34c04348004000b1,0x450003400000002d,0x8700852057c00011\n"
".quad 0xe380039400000000,0x2b002320324000e0,0x2b40035800c00081,0x6740855800c00079\n"
".quad 0x0400039400000000,0xc3000320324000e1,0xb2800320324000e0,0x3540434800c2c001\n"
".quad 0xe2402348004000b1,0xe700035800c00080,0xc4c0435800c00078,0x02002340000000b6\n"
".quad 0x0b80035800c00081,0xc1c0235800c00079,0xcb00035800c00080,0xa280035800c00078\n"
".quad 0x24800320324000e0,0x9740432057c00011,0x8180434000000070,0x72404340000000b8\n"
".quad 0xa2002340000000b0,0xa1c0035800c00080,0xb440035800c00078,0x34c0434800c30001\n"
".quad 0x04000348004000b1,0x8200432057c00011,0x11c003400000001c,0xb3c00320324000e1\n"
".quad 0x6440434800c34001,0xe3800348004000b0,0xf180032057c00010,0xb3400320324000e0\n"
".quad 0xd3c0434800c38001,0xc3000348004000b1,0xdb00032057c00010,0xb2c00320324000e0\n"
".quad 0x9340434800c3c001,0xa2800348004000b0,0x4600852057c00010,0x7240239400000000\n"
".quad 0x7b40035800c00080,0x2680855800c00078,0xb740039400000000,0xb7000320324000e0\n"
".quad 0x82c0434800c40001,0x72000348004000b0,0x9140432057c00010,0xc1c02340000000b4\n"
".quad 0xc600035800c00082,0xd0c0235800c0007a,0xd240035800c00081,0xc700035800c00079\n"
".quad 0x61002320324000e1,0x6b80035800c00080,0x7080435800c00078,0x30c0434000000060\n"
".quad 0xc1c0234000000024,0xc600035800c00081,0x5240435800c00079,0x41004348004000b0\n"
".quad 0x61800340000000b8,0x7680432057c00010,0xb140034000000060,0x41c0434800c44001\n"
".quad 0xc1000348004000b0,0x5b00032057c00012,0xb6c00320324000e0,0x2140434800c48001\n"
".quad 0xd0800348004000b0,0xc740232057c00011,0xcb40035800c00082,0x30c0435800c0007a\n"
".quad 0xc6000348004000b0,0x6880852057c00011,0xb700039400000001,0x48408520324000e1\n"
".quad 0xa640439400000001,0x29008548004000b1,0xd6c0439400000001,0xc6800340000000b5\n"
".quad 0x08c0852057c00012,0xc740239400000001,0xcb00035800c00081,0xea00855800c00079\n"
".quad 0xc000859400000000,0xb6c0439400000000,0xaa808548004000b1,0xc700039400000000\n"
".quad 0xd740432057c00011,0x87c08540000000b1,0x6a40859400000000,0x4940859400000000\n"
".quad 0xd740439400000000,0x27808548004000b1,0x89c0859400000000,0xa800859400000001\n"
".quad 0xc980859400000001,0x001de79400000001,0x0000008000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0xd5555540f1451400\n"
".quad 0xe38e393daaaaab3f,0xb2cb2dbe73cf3d3c,0x8208203c638e39bd,0x2aaaab3ccccccd3d\n"
".quad 0x080204000004013d,0x000009000000ce00,0x0000c90008020400,0x0802040000000400\n"
".quad 0x000003000000c800,0x0000cc0008020400,0x0802040000000800,0x000002000000c700\n"
".quad 0x0000c50008020400,0x0802040000000100,0x000000000000c300,0x0000d30008020400\n"
".quad 0x0802040000000700,0x000006000000d100,0x0000ca0008020400,0x080a040000000500\n"
".quad 0x2400200000006100,0x0c17040024190300,0x2000040000000000,0x0c17040011f00000\n"
".quad 0x1800030000000000,0x0c17040021f00000,0x1000020000000000,0x0c17040011f00000\n"
".quad 0x0800010000000000,0x0c17040021f00000,0x0000000000000000,0x080d040021f00000\n"
".quad 0x0000020003002400,0x00440400005de400,0x0000009800dc0428,0x00000088011c042c\n"
".quad 0x0000009c015c042c,0x0000008c019c042c,0x00000094001c042c,0x00000084009c042c\n"
".quad 0x08400030335ca32c,0x0c400040581ca320,0x04400020065ca320,0x00000035201e0420\n"
".quad 0x00c0001a061c0318,0x00fffffd909c0360,0x00cfc000001c0048,0x0000006120de0450\n"
".quad 0x00000009209e0418,0x0000000c015c0018,0x00cfc000221c0050,0x00c00005909c0350\n"
".quad 0x00000014025de448,0x104000fc87dc8628,0x00000009209e0480,0x00cfc000211c0018\n"
".quad 0x00fffffcd09c0350,0x00000009209e0448,0x104101fc41dc8618,0x00cfc000209c0080\n"
".quad 0x0000000c215c0050,0x00000014025de450,0x104202fc855c8628,0x104303fc451c8680\n"
".quad 0x00c00004d19c0380,0x0ec000fe01dc2348,0x00c0010182dc0319,0x00000019209e0448\n"
".quad 0x00400080085de418,0x0040008007a1e428,0x00cfc000209c0028,0x00ffff01831c0350\n"
".quad 0x0000002c62a00348,0x0000000c225c0048,0x00000035809c0350,0x00000024015de448\n"
".quad 0x104404fc40dc8628,0x00000031219e0480,0x0000002d215e0418,0x324000e0239c0318\n"
".quad 0x00c07ffc23dc0320,0x00c10004241c0348,0x00c23f00245c0348,0x00c2befc24dc0348\n"
".quad 0x00c33f0425dc0348,0x104505fc831c8648,0x00c48000a7600380,0x0000001402dc0048\n"
".quad 0x00000010029de450,0x00000018015c0028,0x00c00080e89c2350,0x00c00078e95c0358\n"
".quad 0x00c38100225c0358,0x00c400fc271c0348,0x43c00010e39c0348,0x324000e0f19c0320\n"
".quad 0x104707fca01c8620,0x0000009623dc4380,0x324000e1049c0340,0x324000e1159c0320\n"
".quad 0x324000e136dc0320,0x324000e1769c0320,0x324000e0991c0320,0x324000e1c8dc0320\n"
".quad 0x00000020029de420,0x324000e1d8a00328,0x104909fc411c8620,0x00000014025de480\n"
".quad 0x00c00080615c2328,0x00c00078645c0358,0x00400090f3dc4358,0x43c00010641c0348\n"
".quad 0x00c0008124dc2320,0x00000044515c4358,0x00c0007925dc0340,0x104606fca19c8658\n"
".quad 0x00400090545c4380,0x43c00011249c0348,0x0000005d315c4320,0x00c00081629c2340\n"
".quad 0x00c0007962dc0358,0x0040009054dc4358,0x43c00011659c0348,0x00c00081b75c2320\n"
".quad 0x0000002ca15c4358,0x104808fc825c8640,0x00c00079b21c0380,0x0040009055dc4358\n"
".quad 0x43c00011b71c0348,0x00000021d15c4320,0x00c00081a21c2340,0x00c00079a29c0358\n"
".quad 0x00400090575c4358,0x43c00011a69c0348,0x00000028815c4320,0x00c00082421c2340\n"
".quad 0x00c0007a42dc0358,0x0040009056dc4358,0x43c00012429c0348,0x0000002c815c4320\n"
".quad 0x00c00082321c2340,0x00c0007a395c0358,0x0040009052dc4358,0x43c00012391c0348\n"
".quad 0x00000094815c4320,0x00c0008222202340,0x00c0007a28600358,0x0ec000fd99dc2358\n"
".quad 0x0e0000fcd3dc2319,0x0ec000fcd5dc2319,0x00400090595c4319,0x3dc0001229a00348\n"
".quad 0x0000008481604320,0x0e0000fe07dc2340,0x2400004449dc0419,0x0040009059e0430c\n"
".quad 0x00000000e39c8548,0x2000004c49dc0484,0x00000001079c850c,0x0000000124dc8584\n"
".quad 0x00000001685c8584,0x00000001c71c8584,0x00000001a6dc8584,0x00000000a89c8584\n"
".quad 0x00000002415c8584,0x0000000268e08584,0x000000fc021de484,0x000000a000000728\n"
".quad 0x000000600011e760,0x0e0000fd99dc2340,0x000000000031f419,0x0000000c021df240\n"
".quad 0x00000004021df218,0x0ec0000489dc2318,0x000040200011e719,0x0ec0000c89dc2340\n"
".quad 0x000003a000000719,0x000000000031f460,0x0000014000000740,0x000000a00005e760\n"
".quad 0x000000000029f440,0x0000001408dde440,0x0000007006dde428,0x0000005000dde428\n"
".quad 0x0000007804ddf428,0x0000008c015de428,0x0000006c071de428,0x0000000c051de428\n"
".quad 0x0000004c079df428,0x0000014000000728,0x000000a0000de760,0x000000000021f440\n"
".quad 0x00000010001de440,0x00000070015de428,0x0000006c08dde428,0x00000084089df428\n"
".quad 0x00000000011de428,0x00000014071de428,0x0000008c06dde428,0x00000088085df428\n"
".quad 0xf38e38e4019de228,0x0e400007f7dc0018,0x06400014655c0030,0x28400014631e0030\n"
".quad 0x000000fc625c0030,0x080000fc619c1030,0x0000001df61d0030,0x00000026129c0050\n"
".quad 0x0000004de75d0050,0x00000055895c0050,0x0000006dca5d0050,0x00000070a61c0050\n"
".quad 0x0000007df35c0050,0x00d028013a1c0050,0x00000079e81c0058,0x0000004d349c0050\n"
".quad 0x00f02001f59c0050,0x0000004de41c0058,0x00000055d91c0050,0x00000016929d0050\n"
".quad 0x00000011861c0050,0x0000001c7a9c0050,0x00000078d35d0050,0x50f02801e75c0050\n"
".quad 0x40f02001fa5c0030,0x24f00001ea1d0030,0x2cd05000e59c0030,0x00000055041c0030\n"
".quad 0x00000052595d0050,0x00000052491c0050,0x0000006d861c0050,0x000000a8d35c0050\n"
".quad 0x52f020007a5c0050,0x0000003955dd0030,0x000000568a1c0050,0x2cf02001e59c0050\n"
".quad 0x00000051041c0030,0x0000000e595d0050,0x0000000e491d0050,0x00000089861d0050\n"
".quad 0x0000004a949c0050,0x0000004cd35d0050,0x0000005175dc0050,0x000000528a1c0050\n"
".quad 0x2cf02000759c0050,0x0000000d041c0030,0x00000032595c0050,0x00000032491d0050\n"
".quad 0x00000019861d0050,0x00000054d35c0050,0x00000055249c0050,0x0000000d75dc0050\n"
".quad 0x0000000e8a1c0050,0x2cf02001359c0050,0x00000031041c0030,0x00000026595c0050\n"
".quad 0x00000072491c0050,0x00000015861d0050,0x00000050d35c0050,0x00000051249c0050\n"
".quad 0x0000008619dc0050,0x0000003175dc0050,0x000000328a1c0050,0x00000051569d0050\n"
".quad 0x00000055659c0050,0x00000085041d0050,0x00000012595d0050,0x0000006e491d0050\n"
".quad 0x00000001861d0050,0x0000000cd35c0050,0x0000000d249c0050,0x0000002575dc0050\n"
".quad 0x0000009e8a1c0050,0x0000000da81c0050,0x00000051659c0050,0x00000025041d0050\n"
".quad 0x0000001a595c0050,0x00000016491c0050,0x0000008d861d0050,0x00000010921d0050\n"
".quad 0x00000030d35c0050,0x000000312a5c0050,0x0000007175dc0050,0x00000026849d0050\n"
".quad 0x00000032081d0050,0x0000008ca29c0050,0x0000000d659c0050,0x00000011041d0050\n"
".quad 0x00000002595d0050,0x0000008e491d0050,0x000000618a1c0050,0x00d02800799c0058\n"
".quad 0x00000018821d0058,0x00000084d35d0050,0x0000001175dc0050,0x0000009e99dc0050\n"
".quad 0x00000031659c0050,0x00000089041d0050,0x3a400036475c0050,0x40000092581e0030\n"
".quad 0x14000062429e0030,0x000000924a5c0030,0x500000924a9c0058,0x4cf02801f99c0030\n"
".quad 0x00000000821c0030,0x00000024d35c0050,0x00000096591c0050,0x0000006d75dc0050\n"
".quad 0x2cf02002159c0050,0x000000190a1d0030,0x00d02802245c0050,0x4c400036599c0058\n"
".quad 0x10000062521e0030,0x1af00001c41c0030,0x54000096491d0030,0x0000001975dc0030\n"
".quad 0x52000096595c0050,0x52000061835e0030,0x000000256a5c0030,0x22f02802145c0050\n"
".quad 0x0000001575dc0030,0x000000028a9d0050,0x000000729a1c0050,0x22400035845c0050\n"
".quad 0x0000000175dc0030,0x4a000061861c0050,0x00000012895c0030,0x000000110a1c0050\n"
".quad 0x0000002679dc0050,0x0000008d741c0050,0x0000006e55dc0050,0x4ef00001c9dc0050\n"
".quad 0x50f00001ba1c0030,0x2ef02002295c0030,0x0000001279dc0030,0x0000006105dd0050\n"
".quad 0x0000001a541c0050,0x0000008a23dc0050,0x00000011249d0050,0x4ef00001b95c0050\n"
".quad 0x0000008a8a1d0030,0x00000015041c0050,0x0000003d249c0050,0x0000003e595c0050\n"
".quad 0x0000001a89dc0050,0x0000000103dc0050,0x0000001a541c0050,0x4ef0000059dc0050\n"
".quad 0x0000008cf3dc0030,0x004000c002dde450,0x00000002795c0028,0x1e40002583dc0050\n"
".quad 0x00400054bb9c0030,0x4af00002395c0058,0xee082084f61c0230,0x20f00000541c0030\n"
".quad 0x000000925b5d0030,0x00d0500183dc0050,0x00f02001891c0058,0xf3333336659c0258\n"
".quad 0x1e4000657a1c0030,0x00000001041c0030,0x000000bad95c0050,0x4840007573dc0058\n"
".quad 0x30400095791c0030,0x20f00002341c0030,0x4a0000bad9dc0030,0x1ef0200165dc0030\n"
".quad 0x000000a0e61d0030,0x1ed020016a1c0050,0xf18e38e5039c0230,0x0000009d759c0030\n"
".quad 0x0000009e8a1c0050,0xf3333335d5dc0250,0x2cf02000e59c0030,0x50f02000ea1c0030\n"
".quad 0x00000019249d0030,0xf333333519dc0250,0x00000059f59d0030,0x1ef0200177dc0050\n"
".quad 0x1ed020017a5c0030,0x00000036a35d0030,0x000000a075dd0050,0x1ef020027a9c0050\n"
".quad 0x1ed020027a1c0030,0x0000000121dd0030,0x1c40008509dc0050,0x3e0000bad49e0030\n"
".quad 0x520000bada5e0030,0x00400044b3dc0030,0x0000009d249c0058,0x0000009e9a5c0050\n"
".quad 0x540000bada9e0050,0xf4aaaaac77dc0230,0x2400003cd49c0030,0x5200003cda5c0030\n"
".quad 0x0000009eaa9c0030,0x24f00001f49c0050,0x52f00001fa5c0030,0x3e4000b477dc0030\n"
".quad 0x5400003cda9e0030,0x500000bada1e0030,0x00000049e49d0030,0x0000007ea79c0050\n"
".quad 0x0000009e89dc0050,0x484000a66b1e0050,0x0000007a179d0030,0x4e00003cd85e0050\n"
".quad 0x484000a66a9c0030,0x484000a5d9dc0030,0x0000007e185c0030,0x484000a5da1e0050\n"
".quad 0x584000a5d91c0030,0x00000086285d0030,0x584000a5d89e0050,0x544000a5d7dc0030\n"
".quad 0x544000a5d99e0030,0x480000bad75c0030,0x440000bad91c0030,0x4c0000bad89c0030\n"
".quad 0x3e0000bad7dc0030,0x3a400085075c0030,0x44400085089c0030,0x3e40008507dc0030\n"
".quad 0x48400085091c0030,0x4400003cd89c0030,0x3e00003cd7dc0030,0x3a00003cd75c0030\n"
".quad 0x444000b4789c0030,0x4800003cd91c0030,0x3e4000b477dc0030,0x44cfa002099e0030\n"
".quad 0x3a4000b4775c0030,0x484000b4791c0030,0x00000055489f0030,0x000000a534dd0050\n"
".quad 0x3ecfa00207dc0050,0x3acfa002075e0030,0x48cfa002091c0030,0x000000709a5d0030\n"
".quad 0x0000000e289c0050,0x0000000da81d0050,0x00000012969c0050,0x00000032289c0050\n"
".quad 0x00000032081c0050,0x0000006da69d0050,0x00000072289c0050,0x4e4000a51a5c0050\n"
".quad 0x00000026081d0030,0x00000019a69d0050,0x0000006e289d0050,0x52f000025a5c0050\n"
".quad 0x00000012081c0030,0x00000015a69c0050,0x00000016289c0050,0x52f00000ea5c0050\n"
".quad 0x0000001a081d0030,0x00000001a69d0050,0x0000008e289d0050,0x52cfa000aa5c0050\n"
".quad 0x00000002081c0030,0x0000008da69c0050,0x52cf80022a5c0050,0x3ecf80020adc0030\n"
".quad 0x4e4000a519de0030,0x52cf8001a7de0030,0x56cf80022a5e0030,0x544000a51ade0030\n"
".quad 0x0000007dc7dd0030,0x000000a5571d0050,0x544000a51a5c0050,0x584000a51a9c0030\n"
".quad 0x584000a51b1e0030,0x504000a5155c0030,0x520000bada5c0030,0x560000badadc0030\n"
".quad 0x540000bada9c0030,0x580000badb1c0030,0x504000a51a1e0030,0x324000e02b9c0330\n"
".quad 0x4ef0000259dc0020,0x2af00002545c0030,0x50f000025a1c0030,0x00c00082e55c2330\n"
".quad 0x00c0007ae95c0358,0x524000850a5c0058,0x00cfa000b2dc0030,0x000000955bdc4358\n"
".quad 0x004000a0095de440,0x00c04000255c0328,0x3acf8002075e0048,0x4bc00012eb9c0330\n"
".quad 0x324000e1555c0320,0x48cf8002091e0020,0x004000b2fbdc4330,0x00c000795b5c0348\n"
".quad 0x4ccf8002099c0058,0x00000002e61c8530,0x3acf8002275e0094,0x00c00081561c2330\n"
".quad 0x4bc000115b9c0358,0x00c08000255c0320,0x000000b58bdc4348,0x00000075475d0040\n"
".quad 0x324000e1555c0350,0x004000b2fbdc4320,0x00c00081561c2348,0x00c000795b5c0358\n"
".quad 0x00000002e59c8558,0x4bc000115c1c0394,0x000000b58c5c4320,0x00c0c000255c0340\n"
".quad 0x004000b31c5c4348,0x324000e15b9c0348,0x00c10000255c0320,0x00000003049c8548\n"
".quad 0x00c00082e59c2394,0x00c0007ae61c0358,0x324000e1555c0358,0x4bc00012eb9c0320\n"
".quad 0x000000616bdc4320,0x00c00081549c2340,0x00c00079559c0358,0x004000b2fbdc4358\n"
".quad 0x4bc000115c1c0348,0x000000592c5c4320,0x00c14000249c0340,0x00c18000255c0348\n"
".quad 0x004000b31c5c4348,0x00000002e5dc8548,0x324000e1259c0394,0x0000000304dc8520\n"
".quad 0x324000e1561c0394,0x00c1c000249c0320,0x00c0008165dc2348,0x00c000796b5c0358\n"
".quad 0x00c0008184dc2358,0x00c00079855c0358,0x324000e1249c0358,0x000000b575dc4320\n"
".quad 0x00000055355c4340,0x00c0008124dc2340,0x00c000792b5c0358,0x00c200002c1c0358\n"
".quad 0x564000850b9c0048,0x000000b534dc4330,0x544000850b5c0040,0x584000850bdc0030\n"
".quad 0x324000e3041c0330,0x4ef00000ea9c0020,0x22f00000e9dc0030,0x50f00000eadc0030\n"
".quad 0x00c00081039c2330,0x00c00079045c0358,0x5200003cdb1e0058,0x5c00003cdb9e0030\n"
".quad 0x00000044e45c4330,0x00c24000239c0340,0x5a00003cdb5e0048,0x5e00003cdbde0030\n"
".quad 0x324000e0e39c0330,0x54cfa000aa1e0020,0x56cfa000aa5c0030,0x00c00080e35c2330\n"
".quad 0x00c00078e3dc0358,0x584000b47a9e0058,0x5a4000b47ade0030,0x0000003cd3dc4330\n"
".quad 0x00c28000235c0340,0x4ecfa000a9de0048,0x5c4000b47b1e0030,0x324000e0d35c0330\n"
".quad 0x5e4000b47b5e0020,0x5400002c8a9c0030,0x00c00080d1dc2330,0x00c00078d29c0358\n"
".quad 0x5800002c8b1e0058,0x5600002c8ade0030,0x00000028729c4330,0x00c2c00021dc0340\n"
".quad 0x5a00002c8b5c0048,0x50cf80022bdc0030,0x324000e071dc0330,0x4ecf80022b9e0020\n"
".quad 0x5ecf8001abdc0030,0x00c00080721c2330,0x00c0007872dc0358,0x48cf800229dc0058\n"
".quad 0x4ccf80022a1c0030,0x0000002c82dc4330,0x00c30000221c0340,0x52cf80022a5e0048\n"
".quad 0x000000bc589d0030,0x324000e0821c0350,0x5ccf8001ab9e0020,0x54cf80020a9e0030\n"
".quad 0x00c00080815c2330,0x00c00078899c0358,0x58cf80020c1e0058,0x56cf80020bdc0030\n"
".quad 0x00000098599c4330,0x00c34000215c0340,0x5acf80020b5c0048,0x000000b9b81d0030\n"
".quad 0x324000e0515c0350,0x4bc00011659c0320,0x54cf8001ab1c0020,0x00c00080591c2330\n"
".quad 0x00c0007856dc0358,0x004000b175dc4358,0x4bc00011851c0348,0x0000006e46dc4320\n"
".quad 0x52cf8001a91c0040,0x00c380002a5c0330,0x004000b1555c4348,0x4bc00011249c0348\n"
".quad 0x324000e29a5c0320,0x00000092391d0020,0x60cf8001aade0050,0x5ecf8001aa9c0030\n"
".quad 0x5acf8001a8de0030,0x00c000829b5c2330,0x00c0007a969c0358,0x004000b134dc4358\n"
".quad 0x4bc00011041c0348,0x0000006ad69c4320,0x00c3c0002b5c0340,0x004000b1145c4348\n"
".quad 0x4bc00010e39c0348,0x324000e2db5c0320,0x000000a0ca1d0020,0x004000b0f3dc4350\n"
".quad 0x0000009c39dd0048,0x4bc00010d31c0350,0x00c00082d0dc2320,0x00c0007ad61c0358\n"
".quad 0x004000b0a35c4358,0x4bc00010729c0348,0x0000006030dc4320,0x00c40000261c0340\n"
".quad 0x004000b0b2dc4348,0x4bc00010821c0348,0x324000e1861c0320,0x000000b09b1d0020\n"
".quad 0x000000ac6b9d0050,0x00c0008181dc2350,0x00c000798bdc0358,0x004000b2625c4358\n"
".quad 0x4bc00010519c0348,0x000000bc7bdc4320,0x000000a8499d0040,0x00c44000215c0350\n"
".quad 0x004000b1b1dc4348,0x4bc00012911c0348,0x324000e05a5c0320,0x00c4800026dc0320\n"
".quad 0x004000b1a15c4348,0x4bc00012d09c0348,0x00c00082969c2320,0x00c0007a9adc0358\n"
".quad 0x004000b030dc4358,0x4bc00011861c0348,0x00000001671c8520,0x324000e1ba9c0394\n"
".quad 0x00000001475c8520,0x000000ada6dc4394,0x004000b2f65c4340,0x0000000129dc8548\n"
".quad 0x4bc00012969c0394,0x000000010a1c8520,0x00c00082aa5c2394,0x00c0007aaadc0358\n"
".quad 0x00000000e79c8558,0x00000000cb1c8594,0x004000b1b6dc4394,0x00000000a7dc8548\n"
".quad 0x4bc00012aa9c0394,0x000000ae9adc4320,0x00000000899c8540,0x00000000681c8594\n"
".quad 0x0000008c001d0094,0x00000000485c8550,0x004000b2badc4394,0x000000002b9c8548\n"
".quad 0x00000001889c8594,0x00000001a01c8594,0x00000002a91c8594,0x00000880001de794\n"
".quad 0x00000035809c0340,0x004000e0021de448,0x004000f0039de428,0x324000e0209c0328\n"
".quad 0x00c00050829c0320,0x004000a003dde458,0x00c0008022dc2328,0x00000028e29d8358\n"
".quad 0x05c04000809c0340,0x00c00048835c0320,0x00000028b29c4358,0x00c0007822dc0348\n"
".quad 0x1fc000102b1c0358,0x00000034e35dc320,0x0000002ca09c4340,0x004000b02b5c4340\n"
".quad 0x59c100008b9c0348,0x00000002c1dc8520,0x00000036dbdc4394,0x5dc100008c1c0348\n"
".quad 0x00000002e4dc8520,0x00000036fc5c4394,0x61c100008a1c0348,0x0000000307dc8520\n"
".quad 0x000000371a5c4394,0x51c100008a9c0348,0x00000002879c8520,0x000000369adc4394\n"
".quad 0x55c10000861c0348,0x00000002a0dc8520,0x00000036b65c4394,0x31c10000891c0348\n"
".quad 0x00000001831c8520,0x00000035995c4394,0x49c10000839c0348,0x00000002455c8520\n"
".quad 0x0000003653dc4394,0x1dc10000859c0348,0x00000000e51c8520,0x00000034f5dc4394\n"
".quad 0x2dc10000829c0348,0x00000001689c8520,0x0000003572dc4394,0x15c10000841c0348\n"
".quad 0x00000000a01c8520,0x00000034b45c4394,0x21c10000899c0348,0x0000000108dc8520\n"
".quad 0x0000003519dc4394,0x4dc10000849c0348,0x00000002619c8520,0x0000003674dc4394\n"
".quad 0x25c10000809c0348,0x00000001215c8520,0x0000003530dc4394,0x05c10000879c0348\n"
".quad 0x00000000285c8520,0x0000003437dc4394,0x3dc10000861c0348,0x00000001e11c8520\n"
".quad 0x00000035f65c4394,0x31c10000839c0348,0x0000000186dc8520,0x0000003593dc4394\n"
".quad 0x1dc10000829c0348,0x00000000e25c8520,0x00000034f2dc4394,0x00000000a71c8548\n"
".quad 0x00000000001de794,0x0000000000000080,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0xf5c28f3d638e3900,0xd5555540f145143e,0xe38e393daaaaab3f\n"
".quad 0xb2cb2dbe73cf3d3c,0x8208203c638e39bd,0x2aaaab3ccccccd3d,0x080204000004013d\n"
".quad 0x0000010000008c00,0x00008a0008020400,0x0802040000000000,0x0000070000009a00\n"
".quad 0x0000980008020400,0x0802040000000600,0x0000050000009100,0x0000950008020400\n"
".quad 0x0802040000000900,0x0000040000009000,0x00008f0008020400,0x0802040000000300\n"
".quad 0x0000080000009300,0x00008e0008020400,0x080a040000000200,0x2000200000005c00\n"
".quad 0x0c17040020190300,0x1800030000000000,0x0c17040021f00000,0x1000020000000000\n"
".quad 0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x080d040021f00000,0x0000040006004800,0x00440400005de400,0x00000098009c0428\n"
".quad 0x0000008800dc042c,0x00000094001c042c,0x00000084079c042c,0x0640003024dca32c\n"
".quad 0x0000009c011c0420,0x0000008c009c042c,0x05f00000015de22c,0x3c400020071ca319\n"
".quad 0x0000004d20de0420,0x04400040419ca318,0x00000071209e0420,0x0acfc000311c0018\n"
".quad 0x00000019201e0430,0x0acfc000209c0018,0x00f07f00411c0030,0x0acfc000001c0050\n"
".quad 0x00f09f80209c0030,0x00000010411c0050,0x00c00018655c0358,0x00f07f00001c0060\n"
".quad 0x08000008209c0050,0x0000004d575c0330,0x00000c03ffdc8548,0x04000000009c00c9\n"
".quad 0x00400020001de430,0x384000e1d15c0328,0x8ed0600021dc0020,0x0a0000040fdc0320\n"
".quad 0xee0000ffffdc0420,0x00fffffdc09c0350,0x00cfc00030dc0048,0x0000005521de0450\n"
".quad 0x00000009209e0418,0x00c00005c11c0318,0x0000001c32dc0048,0x00cfc000209c0050\n"
".quad 0x0000002c065de450,0x00000008061de428,0x104000fd869c8628,0x00000011211e0480\n"
".quad 0x00fffffd321c0318,0x00cfc000411c0048,0x00000021221e0450,0x00000010029de418\n"
".quad 0x104101fca49c8628,0x00cfc000821c0080,0x0000001c825c0050,0x00000008021de450\n"
".quad 0x104202fc891c8628,0x00000010021de480,0x104303fc895c8628,0x00c00005339c0380\n"
".quad 0x0ec000fc63dc2348,0x00000010019de419,0x00000039221e0428,0x00c00101559c0318\n"
".quad 0x00ffff0155dc0348,0x00cfc000821c0048,0x00c00080525c2350,0x00c00078529c0358\n"
".quad 0x0000001c81dc0058,0x104404fc699c8650,0x00000008019de480,0x00400080041de428\n"
".quad 0x00c07ffdd21c0328,0x00c10005d2dc0348,0x00c23f01d31c0348,0x00c2befdd35c0348\n"
".quad 0x00c33f05d3dc0348,0x00c38101d51c0348,0x00c400fdd65c0348,0x104505fc68dc8648\n"
".quad 0x00000059219e0480,0x0000002896dc4318,0x00000058e4640340,0x0000001831dc0048\n"
".quad 0x00000010019de450,0x384000e0829c0328,0x0000005d225e0420,0x21c00010539c0318\n"
".quad 0x384000e0b2dc0320,0x384000e0c21c0320,0x104707fc67dc8620,0x00000024315c0080\n"
".quad 0x0000001c00dde450,0x384000e1459c0328,0x384000e0d19c0320,0x384000e0f5dc0320\n"
".quad 0x384000e1951c0320,0x00c00080a1dc2320,0x00c00078a25c0358,0x104606fc285c8658\n"
".quad 0x00400091b3dc4380,0x21c00010a31c0348,0x0000002470dc4320,0x00c00080b1dc2340\n"
".quad 0x00c00078b25c0358,0x00400090335c4358,0x21c00010b29c0348,0x00c00080865c2320\n"
".quad 0x0000002470dc4358,0x104909fc481c8640,0x00c00078811c0380,0x0040009032dc4358\n"
".quad 0x21c00010821c0348,0x00000011911c4320,0x0000001400dde440,0x00c0008061dc2328\n"
".quad 0x00c00078665c0358,0x00400090425c4358,0x21c00010619c0348,0x104808fc289c8620\n"
".quad 0x00000064709c4380,0x00c0008170dc2340,0x00c00079715c0358,0x0040009021dc4358\n"
".quad 0x21c00011711c0348,0x00000014309c4320,0x00c0008160dc2340,0x00c0007965dc0358\n"
".quad 0x00400090215c4358,0x21c00011609c0348,0x0000005c30dc4320,0x00c4800114640340\n"
".quad 0x00c0008145dc2348,0x00c00079461c0358,0x0040009030dc4358,0x384000e115a40348\n"
".quad 0x21c00011441c0320,0x00000000e51c8520,0x00000061745c4384,0x004000800665e440\n"
".quad 0x00c0008165e42328,0x00c0007966240358,0x00400091145c4358,0x33c0001163a40348\n"
".quad 0x0000006173e44320,0x00000000c6dc8540,0x00000000a2dc8584,0x00400090f3e44384\n"
".quad 0x0000000089dc8548,0x000000006a1c8584,0x000000004a5c8584,0x000000002a9c8584\n"
".quad 0x000000010adc8584,0x00000000eb248584,0x0000568000000784,0x00003cc00001e760\n"
".quad 0x00000069a21c0040,0x00000049a19d0050,0x0000002db1dd0050,0x0000008a709c0050\n"
".quad 0x00000049245c0050,0x000000a68b5d0050,0x00d02801261c0050,0x0000006c841d0058\n"
".quad 0x00000096411d0050,0x00f02001a5dc0050,0x0000009063dc0058,0x0000006db55c0050\n"
".quad 0x00000090729c0050,0x000000a0221c0050,0x00d02802a65c0050,0x000000aed1dd0058\n"
".quad 0x30f02801a09c0050,0x00000045045c0030,0x0000002cb59c0050,0x2ed05001461c0050\n"
".quad 0x000000984b5c0030,0x00000094f41d0050,0x00000052425d0050,0x0000002db4dc0050\n"
".quad 0x2af02001a55c0050,0x00000094a3dc0030,0x32f02802719c0050,0x00000080829c0030\n"
".quad 0x2cf00001b65d0050,0x0000008ed21d0030,0x30f02001b61c0050,0x00000094925c0030\n"
".quad 0x0000009134dc0050,0x2af020012b5c0050,0x00000099041d0030,0x00000091955c0050\n"
".quad 0x30f02001261c0050,0x00000098925c0030,0x0000009534dc0050,0x0000005ad59c0050\n"
".quad 0x0000002d145d0050,0x00000098f3dd0050,0x000000a4a29c0050,0x0000008d041c0050\n"
".quad 0x00000095555c0050,0x30f02000b61c0050,0x0000008c925c0030,0x0000009934dc0050\n"
".quad 0x00000091659c0050,0x00000091145c0050,0x0000008cf3dd0050,0x000000a8a29d0050\n"
".quad 0x00000089041c0050,0x00000099555c0050,0x00000091861c0050,0x00000088925c0050\n"
".quad 0x0000008d34dc0050,0x00000095659c0050,0x00000095145c0050,0x000000a0f3dc0050\n"
".quad 0x00000084a29d0050,0x00000081041d0050,0x0000009e735c0050,0x0000008d555c0050\n"
".quad 0x00000095861c0050,0x000000a0925c0050,0x0000009d34dd0050,0x00000099659c0050\n"
".quad 0x00000099145c0050,0x000000a4f3dd0050,0x000000aca29d0050,0x00000085065c0050\n"
".quad 0x00000082215d0050,0x00000035555c0050,0x00000099841c0050,0x00000080925c0050\n"
".quad 0x0000008934dd0050,0x0000008d661c0050,0x0000008d145c0050,0x000000acf3dc0050\n"
".quad 0x0000007ca29d0050,0x00000084515d0050,0x00000089559d0050,0x000000a4925c0050\n"
".quad 0x000000813bdd0050,0x00000035855c0050,0x000000b071dc0050,0x0000009d145d0050\n"
".quad 0x0000007d935d0050,0x000000b0f4dd0050,0x000000b0a29d0050,0x00d02800b39c0050\n"
".quad 0x0000007c515c0058,0x000000849b9c0050,0x0000008d0b5c0050,0x00000081661d0050\n"
".quad 0x00000089159c0050,0x1000004cd25e0050,0x0e00002933de0030,0x1cf02801b39c0030\n"
".quad 0x04400014d45c0030,0x0a000028d21e0030,0x00000028a1dc0030,0x000000aaf65d0058\n"
".quad 0x0c400014a09c0050,0x5af02002715c0030,0x000000aaa0dc0030,0x000000aee19c0050\n"
".quad 0x0000004d3b5c0050,0x1c400015341c0058,0x0e00004d3b9c0030,0x00000034d39c0030\n"
".quad 0x0000008594dd0050,0x2cf0000281dc0050,0x0000000d861c0030,0x5a000034d59c0050\n"
".quad 0x5a000028a65e0030,0x000000885b5c0030,0x5c000034e39d0050,0x00000085835d0030\n"
".quad 0x000000a2d61c0050,0x0000007d3b9d0050,0x2c000028a4dc0050,0x00000081859c0030\n"
".quad 0x00000089555c0050,0x00000080761c0050,0x000000a561dc0050,0x2af00002855c0050\n"
".quad 0x30f00002959c0030,0x0ef02002a1dc0030,0x00000081555c0030,0x000000a9659d0050\n"
".quad 0x0000008471dc0050,0x2af00002955c0050,0x00000085659c0030,0x000000ac71dc0050\n"
".quad 0x0000000d555c0050,0x0000007c619c0050,0x0000007c70dc0050,0x2cf00002b59c0050\n"
".quad 0x0000008551dc0030,0x000000b030dc0050,0x000000b0619c0050,0x0000007d655c0050\n"
".quad 0x0ef00002b1dc0050,0x0640000530dc0030,0x0000004c619d0030,0x2af00002c55c0050\n"
".quad 0x0000007c74dc0030,0xee08208431dc0250,0x004000c0031de430,0x00000039559d0028\n"
".quad 0x00d05000739c0050,0x00400034c5dc0058,0x00f02000755c0058,0x1c400044639c0058\n"
".quad 0xf3333335115c0230,0x00000066e29d0030,0x0000005d60dc0050,0x2a400054655c0058\n"
".quad 0x0e400074665c0030,0x0000003941dd0030,0x26f00002c4dc0050,0x0600005d661c0030\n"
".quad 0x2ad02000551c0030,0x2af02000519c0030,0xf18e38e5339c0230,0x00000061451c0030\n"
".quad 0xf3333335015c0250,0x00000060619c0030,0x28f02000eb9c0050,0xf3333334261c0230\n"
".quad 0x2af02000551c0030,0x2ad020005b5c0030,0x000000b9215d0030,0x2af020018b9c0050\n"
".quad 0x0cf02000e19c0030,0x2ad02001861c0030,0x1c400065349c0030,0x2800005d655e0030\n"
".quad 0x5a00005d6b5e0030,0x00000019a19d0030,0x00400024c69c0050,0x0000007cd35d0058\n"
".quad 0x00000049555c0050,0x0000004adb5c0050,0x5c00005d6b9e0050,0xf4aaaaacd51c0230\n"
".quad 0x2a000068a55c0030,0x5a000068ab5c0030,0x0000004aebdc0030,0x2af00001455c0050\n"
".quad 0x5af000014b9c0030,0x28400094db5c0030,0x5e000068a51e0030,0x00000055b55d0030\n"
".quad 0x3000005d66de0050,0x000000b5461c0030,0x000000b8b51d0050,0x00000049b2dc0050\n"
".quad 0x324000851b9c0050,0x324000851bde0030,0x16000068a2de0030,0x0000006279dd0030\n"
".quad 0x32400085061c0050,0x000000b4b45c0030,0x3240008506de0050,0x5e400085049e0030\n"
".quad 0x00000046aa9d0030,0x5e400085045c0050,0x5c40008502dc0030,0x5c400085065e0030\n"
".quad 0x2200005d641c0030,0x2400005d645c0030,0x1600005d62dc0030,0x3200005d649c0030\n"
".quad 0x20400065341c0030,0x1640006532dc0030,0x22400065345c0030,0x24400065349c0030\n"
".quad 0x16000068a2dc0030,0x20000068a41c0030,0x22000068a45c0030,0x24000068a49c0030\n"
".quad 0x16400094d2dc0030,0x20400094d41c0030,0x22400094d45c0030,0x24400094d65c0030\n"
".quad 0x16cfa000949c0030,0x20cfa000941e0030,0x22cfa000945c0030,0x32cfa000965e0030\n"
".quad 0x00000092525f0030,0x000000a22b5d0050,0x0000009842dd0050,0x00000098911c0050\n"
".quad 0x00000082db5c0050,0x0000008cb25c0050,0x0000008c411c0050,0x000000a6d2dd0050\n"
".quad 0x304000842b5c0050,0x000000a0411c0030,0x00000088925d0050,0x00000084b2dd0050\n"
".quad 0x000000a4411d0050,0x5af000003c1c0050,0x00000080925c0030,0x000000acb2dc0050\n"
".quad 0x000000ac4b5c0050,0x60f00000ec1c0050,0x00000084925d0030,0x0000007cb11d0050\n"
".quad 0x000000b2d2dd0050,0x60cfa000fb5c0050,0x0000007c925c0030,0x000000b0411c0050\n"
".quad 0x5acf8000bb5c0050,0x24cf8000949c0030,0x5c4000842c5e0030,0x5acf80004b5e0030\n"
".quad 0x24cf8000b49e0030,0x5e4000842c1c0030,0x000000b68a1d0030,0x0000004a4b5d0050\n"
".quad 0x5c400084249c0050,0x5e4000842c9e0030,0x6200005d6c5c0030,0x2400005d649c0030\n"
".quad 0x6000005d6c1c0030,0x6400005d6c9c0030,0x3040008425de0030,0x36400084259c0030\n"
".quad 0x36400084261e0030,0x384000e1d09c0330,0x2ef00000391c0020,0x2cf0000036dc0030\n"
".quad 0x30f000003bdc0030,0x00c0008020dc2330,0x00c00078259c0358,0x004000a00b9de458\n"
".quad 0x22cf8000945e0028,0x0000005830dc4330,0x5dc00010209c0340,0x00c04001d59c0320\n"
".quad 0x32cf8000965c0048,0x004000b030dc4330,0x384000e1659c0348,0x0000000021dc8520\n"
".quad 0x00c00081609c2394,0x00c0007960dc0358,0x0000000c20dc4358,0x5dc00011609c0340\n"
".quad 0x00c08001d59c0320,0x004000b030dc4348,0x384000e1659c0348,0x00000000219c8520\n"
".quad 0x00c0008161dc2394,0x00c0007965dc0358,0x5dc00011619c0358,0x0000005c71dc4320\n"
".quad 0x00c0c001d09c0340,0x00c10001d0dc0348,0x004000b071dc4348,0x384000e0209c0348\n"
".quad 0x384000e0359c0320,0x00000000655c8520,0x00c0008025dc2394,0x00c00078261c0358\n"
".quad 0x5dc00010209c0358,0x00c00081619c2320,0x0000006170dc4358,0x00c0007961dc0340\n"
".quad 0x00c14001d55c0358,0x004000b030dc4348,0x0000001c61dc4348,0x5dc00011619c0340\n"
".quad 0x00000000215c8520,0x00c18001d59c0394,0x004000b071dc4348,0x384000e1561c0348\n"
".quad 0x00c1c001d09c0320,0x00000000651c8548,0x384000e1615c0394,0x00c0008180dc2320\n"
".quad 0x00c00079859c0358,0x384000e0251c0358,0x00c00080519c2320,0x00c0007851dc0358\n"
".quad 0x00000058359c4358,0x00c00081409c2340,0x00c0007940dc0358,0x0000001c65dc4358\n"
".quad 0x00c20001d1dc0340,0x0000000c255c4348,0x24400065309c0040,0x384000e0749c0330\n"
".quad 0x6240006530dc0020,0x60400065319c0030,0x48f00000e1dc0030,0x644000653c1c0030\n"
".quad 0x36f00000e91c0030,0x5ef00000ec5c0030,0x00c00081239c2330,0x00c0007924dc0358\n"
".quad 0x04000068a09e0058,0x06000068a6de0030,0x0000004ce4dc4330,0x00c24001d39c0340\n"
".quad 0x0c000068ac9e0048,0x60000068ac1e0030,0x384000e0e39c0330,0x0ecfa000fbde0020\n"
".quad 0x48cfa000f91e0030,0x00c00080e0dc2330,0x00c00078e29c0358,0x62cfa000f19c0058\n"
".quad 0x36400094d69e0030,0x00000028329c4330,0x00c28001d0dc0340,0x04400094d1de0048\n"
".quad 0x64400094d09e0030,0x384000e030dc0330,0x60400094d35e0020,0x00c2c001dc1c0330\n"
".quad 0x00c0008033dc2348,0x00c0007836dc0358,0x5ecf8000bbdc0058,0x48cf8000bc5e0030\n"
".quad 0x0000006cf3dc4330,0x00cfa000c6dc0040,0x384000e3031c0358,0x20cf80009c1e0020\n"
".quad 0x0e00006c81dc0030,0x3400006c869e0030,0x0400006c809e0030,0x1a00006c86dc0030\n"
".quad 0x00c00080c21c2330,0x00c00078c35c0358,0x5ecf8000491c0058,0x22cf8000bbdc0030\n"
".quad 0x00000034835c4330,0x00c30001d21c0340,0x60cf8000bc1e0048,0x32cf8000b41c0030\n"
".quad 0x384000e0821c0330,0x0ccf8000b45e0020,0x00000092b91d0030,0x00c00080819c2350\n"
".quad 0x00c0007882dc0358,0x0ecf800091de0058,0x34cf8000969e0030,0x0000002c62dc4330\n"
".quad 0x00c34001d19c0340,0x04cf8000965c0048,0x36cf80009adc0030,0x384000e0619c0330\n"
".quad 0x5dc00011861c0320,0x34cf800046de0020,0x00c00080609c2330,0x00c00078625c0358\n"
".quad 0x32cf8000469c0058,0x62cf80004c5e0030,0x00000024225c4330,0x22cf8000409c0040\n"
".quad 0x00c38001d45c0330,0x56cf80004ade0048,0x0000000acb1d0030,0x384000e1109c0350\n"
".quad 0x0ecf8000445c0020,0x004000b1665c4330,0x00c00080211c2348,0x00c0007821dc0358\n"
".quad 0x5dc00010559c0358,0x000000be699d0020,0x0000001c41dc4350,0x004000b175dc4340\n"
".quad 0x00c3c001d11c0348,0x5dc00011451c0348,0x0000004238dd0020,0x384000e0411c0350\n"
".quad 0x004000b1555c4320,0x5dc00011249c0348,0x00c00080415c2320,0x00c000784bdc0358\n"
".quad 0x004000b134dc4358,0x5dc00010e41c0348,0x000000bc515c4320,0x00c40001dbdc0340\n"
".quad 0x00000046289d0048,0x004000b0a45c4350,0x5dc00010339c0348,0x384000e2fbdc0320\n"
".quad 0x0000006e185d0020,0x004000b0f3dc4350,0x00c00082f0dc2348,0x00c0007af29c0358\n"
".quad 0x5dc00010c31c0358,0x00c44001d6dc0320,0x0000002830dc4348,0x004000b0d35c4340\n"
".quad 0x5dc00010829c0348,0x0000006a081d0020,0x384000e1b69c0350,0x004000b0b2dc4320\n"
".quad 0x5dc00010621c0348,0x00c00079a6dc0320,0x00c48001d75c0358,0x004000b0925c4348\n"
".quad 0x5dc00010219c0348,0x00c00081a09c2320,0x000000c2595d0058,0x004000b071dc4350\n"
".quad 0x5dc00010411c0348,0x0000006c26dc4320,0x384000e1d75c0340,0x004000b0515c4320\n"
".quad 0x5dc00012f09c0348,0x000000018b5c8520,0x00000001695c8594,0x004000b030dc4394\n"
".quad 0x5dc00011a69c0348,0x00000001499c8520,0x0000000128dc8594,0x004000b1b6dc4394\n"
".quad 0x5dc00011d71c0348,0x00c00081db9c2320,0x00c00079d75c0358,0x0000000109dc8558\n"
".quad 0x000000c69a5d0094,0x000000840bdc0450,0x00000000e89c852c,0x00000000ca1c8594\n"
".quad 0x00000076e75c4394,0x00000000a81c8540,0x00c0000afbde0394,0x000000008a5c8560\n"
".quad 0x000000adf61d0094,0x000000006a9c8550,0x004000b1d75c4394,0x00000000485c8548\n"
".quad 0x00000002ffdc8594,0x00000000291c85c9,0x00000402ffdc8594,0x00000001a61c85c9\n"
".quad 0x00000802ffdc8594,0x00000001cb1c95c9,0x000000c00081e794,0x0000008400a00440\n"
".quad 0x00c0000820a2032c,0x000000002fe08560,0x000004002fe085c9,0x000008002fe085c9\n"
".quad 0x0000062000a1e7c9,0x000000040581e240,0x0000002cb4000018,0x0000006db3c00050\n"
".quad 0x00000069a3000050,0x0000008a23800050,0x0000009e75000050,0x000000a284400050\n"
".quad 0x00000c03f5808550,0x00000092434000c9,0x0000008612400050,0x00000040f3c10050\n"
".quad 0x18f0000123000050,0x0000003945000030,0x0000008201800050,0x1cf0000263800050\n"
".quad 0x000000a690800030,0x22f0000264000050,0x000000aeb2000030,0x12f00002a5810050\n"
".quad 0x00000034c3000030,0x00000034f3c00050,0x0000008e32800050,0x00000018e3410050\n"
".quad 0x0000000903810050,0x0000007df1000050,0x0000004544400050,0x0000002164010050\n"
".quad 0x0000009651400050,0x00000028c3000050,0x00000024d2400050,0x000000b2c0c00050\n"
".quad 0x00000028f2810050,0x00000020e2000050,0x0000001913400050,0x0000001103810050\n"
".quad 0x0000008401c00450,0x00000014c181002c,0x0000001091010050,0x00000014a1400050\n"
".quad 0x0000000c82010050,0x00000008d2400050,0x0000000ce2810050,0x00c0000871c20350\n"
".quad 0x0000001060800060,0x0000002050c00050,0x0000002891000050,0x0000000070808550\n"
".quad 0x0000040070c085c9,0x00000800710085c9,0x00000094009c04c9,0x0000008400dc042c\n"
".quad 0x000000553b5c032c,0x004000a0071de448,0x06400020275ca328,0x00c04002d09c0320\n"
".quad 0x00c08002d11c0348,0x00c0c002d1dc0348,0x00c14002d25c0348,0x3a4000e020dc0348\n"
".quad 0x00c10002d21c0320,0x3a4000e0419c0348,0x3a4000e0711c0320,0x3a4000e0961c0320\n"
".quad 0x00c0008031dc2320,0x00c00078325c0358,0x3a4000e0809c0358,0x00c18002d31c0320\n"
".quad 0x39c00010321c0348,0x0000002470dc4320,0x3a4000e0c59c0340,0x00c0008061dc2320\n"
".quad 0x00c00078631c0358,0x004000b0325c4358,0x00c0008040dc2348,0x00c00078451c0358\n"
".quad 0x39c00010619c0358,0x0000003071dc4320,0x00c00080255c2340,0x00c0007825dc0358\n"
".quad 0x00000050365c4358,0x00c00081831c2340,0x00c00079851c0358,0x00c1c002d15c0358\n"
".quad 0x004000b071dc4348,0x0000005d50dc4348,0x39c00010411c0340,0x00000050c5dc4320\n"
".quad 0x3a4000e0551c0340,0x004000b1915c4320,0x39c00010209c0348,0x00c00081655c2320\n"
".quad 0x00c00079631c0358,0x004000b030dc4358,0x39c00011861c0348,0x00c24002d41c0320\n"
".quad 0x00c20002d4dc0348,0x004000b1765c4348,0x00000031555c4348,0x39c00011659c0340\n"
".quad 0x3a4000e1041c0320,0x00000000849c8520,0x3a4000e134dc0394,0x00c000814b9c2320\n"
".quad 0x00c000794bdc0358,0x004000b155dc4358,0x00c28002d35c0348,0x0000000062dc8548\n"
".quad 0x00c00081055c2394,0x00c000790c1c0358,0x39c00011451c0358,0x00c00081325c2320\n"
".quad 0x00c00079349c0358,0x000000bee21c4358,0x3a4000e0d35c0340,0x000000c15bdc4320\n"
".quad 0x00c2c002d29c0340,0x00000048919c4348,0x004000b0855c4340,0x39c00011349c0348\n"
".quad 0x00c00080d1dc2320,0x00c00078d25c0358,0x3a4000e0a29c0358,0x00c30002d45c0320\n"
".quad 0x004000b064dc4348,0x00c38002d39c0348,0x0000002472dc4348,0x39c00011041c0340\n"
".quad 0x00c00080ab9c2320,0x00c00078a1dc0358,0x00c34002d3dc0358,0x3a4000e1121c0348\n"
".quad 0x3a4000e0e19c0320,0x004000b2f45c4320,0x00c3c002d31c0348,0x0000001ee25c4348\n"
".quad 0x39c00010d39c0340,0x00000000469c8520,0x3a4000e0f1dc0394,0x3a4000e0cbdc0320\n"
".quad 0x004000b0b3dc4320,0x39c00010a31c0348,0x00c00080711c2320,0x0000000026dc8558\n"
".quad 0x00c00078715c0394,0x00c40002db9c0358,0x00c0008082dc2348,0x00c000788c1c0358\n"
".quad 0x004000b0935c4358,0x00000014411c4348,0x39c00010829c0340,0x00c00080625c2320\n"
".quad 0x00c00078669c0358,0x00c00082f0dc2358,0x00c0007af15c0358,0x3a4000e2eb9c0358\n"
".quad 0x000000c0b21c4320,0x00000068909c4340,0x00000014315c4340,0x00c00082e25c2340\n"
".quad 0x00c0007ae0dc0358,0x004000b082dc4358,0x39c00010721c0348,0x0000000c90dc4320\n"
".quad 0x00c44002d1dc0340,0x004000b0425c4348,0x39c00010619c0348,0x3a4000e0769c0320\n"
".quad 0x00c48002d6dc0320,0x004000b021dc4348,0x39c00012f11c0348,0x00c00081ab5c2320\n"
".quad 0x00c00079abdc0358,0x004000b0515c4358,0x39c00012e09c0348,0x00000001899c8520\n"
".quad 0x3a4000e1b75c0394,0x004000b030dc4320,0x0000000168dc8548,0x000000bed6dc4394\n"
".quad 0x39c00011a69c0340,0x00000001491c8520,0x00000001295c8594,0x00c00081db5c2394\n"
".quad 0x00c00079db9c0358,0x000000010a9c8558,0x004000b1b6dc4394,0x00000000e7dc8548\n"
".quad 0x39c00011d71c0394,0x00000000cb1c8520,0x000000bad75c4394,0x00000000a85c8540\n"
".quad 0x000000008adc8594,0x0000000069dc8594,0x004000b1d75c4394,0x00000000481c8548\n"
".quad 0x000000002a5c8594,0x00000001a89c8594,0x00000001ca1c9594,0xee0000ffffdc0494\n"
".quad 0x0040016000dde450,0x00000c03f09c8528,0x0ec09c3c31dc23c1,0x0040002000dde41a\n"
".quad 0x00c0000421dc2328,0x00c0000431dc2319,0x000000000021e71a,0x00c00004001c2380\n"
".quad 0x0e000001e1dc0358,0x000001e00081e71b,0x00000001e0a00340,0x00c00009e1220348\n"
".quad 0x00c0000821620360,0x0000000040e08560,0x0000000050a085c1,0x0000000831a000c1\n"
".quad 0x0000040040e08550,0x0000000041a085c1,0x0000040050a085c9,0x0000000831a000c1\n"
".quad 0x0000080040e08550,0x0000040041a085c1,0x0000080050a085c9,0x0000000830a000c1\n"
".quad 0x0000080040a08550,0xee0000ffffdc04c9,0x0ec0000401dc2350,0x03fffd600001e71a\n"
".quad 0x00000000001de740,0x0000000000000080,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0xf145140000000000,0xaaaaab3fd5555540,0x73cf3d3ce38e393d,0x638e39bdb2cb2dbe\n"
".quad 0xcccccd3d8208203c,0x0004013d2aaaab3c,0x0000b50008020400,0x0802040000000300\n"
".quad 0x000008000000b900,0x0000b40008020400,0x0802040000000200,0x000001000000b200\n"
".quad 0x0000b00008020400,0x0802040000000000,0x000007000000c000,0x0000be0008020400\n"
".quad 0x0802040000000600,0x000005000000b700,0x0000bb0008020400,0x0802040000000900\n"
".quad 0x000004000000b600,0x00003d00080a0400,0x3c1903003c002000,0x000000000c170400\n"
".quad 0x11f0000038000700,0x000000000c170400,0x21f0000030000600,0x000000000c170400\n"
".quad 0x21f0000028000500,0x000000000c170400,0x21f0000020000400,0x000000000c170400\n"
".quad 0x21f0000018000300,0x000000000c170400,0x11f0000010000200,0x000000000c170400\n"
".quad 0x21f0000008000100,0x000000000c170400,0x21f0000000000000,0x04003000080d0400\n"
".quad 0x005de40000000200,0x00dc042800440400,0x011c042c00000098,0x001c042c00000088\n"
".quad 0x009c042c00000094,0x01dde42c00000084,0x351ca32800400110,0x065ca32008400030\n"
".quad 0x71de032004400020,0x015c044800c000fc,0x019c042c0000009c,0x021de22c0000008c\n"
".quad 0x91dc231905f00000,0x201e041a0e00001d,0x50dca31800000051,0x211e04200c400040\n"
".quad 0x015c001800000065,0x91dc233010cfc000,0x209e0418a0400111,0x411c00180000000d\n"
".quad 0x515c003010cfc000,0x41dc235000f07f00,0x209c0018a0400111,0x411c003010cfc000\n"
".quad 0x515c005000f09f80,0x41dc235800000014,0x359c031a2000001d,0x209c006000c00018\n"
".quad 0x411c005000f07f00,0x31dc23300a000010,0x66dc0318a0400110,0x209c004800000051\n"
".quad 0x33dc233008000008,0xb29c031a2000001c,0x21dc0020324000e1,0x0005e7208ed06000\n"
".quad 0x909c038000000000,0x001c004800fffffd,0x211e045000cfc000,0x209e041800000059\n"
".quad 0x915c031800000009,0x01dc004800c00005,0x209c005000000010,0x085de45000cfc000\n"
".quad 0x081de4280000001c,0x061c862800000008,0x215e0480104000fe,0x431c031800000015\n"
".quad 0x519c004800fffffd,0x215e045000cfc000,0x671c861800000031,0x515c0080104101fc\n"
".quad 0x021de45000cfc000,0x51dc002800000008,0x025de45000000010,0x891c86280000001c\n"
".quad 0x68dc8680104202fc,0x435c0380104303fc,0x33dc234800c00005,0xa1dc23190ec000fc\n"
".quad 0x215e045800c00080,0x021de41800000035,0x04dde42800000018,0x50dc002800400080\n"
".quad 0xa15c035000cfc000,0x639c035800c00078,0x30dc004800ffff01,0x611c035000000010\n"
".quad 0x72dc434800c00101,0x025de44000000014,0x889c86280000000c,0xa41c0380104404fc\n"
".quad 0xd2a4032027c00010,0x211e044800000010,0x21de041800000011,0xc21c031800000039\n"
".quad 0x04a5e44800000058,0x015c002800400080,0x01dc005000000010,0x285c86500000001c\n"
".quad 0x011de480104505fc,0xb45c432800000018,0x80dc034800400090,0x825c034800c08000\n"
".quad 0x831c034800c10008,0x835c034800c23f04,0x839c034800c2bf00,0x83dc034800c33f08\n"
".quad 0x855c034800c38104,0xa7a4034800c40100,0x401c864800c48000,0x55dc0380104707fc\n"
".quad 0x92dc0320324000e1,0xe5640320324000e0,0x329c0320324000e1,0xc25c0320324000e0\n"
".quad 0xd21c0320324000e0,0xe75c0320324000e0,0xf69c0320324000e0,0x679c8620324000e0\n"
".quad 0x00dde480104909fc,0xa19c23280000001c,0xa1dc035800c00080,0x011de45800c00078\n"
".quad 0xa39c032800000008,0x619c432027c00010,0xb1dc23400000001c,0xb29c035800c00080\n"
".quad 0x63dc435800c00078,0x47dc864800400090,0xb31c0380104606fc,0x711c432027c00010\n"
".quad 0x915c234000000028,0x919c035800c00080,0x435c435800c00078,0x929c034800400090\n"
".quad 0x511c432027c00010,0x81dc234000000018,0x815c035800c00080,0x281c865800c00078\n"
".quad 0x42dc4380104808fc,0x821c034800400090,0x709c432027c00010,0xd0dc234000000014\n"
".quad 0xd11c035800c00081,0x225c435800c00079,0xd19c034800400090,0x309c432027c00011\n"
".quad 0xa0dc234000000010,0xa15c035800c00081,0x21dc435800c00079,0xa11c034800400090\n"
".quad 0x309c432027c00011,0x70dc234000000014,0x769c035800c00081,0x215c435800c00079\n"
".quad 0x709c034800400090,0x30dc432027c00011,0x54e4234000000068,0x55e4035800c00081\n"
".quad 0x30dc435800c00079,0x54a4034800400090,0x34e4432025c00011,0x055c85400000005d\n"
".quad 0xe69c858400000001,0x34e4438400000000,0xc75c854800400091,0xa95c858400000000\n"
".quad 0x899c858400000000,0x69dc858400000000,0x4a1c858400000000,0x2a5c858400000000\n"
".quad 0x2aa4858400000000,0x0081e78400000001,0x83a1004000003c40,0xa3e1005000000071\n"
".quad 0x5320005000000075,0x65a1005000000082,0xa26000500000009e,0xd1e0005000000069\n"
".quad 0xe420005000000075,0xf3e0005000000090,0xc3a0005000000090,0x4361005000000098\n"
".quad 0x6321005000000056,0x85e00050000000a5,0x82a0003012f02001,0xa5a1005800f02001\n"
".quad 0xf3e000300ef00001,0xe3a000500000008c,0xa1a0005000000078,0xd360005000000075\n"
".quad 0x042100500000008c,0xc5e000500000008d,0x52a000302ef02001,0x65a0003014d05001\n"
".quad 0xf3e1005000000091,0x8160005000000088,0xe3a0005000000061,0x61a000500000009c\n"
".quad 0xd360005000000090,0x71e0005000000088,0x042100500000001d,0xa2a0005000000089\n"
".quad 0x65a0003014f02001,0xf3e100500000008d,0xc520005000000084,0x5161005000000071\n"
".quad 0xe3a1005000000068,0x61a00050000000a0,0xd36000500000008c,0x0420005000000084\n"
".quad 0x71e0005000000085,0xc2a0005000000090,0x65a0003014f02001,0xf3e0005000000089\n"
".quad 0x5160005000000098,0xe3a1005000000050,0x61a000500000007c,0xd360005000000088\n"
".quad 0x0420005000000080,0x71e0005000000081,0x546000500000008c,0xd2a0005000000096\n"
".quad 0x65a0003014f02001,0xf3e1005000000085,0x516100500000009c,0xe3a1005000000074\n"
".quad 0x61a00050000000a4,0xd360005000000084,0x0421005000000098,0x71e0005000000079\n"
".quad 0xd4e0005000000088,0x40a1005800d02801,0xa2a000500000008e,0x65a0005000000090\n"
".quad 0xf3e0005000000045,0x51600050000000a4,0xe3a1005000000090,0xc4a0005000000000\n"
".quad 0x61a1005800d02801,0xd360005000000094,0x0420005000000078,0x75e000500000007d\n"
".quad 0xa4e0005000000084,0x2260003026f02801,0xa2a0005000000088,0x61e100500000008c\n"
".quad 0xf3e1005000000081,0x51600050000000a8,0xe3a100500000008c,0x84a00050000000a8\n"
".quad 0x61a1003024f02801,0xd360005000000080,0x042100500000009c,0x0221005000000001\n"
".quad 0x80e000500000007a,0x92610050000000a2,0xc320005000000084,0xa2a00050000000a8\n"
".quad 0x71e1005000000088,0xf5a0005000000078,0x5160003026400014,0xe4e0005000000088\n"
".quad 0x61a1005800000038,0x7460005000000078,0xd360005000000045,0x0ae000500000007c\n"
".quad 0x8221003024400015,0xa2a000500000007c,0x0262005000000084,0xf32200301200003d\n"
".quad 0x74a0003018000038,0xf5e000500000000c,0x516000580000003c,0xf3e0005000000084\n"
".quad 0x01e000302600003c,0x61a1005000000041,0xd3600050000000a0,0x82200050000000a4\n"
".quad 0x52a0005000000000,0x5161003014f02002,0x71e1005000000094,0x61a100301e000040\n"
".quad 0xd3e000500000007c,0x0222005000000000,0x04e0003010000039,0xa36000302e000041\n"
".quad 0x5160005000000080,0xe422005000000080,0x22a100302e000038,0x65e100500000007d\n"
".quad 0xd4a0005000000000,0x8120005000000098,0x1460005800d02802,0x6160005000000081\n"
".quad 0x736100300af00002,0x2420005000000041,0x5120005000000079,0x6460003008f02802\n"
".quad 0x54a0003022f00002,0xf160005000000078,0x03e00050000000a8,0xe12000500000009d\n"
".quad 0x1420003008400014,0xe3a0005000000079,0x7460003026000038,0x83e0003024f00002\n"
".quad 0x54a100301ef02002,0x1461005000000038,0xf1600050000000a1,0x73e000500000007c\n"
".quad 0x1420003020f00002,0x516000500000007d,0xf3e00050000000a4,0x942000500000000c\n"
".quad 0x50e0003020f00002,0xf160005000000000,0x03e000500000007c,0x30e0005000000001\n"
".quad 0x91600050000000a8,0xa3e000300af00002,0xe0e000301ef00002,0x02e1e43006400004\n"
".quad 0xf4610028004000c0,0x31e002500000001c,0x51600030ee082084,0xb520005000000000\n"
".quad 0x73e0005800400034,0xa420005800f02000,0x73a000300af00002,0xb1a0025800d05000\n"
".quad 0x11600030f3333336,0x23e0005800000051,0x23a000301e400055,0x25e000301c400045\n"
".quad 0x10e000300e400075,0x64a000300a000051,0x51e100301ef02000,0x64e0005000000039\n"
".quad 0x03a002301ed02000,0x21a00030f18e38e5,0x34e000500000000d,0x656002500000000d\n"
".quad 0xe0e00030f3333335,0xeb2000300cf02000,0x54e0003026f02000,0x81a100301ef02001\n"
".quad 0x562000500000000d,0x44a002301ed02001,0xc0e10030f3333334,0x05600050000000b1\n"
".quad 0x14e200301c400065,0x1b22003026000051,0x2720003030000051,0x24a000301ef02001\n"
".quad 0xb3e000301ed02001,0xa2a1005800400024,0x34e0005000000000,0xcb20005000000055\n"
".quad 0x1b62005000000056,0xa620023038000051,0xd4e00030f4aaaaac,0xd72000302600003c\n"
".quad 0xdb2000305800003c,0x84e0005000000056,0x8720003026f00001,0xa620003038f00001\n"
".quad 0xdb22003030400094,0x1b6200305800003c,0xa4e1003024000051,0xc6a000500000004d\n"
".quad 0xd560005000000062,0xd4a1005000000056,0x5961005000000071,0xd6a200500000006a\n"
".quad 0xb72000302a00003c,0xbb2200302e400086,0xa6a000302e400086,0x6560005000000061\n"
".quad 0x65e200302e400085,0x8a2100302e400085,0x662000500000006a,0x6ae0003038400085\n"
".quad 0x66a2003058400085,0x65a2003058400085,0x1760003038400085,0x1620003030000051\n"
".quad 0x15a0003056000051,0x076000302c000051,0x16a000303a400065,0x05a0003034000051\n"
".quad 0xd76000302c400065,0x062000303a00003c,0xd5a0003030400065,0x06a000302c00003c\n"
".quad 0xa760003034400065,0xa5a000303a400094,0xd62000302c400094,0xd6a000303000003c\n"
".quad 0x9ae000303400003c,0x976200303acfa000,0x35a300302ccfa000,0xa620005000000092\n"
".quad 0xa6a0003030400094,0x0b61003034400094,0x65a000500000009a,0x9622005000000089\n"
".quad 0x96a0003030cfa000,0x2261003034cfa000,0xd0a0005000000088,0x65a000500000007a\n"
".quad 0x4b60005000000085,0x20a100302a400084,0x65a000500000009c,0x5b60005000000099\n"
".quad 0x20a100305af00000,0x65a100500000007c,0x926000500000009d,0x20a0005000000084\n"
".quad 0x65a00050000000a4,0xeb600050000000a5,0x926100305af00000,0x20a1005000000080\n"
".quad 0x65a1005000000000,0xcb600050000000a9,0x926000305acfa000,0x20a0005000000078\n"
".quad 0x6b600050000000a8,0x926100305acf8001,0x4be200500000007c,0x2b62003038400084\n"
".quad 0x926000305acf8000,0x4ba0005000000000,0x69a1003058400084,0x4b600050000000b6\n"
".quad 0x4c22003038400084,0x9ae0003058400084,0x1b60003056cf8000,0x1be000305a000051\n"
".quad 0x1ba000305e000051,0x1c2000305c000051,0x6ae2003060000051,0x4522003056cf8001\n"
".quad 0x446000302a400084,0x456200302e400084,0xb12003302e400084,0x4ae10020324000e1\n"
".quad 0x59200050000000ae,0x5460003028f00000,0x5b20003022f00000,0x416023302af00000\n"
".quad 0x4520035800c00080,0x0721e45800c00078,0xe9200028004000a0,0x5160433048f00000\n"
".quad 0x4120034000000050,0xb520032039c00010,0xc922004800c04001,0x5160433048cfa000\n"
".quad 0x45200348004000b0,0xb2e00020324000e1,0x41e0855800cfa000,0x6920009400000000\n"
".quad 0x9622003048cf8001,0x96a2003030cf8000,0x4120233034cf8000,0x4160035800c00081\n"
".quad 0xb1e0035800c00079,0x9760004800c08001,0x416043303acf8000,0x4120034000000014\n"
".quad 0x7520032039c00011,0x66a00020324000e0,0x5160433034cf8001,0x41e02348004000b0\n"
".quad 0x4560035800c00081,0x41a0855800c00079,0x28a1009400000000,0x71e043500000006a\n"
".quad 0x41a0034000000054,0xb120032039c00011,0xb160034800c0c001,0x71e0434800c10001\n"
".quad 0x41200348004000b0,0x55200320324000e0,0x64e08520324000e0,0x4560239400000000\n"
".quad 0x45e0035800c00080,0x4120035800c00078,0x41a0232039c00010,0x5160435800c00081\n"
".quad 0x41e003400000005d,0xb4e0035800c00079,0x5160434800c14001,0x61e04348004000b0\n"
".quad 0x41a003400000001c,0x40e0852039c00011,0xb520039400000000,0x71e0434800c18001\n"
".quad 0x35600348004000b0,0x45200320324000e1,0xb0e00320324000e1,0x64a0854800c1c001\n"
".quad 0x4120239400000000,0x4160035800c00081,0x30e0035800c00079,0x51a02320324000e0\n"
".quad 0x51e0035800c00081,0x44a0435800c00079,0x3120234000000014,0x3160035800c00080\n"
".quad 0x65e0435800c00078,0xb1a003400000001c,0x44e0434800c20001,0x0120004000000014\n"
".quad 0x016000305a400065,0x01e000305e400065,0x0b6000305c400065,0x6420033060400065\n"
".quad 0xe1a00020324000e0,0xeba0003022f00000,0x03a0233058f00000,0x0460035800c00081\n"
".quad 0xd122005800c00079,0xdb2200300800003c,0xe46043300a00003c,0xb3a0034000000044\n"
".quad 0xd1e2004800c24001,0xdb6200300e00003c,0xe3a003305a00003c,0xc1a20020324000e0\n"
".quad 0xa12200300ccfa000,0xe160233008400094,0xe360035800c00080,0xab22005800c00078\n"
".quad 0xa1e2003058400094,0x53e043300e400094,0xb360034000000034,0xc160004800c28001\n"
".quad 0xab6200305ccfa000,0xd32003305a400094,0x81200020324000e0,0x8b2200300800002c\n"
".quad 0xc2a023305800002c,0xc360035800c00080,0x81e2005800c00078,0x8ba000300e00002c\n"
".quad 0xa36043305a00002c,0xb2a0034000000034,0x6be2004800c2c001,0x21a000300ccf8001\n"
".quad 0xa2a0033048cf8000,0x6b620020324000e0,0x6620003030cf8001,0xa22023303acf8001\n"
".quad 0xa2e0035800c00080,0x65a2005800c00078,0x992100300acf8001,0x82e043500000001a\n"
".quad 0xb22003400000002c,0x9762004800c30001,0x9a60003008cf8000,0x822003300ecf8000\n"
".quad 0x9c220020324000e0,0x9ba0003058cf8000,0x816023305ccf8000,0x81a0035800c00080\n"
".quad 0x2260005800c00078,0x2b2000302ccf8000,0x51a043303acf8000,0xb160034000000018\n"
".quad 0xaaa1004800c34001,0x2760005000000026,0x5160033052cf8000,0x2be20020324000e0\n"
".quad 0x226200305ecf8000,0x5120233060cf8000,0x51e0035800c00080,0x2a62005800c00078\n"
".quad 0xf7e100305ccf8000,0x41e0435000000025,0xb12003400000001c,0x1861004800c38001\n"
".quad 0xb620035000000062,0x4120034800c40001,0x38e10020324000e0,0x86200350000000b6\n"
".quad 0x45a02320324000e1,0x40a0035800c00080,0xe7a1005800c00078,0x0821005000000075\n"
".quad 0x60a04350000000b2,0x55a0034000000009,0xb560032039c00011,0x8b20034800c3c001\n"
".quad 0x75e0435800c00079,0x45200348004000b1,0x56a0032039c00011,0x6ae08520324000e1\n"
".quad 0x2560439400000001,0x34a00348004000b1,0xa0e0232039c00010,0xab60035800c00081\n"
".quad 0x34e0435800c00079,0x04200348004000b1,0x30e0432039c00011,0x8b602340000000b4\n"
".quad 0x1460435800c00081,0xe3a00348004000b1,0xdb20432039c00010,0x48e08540000000b2\n"
".quad 0xf3e0439400000001,0xc3200348004000b0,0x28a0852039c00010,0x0860859400000001\n"
".quad 0xd360439400000001,0xa2a00348004000b0,0xe960852039c00010,0x79e1009400000000\n"
".quad 0xb2e04350000000be,0x82200348004000b0,0xc820852039c00010,0xa9a0859400000000\n"
".quad 0x6260439400000000,0x51a00348004000b0,0xb160032039c00010,0xb6e0034800c44001\n"
".quad 0x71e0434800c48001,0x41200348004000b0,0x5760032039c00010,0xbba00320324000e0\n"
".quad 0x21604320324000e1,0xa0a00348004000b0,0xd6a0232039c00011,0xdb60035800c00081\n"
".quad 0x30e0435800c00079,0x86200348004000b0,0xa6e0432039c00011,0x87a08540000000b5\n"
".quad 0xc660439400000000,0xd6a00348004000b2,0xe760232039c00011,0xeb20035800c00082\n"
".quad 0xb6e0435800c0007a,0xe7200348004000b1,0xdb20432039c00012,0x69e08540000000b1\n"
".quad 0x0021009400000000,0x4a208550000000a4,0xc760439400000000,0x27e08548004000b2\n"
".quad 0x8920859400000000,0xa020859400000001,0xcaa0859400000001,0x00a1e79400000001\n"
".quad 0x46c0034000001240,0x0ac1e44800000059,0xb0800328004000a0,0xb180034800c04001\n"
".quad 0xb1c0034800c10001,0x2140034800c14001,0xb0c00320324000e0,0xb200034800c08001\n"
".quad 0x6080034800c18001,0x75800320324000e0,0x51802320324000e0,0x51c0035800c00080\n"
".quad 0x30c0035800c00078,0x85000320324000e0,0xb1000320324000e0,0x5200034800c0c001\n"
".quad 0x6140432057c00010,0x31c023400000001c,0x32c0035800c00080,0x4100035800c00078\n"
".quad 0x52404320324000e0,0x31800348004000b0,0x71c0432057c00010,0x414023400000002c\n"
".quad 0x4540035800c00080,0x71c0435800c00078,0x41000348004000b0,0x5140432057c00010\n"
".quad 0x20c0234000000054,0x24c0035800c00080,0x5140435800c00078,0x20800348004000b0\n"
".quad 0x30c0432057c00010,0x62c023400000004c,0x6540035800c00081,0xb480035800c00079\n"
".quad 0x30c0434800c1c001,0xb5404348004000b0,0x6580034000000054,0x44c0232057c00011\n"
".quad 0x42c0035800c00081,0xb380035800c00079,0x2480034800c24001,0xb4000320324000e1\n"
".quad 0xb300034800c20001,0x55c0434800c28001,0x34c04348004000b1,0x450003400000002d\n"
".quad 0x8700852057c00011,0xe380039400000000,0x2b002320324000e0,0x2b40035800c00081\n"
".quad 0x6740855800c00079,0x0400039400000000,0xc3000320324000e1,0xb2800320324000e0\n"
".quad 0x3540434800c2c001,0xe2402348004000b1,0xe700035800c00080,0xc4c0435800c00078\n"
".quad 0x02002340000000b6,0x0b80035800c00081,0xc1c0235800c00079,0xcb00035800c00080\n"
".quad 0xa280035800c00078,0x24800320324000e0,0x9740432057c00011,0x8180434000000070\n"
".quad 0x72404340000000b8,0xa2002340000000b0,0xa1c0035800c00080,0xb440035800c00078\n"
".quad 0x34c0434800c30001,0x04000348004000b1,0x8200432057c00011,0x11c003400000001c\n"
".quad 0xb3c00320324000e1,0x6440434800c34001,0xe3800348004000b0,0xf180032057c00010\n"
".quad 0xb3400320324000e0,0xd3c0434800c38001,0xc3000348004000b1,0xdb00032057c00010\n"
".quad 0xb2c00320324000e0,0x9340434800c3c001,0xa2800348004000b0,0x4600852057c00010\n"
".quad 0x7240239400000000,0x7b40035800c00080,0x2680855800c00078,0xb740039400000000\n"
".quad 0xb7000320324000e0,0x82c0434800c40001,0x72000348004000b0,0x9140432057c00010\n"
".quad 0xc1c02340000000b4,0xc600035800c00082,0xd0c0235800c0007a,0xd240035800c00081\n"
".quad 0xc700035800c00079,0x61002320324000e1,0x6b80035800c00080,0x7080435800c00078\n"
".quad 0x30c0434000000060,0xc1c0234000000024,0xc600035800c00081,0x5240435800c00079\n"
".quad 0x41004348004000b0,0x61800340000000b8,0x7680432057c00010,0xb140034000000060\n"
".quad 0x41c0434800c44001,0xc1000348004000b0,0x5b00032057c00012,0xb6c00320324000e0\n"
".quad 0x2140434800c48001,0xd0800348004000b0,0xc740232057c00011,0xcb40035800c00082\n"
".quad 0x30c0435800c0007a,0xc6000348004000b0,0x6880852057c00011,0xb700039400000001\n"
".quad 0x48408520324000e1,0xa640439400000001,0x29008548004000b1,0xd6c0439400000001\n"
".quad 0xc6800340000000b5,0x08c0852057c00012,0xc740239400000001,0xcb00035800c00081\n"
".quad 0xea00855800c00079,0xc000859400000000,0xb6c0439400000000,0xaa808548004000b1\n"
".quad 0xc700039400000000,0xd740432057c00011,0x87c08540000000b1,0x6a40859400000000\n"
".quad 0x4940859400000000,0xd740439400000000,0x27808548004000b1,0x89c0859400000000\n"
".quad 0xa800859400000001,0xc980859400000001,0x001de79400000001,0x0000008000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0xf145140000000000,0xaaaaab3fd5555540,0x73cf3d3ce38e393d,0x638e39bdb2cb2dbe\n"
".quad 0xcccccd3d8208203c,0x0004013d2aaaab3c,0x0000ce0008020400,0x0802040000000900\n"
".quad 0x000004000000c900,0x0000c80008020400,0x0802040000000300,0x000008000000cc00\n"
".quad 0x0000c70008020400,0x0802040000000200,0x000001000000c500,0x0000c30008020400\n"
".quad 0x0802040000000000,0x000007000000d300,0x0000d10008020400,0x0802040000000600\n"
".quad 0x000005000000ca00,0x00005800080a0400,0x2819030028002000,0x000000000c170400\n"
".quad 0x11f0000024000500,0x000000000c170400,0x11f0000020000400,0x000000000c170400\n"
".quad 0x21f0000018000300,0x000000000c170400,0x11f0000010000200,0x000000000c170400\n"
".quad 0x21f0000008000100,0x000000000c170400,0x21f0000000000000,0x03002400080d0400\n"
".quad 0x005de40000000200,0x001c042800440400,0x009c042c00000094,0x00dc042c00000084\n"
".quad 0x011c042c00000098,0x015c042c00000088,0x019c042c0000009c,0x065ca32c0000008c\n"
".quad 0x3a5ca32004400020,0x501ca32008400030,0x99dc23200c400040,0x91dc23190ec000fd\n"
".quad 0x93dc23190e0000fe,0x05dc23190ec000fe,0x07dc23190e0000fc,0x0b5c03190ec000fc\n"
".quad 0x49dc046000c00018,0x0000070c22000040,0xdadc036000000120,0x49dc0448000000a6\n"
".quad 0xb0dc030c26000048,0x0011e720324000e2,0x99dc234000000080,0x0011e7190e0000fd\n"
".quad 0x0b9df44000000020,0x0b9df228000000fc,0x0b9df2180000000c,0x99dc231800000004\n"
".quad 0x0011e71a0ec000fd,0x311c238000000000,0x319c035800c00080,0x009de45800c00078\n"
".quad 0x961c032800400080,0x435c4348000000b6,0x341c034000000018,0x901c032005c00010\n"
".quad 0x819c034800fffffd,0x82dc034800c20005,0x8bdc034800c3c101,0x80dc034800c04001\n"
".quad 0x915c034800c07ffd,0x825c034800c00005,0x829c034800c27f01,0xd45c434800c1c005\n"
".quad 0x81dc034800400090,0x855c034800c17ffd,0x649c034800c33f05,0xb35c0320004000e0\n"
".quad 0xf19c0320004000e0,0x32dc0320004000e2,0x811c0320324000e0,0x93dc034800c13ffd\n"
".quad 0xa0dc0320004000e0,0x821c03200a4000e0,0x725c034800c10005,0x529c03200a4000e0\n"
".quad 0x859c0320324000e1,0x61dc234800c38101,0x655c035800c00080,0x44dc035800c00078\n"
".quad 0x811c0320004000e0,0x621c0320324000e0,0x0b1c8520324000e1,0x619c038400000001\n"
".quad 0x71dc432005c00010,0x355c234000000054,0x359c035800c00081,0x71dc435800c00079\n"
".quad 0x369c034800400090,0x541c432005c00011,0x245c234000000059,0x24dc035800c00081\n"
".quad 0x06dc435800c00079,0x279c034800400091,0x141c432005c00011,0x831c03400000004d\n"
".quad 0xf45c234800c23f01,0xf49c035800c00080,0x851c035800c00078,0x07dc434800c2ff01\n"
".quad 0x8c1c034800400091,0xf81c034800c0c001,0xc01c032005c00010,0x13dc4320324000e0\n"
".quad 0x431c034000000049,0xd41c23200a4000e1,0xd45c035800c00080,0x051c035800c00078\n"
".quad 0xf85c43200a4000e3,0xd91c034800400090,0x041c432005c00010,0x435c234000000045\n"
".quad 0x43dc035800c00081,0x095c435800c00079,0x489c034800400091,0xd35c432005c00011\n"
".quad 0xb3dc23400000003c,0xb41c035800c00080,0xd8dc435800c00078,0xb71c034800400090\n"
".quad 0xf2dc432005c00010,0x935c234000000040,0x93dc035800c00080,0xb75c435800c00078\n"
".quad 0x959c034800400090,0xd25c432005c00010,0x42dc23400000003c,0x435c035800c00080\n"
".quad 0x95dc435800c00078,0x451c034800400090,0xb11c432005c00010,0x325c234000000034\n"
".quad 0x32dc035800c00080,0x839c035800c00078,0x455c434800c2befd,0x349c034800400090\n"
".quad 0x90dc432005c00010,0xe39c03400000002c,0x025c2320324000e0,0x02dc035800c00080\n"
".quad 0x34dc435800c00078,0x041c034800400090,0xe35c232005c00010,0xe3dc035800c00080\n"
".quad 0x945c435800c00078,0xc0dc23400000002c,0xc11c035800c00080,0xa01c235800c00078\n"
".quad 0xa25c035800c00080,0xd3dc435800c00078,0x335c43400000003c,0x02dc434000000010\n"
".quad 0x80dc234000000024,0x801c035800c00080,0x145c435800c00078,0xe39c034800400091\n"
".quad 0x325c432005c00010,0x801c034000000000,0xf3dc434800c400fd,0xc31c034800400090\n"
".quad 0x011c032005c00010,0x899c0320324000e0,0xd35c434800c44101,0xa29c034800400090\n"
".quad 0x401c232005c00010,0x40dc035800c00080,0x699c035800c00078,0xb2dc43200a4000e2\n"
".quad 0x821c034800400090,0x015c432005c00010,0x60dc23400000000c,0x601c035800c00082\n"
".quad 0x925c435800c0007a,0x411c034800400090,0x30dc432005c00010,0xa01c854000000000\n"
".quad 0x515c438400000001,0x609c034800400090,0x499c852005c00012,0x26dc858400000002\n"
".quad 0x61dc858400000002,0xe7dc858400000000,0x085c858400000001,0xc8dc858400000002\n"
".quad 0xa91c858400000000,0x30dc438400000000,0xc19c854800400090,0x679c858400000001\n"
".quad 0x469c858400000001,0x2a9c858400000001,0x081c858400000001,0xe89c858400000001\n"
".quad 0x895c858400000000,0x49dc858400000000,0x2a1c858400000000,0xd31c038400000000\n"
".quad 0x929c034800c00102,0x008de74800c00006,0xa0ac034000000140,0x016de44800000030\n"
".quad 0x20ac032800400080,0x20ac034800c48000,0x20ec2320324000e0,0x212c035800c00080\n"
".quad 0x20ac035800c00078,0x30ec43200bc00010,0x30ec434000000010,0x2a6c854800400090\n"
".quad 0xe9dc238400000000,0x0011e7190ec00006,0xe9dc234000004020,0x000007190ec0000e\n"
".quad 0x0031f460000003a0,0x0000074000000000,0x0001e76000000140,0x0025f440000000a0\n"
".quad 0x0a5de44000000000,0x091de4280000009c,0x0a9de42800000088,0x069df42800000078\n"
".quad 0x09dde42800000018,0x089de428000000a4,0x079de42800000090,0x019df428000000a8\n"
".quad 0x0000072800000068,0x0009e76000000140,0x002df440000000a0,0x0a1de44000000000\n"
".quad 0x09dde4280000008c,0x0a5de42800000088,0x095df42800000090,0x08dde42800000080\n"
".quad 0x089de428000000a0,0x091de4280000009c,0x081df428000000a4,0x009de22800000094\n"
".quad 0xf1dc0018f38e38e4,0x201c003036400007,0x27de003054400014,0x285c00303c400014\n"
".quad 0x299c1030500000fc,0x73dd0030460000fc,0x031c00500000006c,0x621c005000000086\n"
".quad 0xf49c005000000018,0x641d005000000000,0x72dc005000000068,0xc3dc005800f02000\n"
".quad 0x609c005000000088,0x761c005000000068,0x25dd003010f02000,0x041c005000000092\n"
".quad 0xc2dc005000000001,0xf3dc003016d05002,0xa29c00500000008c,0x221c005000000069\n"
".quad 0xb61c005000000000,0x731d003030f02001,0x041c00500000009d,0x62dc005000000079\n"
".quad 0xf3dc003016f02000,0x715c005000000090,0x65dd00500000001c,0x249d003014f00000\n"
".quad 0x039d005000000079,0x821c0050000000b0,0x829c005000000078,0x041d005000000029\n"
".quad 0xb2dc0050000000a9,0xf3dd003016f02001,0xb59c005000000094,0x515d00500000006d\n"
".quad 0x75dc005000000018,0x249d005000000001,0xe39c0050000000a9,0x821c005000000078\n"
".quad 0xa29c0050000000a8,0x041d005000000000,0xa2dc00500000007d,0xf3dd003016f02001\n"
".quad 0x515c005000000098,0x75dc005000000058,0x249c005000000079,0xe39c00500000007d\n"
".quad 0x821c0050000000a8,0xa29c00500000007c,0x041c005000000078,0xb2dc005000000089\n"
".quad 0xf3dd005000000000,0x515d00500000009c,0x75dc005000000068,0x249c0050000000a9\n"
".quad 0xe39c005000000085,0x821d00500000007c,0xa29c005000000080,0x041d0050000000a8\n"
".quad 0xb2dc005000000091,0xf3dd005000000078,0x04dd0050000000a0,0x055c005000000078\n"
".quad 0x515c005000000082,0x75dc005000000000,0x249d00500000007d,0xe39c00500000008d\n"
".quad 0x821d005000000084,0xa61c005000000084,0x041c00500000007c,0xb2dc00500000009d\n"
".quad 0xf3dd0050000000a8,0xa45c0050000000a4,0x309c005800d02801,0x515c0050000000a9\n"
".quad 0x75dc005000000078,0x249c005000000055,0xe39c005000000099,0x821d005000000088\n"
".quad 0x855c00500000008c,0x041d005000000055,0xb2dc0050000000a5,0xf61c00500000007c\n"
".quad 0x645c00580000003c,0x209d003022f02800,0xc31c00500000007c,0x515c0050000000a4\n"
".quad 0x729d0050000000a8,0x249d005000000085,0x125d0050000000a1,0xe39c00500000008e\n"
".quad 0x821d00500000008c,0x02dc005000000094,0x071c003016f02002,0x50dc003030000041\n"
".quad 0x515c005000000096,0xa29d00500000007c,0x045c00500000008c,0x209e003022400035\n"
".quad 0x031e003004000041,0x05dc00301800003d,0x261c005800000041,0x511c005000000049\n"
".quad 0x925d005800d02802,0xe39c005000000098,0x841d005000000090,0x555c005000000098\n"
".quad 0xb2dc005000000085,0xb51c005000000084,0x515d005800d02801,0xa29c005000000080\n"
".quad 0x821d00500000000c,0x011c003038000049,0x925c003008f02802,0xe39c0050000000a0\n"
".quad 0x261c005000000098,0x075d00302e000049,0x271c0050000000a1,0xb41c00302af00002\n"
".quad 0x751c005000000088,0x515c003028f02800,0xa55d005000000084,0xf11c005000000098\n"
".quad 0x225e003008400034,0xe39c00301200003d,0xf5de00500000009c,0xf29c00302e00003c\n"
".quad 0x03dc00303000003c,0x251c00500000008d,0x215c003028400035,0xe49c00300af00002\n"
".quad 0xf3dc0050000000a0,0x541c005000000090,0x215c00500000008c,0xd2dd0050000000a5\n"
".quad 0x53dc00500000005d,0x45dc00301ef02002,0xc49c003020f00002,0x541d00500000008d\n"
".quad 0xf15c005000000028,0x75dd005000000098,0x43dc005000000095,0x515c003024f00002\n"
".quad 0x749c00500000009c,0xf3dc005000000099,0x50dc00500000000c,0x749c0050000000a0\n"
".quad 0xf15c003024f00002,0x30dc005000000098,0x23dc0050000000a4,0x715c0050000000a1\n"
".quad 0xa0dc00300af00002,0x93dc003006400024,0x035de4301ef00002,0x349c0228004000c0\n"
".quad 0xf21d0030ee082084,0x515c005000000020,0x23dc0050000000a0,0xd59c005800d05001\n"
".quad 0x261c005800400054,0x929c005800f02001,0x05dc00300af00002,0x439c02301e400065\n"
".quad 0x815c0030f3333335,0x03dc005800000058,0xcc1d003030400075,0x80dc00500000005e\n"
".quad 0xe5dc00300a000058,0xe61c00301ef02000,0x049c00301ed02000,0xa41c023024400095\n"
".quad 0x739c0030f18e38e4,0x861c00500000000d,0x15dc02500000000d,0x00dc0030f3333335\n"
".quad 0x061c00301cf02001,0x771c003030f02001,0x71dd00301ef02001,0x439c02500000000c\n"
".quad 0xb0dd0030f3333334,0xa61c005000000061,0x871e003020400084,0x775c003038000058\n"
".quad 0xe6dc00301ed02001,0xe5dc00301ef02000,0xd39c00301ed02000,0x53dd005800400044\n"
".quad 0xc71c0050000000a1,0x875e005000000061,0xf55c02303a000058,0xb71c0030f4aaaaac\n"
".quad 0xd75c003038000038,0x8b1e005000000061,0x571c003036000058,0xb6dc003038f00001\n"
".quad 0xc75c00303a000038,0x6bdd005000000062,0x56dc005000000070,0x871e003036f00001\n"
".quad 0xf55c00302e000058,0xb75e00302a4000b4,0xc61c00303a000038,0xa5dd005000000061\n"
".quad 0xd19c00500000006d,0xb61e005000000055,0x46de003030000038,0x081d0030244000a5\n"
".quad 0x419c00500000001a,0x851c0030244000a5,0x171c005000000055,0x175e0030244000a5\n"
".quad 0x595d0030244000a5,0x149c005000000052,0x161c00300c4000a5,0x151e0030364000a5\n"
".quad 0x145e0030364000a5,0x855c00300c4000a5,0x849c003024000058,0x845c003030000058\n"
".quad 0xa55c003022000058,0x851c00302a400084,0xa45c003028000058,0xb55c003022400084\n"
".quad 0xa49c00302a000038,0xa51c003024400084,0xb45c003028400084,0xf55c003022000038\n"
".quad 0xb49c00302a4000b4,0xb51c003024000038,0xf45c003028000038,0x261c0030224000b4\n"
".quad 0xf49c00302acfa000,0xf51c0030244000b4,0x255e0030284000b4,0xe45f003022cfa000\n"
".quad 0x249e005000000001,0x251c003024cfa000,0x109d003028cfa000,0x34dd00500000008a\n"
".quad 0x145c0050000000a9,0x209c0050000000a9,0x34dc00500000008c,0x145c00500000007d\n"
".quad 0x209d00500000007d,0x34dd005000000090,0x145c005000000085,0x469c005000000089\n"
".quad 0x209d0030384000a4,0x34dc005000000098,0x145d00500000008d,0x569c005000000091\n"
".quad 0x209c003034f00000,0x34dd00500000009c,0x145c005000000099,0x069c00500000009d\n"
".quad 0x209d003034f00001,0x145d0050000000a0,0xc69c0050000000a5,0x34dc003034cfa000\n"
".quad 0x209c0050000000a1,0x169c0050000000a4,0x361c003034cf8001,0x4b5e003030cf8001\n"
".quad 0x269e0030364000a4,0x161e003034cf8000,0x8b5c003030cf8001,0x289d00305a000058\n"
".quad 0x0b1d00500000006a,0x401c005000000060,0x469e00300c4000a4,0x461c00300c4000a4\n"
".quad 0x801c0030364000a4,0x869c003000000058,0x861c003034000058,0x421e003030000058\n"
".quad 0x419c0030384000a4,0x459e00303a4000a4,0xb11c03303a4000a4,0x575c0020324000e2\n"
".quad 0x56dc003010f00000,0x5b9c00300cf00000,0x415c23302cf00000,0x419c035800c00080\n"
".quad 0x071de45800c00078,0xa01c0028004000a0,0x515c433000400084,0x411c034000000018\n"
".quad 0xb19c032039c00010,0xa69c004800c04002,0x515c433034400084,0x619c0348004000b0\n"
".quad 0xab5c0020324000e0,0x4c1c85305a400084,0xb69e009400000000,0xbb5e003034000038\n"
".quad 0x075c00305a000038,0x611c23303af00001,0x615c035800c00080,0x0b9c005800c00078\n"
".quad 0xfb5e00305cf00001,0x415c43305a4000b4,0x611c034000000014,0xb19c032039c00010\n"
".quad 0xd35c004800c08002,0x515c435800cfa000,0x619c0348004000b0,0x351e0020324000e0\n"
".quad 0x41dc853028cf8001,0x621c239400000000,0x659c035800c00080,0x349e005800c00078\n"
".quad 0x611c033024cf8001,0x815c432039c00010,0xb19c034000000058,0xb1dc034800c0c002\n"
".quad 0x515c434800c10002,0x619c0348004000b0,0x721c0320324000e0,0x4bdc8520324000e0\n"
".quad 0x659c239400000000,0x6c1c035800c00080,0x619c035800c00078,0x811c232039c00010\n"
".quad 0x61dc435800c00080,0x815c0340000000c1,0xbbdc035800c00078,0x71dc434800c18002\n"
".quad 0x415c4348004000b0,0x811c034000000014,0xb21c032039c00010,0x60dc854800c14002\n"
".quad 0x515c439400000000,0x859c0348004000b0,0xf21c0320324000e0,0x45dc8520324000e2\n"
".quad 0xb19c039400000000,0x60dc234800c1c002,0x61dc035800c00081,0x811c235800c00079\n"
".quad 0x815c035800c00080,0x619c035800c00078,0x30dc4320324000e0,0x45dc43400000001c\n"
".quad 0x611c234000000014,0x615c035800c00080,0xabdc005800c00078,0x061c003030400084\n"
".quad 0x41dc433036f00001,0xb11c034000000014,0xb6de004800c20002,0xbbde003000000038\n"
".quad 0x411c03305e000038,0xb39c0320324000e0,0xc41e004800c28002,0x415c23303acfa000\n"
".quad 0x429c035800c00080,0xe39c035800c00078,0xc61e0020324000e0,0x515c433030cfa000\n"
".quad 0xb29c034000000028,0xf6de004800c24002,0xf75e0030364000b4,0xa29c0330344000b4\n"
".quad 0x969c0020324000e0,0x975e003036000034,0xa01c23303a000034,0xa2dc035800c00080\n"
".quad 0x1c1c005800c00078,0x355c003020cf8001,0x02dc43302acf8001,0xc01c00400000002c\n"
".quad 0xfb9e00305ccfa000,0xe31c23305e4000b4,0xe3dc035800c00080,0x96de005800c00078\n"
".quad 0x9b9c00305c000034,0xc3dc43305a000034,0xb31c03400000003c,0x1bde004800c2c002\n"
".quad 0x1b5e003030cf8001,0xc31c033024cf8001,0x161c0020324000e0,0x2c1c00302acf8001\n"
".quad 0xc25c233060cf8000,0xc35c035800c00080,0x369e005800c00078,0x355c003034cf8001\n"
".quad 0x935c433036cf8001,0xb25c034000000034,0x3b9c004800c30002,0x2bde00305ccf8001\n"
".quad 0x941c03305ecf8000,0x125c0020324000e0,0x151e003028cf8001,0x049c233000cf8001\n"
".quad 0x045c035800c00081,0x701d005800c00079,0x39de0050000000c2,0x245c43303acf8001\n"
".quad 0xb49c034000000045,0x275c004800c34002,0x269c003034cf8000,0x249c03302acf8000\n"
".quad 0xaa9d0020324000e1,0xf7dd005000000026,0x26dc235000000061,0x24dc035800c00081\n"
".quad 0xb61c035800c00079,0xe79d004800c40002,0xb4dc4350000000b5,0x26dc00400000004d\n"
".quad 0xb51c033028cf8000,0x861c034800c38002,0x9a5d0020324000e1,0x451c03500000006e\n"
".quad 0x26de0020324000e1,0x29de00304ecf8000,0x409c23305ccf8000,0x455c035800c00081\n"
".quad 0x38dd005800c00079,0xb69c03500000006a,0x255c434800c44002,0x609c034000000054\n"
".quad 0xb59c032039c00011,0x185d004800c3c002,0x30dc435000000076,0x821c0348004000b0\n"
".quad 0x659c032039c00010,0x875c0320324000e1,0x725c435800c00079,0x619c0348004000b1\n"
".quad 0x65dc232039c00010,0x6b5c035800c00081,0x71dc435800c00079,0x411c0348004000b0\n"
".quad 0x75dc432039c00010,0x8b5c2340000000b5,0x515c435800c00081,0xa29c0348004000b0\n"
".quad 0x699d002039c00010,0xa69c03500000006e,0xb2dc4320324000e1,0xe39c0348004000b0\n"
".quad 0xb6dc032039c00010,0xd75c434800c48002,0xf3dc434000000076,0xc31c0348004000b0\n"
".quad 0xab5c232039c00010,0xab9c035800c00081,0xd35c435800c00079,0x041c0348004000b0\n"
".quad 0x2b1c852039c00011,0xbadc039400000000,0x145c4320324000e1,0x249c0348004000b1\n"
".quad 0x879c852039c00011,0x6a9c859400000000,0x34dc439400000000,0x451c0348004000b1\n"
".quad 0xd6dc432039c00011,0x47dc8540000000ba,0x555c439400000000,0x659c0348004000b1\n"
".quad 0xbb5c032039c00011,0xa81c855800c0007a,0x75dc439400000000,0x861c0348004000b1\n"
".quad 0x491d002039c00011,0xe85c8550000000be,0xd65c439400000000,0xa69c0348004000b1\n"
".quad 0xb75c232039c00011,0xc89c855800c00082,0xb6dc439400000000,0xb71c0348004000b1\n"
".quad 0xdb5c432039c00012,0x08dc8540000000b5,0x291c859400000001,0x89dd009400000001\n"
".quad 0x495c85500000009e,0xd75c439400000001,0x699c8548004000b2,0x801c859400000001\n"
".quad 0xa9dc859400000001,0xca5c859400000001,0x001de79400000001,0xf09c0340000011e0\n"
".quad 0x071de420324000e2,0x015c0328004000a0,0x22dc2320324000e3,0x24dc035800c00080\n"
".quad 0x229c035800c00078,0x811c032039c00010,0xb09c434800c08001,0x825c03400000004c\n"
".quad 0x80dc034800c10001,0x54dc234800c18001,0x555c035800c00080,0x421c035800c00078\n"
".quad 0x22dc4320324000e0,0x511c0348004000b0,0x909c032039c00010,0x351c0320324000e0\n"
".quad 0x315c4320324000e0,0x80dc234000000055,0x825c035800c00080,0x835c035800c00078\n"
".quad 0x515c434800c14001,0x325c4348004000b0,0x821c034000000024,0x24dc232039c00010\n"
".quad 0x255c035800c00080,0xd59c035800c00078,0x925c4320324000e0,0x30dc4348004000b0\n"
".quad 0x209c034000000055,0x841c032039c00010,0x635c234800c20001,0x675c035800c00081\n"
".quad 0x85dc035800c00079,0x30dc434800c2c001,0xa6dc8548004000b0,0x849c039400000000\n"
".quad 0xd55c434800c1c001,0x041c034000000074,0x659c0320324000e1,0x831c032039c00011\n"
".quad 0x44dc234800c28001,0x435c035800c00081,0x839c035800c00079,0x775c034800c24001\n"
".quad 0x249c0320324000e1,0x55dc4320324000e1,0x029c2348004000b1,0x869c855800c00081\n"
".quad 0x06dc039400000000,0x34dc435800c00079,0xc31c034000000035,0x451c0320324000e0\n"
".quad 0xe39c032039c00011,0x2b1c2320324000e0,0x2b5c035800c00081,0xa6dc435800c00079\n"
".quad 0x355c43400000006c,0xc21c2348004000b1,0xc29c035800c00080,0xe4dc235800c00078\n"
".quad 0xeb9c035800c00080,0x249c035800c00078,0xc2dc432039c00011,0x829c4340000000b6\n"
".quad 0x369c434000000028,0xd25c2340000000b9,0xd21c035800c00081,0x845c035800c00079\n"
".quad 0xb4dc434800c30001,0x041c0348004000b0,0x925c432039c00011,0x8adc034000000020\n"
".quad 0x121c034800c34001,0x83dc0320324000e1,0xb45c434800c38001,0xe39c0348004000b1\n"
".quad 0xbb1c032039c00010,0xfadc0320324000e2,0x835c0320324000e0,0xa3dc434800c3c001\n"
".quad 0xc31c0348004000b1,0xd6dc032039c00010,0x82dc0320324000e0,0xa35c434800c40001\n"
".quad 0xd29c0348004000b0,0x41dc852039c00011,0x219c859400000000,0xb69c039400000000\n"
".quad 0x875c2320324000e0,0x8b5c035800c00080,0x92dc435800c00078,0xb1dc2348004000b0\n"
".quad 0xb25c035800c00082,0x821c035800c0007a,0xd15c432039c00010,0xb0dc2340000000b5\n"
".quad 0xb19c035800c00081,0xc11c235800c00079,0xcb9c035800c00082,0x709c435800c0007a\n"
".quad 0xa1dc234000000024,0x30dc435800c00081,0xa75c034000000018,0x525c435800c00079\n"
".quad 0x411c4348004000b0,0xc19c0340000000b8,0x775c432039c00012,0x815c034000000074\n"
".quad 0x41dc434800c44001,0xb11c0348004000b0,0x5adc032039c00012,0x8b1c0320324000e0\n"
".quad 0x215c434800c48001,0xb09c0348004000b0,0xb6dc232039c00011,0xbb5c035800c00082\n"
".quad 0x30dc435800c0007a,0xa61c0348004000b0,0x6a9c852039c00011,0xcb1c039400000001\n"
".quad 0x47dc8520324000e2,0xd65c439400000001,0x201c8548004000b1,0xb6dc439400000001\n"
".quad 0xb69c0340000000b5,0x079c852039c00012,0xc75c239400000001,0xcadc035800c00082\n"
".quad 0xe95c855800c0007a,0xca1c859400000000,0xb6dc439400000000,0xaa5c8548004000b1\n"
".quad 0xc71c039400000000,0xd75c432039c00012,0x899c8540000000ad,0x69dc859400000000\n"
".quad 0x481c859400000000,0xd75c439400000000,0x28dc8548004000b1,0x891c859400000000\n"
".quad 0xa85c859400000001,0xc89c859400000001,0x001de79400000001,0x0000008000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x638e390000000000\n"
".quad 0xf145143ef5c28f3d,0xaaaaab3fd5555540,0x73cf3d3ce38e393d,0x638e39bdb2cb2dbe\n"
".quad 0xcccccd3d8208203c,0x0004013d2aaaab3c,0x00005200080a0400,0x2019030020002000\n"
".quad 0x000000000c170400,0x21f0000018000300,0x000000000c170400,0x11f0000010000200\n"
".quad 0x000000000c170400,0x21f0000008000100,0x000000000c170400,0x21f0000000000000\n"
".quad 0x07005400080d0400,0x005de40000000500,0x00dc042800440400,0x011c042c00000098\n"
".quad 0x001c042c00000088,0x009c042c00000094,0x351ca32c00000084,0x015c042008400030\n"
".quad 0x019c042c0000009c,0x065ca32c0000008c,0x01dde22004400020,0x201e041905f00000\n"
".quad 0x50dca31800000051,0x41dc23200c400040,0x211e04188ec00005,0x919c031800000065\n"
".quad 0x015c004800fffffd,0x209e04300ecfc000,0x411c00180000000d,0x515c00300ecfc000\n"
".quad 0x61dc035000f07f00,0x209c001a20c000f4,0x411c00300ecfc000,0x515c005000f09f80\n"
".quad 0x41dc235800000014,0x359c031a20c000f9,0x209c006000c00018,0x411c005000f07f00\n"
".quad 0x31dc23300a000010,0x66dc0318a0c00004,0x209c004800000051,0x33dc233008000008\n"
".quad 0xb29c031a20c000f8,0x21dc0020324000e1,0x0005e7208ed06000,0x001c008000000000\n"
".quad 0x211e045000cfc000,0x209e041800000059,0x025c001800000019,0x219c005000000010\n"
".quad 0x909c035000cfc000,0x01dde44800c00005,0x661c862800000024,0x209e0480104000fc\n"
".quad 0x431c031800000009,0x209c004800fffffd,0x215e045000cfc000,0x021de41800000031\n"
".quad 0x871c862800000008,0x515c0080104101fc,0x525c005000cfc000,0x01dde45000000010\n"
".quad 0x691c862800000024,0x88dc8680104202fc,0x435c0380104303fc,0x33dc234800c00005\n"
".quad 0xa2dc23190ec000fc,0x215e045800c00080,0x04dde41800000035,0x50dc002800400080\n"
".quad 0xa15c035000cfc000,0x31dc005800c00078,0x60dc035000000010,0x611c034800c00101\n"
".quad 0x025de44800ffff01,0xb2dc43280000001c,0x889c864000000014,0xa41c0380104404fc\n"
".quad 0xd2a4032027c00010,0x20de04480000000c,0x211e04180000000d,0xc21c031800000011\n"
".quad 0x015c004800000058,0x04a5e4500000000c,0x00dc002800400080,0x685c865000000010\n"
".quad 0x011de480104505fc,0xb45c432800000018,0x801c034800400090,0x81dc034800c08000\n"
".quad 0x825c034800c10008,0x82dc034800c23f04,0x831c034800c2bf00,0x835c034800c33f08\n"
".quad 0x839c034800c38104,0x47dc864800c40100,0xa1240380104606fc,0x729c034800c48000\n"
".quad 0x01dde420324000e0,0x001c03280000000c,0x925c0320324000e0,0xb21c0320324000e0\n"
".quad 0xc75c0320324000e0,0xd5dc0320324000e0,0xe55c0320324000e0,0x681c8620324000e0\n"
".quad 0x019c2380104808fc,0x01dc035800c00080,0x039c035800c00078,0x46a4032027c00010\n"
".quad 0x601c4320324000e0,0x011de4400000001c,0xa19c232800000008,0x03dc435800c00080\n"
".quad 0xa1dc034800400090,0x401c865800c00078,0xa31c0380104707fc,0x611c432027c00010\n"
".quad 0x915c23400000001c,0x919c035800c00080,0x435c435800c00078,0x929c034800400090\n"
".quad 0x511c432027c00010,0x81dc234000000018,0x815c035800c00080,0x279c865800c00078\n"
".quad 0x42dc4380104909fc,0x821c034800400090,0x709c432027c00010,0xd0dc234000000014\n"
".quad 0xd11c035800c00081,0x225c435800c00079,0xd19c034800400090,0x309c432027c00011\n"
".quad 0x70dc234000000010,0x715c035800c00081,0x21dc435800c00079,0x711c034800400090\n"
".quad 0x309c432027c00011,0x50dc234000000014,0x55dc035800c00081,0x215c435800c00079\n"
".quad 0x509c034800400090,0x30dc432027c00011,0xa4e423400000005c,0xa564035800c00081\n"
".quad 0x30dc435800c00079,0xa4a4034800400090,0x34e4432025c00011,0x055c854000000055\n"
".quad 0xe69c858400000001,0x34e4438400000000,0xc75c854800400091,0xa95c858400000000\n"
".quad 0x899c858400000000,0x69dc858400000000,0x4a1c858400000000,0x2a5c858400000000\n"
".quad 0x2aa4858400000000,0x0081e78400000001,0x83a1004000003c40,0xa3e1005000000071\n"
".quad 0x5320005000000075,0x65a1005000000082,0xa26000500000009e,0xd1e0005000000069\n"
".quad 0xe420005000000075,0xf3e0005000000090,0xc3a0005000000090,0x4361005000000098\n"
".quad 0x6321005000000056,0x85e00050000000a5,0x82a0003012f02001,0xa5a1005800f02001\n"
".quad 0xf3e000300ef00001,0xe3a000500000008c,0xa1a0005000000078,0xd360005000000075\n"
".quad 0x042100500000008c,0xc5e000500000008d,0x52a000302ef02001,0x65a0003014d05001\n"
".quad 0xf3e1005000000091,0x8160005000000088,0xe3a0005000000061,0x61a000500000009c\n"
".quad 0xd360005000000090,0x71e0005000000088,0x042100500000001d,0xa2a0005000000089\n"
".quad 0x65a0003014f02001,0xf3e100500000008d,0xc520005000000084,0x5161005000000071\n"
".quad 0xe3a1005000000068,0x61a00050000000a0,0xd36000500000008c,0x0420005000000084\n"
".quad 0x71e0005000000085,0xc2a0005000000090,0x65a0003014f02001,0xf3e0005000000089\n"
".quad 0x5160005000000098,0xe3a1005000000050,0x61a000500000007c,0xd360005000000088\n"
".quad 0x0420005000000080,0x71e0005000000081,0x546000500000008c,0xd2a0005000000096\n"
".quad 0x65a0003014f02001,0xf3e1005000000085,0x516100500000009c,0xe3a1005000000074\n"
".quad 0x61a00050000000a4,0xd360005000000084,0x0421005000000098,0x71e0005000000079\n"
".quad 0xd4e0005000000088,0x40a1005800d02801,0xa2a000500000008e,0x65a0005000000090\n"
".quad 0xf3e0005000000045,0x51600050000000a4,0xe3a1005000000090,0xc4a0005000000000\n"
".quad 0x61a1005800d02801,0xd360005000000094,0x0420005000000078,0x75e000500000007d\n"
".quad 0xa4e0005000000084,0x2260003026f02801,0xa2a0005000000088,0x61e100500000008c\n"
".quad 0xf3e1005000000081,0x51600050000000a8,0xe3a100500000008c,0x84a00050000000a8\n"
".quad 0x61a1003024f02801,0xd360005000000080,0x042100500000009c,0x0221005000000001\n"
".quad 0x80e000500000007a,0x92610050000000a2,0xc320005000000084,0xa2a00050000000a8\n"
".quad 0x71e1005000000088,0xf5a0005000000078,0x5160003026400014,0xe4e0005000000088\n"
".quad 0x61a1005800000038,0x7460005000000078,0xd360005000000045,0x0ae000500000007c\n"
".quad 0x8221003024400015,0xa2a000500000007c,0x0262005000000084,0xf32200301200003d\n"
".quad 0x74a0003018000038,0xf5e000500000000c,0x516000580000003c,0xf3e0005000000084\n"
".quad 0x01e000302600003c,0x61a1005000000041,0xd3600050000000a0,0x82200050000000a4\n"
".quad 0x52a0005000000000,0x5161003014f02002,0x71e1005000000094,0x61a100301e000040\n"
".quad 0xd3e000500000007c,0x0222005000000000,0x04e0003010000039,0xa36000302e000041\n"
".quad 0x5160005000000080,0xe422005000000080,0x22a100302e000038,0x65e100500000007d\n"
".quad 0xd4a0005000000000,0x8120005000000098,0x1460005800d02802,0x6160005000000081\n"
".quad 0x736100300af00002,0x2420005000000041,0x5120005000000079,0x6460003008f02802\n"
".quad 0x54a0003022f00002,0xf160005000000078,0x03e00050000000a8,0xe12000500000009d\n"
".quad 0x1420003008400014,0xe3a0005000000079,0x7460003026000038,0x83e0003024f00002\n"
".quad 0x54a100301ef02002,0x1461005000000038,0xf1600050000000a1,0x73e000500000007c\n"
".quad 0x1420003020f00002,0x516000500000007d,0xf3e00050000000a4,0x942000500000000c\n"
".quad 0x50e0003020f00002,0xf160005000000000,0x03e000500000007c,0x30e0005000000001\n"
".quad 0x91600050000000a8,0xa3e000300af00002,0xe0e000301ef00002,0x02e1e43006400004\n"
".quad 0xf4610028004000c0,0x31e002500000001c,0x51600030ee082084,0xb520005000000000\n"
".quad 0x73e0005800400034,0xa420005800f02000,0x73a000300af00002,0xb1a0025800d05000\n"
".quad 0x11600030f3333336,0x23e0005800000051,0x23a000301e400055,0x25e000301c400045\n"
".quad 0x10e000300e400075,0x64a000300a000051,0x51e100301ef02000,0x64e0005000000039\n"
".quad 0x03a002301ed02000,0x21a00030f18e38e5,0x34e000500000000d,0x656002500000000d\n"
".quad 0xe0e00030f3333335,0xeb2000300cf02000,0x54e0003026f02000,0x81a100301ef02001\n"
".quad 0x562000500000000d,0x44a002301ed02001,0xc0e10030f3333334,0x05600050000000b1\n"
".quad 0x14e200301c400065,0x1b22003026000051,0x2720003030000051,0x24a000301ef02001\n"
".quad 0xb3e000301ed02001,0xa2a1005800400024,0x34e0005000000000,0xcb20005000000055\n"
".quad 0x1b62005000000056,0xa620023038000051,0xd4e00030f4aaaaac,0xd72000302600003c\n"
".quad 0xdb2000305800003c,0x84e0005000000056,0x8720003026f00001,0xa620003038f00001\n"
".quad 0xdb22003030400094,0x1b6200305800003c,0xa4e1003024000051,0xc6a000500000004d\n"
".quad 0xd560005000000062,0xd4a1005000000056,0x5961005000000071,0xd6a200500000006a\n"
".quad 0xb72000302a00003c,0xbb2200302e400086,0xa6a000302e400086,0x6560005000000061\n"
".quad 0x65e200302e400085,0x8a2100302e400085,0x662000500000006a,0x6ae0003038400085\n"
".quad 0x66a2003058400085,0x65a2003058400085,0x1760003038400085,0x1620003030000051\n"
".quad 0x15a0003056000051,0x076000302c000051,0x16a000303a400065,0x05a0003034000051\n"
".quad 0xd76000302c400065,0x062000303a00003c,0xd5a0003030400065,0x06a000302c00003c\n"
".quad 0xa760003034400065,0xa5a000303a400094,0xd62000302c400094,0xd6a000303000003c\n"
".quad 0x9ae000303400003c,0x976200303acfa000,0x35a300302ccfa000,0xa620005000000092\n"
".quad 0xa6a0003030400094,0x0b61003034400094,0x65a000500000009a,0x9622005000000089\n"
".quad 0x96a0003030cfa000,0x2261003034cfa000,0xd0a0005000000088,0x65a000500000007a\n"
".quad 0x4b60005000000085,0x20a100302a400084,0x65a000500000009c,0x5b60005000000099\n"
".quad 0x20a100305af00000,0x65a100500000007c,0x926000500000009d,0x20a0005000000084\n"
".quad 0x65a00050000000a4,0xeb600050000000a5,0x926100305af00000,0x20a1005000000080\n"
".quad 0x65a1005000000000,0xcb600050000000a9,0x926000305acfa000,0x20a0005000000078\n"
".quad 0x6b600050000000a8,0x926100305acf8001,0x4be200500000007c,0x2b62003038400084\n"
".quad 0x926000305acf8000,0x4ba0005000000000,0x69a1003058400084,0x4b600050000000b6\n"
".quad 0x4c22003038400084,0x9ae0003058400084,0x1b60003056cf8000,0x1be000305a000051\n"
".quad 0x1ba000305e000051,0x1c2000305c000051,0x6ae2003060000051,0x4522003056cf8001\n"
".quad 0x446000302a400084,0x456200302e400084,0xb12003302e400084,0x4ae10020324000e1\n"
".quad 0x59200050000000ae,0x5460003028f00000,0x5b20003022f00000,0x416023302af00000\n"
".quad 0x4520035800c00080,0x0721e45800c00078,0xe9200028004000a0,0x5160433048f00000\n"
".quad 0x4120034000000050,0xb520032039c00010,0xc922004800c04001,0x5160433048cfa000\n"
".quad 0x45200348004000b0,0xb2e00020324000e1,0x41e0855800cfa000,0x6920009400000000\n"
".quad 0x9622003048cf8001,0x96a2003030cf8000,0x4120233034cf8000,0x4160035800c00081\n"
".quad 0xb1e0035800c00079,0x9760004800c08001,0x416043303acf8000,0x4120034000000014\n"
".quad 0x7520032039c00011,0x66a00020324000e0,0x5160433034cf8001,0x41e02348004000b0\n"
".quad 0x4560035800c00081,0x41a0855800c00079,0x28a1009400000000,0x71e043500000006a\n"
".quad 0x41a0034000000054,0xb120032039c00011,0xb160034800c0c001,0x71e0434800c10001\n"
".quad 0x41200348004000b0,0x55200320324000e0,0x64e08520324000e0,0x4560239400000000\n"
".quad 0x45e0035800c00080,0x4120035800c00078,0x41a0232039c00010,0x5160435800c00081\n"
".quad 0x41e003400000005d,0xb4e0035800c00079,0x5160434800c14001,0x61e04348004000b0\n"
".quad 0x41a003400000001c,0x40e0852039c00011,0xb520039400000000,0x71e0434800c18001\n"
".quad 0x35600348004000b0,0x45200320324000e1,0xb0e00320324000e1,0x64a0854800c1c001\n"
".quad 0x4120239400000000,0x4160035800c00081,0x30e0035800c00079,0x51a02320324000e0\n"
".quad 0x51e0035800c00081,0x44a0435800c00079,0x3120234000000014,0x3160035800c00080\n"
".quad 0x65e0435800c00078,0xb1a003400000001c,0x44e0434800c20001,0x0120004000000014\n"
".quad 0x016000305a400065,0x01e000305e400065,0x0b6000305c400065,0x6420033060400065\n"
".quad 0xe1a00020324000e0,0xeba0003022f00000,0x03a0233058f00000,0x0460035800c00081\n"
".quad 0xd122005800c00079,0xdb2200300800003c,0xe46043300a00003c,0xb3a0034000000044\n"
".quad 0xd1e2004800c24001,0xdb6200300e00003c,0xe3a003305a00003c,0xc1a20020324000e0\n"
".quad 0xa12200300ccfa000,0xe160233008400094,0xe360035800c00080,0xab22005800c00078\n"
".quad 0xa1e2003058400094,0x53e043300e400094,0xb360034000000034,0xc160004800c28001\n"
".quad 0xab6200305ccfa000,0xd32003305a400094,0x81200020324000e0,0x8b2200300800002c\n"
".quad 0xc2a023305800002c,0xc360035800c00080,0x81e2005800c00078,0x8ba000300e00002c\n"
".quad 0xa36043305a00002c,0xb2a0034000000034,0x6be2004800c2c001,0x21a000300ccf8001\n"
".quad 0xa2a0033048cf8000,0x6b620020324000e0,0x6620003030cf8001,0xa22023303acf8001\n"
".quad 0xa2e0035800c00080,0x65a2005800c00078,0x992100300acf8001,0x82e043500000001a\n"
".quad 0xb22003400000002c,0x9762004800c30001,0x9a60003008cf8000,0x822003300ecf8000\n"
".quad 0x9c220020324000e0,0x9ba0003058cf8000,0x816023305ccf8000,0x81a0035800c00080\n"
".quad 0x2260005800c00078,0x2b2000302ccf8000,0x51a043303acf8000,0xb160034000000018\n"
".quad 0xaaa1004800c34001,0x2760005000000026,0x5160033052cf8000,0x2be20020324000e0\n"
".quad 0x226200305ecf8000,0x5120233060cf8000,0x51e0035800c00080,0x2a62005800c00078\n"
".quad 0xf7e100305ccf8000,0x41e0435000000025,0xb12003400000001c,0x1861004800c38001\n"
".quad 0xb620035000000062,0x4120034800c40001,0x38e10020324000e0,0x86200350000000b6\n"
".quad 0x45a02320324000e1,0x40a0035800c00080,0xe7a1005800c00078,0x0821005000000075\n"
".quad 0x60a04350000000b2,0x55a0034000000009,0xb560032039c00011,0x8b20034800c3c001\n"
".quad 0x75e0435800c00079,0x45200348004000b1,0x56a0032039c00011,0x6ae08520324000e1\n"
".quad 0x2560439400000001,0x34a00348004000b1,0xa0e0232039c00010,0xab60035800c00081\n"
".quad 0x34e0435800c00079,0x04200348004000b1,0x30e0432039c00011,0x8b602340000000b4\n"
".quad 0x1460435800c00081,0xe3a00348004000b1,0xdb20432039c00010,0x48e08540000000b2\n"
".quad 0xf3e0439400000001,0xc3200348004000b0,0x28a0852039c00010,0x0860859400000001\n"
".quad 0xd360439400000001,0xa2a00348004000b0,0xe960852039c00010,0x79e1009400000000\n"
".quad 0xb2e04350000000be,0x82200348004000b0,0xc820852039c00010,0xa9a0859400000000\n"
".quad 0x6260439400000000,0x51a00348004000b0,0xb160032039c00010,0xb6e0034800c44001\n"
".quad 0x71e0434800c48001,0x41200348004000b0,0x5760032039c00010,0xbba00320324000e0\n"
".quad 0x21604320324000e1,0xa0a00348004000b0,0xd6a0232039c00011,0xdb60035800c00081\n"
".quad 0x30e0435800c00079,0x86200348004000b0,0xa6e0432039c00011,0x87a08540000000b5\n"
".quad 0xc660439400000000,0xd6a00348004000b2,0xe760232039c00011,0xeb20035800c00082\n"
".quad 0xb6e0435800c0007a,0xe7200348004000b1,0xdb20432039c00012,0x69e08540000000b1\n"
".quad 0x0021009400000000,0x4a208550000000a4,0xc760439400000000,0x27e08548004000b2\n"
".quad 0x8920859400000000,0xa020859400000001,0xcaa0859400000001,0x00a1e79400000001\n"
".quad 0x46c0034000001240,0x0ac1e44800000059,0xb0800328004000a0,0xb180034800c04001\n"
".quad 0xb1c0034800c10001,0x2140034800c14001,0xb0c00320324000e0,0xb200034800c08001\n"
".quad 0x6080034800c18001,0x75800320324000e0,0x51802320324000e0,0x51c0035800c00080\n"
".quad 0x30c0035800c00078,0x85000320324000e0,0xb1000320324000e0,0x5200034800c0c001\n"
".quad 0x6140432057c00010,0x31c023400000001c,0x32c0035800c00080,0x4100035800c00078\n"
".quad 0x52404320324000e0,0x31800348004000b0,0x71c0432057c00010,0x414023400000002c\n"
".quad 0x4540035800c00080,0x71c0435800c00078,0x41000348004000b0,0x5140432057c00010\n"
".quad 0x20c0234000000054,0x24c0035800c00080,0x5140435800c00078,0x20800348004000b0\n"
".quad 0x30c0432057c00010,0x62c023400000004c,0x6540035800c00081,0xb480035800c00079\n"
".quad 0x30c0434800c1c001,0xb5404348004000b0,0x6580034000000054,0x44c0232057c00011\n"
".quad 0x42c0035800c00081,0xb380035800c00079,0x2480034800c24001,0xb4000320324000e1\n"
".quad 0xb300034800c20001,0x55c0434800c28001,0x34c04348004000b1,0x450003400000002d\n"
".quad 0x8700852057c00011,0xe380039400000000,0x2b002320324000e0,0x2b40035800c00081\n"
".quad 0x6740855800c00079,0x0400039400000000,0xc3000320324000e1,0xb2800320324000e0\n"
".quad 0x3540434800c2c001,0xe2402348004000b1,0xe700035800c00080,0xc4c0435800c00078\n"
".quad 0x02002340000000b6,0x0b80035800c00081,0xc1c0235800c00079,0xcb00035800c00080\n"
".quad 0xa280035800c00078,0x24800320324000e0,0x9740432057c00011,0x8180434000000070\n"
".quad 0x72404340000000b8,0xa2002340000000b0,0xa1c0035800c00080,0xb440035800c00078\n"
".quad 0x34c0434800c30001,0x04000348004000b1,0x8200432057c00011,0x11c003400000001c\n"
".quad 0xb3c00320324000e1,0x6440434800c34001,0xe3800348004000b0,0xf180032057c00010\n"
".quad 0xb3400320324000e0,0xd3c0434800c38001,0xc3000348004000b1,0xdb00032057c00010\n"
".quad 0xb2c00320324000e0,0x9340434800c3c001,0xa2800348004000b0,0x4600852057c00010\n"
".quad 0x7240239400000000,0x7b40035800c00080,0x2680855800c00078,0xb740039400000000\n"
".quad 0xb7000320324000e0,0x82c0434800c40001,0x72000348004000b0,0x9140432057c00010\n"
".quad 0xc1c02340000000b4,0xc600035800c00082,0xd0c0235800c0007a,0xd240035800c00081\n"
".quad 0xc700035800c00079,0x61002320324000e1,0x6b80035800c00080,0x7080435800c00078\n"
".quad 0x30c0434000000060,0xc1c0234000000024,0xc600035800c00081,0x5240435800c00079\n"
".quad 0x41004348004000b0,0x61800340000000b8,0x7680432057c00010,0xb140034000000060\n"
".quad 0x41c0434800c44001,0xc1000348004000b0,0x5b00032057c00012,0xb6c00320324000e0\n"
".quad 0x2140434800c48001,0xd0800348004000b0,0xc740232057c00011,0xcb40035800c00082\n"
".quad 0x30c0435800c0007a,0xc6000348004000b0,0x6880852057c00011,0xb700039400000001\n"
".quad 0x48408520324000e1,0xa640439400000001,0x29008548004000b1,0xd6c0439400000001\n"
".quad 0xc6800340000000b5,0x08c0852057c00012,0xc740239400000001,0xcb00035800c00081\n"
".quad 0xea00855800c00079,0xc000859400000000,0xb6c0439400000000,0xaa808548004000b1\n"
".quad 0xc700039400000000,0xd740432057c00011,0x87c08540000000b1,0x6a40859400000000\n"
".quad 0x4940859400000000,0xd740439400000000,0x27808548004000b1,0x89c0859400000000\n"
".quad 0xa800859400000001,0xc980859400000001,0x001de79400000001,0x0000008000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0xf145140000000000\n"
".quad 0xaaaaab3fd5555540,0x73cf3d3ce38e393d,0x638e39bdb2cb2dbe,0xcccccd3d8208203c\n"
".quad 0x0004013d2aaaab3c,0x0000b50008020400,0x0802040000000300,0x000008000000b900\n"
".quad 0x0000b40008020400,0x0802040000000200,0x000001000000b200,0x0000b00008020400\n"
".quad 0x0802040000000000,0x000007000000c000,0x0000be0008020400,0x0802040000000600\n"
".quad 0x000005000000b700,0x0000bb0008020400,0x0802040000000900,0x000004000000b600\n"
".quad 0x00005f00080a0400,0x2019030020002000,0x000000000c170400,0x21f0000018000300\n"
".quad 0x000000000c170400,0x11f0000010000200,0x000000000c170400,0x21f0000008000100\n"
".quad 0x000000000c170400,0x21f0000000000000,0x03002400080d0400,0x005de40000000200\n"
".quad 0x00dc042800440400,0x011c042c00000098,0x001c042c00000088,0x009c042c00000094\n"
".quad 0x30dca32c00000084,0x015c042008400030,0x019c042c0000009c,0x021de22c0000008c\n"
".quad 0x065ca31905f00000,0x21de042004400020,0x501ca3180000000d,0x31dc23200c400040\n"
".quad 0x219e04188ec00004,0x911c031800000065,0x71dc004800fffffd,0x215e043010cfc000\n"
".quad 0x619c001800000001,0x71dc003010cfc000,0x41dc035000f07f00,0x515c001a20c000f4\n"
".quad 0x619c003010cfc000,0x71dc005000f09f80,0x31dc23580000001c,0x009c031a20c000f8\n"
".quad 0x515c006000c00018,0x619c005000f07f00,0x01dc23300e000018,0x271c0318a0c00004\n"
".quad 0x515c00480000000c,0x03dc23300c000014,0xc19c031a20c000f8,0x51dc0020324000e1\n"
".quad 0x0005e7208ed06000,0x361c038000000000,0x615c234800000008,0x61dc035800c00080\n"
".quad 0x009de45800c00078,0x82dc032800400080,0x531c434800c27f01,0x689c03400000001c\n"
".quad 0x849c032005c00010,0x8bdc034800c3c101,0x819c034800c04001,0x81dc034800c13ffd\n"
".quad 0xc8dc434800c20005,0x321c034800400090,0x815c034800c00004,0x829c034800c07ffd\n"
".quad 0xb31c034800c10005,0x90dc0320084000e0,0x84dc034800c00005,0x855c034800c2ff01\n"
".quad 0x22dc034800c33f05,0x63dc0320084000e1,0x735c0320084000e0,0xf49c0320084000e0\n"
".quad 0x51dc0320084000e2,0xa11c0320324000e0,0x329c0320324000e0,0x515c0320064000e1\n"
".quad 0x24dc2320324000e1,0x255c035800c00081,0x269c035800c00079,0x839c032005c00011\n"
".quad 0x349c434800c1c005,0xf4dc234000000055,0xf55c035800c00080,0x26dc435800c00078\n"
".quad 0xf99c034800400091,0x33dc432005c00010,0xd49c234000000055,0xd4dc035800c00080\n"
".quad 0xf9dc435800c00078,0xdb1c034800400090,0x235c432005c00010,0xc3dc23400000004d\n"
".quad 0xc49c035800c00080,0x845c035800c00078,0xdb5c434800c2befd,0x8c1c034800400090\n"
".quad 0xca9c034800c0c001,0xe51c032005c00010,0xf31c4320064000e0,0x139c034000000048\n"
".quad 0xb35c2320324000e1,0xb3dc035800c00080,0x045c035800c00078,0xcadc4320064000e3\n"
".quad 0xba1c034800400090,0xd35c432005c00010,0x12dc23400000003c,0x131c035800c00081\n"
".quad 0xda5c435800c00079,0x83dc234800400090,0x825c03188ec00100,0x181c034800c48000\n"
".quad 0xb2dc432005c00011,0x821c034000000030,0x731c234800c17ffd,0x735c035800c00080\n"
".quad 0xb85c435800c00078,0x819c034800400090,0x779c0320064000e0,0x859c032005c00010\n"
".quad 0xc1dc434800c38101,0x62dc234000000034,0x631c035800c00080,0x621c035800c00078\n"
".quad 0x77dc4320324000e1,0x659c034800400090,0xb19c432005c00010,0x841c034000000030\n"
".quad 0x42dc234800c23f01,0x43dc035800c00080,0x65dc435800c00078,0x041c034800400090\n"
".quad 0x449c0320324000e1,0xb4dc432005c00010,0x419c23400000003c,0x445c035800c00081\n"
".quad 0x031c235800c00079,0x035c035800c00081,0xe11c235800c00079,0xe1dc035800c00080\n"
".quad 0x34dc435800c00078,0x655c434800400091,0x451c034000000044,0xa2dc232005c00011\n"
".quad 0xa19c035800c00080,0xc45c435800c00078,0x43dc434000000034,0x531c23400000001c\n"
".quad 0x511c035800c00080,0x555c435800c00078,0x041c034800400091,0xb19c432005c00011\n"
".quad 0xc2dc434000000018,0x81dc234000000010,0x811c035800c00080,0x145c435800c00078\n"
".quad 0xe39c034800400091,0x711c432005c00010,0x81dc034000000010,0xf3dc434800c44101\n"
".quad 0xa31c034800400090,0x001c032005c00010,0x71dc034800c00004,0x80dc0320064000e0\n"
".quad 0x635c434800c400fd,0x05dc234800400090,0x529c03188ec00100,0x30dc032005c00010\n"
".quad 0x925c0420324000e0,0x0008032002c480fc,0x0029e26000c00018,0xb2dc431800003f00\n"
".quad 0x821c034800400090,0x315c232005c00010,0x319c035800c00080,0x901c035800c00078\n"
".quad 0x425c434800000000,0x515c434800400090,0x311c034000000018,0x70dc232005c00010\n"
".quad 0x719c035800c00080,0x515c435800c00078,0x709c034800400090,0x319c432005c00010\n"
".quad 0x01dde44000000018,0x001c032800400080,0x60dc4320324000e0,0x2b9c854800400090\n"
".quad 0x019c038400000002,0x075c23200fc00010,0x01dc035800c00080,0xa6dc855800c00078\n"
".quad 0x699c858400000001,0xd1dc438400000002,0xa91c85400000001d,0x88dc858400000002\n"
".quad 0x075c858400000002,0xe69c858400000002,0x71dc438400000001,0xc95c854800400090\n"
".quad 0x689c858400000002,0x24dc858400000001,0x49dc858400000001,0x085c858400000001\n"
".quad 0xe81c858400000001,0xc7dc858400000000,0xa79c858400000000,0x801c858400000000\n"
".quad 0x4a1c858400000000,0x2a5c858400000000,0x6a9c858400000000,0x0081e78400000000\n"
".quad 0xb3a1004000003c40,0x1320005000000075,0xa3e1005000000092,0xe42000500000004d\n"
".quad 0xc3a0005000000098,0x0561005000000080,0xa1a000500000007a,0x3220005000000069\n"
".quad 0x62e100500000004d,0xa0a00050000000ba,0xf3e000500000004d,0xe3a0005000000098\n"
".quad 0xb2a000500000007c,0x5321005800f02001,0xb5a00050000000a1,0xa56100300cf02001\n"
".quad 0xb2e0003010f00001,0x21a0005000000088,0x0421005000000098,0xf3e0005000000089\n"
".quad 0xe3a0005000000088,0xe2a0005000000078,0xd5a0003014d05002,0xb16000302cf02001\n"
".quad 0x556000500000006d,0xb2e0005000000099,0x61a000500000009c,0x0421005000000088\n"
".quad 0xf3e100500000009d,0xe3a100500000009c,0xa2a0005000000000,0x6220003014f02001\n"
".quad 0xd1e0005000000021,0x5161005000000075,0x5560005000000068,0xb2e0005000000089\n"
".quad 0x61a0005000000094,0x042000500000009c,0xf3e1005000000095,0xe3a1005000000094\n"
".quad 0xd2a000500000008c,0x8220003014f02001,0x5160005000000098,0x556000500000001c\n"
".quad 0xb2e000500000009d,0x61a0005000000090,0x0420005000000094,0xf3e0005000000091\n"
".quad 0xe3a1005000000080,0x32a00050000000a0,0x8220003014f02001,0x14a0005000000088\n"
".quad 0x5161005000000086,0x556000500000004c,0x6621005000000095,0xb2e000500000008a\n"
".quad 0x61a1005000000080,0x0421005000000084,0xf3e100500000007d,0xe3a1005000000078\n"
".quad 0xa2a00050000000a4,0x8220005000000098,0x516000500000009c,0x5560005000000098\n"
".quad 0x3460005000000049,0x80a0005800d02801,0xb2e000500000009d,0x61a100500000007c\n"
".quad 0x0420005000000090,0xf3e000500000008d,0xe3a10050000000a0,0xa2a00050000000a8\n"
".quad 0x85a0005000000088,0x4261005000000094,0x516000500000007e,0x5221005000000088\n"
".quad 0xa460005000000091,0x20a1003022f02801,0xc320005000000094,0xb2e00050000000a8\n"
".quad 0x61a1005000000078,0x042100500000007c,0xf3e10050000000a5,0xe5600050000000a8\n"
".quad 0xa2a0005800000038,0xd52000500000009c,0x9261005800d02801,0x516000500000008c\n"
".quad 0x64a000500000009c,0xb2e0005000000049,0x61a100500000008c,0xf460005000000000\n"
".quad 0x00a2003022400014,0xf32200300400003d,0xf5a0003018000038,0xf5e000580000003c\n"
".quad 0xa2a000302a00003c,0x03e0005000000094,0xb520005000000041,0x9260003028f02801\n"
".quad 0x51600050000000a4,0xb2e0005000000094,0x65610050000000a0,0x12a000500000008c\n"
".quad 0xf1a1003014f02002,0x516100302e000040,0x0520005000000084,0x0262003028400015\n"
".quad 0x05e0003012000039,0x24a000302c000041,0xb420005000000091,0xa2e00050000000a4\n"
".quad 0x5160005000000090,0x02a0005000000090,0xe5a2003024f00002,0x556100302c000038\n"
".quad 0xb4a00050000000a5,0x0120005000000080,0x0160005800d02800,0x52e100300af00002\n"
".quad 0x24a0005000000059,0x112000500000007d,0x5560003008f02802,0x016000500000007c\n"
".quad 0x24200050000000a9,0xe120005000000079,0xe3a0003008400014,0xa4a000302e000038\n"
".quad 0x02a000500000007c,0x5421003020f02000,0xe560005000000038,0xa16000302af00001\n"
".quad 0x00e000500000008c,0x8221005000000000,0xe2a000500000007c,0x5160003024f00001\n"
".quad 0x55610050000000a0,0x8220005000000001,0xa2a000500000000c,0x50e000500000000c\n"
".quad 0x54a00050000000a4,0xa16000500000008d,0x30e000500000008c,0x84a00050000000a8\n"
".quad 0x8160003024f00002,0xe0e000300af00002,0x22a0003006400004,0x0361e450000000a5\n"
".quad 0x34a00228004000c0,0xa2a00030ee082084,0x5160003014f00002,0x23a00050000000a4\n"
".quad 0xd1e0005800d05001,0xa1a1005800400034,0x25a0005000000018,0x83e1005800f02001\n"
".quad 0xa2a000500000008c,0x056000300af00002,0x422002301c400045,0x61600030f3333335\n"
".quad 0x03a000580000001c,0xebe100302c400055,0x60e0005000000056,0x856000300a00001c\n"
".quad 0x85e000301cf02000,0x04a000301cd02000,0xa420023024400075,0x52200030f18e38e4\n"
".quad 0x756000500000000d,0x15a002500000000d,0x00e00030f3333335,0x0ae0003010f02001\n"
".quad 0x656000302af02001,0xb22100301cf02001,0x65a000500000000d,0x45e002301cd02001\n"
".quad 0xd0e10030f3333334,0xa6e00050000000ad,0x6ae2003020400064,0x6b2200302a00001c\n"
".quad 0x776000302c00001c,0x75e000301cf02001,0xb5a000301cd02001,0xd3a000500000006e\n"
".quad 0xf3e1005800400024,0xcae00050000000a4,0x6b2200500000006e,0xf56002303a00001c\n"
".quad 0xb7600030f4aaaaac,0xb5a0003056000038,0xcae000302c000038,0x576000500000006e\n"
".quad 0x6b2200303af00001,0x55a000302e00001c,0x35e100302cf00001,0xf560005000000075\n"
".quad 0xbae200302a400094,0xc4e0003056000038,0xa5a100500000006e,0xb6a0005000000059\n"
".quad 0xb4e2005000000056,0x4762003026000038,0x1861003024400085,0x34e000500000006a\n"
".quad 0x46a0005000000055,0x1b20003024400085,0x1ba2003024400085,0x0021003024400085\n"
".quad 0x14a000500000004c,0x1560003034400085,0x14e200303a400085,0x146200303a400085\n"
".quad 0x6520003034400085,0x64a000302400001c,0x646000302a00001c,0x64e000302200001c\n"
".quad 0xa52000302600001c,0xa460003028400064,0xa4a0003022400064,0xa4e0003024400064\n"
".quad 0xb460003026400064,0xb520003022000038,0xb4a0003028000038,0xb4e0003024000038\n"
".quad 0xf460003026000038,0xf520003022400094,0xf4a0003028400094,0xf4e0003024400094\n"
".quad 0x2562003026400094,0x2463003022cfa000,0x26e000500000009a,0x24a2003028cfa000\n"
".quad 0x2520003024cfa000,0x40a1003026cfa000,0x1460005000000082,0x84e100500000009d\n"
".quad 0x20a000500000009d,0x146000500000007c,0x34e0005000000095,0x20a1005000000095\n"
".quad 0x1460005000000078,0x4620005000000081,0x34e1003058400084,0x20a1005000000091\n"
".quad 0x146100500000008c,0x5620005000000079,0x34e0003030f00000,0x20a000500000007d\n"
".quad 0x14600050000000a0,0x06200050000000a1,0x34e1003030f00001,0x20a100500000008d\n"
".quad 0x14610050000000a4,0xc6200050000000a9,0x34e0003030cfa000,0x20a00050000000a5\n"
".quad 0x16200050000000a8,0x36e0003030cf8001,0x4b62003036cf8001,0x2ae200303a400084\n"
".quad 0x1622003030cf8000,0x46e2003036cf8001,0x0821003034400084,0x6ae10050000000ae\n"
".quad 0x4620005000000062,0x46a0003034400084,0x66e000303a400084,0x662000303600001c\n"
".quad 0x66a000303000001c,0x6b6000303400001c,0x41e200305a00001c,0x41a0003058400084\n"
".quad 0x476200305c400084,0xc12003305c400084,0x5b200020324000e1,0x59a000300ef00000\n"
".quad 0x5ba000300cf00000,0x416023303af00000,0x41a0035800c00080,0x0761e45800c00078\n"
".quad 0xa6e00028004000a0,0x5160433036400064,0x4120034000000018,0xc1a003203bc00010\n"
".quad 0xa6a0004800c04001,0x5160433034400064,0x61a00348004000b0,0xab600020324000e0\n"
".quad 0x4be085305a400064,0xb6e2009400000000,0xb6a2003036000038,0xbb62003034000038\n"
".quad 0x612023305a000038,0x6160035800c00080,0x0b20005800c00078,0xfb62003058f00001\n"
".quad 0x416043305a400094,0x6120034000000014,0xc1a003203bc00010,0xd360004800c08001\n"
".quad 0x5160435800cfa000,0x61a00348004000b0,0x35220020324000e0,0x4220853028cf8001\n"
".quad 0x61e0239400000000,0x6be0035800c00080,0x34a2005800c00078,0x6120033024cf8001\n"
".quad 0x716043203bc00010,0xc1a00340000000bc,0xc1e0034800c0c001,0x5160434800c10001\n"
".quad 0x61a00348004000b0,0x72200320324000e0,0x45a08520324000e0,0x6be0239400000000\n"
".quad 0x6c20035800c00080,0x61a0035800c00078,0x812023203bc00010,0xf1e0435800c00080\n"
".quad 0x81600340000000c2,0xcbe0035800c00078,0x71e0434800c18001,0x41604348004000b0\n"
".quad 0x8120034000000014,0xc22003203bc00010,0x60e0854800c14001,0x5160439400000000\n"
".quad 0x85a00348004000b0,0xf2200320324000e0,0x45e08520324000e2,0xc1a0039400000000\n"
".quad 0x60e0234800c1c001,0x61e0035800c00081,0x8120235800c00079,0x8160035800c00080\n"
".quad 0x61a0035800c00078,0x30e04320324000e0,0x45e043400000001c,0x6120234000000014\n"
".quad 0x6160035800c00080,0xabe0005800c00078,0x0620003030400064,0x41e043304cf00001\n"
".quad 0xc120034000000014,0xbbe2004800c20001,0x09a000305e000038,0x412003305cf00001\n"
".quad 0xc4220020324000e0,0xfba2003058cfa000,0x4160233036400094,0x42a0035800c00080\n"
".quad 0xc622005800c00078,0xc9a0003030cfa000,0x516043304ccfa000,0xc2a0034000000028\n"
".quad 0xfb22004800c24001,0xf6e200305e400094,0xa2a0033034400094,0x96a00020324000e0\n"
".quad 0x9b22003058000034,0xa2e023305c000034,0xa3a0035800c00080,0x96e2005800c00078\n"
".quad 0x9ba0003036000034,0xb2e043305a000034,0xc3a0034000000038,0x1c20004800c28001\n"
".quad 0x3560003020cf8001,0xe3a003302acf8001,0x1be20020324000e0,0x1b62003030cf8001\n"
".quad 0xe320233024cf8001,0xe3e0035800c00080,0x1620005800c00078,0x2c2000302acf8001\n"
".quad 0xc3e0433060cf8000,0xc32003400000003c,0x36a2004800c2c001,0x3560003034cf8001\n"
".quad 0xc320033036cf8001,0x3ba00020324000e0,0x2be200305ccf8001,0xc26023305ecf8000\n"
".quad 0xc360035800c00080,0x5961005800c00078,0xc620035000000062,0x9360434800c40001\n"
".quad 0xc260034000000034,0x28a1004800c30001,0x86200350000000b6,0x94200320324000e1\n"
".quad 0x12600020324000e0,0x1522003028cf8001,0x04a023304ccf8001,0x0460035800c00081\n"
".quad 0x89a1005800c00079,0x3a220050000000c2,0x2460433058cf8001,0xc4a0034000000045\n"
".quad 0x2b20004800c34001,0x26a0003034cf8000,0x24a003302acf8000,0x79e10020324000e1\n"
".quad 0xf7e1005000000026,0x26e0235000000069,0x24e0035800c00081,0xc6a0035800c00079\n"
".quad 0x4921004800c44001,0xb4e04350000000b2,0x26e000400000004d,0xc520033028cf8000\n"
".quad 0x8b20034800c38001,0xaaa1005800c00079,0x452003500000006e,0x26e20020324000e1\n"
".quad 0x2a22003050cf8000,0x40a023305ccf8000,0x4560035800c00081,0x38e1005800c00079\n"
".quad 0xa6a003500000006e,0x25604320324000e1,0x60a0034000000054,0xc5a003203bc00011\n"
".quad 0xc6e0034800c3c001,0x30e0434800c48001,0x82200348004000b0,0x65a003203bc00010\n"
".quad 0xaba00320324000e1,0x7260435800c00079,0x61a00348004000b1,0x65e023203bc00010\n"
".quad 0x6b60035800c00081,0x71e0435800c00079,0x41200348004000b0,0x75e043203bc00010\n"
".quad 0x8b602340000000b5,0x5160435800c00081,0xa2a00348004000b0,0xdb2043203bc00010\n"
".quad 0xab602340000000b2,0xb2e0435800c00081,0xe3a00348004000b0,0x2ae085203bc00010\n"
".quad 0xb720039400000000,0xf3e04320324000e1,0xc3200348004000b0,0x88a085203bc00010\n"
".quad 0x69e0859400000000,0xd360439400000000,0x04200348004000b0,0xd6e043203bc00011\n"
".quad 0x49608540000000ba,0x1460439400000000,0x24a00348004000b1,0xcb6003203bc00011\n"
".quad 0xa860855800c00079,0x34e0439400000000,0x45200348004000b1,0xe7a100203bc00011\n"
".quad 0xe9208550000000bd,0x5560439400000000,0x65a00348004000b1,0xc82085203bc00011\n"
".quad 0x07e0859400000000,0x75e0439400000001,0x86200348004000b1,0x27a085203bc00011\n"
".quad 0x9a21009400000001,0xc6604350000000a2,0xa6a00348004000b2,0xcb2023203bc00011\n"
".quad 0x4020855800c00081,0xb6e0439400000001,0xc7200348004000b1,0xcb6043203bc00011\n"
".quad 0x68e08540000000b6,0x89a0859400000001,0xd760439400000001,0xaa208548004000b2\n"
".quad 0xcaa0859400000001,0x00a1e79400000001,0xf0800340000011e0,0x0701e420324000e2\n"
".quad 0x01400328004000a0,0x22402320324000e3,0x2500035800c00080,0x2200035800c00078\n"
".quad 0x8100032039c00010,0x9080434800c08001,0x81c0034000000050,0x80c0034800c10001\n"
".quad 0x5540234800c18001,0x55c0035800c00080,0x4180035800c00078,0x22404320324000e0\n"
".quad 0x51000348004000b0,0x7080032039c00010,0x35000320324000e0,0x51404320324000e0\n"
".quad 0x60c023400000005d,0x61c0035800c00080,0x82c0035800c00078,0x5140434800c14001\n"
".quad 0x31c04348004000b0,0x618003400000001c,0x2540232039c00010,0x25c0035800c00080\n"
".quad 0xb580035800c00078,0x71c04320324000e0,0x50c04348004000b0,0x208003400000005d\n"
".quad 0x62c0232039c00010,0x6ac0035800c00081,0x8480035800c00079,0x8380034800c1c001\n"
".quad 0x30c0434800c24001,0x84000348004000b0,0x8300034800c20001,0xb5c0434800c28001\n"
".quad 0x65800340000000ac,0x4540232039c00011,0x42c0035800c00081,0x2480035800c00079\n"
".quad 0x87408520324000e1,0xe380039400000000,0x64c08520324000e0,0x0400039400000000\n"
".quad 0xc3000320324000e1,0x75c04320324000e0,0x82800348004000b1,0x5540434800c2c001\n"
".quad 0x450003400000002d,0x2ac0232039c00011,0x2b00035800c00081,0xe240235800c00079\n"
".quad 0xeb40035800c00080,0x0200235800c00078,0x0b80035800c00081,0xc1c0235800c00079\n"
".quad 0xc4c0035800c00080,0xa280035800c00078,0x55404320324000e0,0xb7404348004000b1\n"
".quad 0x24800340000000b2,0x9ac0432039c00011,0x81804340000000b4,0x72404340000000b8\n"
".quad 0xa20023400000004c,0xa1c0035800c00080,0x8440035800c00078,0xd4c0434800c30001\n"
".quad 0x04000348004000b1,0x8200432039c00011,0x11c003400000001c,0x83c00320324000e1\n"
".quad 0x6440434800c34001,0xe3800348004000b0,0xf180032039c00010,0x83400320324000e0\n"
".quad 0xb3c0434800c38001,0xc3000348004000b2,0xdb00032039c00010,0x82c00320324000e0\n"
".quad 0x9340434800c3c001,0xa2800348004000b0,0x46c0852039c00010,0x7240239400000000\n"
".quad 0x7b40035800c00080,0x2680855800c00078,0xbac0039400000000,0x87400320324000e0\n"
".quad 0x82c0434800c40001,0x72000348004000b0,0x9140432039c00010,0xc1c02340000000b4\n"
".quad 0xc6c0035800c00082,0xb0c0235800c0007a,0xb240035800c00082,0xd740035800c0007a\n"
".quad 0x61002320324000e1,0x6b80035800c00080,0x7080435800c00078,0x30c043400000006c\n"
".quad 0xd1c0234000000024,0xd680035800c00081,0x5240435800c00079,0x41004348004000b0\n"
".quad 0x61800340000000b8,0x7680432039c00010,0x8140034000000068,0x41c0434800c44001\n"
".quad 0xc1000348004000b0,0x5b00032039c00012,0x86c00320324000e0,0x2140434800c48001\n"
".quad 0xb0800348004000b0,0xcac0232039c00012,0xcb40035800c00082,0x30c0435800c0007a\n"
".quad 0xd6000348004000b0,0xb740032039c00011,0x69c08520324000e1,0xa640439400000001\n"
".quad 0x49408548004000b1,0xb6c0439400000001,0xc6800340000000b6,0x2980852039c00012\n"
".quad 0x0880859400000001,0xdac0239400000001,0xdb00035800c00081,0xe000855800c00079\n"
".quad 0xb6c0439400000000,0xca408548004000b1,0xd700039400000000,0xaa80852039c00011\n"
".quad 0xb740439400000000,0x88c08540000000b2,0x6a00859400000000,0x4840859400000000\n"
".quad 0xd740439400000000,0x27c08548004000b1,0x8780859400000000,0xa900859400000001\n"
".quad 0xc800859400000001,0x001de79400000001,0x0000008000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0xf145140000000000,0xaaaaab3fd5555540\n"
".quad 0x73cf3d3ce38e393d,0x638e39bdb2cb2dbe,0xcccccd3d8208203c,0x0004013d2aaaab3c\n"
".quad 0x00006800080a0400,0x2019030020002000,0x000000000c170400,0x21f0000018000300\n"
".quad 0x000000000c170400,0x11f0000010000200,0x000000000c170400,0x21f0000008000100\n"
".quad 0x000000000c170400,0x21f0000000000000,0x03002400080d0400,0x005de40000000200\n"
".quad 0x011c042800440400,0x015c042c0000009c,0x009c042c0000008c,0x00dc042c00000098\n"
".quad 0x45dca32c00000088,0x001c04200a400040,0x079c042c00000094,0x259ca32c00000084\n"
".quad 0x715c032006400030,0x08dca36000c00019,0x001de4203c400020,0x599c032800400020\n"
".quad 0xffdc854800000058,0x651c03c900000c03,0x0fdc0320464000e2,0xffdc042028000004\n"
".quad 0x20de0450ee0000ff,0x309c031800000059,0x21de044800fffffe,0x319c001800000015\n"
".quad 0x209e045000cfc000,0x30dc031800000009,0x625c004800c00006,0x209c00500000001c\n"
".quad 0x0a5de45000cfc000,0x0a1de42800000024,0x891c862800000008,0x20de0480104000fe\n"
".quad 0x311c00180000000d,0x60dc035000cfc000,0x021de44800fffffd,0x20de042800000010\n"
".quad 0x865c86180000000d,0x30dc0080104101fc,0x325c005000cfc000,0x00dde4500000001c\n"
".quad 0x271c862800000024,0x889c8680104202fc,0x625c0380104303fc,0x529c034800c00005\n"
".quad 0x52dc034800c00100,0x20de044800ffff00,0x75dc231800000025,0x041de4190ec000fd\n"
".quad 0x30dc002800400080,0x30dc005000cfc000,0x61dc03500000001c,0x015de44800c07ffe\n"
".quad 0x485c86280000000c,0x621c0380104404fc,0x631c034800c10006,0x635c034800c23f02\n"
".quad 0x639c034800c2befe,0x63dc034800c33f06,0x645c034800c38102,0x455c234800c400fe\n"
".quad 0x449c035800c00081,0x281c865800c00079,0x20de0480104505fc,0x96a8031800000029\n"
".quad 0x229e044800000028,0x615c00180000002d,0x72dc03500000000c,0x825c0320464000e0\n"
".quad 0xc21c0320464000e0,0xd1dc0320464000e0,0xe61c0320464000e0,0x47dc8620464000e0\n"
".quad 0x00dde480104707fc,0x531c432800000014,0xf4dc034000000049,0x145c0320464000e0\n"
".quad 0x04a9e420464000e1,0x439c032800400080,0x615c002021c00011,0xa968035000000028\n"
".quad 0x26dc864800c48001,0xb0dc2380104606fc,0xb19c035800c00080,0xc3dc435800c00078\n"
".quad 0xb31c034800400090,0x30dc432021c00010,0x919c234000000018,0x92dc035800c00080\n"
".quad 0x335c435800c00078,0x929c034800400090,0x469c862021c00010,0x60dc4380104909fc\n"
".quad 0x811c23400000002c,0x819c035800c00080,0x32dc435800c00078,0x821c034800400090\n"
".quad 0x00dde42021c00010,0x411c432800000014,0x79dc234000000018,0x715c035800c00080\n"
".quad 0x275c865800c00078,0x425c4380104808fc,0x719c034800400090,0x709c432021c00010\n"
".quad 0x80dc234000000016,0x815c035800c00081,0x21dc435800c00079,0x811c034800400090\n"
".quad 0x309c432021c00011,0x30dc234000000014,0x361c035800c00081,0x215c435800c00079\n"
".quad 0x309c034800400090,0x30dc432021c00011,0x161c234000000060,0x19dc035800c00081\n"
".quad 0x30dc435800c00079,0x54e8034800400090,0x4a9c8520464000e2,0x61dc238400000000\n"
".quad 0x141c03190e0000fd,0x845c432021c00011,0xe39c85400000009d,0x3628238400000000\n"
".quad 0x3968035800c00081,0x2adc855800c00079,0x33dc238400000000,0x011c041920c000fe\n"
".quad 0x145c432c00000084,0x34a8034800400091,0x83e8432025c00011,0x71dc234000000095\n"
".quad 0x63dc23190e0000fd,0x409e031922c000fd,0xf4e8436000c00008,0x11dc044800400090\n"
".quad 0x2fdc850c24000040,0x2fdc85c900000000,0xc95c85c900000400,0xaa5c858400000000\n"
".quad 0x89dc858400000000,0x6a1c858400000000,0x0b1c858400000000,0x2b68858400000001\n"
".quad 0x2fdc858400000001,0x0081e7c900000800,0x4220004000003c40,0x4121005000000092\n"
".quad 0x51e1005000000066,0x70a00050000000a6,0x9460005000000076,0x8621005000000065\n"
".quad 0x84210050000000aa,0xc0e1005000000094,0x43e0005000000089,0x54e0005000000070\n"
".quad 0x72e0005000000096,0x2220005000000070,0x80a10050000000a0,0x04600050000000b1\n"
".quad 0x3620005000000045,0xf421005000000084,0x44e0005000000088,0xb3e0003026f02002\n"
".quad 0xb5e0005000000088,0x54a0005800d02802,0x82e00050000000a6,0x9520005000000068\n"
".quad 0x82210050000000a6,0xc261005000000081,0x4560005000000039,0x9620005800f02002\n"
".quad 0x71e0003026f02001,0x24a000302ef02802,0x0421005000000071,0x55e1005000000085\n"
".quad 0xf3e1003028f00002,0x9260005000000084,0xe560005000000088,0x852000302ad05000\n"
".quad 0x24a0005000000051,0xb2e0005000000089,0x04200050000000a8,0x1461005000000081\n"
".quad 0xf3e10050000000a5,0x9260005000000080,0x5560005000000084,0x74e000302af02002\n"
".quad 0x4520005000000071,0x24a0005000000071,0xb2e1005000000085,0x04200050000000ac\n"
".quad 0x1460005000000075,0xf3e0005000000071,0x92600050000000a0,0x9560005000000080\n"
".quad 0x34e000302af02001,0x4520005000000089,0x24a0005000000089,0xb2e1005000000081\n"
".quad 0x042100500000006c,0x1460005000000069,0xf3e1005000000089,0x92600050000000a8\n"
".quad 0x9560005000000074,0x34e000302af02002,0x4520005000000085,0x24a1005000000085\n"
".quad 0xb2e100500000009d,0x06200050000000b0,0x936000500000006d,0x1460005800d02802\n"
".quad 0xf420005000000085,0x73200050000000b0,0x926000500000009e,0x55600050000000a0\n"
".quad 0x34e0005000000071,0x43e0005000000081,0x25e1005000000081,0xb2e1005000000075\n"
".quad 0xd1a100500000007c,0x5360005000000069,0x14a000301af02802,0x0421005000000081\n"
".quad 0x92600050000000b5,0x5560005000000068,0x34e0005000000089,0xf460005000000031\n"
".quad 0xb321005000000030,0x95a00050000000b4,0x61a1005800d02801,0x02e000500000006c\n"
".quad 0x926000301a400015,0x55600050000000a8,0x1360005000000085,0x83e1005000000075\n"
".quad 0xc46000500000007d,0x4120005800000030,0x61a000302cf02802,0x34e100500000007c\n"
".quad 0x9620005000000075,0x556000500000006c,0x7521005000000081,0xf262005000000069\n"
".quad 0x0ba0003010000040,0xb160003022000041,0x34e10050000000ae,0xf5e0005000000069\n"
".quad 0xf222003008400014,0xf46000300c000030,0x24a100500000003c,0xc12000500000009d\n"
".quad 0x71a000300e400014,0x452100302af02002,0x81e00050000000ad,0x20a00050000000b1\n"
".quad 0x34e00050000000b4,0x0620005000000015,0x1461005800000041,0x24a000305c00003d\n"
".quad 0x6ba0005000000075,0x4561005000000074,0x00a200500000006d,0xf3e0003004000031\n"
".quad 0x352100303000003c,0x842000500000006d,0xe4e0003024f00002,0xc4a20050000000a2\n"
".quad 0x8620003030000030,0xc32000301af00002,0x536100301e000030,0x33e000500000007d\n"
".quad 0x71e0005000000069,0xd36100500000007c,0xf3e0005000000048,0x04a00050000000a8\n"
".quad 0x8420005000000069,0xb3e0005000000069,0xa4a000301ef02002,0xa420003024f00002\n"
".quad 0xf3e0003020f00002,0x24a100500000006c,0x04200050000000ad,0xf3e0005000000015\n"
".quad 0x24a00050000000b0,0x71e000500000006d,0xf1600050000000b4,0xc4a000500000007c\n"
".quad 0x03e0003024f00002,0x516000500000006d,0x24200050000000b4,0xc3e000500000007d\n"
".quad 0xc16000301ef00002,0x71e100300a400004,0xd420005000000030,0xf320003020f00002\n"
".quad 0x53e002500000007c,0x02a1e430ee082084,0x04e10028004000c0,0xd420005000000045\n"
".quad 0xf320003018f00002,0xa5a0005800d05000,0xf560005800400034,0x74a0005800f02000\n"
".quad 0x71a0023018400044,0x31600030f3333335,0x7320005800000059,0x762000302a400054\n"
".quad 0xe1e100301e400074,0x3460005000000048,0x63a000300a000059,0x6560003018f02000\n"
".quad 0x03e0023018d02000,0xe1a00030f18e38e5,0x53a0005000000044,0xb4a0025000000045\n"
".quad 0xf1a00030f3333334,0xfba000300cf02000,0x446002301cf02000,0x23a00030f3333334\n"
".quad 0x2560003018f02001,0x41a1003018d02001,0x94a100500000001a,0x1ba00050000000b9\n"
".quad 0x1920003018f02001,0x4321003018d02001,0x066000500000007d,0x352200301e400065\n"
".quad 0x356200301c000059,0xa46000302a000059,0x4520005800400024,0x5560005000000065\n"
".quad 0xc3a0025000000065,0xd5200030f4aaaaac,0x3be2003028000044,0xdba000305c000059\n"
".quad 0xe56000302a000044,0xfbe0003028f00000,0xe520005000000066,0x556100305cf00000\n"
".quad 0x3962005000000056,0xc3a0003048000059,0xdba200301c400094,0x566000305e000044\n"
".quad 0x7ca2005000000066,0xe920003030400085,0xd66200500000003a,0x7ba0003032000044\n"
".quad 0xb5e0003030400085,0x9960003030400084,0xb662005000000039,0xb3a0003030400084\n"
".quad 0x952100305c400084,0x7921005000000052,0xb620005000000092,0xb9e2003064400084\n"
".quad 0xba62003064400084,0x32e000305c400084,0x33a000301c000059,0x3620003030000059\n"
".quad 0x39e000304e000059,0x02e0003052000059,0x03a0003016400065,0x062000301c400065\n"
".quad 0x09e0003030400065,0xd2e000304e400065,0xd3a0003016000044,0xd62000301c000044\n"
".quad 0xd9e0003030000044,0xc2e000304e000044,0xc3a0003016400094,0xc62000301c400094\n"
".quad 0xca60003030400094,0xb96100304e400094,0x99e0005000000096,0x93a2003016cfa000\n"
".quad 0x962000301ccfa000,0x9ae2003030cfa000,0x2263003052cfa000,0xda61005000000072\n"
".quad 0x32e10050000000a1,0x90e0005000000084,0x9a60005000000084,0xb26000500000006a\n"
".quad 0x30e0005000000080,0x9a61005000000080,0x92610050000000aa,0x32e0005000000074\n"
".quad 0x90e10050000000a0,0x4a6000500000006e,0xb2e100302e400084,0x92600050000000a8\n"
".quad 0x5a60005000000068,0x30e0003052f00000,0xb2e00050000000b0,0xfa600050000000b0\n"
".quad 0x9261003052f00000,0x30e100500000006c,0xb2e100500000007c,0x2a600050000000b4\n"
".quad 0x9260003052cfa000,0x30e000500000007c,0xbbe00050000000b4,0x9a60003052cf8000\n"
".quad 0x4c2000304ecf8000,0x39e2003064400084,0x4be000305ecf8000,0x4c6200305c400084\n"
".quad 0x4ca200305c400084,0x3be0003064400084,0x3c6000305e000059,0x3c20003062000059\n"
".quad 0x3ca0003060000059,0x45a2003064000059,0xba6200302e400084,0x44e0003052cf8000\n"
".quad 0x45e2003032400084,0x6120033032400084,0x89e10020464000e2,0xca6100500000009e\n"
".quad 0x5a200050000000a5,0x54e000302cf00000,0x5ba0003026f00000,0x416023302ef00000\n"
".quad 0x45a0035800c00080,0x0721e45800c00078,0xa2a00028004000a0,0x5160435800cfa000\n"
".quad 0x4120034000000058,0x65a0032039c00010,0x93a2004800c04002,0x516043301ccf8000\n"
".quad 0x65a00348004000b0,0x96220020464000e1,0x41e0853030cf8000,0x9ae0009400000000\n"
".quad 0x6120233056cf8000,0x6160035800c00081,0x4160435800c00079,0x6120034000000014\n"
".quad 0x65a0032039c00011,0x5160434800c08002,0x65a00348004000b0,0x41a08520464000e1\n"
".quad 0x61e0239400000000,0x65e0035800c00081,0x61a0035800c00079,0x71e0432039c00011\n"
".quad 0x612003400000005c,0x6160034800c0c002,0x71e0434800c10002,0x41200348004000b0\n"
".quad 0x55a00320464000e0,0x65608520464000e0,0x45e0239400000000,0x4660035800c00080\n"
".quad 0x4120035800c00078,0x61a0232039c00010,0x7160435800c00081,0x61e0034000000065\n"
".quad 0x6560035800c00079,0x5160434800c14002,0x61e04348004000b0,0x61a003400000001c\n"
".quad 0x44a0852039c00011,0x65a0039400000000,0x71e0434800c18002,0x55e00348004000b0\n"
".quad 0x61600320464000e1,0x6520854800c1c002,0x65a0039400000000,0x71202320464000e1\n"
".quad 0x5160035800c00081,0x71a00320464000e0,0x61e0235800c00079,0x64a0035800c00081\n"
".quad 0x4660435800c00079,0x5120234000000018,0x7520435800c00080,0x51a0034000000048\n"
".quad 0x64a0035800c00078,0x01e0004800c20002,0x4560433060400065,0x0120004000000018\n"
".quad 0x24a003305e400065,0x01a00020464000e1,0xfbe0003062400065,0x0c20003050f00000\n"
".quad 0xfa20003064400065,0xfc60003026f00000,0x23e023305cf00000,0x2420035800c00081\n"
".quad 0xd1a2005800c00079,0xd1e200300c000044,0xf4e043300e000044,0x6420034000000040\n"
".quad 0xd3e2004800c24002,0xdc22003008000044,0x0420033060000044,0x2ba20020464000e1\n"
".quad 0x2a2200305ecfa000,0x0120233050cfa000,0x0360035800c00081,0xcbe2005800c00079\n"
".quad 0xc1a200300c400094,0x446043300e400094,0x6360034000000034,0x2120004800c28002\n"
".quad 0xcc62003062cfa000,0xd0a0033060400094,0xc3620020464000e0,0x632003301e400094\n"
".quad 0x21e0234800c2c002,0x23e0035800c00080,0xc320035800c00078,0x8c220020464000e0\n"
".quad 0x73e043305e000028,0x81e000400000003c,0x81a200301a000028,0x8c6000300c000028\n"
".quad 0xc220233062000028,0xc2a0035800c00080,0xbbe2005800c00078,0xbca200301ccf8000\n"
".quad 0x8360433050cf8000,0xb220004000000028,0x62a003305ccf8000,0xbba0004800c30002\n"
".quad 0x3220003030cf8000,0xa2a0033010cf8000,0xb3a00020464000e0,0xb2e2003056cf8000\n"
".quad 0xca21003008cf8000,0xa120235000000022,0xa220035800c00080,0x9622005800c00078\n"
".quad 0x9ae000300ecf8000,0x422043300ccf8000,0x6120034000000020,0x3b20004800c34002\n"
".quad 0x9c22003016cf8000,0x4120033060cf8000,0x9c600020464000e0,0xdb21003062cf8000\n"
".quad 0x41a02350000000b2,0x41e0035800c00080,0x3260005800c00078,0x3ca2003056cf8000\n"
".quad 0x61e0433064cf8000,0x61a003400000001c,0x3b60004800c38002,0x32e2003030cf8000\n"
".quad 0x61a0033060cf8000,0x3ae20020464000e0,0x1861003062cf8000,0x66202350000000ba\n"
".quad 0x60e0035800c00080,0x28a1005800c00078,0x08210050000000be,0x80e043500000003a\n"
".quad 0x762003400000000d,0x65e0032039c00011,0xdb61004800c3c002,0x96604350000000b5\n"
".quad 0x65a00348004000b1,0x7ba0032039c00011,0xac210020464000e1,0x45e0435000000025\n"
".quad 0x55200348004000b1,0xe160232039c00010,0xebe0035800c00082,0x5560435800c0007a\n"
".quad 0x24a00348004000b1,0x5160432039c00011,0x6be00340000000bc,0x34e0434800c40002\n"
".quad 0x04200348004000b1,0x8a60852039c00011,0x68a0859400000001,0x1460439400000001\n"
".quad 0x23a00348004000b1,0xf0a0032039c00010,0x48608520464000e2,0xf3e0439400000001\n"
".quad 0xc3200348004000b0,0x2be0232039c00010,0x2760035800c00080,0xd360435800c00078\n"
".quad 0xa2a00348004000b0,0xf760432039c00010,0xbbe1004000000076,0x82e043500000002d\n"
".quad 0x42200348004000b0,0x6120032039c00010,0x66e0034800c44002,0x7260434800c48002\n"
".quad 0x61a00348004000b0,0x46a0032039c00010,0xb8e00320464000e0,0x31e04320464000e1\n"
".quad 0xe1200348004000b0,0xa0e0232039c00012,0xa9a0035800c00081,0x5160435800c00079\n"
".quad 0x20a00348004000b0,0x36e0432039c00010,0x2820854000000098,0xd0e0439400000001\n"
".quad 0xa6a00348004000b1,0x3760232039c00011,0x39a0035800c00082,0x0920855800c0007a\n"
".quad 0xaaa1009400000001,0xeb608550000000ca,0xb6e0439400000000,0xc9e08548004000b1\n"
".quad 0x3720039400000000,0xd760432039c00012,0xac20854000000099,0x8aa0859400000000\n"
".quad 0xf7e1009400000000,0x69608550000000ad,0xd760439400000000,0x4be08548004000b1\n"
".quad 0x2a20859400000000,0xa7e0859400000000,0xcb20859400000001,0x00a1e79400000001\n"
".quad 0x0981e44000000820,0x0181e428004000e0,0x01c1e428004000f0,0x60c00328004000a0\n"
".quad 0x6080035800c00052,0x6140032029c04002,0x60c1835800c0004a,0x210003400000000c\n"
".quad 0x68c1c35800c00078,0x50c0434000000014,0x258003480000000d,0x308043200fc00010\n"
".quad 0x25c0434000000010,0x65000348004000b0,0x664085202dc10002,0x7540439400000001\n"
".quad 0x648003480000008d,0x4a40852029c10002,0x54c0439400000001,0x638003480000008d\n"
".quad 0x2900852025c10002,0x33c0439400000001,0x630003480000008d,0xe94085201dc10002\n"
".quad 0xf340439400000000,0x620003480000008c,0xc840852019c10002,0xd240439400000000\n"
".quad 0x628003480000008c,0x8800852011c10002,0x92c0439400000000,0x610003480000008c\n"
".quad 0xa700852015c10002,0xb140439400000000,0x618003480000008c,0x4880852009c10002\n"
".quad 0x51c0439400000000,0x608003480000008c,0x6ac085200dc10002,0x70c0439400000000\n"
".quad 0x640003480000008c,0x27c0852005c10002,0x3440439400000000,0x660003480000008c\n"
".quad 0x0b40852021c10002,0x1640439400000001,0x658003480000008d,0x86c0852031c10002\n"
".quad 0x95c0439400000001,0x648003480000008d,0x6b0085202dc10002,0x74c0439400000001\n"
".quad 0x630003480000008d,0x29c0852025c10002,0x3340439400000001,0x620003480000008d\n"
".quad 0xc680852019c10002,0xd240439400000000,0x610003480000008c,0x8a80852011c10002\n"
".quad 0x9140439400000000,0x608003480000008c,0x4740852009c10002,0x50c0439400000000\n"
".quad 0x2a0085480000008c,0xffdc049400000000,0x00dde450ee0000ff,0xf09c852800400160\n"
".quad 0x31dc23c100000c03,0x00dde41a0ec09c3c,0x21dc232800400020,0x31dc231900c00004\n"
".quad 0x0021e71a00c00004,0x001c238000000000,0xe1dc035800c00004,0x0081e71b0e000001\n"
".quad 0xe0a00340000001e0,0xe122034800000001,0x2162036000c00009,0x40e0856000c00008\n"
".quad 0x50a085c100000000,0x31a000c100000000,0x40e0855000000008,0x41a085c100000400\n"
".quad 0x50a085c900000000,0x31a000c100000400,0x40e0855000000008,0x41a085c100000800\n"
".quad 0x50a085c900000400,0x30a000c100000800,0x40a0855000000008,0xffdc04c900000800\n"
".quad 0x01dc2350ee0000ff,0x0001e71a0ec00004,0x001de74003fffd60,0x0000008000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0xd5555540f1451400\n"
".quad 0xe38e393daaaaab3f,0xb2cb2dbe73cf3d3c,0x8208203c638e39bd,0x2aaaab3ccccccd3d\n"
".quad 0x080204000004013d,0x0000010000008c00,0x00008a0008020400,0x0802040000000000\n"
".quad 0x0000070000009a00,0x0000980008020400,0x0802040000000600,0x0000050000009100\n"
".quad 0x0000950008020400,0x0802040000000900,0x0000040000009000,0x00008f0008020400\n"
".quad 0x0802040000000300,0x0000080000009300,0x00008e0008020400,0x080a040000000200\n"
".quad 0x3c00200000004900,0x0c1704003c190300,0x3800070000000000,0x0c17040011f00000\n"
".quad 0x3000060000000000,0x0c17040021f00000,0x2800050000000000,0x0c17040021f00000\n"
".quad 0x2000040000000000,0x0c17040021f00000,0x1800030000000000,0x0c17040021f00000\n"
".quad 0x1000020000000000,0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000\n"
".quad 0x0000000000000000,0x080d040021f00000,0x0000010002001800,0x00440400005de400\n"
".quad 0x0000009400dc0428,0x00000084011c042c,0x00000098001c042c,0x00000088009c042c\n"
".quad 0x08400020311ca32c,0x0440003000dca320,0x00c00004401c0320,0x0000000d21de0448\n"
".quad 0x00000001219e0418,0x104000fc615c8618,0x0000009c001c0480,0x0000008c009c042c\n"
".quad 0x04400040001ca32c,0x004000a0009de420,0x0000000c001cc328,0x084000c0001c0340\n"
".quad 0x00c0008000dc2320,0x00c00078011c0358,0x05c00010009c0358,0x00000010301c4320\n"
".quad 0x004000b000dc4340,0x00000000215c8548,0x00000000001de794,0x0000000000000080\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0802040000040100,0x0000000000008900\n"
".quad 0x00004100080a0400,0x1819030018002000,0x000000000c170400,0x21f0000010000200\n"
".quad 0x000000000c170400,0x21f0000008000100,0x000000000c170400,0x21f0000000000000\n"
".quad 0x00440400005de400,0x0000009800dc0428,0x00000088011c042c,0x00000094001c042c\n"
".quad 0x00000084009c042c,0x0000009c015c042c,0x0000008c019c042c,0x0840003033dca32c\n"
".quad 0x0440002000dca320,0x0c400040559ca320,0x8ec00008f1dc2320,0x00fffff8311c0318\n"
".quad 0x00c00019675c0348,0x05f0000001dde260,0x0000003d261e0419,0x20c000ec41dc0318\n"
".quad 0x0000003dd11c031a,0x0000000d201e0448,0x0ecfc001865c0018,0x00000059209e0430\n"
".quad 0x00c34000439c0318,0x0ecfc00005dc0048,0x00f07f0192dc0030,0x0ecfc00028dc0050\n"
".quad 0x064000e0e31c0330,0x00c3800041dc0320,0x00f09f81729c0048,0x0000002cb2dc0050\n"
".quad 0x004000a0021de458,0x00c00080c45c2328,0x00c00078c49c0358,0x064000e0735c0358\n"
".quad 0x00c3c000419c0320,0x16000028a69c0048,0x11c00010c51c0330,0x00000049129c4320\n"
".quad 0x00c00080d2dc2340,0x00c00078d31c0358,0x064000e0641c0358,0x00c40000415c0320\n"
".quad 0x004000b0a55c4348,0x11c00010d49c0348,0x00000030b29c4320,0x00c0008102dc2340\n"
".quad 0x00c00079031c0358,0x064000e056dc0358,0x00c44000409c0320,0x004000b0a4dc4348\n"
".quad 0x11c00011041c0348,0x00000030b29c4320,0x00c00081b2dc2340,0x00c00079b35c0358\n"
".quad 0x064000e0279c0358,0x00c48000471c0320,0x004000b0a45c4348,0x11c00011b31c0348\n"
".quad 0x00000034b29c4320,0x00c00081e2dc2340,0x00c00079e6dc0358,0x20c000f4f1dc2358\n"
".quad 0x064000e1c7dc031a,0x004000b0a35c4320,0x00f07f02325c0048,0x11c00011e29c0350\n"
".quad 0x0000006cb2dc4320,0xa0c0000961dc2340,0x00c00081f6dc2318,0x00c00079f79c0358\n"
".quad 0x004000b0b2dc4358,0x34000024925c0048,0x11c00011f21c0330,0x00000079b69c4320\n"
".quad 0x20c000f563dc2340,0x8ed0600091dc001a,0x00c00060105d0320,0x0600008d2adc8448\n"
".quad 0x064000e0401c0314,0x004000b1a25c4320,0x00005e000005e748,0x00fffffc321c0340\n"
".quad 0x00cfc001829c0048,0x00000075225e0450,0x00000021221e0418,0x00c0000432dc0318\n"
".quad 0x00000024a35c0048,0x00cfc000821c0050,0x0000003404dde450,0x00000020049de428\n"
".quad 0x104000fd2c9c8628,0x0000002d22de0480,0x00fffffcf51c0318,0x00cfc000b31c0048\n"
".quad 0x0000005122de0450,0x104101fcccdc8618,0x00cfc000b2dc0080,0x00000020041de450\n"
".quad 0x00000024b35c0028,0x00000034045de450,0x104202fd0c1c8628,0x104303fccd1c8680\n"
".quad 0x00c00004f55c0380,0x00c00080041c2348,0x00c00078045c0358,0x0000005522de0458\n"
".quad 0x0ec000fd63dc2318,0x00400080079de419,0x00cfc000b2dc0028,0x00ffff01d59c0350\n"
".quad 0x0000004504dc4348,0x00000024b25c0040,0x00c00101d2dc0350,0x00000024035de448\n"
".quad 0x104404fccd5c8628,0x0000002d54640380,0x0000002d22de0448,0x00000059235e0418\n"
".quad 0x3dc00010069c0318,0x00000075441c0320,0x004000800025e448,0x0000002ca2dc0028\n"
".quad 0x00000034a35c0050,0x104505fc8d9c8650,0x00000030029de480,0x0040009136dc4328\n"
".quad 0x00c08001025c0348,0x00c1000904dc0348,0x00c23f05051c0348,0x00c2bf01055c0348\n"
".quad 0x00c33f09059c0348,0x00c3810505dc0348,0x00c40101061c0348,0x00c4800116640348\n"
".quad 0x104707fcaa5c8648,0x064000e0945c0380,0x064000e134dc0320,0x064000e1451c0320\n"
".quad 0x064000e1589c0320,0x064000e1641c0320,0x064000e1785c0320,0x064000e1881c0320\n"
".quad 0x064000e197e40320,0x104909fcca9c8620,0x00000034025de480,0x00c00081131c2328\n"
".quad 0x00c00079135c0358,0x00000020029de458,0x3dc00011161c0328,0x00000034c31c4320\n"
".quad 0x00c00081335c2340,0x00c00079345c0358,0x00400090c65c4358,0x104606fcaadc8648\n"
".quad 0x3dc00011359c0380,0x00000044d29c4320,0x00c0008142dc2340,0x00c00079431c0358\n"
".quad 0x00400090a5dc4358,0x3dc00011451c0348,0x00000030b29c4320,0x00c00082235c2340\n"
".quad 0x00c0007a22dc0358,0x104808fc8b1c8658,0x000000101c1c8580,0x000000201d1c85c8\n"
".quad 0x000000016bdc85c8,0x00400090a55c4384,0x3dc00012249c0348,0x0000002cd21c4320\n"
".quad 0x00c00081025c2340,0x00c00079029c0358,0x0040009084dc4358,0x3dc00011041c0348\n"
".quad 0x00000028921c4320,0x00c00082125c2340,0x00c0007a129c0358,0x00400090845c4358\n"
".quad 0x3dc00012131c0348,0x00000028921c4320,0x00c00082025c2340,0x00c0007a02dc0358\n"
".quad 0x00400090835c4358,0x3dc00012029c0348,0x0000002c921c4320,0x00c00081f2642340\n"
".quad 0x00c00079f7a40358,0x0040009082dc4358,0x01c00011f2240348,0x0000007890244320\n"
".quad 0x000000301d5c8540,0x00000001a69c85c8,0x0040009002644384,0x000000401d9c8548\n"
".quad 0x000000018c5c85c8,0x0000000149dc8584,0x00000001299c8584,0x00000001001c8584\n"
".quad 0x00000000cb9c8584,0x00000000aa1c8584,0x000000008b648584,0x000000501bdc8584\n"
".quad 0x00003c600001e7c8,0x000000cb249c0040,0x000000cf235d0050,0x000000bf141d0050\n"
".quad 0x000000b2729c0050,0x00d02802f65c0050,0x00d02802e6dc0058,0x00f0200325dc0058\n"
".quad 0x00d02803355c0058,0x000000c7161c0058,0x000000c5275d0050,0x000000c0d4dc0050\n"
".quad 0x000000c1059c0050,0x0000006b025d0050,0x00000098a49c0050,0x32f02803141c0050\n"
".quad 0x36f02802729c0030,0x2ed05001a65c0030,0x2af02803235c0030,0x30f0200326dc0030\n"
".quad 0x000000d135dd0030,0x000000aac7dd0050,0x000000d0955c0050,0x000000d1661c0050\n"
".quad 0x000000bf179c0050,0x000000a9259c0050,0x32f02003165c0050,0x000000bef51c0030\n"
".quad 0x36f0200336dc0050,0x000000d575dd0030,0x000000adf85d0050,0x000000d5555c0050\n"
".quad 0x000000d5861d0050,0x000000cf33dc0050,0x000000c1e7dc0050,0x00000001659c0050\n"
".quad 0x32f02003365c0050,0x28f00003179d0030,0x00000051b6dc0030,0x000000d975dc0050\n"
".quad 0x000000d9551c0050,0x000000d9861d0050,0x0000003dd75c0050,0x000000b9655d0050\n"
".quad 0x32f02002f65c0050,0x000000c1e79c0030,0x000000c1b6dc0050,0x000000b1759c0050\n"
".quad 0x0000009985dc0050,0x000000bdd75d0050,0x000000c1961c0050,0x000000d1e79c0050\n"
".quad 0x000000d1b65c0050,0x000000c1d75c0050,0x000000b1451c0050,0x000000d5e79c0050\n"
".quad 0x000000d5965c0050,0x00000002681d0050,0x000000ad555d0050,0x000000a9659d0050\n"
".quad 0x000000d308dd0050,0x000000d1d75c0050,0x00000099451c0050,0x0000000175dd0050\n"
".quad 0x0000009e745c0050,0x000000d9e79c0050,0x000000d1861c0050,0x000000d9965c0050\n"
".quad 0x000000a2089d0050,0x000000a1555d0050,0x000000ad659c0050,0x000000d6381c0050\n"
".quad 0x000000d5d6dc0050,0x000000a9451c0050,0x000000a175dc0050,0x00000045e75c0050\n"
".quad 0x000000d5861c0050,0x00000045965c0050,0x000000a5555d0050,0x000000a5645d0050\n"
".quad 0x000000da04dd0050,0x000000d1f7dc0050,0x00000001451c0050,0x000000b5759d0050\n"
".quad 0x000000d9b6dc0050,0x000000d985dc0050,0x000000a613dc0050,0x000000b5555d0050\n"
".quad 0x000000d5f7dc0050,0x000000ad451c0050,0x204000156c1c0050,0x260000591bde0030\n"
".quad 0x000000b6249c0030,0x0000009db6dd0050,0x1a400015141c0050,0x2ef0200274dc0030\n"
".quad 0x1e000055135e0030,0x0000005555dc0030,0x000000d9f7dc0058,0x000000a143dc0050\n"
".quad 0x000000b1b61c0050,0x24000055695e0050,0x00000059649c0030,0x2e00005966dc0058\n"
".quad 0x0000009df7dd0030,0x000000a4f59c0050,0x000000b133dc0050,0x000000b1f79d0050\n"
".quad 0x30f00002661c0050,0x00000098f3dc0030,0x000000b1d75d0050,0x000000a9e79d0050\n"
".quad 0x000000a9861c0050,0x000000b1951c0050,0x000000a8f3dc0050,0x000000bae2dc0050\n"
".quad 0x000000a9d75d0050,0x00000045165c0050,0x000000b9e79d0050,0x30f00000061c0050\n"
".quad 0x14400015591c0030,0x00000000f3dc0030,0x0000002dd29c0050,0x2400004515dc0050\n"
".quad 0x3600004596dd0030,0x000000ade75d0030,0x000000b9845d0050,0x24000055579e0050\n"
".quad 0x1ef02002e3dc0030,0x2e000055555c0030,0x000000ad15dc0030,0x000000acf45c0050\n"
".quad 0x28f00002649c0050,0x2ef00002861c0030,0x000000a115dc0030,0x000000b5645c0050\n"
".quad 0x000000a5865c0050,0x000000a5759c0050,0x000000a9261c0050,0x000000a5d75d0050\n"
".quad 0x000000b565dc0050,0x00000055159d0050,0x00000079d3dd0050,0x2e400005545c0050\n"
".quad 0x30f0000005dc0030,0x004000c0031de430,0xee082085155c0228,0x0000002d77dc0030\n"
".quad 0xf333333704dc0250,0x00d0500152dc0030,0x00f0200155dc0058,0x2a400075689c0058\n"
".quad 0x32f00002d49c0030,0x16400045679c0030,0x2e400055681c0030,0x44400085059c0030\n"
".quad 0x0000000018dc8530,0xf3333336451c02c8,0x44400085061e0030,0x00400034c25c0030\n"
".quad 0x0000006d249d0058,0x40d02001355c0050,0x2c40008705dc0030,0x40f0200132dc0030\n"
".quad 0x40f02001475c0030,0x40d020014d1c0030,0x2c40008706de0030,0x2c400086485c0030\n"
".quad 0x2c4000864e1e0030,0x30400087065e0030,0x0000002528dc0030,0x30400087059c0058\n"
".quad 0x3040008644dc0030,0x30400086451e0030,0x2a0000252dde0030,0x064000e0421c0330\n"
".quad 0x2e000025255c0020,0x3a0000252d9e0030,0x680000252d5e0030,0x3200002525dc0030\n"
".quad 0x36000025261c0030,0x46000025245c0030,0x1600002522de0030,0x2c000025259c0030\n"
".quad 0x42000025265c0030,0x70000025275c0030,0x2600002526dc0030,0x280000252d1c0030\n"
".quad 0x00c00080825c2330,0x00c00078849c0358,0x00000079a4dd0058,0x004000a0079de450\n"
".quad 0x00000048985c4328,0x000000adf25c0040,0x3dc00010821c0350,0x00c04000469c0320\n"
".quad 0x12f00002851c0048,0x004000b2125c4330,0xf3333335049c0248,0x000000a5451c0030\n"
".quad 0x064000e1a7dc0350,0x0000000084dc8520,0x40f02001241c0094,0x28f00002d69c0030\n"
".quad 0x40d02001249c0030,0x00000045021c0030,0xf18e38e5a85c0250,0x00c00081f51c2330\n"
".quad 0x00c00079f81c0358,0x10f02002125c0058,0x00000045241c0030,0x0000008144dc4350\n"
".quad 0x3dc00011f21c0340,0x00000027245d0020,0x20f02002141c0050,0x004000b1325c4330\n"
".quad 0x000000aca29d0048,0x00000043341d0050,0x00000000845c8550,0x42400065acdc0094\n"
".quad 0x00c08000449c0330,0x00400024c51c0048,0x000000a4a81d0058,0x000000ccb21c0050\n"
".quad 0x064000e1225c0350,0xf4aaaaae07dc0220,0x10000050f21c0030,0x00c0c00044dc0330\n"
".quad 0x00c00080929c2348,0x00c0007892dc0358,0x10f00001f21c0058,0x064000e1349c0330\n"
".quad 0x0000002ca2dc4320,0x00000023145d0040,0x00c00081221c2350,0x00c0007924dc0358\n"
".quad 0x3dc00010929c0358,0x00c140004c5c0320,0x0000004c825c4348,0x004000b0b2dc4340\n"
".quad 0x3dc00011221c0348,0x00c10000449c0320,0x00000000a45c8548,0x004000b0925c4394\n"
".quad 0x064000e124dc0348,0x30400065af1c0020,0x00000000841c8530,0x00c18000429c0394\n"
".quad 0x064000e3145c0348,0x000000cf6c9c0020,0x00c00081321c2350,0x00c00079325c0358\n"
".quad 0x064000e0a2dc0358,0x00c00081141c2320,0x00000024849c4358,0x00c00080b21c2340\n"
".quad 0x00c00078b25c0358,0x00c000791c5c0358,0x2a400065a55c0058,0x00000024829c4330\n"
".quad 0x00c1c000421c0340,0x000000c5041c4348,0x000000cf7c5c0040,0x064000e0825c0350\n"
".quad 0x000000cf5cdc0020,0x2e400065ad5c0050,0x00c00080921c2330,0x00c00078961c0358\n"
".quad 0x32400065a5dc0058,0x2c400065a59c0030,0x00000060821c4330,0x00c20000461c0340\n"
".quad 0x3a400065a65c0048,0x36400065a6dc0030,0x68400065a69c0030,0x2a000050fe1c0030\n"
".quad 0x064000e1861c0330,0x2e000050f55e0020,0x2c000050fddc0030,0x6a000050fd9c0030\n"
".quad 0x32000050f5de0030,0x62000050fedc0030,0x64000050fe9e0030,0x66000050fe5e0030\n"
".quad 0x78000050fd5c0030,0x36000050f59e0030,0x34000050f65e0030,0x00c0008183dc2330\n"
".quad 0x00c00079851c0358,0x00c24000469c0358,0x2a400096055e0048,0x00000050f3dc4330\n"
".quad 0x00cfa000c51c0040,0x2e40009605de0058,0x2c400096059e0030,0x32400096065e0030\n"
".quad 0x064000e1a31c0330,0x2a000050dd1c0020,0x2e000050dcde0030,0x2c000050dc9e0030\n"
".quad 0x32000050dc5c0030,0x00c00080c35c2330,0x00c00078c51c0358,0x3dc00011359c0358\n"
".quad 0x00c2c00044dc0320,0x00000050d35c4348,0x00c28000451c0340,0x064000e13f1c0348\n"
".quad 0x004000b125dc4320,0x064000e146dc0348,0x00c0007bc49c0320,0x064000e071dc0358\n"
".quad 0x00c00081b51c2320,0x00c00079b55c0358,0x064000e0619c0358,0x064000e1c71c0320\n"
".quad 0x00000055469c4320,0x3dc00011151c0340,0x00c00083c45c2320,0x704000960e1c0058\n"
".quad 0x004000b1055c4330,0x00000049175c4348,0x3dc00010b49c0340,0x064000e0e2dc0320\n"
".quad 0x6e4000960ddc0020,0x004000b0a4dc4330,0x00c00080b39c2348,0x00c00078b41c0358\n"
".quad 0x3dc00010b29c0358,0x6c4000960d9c0020,0x00000040e39c4330,0x6a4000960d5c0040\n"
".quad 0x6ccfa002fd9c0030,0x004000b0e2dc4330,0x3dc00010941c0348,0x00c00080725c2320\n"
".quad 0x00c00078739c0358,0x004000b0845c4358,0x3dc00010721c0348,0x00000038925c4320\n"
".quad 0x00c0008061dc2340,0x004000b0925c4358,0x3dc00011839c0348,0x00c00078661c0320\n"
".quad 0x004000b0f3dc4358,0x0000006071dc4348,0x3dc00010619c0340,0x064000e0561c0320\n"
".quad 0x004000b071dc4320,0x3dc00010c31c0348,0x00c00081815c2320,0x00c00079865c0358\n"
".quad 0x004000b0d35c4358,0x3dc00011861c0348,0x00000064565c4320,0x00c30000415c0340\n"
".quad 0x004000b1965c4348,0x3dc00011b11c0348,0x064000e026dc0320,0x00c00081bf5c2320\n"
".quad 0x00c00079b09c0358,0x0000000bd09c4358,0x064000e05f5c0340,0x004000b1a15c4320\n"
".quad 0x3dc00011b69c0348,0x00c00081c0dc2320,0x00c00083df9c2358,0x004000b026dc4358\n"
".quad 0x3dc00013c09c0348,0x00c00079cf1c0320,0x000000f03f1c4358,0x004000b1d0dc4340\n"
".quad 0x3dc00011c71c0348,0x004000b3c75c4320,0x3dc00013d79c0348,0x00c0007bdf1c0320\n"
".quad 0x444000870f5c0058,0x44400087089e0030,0x000000f3ef1c4330,0x7a4000864c1c0040\n"
".quad 0x7a4000864f9e0030,0x444000864f5c0030,0x44400086489e0030,0x60f000023c1c0030\n"
".quad 0x7af000023f5c0030,0x7cf000023f9c0030,0x44f00002389c0030,0x60f000021c1c0030\n"
".quad 0x7af00002191c0030,0x7cf0000218dc0030,0x44f000021f5c0030,0x60cfa002585c0030\n"
".quad 0x48cfa002589e0030,0x3e4000960c1c0030,0x46cfa00258de0030,0x7acfa002591c0030\n"
".quad 0x76f00001f95c0030,0x000000c3a7dc0030,0x000000c39c1c0050,0x000000501e5e8550\n"
".quad 0x0000009ace9d00c0,0x000000001ede8550,0x000000abae9c00c0,0x00000097981d0050\n"
".quad 0x0000007e795d0050,0x000000c2e9dd0050,0x000000201b9e8550,0x000000101c1e85c0\n"
".quad 0x70cfa002f7dc00c0,0x6ecfa002fe1e0030,0x000000301dde8530,0x6acfa002fe5e00c0\n"
".quad 0x000000401bde8530,0x000000c2ed5f00c0,0x00000003ae9d0050,0x00000001681c8550\n"
".quad 0x000000df5d5c0094,0x000000afae9d0050,0x000000bf5d5c0050,0x000000a3ae9c0050\n"
".quad 0x0000009b5d5c0050,0x000000a7ae9d0050,0x000000035d5d0050,0x000000b7ae9c0050\n"
".quad 0x000000a35d5c0050,0x000000b75d5d0050,0x42cf8003585c0050,0x44cf8003589e0030\n"
".quad 0x46cf800358dc0030,0x42cf8003a85e0030,0x44cf8003a89e0030,0x46cf8003a8dc0030\n"
".quad 0x00000086685d0030,0x000000dfb99d0050,0x00000088001d0050,0x48cf8003589e0050\n"
".quad 0x000000be699c0030,0x0000008e88dd0050,0x44cf8003a89c0050,0x000000b2699d0030\n"
".quad 0x0000008ad89d0050,0x000000aa699c0050,0x000000ae699d0050,0x000000a6699c0050\n"
".quad 0x3ecf800267dc0050,0x70cf80026a1e0030,0x6ccf80026d9e0030,0x72cf80026e1c0030\n"
".quad 0x68cf80026d1e0030,0x66cf80026cde0030,0x64cf80026c9c0030,0x62cf8002699c0030\n"
".quad 0x3ecf80035b5e0030,0x50cf8003591e0030,0x6ccf80035a1c0030,0x70cf80035c5c0030\n"
".quad 0x4ccf8003ad5e0030,0x000000b7099d0030,0x00000092e91d0050,0x68cf8003ad1c0050\n"
".quad 0x000000a37a1d0030,0x000000c6fb5d0050,0x00000001499c8550,0x64cf8003ac9c0094\n"
".quad 0x00000001291c8530,0x000000d2c59d0094,0x000000010a1c8550,0x00000000eb5c8594\n"
".quad 0x66cf8003acde0094,0x004000b3c7dc4330,0x000000caa5dd0048,0x00000000c95c8550\n"
".quad 0x00000000459c8594,0x00000000285c8594,0x000000ceb81d0094,0x00000001e5dc8550\n"
".quad 0x00000000a01c8594,0x000000d69a5d0094,0x0000000089dc8550,0x00000000681c8594\n"
".quad 0x0000000188dc8594,0x00000001aa5c8594,0x00000001c89c8594,0x00003f60001de794\n"
".quad 0x00000074f09c0340,0x004000a0091de448,0x00c04000211c0328,0x00c18000229c0348\n"
".quad 0x00c1c00022dc0348,0x00c24000251c0348,0x00c28000255c0348,0x064000e0449c0348\n"
".quad 0x00c08000219c0320,0x064000e0a39c0348,0x064000e0b35c0320,0x064000e142dc0320\n"
".quad 0x064000e1529c0320,0x00c00081251c2320,0x00c00079255c0358,0x064000e064dc0358\n"
".quad 0x49c00011281c0320,0x00c0c00021dc0320,0x00000055449c4348,0x00c00081351c2340\n"
".quad 0x00c00079355c0358,0x064000e0745c0358,0x004000b1285c4320,0x00c44000271c0348\n"
".quad 0x49c00011379c0348,0x00000055449c4320,0x00c10000221c0340,0x00c0008114dc2348\n"
".quad 0x00c00079151c0358,0x064000e1c89c0358,0x004000b127dc4320,0x064000e0841c0348\n"
".quad 0x49c00011171c0320,0x00c3c000269c0320,0x00000051345c4348,0x00c14000225c0340\n"
".quad 0x00c00081049c2348,0x00c0007904dc0358,0x064000e1a11c0358,0x004000b1175c4320\n"
".quad 0x00c4000026dc0348,0x064000e093dc0348,0x49c00011069c0320,0x00c34000261c0320\n"
".quad 0x0000004d241c4348,0x00c20000231c0340,0x00c2c000259c0348,0x00c3000025dc0348\n"
".quad 0x00c38000265c0348,0x00c48000215c0348,0x064000e1b09c0348,0x00c00080f45c2320\n"
".quad 0x00c00078f49c0358,0x064000e181dc0358,0x004000b106dc4320,0x49c00010f61c0348\n"
".quad 0x0000004913dc4320,0x064000e1919c0340,0x00c00080e41c2320,0x00c00078e45c0358\n"
".quad 0x064000e1625c0358,0x004000b0f65c4320,0x49c00010e59c0348,0x00000045039c4320\n"
".quad 0x064000e1721c0340,0x00c00080d3dc2320,0x00c00078d41c0358,0x004000b0e5dc4358\n"
".quad 0x064000e0c31c0348,0x49c00010d51c0320,0x00000040f35c4320,0x00c00080c39c2340\n"
".quad 0x00c00078c3dc0358,0x004000b0d55c4358,0x49c00010c49c0348,0x0000003ce31c4320\n"
".quad 0x00c00080b35c2340,0x00c00078b39c0358,0x004000b0c4dc4358,0x49c00010b41c0348\n"
".quad 0x00000038d2dc4320,0x00c00080a31c2340,0x00c00078a35c0358,0x004000b0b45c4358\n"
".quad 0x49c00010a39c0348,0x00000034c29c4320,0x00c0008092dc2340,0x00c00078935c0358\n"
".quad 0x004000b0a3dc4358,0x49c00010931c0348,0x00000034b25c4320,0x00c0008082dc2340\n"
".quad 0x00c0007888dc0358,0x004000b0935c4358,0x49c00010829c0348,0x0000008cb21c4320\n"
".quad 0x00c00080725c2340,0x00c0007878dc0358,0x004000b082dc4358,0x49c00010721c0348\n"
".quad 0x0000008c91dc4320,0x00c00080695c2340,0x00c000786ddc0358,0x00c000804e1c2358\n"
".quad 0x00c00078425c0358,0x000000de5ddc4358,0x00c00080295c2340,0x0000002788dc4358\n"
".quad 0x00c000782e1c0340,0x004000b0725c4358,0x49c00010619c0348,0x000000e2595c4320\n"
".quad 0x00c000822e1c2340,0x00c0007a2e5c0358,0x004000b371dc4358,0x49c00010411c0348\n"
".quad 0x000000e78ddc4320,0x000000020cdc8540,0x064000e05e1c0394,0x00000001ebdc8520\n"
".quad 0x004000b2315c4394,0x00000001cc9c8548,0x49c00010209c0394,0x00000001ac5c8520\n"
".quad 0x000000018d5c8594,0x000000016d9c8594,0x00c0008388dc2394,0x00c0007b8e5c0358\n"
".quad 0x004000b250dc4358,0x000000014c1c8548,0x49c00012289c0394,0x000000012d1c8520\n"
".quad 0x000000010b9c8594,0x000000e6395c4394,0x00000000ea5c8540,0x004000b378dc4394\n"
".quad 0x00000000cb5c8548,0x49c00013891c0394,0x00000000aadc8520,0x000000008a1c8594\n"
".quad 0x0000000069dc8594,0x004000b2595c4394,0x000000004a9c8548,0x00000000201c8594\n"
".quad 0x000000022b1c8594,0x00000002499c8594,0x00002d00001de794,0x00c00006b09c0340\n"
".quad 0x00cfc001901c0048,0x00cfc001719c0050,0x00c00018215c0350,0x00000015215e0460\n"
".quad 0x0000001401dc0018,0x104a0afc6e5c8650,0x104b0bfc6d9c8680,0x104c0cfc6d5c8680\n"
".quad 0x104d0dfc6cdc8680,0x104e0efc6c9c8680,0x104f0ffc6c1c8680,0x105010fc6e1c8680\n"
".quad 0x105111fc6ddc8680,0x105212fc67dc8680,0x105313fc6bdc8680,0x105414fc699c8680\n"
".quad 0x105515fc6b1c8680,0x105616fc6a5c8680,0x105717fc695c8680,0x105818fc689c8680\n"
".quad 0x105919fc669c8680,0x105a1afc665c8680,0x105b1bfc675c8680,0x105c1cfc639c8680\n"
".quad 0x00c0001ab15c0380,0x00000015215e0460,0x0000001401dc0018,0x104a0afc6c5c8650\n"
".quad 0x104b0bfc69dc8680,0x104c0cfc6b5c8680,0x104d0dfc63dc8680,0x104e0efc6a9c8680\n"
".quad 0x104f0ffc6b9c8680,0x105010fc6a1c8680,0x105111fc679c8680,0x105212fc66dc8680\n"
".quad 0x105313fc615c8680,0x105414fc65dc8680,0x105515fc681c8680,0x105616fc691c8680\n"
".quad 0x105717fc685c8680,0x105818fc671c8680,0x105919fc659c8680,0x105a1afc601c8680\n"
".quad 0x105b1bfc661c8680,0x105c1cfc61dc8680,0x000000ad219e0480,0x00000009209e0418\n"
".quad 0x0000001a3d1d0018,0x0000008c209d0050,0x000000db4d9c0050,0x000000d74d5c0058\n"
".quad 0x000000e7419c0058,0x000000bf4bdc0058,0x000000e34adc0058,0x000000b34b1c0058\n"
".quad 0x6c00009c29dc0058,0x6a0000b42b5c0030,0x0c0000c4219c0030,0x5e000014215c0030\n"
".quad 0x000000a74a5c0030,0x000000b67c5d0058,0x58000080281c0050,0x560000a02a1c0030\n"
".quad 0x0000009b499c0030,0x000000146adc0058,0x00000097495c0050,0x000000df48dc0058\n"
".quad 0x000000831b1c0058,0x52000090291c0050,0x0000009eba5c0030,0x4c00005c25dc0050\n"
".quad 0x4a0000842e5c0030,0x0000007f47dc0030,0x0000008b489c0058,0x00000092c99c0058\n"
".quad 0x46000078285c0050,0x0000005e979c0030,0x000000cb4c9c0050,0x000000e668dd0058\n"
".quad 0x440000702d5c0050,0x3e00006c295c0030,0x000000b5e6dc0030,0x000000c34c1c0050\n"
".quad 0x640000a82a9c0058,0x000000d6379d0030,0x00000081b6dc0050,0x600000b82d9c0050\n"
".quad 0x000000a9e79c0030,0x00000091b6dc0050,0x000000cf4cdc0050,0x000000d9e79d0058\n"
".quad 0x000000e5b6dc0050,0x00000077475c0050,0x00000085e79c0058,0x0000006b469c0050\n"
".quad 0x6600003c23dc0058,0x000000d5b6dc0030,0x00000067465c0050,0x00000095e99d0058\n"
".quad 0x0000003db79c0050,0x340000582c5c0050,0x0000003b439c0030,0x320000002c1c0058\n"
".quad 0x0000005c571d0030,0x0000009a66dc0050,0x00000081c71c0058,0x00000091c71d0050\n"
".quad 0x000000e5c71d0050,0x000000d5c7dc0050,0x00cfa002671c0050,0x3a0000602e1c0058\n"
".quad 0x00efa002661c0030,0x000000e0f59c0058,0x000000e1e01c0050,0x000000a9659c0050\n"
".quad 0x000000a8001c0050,0x1c00001c2ddc0050,0x000000e1f1dc0030,0x000000dd609c0050\n"
".quad 0x000000dc001c0050,0x000000dc71dd0050,0x000000d8209c0050,0x000000d8001c0050\n"
".quad 0x000000c471dc0050,0x000000a0209d0050,0x000000a0001c0050,0x000000c0739d0050\n"
".quad 0x000000c4209d0050,0x000000c4001c0050,0x36000038e1dc0050,0x00000084209d0030\n"
".quad 0x00000084001c0050,0x00000038e59c0050,0x000000c0209d0050,0x000000c0001c0050\n"
".quad 0x00cfa000e65c0050,0x00000094209d0058,0x00000094075c0050,0x00efa000e8dc0050\n"
".quad 0x00000008201c0058,0x3600000826de0058,0x0e000008279c0030,0x0000009a601c0030\n"
".quad 0xf6aaaaadbbdc0230,0xf6aaaaadbb1c0230,0x00000039659d0032,0x0000000981dc0030\n"
".quad 0x00000009cb9c0058,0x5e4000f5661e0058,0x584000f56c9e0030,0xf58e38e56cdc0230\n"
".quad 0x30000099901c0032,0x3000009a36dc0030,0x64000009961c0030,0x6400000a365c0030\n"
".quad 0xf4127271ec9c0230,0x66000009c8de0030,0xfc637575e71c0230,0x644000b5dd1c0032\n"
".quad 0xf4260e11e79c0230,0x5e4000f56e9c0030,0x684000c66bdc0030,0x684000c66ede0030\n"
".quad 0x384000a5d71c0030,0x3c4000d5d79c0030,0x00000098e69c0030,0x00000098eadd0050\n"
".quad 0x00000008ea5c0050,0x00000008e89d0050,0x0000000a67dc0050,0x0000000a675d0050\n"
".quad 0x684000c4ecdc0050,0x684000c4ec9e0030,0x684000c4299c0030,0x000000eafbdc0030\n"
".quad 0x000000ebb39c0050,0x684000c42d1e0050,0x0e4000e56e9e0030,0x584000f56b1c0030\n"
".quad 0x5c4000e5609e0030,0x664000e561dc0030,0x644000e5659c0030,0x3c400025dc9c0030\n"
".quad 0x000000b26b9c0030,0x000000b34f1c0050,0x000000eb299c0050,0x3c400026be9e0050\n"
".quad 0x3c400026bd1c0030,0x3c4000262c9e0030,0x3c4000262adc0030,0x3c400025aedc0030\n"
".quad 0x3c4000269cdc0030,0x3c400025f89c0030,0x3c400025d75e0030,0x3c400025a69e0030\n"
".quad 0x3c4000269a5e0030,0x3c400025f7de0030,0x00400100079de430,0x0000000a2b1c0028\n"
".quad 0x00000009f09c0050,0x00cfe001e79e0050,0x004000a0089de450,0x0000008dd8dc0028\n"
".quad 0x00000071e71c0050,0x0000001de7dc0058,0x064000e041dc0358,0x38400100671c0020\n"
".quad 0x3e40010057dc0030,0x00c00080715c2330,0x00c00078719c0358,0x00000003bedc0058\n"
".quad 0x00000001a01c0050,0x00000018515c4350,0x45c00010719c0340,0x0000006fae9c0020\n"
".quad 0x0000006f4d1c0050,0x004000b051dc4350,0x00c04000415c0348,0x000000633cdc0048\n"
".quad 0x00000000671c8550,0x064000e0515c0394,0x000000629a5c0020,0x000000672c9c0050\n"
".quad 0x00c00080519c2350,0x00c0007851dc0358,0x00c0c000471c0358,0x00000066badc0048\n"
".quad 0x0000001c61dc4350,0x45c00010519c0340,0x064000e1c71c0320,0x00c08000415c0320\n"
".quad 0x004000b071dc4348,0x000000f1ef1c0048,0x064000e0515c0358,0x0000000067dc8520\n"
".quad 0x00000099e99c0094,0x00c000805f5c2358,0x00c000785f9c0358,0x00c00081c19c2358\n"
".quad 0x00c00079c1dc0358,0x000000fbd7dc4358,0x00c180004f5c0340,0x0000001c675c4348\n"
".quad 0x00c10000419c0340,0x000000e9ee9c0048,0x00000001e01c0058,0x064000e0669c0358\n"
".quad 0x000000d1ed1c0020,0x000000cdecdc0058,0x00c00081a19c2358,0x00c00079a1dc0358\n"
".quad 0x000000c9ec9c0058,0x0000008de8dc0058,0x0000001c66dc4358,0x00c14000419c0340\n"
".quad 0x000000adeadc0048,0x000000a5ea5c0058,0x064000e0661c0358,0x74400102491c0020\n"
".quad 0x00400103901c0030,0x00c00081819c2330,0x00c0007981dc0358,0x00c2c0004e5c0358\n"
".quad 0x00c300004e9c0348,0x0000001c665c4348,0x000000bde19c0040,0x00000059e1dc0058\n"
".quad 0x064000e3d59c0358,0x0c40010279dc0020,0x0e4001017bdc0030,0x00c00081619c2330\n"
".quad 0x00c0007961dc0358,0x00c1c0004f5c0358,0x064000e39e5c0348,0x0000001c65dc4320\n"
".quad 0x00000039e19c0040,0x000000b9e1dc0058,0x064000e3d39c0358,0x0c400102db9c0020\n"
".quad 0x0e400100fb5c0030,0x00c00080e19c2330,0x00c00078e1dc0358,0x064000e3ae9c0358\n"
".quad 0x684001035d1c0020,0x0000001c63dc4330,0x00c20000419c0340,0x000000b1e1dc0048\n"
".quad 0x664001038cdc0058,0x064000e0619c0330,0x0e400102ab1c0020,0x784001028a9c0030\n"
".quad 0x00c0008061dc2330,0x00c000786a1c0358,0x00c240004f1c0358,0x464001036d5c0048\n"
".quad 0x000000a071dc4330,0x4c4001021a1c0040,0x00000009e99c0030,0x000000ede09c0058\n"
".quad 0x45c00010579c0358,0x064000e3c85c0320,0x4c400102599c0020,0x004000b1f7dc4330\n"
".quad 0x45c00011c71c0348,0x00c000821edc2320,0x00c0007a1f1c0358,0x004000b1d75c4358\n"
".quad 0x45c00011a69c0348,0x000000f3b15c4320,0x00c280004edc0340,0x004000b1b6dc4348\n"
".quad 0x45c00011861c0348,0x04400102095c0020,0x064000e3b09c0330,0x004000b1965c4320\n"
".quad 0x45c00011659c0348,0x00c00080281c2320,0x00c000782edc0358,0x004000b175dc4358\n"
".quad 0x45c00010e39c0348,0x000000ee081c4320,0x00c0007b9edc0340,0x004000b0f3dc4358\n"
".quad 0x45c00010619c0348,0x00000001e9dc8520,0x00000001cbdc8594,0x004000b071dc4394\n"
".quad 0x45c00012111c0348,0x00c00083985c2320,0x00000001ab9c8558,0x004000b0515c4394\n"
".quad 0x45c00010209c0348,0x000000ee185c4320,0x00c0007baedc0340,0x004000b200dc4358\n"
".quad 0x45c00013981c0348,0x00c00083ae5c2320,0x00000001895c8558,0x004000b2185c4394\n"
".quad 0x45c00013a89c0348,0x000000ef9e5c4320,0x00000001691c8540,0x00000000e01c8594\n"
".quad 0x000000006d1c8594,0x644001037c9c0094,0x004000b398dc4330,0x000000004b5c8548\n"
".quad 0x000000002cdc8594,0x000000020b1c8594,0x564001031adc0094,0x000000022c9c8530\n"
".quad 0x000000014d5c8594,0x524001030a5c0094,0x000000012a9c8530,0x000000010adc8594\n"
".quad 0x00000000ca1c8594,0x00000000aa5c8594,0x00000000899c8594,0x00000000001de794\n"
".quad 0x0000000000000080,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0xf145140000000000,0xaaaaab3fd5555540,0x73cf3d3ce38e393d,0x638e39bdb2cb2dbe\n"
".quad 0xcccccd3d8208203c,0x430c303d2aaaab3c,0x2aaaab3dd34d353e,0x638e393c8208203e\n"
".quad 0x000401bce38e393d,0x0000ce0008020400,0x0802040000000900,0x000004000000c900\n"
".quad 0x0000a60008020400,0x0802040000001b00,0x000015000000a100,0x0000c80008020400\n"
".quad 0x0802040000000300,0x00000c000000a000,0x0000cc0008020400,0x0802040000000800\n"
".quad 0x000002000000c700,0x00009f0008020400,0x0802040000001400,0x00000b0000009e00\n"
".quad 0x0000c50008020400,0x0802040000000100,0x0000130000009d00,0x00009c0008020400\n"
".quad 0x0802040000000a00,0x000000000000c300,0x0000ae0008020400,0x0802040000001200\n"
".quad 0x00001a000000ad00,0x0000ac0008020400,0x0802040000001100,0x000007000000d300\n"
".quad 0x0000ab0008020400,0x0802040000001900,0x000010000000aa00,0x0000a50008020400\n"
".quad 0x0802040000000d00,0x000006000000d100,0x0000a90008020400,0x0802040000000f00\n"
".quad 0x000018000000a400,0x0000a80008020400,0x0802040000001c00,0x000017000000a300\n"
".quad 0x0000ca0008020400,0x0802040000000500,0x00000e000000a700,0x0000a20008020400\n"
".quad 0x080a040000001600,0x2400200000004600,0x0c17040024190300,0x2000040000000000\n"
".quad 0x0c17040011f00000,0x1800030000000000,0x0c17040021f00000,0x1000020000000000\n"
".quad 0x0c17040011f00000,0x0800010000000000,0x0c17040021f00000,0x0000000000000000\n"
".quad 0x080d040021f00000,0x0000020003002400,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000800,0x0000d80000000200\n"
".quad 0x0000000000001000,0x0000d70000000200,0x0000000000001800,0x0000d60000000200\n"
".quad 0x0000000000000000,0x0000d50000000200,0x5345590054524d00,0x004b4742004f4e00\n"
".quad 0x000000d400100704,0xffffffffffffffff,0x00100704ffffffff,0xffffffff000000d3\n"
".quad 0xffffffffffffffff,0x000000d200100704,0xffffffffffffffff,0x00100704ffffffff\n"
".quad 0xffffffff000000d1,0xffffffffffffffff,0x000000d000100704,0xffffffffffffffff\n"
".quad 0x00100704ffffffff,0xffffffff000000cf,0xffffffffffffffff,0x000000ce00100704\n"
".quad 0xffffffffffffffff,0x00100704ffffffff,0xffffffff000000cd,0xffffffffffffffff\n"
".quad 0x000000cc00100704,0xffffffffffffffff,0x00100704ffffffff,0xffffffff000000cb\n"
".quad 0xffffffffffffffff,0x000000ca00100704,0xffffffffffffffff,0x00100704ffffffff\n"
".quad 0xffffffff000000c9,0xffffffffffffffff,0x000000c800100704,0xffffffffffffffff\n"
".quad 0x00100704ffffffff,0xffffffff000000c7,0xffffffffffffffff,0x000000c600100704\n"
".quad 0xffffffffffffffff,0x00100704ffffffff,0xffffffff000000c5,0xffffffffffffffff\n"
".quad 0x000000c400100704,0xffffffffffffffff,0x00100704ffffffff,0xffffffff000000c3\n"
".quad 0xffffffffffffffff,0x000000c200100704,0xffffffffffffffff,0x00100704ffffffff\n"
".quad 0xffffffff000000c1,0xffffffffffffffff,0x000000c000100704,0xffffffffffffffff\n"
".quad 0x00100704ffffffff,0xffffffff000000bf,0xffffffffffffffff,0x000000be00100704\n"
".quad 0xffffffffffffffff,0x00100704ffffffff,0xffffffff000000bd,0xffffffffffffffff\n"
".quad 0x000000bc00100704,0xffffffffffffffff,0x00100704ffffffff,0xffffffff000000bb\n"
".quad 0xffffffffffffffff,0x000000ba00100704,0xffffffffffffffff,0x00100704ffffffff\n"
".quad 0xffffffff000000b9,0xffffffffffffffff,0x000000b800100704,0xffffffffffffffff\n"
".quad 0x00100704ffffffff,0xffffffff000000b7,0xffffffffffffffff,0x000000b600100704\n"
".quad 0xffffffffffffffff,0x00100704ffffffff,0xffffffff000000b5,0xffffffffffffffff\n"
".quad 0x000000b400100704,0xffffffffffffffff,0x00100704ffffffff,0xffffffff000000b3\n"
".quad 0xffffffffffffffff,0x000000b200100704,0xffffffffffffffff,0x00100704ffffffff\n"
".quad 0xffffffff000000b1,0xffffffffffffffff,0x000000b000100704,0xffffffffffffffff\n"
".quad 0x00100704ffffffff,0xffffffff000000af,0xffffffffffffffff,0x000000ae00100704\n"
".quad 0xffffffffffffffff,0x00100704ffffffff,0xffffffff000000ad,0xffffffffffffffff\n"
".quad 0x000000ac00100704,0xffffffffffffffff,0x00100704ffffffff,0xffffffff000000ab\n"
".quad 0xffffffffffffffff,0x000000aa00100704,0xffffffffffffffff,0x00100704ffffffff\n"
".quad 0xffffffff000000a9,0xffffffffffffffff,0x000000a800100704,0xffffffffffffffff\n"
".quad 0x00100704ffffffff,0xffffffff000000a7,0xffffffffffffffff,0x000000a600100704\n"
".quad 0xffffffffffffffff,0x00100704ffffffff,0xffffffff000000a5,0xffffffffffffffff\n"
".quad 0x000000a400100704,0xffffffffffffffff,0x00100704ffffffff,0xffffffff000000a3\n"
".quad 0xffffffffffffffff,0x000000a200100704,0xffffffffffffffff,0x00100704ffffffff\n"
".quad 0xffffffff000000a1,0xffffffffffffffff,0x000000a000100704,0xffffffffffffffff\n"
".quad 0x00100704ffffffff,0xffffffff0000009f,0xffffffffffffffff,0x0000009e00100704\n"
".quad 0xffffffffffffffff,0x00100704ffffffff,0xffffffff0000009d,0xffffffffffffffff\n"
".quad 0x0000009c00100704,0xffffffffffffffff,0x00100704ffffffff,0xffffffff0000009b\n"
".quad 0xffffffffffffffff,0x0000009a00100704,0xffffffffffffffff,0x00100704ffffffff\n"
".quad 0xffffffff00000099,0xffffffffffffffff,0x0000009800100704,0xffffffffffffffff\n"
".quad 0x00100704ffffffff,0xffffffff00000097,0xffffffffffffffff,0x0000009600100704\n"
".quad 0xffffffffffffffff,0x00100704ffffffff,0xffffffff00000095,0xffffffffffffffff\n"
".quad 0x0000009400100704,0xffffffffffffffff,0x00100704ffffffff,0xffffffff00000093\n"
".quad 0xffffffffffffffff,0x0000009200100704,0xffffffffffffffff,0x00100704ffffffff\n"
".quad 0xffffffff00000091,0xffffffffffffffff,0x0000009000100704,0xffffffffffffffff\n"
".quad 0x00100704ffffffff,0xffffffff0000008f,0xffffffffffffffff,0x0000008e00100704\n"
".quad 0xffffffffffffffff,0x00100704ffffffff,0xffffffff0000008d,0xffffffffffffffff\n"
".quad 0x0000008c00100704,0xffffffffffffffff,0x00100704ffffffff,0xffffffff0000008b\n"
".quad 0xffffffffffffffff,0x0000008a00100704,0xffffffffffffffff,0x00100704ffffffff\n"
".quad 0xffffffff00000089,0xffffffffffffffff,0x0000008800081204,0x0008110400000018\n"
".quad 0x0000001800000088,0x0000008700081204,0x0008110400000000,0x0000000000000087\n"
".quad 0x0000008600081204,0x0008110400000000,0x0000000000000086,0x0000008500081204\n"
".quad 0x0008110400000000,0x0000000000000085,0x0000008400081204,0x0008110400000000\n"
".quad 0x0000000000000084,0x0000008300081204,0x0008110400000000,0x0000000000000083\n"
".quad 0x0000008200081204,0x0008110400000018,0x0000001800000082,0x0000008100081204\n"
".quad 0x0008110400000000,0x0000000000000081,0x0000008000081204,0x0008110400000000\n"
".quad 0x0000000000000080,0x0000007f00081204,0x0008110400000018,0x000000180000007f\n"
".quad 0x0000007e00081204,0x0008110400000000,0x000000000000007e,0x0000007d00081204\n"
".quad 0x0008110400000000,0x000000000000007d,0x0000007c00081204,0x0008110400000000\n"
".quad 0x000000000000007c,0x0000007b00081204,0x0008110400000000,0x000000000000007b\n"
".quad 0x0000007a00081204,0x0008110400000000,0x000000000000007a,0x0000007900081204\n"
".quad 0x0008110400000000,0x0000000000000079,0x0000007800081204,0x0008110400000000\n"
".quad 0x0000000000000078,0x0000007700081204,0x0008110400000000,0x0000000000000077\n"
".quad 0x0000007600081204,0x0008110400000000,0x0000000000000076,0x0000007500081204\n"
".quad 0x0008110400000000,0x0000000000000075,0x0000007400081204,0x0008110400000000\n"
".quad 0x0000000000000074,0x0000007300081204,0x0008110400000000,0x0000000000000073\n"
".quad 0x0000007200081204,0x0008110400000000,0x0000000000000072,0x0000007100081204\n"
".quad 0x0008110400000000,0x0000000000000071,0x0000007000081204,0x0008110400000000\n"
".quad 0x0000000000000070,0x0000006f00081204,0x0008110400000018,0x000000180000006f\n"
".quad 0x0000000500000006,0x0000000000029590,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000738,0x0000000000000738,0x0000000000000004,0x0000880560000000\n"
".quad 0x0000000000004569,0x0000000000000000,0x0000000000000000,0x0000000000002878\n"
".quad 0x0000000000002878,0x0000000000000004,0x0000870560000000,0x0000000000006de1\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000180,0x0000000000000180\n"
".quad 0x0000000000000004,0x0000860560000000,0x0000000000006f61,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000504,0x0000000000000504,0x0000000000000004\n"
".quad 0x0000850560000000,0x0000000000007465,0x0000000000000000,0x0000000000000000\n"
".quad 0x00000000000019e0,0x00000000000019e0,0x0000000000000004,0x0000840560000000\n"
".quad 0x0000000000008e45,0x0000000000000000,0x0000000000000000,0x00000000000017e8\n"
".quad 0x00000000000017e8,0x0000000000000004,0x0000830560000000,0x000000000000a62d\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000001d2c,0x0000000000001d2c\n"
".quad 0x0000000000000004,0x0000830660000000,0x000000000000c359,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000304,0x0000000000000004\n"
".quad 0x0000820560000000,0x000000000000c359,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000002790,0x0000000000002790,0x0000000000000004,0x0000810560000000\n"
".quad 0x000000000000eae9,0x0000000000000000,0x0000000000000000,0x00000000000005f8\n"
".quad 0x00000000000005f8,0x0000000000000004,0x0000800560000000,0x000000000000f0e1\n"
".quad 0x0000000000000000,0x0000000000000000,0x00000000000019cc,0x00000000000019cc\n"
".quad 0x0000000000000004,0x00007f0560000000,0x0000000000010aad,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000002878,0x0000000000002878,0x0000000000000004\n"
".quad 0x00007e0560000000,0x0000000000013325,0x0000000000000000,0x0000000000000000\n"
".quad 0x000000000000181c,0x000000000000181c,0x0000000000000004,0x00007e0660000000\n"
".quad 0x0000000000014b41,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000304,0x0000000000000004,0x00007d0560000000,0x0000000000014b41\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000f44,0x0000000000000f44\n"
".quad 0x0000000000000004,0x00007c0560000000,0x0000000000015a85,0x0000000000000000\n"
".quad 0x0000000000000000,0x00000000000019bc,0x00000000000019bc,0x0000000000000004\n"
".quad 0x00007b0560000000,0x0000000000017441,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000001a80,0x0000000000001a80,0x0000000000000004,0x00007a0560000000\n"
".quad 0x0000000000018ec1,0x0000000000000000,0x0000000000000000,0x00000000000001e8\n"
".quad 0x00000000000001e8,0x0000000000000004,0x0000790560000000,0x00000000000190a9\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000374,0x0000000000000374\n"
".quad 0x0000000000000004,0x0000780560000000,0x000000000001941d,0x0000000000000000\n"
".quad 0x0000000000000000,0x00000000000019bc,0x00000000000019bc,0x0000000000000004\n"
".quad 0x0000770560000000,0x000000000001add9,0x0000000000000000,0x0000000000000000\n"
".quad 0x00000000000017e8,0x00000000000017e8,0x0000000000000004,0x0000760560000000\n"
".quad 0x000000000001c5c1,0x0000000000000000,0x0000000000000000,0x0000000000001cd4\n"
".quad 0x0000000000001cd4,0x0000000000000004,0x0000760660000000,0x000000000001e295\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000304\n"
".quad 0x0000000000000004,0x0000750560000000,0x000000000001e295,0x0000000000000000\n"
".quad 0x0000000000000000,0x00000000000019e0,0x00000000000019e0,0x0000000000000004\n"
".quad 0x0000740560000000,0x000000000001fc75,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000001b48,0x0000000000001b48,0x0000000000000004,0x0000730560000000\n"
".quad 0x00000000000217bd,0x0000000000000000,0x0000000000000000,0x0000000000001990\n"
".quad 0x0000000000001990,0x0000000000000004,0x0000720560000000,0x000000000002314d\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000001a80,0x0000000000001a80\n"
".quad 0x0000000000000004,0x0000710560000000,0x0000000000024bcd,0x0000000000000000\n"
".quad 0x0000000000000000,0x000000000000181c,0x000000000000181c,0x0000000000000004\n"
".quad 0x0000710660000000,0x00000000000263e9,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000304,0x0000000000000004,0x0000700560000000\n"
".quad 0x00000000000263e9,0x0000000000000000,0x0000000000000000,0x0000000000000148\n"
".quad 0x0000000000000148,0x0000000000000004,0x00006f0560000000,0x0000000000026531\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000002790,0x0000000000002790\n"
".quad 0x0000000000000004,0x0000000500000001,0x0000000000028cc1,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000060,0x0000000000000060,0x0000000000000004\n"
".quad 0x0000000600000001,0x0000000000028d21,0x0000000000000000,0x0000000000000000\n"
".quad 0x000000000000000f,0x000000000000000f,0x0000000000000004,0x0000004801000001\n"
".quad 0x00000000000b2220,0x0000003800000000,0x0000001400030000,0x0000000600000040\n"
".quad 0x0000000000000015,0x0000000000000000,0x0000000000000000,0x000075632e54524d\n"
".quad 0x762e0a0a0a0a0a0a,0x33206e6f69737265,0x677261742e0a302e,0x30325f6d73207465\n"
".quad 0x7365726464612e0a,0x3620657a69735f73,0x656c69662e0a0a34,0x2e54524d22203109\n"
".quad 0x0a22692e33707063,0x203209656c69662e,0x2275632e54524d22,0x3309656c69662e0a\n"
".quad 0x6c2f7273752f2220,0x6475632f6c61636f,0x632f6d76766e2f61,0x64756c636e695f69\n"
".quad 0x69662e0a22682e65,0x752f22203409656c,0x6c61636f6c2f7273,0x69622f616475632f\n"
".quad 0x636e692f2e2e2f6e,0x74616d2f6564756c,0x6974636e75665f68,0x2e0a22682e736e6f\n"
".quad 0x2e206c61626f6c67,0x7420666572786574,0x30665f6665527865,0x626f6c672e0a3b41\n"
".quad 0x727865742e206c61,0x6552786574206665,0x2e0a3b4131665f66,0x2e206c61626f6c67\n"
".quad 0x7420666572786574,0x32665f6665527865,0x626f6c672e0a3b41,0x727865742e206c61\n"
".quad 0x6552786574206665,0x2e0a3b4133665f66,0x2e206c61626f6c67,0x7420666572786574\n"
".quad 0x34665f6665527865,0x626f6c672e0a3b41,0x727865742e206c61,0x6552786574206665\n"
".quad 0x2e0a3b4135665f66,0x2e206c61626f6c67,0x7420666572786574,0x36665f6665527865\n"
".quad 0x626f6c672e0a3b41,0x727865742e206c61,0x6552786574206665,0x2e0a3b4137665f66\n"
".quad 0x2e206c61626f6c67,0x7420666572786574,0x38665f6665527865,0x626f6c672e0a3b41\n"
".quad 0x727865742e206c61,0x6552786574206665,0x2e0a3b4139665f66,0x2e206c61626f6c67\n"
".quad 0x7420666572786574,0x31665f6665527865,0x6f6c672e0a3b4130,0x7865742e206c6162\n"
".quad 0x5278657420666572,0x3b413131665f6665,0x6c61626f6c672e0a,0x6665727865742e20\n"
".quad 0x5f66655278657420,0x672e0a3b41323166,0x742e206c61626f6c,0x6574206665727865\n"
".quad 0x3331665f66655278,0x626f6c672e0a3b41,0x727865742e206c61,0x6552786574206665\n"
".quad 0x0a3b413431665f66,0x206c61626f6c672e,0x206665727865742e,0x665f666552786574\n"
".quad 0x6c672e0a3b413531,0x65742e206c61626f,0x7865742066657278,0x413631665f666552\n"
".quad 0x61626f6c672e0a3b,0x65727865742e206c,0x6665527865742066,0x2e0a3b413731665f\n"
".quad 0x2e206c61626f6c67,0x7420666572786574,0x31665f6665527865,0x6f6c672e0a3b4138\n"
".quad 0x7865742e206c6162,0x5278657420666572,0x0a3b4230665f6665,0x206c61626f6c672e\n"
".quad 0x206665727865742e,0x665f666552786574,0x6f6c672e0a3b4231,0x7865742e206c6162\n"
".quad 0x5278657420666572,0x0a3b4232665f6665,0x206c61626f6c672e,0x206665727865742e\n"
".quad 0x665f666552786574,0x6f6c672e0a3b4233,0x7865742e206c6162,0x5278657420666572\n"
".quad 0x0a3b4234665f6665,0x206c61626f6c672e,0x206665727865742e,0x665f666552786574\n"
".quad 0x6f6c672e0a3b4235,0x7865742e206c6162,0x5278657420666572,0x0a3b4236665f6665\n"
".quad 0x206c61626f6c672e,0x206665727865742e,0x665f666552786574,0x6f6c672e0a3b4237\n"
".quad 0x7865742e206c6162,0x5278657420666572,0x0a3b4238665f6665,0x206c61626f6c672e\n"
".quad 0x206665727865742e,0x665f666552786574,0x6f6c672e0a3b4239,0x7865742e206c6162\n"
".quad 0x5278657420666572,0x3b423031665f6665,0x6c61626f6c672e0a,0x6665727865742e20\n"
".quad 0x5f66655278657420,0x672e0a3b42313166,0x742e206c61626f6c,0x6574206665727865\n"
".quad 0x3231665f66655278,0x626f6c672e0a3b42,0x727865742e206c61,0x6552786574206665\n"
".quad 0x0a3b423331665f66,0x206c61626f6c672e,0x206665727865742e,0x665f666552786574\n"
".quad 0x6c672e0a3b423431,0x65742e206c61626f,0x7865742066657278,0x423531665f666552\n"
".quad 0x61626f6c672e0a3b,0x65727865742e206c,0x6665527865742066,0x2e0a3b423631665f\n"
".quad 0x2e206c61626f6c67,0x7420666572786574,0x31665f6665527865,0x6f6c672e0a3b4237\n"
".quad 0x7865742e206c6162,0x5278657420666572,0x3b423831665f6665,0x6c61626f6c672e0a\n"
".quad 0x6665727865742e20,0x5f66655278657420,0x6c672e0a3b433066,0x65742e206c61626f\n"
".quad 0x7865742066657278,0x3b4331665f666552,0x6c61626f6c672e0a,0x6665727865742e20\n"
".quad 0x5f66655278657420,0x6c672e0a3b433266,0x65742e206c61626f,0x7865742066657278\n"
".quad 0x3b4333665f666552,0x6c61626f6c672e0a,0x6665727865742e20,0x5f66655278657420\n"
".quad 0x6c672e0a3b433466,0x65742e206c61626f,0x7865742066657278,0x3b4335665f666552\n"
".quad 0x6c61626f6c672e0a,0x6665727865742e20,0x5f66655278657420,0x6c672e0a3b433666\n"
".quad 0x65742e206c61626f,0x7865742066657278,0x3b4337665f666552,0x6c61626f6c672e0a\n"
".quad 0x6665727865742e20,0x5f66655278657420,0x6c672e0a3b433866,0x65742e206c61626f\n"
".quad 0x7865742066657278,0x3b4339665f666552,0x6c61626f6c672e0a,0x6665727865742e20\n"
".quad 0x5f66655278657420,0x672e0a3b43303166,0x742e206c61626f6c,0x6574206665727865\n"
".quad 0x3131665f66655278,0x626f6c672e0a3b43,0x727865742e206c61,0x6552786574206665\n"
".quad 0x0a3b433231665f66,0x206c61626f6c672e,0x206665727865742e,0x665f666552786574\n"
".quad 0x6c672e0a3b433331,0x65742e206c61626f,0x7865742066657278,0x433431665f666552\n"
".quad 0x61626f6c672e0a3b,0x65727865742e206c,0x6665527865742066,0x2e0a3b433531665f\n"
".quad 0x2e206c61626f6c67,0x7420666572786574,0x31665f6665527865,0x6f6c672e0a3b4336\n"
".quad 0x7865742e206c6162,0x5278657420666572,0x3b433731665f6665,0x6c61626f6c672e0a\n"
".quad 0x6665727865742e20,0x5f66655278657420,0x672e0a3b43383166,0x742e206c61626f6c\n"
".quad 0x6574206665727865,0x4430665f66655278,0x61626f6c672e0a3b,0x65727865742e206c\n"
".quad 0x6665527865742066,0x672e0a3b4431665f,0x742e206c61626f6c,0x6574206665727865\n"
".quad 0x4432665f66655278,0x61626f6c672e0a3b,0x65727865742e206c,0x6665527865742066\n"
".quad 0x672e0a3b4433665f,0x742e206c61626f6c,0x6574206665727865,0x4434665f66655278\n"
".quad 0x61626f6c672e0a3b,0x65727865742e206c,0x6665527865742066,0x672e0a3b4435665f\n"
".quad 0x742e206c61626f6c,0x6574206665727865,0x4436665f66655278,0x61626f6c672e0a3b\n"
".quad 0x65727865742e206c,0x6665527865742066,0x672e0a3b4437665f,0x742e206c61626f6c\n"
".quad 0x6574206665727865,0x4438665f66655278,0x61626f6c672e0a3b,0x65727865742e206c\n"
".quad 0x6665527865742066,0x672e0a3b4439665f,0x742e206c61626f6c,0x6574206665727865\n"
".quad 0x3031665f66655278,0x626f6c672e0a3b44,0x727865742e206c61,0x6552786574206665\n"
".quad 0x0a3b443131665f66,0x206c61626f6c672e,0x206665727865742e,0x665f666552786574\n"
".quad 0x6c672e0a3b443231,0x65742e206c61626f,0x7865742066657278,0x443331665f666552\n"
".quad 0x61626f6c672e0a3b,0x65727865742e206c,0x6665527865742066,0x2e0a3b443431665f\n"
".quad 0x2e206c61626f6c67,0x7420666572786574,0x31665f6665527865,0x6f6c672e0a3b4435\n"
".quad 0x7865742e206c6162,0x5278657420666572,0x3b443631665f6665,0x6c61626f6c672e0a\n"
".quad 0x6665727865742e20,0x5f66655278657420,0x672e0a3b44373166,0x742e206c61626f6c\n"
".quad 0x6574206665727865,0x3831665f66655278,0x2e0a0a0a0a0a3b44,0x2e206c61626f6c67\n"
".quad 0x2031206e67696c61,0x727473242038622e,0x377b203d205d345b,0x38202c3238202c37\n"
".quad 0x2e0a3b7d30202c34,0x2e206c61626f6c67,0x2031206e67696c61,0x727473242038622e\n"
".quad 0x7b203d205d345b31,0x202c3137202c3636,0x0a3b7d30202c3537,0x0a0a0a0a0a0a0a0a\n"
".quad 0x6f6c672e0a0a0a0a,0x696c612e206c6162,0x38622e2031206e67,0x335b327274732420\n"
".quad 0x2c38377b203d205d,0x3b7d30202c393720,0x6c61626f6c672e0a,0x206e67696c612e20\n"
".quad 0x73242038622e2031,0x3d205d345b337274,0x3936202c39387b20,0x7d30202c3338202c\n"
".quad 0x697369762e0a0a3b,0x6e75662e20656c62,0x617261702e282063,0x66203233622e206d\n"
".quad 0x767465725f636e75,0x385a5f2029306c61,0x6e63466567616d49,0x61702e0a28666666\n"
".quad 0x3233622e206d6172,0x67616d49385a5f20,0x5f6666666e634665,0x2c305f6d61726170\n"
".quad 0x206d617261702e0a,0x385a5f203233622e,0x6e63466567616d49,0x617261705f666666\n"
".quad 0x61702e0a2c315f6d,0x3233622e206d6172,0x67616d49385a5f20,0x5f6666666e634665\n"
".quad 0x0a325f6d61726170,0x6765722e0a7b0a29,0x6625203233662e20,0x722e0a3b3e30313c\n"
".quad 0x646572702e206765,0x0a3b3e323c702520,0x33732e206765722e,0x3b3e323c72252032\n"
".quad 0x61702e646c0a0a0a,0x203233662e6d6172,0x5a5f5b202c316625,0x63466567616d4938\n"
".quad 0x7261705f6666666e,0x6c0a3b5d305f6d61,0x2e6d617261702e64,0x2c32662520323366\n"
".quad 0x616d49385a5f5b20,0x6666666e63466567,0x315f6d617261705f,0x61702e646c0a3b5d\n"
".quad 0x203233662e6d6172,0x5a5f5b202c336625,0x63466567616d4938,0x7261705f6666666e\n"
".quad 0x610a3b5d325f6d61,0x25203233662e6464,0x2c316625202c3466,0x3045373243663020\n"
".quad 0x6464610a3b303030,0x356625203233662e,0x30202c326625202c,0x3030304346314366\n"
".quad 0x20636f6c2e0a3b30,0x6d0a312030372032,0x25203233662e6c75,0x2c356625202c3666\n"
".quad 0x6d660a3b35662520,0x3233662e6e722e61,0x6625202c37662520,0x202c346625202c34\n"
".quad 0x6464610a3b366625,0x386625203233662e,0x30202c336625202c,0x3030304346314366\n"
".quad 0x20636f6c2e0a3b30,0x660a312030372032,0x33662e6e722e616d,0x25202c3966252032\n"
".quad 0x2c386625202c3866,0x65730a3b37662520,0x33662e746c2e7074,0x25202c3170252032\n"
".quad 0x31346630202c3966,0x0a3b303030303038,0x3233622e706c6573,0x3031202c31722520\n"
".quad 0x317025202c30202c,0x3220636f6c2e0a3b,0x74730a3120333820,0x622e6d617261702e\n"
".quad 0x636e75665b093233,0x306c61767465725f,0x317225202c5d302b,0x7d0a3b7465720a3b\n"
".quad 0x62697369762e0a0a,0x636e75662e20656c,0x6d617261702e2820,0x7566203233622e20\n"
".quad 0x61767465725f636e,0x49385a5f2029306c,0x696e63466567616d,0x7261702e0a286969\n"
".quad 0x203233622e206d61,0x6567616d49385a5f,0x705f6969696e6346,0x0a2c305f6d617261\n"
".quad 0x2e206d617261702e,0x49385a5f20323362,0x696e63466567616d,0x6d617261705f6969\n"
".quad 0x7261702e0a2c315f,0x203233622e206d61,0x6567616d49385a5f,0x705f6969696e6346\n"
".quad 0x290a325f6d617261,0x206765722e0a7b0a,0x702520646572702e,0x722e0a3b3e31313c\n"
".quad 0x203233732e206765,0x0a0a3b3e373c7225,0x617261702e646c0a,0x7225203233752e6d\n"
".quad 0x49385a5f5b202c31,0x696e63466567616d,0x6d617261705f6969,0x2e646c0a3b5d305f\n"
".quad 0x33752e6d61726170,0x5b202c3272252032,0x6567616d49385a5f,0x705f6969696e6346\n"
".quad 0x3b5d315f6d617261,0x617261702e646c0a,0x7225203233752e6d,0x49385a5f5b202c33\n"
".quad 0x696e63466567616d,0x6d617261705f6969,0x6f6c2e0a3b5d325f,0x2034313120322063\n"
".quad 0x652e707465730a31,0x7025203233732e71,0x202c317225202c31,0x707465730a3b3336\n"
".quad 0x203233732e71652e,0x327225202c327025,0x2e726f0a3b30202c,0x3370252064657270\n"
".quad 0x25202c317025202c,0x636f6c2e0a3b3270,0x3120343131203220,0x71652e707465730a\n"
".quad 0x347025203233732e,0x36202c327225202c,0x72702e726f0a3b33,0x202c357025206465\n"
".quad 0x347025202c337025,0x3220636f6c2e0a3b,0x730a312034313120,0x732e71652e707465\n"
".quad 0x202c367025203233,0x0a3b30202c337225,0x20646572702e726f,0x357025202c377025\n"
".quad 0x2e0a3b367025202c,0x3131203220636f6c,0x707465730a312034,0x203233732e71652e\n"
".quad 0x337225202c387025,0x726f0a3b3336202c,0x702520646572702e,0x202c377025202c39\n"
".quad 0x6f6c2e0a3b387025,0x2034313120322063,0x6220397025400a31,0x325f314242206172\n"
".quad 0x61702e646c0a0a3b,0x203233752e6d6172,0x5a5f5b202c367225,0x63466567616d4938\n"
".quad 0x7261705f6969696e,0x2e0a3b5d305f6d61,0x3131203220636f6c,0x707465730a312036\n"
".quad 0x203233732e71652e,0x7225202c30317025,0x65730a3b30202c36,0x25203233622e706c\n"
".quad 0x30202c33202c3472,0x0a3b30317025202c,0x6d617261702e7473,0x75665b093233622e\n"
".quad 0x61767465725f636e,0x25202c5d302b306c,0x3b7465720a3b3472,0x3a325f3142420a0a\n"
".quad 0x3233752e766f6d0a,0x3b31202c35722520,0x203220636f6c2e0a,0x74730a3120393131\n"
".quad 0x622e6d617261702e,0x636e75665b093233,0x306c61767465725f,0x357225202c5d302b\n"
".quad 0x7d0a3b7465720a3b,0x62697369762e0a0a,0x636e75662e20656c,0x72694433315a5f20\n"
".quad 0x655774656c686369,0x5f535f5366527473,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x7261702e0a286969,0x203436622e206d61\n"
".quad 0x6972694433315a5f,0x73655774656c6863,0x535f535f53665274,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69\n"
".quad 0x617261702e0a2c30,0x5f203436622e206d,0x636972694433315a,0x7473655774656c68\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x315f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20\n"
".quad 0x6863697269443331,0x527473655774656c,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f,0x2c325f6d61726170\n"
".quad 0x206d617261702e0a,0x315a5f203436622e,0x6c68636972694433,0x6652747365577465\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x0a2c335f6d617261,0x2e206d617261702e,0x33315a5f20343662\n"
".quad 0x656c686369726944,0x5366527473655774,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f,0x2e0a2c345f6d6172\n"
".quad 0x622e206d61726170,0x4433315a5f203436,0x74656c6863697269,0x5f53665274736557\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x7261705f69695f53,0x702e0a2c355f6d61,0x36622e206d617261,0x694433315a5f2034\n"
".quad 0x5774656c68636972,0x535f536652747365,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f,0x61702e0a2c365f6d\n"
".quad 0x3436622e206d6172,0x72694433315a5f20,0x655774656c686369,0x5f535f5366527473\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x7261702e0a2c375f,0x203436622e206d61,0x6972694433315a5f\n"
".quad 0x73655774656c6863,0x535f535f53665274,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69,0x617261702e0a2c38\n"
".quad 0x5f203436622e206d,0x636972694433315a,0x7473655774656c68,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53\n"
".quad 0x395f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20,0x6863697269443331\n"
".quad 0x527473655774656c,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x30315f6d61726170,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x6863697269443331,0x527473655774656c,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f\n"
".quad 0x31315f6d61726170,0x6d617261702e0a2c,0x5a5f203436622e20,0x6863697269443331\n"
".quad 0x527473655774656c,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x32315f6d61726170,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x6863697269443331,0x527473655774656c,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f\n"
".quad 0x33315f6d61726170,0x6d617261702e0a2c,0x5a5f203436622e20,0x6863697269443331\n"
".quad 0x527473655774656c,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x34315f6d61726170,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x6863697269443331,0x527473655774656c,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f\n"
".quad 0x35315f6d61726170,0x6d617261702e0a2c,0x5a5f203436622e20,0x6863697269443331\n"
".quad 0x527473655774656c,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x36315f6d61726170,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x6863697269443331,0x527473655774656c,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f\n"
".quad 0x37315f6d61726170,0x6d617261702e0a2c,0x5a5f203436622e20,0x6863697269443331\n"
".quad 0x527473655774656c,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x38315f6d61726170,0x6d617261702e0a2c\n"
".quad 0x5a5f203233622e20,0x6863697269443331,0x527473655774656c,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f\n"
".quad 0x39315f6d61726170,0x6d617261702e0a2c,0x5a5f203233622e20,0x6863697269443331\n"
".quad 0x527473655774656c,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x30325f6d61726170,0x65722e0a7b0a290a\n"
".quad 0x25203233662e2067,0x2e0a3b3e32343c66,0x6572702e20676572,0x3b3e353c70252064\n"
".quad 0x732e206765722e0a,0x32353c7225203233,0x206765722e0a3b3e,0x6c7225203436732e\n"
".quad 0x0a0a0a3b3e35363c,0x6d617261702e646c,0x317225203233752e,0x4433315a5f5b202c\n"
".quad 0x74656c6863697269,0x5f53665274736557,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53,0x0a3b5d39315f6d61\n"
".quad 0x2e71652e70746573,0x2c31702520323373,0x3b30202c31722520,0x726220317025400a\n"
".quad 0x3b335f3242422061,0x7261702e646c0a0a,0x25203233752e6d61,0x5a5f5b202c393472\n"
".quad 0x6863697269443331,0x527473655774656c,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f,0x39315f6d61726170\n"
".quad 0x2e707465730a3b5d,0x25203233732e656e,0x39347225202c3270,0x25400a3b3336202c\n"
".quad 0x4220617262203270,0x6c0a0a3b345f3242,0x2e6d617261702e64,0x326c722520343675\n"
".quad 0x33315a5f5b202c30,0x656c686369726944,0x5366527473655774,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f\n"
".quad 0x0a3b5d325f6d6172,0x31203220636f6c2e,0x2e646c0a31203334,0x2c31662520323366\n"
".quad 0x5d30326c72255b20,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c33326c72\n"
".quad 0x636972694433315a,0x7473655774656c68,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53,0x345f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203334312032,0x5b203233662e7473,0x202c5d33326c7225\n"
".quad 0x2e646c0a3b316625,0x36752e6d61726170,0x2c36326c72252034,0x694433315a5f5b20\n"
".quad 0x5774656c68636972,0x535f536652747365,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f,0x6c2e0a3b5d365f6d\n"
".quad 0x343431203220636f,0x33662e646c0a3120,0x5b202c3266252032,0x0a3b5d36326c7225\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3932,0x6c68636972694433\n"
".quad 0x6652747365577465,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x3b5d375f6d617261,0x203220636f6c2e0a\n"
".quad 0x74730a3120343431,0x72255b203233662e,0x6625202c5d39326c,0x61702e646c0a3b32\n"
".quad 0x203436752e6d6172,0x5b202c38336c7225,0x6972694433315a5f,0x73655774656c6863\n"
".quad 0x535f535f53665274,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x5f6d617261705f69,0x6f6c2e0a3b5d3131,0x2035343120322063\n"
".quad 0x3233662e646c0a31,0x255b202c33662520,0x6c0a3b5d38336c72,0x2e6d617261702e64\n"
".quad 0x346c722520343675,0x33315a5f5b202c35,0x656c686369726944,0x5366527473655774\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x61705f69695f535f,0x3b5d33315f6d6172,0x203220636f6c2e0a,0x74730a3120353431\n"
".quad 0x72255b203233662e,0x6625202c5d35346c,0x61702e646c0a3b33,0x203436752e6d6172\n"
".quad 0x5b202c34356c7225,0x6972694433315a5f,0x73655774656c6863,0x535f535f53665274\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x6f6c2e0a3b5d3631,0x2036343120322063,0x3233662e646c0a31\n"
".quad 0x255b202c34662520,0x6c0a3b5d34356c72,0x2e6d617261702e64,0x366c722520343675\n"
".quad 0x33315a5f5b202c31,0x656c686369726944,0x5366527473655774,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f\n"
".quad 0x3b5d38315f6d6172,0x203220636f6c2e0a,0x74730a3120363431,0x72255b203233662e\n"
".quad 0x6625202c5d31366c,0x752e6172620a3b34,0x345f32424220696e,0x335f3242420a0a3b\n"
".quad 0x7261702e646c0a3a,0x25203436752e6d61,0x5f5b202c34326c72,0x636972694433315a\n"
".quad 0x7473655774656c68,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x345f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203733312032,0x25203233662e646c,0x6c72255b202c3566,0x2e646c0a3b5d3432\n"
".quad 0x36752e6d61726170,0x2c31326c72252034,0x694433315a5f5b20,0x5774656c68636972\n"
".quad 0x535f536652747365,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x6c2e0a3b5d325f6d,0x373331203220636f\n"
".quad 0x33662e74730a3120,0x31326c72255b2032,0x0a3b356625202c5d,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3033,0x6c68636972694433,0x6652747365577465\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x3b5d375f6d617261,0x203220636f6c2e0a,0x646c0a3120383331\n"
".quad 0x366625203233662e,0x30336c72255b202c,0x61702e646c0a3b5d,0x203436752e6d6172\n"
".quad 0x5b202c37326c7225,0x6972694433315a5f,0x73655774656c6863,0x535f535f53665274\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d36,0x3120383331203220,0x203233662e74730a\n"
".quad 0x2c5d37326c72255b,0x646c0a3b36662520,0x752e6d617261702e,0x36346c7225203436\n"
".quad 0x4433315a5f5b202c,0x74656c6863697269,0x5f53665274736557,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x0a3b5d33315f6d61,0x31203220636f6c2e,0x2e646c0a31203933,0x2c37662520323366\n"
".quad 0x5d36346c72255b20,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c39336c72\n"
".quad 0x636972694433315a,0x7473655774656c68,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f\n"
".quad 0x636f6c2e0a3b5d31,0x3120393331203220,0x203233662e74730a,0x2c5d39336c72255b\n"
".quad 0x646c0a3b37662520,0x752e6d617261702e,0x32366c7225203436,0x4433315a5f5b202c\n"
".quad 0x74656c6863697269,0x5f53665274736557,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53,0x0a3b5d38315f6d61\n"
".quad 0x31203220636f6c2e,0x2e646c0a31203034,0x2c38662520323366,0x5d32366c72255b20\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c35356c72,0x636972694433315a\n"
".quad 0x7473655774656c68,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f,0x636f6c2e0a3b5d36\n"
".quad 0x3120303431203220,0x203233662e74730a,0x2c5d35356c72255b,0x420a0a3b38662520\n"
".quad 0x646c0a3a345f3242,0x752e6d617261702e,0x2c31357225203233,0x694433315a5f5b20\n"
".quad 0x5774656c68636972,0x535f536652747365,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f,0x730a3b5d30325f6d\n"
".quad 0x732e71652e707465,0x202c337025203233,0x3b30202c31357225,0x726220337025400a\n"
".quad 0x3b375f3242422061,0x7261702e646c0a0a,0x25203233752e6d61,0x5a5f5b202c303572\n"
".quad 0x6863697269443331,0x527473655774656c,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f,0x30325f6d61726170\n"
".quad 0x2e707465730a3b5d,0x25203233732e656e,0x30357225202c3470,0x25400a3b3336202c\n"
".quad 0x4220617262203470,0x6c0a0a3b385f3242,0x2e6d617261702e64,0x336c722520343675\n"
".quad 0x33315a5f5b202c33,0x656c686369726944,0x5366527473655774,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f\n"
".quad 0x0a3b5d395f6d6172,0x31203220636f6c2e,0x2e646c0a31203635,0x2c39662520323366\n"
".quad 0x5d33336c72255b20,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c39346c72\n"
".quad 0x636972694433315a,0x7473655774656c68,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f\n"
".quad 0x636f6c2e0a3b5d34,0x3120363531203220,0x203233662e74730a,0x2c5d39346c72255b\n"
".quad 0x646c0a3b39662520,0x752e6d617261702e,0x35336c7225203436,0x4433315a5f5b202c\n"
".quad 0x74656c6863697269,0x5f53665274736557,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53,0x0a3b5d30315f6d61\n"
".quad 0x31203220636f6c2e,0x2e646c0a31203735,0x3031662520323366,0x35336c72255b202c\n"
".quad 0x61702e646c0a3b5d,0x203436752e6d6172,0x5b202c31356c7225,0x6972694433315a5f\n"
".quad 0x73655774656c6863,0x535f535f53665274,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69,0x6f6c2e0a3b5d3531\n"
".quad 0x2037353120322063,0x3233662e74730a31,0x5d31356c72255b20,0x0a3b30316625202c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3034,0x6c68636972694433\n"
".quad 0x6652747365577465,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x5d31315f6d617261,0x3220636f6c2e0a3b\n"
".quad 0x6c0a312038353120,0x6625203233662e64,0x6c72255b202c3131,0x2e646c0a3b5d3034\n"
".quad 0x36752e6d61726170,0x2c36356c72252034,0x694433315a5f5b20,0x5774656c68636972\n"
".quad 0x535f536652747365,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x2e0a3b5d36315f6d,0x3531203220636f6c\n"
".quad 0x662e74730a312038,0x356c72255b203233,0x31316625202c5d36,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c32346c72,0x636972694433315a,0x7473655774656c68\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x315f6d617261705f,0x636f6c2e0a3b5d32,0x3120393531203220\n"
".quad 0x203233662e646c0a,0x255b202c32316625,0x6c0a3b5d32346c72,0x2e6d617261702e64\n"
".quad 0x356c722520343675,0x33315a5f5b202c38,0x656c686369726944,0x5366527473655774\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x61705f69695f535f,0x3b5d37315f6d6172,0x203220636f6c2e0a,0x74730a3120393531\n"
".quad 0x72255b203233662e,0x6625202c5d38356c,0x702e646c0a3b3231,0x3436752e6d617261\n"
".quad 0x202c37346c722520,0x72694433315a5f5b,0x655774656c686369,0x5f535f5366527473\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x6c2e0a3b5d33315f,0x303631203220636f,0x33662e646c0a3120\n"
".quad 0x202c333166252032,0x3b5d37346c72255b,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5a5f5b202c33366c,0x6863697269443331,0x527473655774656c,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f\n"
".quad 0x38315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203036312032,0x5b203233662e7473\n"
".quad 0x202c5d33366c7225,0x72620a3b33316625,0x424220696e752e61,0x42420a0a3b385f32\n"
".quad 0x2e646c0a3a375f32,0x36752e6d61726170,0x2c30356c72252034,0x694433315a5f5b20\n"
".quad 0x5774656c68636972,0x535f536652747365,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f,0x2e0a3b5d34315f6d\n"
".quad 0x3431203220636f6c,0x662e646c0a312039,0x2c34316625203233,0x5d30356c72255b20\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c34336c72,0x636972694433315a\n"
".quad 0x7473655774656c68,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x395f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203934312032,0x5b203233662e7473,0x202c5d34336c7225,0x646c0a3b34316625\n"
".quad 0x752e6d617261702e,0x32356c7225203436,0x4433315a5f5b202c,0x74656c6863697269\n"
".quad 0x5f53665274736557,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x7261705f69695f53,0x0a3b5d35315f6d61,0x31203220636f6c2e\n"
".quad 0x2e646c0a31203035,0x3531662520323366,0x32356c72255b202c,0x61702e646c0a3b5d\n"
".quad 0x203436752e6d6172,0x5b202c36336c7225,0x6972694433315a5f,0x73655774656c6863\n"
".quad 0x535f535f53665274,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x5f6d617261705f69,0x6f6c2e0a3b5d3031,0x2030353120322063\n"
".quad 0x3233662e74730a31,0x5d36336c72255b20,0x0a3b35316625202c,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3735,0x6c68636972694433,0x6652747365577465\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x5d36315f6d617261,0x3220636f6c2e0a3b,0x6c0a312031353120\n"
".quad 0x6625203233662e64,0x6c72255b202c3631,0x2e646c0a3b5d3735,0x36752e6d61726170\n"
".quad 0x2c31346c72252034,0x694433315a5f5b20,0x5774656c68636972,0x535f536652747365\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x617261705f69695f,0x2e0a3b5d31315f6d,0x3531203220636f6c,0x662e74730a312031\n"
".quad 0x346c72255b203233,0x36316625202c5d31,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c39356c72,0x636972694433315a,0x7473655774656c68,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53\n"
".quad 0x315f6d617261705f,0x636f6c2e0a3b5d37,0x3120323531203220,0x203233662e646c0a\n"
".quad 0x255b202c37316625,0x6c0a3b5d39356c72,0x2e6d617261702e64,0x346c722520343675\n"
".quad 0x33315a5f5b202c33,0x656c686369726944,0x5366527473655774,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f\n"
".quad 0x3b5d32315f6d6172,0x203220636f6c2e0a,0x74730a3120323531,0x72255b203233662e\n"
".quad 0x6625202c5d33346c,0x702e646c0a3b3731,0x3436752e6d617261,0x202c34366c722520\n"
".quad 0x72694433315a5f5b,0x655774656c686369,0x5f535f5366527473,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969\n"
".quad 0x6c2e0a3b5d38315f,0x333531203220636f,0x33662e646c0a3120,0x202c383166252032\n"
".quad 0x3b5d34366c72255b,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c38346c\n"
".quad 0x6863697269443331,0x527473655774656c,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f,0x33315f6d61726170\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203335312032,0x5b203233662e7473,0x202c5d38346c7225\n"
".quad 0x420a0a3b38316625,0x6f6d0a3a385f3242,0x6625203233662e76,0x30346630202c3931\n"
".quad 0x0a3b303030303043,0x31203220636f6c2e,0x6c756d0a31203936,0x326625203233662e\n"
".quad 0x2c39316625202c30,0x3030303030663020,0x766f6d0a3b303030,0x326625203233662e\n"
".quad 0x3030306630202c31,0x6c0a3b3030303030,0x2e6d617261702e64,0x326c722520343675\n"
".quad 0x33315a5f5b202c32,0x656c686369726944,0x5366527473655774,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f\n"
".quad 0x0a3b5d335f6d6172,0x31203220636f6c2e,0x2e646c0a31203936,0x3232662520323366\n"
".quad 0x32326c72255b202c,0x662e766f6d0a3b5d,0x2c33326625203233,0x3833364433663020\n"
".quad 0x6f6c2e0a3b393345,0x2030353620332063,0x6e722e616d660a35,0x326625203233662e\n"
".quad 0x2c33326625202c34,0x25202c3032662520,0x2e646c0a3b323266,0x36752e6d61726170\n"
".quad 0x2c39316c72252034,0x694433315a5f5b20,0x5774656c68636972,0x535f536652747365\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x617261705f69695f,0x6c2e0a3b5d315f6d,0x393631203220636f,0x33662e74730a3120\n"
".quad 0x39316c72255b2032,0x3b34326625202c5d,0x203220636f6c2e0a,0x64610a3120303731\n"
".quad 0x6625203233662e64,0x31326625202c3532,0x334144336630202c,0x756d0a3b41303744\n"
".quad 0x6625203233662e6c,0x35326625202c3632,0x304330346630202c,0x646c0a3b30303030\n"
".quad 0x752e6d617261702e,0x31336c7225203436,0x4433315a5f5b202c,0x74656c6863697269\n"
".quad 0x5f53665274736557,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x7261705f69695f53,0x2e0a3b5d375f6d61,0x3731203220636f6c\n"
".quad 0x662e646c0a312030,0x2c37326625203233,0x5d31336c72255b20,0x33662e766f6d0a3b\n"
".quad 0x202c383266252032,0x4538334543336630,0x636f6c2e0a3b3933,0x3520303536203320\n"
".quad 0x2e6e722e616d660a,0x3932662520323366,0x202c38326625202c,0x6625202c36326625\n"
".quad 0x702e646c0a3b3732,0x3436752e6d617261,0x202c35326c722520,0x72694433315a5f5b\n"
".quad 0x655774656c686369,0x5f535f5366527473,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x6f6c2e0a3b5d355f\n"
".quad 0x2030373120322063,0x3233662e74730a31,0x5d35326c72255b20,0x0a3b39326625202c\n"
".quad 0x31203220636f6c2e,0x6275730a31203137,0x336625203233662e,0x2c31326625202c30\n"
".quad 0x4433414433663020,0x6c756d0a3b413037,0x336625203233662e,0x2c30336625202c31\n"
".quad 0x3030433034663020,0x2e646c0a3b303030,0x36752e6d61726170,0x2c38326c72252034\n"
".quad 0x694433315a5f5b20,0x5774656c68636972,0x535f536652747365,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f\n"
".quad 0x6c2e0a3b5d365f6d,0x313731203220636f,0x33662e646c0a3120,0x202c323366252032\n"
".quad 0x3b5d38326c72255b,0x203320636f6c2e0a,0x6d660a3520303536,0x3233662e6e722e61\n"
".quad 0x25202c3333662520,0x336625202c383266,0x3b32336625202c31,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c32336c,0x6863697269443331,0x527473655774656c\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x5f69695f535f535f,0x5d385f6d61726170,0x3220636f6c2e0a3b,0x730a312031373120\n"
".quad 0x255b203233662e74,0x25202c5d32336c72,0x6f6c2e0a3b333366,0x2032373120322063\n"
".quad 0x33662e6464610a31,0x202c343366252032,0x6630202c31326625,0x3030303030303030\n"
".quad 0x33662e6c756d0a3b,0x202c353366252032,0x6630202c34336625,0x3030303030433034\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c30366c72,0x636972694433315a\n"
".quad 0x7473655774656c68,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f,0x636f6c2e0a3b5d37\n"
".quad 0x3120323731203220,0x203233662e646c0a,0x255b202c36336625,0x2e0a3b5d30366c72\n"
".quad 0x3536203320636f6c,0x2e616d660a352030,0x25203233662e6e72,0x326625202c373366\n"
".quad 0x2c35336625202c38,0x6c0a3b3633662520,0x2e6d617261702e64,0x336c722520343675\n"
".quad 0x33315a5f5b202c37,0x656c686369726944,0x5366527473655774,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f\n"
".quad 0x3b5d30315f6d6172,0x203220636f6c2e0a,0x74730a3120323731,0x72255b203233662e\n"
".quad 0x6625202c5d37336c,0x636f6c2e0a3b3733,0x3120333731203220,0x3233662e6275730a\n"
".quad 0x25202c3833662520,0x306630202c313266,0x3b30303030303030,0x3233662e6c756d0a\n"
".quad 0x25202c3933662520,0x346630202c383366,0x3b30303030304330,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c34346c,0x6863697269443331,0x527473655774656c\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x5f69695f535f535f,0x32315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203337312032\n"
".quad 0x25203233662e646c,0x72255b202c303466,0x6c2e0a3b5d34346c,0x303536203320636f\n"
".quad 0x722e616d660a3520,0x6625203233662e6e,0x38326625202c3134,0x202c39336625202c\n"
".quad 0x646c0a3b30346625,0x752e6d617261702e,0x33356c7225203436,0x4433315a5f5b202c\n"
".quad 0x74656c6863697269,0x5f53665274736557,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53,0x0a3b5d35315f6d61\n"
".quad 0x31203220636f6c2e,0x2e74730a31203337,0x6c72255b20323366,0x346625202c5d3335\n"
".quad 0x20636f6c2e0a3b31,0x0a32203437312032,0x0a0a7d0a3b746572,0x656c62697369762e\n"
".quad 0x5f20636e75662e20,0x636972694437315a,0x7473655774656c68,0x5f5366526765525f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x702e0a2869695f53,0x36622e206d617261,0x694437315a5f2034,0x5774656c68636972\n"
".quad 0x526765525f747365,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x2c305f6d61726170,0x206d617261702e0a\n"
".quad 0x315a5f203436622e,0x6c68636972694437,0x525f747365577465,0x5f535f5366526765\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x7261702e0a2c315f,0x203436622e206d61,0x6972694437315a5f\n"
".quad 0x73655774656c6863,0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f,0x2e0a2c325f6d6172\n"
".quad 0x622e206d61726170,0x4437315a5f203436,0x74656c6863697269,0x6765525f74736557\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x335f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20\n"
".quad 0x6863697269443731,0x5f7473655774656c,0x535f536652676552,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f\n"
".quad 0x61702e0a2c345f6d,0x3436622e206d6172,0x72694437315a5f20,0x655774656c686369\n"
".quad 0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x0a2c355f6d617261,0x2e206d617261702e\n"
".quad 0x37315a5f20343662,0x656c686369726944,0x65525f7473655774,0x535f535f53665267\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x617261702e0a2c36,0x5f203436622e206d,0x636972694437315a\n"
".quad 0x7473655774656c68,0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53,0x702e0a2c375f6d61\n"
".quad 0x36622e206d617261,0x694437315a5f2034,0x5774656c68636972,0x526765525f747365\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x5f69695f535f535f,0x2c385f6d61726170,0x206d617261702e0a,0x315a5f203436622e\n"
".quad 0x6c68636972694437,0x525f747365577465,0x5f535f5366526765,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969\n"
".quad 0x7261702e0a2c395f,0x203436622e206d61,0x6972694437315a5f,0x73655774656c6863\n"
".quad 0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x61705f69695f535f,0x0a2c30315f6d6172,0x2e206d617261702e\n"
".quad 0x37315a5f20343662,0x656c686369726944,0x65525f7473655774,0x535f535f53665267\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x7261702e0a2c3131,0x203436622e206d61,0x6972694437315a5f\n"
".quad 0x73655774656c6863,0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f,0x0a2c32315f6d6172\n"
".quad 0x2e206d617261702e,0x37315a5f20343662,0x656c686369726944,0x65525f7473655774\n"
".quad 0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x5f6d617261705f69,0x7261702e0a2c3331,0x203436622e206d61\n"
".quad 0x6972694437315a5f,0x73655774656c6863,0x5366526765525f74,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f\n"
".quad 0x0a2c34315f6d6172,0x2e206d617261702e,0x37315a5f20343662,0x656c686369726944\n"
".quad 0x65525f7473655774,0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69,0x7261702e0a2c3531\n"
".quad 0x203436622e206d61,0x6972694437315a5f,0x73655774656c6863,0x5366526765525f74\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x61705f69695f535f,0x0a2c36315f6d6172,0x2e206d617261702e,0x37315a5f20343662\n"
".quad 0x656c686369726944,0x65525f7473655774,0x535f535f53665267,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69\n"
".quad 0x7261702e0a2c3731,0x203436622e206d61,0x6972694437315a5f,0x73655774656c6863\n"
".quad 0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x61705f69695f535f,0x0a2c38315f6d6172,0x2e206d617261702e\n"
".quad 0x37315a5f20323362,0x656c686369726944,0x65525f7473655774,0x535f535f53665267\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x7261702e0a2c3931,0x203233622e206d61,0x6972694437315a5f\n"
".quad 0x73655774656c6863,0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f,0x290a30325f6d6172\n"
".quad 0x206765722e0a7b0a,0x3c6625203233662e,0x65722e0a3b3e3533,0x20646572702e2067\n"
".quad 0x2e0a3b3e353c7025,0x3233732e20676572,0x3b3e32353c722520,0x732e206765722e0a\n"
".quad 0x363c6c7225203436,0x646c0a0a0a3b3e35,0x752e6d617261702e,0x202c317225203233\n"
".quad 0x72694437315a5f5b,0x655774656c686369,0x66526765525f7473,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x5d39315f6d617261,0x652e707465730a3b,0x7025203233732e71,0x202c317225202c31\n"
".quad 0x20317025400a3b30,0x5f33424220617262,0x702e646c0a0a3b33,0x3233752e6d617261\n"
".quad 0x5b202c3934722520,0x6972694437315a5f,0x73655774656c6863,0x5366526765525f74\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x61705f69695f535f,0x3b5d39315f6d6172,0x656e2e707465730a,0x327025203233732e\n"
".quad 0x202c39347225202c,0x327025400a3b3336,0x3342422061726220,0x2e646c0a0a3b345f\n"
".quad 0x36752e6d61726170,0x2c30326c72252034,0x694437315a5f5b20,0x5774656c68636972\n"
".quad 0x526765525f747365,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x5d325f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x6c0a312030393120,0x6625203233662e64,0x326c72255b202c31,0x702e646c0a3b5d30\n"
".quad 0x3436752e6d617261,0x202c33326c722520,0x72694437315a5f5b,0x655774656c686369\n"
".quad 0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x3b5d345f6d617261,0x203220636f6c2e0a\n"
".quad 0x74730a3120303931,0x72255b203233662e,0x6625202c5d33326c,0x61702e646c0a3b31\n"
".quad 0x203436752e6d6172,0x5b202c36326c7225,0x6972694437315a5f,0x73655774656c6863\n"
".quad 0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x61705f69695f535f,0x0a3b5d365f6d6172,0x31203220636f6c2e\n"
".quad 0x2e646c0a31203139,0x2c32662520323366,0x5d36326c72255b20,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c39326c72,0x636972694437315a,0x7473655774656c68\n"
".quad 0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x7261705f69695f53,0x2e0a3b5d375f6d61,0x3931203220636f6c\n"
".quad 0x662e74730a312031,0x326c72255b203233,0x3b326625202c5d39,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c38336c,0x6863697269443731,0x5f7473655774656c\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x2e0a3b5d31315f6d,0x3931203220636f6c\n"
".quad 0x662e646c0a312032,0x202c336625203233,0x3b5d38336c72255b,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c35346c,0x6863697269443731,0x5f7473655774656c\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x2e0a3b5d33315f6d,0x3931203220636f6c\n"
".quad 0x662e74730a312032,0x346c72255b203233,0x3b336625202c5d35,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c34356c,0x6863697269443731,0x5f7473655774656c\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x2e0a3b5d36315f6d,0x3931203220636f6c\n"
".quad 0x662e646c0a312033,0x202c346625203233,0x3b5d34356c72255b,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c31366c,0x6863697269443731,0x5f7473655774656c\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x2e0a3b5d38315f6d,0x3931203220636f6c\n"
".quad 0x662e74730a312033,0x366c72255b203233,0x3b346625202c5d31,0x696e752e6172620a\n"
".quad 0x0a3b345f33424220,0x0a3a335f3342420a,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x315a5f5b202c3432,0x6c68636972694437,0x525f747365577465,0x5f535f5366526765\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x6f6c2e0a3b5d345f,0x2034383120322063,0x3233662e646c0a31\n"
".quad 0x255b202c35662520,0x6c0a3b5d34326c72,0x2e6d617261702e64,0x326c722520343675\n"
".quad 0x37315a5f5b202c31,0x656c686369726944,0x65525f7473655774,0x535f535f53665267\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d32,0x3120343831203220,0x203233662e74730a\n"
".quad 0x2c5d31326c72255b,0x646c0a3b35662520,0x752e6d617261702e,0x30336c7225203436\n"
".quad 0x4437315a5f5b202c,0x74656c6863697269,0x6765525f74736557,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53\n"
".quad 0x375f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203538312032,0x25203233662e646c\n"
".quad 0x6c72255b202c3666,0x2e646c0a3b5d3033,0x36752e6d61726170,0x2c37326c72252034\n"
".quad 0x694437315a5f5b20,0x5774656c68636972,0x526765525f747365,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f\n"
".quad 0x5d365f6d61726170,0x3220636f6c2e0a3b,0x730a312035383120,0x255b203233662e74\n"
".quad 0x25202c5d37326c72,0x702e646c0a3b3666,0x3436752e6d617261,0x202c36346c722520\n"
".quad 0x72694437315a5f5b,0x655774656c686369,0x66526765525f7473,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x5d33315f6d617261,0x3220636f6c2e0a3b,0x6c0a312036383120,0x6625203233662e64\n"
".quad 0x346c72255b202c37,0x702e646c0a3b5d36,0x3436752e6d617261,0x202c39336c722520\n"
".quad 0x72694437315a5f5b,0x655774656c686369,0x66526765525f7473,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x5d31315f6d617261,0x3220636f6c2e0a3b,0x730a312036383120,0x255b203233662e74\n"
".quad 0x25202c5d39336c72,0x702e646c0a3b3766,0x3436752e6d617261,0x202c32366c722520\n"
".quad 0x72694437315a5f5b,0x655774656c686369,0x66526765525f7473,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x5d38315f6d617261,0x3220636f6c2e0a3b,0x6c0a312037383120,0x6625203233662e64\n"
".quad 0x366c72255b202c38,0x702e646c0a3b5d32,0x3436752e6d617261,0x202c35356c722520\n"
".quad 0x72694437315a5f5b,0x655774656c686369,0x66526765525f7473,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x5d36315f6d617261,0x3220636f6c2e0a3b,0x730a312037383120,0x255b203233662e74\n"
".quad 0x25202c5d35356c72,0x3342420a0a3b3866,0x702e646c0a3a345f,0x3233752e6d617261\n"
".quad 0x5b202c3135722520,0x6972694437315a5f,0x73655774656c6863,0x5366526765525f74\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x61705f69695f535f,0x3b5d30325f6d6172,0x71652e707465730a,0x337025203233732e\n"
".quad 0x202c31357225202c,0x20337025400a3b30,0x5f33424220617262,0x702e646c0a0a3b37\n"
".quad 0x3233752e6d617261,0x5b202c3035722520,0x6972694437315a5f,0x73655774656c6863\n"
".quad 0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x61705f69695f535f,0x3b5d30325f6d6172,0x656e2e707465730a\n"
".quad 0x347025203233732e,0x202c30357225202c,0x347025400a3b3336,0x3342422061726220\n"
".quad 0x2e646c0a0a3b385f,0x36752e6d61726170,0x2c33336c72252034,0x694437315a5f5b20\n"
".quad 0x5774656c68636972,0x526765525f747365,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f,0x5d395f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312033303220,0x6625203233662e64,0x336c72255b202c39\n"
".quad 0x702e646c0a3b5d33,0x3436752e6d617261,0x202c39346c722520,0x72694437315a5f5b\n"
".quad 0x655774656c686369,0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53,0x5d34315f6d617261\n"
".quad 0x3220636f6c2e0a3b,0x730a312033303220,0x255b203233662e74,0x25202c5d39346c72\n"
".quad 0x702e646c0a3b3966,0x3436752e6d617261,0x202c35336c722520,0x72694437315a5f5b\n"
".quad 0x655774656c686369,0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53,0x5d30315f6d617261\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312034303220,0x6625203233662e64,0x6c72255b202c3031\n"
".quad 0x2e646c0a3b5d3533,0x36752e6d61726170,0x2c31356c72252034,0x694437315a5f5b20\n"
".quad 0x5774656c68636972,0x526765525f747365,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f,0x35315f6d61726170\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203430322032,0x5b203233662e7473,0x202c5d31356c7225\n"
".quad 0x646c0a3b30316625,0x752e6d617261702e,0x30346c7225203436,0x4437315a5f5b202c\n"
".quad 0x74656c6863697269,0x6765525f74736557,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f\n"
".quad 0x636f6c2e0a3b5d31,0x3120353032203220,0x203233662e646c0a,0x255b202c31316625\n"
".quad 0x6c0a3b5d30346c72,0x2e6d617261702e64,0x356c722520343675,0x37315a5f5b202c36\n"
".quad 0x656c686369726944,0x65525f7473655774,0x535f535f53665267,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69\n"
".quad 0x6f6c2e0a3b5d3631,0x2035303220322063,0x3233662e74730a31,0x5d36356c72255b20\n"
".quad 0x0a3b31316625202c,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3234\n"
".quad 0x6c68636972694437,0x525f747365577465,0x5f535f5366526765,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969\n"
".quad 0x6c2e0a3b5d32315f,0x363032203220636f,0x33662e646c0a3120,0x202c323166252032\n"
".quad 0x3b5d32346c72255b,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c38356c\n"
".quad 0x6863697269443731,0x5f7473655774656c,0x535f536652676552,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f\n"
".quad 0x2e0a3b5d37315f6d,0x3032203220636f6c,0x662e74730a312036,0x356c72255b203233\n"
".quad 0x32316625202c5d38,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c37346c72\n"
".quad 0x636972694437315a,0x7473655774656c68,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x0a3b5d33315f6d61,0x32203220636f6c2e,0x2e646c0a31203730,0x3331662520323366\n"
".quad 0x37346c72255b202c,0x61702e646c0a3b5d,0x203436752e6d6172,0x5b202c33366c7225\n"
".quad 0x6972694437315a5f,0x73655774656c6863,0x5366526765525f74,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f\n"
".quad 0x3b5d38315f6d6172,0x203220636f6c2e0a,0x74730a3120373032,0x72255b203233662e\n"
".quad 0x6625202c5d33366c,0x2e6172620a3b3331,0x5f33424220696e75,0x5f3342420a0a3b38\n"
".quad 0x61702e646c0a3a37,0x203436752e6d6172,0x5b202c30356c7225,0x6972694437315a5f\n"
".quad 0x73655774656c6863,0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f,0x3b5d34315f6d6172\n"
".quad 0x203220636f6c2e0a,0x646c0a3120363931,0x316625203233662e,0x356c72255b202c34\n"
".quad 0x702e646c0a3b5d30,0x3436752e6d617261,0x202c34336c722520,0x72694437315a5f5b\n"
".quad 0x655774656c686369,0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53,0x3b5d395f6d617261\n"
".quad 0x203220636f6c2e0a,0x74730a3120363931,0x72255b203233662e,0x6625202c5d34336c\n"
".quad 0x702e646c0a3b3431,0x3436752e6d617261,0x202c32356c722520,0x72694437315a5f5b\n"
".quad 0x655774656c686369,0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53,0x5d35315f6d617261\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312037393120,0x6625203233662e64,0x6c72255b202c3531\n"
".quad 0x2e646c0a3b5d3235,0x36752e6d61726170,0x2c36336c72252034,0x694437315a5f5b20\n"
".quad 0x5774656c68636972,0x526765525f747365,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f,0x30315f6d61726170\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203739312032,0x5b203233662e7473,0x202c5d36336c7225\n"
".quad 0x646c0a3b35316625,0x752e6d617261702e,0x37356c7225203436,0x4437315a5f5b202c\n"
".quad 0x74656c6863697269,0x6765525f74736557,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f\n"
".quad 0x636f6c2e0a3b5d36,0x3120383931203220,0x203233662e646c0a,0x255b202c36316625\n"
".quad 0x6c0a3b5d37356c72,0x2e6d617261702e64,0x346c722520343675,0x37315a5f5b202c31\n"
".quad 0x656c686369726944,0x65525f7473655774,0x535f535f53665267,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69\n"
".quad 0x6f6c2e0a3b5d3131,0x2038393120322063,0x3233662e74730a31,0x5d31346c72255b20\n"
".quad 0x0a3b36316625202c,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3935\n"
".quad 0x6c68636972694437,0x525f747365577465,0x5f535f5366526765,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969\n"
".quad 0x6c2e0a3b5d37315f,0x393931203220636f,0x33662e646c0a3120,0x202c373166252032\n"
".quad 0x3b5d39356c72255b,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c33346c\n"
".quad 0x6863697269443731,0x5f7473655774656c,0x535f536652676552,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f\n"
".quad 0x2e0a3b5d32315f6d,0x3931203220636f6c,0x662e74730a312039,0x346c72255b203233\n"
".quad 0x37316625202c5d33,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c34366c72\n"
".quad 0x636972694437315a,0x7473655774656c68,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x0a3b5d38315f6d61,0x32203220636f6c2e,0x2e646c0a31203030,0x3831662520323366\n"
".quad 0x34366c72255b202c,0x61702e646c0a3b5d,0x203436752e6d6172,0x5b202c38346c7225\n"
".quad 0x6972694437315a5f,0x73655774656c6863,0x5366526765525f74,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f\n"
".quad 0x3b5d33315f6d6172,0x203220636f6c2e0a,0x74730a3120303032,0x72255b203233662e\n"
".quad 0x6625202c5d38346c,0x3342420a0a3b3831,0x702e646c0a3a385f,0x3436752e6d617261\n"
".quad 0x202c32326c722520,0x72694437315a5f5b,0x655774656c686369,0x66526765525f7473\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x3b5d335f6d617261,0x203220636f6c2e0a,0x646c0a3120313232\n"
".quad 0x316625203233662e,0x326c72255b202c39,0x2e766f6d0a3b5d32,0x3032662520323366\n"
".quad 0x303030306630202c,0x6f6d0a3b30303030,0x6625203233662e76,0x45336630202c3132\n"
".quad 0x0a3b424141414141,0x32203220636f6c2e,0x616d660a31203132,0x203233662e6e722e\n"
".quad 0x6625202c32326625,0x30306630202c3132,0x202c303030303030,0x646c0a3b39316625\n"
".quad 0x752e6d617261702e,0x39316c7225203436,0x4437315a5f5b202c,0x74656c6863697269\n"
".quad 0x6765525f74736557,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203132322032,0x5b203233662e7473,0x202c5d39316c7225,0x6c2e0a3b32326625\n"
".quad 0x343232203220636f,0x662e6464610a3120,0x2c33326625203233,0x30202c3032662520\n"
".quad 0x3037443341443366,0x61702e646c0a3b41,0x203436752e6d6172,0x5b202c31336c7225\n"
".quad 0x6972694437315a5f,0x73655774656c6863,0x5366526765525f74,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f\n"
".quad 0x0a3b5d375f6d6172,0x32203220636f6c2e,0x2e646c0a31203432,0x3432662520323366\n"
".quad 0x31336c72255b202c,0x722e616d660a3b5d,0x6625203233662e6e,0x33326625202c3532\n"
".quad 0x413245336630202c,0x6625202c42414141,0x702e646c0a3b3432,0x3436752e6d617261\n"
".quad 0x202c35326c722520,0x72694437315a5f5b,0x655774656c686369,0x66526765525f7473\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x3b5d355f6d617261,0x203220636f6c2e0a,0x74730a3120343232\n"
".quad 0x72255b203233662e,0x6625202c5d35326c,0x636f6c2e0a3b3532,0x3120373232203220\n"
".quad 0x3233662e6275730a,0x25202c3632662520,0x336630202c303266,0x3b41303744334144\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c38326c,0x6863697269443731\n"
".quad 0x5f7473655774656c,0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f,0x6c2e0a3b5d365f6d\n"
".quad 0x373232203220636f,0x33662e646c0a3120,0x202c373266252032,0x3b5d38326c72255b\n"
".quad 0x2e6e722e616d660a,0x3832662520323366,0x202c36326625202c,0x4141413245336630\n"
".quad 0x37326625202c4241,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c32336c72\n"
".quad 0x636972694437315a,0x7473655774656c68,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x2e0a3b5d385f6d61,0x3232203220636f6c,0x662e74730a312037,0x336c72255b203233\n"
".quad 0x38326625202c5d32,0x3220636f6c2e0a3b,0x610a312030333220,0x25203233662e6464\n"
".quad 0x326625202c393266,0x3030306630202c30,0x6c0a3b3030303030,0x2e6d617261702e64\n"
".quad 0x366c722520343675,0x37315a5f5b202c30,0x656c686369726944,0x65525f7473655774\n"
".quad 0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x5f6d617261705f69,0x6f6c2e0a3b5d3731,0x2030333220322063\n"
".quad 0x3233662e646c0a31,0x5b202c3033662520,0x0a3b5d30366c7225,0x662e6e722e616d66\n"
".quad 0x2c31336625203233,0x30202c3932662520,0x4141414132453366,0x3b30336625202c42\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c37336c,0x6863697269443731\n"
".quad 0x5f7473655774656c,0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f,0x2e0a3b5d30315f6d\n"
".quad 0x3332203220636f6c,0x662e74730a312030,0x336c72255b203233,0x31336625202c5d37\n"
".quad 0x3220636f6c2e0a3b,0x730a312033333220,0x25203233662e6275,0x326625202c323366\n"
".quad 0x3030306630202c30,0x6c0a3b3030303030,0x2e6d617261702e64,0x346c722520343675\n"
".quad 0x37315a5f5b202c34,0x656c686369726944,0x65525f7473655774,0x535f535f53665267\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x6f6c2e0a3b5d3231,0x2033333220322063,0x3233662e646c0a31\n"
".quad 0x5b202c3333662520,0x0a3b5d34346c7225,0x662e6e722e616d66,0x2c34336625203233\n"
".quad 0x30202c3233662520,0x4141414132453366,0x3b33336625202c42,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c33356c,0x6863697269443731,0x5f7473655774656c\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x2e0a3b5d35315f6d,0x3332203220636f6c\n"
".quad 0x662e74730a312033,0x356c72255b203233,0x34336625202c5d33,0x3220636f6c2e0a3b\n"
".quad 0x720a322030353220,0x2e0a0a7d0a3b7465,0x20656c6269736976,0x5a5f20636e75662e\n"
".quad 0x6e616d75654e3531,0x65525f747361456e,0x535f535f53665267,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x617261702e0a2869\n"
".quad 0x5f203436622e206d,0x616d75654e35315a,0x525f747361456e6e,0x5f535f5366526765\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x7261702e0a2c305f,0x203436622e206d61,0x6d75654e35315a5f\n"
".quad 0x5f747361456e6e61,0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f,0x61702e0a2c315f6d\n"
".quad 0x3436622e206d6172,0x75654e35315a5f20,0x747361456e6e616d,0x5f5366526765525f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x7261705f69695f53,0x702e0a2c325f6d61,0x36622e206d617261,0x654e35315a5f2034\n"
".quad 0x7361456e6e616d75,0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f,0x2e0a2c335f6d6172\n"
".quad 0x622e206d61726170,0x4e35315a5f203436,0x61456e6e616d7565,0x66526765525f7473\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x0a2c345f6d617261,0x2e206d617261702e,0x35315a5f20343662\n"
".quad 0x456e6e616d75654e,0x526765525f747361,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f,0x2c355f6d61726170\n"
".quad 0x206d617261702e0a,0x315a5f203436622e,0x6e6e616d75654e35,0x6765525f74736145\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x365f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20\n"
".quad 0x6e616d75654e3531,0x65525f747361456e,0x535f535f53665267,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69\n"
".quad 0x617261702e0a2c37,0x5f203436622e206d,0x616d75654e35315a,0x525f747361456e6e\n"
".quad 0x5f535f5366526765,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x6d617261705f6969,0x7261702e0a2c385f,0x203436622e206d61\n"
".quad 0x6d75654e35315a5f,0x5f747361456e6e61,0x535f536652676552,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f\n"
".quad 0x61702e0a2c395f6d,0x3436622e206d6172,0x75654e35315a5f20,0x747361456e6e616d\n"
".quad 0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x7261705f69695f53,0x2e0a2c30315f6d61,0x622e206d61726170\n"
".quad 0x4e35315a5f203436,0x61456e6e616d7565,0x66526765525f7473,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x2c31315f6d617261,0x206d617261702e0a,0x315a5f203436622e,0x6e6e616d75654e35\n"
".quad 0x6765525f74736145,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f,0x617261702e0a2c32\n"
".quad 0x5f203436622e206d,0x616d75654e35315a,0x525f747361456e6e,0x5f535f5366526765\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x61702e0a2c33315f,0x3436622e206d6172,0x75654e35315a5f20\n"
".quad 0x747361456e6e616d,0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53,0x2e0a2c34315f6d61\n"
".quad 0x622e206d61726170,0x4e35315a5f203436,0x61456e6e616d7565,0x66526765525f7473\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x2c35315f6d617261,0x206d617261702e0a,0x315a5f203436622e\n"
".quad 0x6e6e616d75654e35,0x6765525f74736145,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f\n"
".quad 0x617261702e0a2c36,0x5f203436622e206d,0x616d75654e35315a,0x525f747361456e6e\n"
".quad 0x5f535f5366526765,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x6d617261705f6969,0x61702e0a2c37315f,0x3436622e206d6172\n"
".quad 0x75654e35315a5f20,0x747361456e6e616d,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x2e0a2c38315f6d61,0x622e206d61726170,0x4e35315a5f203233,0x61456e6e616d7565\n"
".quad 0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x2c39315f6d617261,0x206d617261702e0a\n"
".quad 0x315a5f203233622e,0x6e6e616d75654e35,0x6765525f74736145,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53\n"
".quad 0x325f6d617261705f,0x722e0a7b0a290a30,0x203233662e206765,0x0a3b3e37383c6625\n"
".quad 0x72702e206765722e,0x33313c7025206465,0x206765722e0a3b3e,0x3c7225203233732e\n"
".quad 0x722e0a3b3e333231,0x203436732e206765,0x3e3931313c6c7225,0x702e646c0a0a0a3b\n"
".quad 0x3233752e6d617261,0x5f5b202c31722520,0x616d75654e35315a,0x525f747361456e6e\n"
".quad 0x5f535f5366526765,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x6d617261705f6969,0x646c0a3b5d39315f,0x752e6d617261702e\n"
".quad 0x202c327225203233,0x75654e35315a5f5b,0x747361456e6e616d,0x5f5366526765525f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x7261705f69695f53,0x0a3b5d30325f6d61,0x25203233622e726f,0x2c327225202c3372\n"
".quad 0x65730a3b31722520,0x33732e71652e7074,0x25202c3370252032,0x2e0a3b30202c3372\n"
".quad 0x3532203220636f6c,0x337025400a312039,0x3442422061726220,0x646c0a0a3b35315f\n"
".quad 0x752e6d617261702e,0x3831317225203233,0x4e35315a5f5b202c,0x61456e6e616d7565\n"
".quad 0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x5d39315f6d617261,0x3220636f6c2e0a3b\n"
".quad 0x730a312038363220,0x732e71652e707465,0x202c347025203233,0x30202c3831317225\n"
".quad 0x7261702e646c0a3b,0x25203233752e6d61,0x5f5b202c32323172,0x616d75654e35315a\n"
".quad 0x525f747361456e6e,0x5f535f5366526765,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x6c2e0a3b5d30325f\n"
".quad 0x383632203220636f,0x2e707465730a3120,0x25203233732e7165,0x32317225202c3170\n"
".quad 0x610a3b3336202c32,0x20646572702e646e,0x347025202c357025,0x2e0a3b317025202c\n"
".quad 0x3632203220636f6c,0x357025400a312038,0x3442422061726220,0x646c0a0a3b34315f\n"
".quad 0x752e6d617261702e,0x3731317225203233,0x4e35315a5f5b202c,0x61456e6e616d7565\n"
".quad 0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x5d39315f6d617261,0x3220636f6c2e0a3b\n"
".quad 0x730a312037373220,0x732e71652e707465,0x202c327025203233,0x36202c3731317225\n"
".quad 0x61702e646c0a3b33,0x203233752e6d6172,0x5b202c3132317225,0x6d75654e35315a5f\n"
".quad 0x5f747361456e6e61,0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f,0x2e0a3b5d30325f6d\n"
".quad 0x3732203220636f6c,0x707465730a312037,0x203233732e71652e,0x317225202c367025\n"
".quad 0x610a3b30202c3132,0x20646572702e646e,0x327025202c377025,0x2e0a3b367025202c\n"
".quad 0x3732203220636f6c,0x377025400a312037,0x3442422061726220,0x6e610a0a3b33315f\n"
".quad 0x2520646572702e64,0x2c327025202c3870,0x6c2e0a3b31702520,0x363832203220636f\n"
".quad 0x20387025400a3120,0x5f34424220617262,0x2e646c0a0a3b3231,0x33752e6d61726170\n"
".quad 0x2c36313172252032,0x654e35315a5f5b20,0x7361456e6e616d75,0x5366526765525f74\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x61705f69695f535f,0x3b5d39315f6d6172,0x71652e707465730a,0x397025203233732e\n"
".quad 0x2c3631317225202c,0x397025400a3b3020,0x3442422061726220,0x2e646c0a0a3b375f\n"
".quad 0x33752e6d61726170,0x2c35313172252032,0x654e35315a5f5b20,0x7361456e6e616d75\n"
".quad 0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x61705f69695f535f,0x3b5d39315f6d6172,0x656e2e707465730a\n"
".quad 0x317025203233732e,0x3531317225202c30,0x25400a3b3336202c,0x2061726220303170\n"
".quad 0x0a0a3b385f344242,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3232\n"
".quad 0x6e6e616d75654e35,0x6765525f74736145,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53,0x325f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203630332032,0x25203233662e646c,0x6c72255b202c3166\n"
".quad 0x2e646c0a3b5d3232,0x36752e6d61726170,0x2c30336c72252034,0x654e35315a5f5b20\n"
".quad 0x7361456e6e616d75,0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f,0x0a3b5d345f6d6172\n"
".quad 0x33203220636f6c2e,0x2e74730a31203630,0x6c72255b20323366,0x316625202c5d3033\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c37366c72,0x616d75654e35315a\n"
".quad 0x525f747361456e6e,0x5f535f5366526765,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x6c2e0a3b5d31315f\n"
".quad 0x383033203220636f,0x33662e646c0a3120,0x5b202c3266252032,0x0a3b5d37366c7225\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3737,0x6e6e616d75654e35\n"
".quad 0x6765525f74736145,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f,0x636f6c2e0a3b5d33\n"
".quad 0x3120383033203220,0x203233662e74730a,0x2c5d37376c72255b,0x646c0a3b32662520\n"
".quad 0x752e6d617261702e,0x30316c7225203436,0x35315a5f5b202c30,0x456e6e616d75654e\n"
".quad 0x526765525f747361,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x36315f6d61726170,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203930332032,0x25203233662e646c,0x6c72255b202c3366,0x646c0a3b5d303031\n"
".quad 0x752e6d617261702e,0x31316c7225203436,0x35315a5f5b202c30,0x456e6e616d75654e\n"
".quad 0x526765525f747361,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x38315f6d61726170,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203930332032,0x5b203233662e7473,0x2c5d3031316c7225,0x646c0a3b33662520\n"
".quad 0x752e6d617261702e,0x37336c7225203436,0x4e35315a5f5b202c,0x61456e6e616d7565\n"
".quad 0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x3b5d355f6d617261,0x203220636f6c2e0a\n"
".quad 0x646c0a3120313133,0x346625203233662e,0x37336c72255b202c,0x61702e646c0a3b5d\n"
".quad 0x203436752e6d6172,0x5b202c36346c7225,0x6d75654e35315a5f,0x5f747361456e6e61\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x6c2e0a3b5d385f6d,0x313133203220636f\n"
".quad 0x33662e74730a3120,0x36346c72255b2032,0x0a3b346625202c5d,0x20696e752e617262\n"
".quad 0x0a0a3b385f344242,0x6c0a3a375f344242,0x2e6d617261702e64,0x336c722520343675\n"
".quad 0x35315a5f5b202c31,0x456e6e616d75654e,0x526765525f747361,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f\n"
".quad 0x5d345f6d61726170,0x3220636f6c2e0a3b,0x6c0a312038393220,0x6625203233662e64\n"
".quad 0x336c72255b202c35,0x702e646c0a3b5d31,0x3436752e6d617261,0x202c33326c722520\n"
".quad 0x75654e35315a5f5b,0x747361456e6e616d,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x2e0a3b5d325f6d61,0x3932203220636f6c,0x662e74730a312038,0x326c72255b203233\n"
".quad 0x3b356625202c5d33,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c38376c\n"
".quad 0x6e616d75654e3531,0x65525f747361456e,0x535f535f53665267,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69\n"
".quad 0x6f6c2e0a3b5d3331,0x2030303320322063,0x3233662e646c0a31,0x255b202c36662520\n"
".quad 0x6c0a3b5d38376c72,0x2e6d617261702e64,0x366c722520343675,0x35315a5f5b202c38\n"
".quad 0x456e6e616d75654e,0x526765525f747361,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f,0x31315f6d61726170\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203030332032,0x5b203233662e7473,0x202c5d38366c7225\n"
".quad 0x2e646c0a3b366625,0x36752e6d61726170,0x3131316c72252034,0x4e35315a5f5b202c\n"
".quad 0x61456e6e616d7565,0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53,0x5d38315f6d617261\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312031303320,0x6625203233662e64,0x316c72255b202c37\n"
".quad 0x2e646c0a3b5d3131,0x36752e6d61726170,0x3130316c72252034,0x4e35315a5f5b202c\n"
".quad 0x61456e6e616d7565,0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53,0x5d36315f6d617261\n"
".quad 0x3220636f6c2e0a3b,0x730a312031303320,0x255b203233662e74,0x202c5d3130316c72\n"
".quad 0x2e646c0a3b376625,0x36752e6d61726170,0x2c37346c72252034,0x654e35315a5f5b20\n"
".quad 0x7361456e6e616d75,0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f,0x0a3b5d385f6d6172\n"
".quad 0x33203220636f6c2e,0x2e646c0a31203330,0x2c38662520323366,0x5d37346c72255b20\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c38336c72,0x616d75654e35315a\n"
".quad 0x525f747361456e6e,0x5f535f5366526765,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x6f6c2e0a3b5d355f\n"
".quad 0x2033303320322063,0x3233662e74730a31,0x5d38336c72255b20,0x0a0a3b386625202c\n"
".quad 0x6c0a3a385f344242,0x2e6d617261702e64,0x3231722520323375,0x35315a5f5b202c30\n"
".quad 0x456e6e616d75654e,0x526765525f747361,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f,0x30325f6d61726170\n"
".quad 0x2e707465730a3b5d,0x25203233732e7165,0x317225202c313170,0x400a3b30202c3032\n"
".quad 0x6172622031317025,0x3b31315f34424220,0x7261702e646c0a0a,0x25203233752e6d61\n"
".quad 0x5f5b202c39313172,0x616d75654e35315a,0x525f747361456e6e,0x5f535f5366526765\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x65730a3b5d30325f,0x33732e656e2e7074,0x202c323170252032\n"
".quad 0x36202c3931317225,0x32317025400a3b33,0x3442422061726220,0x646c0a0a3b36315f\n"
".quad 0x752e6d617261702e,0x33356c7225203436,0x4e35315a5f5b202c,0x61456e6e616d7565\n"
".quad 0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x3b5d395f6d617261,0x203220636f6c2e0a\n"
".quad 0x646c0a3120313233,0x396625203233662e,0x33356c72255b202c,0x61702e646c0a3b5d\n"
".quad 0x203436752e6d6172,0x5b202c36386c7225,0x6d75654e35315a5f,0x5f747361456e6e61\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x2e0a3b5d34315f6d,0x3233203220636f6c\n"
".quad 0x662e74730a312031,0x386c72255b203233,0x3b396625202c5d36,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c30366c,0x6e616d75654e3531,0x65525f747361456e\n"
".quad 0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x5f6d617261705f69,0x6f6c2e0a3b5d3031,0x2032323320322063\n"
".quad 0x3233662e646c0a31,0x5b202c3031662520,0x0a3b5d30366c7225,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3339,0x6e6e616d75654e35,0x6765525f74736145\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x315f6d617261705f,0x636f6c2e0a3b5d35,0x3120323233203220\n"
".quad 0x203233662e74730a,0x2c5d33396c72255b,0x6c0a3b3031662520,0x2e6d617261702e64\n"
".quad 0x366c722520343675,0x35315a5f5b202c39,0x456e6e616d75654e,0x526765525f747361\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x5f69695f535f535f,0x31315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203332332032\n"
".quad 0x25203233662e646c,0x72255b202c313166,0x646c0a3b5d39366c,0x752e6d617261702e\n"
".quad 0x30316c7225203436,0x35315a5f5b202c32,0x456e6e616d75654e,0x526765525f747361\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x5f69695f535f535f,0x36315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203332332032\n"
".quad 0x5b203233662e7473,0x2c5d3230316c7225,0x6c0a3b3131662520,0x2e6d617261702e64\n"
".quad 0x376c722520343675,0x35315a5f5b202c39,0x456e6e616d75654e,0x526765525f747361\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x5f69695f535f535f,0x33315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203532332032\n"
".quad 0x25203233662e646c,0x72255b202c323166,0x646c0a3b5d39376c,0x752e6d617261702e\n"
".quad 0x31316c7225203436,0x35315a5f5b202c32,0x456e6e616d75654e,0x526765525f747361\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x5f69695f535f535f,0x38315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203532332032\n"
".quad 0x5b203233662e7473,0x2c5d3231316c7225,0x620a3b3231662520,0x4220696e752e6172\n"
".quad 0x0a0a3b36315f3442,0x0a3a31315f344242,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x315a5f5b202c3738,0x6e6e616d75654e35,0x6765525f74736145,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53\n"
".quad 0x315f6d617261705f,0x636f6c2e0a3b5d34,0x3120343133203220,0x203233662e646c0a\n"
".quad 0x255b202c33316625,0x6c0a3b5d37386c72,0x2e6d617261702e64,0x356c722520343675\n"
".quad 0x35315a5f5b202c34,0x456e6e616d75654e,0x526765525f747361,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f\n"
".quad 0x5d395f6d61726170,0x3220636f6c2e0a3b,0x730a312034313320,0x255b203233662e74\n"
".quad 0x25202c5d34356c72,0x2e646c0a3b333166,0x36752e6d61726170,0x2c34396c72252034\n"
".quad 0x654e35315a5f5b20,0x7361456e6e616d75,0x5366526765525f74,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f\n"
".quad 0x3b5d35315f6d6172,0x203220636f6c2e0a,0x646c0a3120353133,0x316625203233662e\n"
".quad 0x396c72255b202c34,0x702e646c0a3b5d34,0x3436752e6d617261,0x202c31366c722520\n"
".quad 0x75654e35315a5f5b,0x747361456e6e616d,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x0a3b5d30315f6d61,0x33203220636f6c2e,0x2e74730a31203531,0x6c72255b20323366\n"
".quad 0x316625202c5d3136,0x61702e646c0a3b34,0x203436752e6d6172,0x202c3330316c7225\n"
".quad 0x75654e35315a5f5b,0x747361456e6e616d,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x0a3b5d36315f6d61,0x33203220636f6c2e,0x2e646c0a31203631,0x3531662520323366\n"
".quad 0x30316c72255b202c,0x702e646c0a3b5d33,0x3436752e6d617261,0x202c30376c722520\n"
".quad 0x75654e35315a5f5b,0x747361456e6e616d,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x0a3b5d31315f6d61,0x33203220636f6c2e,0x2e74730a31203631,0x6c72255b20323366\n"
".quad 0x316625202c5d3037,0x61702e646c0a3b35,0x203436752e6d6172,0x202c3331316c7225\n"
".quad 0x75654e35315a5f5b,0x747361456e6e616d,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x0a3b5d38315f6d61,0x33203220636f6c2e,0x2e646c0a31203831,0x3631662520323366\n"
".quad 0x31316c72255b202c,0x702e646c0a3b5d33,0x3436752e6d617261,0x202c30386c722520\n"
".quad 0x75654e35315a5f5b,0x747361456e6e616d,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x0a3b5d33315f6d61,0x33203220636f6c2e,0x2e74730a31203831,0x6c72255b20323366\n"
".quad 0x316625202c5d3038,0x752e6172620a3b36,0x315f34424220696e,0x5f3442420a0a3b36\n"
".quad 0x702e646c0a3a3231,0x3436752e6d617261,0x202c34326c722520,0x75654e35315a5f5b\n"
".quad 0x747361456e6e616d,0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53,0x2e0a3b5d325f6d61\n"
".quad 0x3832203220636f6c,0x662e646c0a312037,0x2c37316625203233,0x5d34326c72255b20\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c32336c72,0x616d75654e35315a\n"
".quad 0x525f747361456e6e,0x5f535f5366526765,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x6f6c2e0a3b5d345f\n"
".quad 0x2037383220322063,0x3233662e74730a31,0x5d32336c72255b20,0x0a3b37316625202c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3137,0x6e6e616d75654e35\n"
".quad 0x6765525f74736145,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f,0x636f6c2e0a3b5d31\n"
".quad 0x3120383832203220,0x203233662e646c0a,0x255b202c38316625,0x6c0a3b5d31376c72\n"
".quad 0x2e6d617261702e64,0x386c722520343675,0x35315a5f5b202c31,0x456e6e616d75654e\n"
".quad 0x526765525f747361,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x33315f6d61726170,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203838322032,0x5b203233662e7473,0x202c5d31386c7225,0x6c2e0a3b38316625\n"
".quad 0x393832203220636f,0x33662e646c0a3120,0x202c393166252032,0x3b5d31376c72255b\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3430316c,0x616d75654e35315a\n"
".quad 0x525f747361456e6e,0x5f535f5366526765,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x6c2e0a3b5d36315f\n"
".quad 0x393832203220636f,0x33662e74730a3120,0x30316c72255b2032,0x39316625202c5d34\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312030393220,0x6625203233662e64,0x6c72255b202c3032\n"
".quad 0x2e646c0a3b5d3137,0x36752e6d61726170,0x3431316c72252034,0x4e35315a5f5b202c\n"
".quad 0x61456e6e616d7565,0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53,0x5d38315f6d617261\n"
".quad 0x3220636f6c2e0a3b,0x730a312030393220,0x255b203233662e74,0x202c5d3431316c72\n"
".quad 0x646c0a3b30326625,0x752e6d617261702e,0x39336c7225203436,0x4e35315a5f5b202c\n"
".quad 0x61456e6e616d7565,0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53,0x3b5d355f6d617261\n"
".quad 0x203220636f6c2e0a,0x646c0a3120313932,0x326625203233662e,0x336c72255b202c31\n"
".quad 0x702e646c0a3b5d39,0x3436752e6d617261,0x202c38346c722520,0x75654e35315a5f5b\n"
".quad 0x747361456e6e616d,0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53,0x2e0a3b5d385f6d61\n"
".quad 0x3932203220636f6c,0x662e74730a312031,0x346c72255b203233,0x31326625202c5d38\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c35356c72,0x616d75654e35315a\n"
".quad 0x525f747361456e6e,0x5f535f5366526765,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x6f6c2e0a3b5d395f\n"
".quad 0x2032393220322063,0x3233662e646c0a31,0x5b202c3232662520,0x0a3b5d35356c7225\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3838,0x6e6e616d75654e35\n"
".quad 0x6765525f74736145,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f,0x636f6c2e0a3b5d34\n"
".quad 0x3120323932203220,0x203233662e74730a,0x2c5d38386c72255b,0x6c0a3b3232662520\n"
".quad 0x2e6d617261702e64,0x366c722520343675,0x35315a5f5b202c32,0x456e6e616d75654e\n"
".quad 0x526765525f747361,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x30315f6d61726170,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203339322032,0x25203233662e646c,0x72255b202c333266,0x646c0a3b5d32366c\n"
".quad 0x752e6d617261702e,0x35396c7225203436,0x4e35315a5f5b202c,0x61456e6e616d7565\n"
".quad 0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x5d35315f6d617261,0x3220636f6c2e0a3b\n"
".quad 0x730a312033393220,0x255b203233662e74,0x25202c5d35396c72,0x6172620a3b333266\n"
".quad 0x34424220696e752e,0x42420a0a3b36315f,0x646c0a3a33315f34,0x752e6d617261702e\n"
".quad 0x35326c7225203436,0x4e35315a5f5b202c,0x61456e6e616d7565,0x66526765525f7473\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x3b5d325f6d617261,0x203220636f6c2e0a,0x646c0a3120383732\n"
".quad 0x326625203233662e,0x326c72255b202c34,0x702e646c0a3b5d35,0x3436752e6d617261\n"
".quad 0x202c33336c722520,0x75654e35315a5f5b,0x747361456e6e616d,0x5f5366526765525f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x7261705f69695f53,0x2e0a3b5d345f6d61,0x3732203220636f6c,0x662e74730a312038\n"
".quad 0x336c72255b203233,0x34326625202c5d33,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3530316c72,0x6d75654e35315a5f,0x5f747361456e6e61,0x535f536652676552\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x617261705f69695f,0x2e0a3b5d36315f6d,0x3732203220636f6c,0x662e646c0a312039\n"
".quad 0x2c35326625203233,0x3530316c72255b20,0x61702e646c0a3b5d,0x203436752e6d6172\n"
".quad 0x202c3531316c7225,0x75654e35315a5f5b,0x747361456e6e616d,0x5f5366526765525f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x7261705f69695f53,0x0a3b5d38315f6d61,0x32203220636f6c2e,0x2e74730a31203937\n"
".quad 0x6c72255b20323366,0x6625202c5d353131,0x636f6c2e0a3b3532,0x3120303832203220\n"
".quad 0x203233662e646c0a,0x255b202c36326625,0x0a3b5d3530316c72,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3237,0x6e6e616d75654e35,0x6765525f74736145\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x315f6d617261705f,0x636f6c2e0a3b5d31,0x3120303832203220\n"
".quad 0x203233662e74730a,0x2c5d32376c72255b,0x2e0a3b3632662520,0x3832203220636f6c\n"
".quad 0x662e646c0a312031,0x2c37326625203233,0x3530316c72255b20,0x61702e646c0a3b5d\n"
".quad 0x203436752e6d6172,0x5b202c32386c7225,0x6d75654e35315a5f,0x5f747361456e6e61\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x2e0a3b5d33315f6d,0x3832203220636f6c\n"
".quad 0x662e74730a312031,0x386c72255b203233,0x37326625202c5d32,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c30346c72,0x616d75654e35315a,0x525f747361456e6e\n"
".quad 0x5f535f5366526765,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x6d617261705f6969,0x6f6c2e0a3b5d355f,0x2032383220322063\n"
".quad 0x3233662e646c0a31,0x5b202c3832662520,0x0a3b5d30346c7225,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3934,0x6e6e616d75654e35,0x6765525f74736145\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x385f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203238322032\n"
".quad 0x5b203233662e7473,0x202c5d39346c7225,0x646c0a3b38326625,0x752e6d617261702e\n"
".quad 0x39386c7225203436,0x4e35315a5f5b202c,0x61456e6e616d7565,0x66526765525f7473\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x5d34315f6d617261,0x3220636f6c2e0a3b,0x6c0a312033383220\n"
".quad 0x6625203233662e64,0x6c72255b202c3932,0x2e646c0a3b5d3938,0x36752e6d61726170\n"
".quad 0x2c36356c72252034,0x654e35315a5f5b20,0x7361456e6e616d75,0x5366526765525f74\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x61705f69695f535f,0x0a3b5d395f6d6172,0x32203220636f6c2e,0x2e74730a31203338\n"
".quad 0x6c72255b20323366,0x326625202c5d3635,0x61702e646c0a3b39,0x203436752e6d6172\n"
".quad 0x5b202c36396c7225,0x6d75654e35315a5f,0x5f747361456e6e61,0x535f536652676552\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x617261705f69695f,0x2e0a3b5d35315f6d,0x3832203220636f6c,0x662e646c0a312034\n"
".quad 0x2c30336625203233,0x5d36396c72255b20,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c33366c72,0x616d75654e35315a,0x525f747361456e6e,0x5f535f5366526765\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x6c2e0a3b5d30315f,0x343832203220636f,0x33662e74730a3120\n"
".quad 0x33366c72255b2032,0x3b30336625202c5d,0x696e752e6172620a,0x3b36315f34424220\n"
".quad 0x34315f3442420a0a,0x7261702e646c0a3a,0x25203436752e6d61,0x5f5b202c34336c72\n"
".quad 0x616d75654e35315a,0x525f747361456e6e,0x5f535f5366526765,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969\n"
".quad 0x6f6c2e0a3b5d345f,0x2039363220322063,0x3233662e646c0a31,0x5b202c3133662520\n"
".quad 0x0a3b5d34336c7225,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3632\n"
".quad 0x6e6e616d75654e35,0x6765525f74736145,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53,0x325f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203936322032,0x5b203233662e7473,0x202c5d36326c7225\n"
".quad 0x646c0a3b31336625,0x752e6d617261702e,0x33386c7225203436,0x4e35315a5f5b202c\n"
".quad 0x61456e6e616d7565,0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53,0x5d33315f6d617261\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312030373220,0x6625203233662e64,0x6c72255b202c3233\n"
".quad 0x2e646c0a3b5d3338,0x36752e6d61726170,0x2c33376c72252034,0x654e35315a5f5b20\n"
".quad 0x7361456e6e616d75,0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f,0x3b5d31315f6d6172\n"
".quad 0x203220636f6c2e0a,0x74730a3120303732,0x72255b203233662e,0x6625202c5d33376c\n"
".quad 0x636f6c2e0a3b3233,0x3120313732203220,0x203233662e646c0a,0x255b202c33336625\n"
".quad 0x6c0a3b5d33386c72,0x2e6d617261702e64,0x316c722520343675,0x315a5f5b202c3631\n"
".quad 0x6e6e616d75654e35,0x6765525f74736145,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f\n"
".quad 0x636f6c2e0a3b5d38,0x3120313732203220,0x203233662e74730a,0x5d3631316c72255b\n"
".quad 0x0a3b33336625202c,0x32203220636f6c2e,0x2e646c0a31203237,0x3433662520323366\n"
".quad 0x33386c72255b202c,0x61702e646c0a3b5d,0x203436752e6d6172,0x202c3630316c7225\n"
".quad 0x75654e35315a5f5b,0x747361456e6e616d,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x0a3b5d36315f6d61,0x32203220636f6c2e,0x2e74730a31203237,0x6c72255b20323366\n"
".quad 0x6625202c5d363031,0x702e646c0a3b3433,0x3436752e6d617261,0x202c30356c722520\n"
".quad 0x75654e35315a5f5b,0x747361456e6e616d,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x2e0a3b5d385f6d61,0x3732203220636f6c,0x662e646c0a312033,0x2c35336625203233\n"
".quad 0x5d30356c72255b20,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c31346c72\n"
".quad 0x616d75654e35315a,0x525f747361456e6e,0x5f535f5366526765,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969\n"
".quad 0x6f6c2e0a3b5d355f,0x2033373220322063,0x3233662e74730a31,0x5d31346c72255b20\n"
".quad 0x0a3b35336625202c,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3735\n"
".quad 0x6e6e616d75654e35,0x6765525f74736145,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53,0x395f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203437322032,0x25203233662e646c,0x72255b202c363366\n"
".quad 0x646c0a3b5d37356c,0x752e6d617261702e,0x30396c7225203436,0x4e35315a5f5b202c\n"
".quad 0x61456e6e616d7565,0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53,0x5d34315f6d617261\n"
".quad 0x3220636f6c2e0a3b,0x730a312034373220,0x255b203233662e74,0x25202c5d30396c72\n"
".quad 0x2e646c0a3b363366,0x36752e6d61726170,0x2c34366c72252034,0x654e35315a5f5b20\n"
".quad 0x7361456e6e616d75,0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f,0x3b5d30315f6d6172\n"
".quad 0x203220636f6c2e0a,0x646c0a3120353732,0x336625203233662e,0x366c72255b202c37\n"
".quad 0x702e646c0a3b5d34,0x3436752e6d617261,0x202c37396c722520,0x75654e35315a5f5b\n"
".quad 0x747361456e6e616d,0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53,0x0a3b5d35315f6d61\n"
".quad 0x32203220636f6c2e,0x2e74730a31203537,0x6c72255b20323366,0x336625202c5d3739\n"
".quad 0x752e6172620a3b37,0x315f34424220696e,0x5f3442420a0a3b36,0x702e646c0a3a3531\n"
".quad 0x3436752e6d617261,0x202c35336c722520,0x75654e35315a5f5b,0x747361456e6e616d\n"
".quad 0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x7261705f69695f53,0x2e0a3b5d345f6d61,0x3632203220636f6c\n"
".quad 0x662e646c0a312030,0x2c38336625203233,0x5d35336c72255b20,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c37326c72,0x616d75654e35315a,0x525f747361456e6e\n"
".quad 0x5f535f5366526765,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x6d617261705f6969,0x6f6c2e0a3b5d325f,0x2030363220322063\n"
".quad 0x3233662e74730a31,0x5d37326c72255b20,0x0a3b38336625202c,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c373131,0x6e616d75654e3531,0x65525f747361456e\n"
".quad 0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x5f6d617261705f69,0x6f6c2e0a3b5d3831,0x2031363220322063\n"
".quad 0x3233662e646c0a31,0x5b202c3933662520,0x3b5d3731316c7225,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c34386c,0x6e616d75654e3531,0x65525f747361456e\n"
".quad 0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x5f6d617261705f69,0x6f6c2e0a3b5d3331,0x2031363220322063\n"
".quad 0x3233662e74730a31,0x5d34386c72255b20,0x0a3b39336625202c,0x32203220636f6c2e\n"
".quad 0x2e646c0a31203236,0x3034662520323366,0x31316c72255b202c,0x702e646c0a3b5d37\n"
".quad 0x3436752e6d617261,0x202c34376c722520,0x75654e35315a5f5b,0x747361456e6e616d\n"
".quad 0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x7261705f69695f53,0x0a3b5d31315f6d61,0x32203220636f6c2e\n"
".quad 0x2e74730a31203236,0x6c72255b20323366,0x346625202c5d3437,0x20636f6c2e0a3b30\n"
".quad 0x0a31203336322032,0x25203233662e646c,0x72255b202c313466,0x6c0a3b5d3731316c\n"
".quad 0x2e6d617261702e64,0x316c722520343675,0x315a5f5b202c3730,0x6e6e616d75654e35\n"
".quad 0x6765525f74736145,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f,0x636f6c2e0a3b5d36\n"
".quad 0x3120333632203220,0x203233662e74730a,0x5d3730316c72255b,0x0a3b31346625202c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3135,0x6e6e616d75654e35\n"
".quad 0x6765525f74736145,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x385f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203436322032,0x25203233662e646c,0x72255b202c323466,0x646c0a3b5d31356c\n"
".quad 0x752e6d617261702e,0x32346c7225203436,0x4e35315a5f5b202c,0x61456e6e616d7565\n"
".quad 0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x3b5d355f6d617261,0x203220636f6c2e0a\n"
".quad 0x74730a3120343632,0x72255b203233662e,0x6625202c5d32346c,0x702e646c0a3b3234\n"
".quad 0x3436752e6d617261,0x202c31396c722520,0x75654e35315a5f5b,0x747361456e6e616d\n"
".quad 0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x7261705f69695f53,0x0a3b5d34315f6d61,0x32203220636f6c2e\n"
".quad 0x2e646c0a31203536,0x3334662520323366,0x31396c72255b202c,0x61702e646c0a3b5d\n"
".quad 0x203436752e6d6172,0x5b202c38356c7225,0x6d75654e35315a5f,0x5f747361456e6e61\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x6c2e0a3b5d395f6d,0x353632203220636f\n"
".quad 0x33662e74730a3120,0x38356c72255b2032,0x3b33346625202c5d,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c38396c,0x6e616d75654e3531,0x65525f747361456e\n"
".quad 0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x5f6d617261705f69,0x6f6c2e0a3b5d3531,0x2036363220322063\n"
".quad 0x3233662e646c0a31,0x5b202c3434662520,0x0a3b5d38396c7225,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3536,0x6e6e616d75654e35,0x6765525f74736145\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x315f6d617261705f,0x636f6c2e0a3b5d30,0x3120363632203220\n"
".quad 0x203233662e74730a,0x2c5d35366c72255b,0x0a0a3b3434662520,0x0a3a36315f344242\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3032,0x6e6e616d75654e35\n"
".quad 0x6765525f74736145,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x305f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203333332032,0x25203233662e646c,0x72255b202c353466,0x646c0a3b5d30326c\n"
".quad 0x752e6d617261702e,0x38326c7225203436,0x4e35315a5f5b202c,0x61456e6e616d7565\n"
".quad 0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x3b5d325f6d617261,0x203220636f6c2e0a\n"
".quad 0x646c0a3120333333,0x346625203233662e,0x326c72255b202c36,0x2e6464610a3b5d38\n"
".quad 0x3734662520323366,0x202c35346625202c,0x646c0a3b36346625,0x752e6d617261702e\n"
".quad 0x36336c7225203436,0x4e35315a5f5b202c,0x61456e6e616d7565,0x66526765525f7473\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x3b5d345f6d617261,0x203220636f6c2e0a,0x646c0a3120333333\n"
".quad 0x346625203233662e,0x336c72255b202c38,0x2e6464610a3b5d36,0x3934662520323366\n"
".quad 0x202c37346625202c,0x646c0a3b38346625,0x752e6d617261702e,0x39356c7225203436\n"
".quad 0x4e35315a5f5b202c,0x61456e6e616d7565,0x66526765525f7473,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x3b5d395f6d617261,0x203220636f6c2e0a,0x646c0a3120333333,0x356625203233662e\n"
".quad 0x356c72255b202c30,0x2e6464610a3b5d39,0x3135662520323366,0x202c39346625202c\n"
".quad 0x646c0a3b30356625,0x752e6d617261702e,0x35376c7225203436,0x4e35315a5f5b202c\n"
".quad 0x61456e6e616d7565,0x66526765525f7473,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53,0x5d31315f6d617261\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312033333320,0x6625203233662e64,0x6c72255b202c3235\n"
".quad 0x6464610a3b5d3537,0x356625203233662e,0x2c31356625202c33,0x6c0a3b3235662520\n"
".quad 0x2e6d617261702e64,0x386c722520343675,0x35315a5f5b202c35,0x456e6e616d75654e\n"
".quad 0x526765525f747361,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x33315f6d61726170,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203333332032,0x25203233662e646c,0x72255b202c343566,0x64610a3b5d35386c\n"
".quad 0x6625203233662e64,0x33356625202c3535,0x0a3b34356625202c,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3239,0x6e6e616d75654e35,0x6765525f74736145\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x315f6d617261705f,0x636f6c2e0a3b5d34,0x3120333333203220\n"
".quad 0x203233662e646c0a,0x255b202c36356625,0x610a3b5d32396c72,0x25203233662e6464\n"
".quad 0x356625202c373566,0x3b36356625202c35,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5f5b202c3830316c,0x616d75654e35315a,0x525f747361456e6e,0x5f535f5366526765\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x6c2e0a3b5d36315f,0x333333203220636f,0x33662e646c0a3120\n"
".quad 0x202c383566252032,0x5d3830316c72255b,0x33662e6464610a3b,0x202c393566252032\n"
".quad 0x6625202c37356625,0x702e646c0a3b3835,0x3436752e6d617261,0x2c3831316c722520\n"
".quad 0x654e35315a5f5b20,0x7361456e6e616d75,0x5366526765525f74,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f\n"
".quad 0x3b5d38315f6d6172,0x203220636f6c2e0a,0x646c0a3120333333,0x366625203233662e\n"
".quad 0x316c72255b202c30,0x6464610a3b5d3831,0x366625203233662e,0x2c39356625202c31\n"
".quad 0x6c0a3b3036662520,0x2e6d617261702e64,0x356c722520343675,0x35315a5f5b202c32\n"
".quad 0x456e6e616d75654e,0x526765525f747361,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f,0x5d385f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312033333320,0x6625203233662e64,0x6c72255b202c3236\n"
".quad 0x2e646c0a3b5d3235,0x36752e6d61726170,0x2c31326c72252034,0x654e35315a5f5b20\n"
".quad 0x7361456e6e616d75,0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x61705f69695f535f,0x0a3b5d315f6d6172\n"
".quad 0x33203220636f6c2e,0x2e646c0a31203333,0x3336662520323366,0x31326c72255b202c\n"
".quad 0x662e6464610a3b5d,0x2c34366625203233,0x25202c3336662520,0x2e646c0a3b323666\n"
".quad 0x36752e6d61726170,0x2c33346c72252034,0x654e35315a5f5b20,0x7361456e6e616d75\n"
".quad 0x5366526765525f74,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x61705f69695f535f,0x0a3b5d355f6d6172,0x33203220636f6c2e\n"
".quad 0x2e646c0a31203333,0x3536662520323366,0x33346c72255b202c,0x662e6464610a3b5d\n"
".quad 0x2c36366625203233,0x25202c3436662520,0x2e646c0a3b353666,0x36752e6d61726170\n"
".quad 0x2c36366c72252034,0x654e35315a5f5b20,0x7361456e6e616d75,0x5366526765525f74\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x61705f69695f535f,0x3b5d30315f6d6172,0x203220636f6c2e0a,0x646c0a3120333333\n"
".quad 0x366625203233662e,0x366c72255b202c37,0x2e6464610a3b5d36,0x3836662520323366\n"
".quad 0x202c36366625202c,0x646c0a3b37366625,0x752e6d617261702e,0x39396c7225203436\n"
".quad 0x4e35315a5f5b202c,0x61456e6e616d7565,0x66526765525f7473,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x5d35315f6d617261,0x3220636f6c2e0a3b,0x6c0a312033333320,0x6625203233662e64\n"
".quad 0x6c72255b202c3936,0x6464610a3b5d3939,0x376625203233662e,0x2c38366625202c30\n"
".quad 0x610a3b3936662520,0x25203233662e6464,0x376625202c313766,0x3b30376625202c30\n"
".quad 0x3233662e6464610a,0x25202c3237662520,0x376625202c313666,0x662e6464610a3b31\n"
".quad 0x2c33376625203233,0x30202c3237662520,0x3030303038464266,0x20636f6c2e0a3b30\n"
".quad 0x0a31203933332032,0x662e6e722e616d66,0x2c34376625203233,0x30202c3337662520\n"
".quad 0x4141414141454266,0x3b33366625202c42,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5a5f5b202c39326c,0x6e616d75654e3531,0x65525f747361456e,0x535f535f53665267\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d33,0x3120393333203220,0x203233662e74730a\n"
".quad 0x2c5d39326c72255b,0x2e0a3b3437662520,0x3433203220636f6c,0x2e6464610a312030\n"
".quad 0x3537662520323366,0x202c33376625202c,0x3030303030306630,0x2e766f6d0a3b3030\n"
".quad 0x3637662520323366,0x413245336630202c,0x6c2e0a3b42414141,0x303433203220636f\n"
".quad 0x33662e646c0a3120,0x202c373766252032,0x3b5d33346c72255b,0x203220636f6c2e0a\n"
".quad 0x656e0a3120323433,0x6625203233662e67,0x35376625202c3837,0x3220636f6c2e0a3b\n"
".quad 0x660a312030343320,0x33662e6e722e616d,0x202c393766252032,0x6625202c38376625\n"
".quad 0x37376625202c3637,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c35346c72\n"
".quad 0x616d75654e35315a,0x525f747361456e6e,0x5f535f5366526765,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969\n"
".quad 0x6f6c2e0a3b5d375f,0x2030343320322063,0x3233662e74730a31,0x5d35346c72255b20\n"
".quad 0x0a3b39376625202c,0x33203220636f6c2e,0x2e646c0a31203134,0x3038662520323366\n"
".quad 0x32356c72255b202c,0x20636f6c2e0a3b5d,0x0a31203334332032,0x203233662e67656e\n"
".quad 0x6625202c31386625,0x636f6c2e0a3b3337,0x3120313433203220,0x2e6e722e616d660a\n"
".quad 0x3238662520323366,0x202c31386625202c,0x6625202c36376625,0x702e646c0a3b3038\n"
".quad 0x3436752e6d617261,0x202c34346c722520,0x75654e35315a5f5b,0x747361456e6e616d\n"
".quad 0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x7261705f69695f53,0x2e0a3b5d365f6d61,0x3433203220636f6c\n"
".quad 0x662e74730a312031,0x346c72255b203233,0x32386625202c5d34,0x3220636f6c2e0a3b\n"
".quad 0x6c0a312032343320,0x6625203233662e64,0x6c72255b202c3338,0x616d660a3b5d3636\n"
".quad 0x203233662e6e722e,0x6625202c34386625,0x36376625202c3837,0x0a3b33386625202c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c393031,0x6e616d75654e3531\n"
".quad 0x65525f747361456e,0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69,0x6f6c2e0a3b5d3731\n"
".quad 0x2032343320322063,0x3233662e74730a31,0x3930316c72255b20,0x3b34386625202c5d\n"
".quad 0x203220636f6c2e0a,0x646c0a3120333433,0x386625203233662e,0x396c72255b202c35\n"
".quad 0x2e616d660a3b5d39,0x25203233662e6e72,0x386625202c363866,0x2c36376625202c31\n"
".quad 0x6c0a3b3538662520,0x2e6d617261702e64,0x376c722520343675,0x35315a5f5b202c36\n"
".quad 0x456e6e616d75654e,0x526765525f747361,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f,0x32315f6d61726170\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203334332032,0x5b203233662e7473,0x202c5d36376c7225\n"
".quad 0x6c2e0a3b36386625,0x333733203220636f,0x0a3b7465720a3220,0x697369762e0a0a7d\n"
".quad 0x6e75662e20656c62,0x694438315a5f2063,0x4e74656c68636972,0x6765525f6874726f\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x6d617261702e0a28,0x5a5f203436622e20,0x6863697269443831\n"
".quad 0x6874726f4e74656c,0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53,0x702e0a2c305f6d61\n"
".quad 0x36622e206d617261,0x694438315a5f2034,0x4e74656c68636972,0x6765525f6874726f\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x315f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20\n"
".quad 0x6863697269443831,0x6874726f4e74656c,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x702e0a2c325f6d61,0x36622e206d617261,0x694438315a5f2034,0x4e74656c68636972\n"
".quad 0x6765525f6874726f,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x335f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x6863697269443831,0x6874726f4e74656c,0x5f5366526765525f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x7261705f69695f53,0x702e0a2c345f6d61,0x36622e206d617261,0x694438315a5f2034\n"
".quad 0x4e74656c68636972,0x6765525f6874726f,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53,0x355f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436622e20,0x6863697269443831,0x6874726f4e74656c\n"
".quad 0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x7261705f69695f53,0x702e0a2c365f6d61,0x36622e206d617261\n"
".quad 0x694438315a5f2034,0x4e74656c68636972,0x6765525f6874726f,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53\n"
".quad 0x375f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20,0x6863697269443831\n"
".quad 0x6874726f4e74656c,0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53,0x702e0a2c385f6d61\n"
".quad 0x36622e206d617261,0x694438315a5f2034,0x4e74656c68636972,0x6765525f6874726f\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x395f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20\n"
".quad 0x6863697269443831,0x6874726f4e74656c,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x2e0a2c30315f6d61,0x622e206d61726170,0x4438315a5f203436,0x74656c6863697269\n"
".quad 0x65525f6874726f4e,0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69,0x7261702e0a2c3131\n"
".quad 0x203436622e206d61,0x6972694438315a5f,0x726f4e74656c6863,0x66526765525f6874\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x2c32315f6d617261,0x206d617261702e0a,0x315a5f203436622e\n"
".quad 0x6c68636972694438,0x5f6874726f4e7465,0x535f536652676552,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f\n"
".quad 0x702e0a2c33315f6d,0x36622e206d617261,0x694438315a5f2034,0x4e74656c68636972\n"
".quad 0x6765525f6874726f,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f,0x617261702e0a2c34\n"
".quad 0x5f203436622e206d,0x636972694438315a,0x74726f4e74656c68,0x5366526765525f68\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x61705f69695f535f,0x0a2c35315f6d6172,0x2e206d617261702e,0x38315a5f20343662\n"
".quad 0x656c686369726944,0x525f6874726f4e74,0x5f535f5366526765,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969\n"
".quad 0x61702e0a2c36315f,0x3436622e206d6172,0x72694438315a5f20,0x6f4e74656c686369\n"
".quad 0x526765525f687472,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x37315f6d61726170,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x6863697269443831,0x6874726f4e74656c,0x5f5366526765525f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x7261705f69695f53,0x2e0a2c38315f6d61,0x622e206d61726170,0x4438315a5f203233\n"
".quad 0x74656c6863697269,0x65525f6874726f4e,0x535f535f53665267,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69\n"
".quad 0x7261702e0a2c3931,0x203233622e206d61,0x6972694438315a5f,0x726f4e74656c6863\n"
".quad 0x66526765525f6874,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x0a30325f6d617261,0x6765722e0a7b0a29\n"
".quad 0x6625203233662e20,0x722e0a3b3e32333c,0x646572702e206765,0x0a3b3e333c702520\n"
".quad 0x33732e206765722e,0x3e33333c72252032,0x2e206765722e0a3b,0x3c6c722520343673\n"
".quad 0x6c0a0a0a3b3e3734,0x2e6d617261702e64,0x2c31722520323375,0x694438315a5f5b20\n"
".quad 0x4e74656c68636972,0x6765525f6874726f,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53,0x325f6d617261705f\n"
".quad 0x707465730a3b5d30,0x203233732e71652e,0x317225202c317025,0x7025400a3b30202c\n"
".quad 0x4242206172622031,0x646c0a0a3b335f35,0x752e6d617261702e,0x2c32337225203233\n"
".quad 0x694438315a5f5b20,0x4e74656c68636972,0x6765525f6874726f,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53\n"
".quad 0x325f6d617261705f,0x707465730a3b5d30,0x203233732e656e2e,0x337225202c327025\n"
".quad 0x400a3b3336202c32,0x2061726220327025,0x0a0a3b345f354242,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3332,0x6c68636972694438,0x5f6874726f4e7465\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x6c2e0a3b5d395f6d,0x323034203220636f\n"
".quad 0x33662e646c0a3120,0x5b202c3166252032,0x0a3b5d33326c7225,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3533,0x6c68636972694438,0x5f6874726f4e7465\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x2e0a3b5d34315f6d,0x3034203220636f6c\n"
".quad 0x662e74730a312032,0x336c72255b203233,0x3b316625202c5d35,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c35326c,0x6863697269443831,0x6874726f4e74656c\n"
".quad 0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x7261705f69695f53,0x0a3b5d30315f6d61,0x34203220636f6c2e\n"
".quad 0x2e646c0a31203330,0x2c32662520323366,0x5d35326c72255b20,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c37336c72,0x636972694438315a,0x74726f4e74656c68\n"
".quad 0x5366526765525f68,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x61705f69695f535f,0x3b5d35315f6d6172,0x203220636f6c2e0a\n"
".quad 0x74730a3120333034,0x72255b203233662e,0x6625202c5d37336c,0x61702e646c0a3b32\n"
".quad 0x203436752e6d6172,0x5b202c37326c7225,0x6972694438315a5f,0x726f4e74656c6863\n"
".quad 0x66526765525f6874,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x5d31315f6d617261,0x3220636f6c2e0a3b\n"
".quad 0x6c0a312034303420,0x6625203233662e64,0x326c72255b202c33,0x702e646c0a3b5d37\n"
".quad 0x3436752e6d617261,0x202c39336c722520,0x72694438315a5f5b,0x6f4e74656c686369\n"
".quad 0x526765525f687472,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x36315f6d61726170,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203430342032,0x5b203233662e7473,0x202c5d39336c7225,0x2e646c0a3b336625\n"
".quad 0x36752e6d61726170,0x2c30336c72252034,0x694438315a5f5b20,0x4e74656c68636972\n"
".quad 0x6765525f6874726f,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f,0x636f6c2e0a3b5d32\n"
".quad 0x3120353034203220,0x203233662e646c0a,0x72255b202c346625,0x646c0a3b5d30336c\n"
".quad 0x752e6d617261702e,0x32346c7225203436,0x4438315a5f5b202c,0x74656c6863697269\n"
".quad 0x65525f6874726f4e,0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69,0x6f6c2e0a3b5d3731\n"
".quad 0x2035303420322063,0x3233662e74730a31,0x5d32346c72255b20,0x6c0a3b346625202c\n"
".quad 0x2e6d617261702e64,0x336c722520343675,0x38315a5f5b202c32,0x656c686369726944\n"
".quad 0x525f6874726f4e74,0x5f535f5366526765,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x6c2e0a3b5d33315f\n"
".quad 0x363034203220636f,0x33662e646c0a3120,0x5b202c3566252032,0x0a3b5d32336c7225\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3434,0x6c68636972694438\n"
".quad 0x5f6874726f4e7465,0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f,0x2e0a3b5d38315f6d\n"
".quad 0x3034203220636f6c,0x662e74730a312036,0x346c72255b203233,0x3b356625202c5d34\n"
".quad 0x696e752e6172620a,0x0a3b345f35424220,0x0a3a335f3542420a,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3633,0x6c68636972694438,0x5f6874726f4e7465\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x2e0a3b5d34315f6d,0x3933203220636f6c\n"
".quad 0x662e646c0a312035,0x202c366625203233,0x3b5d36336c72255b,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c34326c,0x6863697269443831,0x6874726f4e74656c\n"
".quad 0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x7261705f69695f53,0x2e0a3b5d395f6d61,0x3933203220636f6c\n"
".quad 0x662e74730a312035,0x326c72255b203233,0x3b366625202c5d34,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c38336c,0x6863697269443831,0x6874726f4e74656c\n"
".quad 0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x7261705f69695f53,0x0a3b5d35315f6d61,0x33203220636f6c2e\n"
".quad 0x2e646c0a31203639,0x2c37662520323366,0x5d38336c72255b20,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c36326c72,0x636972694438315a,0x74726f4e74656c68\n"
".quad 0x5366526765525f68,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x61705f69695f535f,0x3b5d30315f6d6172,0x203220636f6c2e0a\n"
".quad 0x74730a3120363933,0x72255b203233662e,0x6625202c5d36326c,0x61702e646c0a3b37\n"
".quad 0x203436752e6d6172,0x5b202c30346c7225,0x6972694438315a5f,0x726f4e74656c6863\n"
".quad 0x66526765525f6874,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x5d36315f6d617261,0x3220636f6c2e0a3b\n"
".quad 0x6c0a312037393320,0x6625203233662e64,0x346c72255b202c38,0x702e646c0a3b5d30\n"
".quad 0x3436752e6d617261,0x202c38326c722520,0x72694438315a5f5b,0x6f4e74656c686369\n"
".quad 0x526765525f687472,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x31315f6d61726170,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203739332032,0x5b203233662e7473,0x202c5d38326c7225,0x2e646c0a3b386625\n"
".quad 0x36752e6d61726170,0x2c33346c72252034,0x694438315a5f5b20,0x4e74656c68636972\n"
".quad 0x6765525f6874726f,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f,0x636f6c2e0a3b5d37\n"
".quad 0x3120383933203220,0x203233662e646c0a,0x72255b202c396625,0x646c0a3b5d33346c\n"
".quad 0x752e6d617261702e,0x31336c7225203436,0x4438315a5f5b202c,0x74656c6863697269\n"
".quad 0x65525f6874726f4e,0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69,0x6f6c2e0a3b5d3231\n"
".quad 0x2038393320322063,0x3233662e74730a31,0x5d31336c72255b20,0x6c0a3b396625202c\n"
".quad 0x2e6d617261702e64,0x346c722520343675,0x38315a5f5b202c35,0x656c686369726944\n"
".quad 0x525f6874726f4e74,0x5f535f5366526765,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x6d617261705f6969,0x6c2e0a3b5d38315f\n"
".quad 0x393933203220636f,0x33662e646c0a3120,0x202c303166252032,0x3b5d35346c72255b\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c33336c,0x6863697269443831\n"
".quad 0x6874726f4e74656c,0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53,0x0a3b5d33315f6d61\n"
".quad 0x33203220636f6c2e,0x2e74730a31203939,0x6c72255b20323366,0x316625202c5d3333\n"
".quad 0x5f3542420a0a3b30,0x61702e646c0a3a34,0x203436752e6d6172,0x5b202c37316c7225\n"
".quad 0x6972694438315a5f,0x726f4e74656c6863,0x66526765525f6874,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x3b5d325f6d617261,0x203220636f6c2e0a,0x646c0a3120303234,0x316625203233662e\n"
".quad 0x316c72255b202c31,0x2e766f6d0a3b5d37,0x3231662520323366,0x303030306630202c\n"
".quad 0x6f6d0a3b30303030,0x6625203233662e76,0x45426630202c3331,0x0a3b424141414141\n"
".quad 0x34203220636f6c2e,0x616d660a31203032,0x203233662e6e722e,0x6625202c34316625\n"
".quad 0x30306630202c3331,0x202c303030303030,0x646c0a3b31316625,0x752e6d617261702e\n"
".quad 0x38316c7225203436,0x4438315a5f5b202c,0x74656c6863697269,0x65525f6874726f4e\n"
".quad 0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x5f6d617261705f69,0x636f6c2e0a3b5d34,0x3120303234203220\n"
".quad 0x203233662e74730a,0x2c5d38316c72255b,0x6d0a3b3431662520,0x25203233662e766f\n"
".quad 0x336630202c353166,0x3b41303744334144,0x203220636f6c2e0a,0x64610a3120333234\n"
".quad 0x6625203233662e64,0x35316625202c3631,0x303030306630202c,0x6f6d0a3b30303030\n"
".quad 0x6625203233662e76,0x45336630202c3731,0x0a3b424141414132,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3931,0x6c68636972694438,0x5f6874726f4e7465\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x6c2e0a3b5d355f6d,0x333234203220636f\n"
".quad 0x33662e646c0a3120,0x202c383166252032,0x3b5d39316c72255b,0x3233662e67656e0a\n"
".quad 0x25202c3931662520,0x616d660a3b363166,0x203233662e6e722e,0x6625202c30326625\n"
".quad 0x37316625202c3931,0x0a3b38316625202c,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x315a5f5b202c3132,0x6c68636972694438,0x5f6874726f4e7465,0x535f536652676552\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x617261705f69695f,0x6c2e0a3b5d375f6d,0x333234203220636f,0x33662e74730a3120\n"
".quad 0x31326c72255b2032,0x3b30326625202c5d,0x203220636f6c2e0a,0x75730a3120363234\n"
".quad 0x6625203233662e62,0x35316625202c3132,0x303030306630202c,0x646c0a3b30303030\n"
".quad 0x752e6d617261702e,0x30326c7225203436,0x4438315a5f5b202c,0x74656c6863697269\n"
".quad 0x65525f6874726f4e,0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69,0x636f6c2e0a3b5d36\n"
".quad 0x3120363234203220,0x203233662e646c0a,0x255b202c32326625,0x660a3b5d30326c72\n"
".quad 0x33662e6e722e616d,0x202c333266252032,0x6630202c31326625,0x4241414141324533\n"
".quad 0x0a3b32326625202c,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3232\n"
".quad 0x6c68636972694438,0x5f6874726f4e7465,0x535f536652676552,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f\n"
".quad 0x6c2e0a3b5d385f6d,0x363234203220636f,0x33662e74730a3120,0x32326c72255b2032\n"
".quad 0x3b33326625202c5d,0x203220636f6c2e0a,0x75730a3120393234,0x6625203233662e62\n"
".quad 0x32316625202c3432,0x303030306630202c,0x646c0a3b30303030,0x752e6d617261702e\n"
".quad 0x31346c7225203436,0x4438315a5f5b202c,0x74656c6863697269,0x65525f6874726f4e\n"
".quad 0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x5f6d617261705f69,0x6f6c2e0a3b5d3631,0x2039323420322063\n"
".quad 0x3233662e646c0a31,0x5b202c3532662520,0x0a3b5d31346c7225,0x203233662e67656e\n"
".quad 0x6625202c36326625,0x2e616d660a3b3432,0x25203233662e6e72,0x326625202c373266\n"
".quad 0x2c37316625202c36,0x6c0a3b3532662520,0x2e6d617261702e64,0x336c722520343675\n"
".quad 0x38315a5f5b202c34,0x656c686369726944,0x525f6874726f4e74,0x5f535f5366526765\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x6c2e0a3b5d33315f,0x393234203220636f,0x33662e74730a3120\n"
".quad 0x34336c72255b2032,0x3b37326625202c5d,0x203220636f6c2e0a,0x64610a3120323334\n"
".quad 0x6625203233662e64,0x32316625202c3832,0x303030306630202c,0x646c0a3b30303030\n"
".quad 0x752e6d617261702e,0x39326c7225203436,0x4438315a5f5b202c,0x74656c6863697269\n"
".quad 0x65525f6874726f4e,0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69,0x6f6c2e0a3b5d3131\n"
".quad 0x2032333420322063,0x3233662e646c0a31,0x5b202c3932662520,0x0a3b5d39326c7225\n"
".quad 0x203233662e67656e,0x6625202c30336625,0x2e616d660a3b3832,0x25203233662e6e72\n"
".quad 0x336625202c313366,0x2c37316625202c30,0x6c0a3b3932662520,0x2e6d617261702e64\n"
".quad 0x346c722520343675,0x38315a5f5b202c36,0x656c686369726944,0x525f6874726f4e74\n"
".quad 0x5f535f5366526765,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x6d617261705f6969,0x6c2e0a3b5d38315f,0x323334203220636f\n"
".quad 0x33662e74730a3120,0x36346c72255b2032,0x3b31336625202c5d,0x203220636f6c2e0a\n"
".quad 0x65720a3220323634,0x762e0a0a7d0a3b74,0x2e20656c62697369,0x315a5f20636e7566\n"
".quad 0x6c68636972694438,0x5f6874756f537465,0x535f536652676552,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x61702e0a2869695f\n"
".quad 0x3436622e206d6172,0x72694438315a5f20,0x6f5374656c686369,0x526765525f687475\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x5f69695f535f535f,0x2c305f6d61726170,0x206d617261702e0a,0x315a5f203436622e\n"
".quad 0x6c68636972694438,0x5f6874756f537465,0x535f536652676552,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f\n"
".quad 0x61702e0a2c315f6d,0x3436622e206d6172,0x72694438315a5f20,0x6f5374656c686369\n"
".quad 0x526765525f687475,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x2c325f6d61726170,0x206d617261702e0a\n"
".quad 0x315a5f203436622e,0x6c68636972694438,0x5f6874756f537465,0x535f536652676552\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x617261705f69695f,0x61702e0a2c335f6d,0x3436622e206d6172,0x72694438315a5f20\n"
".quad 0x6f5374656c686369,0x526765525f687475,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f,0x2c345f6d61726170\n"
".quad 0x206d617261702e0a,0x315a5f203436622e,0x6c68636972694438,0x5f6874756f537465\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x61702e0a2c355f6d,0x3436622e206d6172\n"
".quad 0x72694438315a5f20,0x6f5374656c686369,0x526765525f687475,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f\n"
".quad 0x2c365f6d61726170,0x206d617261702e0a,0x315a5f203436622e,0x6c68636972694438\n"
".quad 0x5f6874756f537465,0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f,0x61702e0a2c375f6d\n"
".quad 0x3436622e206d6172,0x72694438315a5f20,0x6f5374656c686369,0x526765525f687475\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x5f69695f535f535f,0x2c385f6d61726170,0x206d617261702e0a,0x315a5f203436622e\n"
".quad 0x6c68636972694438,0x5f6874756f537465,0x535f536652676552,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f\n"
".quad 0x61702e0a2c395f6d,0x3436622e206d6172,0x72694438315a5f20,0x6f5374656c686369\n"
".quad 0x526765525f687475,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x5f69695f535f535f,0x30315f6d61726170,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x6863697269443831,0x6874756f5374656c,0x5f5366526765525f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x7261705f69695f53,0x2e0a2c31315f6d61,0x622e206d61726170,0x4438315a5f203436\n"
".quad 0x74656c6863697269,0x65525f6874756f53,0x535f535f53665267,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69\n"
".quad 0x7261702e0a2c3231,0x203436622e206d61,0x6972694438315a5f,0x756f5374656c6863\n"
".quad 0x66526765525f6874,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x2c33315f6d617261,0x206d617261702e0a\n"
".quad 0x315a5f203436622e,0x6c68636972694438,0x5f6874756f537465,0x535f536652676552\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x617261705f69695f,0x702e0a2c34315f6d,0x36622e206d617261,0x694438315a5f2034\n"
".quad 0x5374656c68636972,0x6765525f6874756f,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53,0x315f6d617261705f\n"
".quad 0x617261702e0a2c35,0x5f203436622e206d,0x636972694438315a,0x74756f5374656c68\n"
".quad 0x5366526765525f68,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x61705f69695f535f,0x0a2c36315f6d6172,0x2e206d617261702e\n"
".quad 0x38315a5f20343662,0x656c686369726944,0x525f6874756f5374,0x5f535f5366526765\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x61702e0a2c37315f,0x3436622e206d6172,0x72694438315a5f20\n"
".quad 0x6f5374656c686369,0x526765525f687475,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f,0x38315f6d61726170\n"
".quad 0x6d617261702e0a2c,0x5a5f203233622e20,0x6863697269443831,0x6874756f5374656c\n"
".quad 0x5f5366526765525f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x7261705f69695f53,0x2e0a2c39315f6d61,0x622e206d61726170\n"
".quad 0x4438315a5f203233,0x74656c6863697269,0x65525f6874756f53,0x535f535f53665267\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x2e0a7b0a290a3032,0x3233662e20676572,0x3b3e30333c662520\n"
".quad 0x702e206765722e0a,0x333c702520646572,0x206765722e0a3b3e,0x3c7225203233732e\n"
".quad 0x65722e0a3b3e3333,0x25203436732e2067,0x0a3b3e37343c6c72,0x7261702e646c0a0a\n"
".quad 0x25203233752e6d61,0x315a5f5b202c3172,0x6c68636972694438,0x5f6874756f537465\n"
".quad 0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x617261705f69695f,0x730a3b5d30325f6d,0x732e71652e707465\n"
".quad 0x202c317025203233,0x0a3b30202c317225,0x6172622031702540,0x0a3b335f36424220\n"
".quad 0x617261702e646c0a,0x7225203233752e6d,0x315a5f5b202c3233,0x6c68636972694438\n"
".quad 0x5f6874756f537465,0x535f536652676552,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x617261705f69695f,0x730a3b5d30325f6d\n"
".quad 0x732e656e2e707465,0x202c327025203233,0x3336202c32337225,0x6220327025400a3b\n"
".quad 0x345f364242206172,0x61702e646c0a0a3b,0x203436752e6d6172,0x5b202c33326c7225\n"
".quad 0x6972694438315a5f,0x756f5374656c6863,0x66526765525f6874,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x3b5d395f6d617261,0x203220636f6c2e0a,0x646c0a3120303934,0x316625203233662e\n"
".quad 0x33326c72255b202c,0x61702e646c0a3b5d,0x203436752e6d6172,0x5b202c35336c7225\n"
".quad 0x6972694438315a5f,0x756f5374656c6863,0x66526765525f6874,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x5d34315f6d617261,0x3220636f6c2e0a3b,0x730a312030393420,0x255b203233662e74\n"
".quad 0x25202c5d35336c72,0x702e646c0a3b3166,0x3436752e6d617261,0x202c35326c722520\n"
".quad 0x72694438315a5f5b,0x6f5374656c686369,0x526765525f687475,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f\n"
".quad 0x30315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203139342032,0x25203233662e646c\n"
".quad 0x6c72255b202c3266,0x2e646c0a3b5d3532,0x36752e6d61726170,0x2c37336c72252034\n"
".quad 0x694438315a5f5b20,0x5374656c68636972,0x6765525f6874756f,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53\n"
".quad 0x315f6d617261705f,0x636f6c2e0a3b5d35,0x3120313934203220,0x203233662e74730a\n"
".quad 0x2c5d37336c72255b,0x646c0a3b32662520,0x752e6d617261702e,0x37326c7225203436\n"
".quad 0x4438315a5f5b202c,0x74656c6863697269,0x65525f6874756f53,0x535f535f53665267\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x6f6c2e0a3b5d3131,0x2032393420322063,0x3233662e646c0a31\n"
".quad 0x255b202c33662520,0x6c0a3b5d37326c72,0x2e6d617261702e64,0x336c722520343675\n"
".quad 0x38315a5f5b202c39,0x656c686369726944,0x525f6874756f5374,0x5f535f5366526765\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x6c2e0a3b5d36315f,0x323934203220636f,0x33662e74730a3120\n"
".quad 0x39336c72255b2032,0x0a3b336625202c5d,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x315a5f5b202c3033,0x6c68636972694438,0x5f6874756f537465,0x535f536652676552\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x617261705f69695f,0x2e0a3b5d32315f6d,0x3934203220636f6c,0x662e646c0a312033\n"
".quad 0x202c346625203233,0x3b5d30336c72255b,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5a5f5b202c32346c,0x6863697269443831,0x6874756f5374656c,0x5f5366526765525f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x7261705f69695f53,0x0a3b5d37315f6d61,0x34203220636f6c2e,0x2e74730a31203339\n"
".quad 0x6c72255b20323366,0x346625202c5d3234,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c32336c72,0x636972694438315a,0x74756f5374656c68,0x5366526765525f68\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x61705f69695f535f,0x3b5d33315f6d6172,0x203220636f6c2e0a,0x646c0a3120343934\n"
".quad 0x356625203233662e,0x32336c72255b202c,0x61702e646c0a3b5d,0x203436752e6d6172\n"
".quad 0x5b202c34346c7225,0x6972694438315a5f,0x756f5374656c6863,0x66526765525f6874\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x705f69695f535f53,0x5d38315f6d617261,0x3220636f6c2e0a3b,0x730a312034393420\n"
".quad 0x255b203233662e74,0x25202c5d34346c72,0x2e6172620a3b3566,0x5f36424220696e75\n"
".quad 0x5f3642420a0a3b34,0x61702e646c0a3a33,0x203436752e6d6172,0x5b202c36336c7225\n"
".quad 0x6972694438315a5f,0x756f5374656c6863,0x66526765525f6874,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x5d34315f6d617261,0x3220636f6c2e0a3b,0x6c0a312033383420,0x6625203233662e64\n"
".quad 0x336c72255b202c36,0x702e646c0a3b5d36,0x3436752e6d617261,0x202c34326c722520\n"
".quad 0x72694438315a5f5b,0x6f5374656c686369,0x526765525f687475,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f\n"
".quad 0x5d395f6d61726170,0x3220636f6c2e0a3b,0x730a312033383420,0x255b203233662e74\n"
".quad 0x25202c5d34326c72,0x702e646c0a3b3666,0x3436752e6d617261,0x202c38336c722520\n"
".quad 0x72694438315a5f5b,0x6f5374656c686369,0x526765525f687475,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x5f69695f535f535f\n"
".quad 0x35315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203438342032,0x25203233662e646c\n"
".quad 0x6c72255b202c3766,0x2e646c0a3b5d3833,0x36752e6d61726170,0x2c36326c72252034\n"
".quad 0x694438315a5f5b20,0x5374656c68636972,0x6765525f6874756f,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x69695f535f535f53\n"
".quad 0x315f6d617261705f,0x636f6c2e0a3b5d30,0x3120343834203220,0x203233662e74730a\n"
".quad 0x2c5d36326c72255b,0x646c0a3b37662520,0x752e6d617261702e,0x30346c7225203436\n"
".quad 0x4438315a5f5b202c,0x74656c6863697269,0x65525f6874756f53,0x535f535f53665267\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x6f6c2e0a3b5d3631,0x2035383420322063,0x3233662e646c0a31\n"
".quad 0x255b202c38662520,0x6c0a3b5d30346c72,0x2e6d617261702e64,0x326c722520343675\n"
".quad 0x38315a5f5b202c38,0x656c686369726944,0x525f6874756f5374,0x5f535f5366526765\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x6d617261705f6969,0x6c2e0a3b5d31315f,0x353834203220636f,0x33662e74730a3120\n"
".quad 0x38326c72255b2032,0x0a3b386625202c5d,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x315a5f5b202c3334,0x6c68636972694438,0x5f6874756f537465,0x535f536652676552\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x617261705f69695f,0x2e0a3b5d37315f6d,0x3834203220636f6c,0x662e646c0a312036\n"
".quad 0x202c396625203233,0x3b5d33346c72255b,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5a5f5b202c31336c,0x6863697269443831,0x6874756f5374656c,0x5f5366526765525f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x7261705f69695f53,0x0a3b5d32315f6d61,0x34203220636f6c2e,0x2e74730a31203638\n"
".quad 0x6c72255b20323366,0x396625202c5d3133,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c35346c72,0x636972694438315a,0x74756f5374656c68,0x5366526765525f68\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x61705f69695f535f,0x3b5d38315f6d6172,0x203220636f6c2e0a,0x646c0a3120373834\n"
".quad 0x316625203233662e,0x346c72255b202c30,0x702e646c0a3b5d35,0x3436752e6d617261\n"
".quad 0x202c33336c722520,0x72694438315a5f5b,0x6f5374656c686369,0x526765525f687475\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x5f69695f535f535f,0x33315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203738342032\n"
".quad 0x5b203233662e7473,0x202c5d33336c7225,0x420a0a3b30316625,0x646c0a3a345f3642\n"
".quad 0x752e6d617261702e,0x38316c7225203436,0x4438315a5f5b202c,0x74656c6863697269\n"
".quad 0x65525f6874756f53,0x535f535f53665267,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x5f6d617261705f69,0x636f6c2e0a3b5d34\n"
".quad 0x3120363035203220,0x203233662e646c0a,0x255b202c31316625,0x6d0a3b5d38316c72\n"
".quad 0x25203233662e766f,0x306630202c323166,0x3b30303030303030,0x3233662e766f6d0a\n"
".quad 0x30202c3331662520,0x4141414141453366,0x20636f6c2e0a3b42,0x0a31203630352032\n"
".quad 0x662e6e722e616d66,0x2c34316625203233,0x30202c3331662520,0x3030303030303066\n"
".quad 0x3b31316625202c30,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c37316c\n"
".quad 0x6863697269443831,0x6874756f5374656c,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x2e0a3b5d325f6d61,0x3035203220636f6c,0x662e74730a312036,0x316c72255b203233\n"
".quad 0x34316625202c5d37,0x33662e766f6d0a3b,0x202c353166252032,0x3744334144336630\n"
".quad 0x636f6c2e0a3b4130,0x3120373035203220,0x3233662e6464610a,0x25202c3631662520\n"
".quad 0x306630202c353166,0x3b30303030303030,0x3233662e766f6d0a,0x30202c3731662520\n"
".quad 0x4141414132453366,0x61702e646c0a3b42,0x203436752e6d6172,0x5b202c31326c7225\n"
".quad 0x6972694438315a5f,0x756f5374656c6863,0x66526765525f6874,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53\n"
".quad 0x3b5d375f6d617261,0x203220636f6c2e0a,0x646c0a3120373035,0x316625203233662e\n"
".quad 0x326c72255b202c38,0x2e616d660a3b5d31,0x25203233662e6e72,0x316625202c393166\n"
".quad 0x3245336630202c36,0x25202c4241414141,0x2e646c0a3b383166,0x36752e6d61726170\n"
".quad 0x2c39316c72252034,0x694438315a5f5b20,0x5374656c68636972,0x6765525f6874756f\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x69695f535f535f53,0x355f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203730352032\n"
".quad 0x5b203233662e7473,0x202c5d39316c7225,0x6c2e0a3b39316625,0x383035203220636f\n"
".quad 0x662e6275730a3120,0x2c30326625203233,0x30202c3531662520,0x3030303030303066\n"
".quad 0x61702e646c0a3b30,0x203436752e6d6172,0x5b202c32326c7225,0x6972694438315a5f\n"
".quad 0x756f5374656c6863,0x66526765525f6874,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53,0x3b5d385f6d617261\n"
".quad 0x203220636f6c2e0a,0x646c0a3120383035,0x326625203233662e,0x326c72255b202c31\n"
".quad 0x2e67656e0a3b5d32,0x3232662520323366,0x0a3b30326625202c,0x662e6e722e616d66\n"
".quad 0x2c33326625203233,0x25202c3232662520,0x326625202c373166,0x61702e646c0a3b31\n"
".quad 0x203436752e6d6172,0x5b202c30326c7225,0x6972694438315a5f,0x756f5374656c6863\n"
".quad 0x66526765525f6874,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x705f69695f535f53,0x3b5d365f6d617261,0x203220636f6c2e0a\n"
".quad 0x74730a3120383035,0x72255b203233662e,0x6625202c5d30326c,0x636f6c2e0a3b3332\n"
".quad 0x3120393035203220,0x3233662e6275730a,0x25202c3432662520,0x306630202c323166\n"
".quad 0x3b30303030303030,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c34336c\n"
".quad 0x6863697269443831,0x6874756f5374656c,0x5f5366526765525f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x7261705f69695f53\n"
".quad 0x0a3b5d33315f6d61,0x35203220636f6c2e,0x2e646c0a31203930,0x3532662520323366\n"
".quad 0x34336c72255b202c,0x722e616d660a3b5d,0x6625203233662e6e,0x34326625202c3632\n"
".quad 0x413245336630202c,0x6625202c42414141,0x702e646c0a3b3532,0x3436752e6d617261\n"
".quad 0x202c31346c722520,0x72694438315a5f5b,0x6f5374656c686369,0x526765525f687475\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x5f69695f535f535f,0x36315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203930352032\n"
".quad 0x5b203233662e7473,0x202c5d31346c7225,0x6c2e0a3b36326625,0x303135203220636f\n"
".quad 0x662e6464610a3120,0x2c37326625203233,0x30202c3231662520,0x3030303030303066\n"
".quad 0x61702e646c0a3b30,0x203436752e6d6172,0x5b202c36346c7225,0x6972694438315a5f\n"
".quad 0x756f5374656c6863,0x66526765525f6874,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x705f69695f535f53,0x5d38315f6d617261\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312030313520,0x6625203233662e64,0x6c72255b202c3832\n"
".quad 0x616d660a3b5d3634,0x203233662e6e722e,0x6625202c39326625,0x45336630202c3732\n"
".quad 0x202c424141414132,0x646c0a3b38326625,0x752e6d617261702e,0x39326c7225203436\n"
".quad 0x4438315a5f5b202c,0x74656c6863697269,0x65525f6874756f53,0x535f535f53665267\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x5f6d617261705f69,0x6f6c2e0a3b5d3131,0x2030313520322063,0x3233662e74730a31\n"
".quad 0x5d39326c72255b20,0x0a3b39326625202c,0x35203220636f6c2e,0x7465720a32203034\n"
".quad 0x69762e0a0a7d0a3b,0x662e20656c626973,0x33315a5f20636e75,0x7274656d6d797379\n"
".quad 0x536652706f745f79,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x702e0a28695f535f,0x36622e206d617261,0x737933315a5f2034\n"
".quad 0x5f797274656d6d79,0x535f536652706f74,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x6d617261705f695f,0x7261702e0a2c305f\n"
".quad 0x203436622e206d61,0x6d79737933315a5f,0x6f745f797274656d,0x535f535f53665270\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x315f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20,0x656d6d7973793331\n"
".quad 0x52706f745f797274,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x705f695f535f535f,0x0a2c325f6d617261,0x2e206d617261702e\n"
".quad 0x33315a5f20343662,0x7274656d6d797379,0x536652706f745f79,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x702e0a2c335f6d61,0x36622e206d617261,0x737933315a5f2034,0x5f797274656d6d79\n"
".quad 0x535f536652706f74,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x6d617261705f695f,0x7261702e0a2c345f,0x203436622e206d61\n"
".quad 0x6d79737933315a5f,0x6f745f797274656d,0x535f535f53665270,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x355f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436622e20,0x656d6d7973793331,0x52706f745f797274\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x705f695f535f535f,0x0a2c365f6d617261,0x2e206d617261702e,0x33315a5f20343662\n"
".quad 0x7274656d6d797379,0x536652706f745f79,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f,0x702e0a2c375f6d61\n"
".quad 0x36622e206d617261,0x737933315a5f2034,0x5f797274656d6d79,0x535f536652706f74\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x6d617261705f695f,0x7261702e0a2c385f,0x203436622e206d61,0x6d79737933315a5f\n"
".quad 0x6f745f797274656d,0x535f535f53665270,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x395f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x656d6d7973793331,0x52706f745f797274,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x705f695f535f535f\n"
".quad 0x2c30315f6d617261,0x206d617261702e0a,0x315a5f203436622e,0x74656d6d79737933\n"
".quad 0x6652706f745f7972,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x61705f695f535f53,0x0a2c31315f6d6172,0x2e206d617261702e\n"
".quad 0x33315a5f20343662,0x7274656d6d797379,0x536652706f745f79,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x2e0a2c32315f6d61,0x622e206d61726170,0x7933315a5f203436,0x797274656d6d7973\n"
".quad 0x5f536652706f745f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x702e0a2c33315f6d,0x36622e206d617261\n"
".quad 0x737933315a5f2034,0x5f797274656d6d79,0x535f536652706f74,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x6d617261705f695f\n"
".quad 0x61702e0a2c34315f,0x3436622e206d6172,0x79737933315a5f20,0x745f797274656d6d\n"
".quad 0x5f535f536652706f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x7261702e0a2c3531,0x203436622e206d61\n"
".quad 0x6d79737933315a5f,0x6f745f797274656d,0x535f535f53665270,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x315f6d617261705f\n"
".quad 0x617261702e0a2c36,0x5f203436622e206d,0x6d6d79737933315a,0x706f745f79727465\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f695f535f535f53,0x37315f6d61726170,0x6d617261702e0a2c,0x5a5f203436622e20\n"
".quad 0x656d6d7973793331,0x52706f745f797274,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x705f695f535f535f,0x2c38315f6d617261\n"
".quad 0x206d617261702e0a,0x315a5f203233622e,0x74656d6d79737933,0x6652706f745f7972\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x61705f695f535f53,0x290a39315f6d6172,0x206765722e0a7b0a,0x3c6625203233662e\n"
".quad 0x65722e0a3b3e3631,0x20646572702e2067,0x2e0a3b3e333c7025,0x3233732e20676572\n"
".quad 0x3b3e33333c722520,0x732e206765722e0a,0x343c6c7225203436,0x646c0a0a0a3b3e37\n"
".quad 0x752e6d617261702e,0x202c317225203233,0x79737933315a5f5b,0x745f797274656d6d\n"
".quad 0x5f535f536652706f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x7465730a3b5d3931,0x3233732e71652e70\n"
".quad 0x7225202c31702520,0x25400a3b30202c31,0x4220617262203170,0x6c0a0a3b335f3742\n"
".quad 0x2e6d617261702e64,0x3233722520323375,0x7933315a5f5b202c,0x797274656d6d7973\n"
".quad 0x5f536652706f745f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x730a3b5d39315f6d,0x732e656e2e707465\n"
".quad 0x202c327025203233,0x3336202c32337225,0x6220327025400a3b,0x345f374242206172\n"
".quad 0x61702e646c0a0a3b,0x203436752e6d6172,0x5b202c33326c7225,0x6d79737933315a5f\n"
".quad 0x6f745f797274656d,0x535f535f53665270,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x395f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203835352032,0x25203233662e646c,0x6c72255b202c3166,0x2e646c0a3b5d3332\n"
".quad 0x36752e6d61726170,0x2c35336c72252034,0x737933315a5f5b20,0x5f797274656d6d79\n"
".quad 0x535f536652706f74,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x6d617261705f695f,0x6c2e0a3b5d34315f,0x383535203220636f\n"
".quad 0x33662e74730a3120,0x35336c72255b2032,0x0a3b316625202c5d,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3532,0x74656d6d79737933,0x6652706f745f7972\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x61705f695f535f53,0x3b5d30315f6d6172,0x203220636f6c2e0a,0x646c0a3120393535\n"
".quad 0x326625203233662e,0x35326c72255b202c,0x61702e646c0a3b5d,0x203436752e6d6172\n"
".quad 0x5b202c37336c7225,0x6d79737933315a5f,0x6f745f797274656d,0x535f535f53665270\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x315f6d617261705f,0x636f6c2e0a3b5d35,0x3120393535203220,0x203233662e74730a\n"
".quad 0x2c5d37336c72255b,0x646c0a3b32662520,0x752e6d617261702e,0x37326c7225203436\n"
".quad 0x7933315a5f5b202c,0x797274656d6d7973,0x5f536652706f745f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x617261705f695f53\n"
".quad 0x2e0a3b5d31315f6d,0x3635203220636f6c,0x662e646c0a312030,0x202c336625203233\n"
".quad 0x3b5d37326c72255b,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c39336c\n"
".quad 0x656d6d7973793331,0x52706f745f797274,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x705f695f535f535f,0x5d36315f6d617261\n"
".quad 0x3220636f6c2e0a3b,0x730a312030363520,0x255b203233662e74,0x25202c5d39336c72\n"
".quad 0x702e646c0a3b3366,0x3436752e6d617261,0x202c30336c722520,0x79737933315a5f5b\n"
".quad 0x745f797274656d6d,0x5f535f536652706f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d617261705f69,0x6f6c2e0a3b5d3231\n"
".quad 0x2031363520322063,0x3233662e646c0a31,0x255b202c34662520,0x6c0a3b5d30336c72\n"
".quad 0x2e6d617261702e64,0x346c722520343675,0x33315a5f5b202c32,0x7274656d6d797379\n"
".quad 0x536652706f745f79,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x7261705f695f535f,0x0a3b5d37315f6d61,0x35203220636f6c2e\n"
".quad 0x2e74730a31203136,0x6c72255b20323366,0x346625202c5d3234,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c32336c72,0x6d6d79737933315a,0x706f745f79727465\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f695f535f535f53,0x33315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203236352032\n"
".quad 0x25203233662e646c,0x6c72255b202c3566,0x2e646c0a3b5d3233,0x36752e6d61726170\n"
".quad 0x2c34346c72252034,0x737933315a5f5b20,0x5f797274656d6d79,0x535f536652706f74\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x6d617261705f695f,0x6c2e0a3b5d38315f,0x323635203220636f,0x33662e74730a3120\n"
".quad 0x34346c72255b2032,0x0a3b356625202c5d,0x20696e752e617262,0x0a0a3b345f374242\n"
".quad 0x6c0a3a335f374242,0x2e6d617261702e64,0x336c722520343675,0x33315a5f5b202c36\n"
".quad 0x7274656d6d797379,0x536652706f745f79,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f,0x0a3b5d34315f6d61\n"
".quad 0x35203220636f6c2e,0x2e646c0a31203135,0x2c36662520323366,0x5d36336c72255b20\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c34326c72,0x6d6d79737933315a\n"
".quad 0x706f745f79727465,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f695f535f535f53,0x5d395f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x730a312031353520,0x255b203233662e74,0x25202c5d34326c72,0x702e646c0a3b3666\n"
".quad 0x3436752e6d617261,0x202c38336c722520,0x79737933315a5f5b,0x745f797274656d6d\n"
".quad 0x5f535f536652706f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x6f6c2e0a3b5d3531,0x2032353520322063\n"
".quad 0x3233662e646c0a31,0x255b202c37662520,0x6c0a3b5d38336c72,0x2e6d617261702e64\n"
".quad 0x326c722520343675,0x33315a5f5b202c36,0x7274656d6d797379,0x536652706f745f79\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x7261705f695f535f,0x0a3b5d30315f6d61,0x35203220636f6c2e,0x2e74730a31203235\n"
".quad 0x6c72255b20323366,0x376625202c5d3632,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c30346c72,0x6d6d79737933315a,0x706f745f79727465,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f695f535f535f53\n"
".quad 0x36315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203335352032,0x25203233662e646c\n"
".quad 0x6c72255b202c3866,0x2e646c0a3b5d3034,0x36752e6d61726170,0x2c38326c72252034\n"
".quad 0x737933315a5f5b20,0x5f797274656d6d79,0x535f536652706f74,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x6d617261705f695f\n"
".quad 0x6c2e0a3b5d31315f,0x333535203220636f,0x33662e74730a3120,0x38326c72255b2032\n"
".quad 0x0a3b386625202c5d,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3334\n"
".quad 0x74656d6d79737933,0x6652706f745f7972,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x61705f695f535f53,0x3b5d37315f6d6172\n"
".quad 0x203220636f6c2e0a,0x646c0a3120343535,0x396625203233662e,0x33346c72255b202c\n"
".quad 0x61702e646c0a3b5d,0x203436752e6d6172,0x5b202c31336c7225,0x6d79737933315a5f\n"
".quad 0x6f745f797274656d,0x535f535f53665270,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x315f6d617261705f,0x636f6c2e0a3b5d32\n"
".quad 0x3120343535203220,0x203233662e74730a,0x2c5d31336c72255b,0x646c0a3b39662520\n"
".quad 0x752e6d617261702e,0x35346c7225203436,0x7933315a5f5b202c,0x797274656d6d7973\n"
".quad 0x5f536652706f745f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x2e0a3b5d38315f6d,0x3535203220636f6c\n"
".quad 0x662e646c0a312035,0x2c30316625203233,0x5d35346c72255b20,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c33336c72,0x6d6d79737933315a,0x706f745f79727465\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f695f535f535f53,0x33315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203535352032\n"
".quad 0x5b203233662e7473,0x202c5d33336c7225,0x420a0a3b30316625,0x646c0a3a345f3742\n"
".quad 0x752e6d617261702e,0x37316c7225203436,0x7933315a5f5b202c,0x797274656d6d7973\n"
".quad 0x5f536652706f745f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x6c2e0a3b5d325f6d,0x343635203220636f\n"
".quad 0x33662e646c0a3120,0x202c313166252032,0x3b5d37316c72255b,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c38316c,0x656d6d7973793331,0x52706f745f797274\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x705f695f535f535f,0x3b5d345f6d617261,0x203220636f6c2e0a,0x74730a3120343635\n"
".quad 0x72255b203233662e,0x6625202c5d38316c,0x702e646c0a3b3131,0x3436752e6d617261\n"
".quad 0x202c30326c722520,0x79737933315a5f5b,0x745f797274656d6d,0x5f535f536652706f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d36,0x3120353635203220,0x203233662e646c0a\n"
".quad 0x255b202c32316625,0x6c0a3b5d30326c72,0x2e6d617261702e64,0x326c722520343675\n"
".quad 0x33315a5f5b202c31,0x7274656d6d797379,0x536652706f745f79,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x2e0a3b5d375f6d61,0x3635203220636f6c,0x662e74730a312035,0x326c72255b203233\n"
".quad 0x32316625202c5d31,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c39316c72\n"
".quad 0x6d6d79737933315a,0x706f745f79727465,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f695f535f535f53,0x5d355f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312036363520,0x6625203233662e64,0x6c72255b202c3331\n"
".quad 0x2e646c0a3b5d3931,0x36752e6d61726170,0x2c32326c72252034,0x737933315a5f5b20\n"
".quad 0x5f797274656d6d79,0x535f536652706f74,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x6d617261705f695f,0x6f6c2e0a3b5d385f\n"
".quad 0x2036363520322063,0x3233662e74730a31,0x5d32326c72255b20,0x0a3b33316625202c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3932,0x74656d6d79737933\n"
".quad 0x6652706f745f7972,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x61705f695f535f53,0x3b5d31315f6d6172,0x203220636f6c2e0a\n"
".quad 0x646c0a3120373635,0x316625203233662e,0x326c72255b202c34,0x702e646c0a3b5d39\n"
".quad 0x3436752e6d617261,0x202c34336c722520,0x79737933315a5f5b,0x745f797274656d6d\n"
".quad 0x5f535f536652706f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x6f6c2e0a3b5d3331,0x2037363520322063\n"
".quad 0x3233662e74730a31,0x5d34336c72255b20,0x0a3b34316625202c,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3134,0x74656d6d79737933,0x6652706f745f7972\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x61705f695f535f53,0x3b5d36315f6d6172,0x203220636f6c2e0a,0x646c0a3120383635\n"
".quad 0x316625203233662e,0x346c72255b202c35,0x702e646c0a3b5d31,0x3436752e6d617261\n"
".quad 0x202c36346c722520,0x79737933315a5f5b,0x745f797274656d6d,0x5f535f536652706f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d617261705f69,0x6f6c2e0a3b5d3831,0x2038363520322063,0x3233662e74730a31\n"
".quad 0x5d36346c72255b20,0x0a3b35316625202c,0x35203220636f6c2e,0x7465720a32203936\n"
".quad 0x69762e0a0a7d0a3b,0x662e20656c626973,0x33315a5f20636e75,0x7274656d6d797379\n"
".quad 0x536652746f625f79,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x702e0a28695f535f,0x36622e206d617261,0x737933315a5f2034\n"
".quad 0x5f797274656d6d79,0x535f536652746f62,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x6d617261705f695f,0x7261702e0a2c305f\n"
".quad 0x203436622e206d61,0x6d79737933315a5f,0x6f625f797274656d,0x535f535f53665274\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x315f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20,0x656d6d7973793331\n"
".quad 0x52746f625f797274,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x705f695f535f535f,0x0a2c325f6d617261,0x2e206d617261702e\n"
".quad 0x33315a5f20343662,0x7274656d6d797379,0x536652746f625f79,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x702e0a2c335f6d61,0x36622e206d617261,0x737933315a5f2034,0x5f797274656d6d79\n"
".quad 0x535f536652746f62,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x6d617261705f695f,0x7261702e0a2c345f,0x203436622e206d61\n"
".quad 0x6d79737933315a5f,0x6f625f797274656d,0x535f535f53665274,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x355f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436622e20,0x656d6d7973793331,0x52746f625f797274\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x705f695f535f535f,0x0a2c365f6d617261,0x2e206d617261702e,0x33315a5f20343662\n"
".quad 0x7274656d6d797379,0x536652746f625f79,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f,0x702e0a2c375f6d61\n"
".quad 0x36622e206d617261,0x737933315a5f2034,0x5f797274656d6d79,0x535f536652746f62\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x6d617261705f695f,0x7261702e0a2c385f,0x203436622e206d61,0x6d79737933315a5f\n"
".quad 0x6f625f797274656d,0x535f535f53665274,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x395f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x656d6d7973793331,0x52746f625f797274,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x705f695f535f535f\n"
".quad 0x2c30315f6d617261,0x206d617261702e0a,0x315a5f203436622e,0x74656d6d79737933\n"
".quad 0x6652746f625f7972,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x61705f695f535f53,0x0a2c31315f6d6172,0x2e206d617261702e\n"
".quad 0x33315a5f20343662,0x7274656d6d797379,0x536652746f625f79,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x2e0a2c32315f6d61,0x622e206d61726170,0x7933315a5f203436,0x797274656d6d7973\n"
".quad 0x5f536652746f625f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x702e0a2c33315f6d,0x36622e206d617261\n"
".quad 0x737933315a5f2034,0x5f797274656d6d79,0x535f536652746f62,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x6d617261705f695f\n"
".quad 0x61702e0a2c34315f,0x3436622e206d6172,0x79737933315a5f20,0x625f797274656d6d\n"
".quad 0x5f535f536652746f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x7261702e0a2c3531,0x203436622e206d61\n"
".quad 0x6d79737933315a5f,0x6f625f797274656d,0x535f535f53665274,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x315f6d617261705f\n"
".quad 0x617261702e0a2c36,0x5f203436622e206d,0x6d6d79737933315a,0x746f625f79727465\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f695f535f535f53,0x37315f6d61726170,0x6d617261702e0a2c,0x5a5f203436622e20\n"
".quad 0x656d6d7973793331,0x52746f625f797274,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x705f695f535f535f,0x2c38315f6d617261\n"
".quad 0x206d617261702e0a,0x315a5f203233622e,0x74656d6d79737933,0x6652746f625f7972\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x61705f695f535f53,0x290a39315f6d6172,0x206765722e0a7b0a,0x3c6625203233662e\n"
".quad 0x65722e0a3b3e3631,0x20646572702e2067,0x2e0a3b3e333c7025,0x3233732e20676572\n"
".quad 0x3b3e33333c722520,0x732e206765722e0a,0x343c6c7225203436,0x646c0a0a0a3b3e37\n"
".quad 0x752e6d617261702e,0x202c317225203233,0x79737933315a5f5b,0x625f797274656d6d\n"
".quad 0x5f535f536652746f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x7465730a3b5d3931,0x3233732e71652e70\n"
".quad 0x7225202c31702520,0x25400a3b30202c31,0x4220617262203170,0x6c0a0a3b335f3842\n"
".quad 0x2e6d617261702e64,0x3233722520323375,0x7933315a5f5b202c,0x797274656d6d7973\n"
".quad 0x5f536652746f625f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x730a3b5d39315f6d,0x732e656e2e707465\n"
".quad 0x202c327025203233,0x3336202c32337225,0x6220327025400a3b,0x345f384242206172\n"
".quad 0x61702e646c0a0a3b,0x203436752e6d6172,0x5b202c33326c7225,0x6d79737933315a5f\n"
".quad 0x6f625f797274656d,0x535f535f53665274,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x395f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203638352032,0x25203233662e646c,0x6c72255b202c3166,0x2e646c0a3b5d3332\n"
".quad 0x36752e6d61726170,0x2c35336c72252034,0x737933315a5f5b20,0x5f797274656d6d79\n"
".quad 0x535f536652746f62,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x6d617261705f695f,0x6c2e0a3b5d34315f,0x363835203220636f\n"
".quad 0x33662e74730a3120,0x35336c72255b2032,0x0a3b316625202c5d,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3532,0x74656d6d79737933,0x6652746f625f7972\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x61705f695f535f53,0x3b5d30315f6d6172,0x203220636f6c2e0a,0x646c0a3120373835\n"
".quad 0x326625203233662e,0x35326c72255b202c,0x61702e646c0a3b5d,0x203436752e6d6172\n"
".quad 0x5b202c37336c7225,0x6d79737933315a5f,0x6f625f797274656d,0x535f535f53665274\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x315f6d617261705f,0x636f6c2e0a3b5d35,0x3120373835203220,0x203233662e74730a\n"
".quad 0x2c5d37336c72255b,0x646c0a3b32662520,0x752e6d617261702e,0x37326c7225203436\n"
".quad 0x7933315a5f5b202c,0x797274656d6d7973,0x5f536652746f625f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x617261705f695f53\n"
".quad 0x2e0a3b5d31315f6d,0x3835203220636f6c,0x662e646c0a312038,0x202c336625203233\n"
".quad 0x3b5d37326c72255b,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c39336c\n"
".quad 0x656d6d7973793331,0x52746f625f797274,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x705f695f535f535f,0x5d36315f6d617261\n"
".quad 0x3220636f6c2e0a3b,0x730a312038383520,0x255b203233662e74,0x25202c5d39336c72\n"
".quad 0x702e646c0a3b3366,0x3436752e6d617261,0x202c30336c722520,0x79737933315a5f5b\n"
".quad 0x625f797274656d6d,0x5f535f536652746f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d617261705f69,0x6f6c2e0a3b5d3231\n"
".quad 0x2039383520322063,0x3233662e646c0a31,0x255b202c34662520,0x6c0a3b5d30336c72\n"
".quad 0x2e6d617261702e64,0x346c722520343675,0x33315a5f5b202c32,0x7274656d6d797379\n"
".quad 0x536652746f625f79,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x7261705f695f535f,0x0a3b5d37315f6d61,0x35203220636f6c2e\n"
".quad 0x2e74730a31203938,0x6c72255b20323366,0x346625202c5d3234,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c32336c72,0x6d6d79737933315a,0x746f625f79727465\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f695f535f535f53,0x33315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203039352032\n"
".quad 0x25203233662e646c,0x6c72255b202c3566,0x2e646c0a3b5d3233,0x36752e6d61726170\n"
".quad 0x2c34346c72252034,0x737933315a5f5b20,0x5f797274656d6d79,0x535f536652746f62\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x6d617261705f695f,0x6c2e0a3b5d38315f,0x303935203220636f,0x33662e74730a3120\n"
".quad 0x34346c72255b2032,0x0a3b356625202c5d,0x20696e752e617262,0x0a0a3b345f384242\n"
".quad 0x6c0a3a335f384242,0x2e6d617261702e64,0x336c722520343675,0x33315a5f5b202c36\n"
".quad 0x7274656d6d797379,0x536652746f625f79,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f,0x0a3b5d34315f6d61\n"
".quad 0x35203220636f6c2e,0x2e646c0a31203937,0x2c36662520323366,0x5d36336c72255b20\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c34326c72,0x6d6d79737933315a\n"
".quad 0x746f625f79727465,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f695f535f535f53,0x5d395f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x730a312039373520,0x255b203233662e74,0x25202c5d34326c72,0x702e646c0a3b3666\n"
".quad 0x3436752e6d617261,0x202c38336c722520,0x79737933315a5f5b,0x625f797274656d6d\n"
".quad 0x5f535f536652746f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x6f6c2e0a3b5d3531,0x2030383520322063\n"
".quad 0x3233662e646c0a31,0x255b202c37662520,0x6c0a3b5d38336c72,0x2e6d617261702e64\n"
".quad 0x326c722520343675,0x33315a5f5b202c36,0x7274656d6d797379,0x536652746f625f79\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x7261705f695f535f,0x0a3b5d30315f6d61,0x35203220636f6c2e,0x2e74730a31203038\n"
".quad 0x6c72255b20323366,0x376625202c5d3632,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c30346c72,0x6d6d79737933315a,0x746f625f79727465,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f695f535f535f53\n"
".quad 0x36315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203138352032,0x25203233662e646c\n"
".quad 0x6c72255b202c3866,0x2e646c0a3b5d3034,0x36752e6d61726170,0x2c38326c72252034\n"
".quad 0x737933315a5f5b20,0x5f797274656d6d79,0x535f536652746f62,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x6d617261705f695f\n"
".quad 0x6c2e0a3b5d31315f,0x313835203220636f,0x33662e74730a3120,0x38326c72255b2032\n"
".quad 0x0a3b386625202c5d,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3334\n"
".quad 0x74656d6d79737933,0x6652746f625f7972,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x61705f695f535f53,0x3b5d37315f6d6172\n"
".quad 0x203220636f6c2e0a,0x646c0a3120323835,0x396625203233662e,0x33346c72255b202c\n"
".quad 0x61702e646c0a3b5d,0x203436752e6d6172,0x5b202c31336c7225,0x6d79737933315a5f\n"
".quad 0x6f625f797274656d,0x535f535f53665274,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x315f6d617261705f,0x636f6c2e0a3b5d32\n"
".quad 0x3120323835203220,0x203233662e74730a,0x2c5d31336c72255b,0x646c0a3b39662520\n"
".quad 0x752e6d617261702e,0x35346c7225203436,0x7933315a5f5b202c,0x797274656d6d7973\n"
".quad 0x5f536652746f625f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x2e0a3b5d38315f6d,0x3835203220636f6c\n"
".quad 0x662e646c0a312033,0x2c30316625203233,0x5d35346c72255b20,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c33336c72,0x6d6d79737933315a,0x746f625f79727465\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f695f535f535f53,0x33315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203338352032\n"
".quad 0x5b203233662e7473,0x202c5d33336c7225,0x420a0a3b30316625,0x646c0a3a345f3842\n"
".quad 0x752e6d617261702e,0x38316c7225203436,0x7933315a5f5b202c,0x797274656d6d7973\n"
".quad 0x5f536652746f625f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x6c2e0a3b5d345f6d,0x323935203220636f\n"
".quad 0x33662e646c0a3120,0x202c313166252032,0x3b5d38316c72255b,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c37316c,0x656d6d7973793331,0x52746f625f797274\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x705f695f535f535f,0x3b5d325f6d617261,0x203220636f6c2e0a,0x74730a3120323935\n"
".quad 0x72255b203233662e,0x6625202c5d37316c,0x702e646c0a3b3131,0x3436752e6d617261\n"
".quad 0x202c31326c722520,0x79737933315a5f5b,0x625f797274656d6d,0x5f535f536652746f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d37,0x3120333935203220,0x203233662e646c0a\n"
".quad 0x255b202c32316625,0x6c0a3b5d31326c72,0x2e6d617261702e64,0x326c722520343675\n"
".quad 0x33315a5f5b202c30,0x7274656d6d797379,0x536652746f625f79,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x2e0a3b5d365f6d61,0x3935203220636f6c,0x662e74730a312033,0x326c72255b203233\n"
".quad 0x32316625202c5d30,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c32326c72\n"
".quad 0x6d6d79737933315a,0x746f625f79727465,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f695f535f535f53,0x5d385f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312034393520,0x6625203233662e64,0x6c72255b202c3331\n"
".quad 0x2e646c0a3b5d3232,0x36752e6d61726170,0x2c39316c72252034,0x737933315a5f5b20\n"
".quad 0x5f797274656d6d79,0x535f536652746f62,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x6d617261705f695f,0x6f6c2e0a3b5d355f\n"
".quad 0x2034393520322063,0x3233662e74730a31,0x5d39316c72255b20,0x0a3b33316625202c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3433,0x74656d6d79737933\n"
".quad 0x6652746f625f7972,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x61705f695f535f53,0x3b5d33315f6d6172,0x203220636f6c2e0a\n"
".quad 0x646c0a3120353935,0x316625203233662e,0x336c72255b202c34,0x702e646c0a3b5d34\n"
".quad 0x3436752e6d617261,0x202c39326c722520,0x79737933315a5f5b,0x625f797274656d6d\n"
".quad 0x5f535f536652746f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x6f6c2e0a3b5d3131,0x2035393520322063\n"
".quad 0x3233662e74730a31,0x5d39326c72255b20,0x0a3b34316625202c,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3634,0x74656d6d79737933,0x6652746f625f7972\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x61705f695f535f53,0x3b5d38315f6d6172,0x203220636f6c2e0a,0x646c0a3120363935\n"
".quad 0x316625203233662e,0x346c72255b202c35,0x702e646c0a3b5d36,0x3436752e6d617261\n"
".quad 0x202c31346c722520,0x79737933315a5f5b,0x625f797274656d6d,0x5f535f536652746f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d617261705f69,0x6f6c2e0a3b5d3631,0x2036393520322063,0x3233662e74730a31\n"
".quad 0x5d31346c72255b20,0x0a3b35316625202c,0x35203220636f6c2e,0x7465720a32203739\n"
".quad 0x69762e0a0a7d0a3b,0x662e20656c626973,0x33315a5f20636e75,0x7274656d6d79737a\n"
".quad 0x536652706f745f79,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x702e0a28695f535f,0x36622e206d617261,0x737a33315a5f2034\n"
".quad 0x5f797274656d6d79,0x535f536652706f74,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x6d617261705f695f,0x7261702e0a2c305f\n"
".quad 0x203436622e206d61,0x6d79737a33315a5f,0x6f745f797274656d,0x535f535f53665270\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x315f6d617261705f,0x6d617261702e0a2c,0x5a5f203436622e20,0x656d6d79737a3331\n"
".quad 0x52706f745f797274,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x705f695f535f535f,0x0a2c325f6d617261,0x2e206d617261702e\n"
".quad 0x33315a5f20343662,0x7274656d6d79737a,0x536652706f745f79,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x702e0a2c335f6d61,0x36622e206d617261,0x737a33315a5f2034,0x5f797274656d6d79\n"
".quad 0x535f536652706f74,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x6d617261705f695f,0x7261702e0a2c345f,0x203436622e206d61\n"
".quad 0x6d79737a33315a5f,0x6f745f797274656d,0x535f535f53665270,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x355f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203436622e20,0x656d6d79737a3331,0x52706f745f797274\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x705f695f535f535f,0x0a2c365f6d617261,0x2e206d617261702e,0x33315a5f20343662\n"
".quad 0x7274656d6d79737a,0x536652706f745f79,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f,0x702e0a2c375f6d61\n"
".quad 0x36622e206d617261,0x737a33315a5f2034,0x5f797274656d6d79,0x535f536652706f74\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x6d617261705f695f,0x7261702e0a2c385f,0x203436622e206d61,0x6d79737a33315a5f\n"
".quad 0x6f745f797274656d,0x535f535f53665270,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x395f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203436622e20,0x656d6d79737a3331,0x52706f745f797274,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x705f695f535f535f\n"
".quad 0x2c30315f6d617261,0x206d617261702e0a,0x315a5f203436622e,0x74656d6d79737a33\n"
".quad 0x6652706f745f7972,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x61705f695f535f53,0x0a2c31315f6d6172,0x2e206d617261702e\n"
".quad 0x33315a5f20343662,0x7274656d6d79737a,0x536652706f745f79,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x2e0a2c32315f6d61,0x622e206d61726170,0x7a33315a5f203436,0x797274656d6d7973\n"
".quad 0x5f536652706f745f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x702e0a2c33315f6d,0x36622e206d617261\n"
".quad 0x737a33315a5f2034,0x5f797274656d6d79,0x535f536652706f74,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x6d617261705f695f\n"
".quad 0x61702e0a2c34315f,0x3436622e206d6172,0x79737a33315a5f20,0x745f797274656d6d\n"
".quad 0x5f535f536652706f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x7261702e0a2c3531,0x203436622e206d61\n"
".quad 0x6d79737a33315a5f,0x6f745f797274656d,0x535f535f53665270,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x315f6d617261705f\n"
".quad 0x617261702e0a2c36,0x5f203436622e206d,0x6d6d79737a33315a,0x706f745f79727465\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f695f535f535f53,0x37315f6d61726170,0x6d617261702e0a2c,0x5a5f203436622e20\n"
".quad 0x656d6d79737a3331,0x52706f745f797274,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x705f695f535f535f,0x2c38315f6d617261\n"
".quad 0x206d617261702e0a,0x315a5f203233622e,0x74656d6d79737a33,0x6652706f745f7972\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x61705f695f535f53,0x290a39315f6d6172,0x206765722e0a7b0a,0x3c6625203233662e\n"
".quad 0x65722e0a3b3e3631,0x20646572702e2067,0x2e0a3b3e333c7025,0x3233732e20676572\n"
".quad 0x3b3e33333c722520,0x732e206765722e0a,0x343c6c7225203436,0x646c0a0a0a3b3e37\n"
".quad 0x752e6d617261702e,0x202c317225203233,0x79737a33315a5f5b,0x745f797274656d6d\n"
".quad 0x5f535f536652706f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x7465730a3b5d3931,0x3233732e71652e70\n"
".quad 0x7225202c31702520,0x25400a3b30202c31,0x4220617262203170,0x6c0a0a3b335f3942\n"
".quad 0x2e6d617261702e64,0x3233722520323375,0x7a33315a5f5b202c,0x797274656d6d7973\n"
".quad 0x5f536652706f745f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x730a3b5d39315f6d,0x732e656e2e707465\n"
".quad 0x202c327025203233,0x3336202c32337225,0x6220327025400a3b,0x345f394242206172\n"
".quad 0x61702e646c0a0a3b,0x203436752e6d6172,0x5b202c37316c7225,0x6d79737a33315a5f\n"
".quad 0x6f745f797274656d,0x535f535f53665270,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x325f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203431362032,0x25203233662e646c,0x6c72255b202c3166,0x2e646c0a3b5d3731\n"
".quad 0x36752e6d61726170,0x2c39316c72252034,0x737a33315a5f5b20,0x5f797274656d6d79\n"
".quad 0x535f536652706f74,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x6d617261705f695f,0x6f6c2e0a3b5d345f,0x2034313620322063\n"
".quad 0x3233662e74730a31,0x5d39316c72255b20,0x6c0a3b316625202c,0x2e6d617261702e64\n"
".quad 0x326c722520343675,0x33315a5f5b202c33,0x7274656d6d79737a,0x536652706f745f79\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x7261705f695f535f,0x2e0a3b5d365f6d61,0x3136203220636f6c,0x662e646c0a312035\n"
".quad 0x202c326625203233,0x3b5d33326c72255b,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5a5f5b202c35326c,0x656d6d79737a3331,0x52706f745f797274,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x705f695f535f535f\n"
".quad 0x3b5d375f6d617261,0x203220636f6c2e0a,0x74730a3120353136,0x72255b203233662e\n"
".quad 0x6625202c5d35326c,0x61702e646c0a3b32,0x203436752e6d6172,0x5b202c31326c7225\n"
".quad 0x6d79737a33315a5f,0x6f745f797274656d,0x535f535f53665270,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x355f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x0a31203631362032,0x25203233662e646c,0x6c72255b202c3366\n"
".quad 0x2e646c0a3b5d3132,0x36752e6d61726170,0x2c37326c72252034,0x737a33315a5f5b20\n"
".quad 0x5f797274656d6d79,0x535f536652706f74,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x6d617261705f695f,0x6f6c2e0a3b5d385f\n"
".quad 0x2036313620322063,0x3233662e74730a31,0x5d37326c72255b20,0x6c0a3b336625202c\n"
".quad 0x2e6d617261702e64,0x336c722520343675,0x33315a5f5b202c31,0x7274656d6d79737a\n"
".quad 0x536652706f745f79,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x7261705f695f535f,0x0a3b5d31315f6d61,0x36203220636f6c2e\n"
".quad 0x2e646c0a31203731,0x2c34662520323366,0x5d31336c72255b20,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c35336c72,0x6d6d79737a33315a,0x706f745f79727465\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f695f535f535f53,0x33315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203731362032\n"
".quad 0x5b203233662e7473,0x202c5d35336c7225,0x2e646c0a3b346625,0x36752e6d61726170\n"
".quad 0x2c30346c72252034,0x737a33315a5f5b20,0x5f797274656d6d79,0x535f536652706f74\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x6d617261705f695f,0x6c2e0a3b5d36315f,0x383136203220636f,0x33662e646c0a3120\n"
".quad 0x5b202c3566252032,0x0a3b5d30346c7225,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x315a5f5b202c3434,0x74656d6d79737a33,0x6652706f745f7972,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x61705f695f535f53\n"
".quad 0x3b5d38315f6d6172,0x203220636f6c2e0a,0x74730a3120383136,0x72255b203233662e\n"
".quad 0x6625202c5d34346c,0x752e6172620a3b35,0x345f39424220696e,0x335f3942420a0a3b\n"
".quad 0x7261702e646c0a3a,0x25203436752e6d61,0x5f5b202c30326c72,0x6d6d79737a33315a\n"
".quad 0x706f745f79727465,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f695f535f535f53,0x5d345f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x6c0a312037303620,0x6625203233662e64,0x326c72255b202c36,0x702e646c0a3b5d30\n"
".quad 0x3436752e6d617261,0x202c38316c722520,0x79737a33315a5f5b,0x745f797274656d6d\n"
".quad 0x5f535f536652706f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x636f6c2e0a3b5d32,0x3120373036203220\n"
".quad 0x203233662e74730a,0x2c5d38316c72255b,0x646c0a3b36662520,0x752e6d617261702e\n"
".quad 0x36326c7225203436,0x7a33315a5f5b202c,0x797274656d6d7973,0x5f536652706f745f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x617261705f695f53,0x6c2e0a3b5d375f6d,0x383036203220636f,0x33662e646c0a3120\n"
".quad 0x5b202c3766252032,0x0a3b5d36326c7225,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x315a5f5b202c3432,0x74656d6d79737a33,0x6652706f745f7972,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x61705f695f535f53\n"
".quad 0x0a3b5d365f6d6172,0x36203220636f6c2e,0x2e74730a31203830,0x6c72255b20323366\n"
".quad 0x376625202c5d3432,0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c38326c72\n"
".quad 0x6d6d79737a33315a,0x706f745f79727465,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f695f535f535f53,0x5d385f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x6c0a312039303620,0x6625203233662e64,0x326c72255b202c38\n"
".quad 0x702e646c0a3b5d38,0x3436752e6d617261,0x202c32326c722520,0x79737a33315a5f5b\n"
".quad 0x745f797274656d6d,0x5f535f536652706f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d617261705f69,0x636f6c2e0a3b5d35\n"
".quad 0x3120393036203220,0x203233662e74730a,0x2c5d32326c72255b,0x646c0a3b38662520\n"
".quad 0x752e6d617261702e,0x36336c7225203436,0x7a33315a5f5b202c,0x797274656d6d7973\n"
".quad 0x5f536652706f745f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x2e0a3b5d33315f6d,0x3136203220636f6c\n"
".quad 0x662e646c0a312030,0x202c396625203233,0x3b5d36336c72255b,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5a5f5b202c32336c,0x656d6d79737a3331,0x52706f745f797274\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x705f695f535f535f,0x5d31315f6d617261,0x3220636f6c2e0a3b,0x730a312030313620\n"
".quad 0x255b203233662e74,0x25202c5d32336c72,0x702e646c0a3b3966,0x3436752e6d617261\n"
".quad 0x202c35346c722520,0x79737a33315a5f5b,0x745f797274656d6d,0x5f535f536652706f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d617261705f69,0x6f6c2e0a3b5d3831,0x2031313620322063,0x3233662e646c0a31\n"
".quad 0x5b202c3031662520,0x0a3b5d35346c7225,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x315a5f5b202c3134,0x74656d6d79737a33,0x6652706f745f7972,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x61705f695f535f53\n"
".quad 0x3b5d36315f6d6172,0x203220636f6c2e0a,0x74730a3120313136,0x72255b203233662e\n"
".quad 0x6625202c5d31346c,0x3942420a0a3b3031,0x702e646c0a3a345f,0x3436752e6d617261\n"
".quad 0x202c39326c722520,0x79737a33315a5f5b,0x745f797274656d6d,0x5f535f536652706f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d39,0x3120303236203220,0x203233662e646c0a\n"
".quad 0x255b202c31316625,0x6c0a3b5d39326c72,0x2e6d617261702e64,0x336c722520343675\n"
".quad 0x33315a5f5b202c38,0x7274656d6d79737a,0x536652706f745f79,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x0a3b5d34315f6d61,0x36203220636f6c2e,0x2e74730a31203032,0x6c72255b20323366\n"
".quad 0x316625202c5d3833,0x61702e646c0a3b31,0x203436752e6d6172,0x5b202c30336c7225\n"
".quad 0x6d79737a33315a5f,0x6f745f797274656d,0x535f535f53665270,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x315f6d617261705f\n"
".quad 0x636f6c2e0a3b5d30,0x3120313236203220,0x203233662e646c0a,0x255b202c32316625\n"
".quad 0x6c0a3b5d30336c72,0x2e6d617261702e64,0x336c722520343675,0x33315a5f5b202c39\n"
".quad 0x7274656d6d79737a,0x536652706f745f79,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f,0x0a3b5d35315f6d61\n"
".quad 0x36203220636f6c2e,0x2e74730a31203132,0x6c72255b20323366,0x316625202c5d3933\n"
".quad 0x61702e646c0a3b32,0x203436752e6d6172,0x5b202c33336c7225,0x6d79737a33315a5f\n"
".quad 0x6f745f797274656d,0x535f535f53665270,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x315f6d617261705f,0x636f6c2e0a3b5d31\n"
".quad 0x3120323236203220,0x203233662e646c0a,0x255b202c33316625,0x6c0a3b5d33336c72\n"
".quad 0x2e6d617261702e64,0x346c722520343675,0x33315a5f5b202c32,0x7274656d6d79737a\n"
".quad 0x536652706f745f79,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x7261705f695f535f,0x0a3b5d36315f6d61,0x36203220636f6c2e\n"
".quad 0x2e74730a31203232,0x6c72255b20323366,0x316625202c5d3234,0x61702e646c0a3b33\n"
".quad 0x203436752e6d6172,0x5b202c34336c7225,0x6d79737a33315a5f,0x6f745f797274656d\n"
".quad 0x535f535f53665270,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x315f6d617261705f,0x636f6c2e0a3b5d32,0x3120333236203220\n"
".quad 0x203233662e646c0a,0x255b202c34316625,0x6c0a3b5d34336c72,0x2e6d617261702e64\n"
".quad 0x346c722520343675,0x33315a5f5b202c33,0x7274656d6d79737a,0x536652706f745f79\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x7261705f695f535f,0x0a3b5d37315f6d61,0x36203220636f6c2e,0x2e74730a31203332\n"
".quad 0x6c72255b20323366,0x316625202c5d3334,0x61702e646c0a3b34,0x203436752e6d6172\n"
".quad 0x5b202c37336c7225,0x6d79737a33315a5f,0x6f745f797274656d,0x535f535f53665270\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x315f6d617261705f,0x636f6c2e0a3b5d33,0x3120343236203220,0x203233662e646c0a\n"
".quad 0x255b202c35316625,0x6c0a3b5d37336c72,0x2e6d617261702e64,0x346c722520343675\n"
".quad 0x33315a5f5b202c36,0x7274656d6d79737a,0x536652706f745f79,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x0a3b5d38315f6d61,0x36203220636f6c2e,0x2e74730a31203432,0x6c72255b20323366\n"
".quad 0x316625202c5d3634,0x20636f6c2e0a3b35,0x0a32203532362032,0x0a0a7d0a3b746572\n"
".quad 0x656c62697369762e,0x5f20636e75662e20,0x6d6d79737a33315a,0x746f625f79727465\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x28695f535f535f53,0x206d617261702e0a,0x315a5f203436622e,0x74656d6d79737a33\n"
".quad 0x6652746f625f7972,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x61705f695f535f53,0x2e0a2c305f6d6172,0x622e206d61726170\n"
".quad 0x7a33315a5f203436,0x797274656d6d7973,0x5f536652746f625f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x617261705f695f53\n"
".quad 0x61702e0a2c315f6d,0x3436622e206d6172,0x79737a33315a5f20,0x625f797274656d6d\n"
".quad 0x5f535f536652746f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x617261702e0a2c32,0x5f203436622e206d\n"
".quad 0x6d6d79737a33315a,0x746f625f79727465,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f695f535f535f53,0x2c335f6d61726170\n"
".quad 0x206d617261702e0a,0x315a5f203436622e,0x74656d6d79737a33,0x6652746f625f7972\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x61705f695f535f53,0x2e0a2c345f6d6172,0x622e206d61726170,0x7a33315a5f203436\n"
".quad 0x797274656d6d7973,0x5f536652746f625f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x617261705f695f53,0x61702e0a2c355f6d\n"
".quad 0x3436622e206d6172,0x79737a33315a5f20,0x625f797274656d6d,0x5f535f536652746f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d617261705f69,0x617261702e0a2c36,0x5f203436622e206d,0x6d6d79737a33315a\n"
".quad 0x746f625f79727465,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f695f535f535f53,0x2c375f6d61726170,0x206d617261702e0a\n"
".quad 0x315a5f203436622e,0x74656d6d79737a33,0x6652746f625f7972,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x61705f695f535f53\n"
".quad 0x2e0a2c385f6d6172,0x622e206d61726170,0x7a33315a5f203436,0x797274656d6d7973\n"
".quad 0x5f536652746f625f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x617261705f695f53,0x61702e0a2c395f6d,0x3436622e206d6172\n"
".quad 0x79737a33315a5f20,0x625f797274656d6d,0x5f535f536652746f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d617261705f69\n"
".quad 0x7261702e0a2c3031,0x203436622e206d61,0x6d79737a33315a5f,0x6f625f797274656d\n"
".quad 0x535f535f53665274,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x315f6d617261705f,0x617261702e0a2c31,0x5f203436622e206d\n"
".quad 0x6d6d79737a33315a,0x746f625f79727465,0x5f535f535f536652,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f695f535f535f53,0x32315f6d61726170\n"
".quad 0x6d617261702e0a2c,0x5a5f203436622e20,0x656d6d79737a3331,0x52746f625f797274\n"
".quad 0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x705f695f535f535f,0x2c33315f6d617261,0x206d617261702e0a,0x315a5f203436622e\n"
".quad 0x74656d6d79737a33,0x6652746f625f7972,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x61705f695f535f53,0x0a2c34315f6d6172\n"
".quad 0x2e206d617261702e,0x33315a5f20343662,0x7274656d6d79737a,0x536652746f625f79\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x7261705f695f535f,0x2e0a2c35315f6d61,0x622e206d61726170,0x7a33315a5f203436\n"
".quad 0x797274656d6d7973,0x5f536652746f625f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x617261705f695f53,0x702e0a2c36315f6d\n"
".quad 0x36622e206d617261,0x737a33315a5f2034,0x5f797274656d6d79,0x535f536652746f62\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x6d617261705f695f,0x61702e0a2c37315f,0x3436622e206d6172,0x79737a33315a5f20\n"
".quad 0x625f797274656d6d,0x5f535f536652746f,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d617261705f69,0x7261702e0a2c3831\n"
".quad 0x203233622e206d61,0x6d79737a33315a5f,0x6f625f797274656d,0x535f535f53665274\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x315f6d617261705f,0x722e0a7b0a290a39,0x203233662e206765,0x0a3b3e36313c6625\n"
".quad 0x72702e206765722e,0x3e333c7025206465,0x2e206765722e0a3b,0x333c722520323373\n"
".quad 0x6765722e0a3b3e33,0x7225203436732e20,0x0a0a3b3e37343c6c,0x617261702e646c0a\n"
".quad 0x7225203233752e6d,0x33315a5f5b202c31,0x7274656d6d79737a,0x536652746f625f79\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x7261705f695f535f,0x0a3b5d39315f6d61,0x2e71652e70746573,0x2c31702520323373\n"
".quad 0x3b30202c31722520,0x726220317025400a,0x335f303142422061,0x61702e646c0a0a3b\n"
".quad 0x203233752e6d6172,0x5f5b202c32337225,0x6d6d79737a33315a,0x746f625f79727465\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f695f535f535f53,0x39315f6d61726170,0x2e707465730a3b5d,0x25203233732e656e\n"
".quad 0x32337225202c3270,0x25400a3b3336202c,0x4220617262203270,0x0a0a3b345f303142\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3731,0x74656d6d79737a33\n"
".quad 0x6652746f625f7972,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x61705f695f535f53,0x0a3b5d325f6d6172,0x36203220636f6c2e\n"
".quad 0x2e646c0a31203234,0x2c31662520323366,0x5d37316c72255b20,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5f5b202c39316c72,0x6d6d79737a33315a,0x746f625f79727465\n"
".quad 0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f695f535f535f53,0x5d345f6d61726170,0x3220636f6c2e0a3b,0x730a312032343620\n"
".quad 0x255b203233662e74,0x25202c5d39316c72,0x702e646c0a3b3166,0x3436752e6d617261\n"
".quad 0x202c33326c722520,0x79737a33315a5f5b,0x625f797274656d6d,0x5f535f536652746f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d36,0x3120333436203220,0x203233662e646c0a\n"
".quad 0x72255b202c326625,0x646c0a3b5d33326c,0x752e6d617261702e,0x35326c7225203436\n"
".quad 0x7a33315a5f5b202c,0x797274656d6d7973,0x5f536652746f625f,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x617261705f695f53\n"
".quad 0x6c2e0a3b5d375f6d,0x333436203220636f,0x33662e74730a3120,0x35326c72255b2032\n"
".quad 0x0a3b326625202c5d,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3132\n"
".quad 0x74656d6d79737a33,0x6652746f625f7972,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x61705f695f535f53,0x0a3b5d355f6d6172\n"
".quad 0x36203220636f6c2e,0x2e646c0a31203434,0x2c33662520323366,0x5d31326c72255b20\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5f5b202c37326c72,0x6d6d79737a33315a\n"
".quad 0x746f625f79727465,0x5f535f535f536652,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f695f535f535f53,0x5d385f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x730a312034343620,0x255b203233662e74,0x25202c5d37326c72,0x702e646c0a3b3366\n"
".quad 0x3436752e6d617261,0x202c31336c722520,0x79737a33315a5f5b,0x625f797274656d6d\n"
".quad 0x5f535f536652746f,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f69,0x6f6c2e0a3b5d3131,0x2035343620322063\n"
".quad 0x3233662e646c0a31,0x255b202c34662520,0x6c0a3b5d31336c72,0x2e6d617261702e64\n"
".quad 0x336c722520343675,0x33315a5f5b202c35,0x7274656d6d79737a,0x536652746f625f79\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x7261705f695f535f,0x0a3b5d33315f6d61,0x36203220636f6c2e,0x2e74730a31203534\n"
".quad 0x6c72255b20323366,0x346625202c5d3533,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5f5b202c30346c72,0x6d6d79737a33315a,0x746f625f79727465,0x5f535f535f536652\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f695f535f535f53\n"
".quad 0x36315f6d61726170,0x20636f6c2e0a3b5d,0x0a31203634362032,0x25203233662e646c\n"
".quad 0x6c72255b202c3566,0x2e646c0a3b5d3034,0x36752e6d61726170,0x2c34346c72252034\n"
".quad 0x737a33315a5f5b20,0x5f797274656d6d79,0x535f536652746f62,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x6d617261705f695f\n"
".quad 0x6c2e0a3b5d38315f,0x363436203220636f,0x33662e74730a3120,0x34346c72255b2032\n"
".quad 0x0a3b356625202c5d,0x20696e752e617262,0x0a3b345f30314242,0x3a335f303142420a\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c30326c,0x656d6d79737a3331\n"
".quad 0x52746f625f797274,0x535f535f535f5366,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x705f695f535f535f,0x3b5d345f6d617261,0x203220636f6c2e0a\n"
".quad 0x646c0a3120353336,0x366625203233662e,0x30326c72255b202c,0x61702e646c0a3b5d\n"
".quad 0x203436752e6d6172,0x5b202c38316c7225,0x6d79737a33315a5f,0x6f625f797274656d\n"
".quad 0x535f535f53665274,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x325f6d617261705f,0x20636f6c2e0a3b5d,0x0a31203533362032\n"
".quad 0x5b203233662e7473,0x202c5d38316c7225,0x2e646c0a3b366625,0x36752e6d61726170\n"
".quad 0x2c36326c72252034,0x737a33315a5f5b20,0x5f797274656d6d79,0x535f536652746f62\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x6d617261705f695f,0x6f6c2e0a3b5d375f,0x2036333620322063,0x3233662e646c0a31\n"
".quad 0x255b202c37662520,0x6c0a3b5d36326c72,0x2e6d617261702e64,0x326c722520343675\n"
".quad 0x33315a5f5b202c34,0x7274656d6d79737a,0x536652746f625f79,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x2e0a3b5d365f6d61,0x3336203220636f6c,0x662e74730a312036,0x326c72255b203233\n"
".quad 0x3b376625202c5d34,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c38326c\n"
".quad 0x656d6d79737a3331,0x52746f625f797274,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x705f695f535f535f,0x3b5d385f6d617261\n"
".quad 0x203220636f6c2e0a,0x646c0a3120373336,0x386625203233662e,0x38326c72255b202c\n"
".quad 0x61702e646c0a3b5d,0x203436752e6d6172,0x5b202c32326c7225,0x6d79737a33315a5f\n"
".quad 0x6f625f797274656d,0x535f535f53665274,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x355f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x0a31203733362032,0x5b203233662e7473,0x202c5d32326c7225,0x2e646c0a3b386625\n"
".quad 0x36752e6d61726170,0x2c36336c72252034,0x737a33315a5f5b20,0x5f797274656d6d79\n"
".quad 0x535f536652746f62,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x6d617261705f695f,0x6c2e0a3b5d33315f,0x383336203220636f\n"
".quad 0x33662e646c0a3120,0x5b202c3966252032,0x0a3b5d36336c7225,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x315a5f5b202c3233,0x74656d6d79737a33,0x6652746f625f7972\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x61705f695f535f53,0x3b5d31315f6d6172,0x203220636f6c2e0a,0x74730a3120383336\n"
".quad 0x72255b203233662e,0x6625202c5d32336c,0x61702e646c0a3b39,0x203436752e6d6172\n"
".quad 0x5b202c35346c7225,0x6d79737a33315a5f,0x6f625f797274656d,0x535f535f53665274\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x315f6d617261705f,0x636f6c2e0a3b5d38,0x3120393336203220,0x203233662e646c0a\n"
".quad 0x255b202c30316625,0x6c0a3b5d35346c72,0x2e6d617261702e64,0x346c722520343675\n"
".quad 0x33315a5f5b202c31,0x7274656d6d79737a,0x536652746f625f79,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x0a3b5d36315f6d61,0x36203220636f6c2e,0x2e74730a31203933,0x6c72255b20323366\n"
".quad 0x316625202c5d3134,0x303142420a0a3b30,0x702e646c0a3a345f,0x3436752e6d617261\n"
".quad 0x202c38336c722520,0x79737a33315a5f5b,0x625f797274656d6d,0x5f535f536652746f\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d617261705f69,0x6f6c2e0a3b5d3431,0x2038343620322063,0x3233662e646c0a31\n"
".quad 0x5b202c3131662520,0x0a3b5d38336c7225,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x315a5f5b202c3932,0x74656d6d79737a33,0x6652746f625f7972,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x61705f695f535f53\n"
".quad 0x0a3b5d395f6d6172,0x36203220636f6c2e,0x2e74730a31203834,0x6c72255b20323366\n"
".quad 0x316625202c5d3932,0x61702e646c0a3b31,0x203436752e6d6172,0x5b202c39336c7225\n"
".quad 0x6d79737a33315a5f,0x6f625f797274656d,0x535f535f53665274,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f,0x315f6d617261705f\n"
".quad 0x636f6c2e0a3b5d35,0x3120393436203220,0x203233662e646c0a,0x255b202c32316625\n"
".quad 0x6c0a3b5d39336c72,0x2e6d617261702e64,0x336c722520343675,0x33315a5f5b202c30\n"
".quad 0x7274656d6d79737a,0x536652746f625f79,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f,0x0a3b5d30315f6d61\n"
".quad 0x36203220636f6c2e,0x2e74730a31203934,0x6c72255b20323366,0x316625202c5d3033\n"
".quad 0x61702e646c0a3b32,0x203436752e6d6172,0x5b202c32346c7225,0x6d79737a33315a5f\n"
".quad 0x6f625f797274656d,0x535f535f53665274,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x695f535f535f535f,0x315f6d617261705f,0x636f6c2e0a3b5d36\n"
".quad 0x3120303536203220,0x203233662e646c0a,0x255b202c33316625,0x6c0a3b5d32346c72\n"
".quad 0x2e6d617261702e64,0x336c722520343675,0x33315a5f5b202c33,0x7274656d6d79737a\n"
".quad 0x536652746f625f79,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x7261705f695f535f,0x0a3b5d31315f6d61,0x36203220636f6c2e\n"
".quad 0x2e74730a31203035,0x6c72255b20323366,0x316625202c5d3333,0x61702e646c0a3b33\n"
".quad 0x203436752e6d6172,0x5b202c33346c7225,0x6d79737a33315a5f,0x6f625f797274656d\n"
".quad 0x535f535f53665274,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x695f535f535f535f,0x315f6d617261705f,0x636f6c2e0a3b5d37,0x3120313536203220\n"
".quad 0x203233662e646c0a,0x255b202c34316625,0x6c0a3b5d33346c72,0x2e6d617261702e64\n"
".quad 0x336c722520343675,0x33315a5f5b202c34,0x7274656d6d79737a,0x536652746f625f79\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x7261705f695f535f,0x0a3b5d32315f6d61,0x36203220636f6c2e,0x2e74730a31203135\n"
".quad 0x6c72255b20323366,0x316625202c5d3433,0x61702e646c0a3b34,0x203436752e6d6172\n"
".quad 0x5b202c36346c7225,0x6d79737a33315a5f,0x6f625f797274656d,0x535f535f53665274\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x695f535f535f535f\n"
".quad 0x315f6d617261705f,0x636f6c2e0a3b5d38,0x3120323536203220,0x203233662e646c0a\n"
".quad 0x255b202c35316625,0x6c0a3b5d36346c72,0x2e6d617261702e64,0x336c722520343675\n"
".quad 0x33315a5f5b202c37,0x7274656d6d79737a,0x536652746f625f79,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x7261705f695f535f\n"
".quad 0x0a3b5d33315f6d61,0x36203220636f6c2e,0x2e74730a31203235,0x6c72255b20323366\n"
".quad 0x316625202c5d3733,0x20636f6c2e0a3b35,0x0a32203335362032,0x0a0a7d0a3b746572\n"
".quad 0x656c62697369762e,0x2820636e75662e20,0x2e206d617261702e,0x636e756620323362\n"
".quad 0x306c61767465725f,0x696d64345a5f2029,0x61702e0a2869696e,0x3233622e206d6172\n"
".quad 0x6e696d64345a5f20,0x6d617261705f6969,0x7261702e0a2c305f,0x203233622e206d61\n"
".quad 0x696e696d64345a5f,0x5f6d617261705f69,0x722e0a7b0a290a31,0x646572702e206765\n"
".quad 0x0a3b3e323c702520,0x33732e206765722e,0x3b3e353c72252032,0x61702e646c0a0a0a\n"
".quad 0x203233752e6d6172,0x5a5f5b202c317225,0x5f69696e696d6434,0x5d305f6d61726170\n"
".quad 0x7261702e646c0a3b,0x25203233752e6d61,0x345a5f5b202c3272,0x705f69696e696d64\n"
".quad 0x3b5d315f6d617261,0x3233732e6464610a,0x7225202c33722520,0x2e0a3b312d202c32\n"
".quad 0x3431203220636f6c,0x7465730a31203032,0x3233732e746c2e70,0x7225202c31702520\n"
".quad 0x0a3b327225202c31,0x3233622e706c6573,0x7225202c34722520,0x202c337225202c31\n"
".quad 0x6f6c2e0a3b317025,0x3132343120322063,0x61702e74730a3120,0x093233622e6d6172\n"
".quad 0x65725f636e75665b,0x5d302b306c617674,0x720a3b347225202c,0x2e0a0a7d0a3b7465\n"
".quad 0x20656c6269736976,0x2e2820636e75662e,0x622e206d61726170,0x5f636e7566203233\n"
".quad 0x29306c6176746572,0x78616d64345a5f20,0x617261702e0a2869,0x5f203233622e206d\n"
".quad 0x5f6978616d64345a,0x0a305f6d61726170,0x6765722e0a7b0a29,0x7225203233732e20\n"
".quad 0x6c0a0a0a3b3e343c,0x2e6d617261702e64,0x2c31722520323375,0x616d64345a5f5b20\n"
".quad 0x6d617261705f6978,0x766f6d0a3b5d305f,0x327225203233752e,0x78616d0a3b30202c\n"
".quad 0x337225203233732e,0x25202c327225202c,0x636f6c2e0a3b3172,0x2036323431203220\n"
".quad 0x7261702e74730a31,0x5b093233622e6d61,0x7465725f636e7566,0x2c5d302b306c6176\n"
".quad 0x65720a3b33722520,0x652e0a0a7d0a3b74,0x385a5f207972746e,0x636e756674736574\n"
".quad 0x7261702e0a286650,0x203436752e206d61,0x6674736574385a5f,0x61705f6650636e75\n"
".quad 0x0a290a305f6d6172,0x2e206765722e0a7b,0x323c662520323366,0x6765722e0a3b3e36\n"
".quad 0x7225203233732e20,0x722e0a3b3e32323c,0x203436732e206765,0x0a3b3e353c6c7225\n"
".quad 0x7261702e646c0a0a,0x25203436752e6d61,0x5a5f5b202c316c72,0x6e75667473657438\n"
".quad 0x617261705f665063,0x76630a3b5d305f6d,0x6c672e6f742e6174,0x3436752e6c61626f\n"
".quad 0x25202c326c722520,0x6f6c2e0a3b316c72,0x3335343120322063,0x752e766f6d0a3120\n"
".quad 0x202c317225203233,0x0a3b782e64697425,0x662e6e722e747663,0x25203233752e3233\n"
".quad 0x3b317225202c3166,0x3233662e6464610a,0x6625202c32662520,0x3030346630202c31\n"
".quad 0x610a3b3030303030,0x25203233662e6464,0x2c326625202c3366,0x3030303043663020\n"
".quad 0x6f6c2e0a3b303030,0x3335343120322063,0x662e6464610a3120,0x202c346625203233\n"
".quad 0x346630202c336625,0x3b30303030303030,0x3233662e6464610a,0x6625202c35662520\n"
".quad 0x3030436630202c34,0x2e0a3b3030303030,0x3431203220636f6c,0x6464610a31203335\n"
".quad 0x366625203233662e,0x30202c356625202c,0x3030303030303466,0x662e6464610a3b30\n"
".quad 0x202c376625203233,0x436630202c366625,0x3b30303030303030,0x203220636f6c2e0a\n"
".quad 0x610a312033353431,0x25203233662e6464,0x2c376625202c3866,0x3030303034663020\n"
".quad 0x6464610a3b303030,0x396625203233662e,0x30202c386625202c,0x3030303030304366\n"
".quad 0x20636f6c2e0a3b30,0x3120333534312032,0x3233662e6464610a,0x25202c3031662520\n"
".quad 0x30346630202c3966,0x0a3b303030303030,0x203233662e646461,0x6625202c31316625\n"
".quad 0x30436630202c3031,0x0a3b303030303030,0x31203220636f6c2e,0x64610a3120333534\n"
".quad 0x6625203233662e64,0x31316625202c3231,0x303030346630202c,0x64610a3b30303030\n"
".quad 0x6625203233662e64,0x32316625202c3331,0x303030436630202c,0x6c2e0a3b30303030\n"
".quad 0x353431203220636f,0x2e6464610a312033,0x3431662520323366,0x202c33316625202c\n"
".quad 0x3030303030346630,0x2e6464610a3b3030,0x3531662520323366,0x202c34316625202c\n"
".quad 0x3030303030436630,0x636f6c2e0a3b3030,0x2033353431203220,0x33662e6464610a31\n"
".quad 0x202c363166252032,0x6630202c35316625,0x3030303030303034,0x33662e6464610a3b\n"
".quad 0x202c373166252032,0x6630202c36316625,0x3030303030303043,0x3220636f6c2e0a3b\n"
".quad 0x0a31203335343120,0x203233662e646461,0x6625202c38316625,0x30346630202c3731\n"
".quad 0x0a3b303030303030,0x203233662e646461,0x6625202c39316625,0x30436630202c3831\n"
".quad 0x0a3b303030303030,0x31203220636f6c2e,0x64610a3120333534,0x6625203233662e64\n"
".quad 0x39316625202c3032,0x303030346630202c,0x64610a3b30303030,0x6625203233662e64\n"
".quad 0x30326625202c3132,0x303030436630202c,0x6c2e0a3b30303030,0x353431203220636f\n"
".quad 0x2e6464610a312033,0x3232662520323366,0x202c31326625202c,0x3030303030346630\n"
".quad 0x2e6464610a3b3030,0x3332662520323366,0x202c32326625202c,0x3030303030436630\n"
".quad 0x636f6c2e0a3b3030,0x2033353431203220,0x33662e6464610a31,0x202c343266252032\n"
".quad 0x6630202c33326625,0x3030303030303034,0x33662e6464610a3b,0x202c353266252032\n"
".quad 0x6630202c34326625,0x3030303030303043,0x3220636f6c2e0a3b,0x0a31203435343120\n"
".quad 0x656469772e6c756d,0x6c7225203233752e,0x202c317225202c33,0x732e6464610a3b34\n"
".quad 0x2c346c7225203436,0x25202c326c722520,0x2e74730a3b336c72,0x662e6c61626f6c67\n"
".quad 0x346c72255b203233,0x3b35326625202c5d,0x3233752e766f6d0a,0x3031202c33722520\n"
".quad 0x3432383134373337,0x3220636f6c2e0a3b,0x0a31203535343120,0x61626f6c672e7473\n"
".quad 0x255b203233752e6c,0x202c5d342b346c72,0x6f6c2e0a3b337225,0x3635343120322063\n"
".quad 0x6c672e74730a3120,0x3233752e6c61626f,0x382b346c72255b20,0x0a3b337225202c5d\n"
".quad 0x31203220636f6c2e,0x74730a3120373534,0x2e6c61626f6c672e,0x6c72255b20323375\n"
".quad 0x25202c5d32312b34,0x636f6c2e0a3b3372,0x2038353431203220,0x6f6c672e74730a31\n"
".quad 0x203233752e6c6162,0x36312b346c72255b,0x0a3b337225202c5d,0x31203220636f6c2e\n"
".quad 0x74730a3120393534,0x2e6c61626f6c672e,0x6c72255b20323375,0x25202c5d30322b34\n"
".quad 0x636f6c2e0a3b3372,0x2030363431203220,0x6f6c672e74730a31,0x203233752e6c6162\n"
".quad 0x34322b346c72255b,0x0a3b337225202c5d,0x31203220636f6c2e,0x74730a3120313634\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323375,0x25202c5d38322b34,0x636f6c2e0a3b3372\n"
".quad 0x2032363431203220,0x6f6c672e74730a31,0x203233752e6c6162,0x32332b346c72255b\n"
".quad 0x0a3b337225202c5d,0x31203220636f6c2e,0x74730a3120333634,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323375,0x25202c5d36332b34,0x636f6c2e0a3b3372,0x2034363431203220\n"
".quad 0x6f6c672e74730a31,0x203233752e6c6162,0x30342b346c72255b,0x0a3b337225202c5d\n"
".quad 0x31203220636f6c2e,0x74730a3120353634,0x2e6c61626f6c672e,0x6c72255b20323375\n"
".quad 0x25202c5d34342b34,0x636f6c2e0a3b3372,0x2036363431203220,0x6f6c672e74730a31\n"
".quad 0x203233752e6c6162,0x38342b346c72255b,0x0a3b337225202c5d,0x31203220636f6c2e\n"
".quad 0x74730a3120373634,0x2e6c61626f6c672e,0x6c72255b20323375,0x25202c5d32352b34\n"
".quad 0x636f6c2e0a3b3372,0x2038363431203220,0x6f6c672e74730a31,0x203233752e6c6162\n"
".quad 0x36352b346c72255b,0x0a3b337225202c5d,0x31203220636f6c2e,0x74730a3120393634\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323375,0x25202c5d30362b34,0x636f6c2e0a3b3372\n"
".quad 0x2030373431203220,0x6f6c672e74730a31,0x203233752e6c6162,0x34362b346c72255b\n"
".quad 0x0a3b337225202c5d,0x31203220636f6c2e,0x74730a3120313734,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323375,0x25202c5d38362b34,0x636f6c2e0a3b3372,0x2032373431203220\n"
".quad 0x6f6c672e74730a31,0x203233752e6c6162,0x32372b346c72255b,0x0a3b337225202c5d\n"
".quad 0x31203220636f6c2e,0x65720a3220343734,0x652e0a0a7d0a3b74,0x315a5f207972746e\n"
".quad 0x5f656c706d697331,0x5f53665079706f63,0x617261702e0a286d,0x5f203436752e206d\n"
".quad 0x6c706d697331315a,0x665079706f635f65,0x617261705f6d5f53,0x61702e0a2c305f6d\n"
".quad 0x3436752e206d6172,0x6d697331315a5f20,0x79706f635f656c70,0x61705f6d5f536650\n"
".quad 0x2e0a2c315f6d6172,0x752e206d61726170,0x7331315a5f203436,0x6f635f656c706d69\n"
".quad 0x5f6d5f5366507970,0x0a325f6d61726170,0x6765722e0a7b0a29,0x6625203233662e20\n"
".quad 0x65722e0a3b3e323c,0x20646572702e2067,0x2e0a3b3e323c7025,0x3233732e20676572\n"
".quad 0x3b3e37313c722520,0x732e206765722e0a,0x323c6c7225203436,0x646c0a0a0a3b3e35\n"
".quad 0x752e6d617261702e,0x2c376c7225203436,0x697331315a5f5b20,0x706f635f656c706d\n"
".quad 0x705f6d5f53665079,0x3b5d305f6d617261,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x315a5f5b202c386c,0x5f656c706d697331,0x5f53665079706f63,0x5f6d617261705f6d\n"
".quad 0x702e646c0a3b5d31,0x3436752e6d617261,0x5b202c396c722520,0x706d697331315a5f\n"
".quad 0x5079706f635f656c,0x7261705f6d5f5366,0x630a3b5d325f6d61,0x672e6f742e617476\n"
".quad 0x36752e6c61626f6c,0x202c316c72252034,0x76630a3b386c7225,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x25202c326c722520,0x6f6c2e0a3b376c72,0x3837343120322063\n"
".quad 0x752e766f6d0a3120,0x202c327225203233,0x3b782e6469746e25,0x3233752e766f6d0a\n"
".quad 0x6325202c33722520,0x0a3b782e64696174,0x203233752e766f6d,0x697425202c347225\n"
".quad 0x64616d0a3b782e64,0x203233732e6f6c2e,0x327225202c357225,0x25202c337225202c\n"
".quad 0x636f6c2e0a3b3472,0x2039373431203220,0x33752e766f6d0a31,0x25202c3672252032\n"
".quad 0x0a3b792e6469746e,0x203233752e766f6d,0x746325202c377225,0x6d0a3b792e646961\n"
".quad 0x25203233752e766f,0x64697425202c3872,0x2e64616d0a3b792e,0x25203233732e6f6c\n"
".quad 0x2c367225202c3972,0x7225202c37722520,0x20636f6c2e0a3b38,0x3120303834312032\n"
".quad 0x3233752e766f6d0a,0x25202c3031722520,0x0a3b7a2e6469746e,0x203233752e766f6d\n"
".quad 0x6325202c31317225,0x0a3b7a2e64696174,0x203233752e766f6d,0x7425202c32317225\n"
".quad 0x616d0a3b7a2e6469,0x3233732e6f6c2e64,0x25202c3331722520,0x317225202c303172\n"
".quad 0x3b32317225202c31,0x3436752e7476630a,0x6c7225203233752e,0x3b357225202c3031\n"
".quad 0x203220636f6c2e0a,0x630a312031383431,0x732e3436732e7476,0x31316c7225203233\n"
".quad 0x730a3b397225202c,0x25203233622e6c68,0x317225202c343172,0x6c2e0a3b36202c33\n"
".quad 0x383431203220636f,0x2e7476630a312031,0x203233732e343673,0x25202c32316c7225\n"
".quad 0x6464610a3b343172,0x6c7225203436732e,0x316c7225202c3331,0x31316c7225202c32\n"
".quad 0x6f6c2e6c756d0a3b,0x6c7225203436732e,0x33316c7225202c33,0x0a3b396c7225202c\n"
".quad 0x31203220636f6c2e,0x616d0a3120313834,0x3436732e6f6c2e64,0x25202c346c722520\n"
".quad 0x7225202c33316c72,0x316c7225202c396c,0x20636f6c2e0a3b30,0x3120323834312032\n"
".quad 0x3233732e6464610a,0x7225202c31722520,0x6c2e0a3b31202c35,0x323431203220636f\n"
".quad 0x707465730a312030,0x203233732e746c2e,0x317225202c317025,0x25400a3b3436202c\n"
".quad 0x4220617262203170,0x0a0a3b325f343142,0x203436752e766f6d,0x36202c34326c7225\n"
".quad 0x752e6172620a3b33,0x5f3431424220696e,0x343142420a0a3b33,0x2e7476630a3a325f\n"
".quad 0x203233732e343673,0x25202c34326c7225,0x3142420a0a3b3172,0x6f6c2e0a3a335f34\n"
".quad 0x3238343120322063,0x732e6464610a3120,0x35316c7225203436,0x202c336c7225202c\n"
".quad 0x730a3b34326c7225,0x25203436622e6c68,0x7225202c36316c72,0x3b3233202c35316c\n"
".quad 0x3436732e7268730a,0x202c37316c722520,0x33202c36316c7225,0x20636f6c2e0a3b32\n"
".quad 0x3120343834312032,0x3436622e6c68730a,0x202c38316c722520,0x32202c37316c7225\n"
".quad 0x36732e6464610a3b,0x2c39316c72252034,0x25202c326c722520,0x68730a3b38316c72\n"
".quad 0x7225203436622e6c,0x6c7225202c30326c,0x730a3b3233202c34,0x25203436732e7268\n"
".quad 0x7225202c31326c72,0x3b3233202c30326c,0x203220636f6c2e0a,0x730a312034383431\n"
".quad 0x25203436622e6c68,0x7225202c32326c72,0x0a3b32202c31326c,0x203436732e646461\n"
".quad 0x25202c33326c7225,0x6c7225202c316c72,0x672e646c0a3b3232,0x33662e6c61626f6c\n"
".quad 0x5b202c3166252032,0x0a3b5d39316c7225,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x25202c5d33326c72,0x636f6c2e0a3b3166,0x2035383431203220,0x7d0a3b7465720a32\n"
".quad 0x7972746e652e0a0a,0x6d697331315a5f20,0x747865745f656c70,0x2e0a286d5f536650\n"
".quad 0x752e206d61726170,0x7331315a5f203436,0x65745f656c706d69,0x5f6d5f5366507478\n"
".quad 0x2c305f6d61726170,0x206d617261702e0a,0x315a5f203436752e,0x5f656c706d697331\n"
".quad 0x5f53665074786574,0x5f6d617261705f6d,0x617261702e0a2c31,0x5f203436752e206d\n"
".quad 0x6c706d697331315a,0x6650747865745f65,0x617261705f6d5f53,0x0a7b0a290a325f6d\n"
".quad 0x33662e206765722e,0x3b3e373c66252032,0x732e206765722e0a,0x37313c7225203233\n"
".quad 0x206765722e0a3b3e,0x6c7225203436732e,0x0a0a0a3b3e33313c,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x31315a5f5b202c31,0x745f656c706d6973,0x6d5f536650747865\n"
".quad 0x315f6d617261705f,0x61702e646c0a3b5d,0x203436752e6d6172,0x5f5b202c326c7225\n"
".quad 0x6c706d697331315a,0x6650747865745f65,0x617261705f6d5f53,0x76630a3b5d325f6d\n"
".quad 0x6c672e6f742e6174,0x3436752e6c61626f,0x25202c336c722520,0x6f6c2e0a3b316c72\n"
".quad 0x3938343120322063,0x752e766f6d0a3120,0x202c317225203233,0x3b782e6469746e25\n"
".quad 0x3233752e766f6d0a,0x6325202c32722520,0x0a3b782e64696174,0x203233752e766f6d\n"
".quad 0x697425202c337225,0x64616d0a3b782e64,0x203233732e6f6c2e,0x317225202c347225\n"
".quad 0x25202c327225202c,0x636f6c2e0a3b3372,0x2030393431203220,0x33752e766f6d0a31\n"
".quad 0x25202c3572252032,0x0a3b792e6469746e,0x203233752e766f6d,0x746325202c367225\n"
".quad 0x6d0a3b792e646961,0x25203233752e766f,0x64697425202c3772,0x2e64616d0a3b792e\n"
".quad 0x25203233732e6f6c,0x2c357225202c3872,0x7225202c36722520,0x20636f6c2e0a3b37\n"
".quad 0x3120313934312032,0x3233752e766f6d0a,0x6e25202c39722520,0x6d0a3b7a2e646974\n"
".quad 0x25203233752e766f,0x746325202c303172,0x6d0a3b7a2e646961,0x25203233752e766f\n"
".quad 0x697425202c313172,0x64616d0a3b7a2e64,0x203233732e6f6c2e,0x7225202c32317225\n"
".quad 0x2c30317225202c39,0x730a3b3131722520,0x25203233622e6c68,0x317225202c333172\n"
".quad 0x6c2e0a3b36202c32,0x393431203220636f,0x2e7476630a312032,0x203233752e343675\n"
".quad 0x7225202c346c7225,0x752e7476630a3b38,0x25203233752e3436,0x317225202c356c72\n"
".quad 0x732e6464610a3b33,0x2c366c7225203436,0x25202c356c722520,0x7476630a3b346c72\n"
".quad 0x3233752e3436752e,0x25202c376c722520,0x636f6c2e0a3b3472,0x2032393431203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x2c366c7225202c38,0x25202c326c722520\n"
".quad 0x6f6c2e0a3b376c72,0x3339343120322063,0x732e6464610a3120,0x2c34317225203233\n"
".quad 0x3b31202c34722520,0x2e6e722e7476630a,0x203233732e323366,0x317225202c356625\n"
".quad 0x722e7476630a3b34,0x33732e3233662e6e,0x25202c3666252032,0x2e766f6d0a3b3872\n"
".quad 0x3531722520323375,0x74090a0a3b30202c,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x25202c3166257b20,0x2c336625202c3266,0x5b202c7d34662520,0x665f666552786574\n"
".quad 0x3566257b202c4130,0x3b5d7d366625202c,0x622e6c6873090a0a,0x2c396c7225203436\n"
".quad 0x33202c386c722520,0x732e7268730a3b32,0x30316c7225203436,0x202c396c7225202c\n"
".quad 0x636f6c2e0a3b3233,0x2033393431203220,0x36622e6c68730a31,0x2c31316c72252034\n"
".quad 0x202c30316c722520,0x732e6464610a3b32,0x32316c7225203436,0x202c336c7225202c\n"
".quad 0x730a3b31316c7225,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d32316c\n"
".quad 0x20636f6c2e0a3b31,0x3220343934312032,0x0a7d0a3b7465720a,0x207972746e652e0a\n"
".quad 0x7274784534315a5f,0x436d6f7246746361,0x0a28666d6650645f,0x2e206d617261702e\n"
".quad 0x34315a5f20343675,0x4674636172747845,0x6650645f436d6f72,0x6d617261705f666d\n"
".quad 0x7261702e0a2c305f,0x203436752e206d61,0x7274784534315a5f,0x436d6f7246746361\n"
".quad 0x705f666d6650645f,0x0a2c315f6d617261,0x2e206d617261702e,0x34315a5f20323366\n"
".quad 0x4674636172747845,0x6650645f436d6f72,0x6d617261705f666d,0x2e0a7b0a290a325f\n"
".quad 0x3233662e20676572,0x3e3934343c662520,0x2e206765722e0a3b,0x3c70252064657270\n"
".quad 0x65722e0a3b3e3132,0x25203233732e2067,0x2e0a3b3e38333c72,0x3436732e20676572\n"
".quad 0x3232313c6c722520,0x2e646c0a0a0a3b3e,0x36752e6d61726170,0x202c336c72252034\n"
".quad 0x74784534315a5f5b,0x6d6f724674636172,0x5f666d6650645f43,0x5d305f6d61726170\n"
".quad 0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e,0x3b336c7225202c32\n"
".quad 0x203220636f6c2e0a,0x6d0a312039393431,0x25203233752e766f,0x69746e25202c3472\n"
".quad 0x766f6d0a3b782e64,0x357225203233752e,0x646961746325202c,0x2e766f6d0a3b782e\n"
".quad 0x2c36722520323375,0x3b782e6469742520,0x2e6f6c2e64616d0a,0x2c31722520323373\n"
".quad 0x7225202c34722520,0x0a3b367225202c35,0x31203220636f6c2e,0x6f6d0a3120303035\n"
".quad 0x7225203233752e76,0x6469746e25202c37,0x2e766f6d0a3b792e,0x2c38722520323375\n"
".quad 0x2e64696174632520,0x752e766f6d0a3b79,0x202c397225203233,0x0a3b792e64697425\n"
".quad 0x732e6f6c2e64616d,0x202c327225203233,0x387225202c377225,0x2e0a3b397225202c\n"
".quad 0x3531203220636f6c,0x766f6d0a31203130,0x317225203233752e,0x6469746e25202c30\n"
".quad 0x2e766f6d0a3b7a2e,0x3131722520323375,0x646961746325202c,0x2e766f6d0a3b7a2e\n"
".quad 0x3231722520323375,0x7a2e64697425202c,0x6f6c2e64616d0a3b,0x337225203233732e\n"
".quad 0x202c30317225202c,0x7225202c31317225,0x636f6c2e0a3b3231,0x2039303531203220\n"
".quad 0x6e722e7476630a31,0x3233732e3233662e,0x7225202c32662520,0x2e707465730a3b31\n"
".quad 0x25203233662e7467,0x2c326625202c3170,0x3036383134663020,0x7465730a3b303030\n"
".quad 0x3233662e746c2e70,0x6625202c32702520,0x3332346630202c32,0x610a3b3030303042\n"
".quad 0x20646572702e646e,0x317025202c337025,0x2e0a3b327025202c,0x3531203220636f6c\n"
".quad 0x2521400a31203930,0x4220617262203370,0x0a0a3b345f363142,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x3b327225202c3366,0x74672e707465730a,0x347025203233662e\n"
".quad 0x30202c336625202c,0x3030303638313466,0x2e707465730a3b30,0x25203233662e746c\n"
".quad 0x2c336625202c3570,0x3042333234663020,0x646e610a3b303030,0x702520646572702e\n"
".quad 0x202c347025202c36,0x6f6c2e0a3b357025,0x3930353120322063,0x36702521400a3120\n"
".quad 0x3142422061726220,0x76630a0a3b345f36,0x3233662e6e722e74,0x346625203233732e\n"
".quad 0x730a3b337225202c,0x662e74672e707465,0x202c377025203233,0x346630202c346625\n"
".quad 0x3b30303030363831,0x746c2e707465730a,0x387025203233662e,0x30202c346625202c\n"
".quad 0x3030304233323466,0x702e646e610a3b30,0x2c39702520646572,0x7025202c37702520\n"
".quad 0x20636f6c2e0a3b38,0x3120393035312032,0x622039702521400a,0x5f36314242206172\n"
".quad 0x707465730a0a3b34,0x203233732e71652e,0x7225202c30317025,0x730a3b3731202c31\n"
".quad 0x732e71652e707465,0x2c31317025203233,0x3634202c31722520,0x6572702e726f0a3b\n"
".quad 0x202c323170252064,0x7025202c30317025,0x636f6c2e0a3b3131,0x2039303531203220\n"
".quad 0x652e707465730a31,0x7025203233732e71,0x2c327225202c3331,0x2e726f0a3b373120\n"
".quad 0x3170252064657270,0x2c32317025202c34,0x2e0a3b3331702520,0x3531203220636f6c\n"
".quad 0x7465730a31203930,0x3233732e71652e70,0x25202c3531702520,0x0a3b3634202c3272\n"
".quad 0x20646572702e726f,0x7025202c36317025,0x35317025202c3431,0x3220636f6c2e0a3b\n"
".quad 0x0a31203930353120,0x2e71652e70746573,0x3731702520323373,0x31202c337225202c\n"
".quad 0x72702e726f0a3b37,0x2c38317025206465,0x25202c3631702520,0x6f6c2e0a3b373170\n"
".quad 0x3930353120322063,0x2e707465730a3120,0x25203233732e7165,0x337225202c393170\n"
".quad 0x726f0a3b3634202c,0x702520646572702e,0x38317025202c3032,0x0a3b39317025202c\n"
".quad 0x31203220636f6c2e,0x25400a3120393035,0x2061726220303270,0x0a3b355f36314242\n"
".quad 0x3a345f363142420a,0x203220636f6c2e0a,0x720a322038323731,0x3142420a0a3b7465\n"
".quad 0x6464610a3a355f36,0x326625203233662e,0x2c326625202c3333,0x3043373143663020\n"
".quad 0x6f6c2e0a3b303030,0x3431353120322063,0x662e6464610a3120,0x3433326625203233\n"
".quad 0x2c3333326625202c,0x0a3b333332662520,0x203233662e646461,0x25202c3133326625\n"
".quad 0x6630202c34333266,0x3030303030304633,0x33662e6464610a3b,0x2c35333266252032\n"
".quad 0x6630202c33662520,0x3030303043373143,0x3220636f6c2e0a3b,0x0a31203531353120\n"
".quad 0x203233662e646461,0x25202c3633326625,0x6625202c35333266,0x6464610a3b353332\n"
".quad 0x326625203233662e,0x33326625202c3733,0x3046336630202c36,0x610a3b3030303030\n"
".quad 0x25203233662e6464,0x6625202c38333266,0x3731436630202c34,0x2e0a3b3030303043\n"
".quad 0x3531203220636f6c,0x6464610a31203631,0x326625203233662e,0x33326625202c3933\n"
".quad 0x3833326625202c38,0x3320636f6c2e0a3b,0x0a35203334333120,0x2e697a722e747663\n"
".quad 0x203233662e323373,0x6625202c33317225,0x6f6c2e0a3b393332,0x3831353120322063\n"
".quad 0x732e6464610a3120,0x2c34317225203233,0x31202c3331722520,0x3220636f6c2e0a3b\n"
".quad 0x0a31203931353120,0x662e6e722e747663,0x25203233732e3233,0x7225202c30343266\n"
".quad 0x2e6275730a3b3431,0x3432662520323366,0x3034326625202c31,0x3b3933326625202c\n"
".quad 0x3233622e6c68730a,0x25202c3531722520,0x0a3b36202c333172,0x31203220636f6c2e\n"
".quad 0x76630a3120393135,0x3233662e6e722e74,0x326625203233732e,0x35317225202c3234\n"
".quad 0x33662e6464610a3b,0x2c36323266252032,0x202c373332662520,0x6d0a3b3234326625\n"
".quad 0x25203233752e766f,0x0a3b30202c363172,0x64322e786574090a,0x2e3233662e34762e\n"
".quad 0x3566257b20323366,0x25202c366625202c,0x7d386625202c3766,0x65527865745b202c\n"
".quad 0x7b202c4330665f66,0x25202c3133326625,0x0a3b5d7d36323266,0x3220636f6c2e090a\n"
".quad 0x0a31203931353120,0x662e6e722e747663,0x25203233732e3233,0x7225202c33343266\n"
".quad 0x2e6275730a3b3331,0x3432662520323366,0x3933326625202c34,0x3b3334326625202c\n"
".quad 0x3233622e6c68730a,0x25202c3731722520,0x0a3b36202c343172,0x31203220636f6c2e\n"
".quad 0x76630a3120393135,0x3233662e6e722e74,0x326625203233732e,0x37317225202c3534\n"
".quad 0x33662e6464610a3b,0x2c32333266252032,0x202c373332662520,0x0a0a3b3534326625\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x313166257b203233,0x202c32316625202c\n"
".quad 0x6625202c33316625,0x65745b202c7d3431,0x4330665f66655278,0x31333266257b202c\n"
".quad 0x7d3233326625202c,0x6c756d090a0a3b5d,0x326625203233662e,0x34326625202c3634\n"
".quad 0x3b31316625202c34,0x2e6e722e616d660a,0x3432662520323366,0x3134326625202c37\n"
".quad 0x25202c356625202c,0x090a0a3b36343266,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x2c373166257b2032,0x25202c3831662520,0x326625202c393166,0x7865745b202c7d30\n"
".quad 0x2c4332665f666552,0x2c31333266257b20,0x5d7d363232662520,0x6574090a090a0a3b\n"
".quad 0x2e34762e64322e78,0x203233662e323366,0x25202c333266257b,0x326625202c343266\n"
".quad 0x7d36326625202c35,0x65527865745b202c,0x7b202c4332665f66,0x25202c3133326625\n"
".quad 0x0a3b5d7d32333266,0x3220636f6c2e090a,0x0a31203032353120,0x203233662e6c756d\n"
".quad 0x25202c3834326625,0x6625202c34343266,0x2e616d660a3b3332,0x25203233662e6e72\n"
".quad 0x6625202c39343266,0x316625202c313432,0x3834326625202c37,0x2e786574090a0a3b\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x336625202c393266,0x2c31336625202c30\n"
".quad 0x202c7d3233662520,0x5f6665527865745b,0x66257b202c433466,0x326625202c313332\n"
".quad 0x090a0a3b5d7d3632,0x64322e786574090a,0x2e3233662e34762e,0x3366257b20323366\n"
".quad 0x2c36336625202c35,0x25202c3733662520,0x745b202c7d383366,0x34665f6665527865\n"
".quad 0x333266257b202c43,0x3233326625202c31,0x6c2e090a0a3b5d7d,0x323531203220636f\n"
".quad 0x2e6c756d0a312031,0x3532662520323366,0x3434326625202c30,0x0a3b35336625202c\n"
".quad 0x662e6e722e616d66,0x3135326625203233,0x2c3134326625202c,0x25202c3932662520\n"
".quad 0x090a0a3b30353266,0x762e64322e786574,0x33662e3233662e34,0x2c313466257b2032\n"
".quad 0x25202c3234662520,0x346625202c333466,0x7865745b202c7d34,0x2c4339665f666552\n"
".quad 0x2c31333266257b20,0x5d7d363232662520,0x6574090a090a0a3b,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x25202c373466257b,0x346625202c383466,0x7d30356625202c39\n"
".quad 0x65527865745b202c,0x7b202c4339665f66,0x25202c3133326625,0x0a3b5d7d32333266\n"
".quad 0x3220636f6c2e090a,0x0a31203232353120,0x203233662e6c756d,0x25202c3235326625\n"
".quad 0x6625202c34343266,0x2e616d660a3b3734,0x25203233662e6e72,0x6625202c33353266\n"
".quad 0x346625202c313432,0x3235326625202c31,0x2e786574090a0a3b,0x33662e34762e6432\n"
".quad 0x257b203233662e32,0x356625202c333566,0x2c35356625202c34,0x202c7d3635662520\n"
".quad 0x5f6665527865745b,0x257b202c43313166,0x6625202c31333266,0x0a0a3b5d7d363232\n"
".quad 0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e,0x30366625202c3935\n"
".quad 0x202c31366625202c,0x5b202c7d32366625,0x665f666552786574,0x66257b202c433131\n"
".quad 0x326625202c313332,0x090a0a3b5d7d3233,0x31203220636f6c2e,0x756d0a3120333235\n"
".quad 0x6625203233662e6c,0x326625202c343532,0x39356625202c3434,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x34326625202c3535,0x2c33356625202c31,0x0a3b343532662520\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3666257b20323366,0x2c36366625202c35\n"
".quad 0x25202c3736662520,0x745b202c7d383666,0x31665f6665527865,0x3266257b202c4333\n"
".quad 0x32326625202c3133,0x0a090a0a3b5d7d36,0x2e64322e78657409,0x662e3233662e3476\n"
".quad 0x313766257b203233,0x202c32376625202c,0x6625202c33376625,0x65745b202c7d3437\n"
".quad 0x3331665f66655278,0x333266257b202c43,0x3233326625202c31,0x6c2e090a0a3b5d7d\n"
".quad 0x323531203220636f,0x2e6c756d0a312034,0x3532662520323366,0x3434326625202c36\n"
".quad 0x0a3b31376625202c,0x662e6e722e616d66,0x3735326625203233,0x2c3134326625202c\n"
".quad 0x25202c3536662520,0x090a0a3b36353266,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x2c373766257b2032,0x25202c3837662520,0x386625202c393766,0x7865745b202c7d30\n"
".quad 0x433431665f666552,0x31333266257b202c,0x7d3632326625202c,0x74090a090a0a3b5d\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x202c333866257b20,0x6625202c34386625\n"
".quad 0x36386625202c3538,0x527865745b202c7d,0x2c433431665f6665,0x2c31333266257b20\n"
".quad 0x5d7d323332662520,0x636f6c2e090a0a3b,0x2035323531203220,0x33662e6c756d0a31\n"
".quad 0x2c38353266252032,0x202c343432662520,0x6d660a3b33386625,0x3233662e6e722e61\n"
".quad 0x202c393532662520,0x25202c3134326625,0x326625202c373766,0x6574090a0a3b3835\n"
".quad 0x2e34762e64322e78,0x203233662e323366,0x25202c393866257b,0x396625202c303966\n"
".quad 0x7d32396625202c31,0x65527865745b202c,0x202c433631665f66,0x202c31333266257b\n"
".quad 0x3b5d7d3632326625,0x786574090a090a0a,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x6625202c35396625,0x37396625202c3639,0x2c7d38396625202c,0x6665527865745b20\n"
".quad 0x7b202c433631665f,0x25202c3133326625,0x0a3b5d7d32333266,0x3220636f6c2e090a\n"
".quad 0x0a31203632353120,0x203233662e6c756d,0x25202c3036326625,0x6625202c34343266\n"
".quad 0x2e616d660a3b3539,0x25203233662e6e72,0x6625202c31363266,0x386625202c313432\n"
".quad 0x3036326625202c39,0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x6625202c31303166,0x316625202c323031,0x30316625202c3330,0x7865745b202c7d34\n"
".quad 0x433831665f666552,0x31333266257b202c,0x7d3632326625202c,0x74090a090a0a3b5d\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x2c37303166257b20,0x202c383031662520\n"
".quad 0x25202c3930316625,0x5b202c7d30313166,0x665f666552786574,0x66257b202c433831\n"
".quad 0x326625202c313332,0x090a0a3b5d7d3233,0x31203220636f6c2e,0x756d0a3120373235\n"
".quad 0x6625203233662e6c,0x326625202c323632,0x30316625202c3434,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x326625202c333632,0x30316625202c3134,0x3236326625202c31\n"
".quad 0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32,0x6625202c33313166\n"
".quad 0x316625202c343131,0x31316625202c3531,0x7865745b202c7d36,0x2c4331665f666552\n"
".quad 0x2c31333266257b20,0x5d7d363232662520,0x6574090a090a0a3b,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x202c39313166257b,0x25202c3032316625,0x6625202c31323166\n"
".quad 0x745b202c7d323231,0x31665f6665527865,0x333266257b202c43,0x3233326625202c31\n"
".quad 0x6c2e090a0a3b5d7d,0x323531203220636f,0x2e6c756d0a312038,0x3632662520323366\n"
".quad 0x3434326625202c34,0x3b3931316625202c,0x2e6e722e616d660a,0x3632662520323366\n"
".quad 0x3134326625202c35,0x2c3331316625202c,0x0a3b343632662520,0x64322e786574090a\n"
".quad 0x2e3233662e34762e,0x3166257b20323366,0x32316625202c3532,0x3732316625202c36\n"
".quad 0x7d3832316625202c,0x65527865745b202c,0x7b202c4333665f66,0x25202c3133326625\n"
".quad 0x0a3b5d7d36323266,0x2e786574090a090a,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x6625202c31333166,0x316625202c323331,0x33316625202c3333,0x7865745b202c7d34\n"
".quad 0x2c4333665f666552,0x2c31333266257b20,0x5d7d323332662520,0x636f6c2e090a0a3b\n"
".quad 0x2039323531203220,0x33662e6c756d0a31,0x2c36363266252032,0x202c343432662520\n"
".quad 0x660a3b3133316625,0x33662e6e722e616d,0x2c37363266252032,0x202c313432662520\n"
".quad 0x25202c3532316625,0x090a0a3b36363266,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x37333166257b2032,0x2c3833316625202c,0x202c393331662520,0x202c7d3034316625\n"
".quad 0x5f6665527865745b,0x66257b202c433566,0x326625202c313332,0x090a0a3b5d7d3632\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3166257b20323366,0x34316625202c3334\n"
".quad 0x3534316625202c34,0x7d3634316625202c,0x65527865745b202c,0x7b202c4335665f66\n"
".quad 0x25202c3133326625,0x0a3b5d7d32333266,0x3220636f6c2e090a,0x0a31203033353120\n"
".quad 0x203233662e6c756d,0x25202c3836326625,0x6625202c34343266,0x616d660a3b333431\n"
".quad 0x203233662e6e722e,0x25202c3936326625,0x6625202c31343266,0x326625202c373331\n"
".quad 0x6574090a0a3b3836,0x2e34762e64322e78,0x203233662e323366,0x202c39343166257b\n"
".quad 0x25202c3035316625,0x6625202c31353166,0x745b202c7d323531,0x36665f6665527865\n"
".quad 0x333266257b202c43,0x3632326625202c31,0x090a090a0a3b5d7d,0x762e64322e786574\n"
".quad 0x33662e3233662e34,0x35353166257b2032,0x2c3635316625202c,0x202c373531662520\n"
".quad 0x202c7d3835316625,0x5f6665527865745b,0x66257b202c433666,0x326625202c313332\n"
".quad 0x090a0a3b5d7d3233,0x31203220636f6c2e,0x756d0a3120313335,0x6625203233662e6c\n"
".quad 0x326625202c303732,0x35316625202c3434,0x722e616d660a3b35,0x6625203233662e6e\n"
".quad 0x326625202c313732,0x34316625202c3134,0x3037326625202c39,0x2e786574090a0a3b\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x6625202c31363166,0x316625202c323631\n"
".quad 0x36316625202c3336,0x7865745b202c7d34,0x2c4337665f666552,0x2c31333266257b20\n"
".quad 0x5d7d363232662520,0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366\n"
".quad 0x202c37363166257b,0x25202c3836316625,0x6625202c39363166,0x745b202c7d303731\n"
".quad 0x37665f6665527865,0x333266257b202c43,0x3233326625202c31,0x6c2e090a0a3b5d7d\n"
".quad 0x333531203220636f,0x2e6c756d0a312032,0x3732662520323366,0x3434326625202c32\n"
".quad 0x3b3736316625202c,0x2e6e722e616d660a,0x3732662520323366,0x3134326625202c33\n"
".quad 0x2c3136316625202c,0x0a3b323732662520,0x64322e786574090a,0x2e3233662e34762e\n"
".quad 0x3166257b20323366,0x37316625202c3337,0x3537316625202c34,0x7d3637316625202c\n"
".quad 0x65527865745b202c,0x7b202c4338665f66,0x25202c3133326625,0x0a3b5d7d36323266\n"
".quad 0x2e786574090a090a,0x33662e34762e6432,0x257b203233662e32,0x6625202c39373166\n"
".quad 0x316625202c303831,0x38316625202c3138,0x7865745b202c7d32,0x2c4338665f666552\n"
".quad 0x2c31333266257b20,0x5d7d323332662520,0x636f6c2e090a0a3b,0x2033333531203220\n"
".quad 0x33662e6c756d0a31,0x2c34373266252032,0x202c343432662520,0x660a3b3937316625\n"
".quad 0x33662e6e722e616d,0x2c35373266252032,0x202c313432662520,0x25202c3337316625\n"
".quad 0x090a0a3b34373266,0x762e64322e786574,0x33662e3233662e34,0x35383166257b2032\n"
".quad 0x2c3638316625202c,0x202c373831662520,0x202c7d3838316625,0x5f6665527865745b\n"
".quad 0x257b202c43353166,0x6625202c31333266,0x0a0a3b5d7d363232,0x322e786574090a09\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x316625202c313931,0x39316625202c3239\n"
".quad 0x3439316625202c33,0x527865745b202c7d,0x2c433531665f6665,0x2c31333266257b20\n"
".quad 0x5d7d323332662520,0x636f6c2e090a0a3b,0x2034333531203220,0x33662e6c756d0a31\n"
".quad 0x2c36373266252032,0x202c343432662520,0x660a3b3139316625,0x33662e6e722e616d\n"
".quad 0x2c37373266252032,0x202c313432662520,0x25202c3538316625,0x090a0a3b36373266\n"
".quad 0x762e64322e786574,0x33662e3233662e34,0x37393166257b2032,0x2c3839316625202c\n"
".quad 0x202c393931662520,0x202c7d3030326625,0x5f6665527865745b,0x257b202c43373166\n"
".quad 0x6625202c31333266,0x0a0a3b5d7d363232,0x322e786574090a09,0x3233662e34762e64\n"
".quad 0x66257b203233662e,0x326625202c333032,0x30326625202c3430,0x3630326625202c35\n"
".quad 0x527865745b202c7d,0x2c433731665f6665,0x2c31333266257b20,0x5d7d323332662520\n"
".quad 0x636f6c2e090a0a3b,0x2035333531203220,0x33662e6c756d0a31,0x2c38373266252032\n"
".quad 0x202c343432662520,0x660a3b3330326625,0x33662e6e722e616d,0x2c39373266252032\n"
".quad 0x202c313432662520,0x25202c3739316625,0x090a0a3b38373266,0x762e64322e786574\n"
".quad 0x33662e3233662e34,0x39303266257b2032,0x2c3031326625202c,0x202c313132662520\n"
".quad 0x202c7d3231326625,0x5f6665527865745b,0x257b202c43303166,0x6625202c31333266\n"
".quad 0x0a0a3b5d7d363232,0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e\n"
".quad 0x326625202c353132,0x31326625202c3631,0x3831326625202c37,0x527865745b202c7d\n"
".quad 0x2c433031665f6665,0x2c31333266257b20,0x5d7d323332662520,0x636f6c2e090a0a3b\n"
".quad 0x2036333531203220,0x33662e6c756d0a31,0x2c30383266252032,0x202c343432662520\n"
".quad 0x660a3b3531326625,0x33662e6e722e616d,0x2c31383266252032,0x202c313432662520\n"
".quad 0x25202c3930326625,0x090a0a3b30383266,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x31323266257b2032,0x2c3232326625202c,0x202c333232662520,0x202c7d3432326625\n"
".quad 0x5f6665527865745b,0x257b202c43323166,0x6625202c31333266,0x0a0a3b5d7d363232\n"
".quad 0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e,0x326625202c373232\n"
".quad 0x32326625202c3832,0x3033326625202c39,0x527865745b202c7d,0x2c433231665f6665\n"
".quad 0x2c31333266257b20,0x5d7d323332662520,0x636f6c2e090a0a3b,0x2037333531203220\n"
".quad 0x33662e6c756d0a31,0x2c32383266252032,0x202c343432662520,0x660a3b3732326625\n"
".quad 0x33662e6e722e616d,0x2c33383266252032,0x202c313432662520,0x25202c3132326625\n"
".quad 0x6c2e0a3b32383266,0x333531203220636f,0x2e6464610a312039,0x3832662520323366\n"
".quad 0x3734326625202c34,0x3b3536326625202c,0x3233662e6464610a,0x202c353832662520\n"
".quad 0x25202c3438326625,0x64610a3b39343266,0x6625203233662e64,0x326625202c363832\n"
".quad 0x36326625202c3538,0x662e6464610a3b37,0x3738326625203233,0x2c3638326625202c\n"
".quad 0x0a3b313532662520,0x203233662e646461,0x25202c3838326625,0x6625202c37383266\n"
".quad 0x6464610a3b393632,0x326625203233662e,0x38326625202c3938,0x3137326625202c38\n"
".quad 0x33662e6464610a3b,0x2c30393266252032,0x202c393832662520,0x610a3b3337326625\n"
".quad 0x25203233662e6464,0x6625202c31393266,0x326625202c303932,0x2e6464610a3b3537\n"
".quad 0x3932662520323366,0x3139326625202c32,0x3b3335326625202c,0x3233662e6464610a\n"
".quad 0x202c333932662520,0x25202c3239326625,0x64610a3b31383266,0x6625203233662e64\n"
".quad 0x326625202c343932,0x35326625202c3339,0x662e6464610a3b35,0x3539326625203233\n"
".quad 0x2c3439326625202c,0x0a3b333832662520,0x203233662e646461,0x25202c3639326625\n"
".quad 0x6625202c35393266,0x6464610a3b373532,0x326625203233662e,0x39326625202c3739\n"
".quad 0x3935326625202c36,0x33662e6464610a3b,0x2c38393266252032,0x202c373932662520\n"
".quad 0x610a3b3737326625,0x25203233662e6464,0x6625202c39393266,0x326625202c383932\n"
".quad 0x2e6464610a3b3136,0x3033662520323366,0x3939326625202c30,0x3b3937326625202c\n"
".quad 0x3233662e6464610a,0x202c313033662520,0x25202c3030336625,0x75730a3b33363266\n"
".quad 0x6625203233662e62,0x326625202c323033,0x36326625202c3536,0x662e6464610a3b37\n"
".quad 0x3330336625203233,0x2c3230336625202c,0x0a3b393632662520,0x203233662e627573\n"
".quad 0x25202c3430336625,0x6625202c33303366,0x6275730a3b313732,0x336625203233662e\n"
".quad 0x30336625202c3530,0x3337326625202c34,0x33662e6464610a3b,0x2c36303366252032\n"
".quad 0x202c353033662520,0x610a3b3537326625,0x25203233662e6464,0x6625202c37303366\n"
".quad 0x326625202c363033,0x2e6275730a3b3138,0x3033662520323366,0x3730336625202c38\n"
".quad 0x3b3338326625202c,0x3233662e6464610a,0x202c393033662520,0x25202c3830336625\n"
".quad 0x75730a3b37373266,0x6625203233662e62,0x336625202c303133,0x37326625202c3930\n"
".quad 0x662e6275730a3b39,0x3131336625203233,0x2c3934326625202c,0x0a3b313532662520\n"
".quad 0x203233662e646461,0x25202c3231336625,0x6625202c31313366,0x6464610a3b393632\n"
".quad 0x336625203233662e,0x31336625202c3331,0x3137326625202c32,0x33662e6275730a3b\n"
".quad 0x2c34313366252032,0x202c333133662520,0x730a3b3337326625,0x25203233662e6275\n"
".quad 0x6625202c35313366,0x326625202c343133,0x2e6464610a3b3537,0x3133662520323366\n"
".quad 0x3531336625202c36,0x3b3535326625202c,0x3233662e6275730a,0x202c373133662520\n"
".quad 0x25202c3631336625,0x64610a3b37353266,0x6625203233662e64,0x336625202c383133\n"
".quad 0x36326625202c3731,0x662e6275730a3b31,0x3931336625203233,0x2c3831336625202c\n"
".quad 0x0a3b333632662520,0x203233662e646461,0x25202c3032336625,0x6625202c33353266\n"
".quad 0x6464610a3b313832,0x336625203233662e,0x32336625202c3132,0x3535326625202c30\n"
".quad 0x33662e6464610a3b,0x2c32323366252032,0x202c313233662520,0x610a3b3338326625\n"
".quad 0x25203233662e6464,0x6625202c33323366,0x326625202c323233,0x2e6275730a3b3735\n"
".quad 0x3233662520323366,0x3332336625202c34,0x3b3935326625202c,0x3233662e6275730a\n"
".quad 0x202c353233662520,0x25202c3432336625,0x75730a3b37373266,0x6625203233662e62\n"
".quad 0x336625202c363233,0x36326625202c3532,0x662e6275730a3b31,0x3732336625203233\n"
".quad 0x2c3632336625202c,0x0a3b393732662520,0x203233662e627573,0x25202c3832336625\n"
".quad 0x6625202c37323366,0x6c756d0a3b333632,0x336625203233662e,0x31336625202c3932\n"
".quad 0x3931336625202c39,0x6e722e616d660a3b,0x336625203233662e,0x31336625202c3033\n"
".quad 0x3031336625202c30,0x3b3932336625202c,0x3233662e6c756d0a,0x202c313333662520\n"
".quad 0x25202c3832336625,0x6d660a3b38323366,0x3233662e6e722e61,0x202c323333662520\n"
".quad 0x25202c3832336625,0x6625202c38323366,0x6c756d0a3b303333,0x336625203233662e\n"
".quad 0x33336625202c3333,0x3146426630202c32,0x660a3b4435444438,0x33662e6e722e616d\n"
".quad 0x2c34333366252032,0x202c313033662520,0x4330333445336630,0x33336625202c3033\n"
".quad 0x662e6c756d0a3b33,0x3533336625203233,0x2c3233336625202c,0x3934304433663020\n"
".quad 0x616d660a3b433943,0x203233662e6e722e,0x25202c3633336625,0x6630202c31303366\n"
".quad 0x3533443433444433,0x3b3533336625202c,0x2e6e722e616d660a,0x3333662520323366\n"
".quad 0x3031336625202c37,0x413245336630202c,0x6625202c42414141,0x616d660a3b363333\n"
".quad 0x203233662e6e722e,0x25202c3833336625,0x6630202c39313366,0x4241414141324533\n"
".quad 0x3b3633336625202c,0x2e6e722e616d660a,0x3333662520323366,0x3031336625202c39\n"
".quad 0x413245426630202c,0x6625202c42414141,0x616d660a3b363333,0x203233662e6e722e\n"
".quad 0x25202c3034336625,0x6630202c39313366,0x4241414141324542,0x3b3633336625202c\n"
".quad 0x3233662e6c756d0a,0x202c313433662520,0x30202c3233336625,0x3833383930443366\n"
".quad 0x722e616d660a3b34,0x6625203233662e6e,0x336625202c323433,0x43336630202c3130\n"
".quad 0x202c303238303238,0x610a3b3134336625,0x25203233662e6464,0x6625202c33343366\n"
".quad 0x336625202c303133,0x2e616d660a3b3931,0x25203233662e6e72,0x6625202c34343366\n"
".quad 0x336630202c333433,0x2c42414141414144,0x0a3b323433662520,0x203233662e627573\n"
".quad 0x25202c3534336625,0x6625202c30313366,0x616d660a3b393133,0x203233662e6e722e\n"
".quad 0x25202c3634336625,0x6630202c35343366,0x4241414141414442,0x3b3234336625202c\n"
".quad 0x2e6e722e616d660a,0x3433662520323366,0x3334336625202c37,0x414144426630202c\n"
".quad 0x6625202c42414141,0x616d660a3b323433,0x203233662e6e722e,0x25202c3834336625\n"
".quad 0x6630202c35343366,0x4241414141414433,0x3b3234336625202c,0x2e6e722e616d660a\n"
".quad 0x3433662520323366,0x3832336625202c39,0x413245336630202c,0x6625202c42414141\n"
".quad 0x6464610a3b363333,0x336625203233662e,0x31336625202c3035,0x3832336625202c30\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x35336625202c3135,0x4144336630202c30\n"
".quad 0x25202c4241414141,0x64610a3b32343366,0x6625203233662e64,0x336625202c323533\n"
".quad 0x32336625202c3931,0x722e616d660a3b38,0x6625203233662e6e,0x336625202c333533\n"
".quad 0x44336630202c3235,0x202c424141414141,0x730a3b3234336625,0x25203233662e6275\n"
".quad 0x6625202c34353366,0x336625202c303133,0x2e616d660a3b3832,0x25203233662e6e72\n"
".quad 0x6625202c35353366,0x426630202c343533,0x2c42414141414144,0x0a3b323433662520\n"
".quad 0x203233662e627573,0x25202c3635336625,0x6625202c39313366,0x616d660a3b383233\n"
".quad 0x203233662e6e722e,0x25202c3735336625,0x6630202c36353366,0x4241414141414442\n"
".quad 0x3b3234336625202c,0x2e6e722e616d660a,0x3533662520323366,0x3832336625202c38\n"
".quad 0x413245426630202c,0x6625202c42414141,0x616d660a3b363333,0x203233662e6e722e\n"
".quad 0x25202c3935336625,0x6630202c34353366,0x4241414141414433,0x3b3234336625202c\n"
".quad 0x2e6e722e616d660a,0x3633662520323366,0x3635336625202c30,0x414144336630202c\n"
".quad 0x6625202c42414141,0x616d660a3b323433,0x203233662e6e722e,0x25202c3136336625\n"
".quad 0x6630202c30353366,0x4241414141414442,0x3b3234336625202c,0x2e6e722e616d660a\n"
".quad 0x3633662520323366,0x3235336625202c32,0x414144426630202c,0x6625202c42414141\n"
".quad 0x6464610a3b323433,0x336625203233662e,0x31336625202c3336,0x3031336625202c30\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x31336625202c3436,0x3931336625202c39\n"
".quad 0x3b3133336625202c,0x3233662e67656e0a,0x202c353633662520,0x660a3b3436336625\n"
".quad 0x33662e6e722e616d,0x2c36363366252032,0x202c333633662520,0x25202c3031336625\n"
".quad 0x6d660a3b35363366,0x3233662e6e722e61,0x202c373633662520,0x30202c3636336625\n"
".quad 0x3345383336443366,0x3733336625202c39,0x33662e67656e0a3b,0x2c38363366252032\n"
".quad 0x0a3b383233662520,0x662e6e722e616d66,0x3936336625203233,0x2c3836336625202c\n"
".quad 0x202c383233662520,0x6d0a3b3932336625,0x25203233662e6c75,0x6625202c30373366\n"
".quad 0x336630202c393633,0x3b42414141414144,0x2e6e722e616d660a,0x3733662520323366\n"
".quad 0x3636336625202c31,0x334543426630202c,0x6625202c39334538,0x6464610a3b303733\n"
".quad 0x336625203233662e,0x33336625202c3237,0x3137336625202c38,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x36336625202c3337,0x3644336630202c36,0x25202c3933453833\n"
".quad 0x64610a3b39333366,0x6625203233662e64,0x336625202c343733,0x37336625202c3034\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x336625202c353733,0x43336630202c3636\n"
".quad 0x202c393345383345,0x6d0a3b3037336625,0x25203233662e6c75,0x6625202c36373366\n"
".quad 0x336630202c303133,0x3b30303030303845,0x2e6e722e616d660a,0x3733662520323366\n"
".quad 0x3637336625202c37,0x2c3931336625202c,0x0a3b353733662520,0x203233662e646461\n"
".quad 0x25202c3837336625,0x6625202c34343366,0x6c756d0a3b373733,0x336625203233662e\n"
".quad 0x31336625202c3937,0x3845426630202c30,0x660a3b3030303030,0x33662e6e722e616d\n"
".quad 0x2c30383366252032,0x202c393733662520,0x25202c3931336625,0x64610a3b35373366\n"
".quad 0x6625203233662e64,0x336625202c313833,0x38336625202c3634,0x662e6464610a3b30\n"
".quad 0x3238336625203233,0x2c3734336625202c,0x0a3b373733662520,0x203233662e646461\n"
".quad 0x25202c3338336625,0x6625202c38343366,0x6c756d0a3b303833,0x336625203233662e\n"
".quad 0x36336625202c3438,0x4144426630202c39,0x660a3b4241414141,0x33662e6e722e616d\n"
".quad 0x2c35383366252032,0x202c363633662520,0x4538334543426630,0x38336625202c3933\n"
".quad 0x662e6464610a3b34,0x3638336625203233,0x2c3934336625202c,0x0a3b353833662520\n"
".quad 0x662e6e722e616d66,0x3738336625203233,0x2c3636336625202c,0x3833454333663020\n"
".quad 0x336625202c393345,0x2e616d660a3b3438,0x25203233662e6e72,0x6625202c38383366\n"
".quad 0x336625202c363733,0x38336625202c3832,0x662e6464610a3b37,0x3938336625203233\n"
".quad 0x2c3135336625202c,0x0a3b383833662520,0x203233662e6c756d,0x25202c3039336625\n"
".quad 0x6630202c36363366,0x3933453833364442,0x33662e6c756d0a3b,0x2c31393366252032\n"
".quad 0x202c393133662520,0x3030303845336630,0x2e6c756d0a3b3030,0x3933662520323366\n"
".quad 0x3139336625202c32,0x3b3832336625202c,0x2e6e722e616d660a,0x3933662520323366\n"
".quad 0x3636336625202c33,0x333644426630202c,0x6625202c39334538,0x6464610a3b323933\n"
".quad 0x336625203233662e,0x35336625202c3439,0x3339336625202c33,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x37336625202c3539,0x3832336625202c39,0x3b3738336625202c\n"
".quad 0x3233662e6464610a,0x202c363933662520,0x25202c3535336625,0x656e0a3b35393366\n"
".quad 0x6625203233662e67,0x336625202c373933,0x2e616d660a3b3139,0x25203233662e6e72\n"
".quad 0x6625202c38393366,0x336625202c373933,0x39336625202c3832,0x662e6464610a3b30\n"
".quad 0x3939336625203233,0x2c3735336625202c,0x0a3b383933662520,0x203233662e646461\n"
".quad 0x25202c3030346625,0x6625202c38353366,0x6464610a3b353833,0x346625203233662e\n"
".quad 0x35336625202c3130,0x3539336625202c39,0x33662e6c756d0a3b,0x2c32303466252032\n"
".quad 0x202c393133662520,0x3030303845426630,0x2e6c756d0a3b3030,0x3034662520323366\n"
".quad 0x3230346625202c33,0x3b3832336625202c,0x2e6e722e616d660a,0x3034662520323366\n"
".quad 0x3636336625202c34,0x333644426630202c,0x6625202c39334538,0x6464610a3b333034\n"
".quad 0x346625203233662e,0x36336625202c3530,0x3430346625202c30,0x33662e6464610a3b\n"
".quad 0x2c36303466252032,0x202c313633662520,0x610a3b3838336625,0x25203233662e6464\n"
".quad 0x6625202c37303466,0x336625202c323633,0x2e766f6d0a3b3339,0x3034662520323366\n"
".quad 0x3846336630202c38,0x6c0a3b3030303030,0x2e6d617261702e64,0x3434662520323366\n"
".quad 0x34315a5f5b202c38,0x4674636172747845,0x6650645f436d6f72,0x6d617261705f666d\n"
".quad 0x6f6c2e0a3b5d325f,0x3933353120322063,0x662e6275730a3120,0x3930346625203233\n"
".quad 0x2c3830346625202c,0x0a3b383434662520,0x203233662e6c756d,0x25202c3031346625\n"
".quad 0x6625202c39303466,0x616d660a3b343333,0x203233662e6e722e,0x25202c3131346625\n"
".quad 0x6625202c37343266,0x346625202c383434,0x2e6c756d0a3b3031,0x3134662520323366\n"
".quad 0x3930346625202c32,0x3b3736336625202c,0x2e6e722e616d660a,0x3134662520323366\n"
".quad 0x3536326625202c33,0x2c3834346625202c,0x0a3b323134662520,0x203233662e6c756d\n"
".quad 0x25202c3431346625,0x6625202c39303466,0x616d660a3b323733,0x203233662e6e722e\n"
".quad 0x25202c3531346625,0x6625202c39343266,0x346625202c383434,0x2e6c756d0a3b3431\n"
".quad 0x3134662520323366,0x3930346625202c36,0x3b3337336625202c,0x2e6e722e616d660a\n"
".quad 0x3134662520323366,0x3736326625202c37,0x2c3834346625202c,0x0a3b363134662520\n"
".quad 0x203233662e6c756d,0x25202c3831346625,0x6625202c39303466,0x616d660a3b343733\n"
".quad 0x203233662e6e722e,0x25202c3931346625,0x6625202c31353266,0x346625202c383434\n"
".quad 0x2e6c756d0a3b3831,0x3234662520323366,0x3930346625202c30,0x3b3837336625202c\n"
".quad 0x2e6e722e616d660a,0x3234662520323366,0x3936326625202c31,0x2c3834346625202c\n"
".quad 0x0a3b303234662520,0x203233662e6c756d,0x25202c3232346625,0x6625202c39303466\n"
".quad 0x616d660a3b313833,0x203233662e6e722e,0x25202c3332346625,0x6625202c31373266\n"
".quad 0x346625202c383434,0x2e6c756d0a3b3232,0x3234662520323366,0x3930346625202c34\n"
".quad 0x3b3238336625202c,0x2e6e722e616d660a,0x3234662520323366,0x3337326625202c35\n"
".quad 0x2c3834346625202c,0x0a3b343234662520,0x203233662e6c756d,0x25202c3632346625\n"
".quad 0x6625202c39303466,0x616d660a3b333833,0x203233662e6e722e,0x25202c3732346625\n"
".quad 0x6625202c35373266,0x346625202c383434,0x2e6c756d0a3b3632,0x3234662520323366\n"
".quad 0x3930346625202c38,0x3b3638336625202c,0x2e6e722e616d660a,0x3234662520323366\n"
".quad 0x3335326625202c39,0x2c3834346625202c,0x0a3b383234662520,0x203233662e6c756d\n"
".quad 0x25202c3033346625,0x6625202c39303466,0x616d660a3b393833,0x203233662e6e722e\n"
".quad 0x25202c3133346625,0x6625202c31383266,0x346625202c383434,0x2e6c756d0a3b3033\n"
".quad 0x3334662520323366,0x3930346625202c32,0x3b3439336625202c,0x2e6e722e616d660a\n"
".quad 0x3334662520323366,0x3535326625202c33,0x2c3834346625202c,0x0a3b323334662520\n"
".quad 0x203233662e6c756d,0x25202c3433346625,0x6625202c39303466,0x616d660a3b363933\n"
".quad 0x203233662e6e722e,0x25202c3533346625,0x6625202c33383266,0x346625202c383434\n"
".quad 0x2e6c756d0a3b3433,0x3334662520323366,0x3930346625202c36,0x3b3939336625202c\n"
".quad 0x2e6e722e616d660a,0x3334662520323366,0x3735326625202c37,0x2c3834346625202c\n"
".quad 0x0a3b363334662520,0x203233662e6c756d,0x25202c3833346625,0x6625202c39303466\n"
".quad 0x616d660a3b303034,0x203233662e6e722e,0x25202c3933346625,0x6625202c39353266\n"
".quad 0x346625202c383434,0x2e6c756d0a3b3833,0x3434662520323366,0x3930346625202c30\n"
".quad 0x3b3130346625202c,0x2e6e722e616d660a,0x3434662520323366,0x3737326625202c31\n"
".quad 0x2c3834346625202c,0x0a3b303434662520,0x203233662e6c756d,0x25202c3234346625\n"
".quad 0x6625202c39303466,0x616d660a3b353034,0x203233662e6e722e,0x25202c3334346625\n"
".quad 0x6625202c31363266,0x346625202c383434,0x2e6c756d0a3b3234,0x3434662520323366\n"
".quad 0x3930346625202c34,0x3b3630346625202c,0x2e6e722e616d660a,0x3434662520323366\n"
".quad 0x3937326625202c35,0x2c3834346625202c,0x0a3b343434662520,0x203233662e6c756d\n"
".quad 0x25202c3634346625,0x6625202c39303466,0x616d660a3b373034,0x203233662e6e722e\n"
".quad 0x25202c3734346625,0x6625202c33363266,0x346625202c383434,0x2e6c68730a3b3634\n"
".quad 0x3831722520323362,0x36202c337225202c,0x3220636f6c2e0a3b,0x0a31203730373120\n"
".quad 0x2e3436732e747663,0x346c722520323373,0x0a3b38317225202c,0x2e3436732e747663\n"
".quad 0x356c722520323373,0x630a3b327225202c,0x752e3436752e7476,0x2c366c7225203233\n"
".quad 0x64610a3b31722520,0x7225203436732e64,0x346c7225202c376c,0x0a3b356c7225202c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c313231,0x6361727478453431\n"
".quad 0x645f436d6f724674,0x7261705f666d6650,0x2e0a3b5d315f6d61,0x3731203220636f6c\n"
".quad 0x64616d0a31203730,0x203436732e6f6c2e,0x7225202c386c7225,0x316c7225202c376c\n"
".quad 0x366c7225202c3132,0x36622e6c68730a3b,0x202c396c72252034,0x3233202c386c7225\n"
".quad 0x36732e7268730a3b,0x2c30316c72252034,0x33202c396c722520,0x20636f6c2e0a3b32\n"
".quad 0x3120373037312032,0x3436622e6c68730a,0x202c31316c722520,0x32202c30316c7225\n"
".quad 0x36732e6464610a3b,0x2c32316c72252034,0x25202c326c722520,0x74730a3b31316c72\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x346625202c5d3231,0x2e6464610a3b3131\n"
".quad 0x316c722520343673,0x2c376c7225202c33,0x2e0a3b3639303420,0x3731203220636f6c\n"
".quad 0x64616d0a31203830,0x203436732e6f6c2e,0x25202c34316c7225,0x7225202c33316c72\n"
".quad 0x7225202c3132316c,0x2e6c68730a3b366c,0x316c722520343662,0x34316c7225202c35\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c36316c,0x0a3b3233202c3531\n"
".quad 0x31203220636f6c2e,0x68730a3120383037,0x7225203436622e6c,0x6c7225202c37316c\n"
".quad 0x610a3b32202c3631,0x25203436732e6464,0x7225202c38316c72,0x316c7225202c326c\n"
".quad 0x6c672e74730a3b37,0x3233662e6c61626f,0x5d38316c72255b20,0x3b3331346625202c\n"
".quad 0x3436732e6464610a,0x202c39316c722520,0x3138202c376c7225,0x636f6c2e0a3b3239\n"
".quad 0x2039303731203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x316c7225202c3032\n"
".quad 0x32316c7225202c39,0x3b366c7225202c31,0x3436622e6c68730a,0x202c31326c722520\n"
".quad 0x33202c30326c7225,0x732e7268730a3b32,0x32326c7225203436,0x2c31326c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x3930373120322063,0x622e6c68730a3120,0x33326c7225203436\n"
".quad 0x2c32326c7225202c,0x2e6464610a3b3220,0x326c722520343673,0x2c326c7225202c34\n"
".quad 0x0a3b33326c722520,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d34326c72\n"
".quad 0x64610a3b35313466,0x7225203436732e64,0x6c7225202c35326c,0x3838323231202c37\n"
".quad 0x3220636f6c2e0a3b,0x0a31203031373120,0x732e6f6c2e64616d,0x36326c7225203436\n"
".quad 0x2c35326c7225202c,0x2c3132316c722520,0x730a3b366c722520,0x25203436622e6c68\n"
".quad 0x7225202c37326c72,0x3b3233202c36326c,0x3436732e7268730a,0x202c38326c722520\n"
".quad 0x33202c37326c7225,0x20636f6c2e0a3b32,0x3120303137312032,0x3436622e6c68730a\n"
".quad 0x202c39326c722520,0x32202c38326c7225,0x36732e6464610a3b,0x2c30336c72252034\n"
".quad 0x25202c326c722520,0x74730a3b39326c72,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x346625202c5d3033,0x2e6464610a3b3731,0x336c722520343673,0x2c376c7225202c31\n"
".quad 0x0a3b343833363120,0x31203220636f6c2e,0x616d0a3120313137,0x3436732e6f6c2e64\n"
".quad 0x202c32336c722520,0x25202c31336c7225,0x25202c3132316c72,0x6c68730a3b366c72\n"
".quad 0x6c7225203436622e,0x336c7225202c3333,0x730a3b3233202c32,0x25203436732e7268\n"
".quad 0x7225202c34336c72,0x3b3233202c33336c,0x203220636f6c2e0a,0x730a312031313731\n"
".quad 0x25203436622e6c68,0x7225202c35336c72,0x0a3b32202c34336c,0x203436732e646461\n"
".quad 0x25202c36336c7225,0x6c7225202c326c72,0x672e74730a3b3533,0x33662e6c61626f6c\n"
".quad 0x36336c72255b2032,0x3931346625202c5d,0x36732e6464610a3b,0x2c37336c72252034\n"
".quad 0x32202c376c722520,0x6c2e0a3b30383430,0x313731203220636f,0x2e64616d0a312032\n"
".quad 0x25203436732e6f6c,0x7225202c38336c72,0x6c7225202c37336c,0x6c7225202c313231\n"
".quad 0x622e6c68730a3b36,0x39336c7225203436,0x2c38336c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x336c7225202c3034,0x2e0a3b3233202c39,0x3731203220636f6c\n"
".quad 0x6c68730a31203231,0x6c7225203436622e,0x346c7225202c3134,0x64610a3b32202c30\n"
".quad 0x7225203436732e64,0x6c7225202c32346c,0x31346c7225202c32,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x2c5d32346c72255b,0x0a3b313234662520,0x203436732e646461\n"
".quad 0x25202c33346c7225,0x353432202c376c72,0x636f6c2e0a3b3637,0x2033313731203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x346c7225202c3434,0x32316c7225202c33\n"
".quad 0x3b366c7225202c31,0x3436622e6c68730a,0x202c35346c722520,0x33202c34346c7225\n"
".quad 0x732e7268730a3b32,0x36346c7225203436,0x2c35346c7225202c,0x6f6c2e0a3b323320\n"
".quad 0x3331373120322063,0x622e6c68730a3120,0x37346c7225203436,0x2c36346c7225202c\n"
".quad 0x2e6464610a3b3220,0x346c722520343673,0x2c326c7225202c38,0x0a3b37346c722520\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d38346c72,0x64610a3b33323466\n"
".quad 0x7225203436732e64,0x6c7225202c39346c,0x3237363832202c37,0x3220636f6c2e0a3b\n"
".quad 0x0a31203431373120,0x732e6f6c2e64616d,0x30356c7225203436,0x2c39346c7225202c\n"
".quad 0x2c3132316c722520,0x730a3b366c722520,0x25203436622e6c68,0x7225202c31356c72\n"
".quad 0x3b3233202c30356c,0x3436732e7268730a,0x202c32356c722520,0x33202c31356c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120343137312032,0x3436622e6c68730a,0x202c33356c722520\n"
".quad 0x32202c32356c7225,0x36732e6464610a3b,0x2c34356c72252034,0x25202c326c722520\n"
".quad 0x74730a3b33356c72,0x2e6c61626f6c672e,0x6c72255b20323366,0x346625202c5d3435\n"
".quad 0x2e6464610a3b3532,0x356c722520343673,0x2c376c7225202c35,0x0a3b383637323320\n"
".quad 0x31203220636f6c2e,0x616d0a3120353137,0x3436732e6f6c2e64,0x202c36356c722520\n"
".quad 0x25202c35356c7225,0x25202c3132316c72,0x6c68730a3b366c72,0x6c7225203436622e\n"
".quad 0x356c7225202c3735,0x730a3b3233202c36,0x25203436732e7268,0x7225202c38356c72\n"
".quad 0x3b3233202c37356c,0x203220636f6c2e0a,0x730a312035313731,0x25203436622e6c68\n"
".quad 0x7225202c39356c72,0x0a3b32202c38356c,0x203436732e646461,0x25202c30366c7225\n"
".quad 0x6c7225202c326c72,0x672e74730a3b3935,0x33662e6c61626f6c,0x30366c72255b2032\n"
".quad 0x3732346625202c5d,0x36732e6464610a3b,0x2c31366c72252034,0x33202c376c722520\n"
".quad 0x6c2e0a3b34363836,0x313731203220636f,0x2e64616d0a312036,0x25203436732e6f6c\n"
".quad 0x7225202c32366c72,0x6c7225202c31366c,0x6c7225202c313231,0x622e6c68730a3b36\n"
".quad 0x33366c7225203436,0x2c32366c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x366c7225202c3436,0x2e0a3b3233202c33,0x3731203220636f6c,0x6c68730a31203631\n"
".quad 0x6c7225203436622e,0x366c7225202c3536,0x64610a3b32202c34,0x7225203436732e64\n"
".quad 0x6c7225202c36366c,0x35366c7225202c32,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x2c5d36366c72255b,0x0a3b393234662520,0x203436732e646461,0x25202c37366c7225\n"
".quad 0x393034202c376c72,0x636f6c2e0a3b3036,0x2037313731203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x366c7225202c3836,0x32316c7225202c37,0x3b366c7225202c31\n"
".quad 0x3436622e6c68730a,0x202c39366c722520,0x33202c38366c7225,0x732e7268730a3b32\n"
".quad 0x30376c7225203436,0x2c39366c7225202c,0x6f6c2e0a3b323320,0x3731373120322063\n"
".quad 0x622e6c68730a3120,0x31376c7225203436,0x2c30376c7225202c,0x2e6464610a3b3220\n"
".quad 0x376c722520343673,0x2c326c7225202c32,0x0a3b31376c722520,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x25202c5d32376c72,0x64610a3b31333466,0x7225203436732e64\n"
".quad 0x6c7225202c33376c,0x3635303534202c37,0x3220636f6c2e0a3b,0x0a31203831373120\n"
".quad 0x732e6f6c2e64616d,0x34376c7225203436,0x2c33376c7225202c,0x2c3132316c722520\n"
".quad 0x730a3b366c722520,0x25203436622e6c68,0x7225202c35376c72,0x3b3233202c34376c\n"
".quad 0x3436732e7268730a,0x202c36376c722520,0x33202c35376c7225,0x20636f6c2e0a3b32\n"
".quad 0x3120383137312032,0x3436622e6c68730a,0x202c37376c722520,0x32202c36376c7225\n"
".quad 0x36732e6464610a3b,0x2c38376c72252034,0x25202c326c722520,0x74730a3b37376c72\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x346625202c5d3837,0x2e6464610a3b3333\n"
".quad 0x376c722520343673,0x2c376c7225202c39,0x0a3b323531393420,0x31203220636f6c2e\n"
".quad 0x616d0a3120393137,0x3436732e6f6c2e64,0x202c30386c722520,0x25202c39376c7225\n"
".quad 0x25202c3132316c72,0x6c68730a3b366c72,0x6c7225203436622e,0x386c7225202c3138\n"
".quad 0x730a3b3233202c30,0x25203436732e7268,0x7225202c32386c72,0x3b3233202c31386c\n"
".quad 0x203220636f6c2e0a,0x730a312039313731,0x25203436622e6c68,0x7225202c33386c72\n"
".quad 0x0a3b32202c32386c,0x203436732e646461,0x25202c34386c7225,0x6c7225202c326c72\n"
".quad 0x672e74730a3b3338,0x33662e6c61626f6c,0x34386c72255b2032,0x3533346625202c5d\n"
".quad 0x36732e6464610a3b,0x2c35386c72252034,0x35202c376c722520,0x6c2e0a3b38343233\n"
".quad 0x323731203220636f,0x2e64616d0a312030,0x25203436732e6f6c,0x7225202c36386c72\n"
".quad 0x6c7225202c35386c,0x6c7225202c313231,0x622e6c68730a3b36,0x37386c7225203436\n"
".quad 0x2c36386c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x386c7225202c3838\n"
".quad 0x2e0a3b3233202c37,0x3731203220636f6c,0x6c68730a31203032,0x6c7225203436622e\n"
".quad 0x386c7225202c3938,0x64610a3b32202c38,0x7225203436732e64,0x6c7225202c30396c\n"
".quad 0x39386c7225202c32,0x6f6c672e74730a3b,0x203233662e6c6162,0x2c5d30396c72255b\n"
".quad 0x0a3b373334662520,0x203436732e646461,0x25202c31396c7225,0x333735202c376c72\n"
".quad 0x636f6c2e0a3b3434,0x2031323731203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x396c7225202c3239,0x32316c7225202c31,0x3b366c7225202c31,0x3436622e6c68730a\n"
".quad 0x202c33396c722520,0x33202c32396c7225,0x732e7268730a3b32,0x34396c7225203436\n"
".quad 0x2c33396c7225202c,0x6f6c2e0a3b323320,0x3132373120322063,0x622e6c68730a3120\n"
".quad 0x35396c7225203436,0x2c34396c7225202c,0x2e6464610a3b3220,0x396c722520343673\n"
".quad 0x2c326c7225202c36,0x0a3b35396c722520,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x25202c5d36396c72,0x64610a3b39333466,0x7225203436732e64,0x6c7225202c37396c\n"
".quad 0x3034343136202c37,0x3220636f6c2e0a3b,0x0a31203232373120,0x732e6f6c2e64616d\n"
".quad 0x38396c7225203436,0x2c37396c7225202c,0x2c3132316c722520,0x730a3b366c722520\n"
".quad 0x25203436622e6c68,0x7225202c39396c72,0x3b3233202c38396c,0x3436732e7268730a\n"
".quad 0x2c3030316c722520,0x202c39396c722520,0x636f6c2e0a3b3233,0x2032323731203220\n"
".quad 0x36622e6c68730a31,0x3130316c72252034,0x3030316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c323031,0x30316c7225202c32,0x6c672e74730a3b31\n"
".quad 0x3233662e6c61626f,0x3230316c72255b20,0x3134346625202c5d,0x36732e6464610a3b\n"
".quad 0x3330316c72252034,0x202c376c7225202c,0x2e0a3b3633353536,0x3731203220636f6c\n"
".quad 0x64616d0a31203332,0x203436732e6f6c2e,0x202c3430316c7225,0x202c3330316c7225\n"
".quad 0x202c3132316c7225,0x68730a3b366c7225,0x7225203436622e6c,0x7225202c3530316c\n"
".quad 0x3233202c3430316c,0x36732e7268730a3b,0x3630316c72252034,0x3530316c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x323731203220636f,0x2e6c68730a312033,0x316c722520343662\n"
".quad 0x316c7225202c3730,0x610a3b32202c3630,0x25203436732e6464,0x25202c3830316c72\n"
".quad 0x6c7225202c326c72,0x2e74730a3b373031,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x346625202c5d3830,0x2e6464610a3b3334,0x316c722520343673,0x376c7225202c3930\n"
".quad 0x3b3233363936202c,0x203220636f6c2e0a,0x6d0a312034323731,0x36732e6f6c2e6461\n"
".quad 0x3031316c72252034,0x3930316c7225202c,0x3132316c7225202c,0x0a3b366c7225202c\n"
".quad 0x203436622e6c6873,0x202c3131316c7225,0x202c3031316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3231,0x0a3b3233202c3131,0x31203220636f6c2e\n"
".quad 0x68730a3120343237,0x7225203436622e6c,0x7225202c3331316c,0x3b32202c3231316c\n"
".quad 0x3436732e6464610a,0x2c3431316c722520,0x25202c326c722520,0x730a3b3331316c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3431316c,0x64610a3b35343466\n"
".quad 0x7225203436732e64,0x7225202c3531316c,0x32373337202c376c,0x20636f6c2e0a3b38\n"
".quad 0x3120353237312032,0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3631\n"
".quad 0x316c7225202c3531,0x366c7225202c3132,0x36622e6c68730a3b,0x3731316c72252034\n"
".quad 0x3631316c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3831316c\n"
".quad 0x3233202c3731316c,0x3220636f6c2e0a3b,0x0a31203532373120,0x203436622e6c6873\n"
".quad 0x202c3931316c7225,0x202c3831316c7225,0x732e6464610a3b32,0x32316c7225203436\n"
".quad 0x2c326c7225202c30,0x3b3931316c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3032316c7225,0x0a3b373434662520,0x31203220636f6c2e,0x65720a3220383237\n"
".quad 0x652e0a0a7d0a3b74,0x315a5f207972746e,0x79685f645f524c38,0x6f665f4443424162\n"
".quad 0x665f536650656372,0x695f535f535f536d,0x6d617261702e0a28,0x5a5f203436752e20\n"
".quad 0x685f645f524c3831,0x665f444342416279,0x5f5366506563726f,0x5f535f535f536d66\n"
".quad 0x5f6d617261705f69,0x617261702e0a2c30,0x5f203436752e206d,0x5f645f524c38315a\n"
".quad 0x5f44434241627968,0x5366506563726f66,0x535f535f536d665f,0x6d617261705f695f\n"
".quad 0x7261702e0a2c315f,0x203233662e206d61,0x645f524c38315a5f,0x444342416279685f\n"
".quad 0x66506563726f665f,0x5f535f536d665f53,0x617261705f695f53,0x61702e0a2c325f6d\n"
".quad 0x3436752e206d6172,0x5f524c38315a5f20,0x4342416279685f64,0x506563726f665f44\n"
".quad 0x535f536d665f5366,0x7261705f695f535f,0x702e0a2c335f6d61,0x36752e206d617261\n"
".quad 0x524c38315a5f2034,0x42416279685f645f,0x6563726f665f4443,0x5f536d665f536650\n"
".quad 0x61705f695f535f53,0x2e0a2c345f6d6172,0x752e206d61726170,0x4c38315a5f203436\n"
".quad 0x416279685f645f52,0x63726f665f444342,0x536d665f53665065,0x705f695f535f535f\n"
".quad 0x0a2c355f6d617261,0x2e206d617261702e,0x38315a5f20343675,0x6279685f645f524c\n"
".quad 0x726f665f44434241,0x6d665f5366506563,0x5f695f535f535f53,0x2c365f6d61726170\n"
".quad 0x206d617261702e0a,0x315a5f203233752e,0x79685f645f524c38,0x6f665f4443424162\n"
".quad 0x665f536650656372,0x695f535f535f536d,0x375f6d617261705f,0x65722e0a7b0a290a\n"
".quad 0x25203233662e2067,0x0a3b3e3131353c66,0x72702e206765722e,0x30313c7025206465\n"
".quad 0x206765722e0a3b3e,0x3c7225203233732e,0x722e0a3b3e373631,0x203436732e206765\n"
".quad 0x3e3834333c6c7225,0x6168732e090a0a3b,0x696c612e20646572,0x38622e2034206e67\n"
".quad 0x5f616475635f5f20,0x61765f6c61636f6c,0x5f36343137335f72,0x635f6e6f6e5f3233\n"
".quad 0x6d75735f74736e6f,0x0a3b5d3635325b58,0x65726168732e090a,0x6e67696c612e2064\n"
".quad 0x5f2038622e203420,0x6f6c5f616475635f,0x5f7261765f6c6163,0x32345f3634313733\n"
".quad 0x6e6f635f6e6f6e5f,0x5b596d75735f7473,0x090a0a3b5d363532,0x206465726168732e\n"
".quad 0x34206e67696c612e,0x635f5f2038622e20,0x61636f6c5f616475,0x37335f7261765f6c\n"
".quad 0x6e5f32355f363431,0x74736e6f635f6e6f,0x35325b5a6d75735f,0x732e090a0a3b5d36\n"
".quad 0x612e206465726168,0x2e2034206e67696c,0x6475635f5f203862,0x5f6c61636f6c5f61\n"
".quad 0x343137335f726176,0x6e6f6e5f30335f37,0x635f74736e6f635f,0x3b5d345b6b636568\n"
".quad 0x7261702e646c0a0a,0x25203436752e6d61,0x5a5f5b202c316c72,0x685f645f524c3831\n"
".quad 0x665f444342416279,0x5f5366506563726f,0x5f535f535f536d66,0x5f6d617261705f69\n"
".quad 0x702e646c0a3b5d30,0x3436752e6d617261,0x5b202c336c722520,0x645f524c38315a5f\n"
".quad 0x444342416279685f,0x66506563726f665f,0x5f535f536d665f53,0x617261705f695f53\n"
".quad 0x76630a3b5d335f6d,0x6c672e6f742e6174,0x3436752e6c61626f,0x25202c346c722520\n"
".quad 0x6f6c2e0a3b316c72,0x3233373120322063,0x752e766f6d0a3120,0x3636317225203233\n"
".quad 0x2e6469746e25202c,0x752e766f6d0a3b78,0x2c31317225203233,0x2e64696174632520\n"
".quad 0x752e766f6d0a3b78,0x2c32317225203233,0x3b782e6469742520,0x2e6f6c2e64616d0a\n"
".quad 0x3331722520323373,0x2c3636317225202c,0x25202c3131722520,0x6f6c2e0a3b323172\n"
".quad 0x3333373120322063,0x752e766f6d0a3120,0x2c34317225203233,0x792e6469746e2520\n"
".quad 0x33752e766f6d0a3b,0x202c353172252032,0x792e646961746325,0x33752e766f6d0a3b\n"
".quad 0x202c363172252032,0x0a3b792e64697425,0x732e6f6c2e64616d,0x202c337225203233\n"
".quad 0x7225202c34317225,0x36317225202c3531,0x3220636f6c2e0a3b,0x0a31203433373120\n"
".quad 0x203233752e766f6d,0x6e25202c37317225,0x6d0a3b7a2e646974,0x25203233752e766f\n"
".quad 0x746325202c383172,0x6d0a3b7a2e646961,0x25203233752e766f,0x697425202c393172\n"
".quad 0x64616d0a3b7a2e64,0x203233732e6f6c2e,0x317225202c347225,0x2c38317225202c37\n"
".quad 0x2e0a3b3931722520,0x3731203220636f6c,0x7476630a31203533,0x2e3233662e6e722e\n"
".quad 0x3332662520323373,0x0a3b33317225202c,0x662e6e722e616d66,0x2c34326625203233\n"
".quad 0x30202c3332662520,0x3030303030463366,0x3731346630202c30,0x2e0a3b3030303043\n"
".quad 0x3731203220636f6c,0x7476630a31203633,0x2e3233662e6e722e,0x2c32662520323373\n"
".quad 0x6d660a3b33722520,0x3233662e6e722e61,0x25202c3532662520,0x46336630202c3266\n"
".quad 0x202c303030303030,0x3030433731346630,0x636f6c2e0a3b3030,0x2037333731203220\n"
".quad 0x6e722e7476630a31,0x3233732e3233662e,0x25202c3632662520,0x2e616d660a3b3472\n"
".quad 0x25203233662e6e72,0x326625202c373266,0x3046336630202c36,0x30202c3030303030\n"
".quad 0x3030304337313466,0x752e7476630a3b30,0x25203233752e3436,0x317225202c356c72\n"
".quad 0x20636f6c2e0a3b33,0x3120383337312032,0x3436732e7476630a,0x6c7225203233732e\n"
".quad 0x0a3b337225202c36,0x203233622e6c6873,0x347225202c357225,0x6f6c2e0a3b36202c\n"
".quad 0x3833373120322063,0x732e7476630a3120,0x25203233732e3436,0x357225202c376c72\n"
".quad 0x36732e6464610a3b,0x202c396c72252034,0x7225202c376c7225,0x636f6c2e0a3b366c\n"
".quad 0x2038333731203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x2c396c7225202c38\n"
".quad 0x25202c336c722520,0x6464610a3b356c72,0x326625203233662e,0x2c34326625202c38\n"
".quad 0x3045373243663020,0x6464610a3b303030,0x326625203233662e,0x2c35326625202c39\n"
".quad 0x3043463143663020,0x6f6c2e0a3b303030,0x3120303720322063,0x3233662e6c756d0a\n"
".quad 0x25202c3033662520,0x326625202c393266,0x722e616d660a3b39,0x6625203233662e6e\n"
".quad 0x38326625202c3133,0x202c38326625202c,0x64610a3b30336625,0x6625203233662e64\n"
".quad 0x37326625202c3233,0x434631436630202c,0x6c2e0a3b30303030,0x203037203220636f\n"
".quad 0x6e722e616d660a31,0x336625203233662e,0x2c32336625202c33,0x25202c3233662520\n"
".quad 0x7465730a3b313366,0x3233662e746c2e70,0x6625202c31702520,0x31346630202c3333\n"
".quad 0x0a3b303030303038,0x203233752e766f6d,0x3b30202c30327225,0x203220636f6c2e0a\n"
".quad 0x730a312033343731,0x6465726168732e74,0x5f5f5b203233752e,0x636f6c5f61647563\n"
".quad 0x335f7261765f6c61,0x5f30335f37343137,0x736e6f635f6e6f6e,0x5d6b636568635f74\n"
".quad 0x0a3b30327225202c,0x31203220636f6c2e,0x61620a3120343437,0x3020636e79732e72\n"
".quad 0x36622e6c68730a3b,0x2c30316c72252034,0x33202c386c722520,0x732e7268730a3b32\n"
".quad 0x31316c7225203436,0x2c30316c7225202c,0x6f6c2e0a3b323320,0x3335373120322063\n"
".quad 0x622e6c68730a3120,0x32316c7225203436,0x2c31316c7225202c,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x2c346c7225202c33,0x0a3b32316c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x316c72255b202c33,0x2e6464610a3b5d33,0x3232722520323373\n"
".quad 0x2d202c337225202c,0x20636f6c2e0a3b31,0x3120343537312032,0x3436732e7476630a\n"
".quad 0x6c7225203233732e,0x32327225202c3431,0x36732e6464610a3b,0x2c35316c72252034\n"
".quad 0x202c34316c722520,0x64610a3b376c7225,0x7225203436732e64,0x6c7225202c36316c\n"
".quad 0x32393138202c3531,0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3734336c72\n"
".quad 0x645f524c38315a5f,0x444342416279685f,0x66506563726f665f,0x5f535f536d665f53\n"
".quad 0x617261705f695f53,0x6c2e0a3b5d335f6d,0x353731203220636f,0x2e64616d0a312034\n"
".quad 0x25203436732e6f6c,0x7225202c37316c72,0x6c7225202c36316c,0x6c7225202c373433\n"
".quad 0x622e6c68730a3b35,0x38316c7225203436,0x2c37316c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x316c7225202c3931,0x2e0a3b3233202c38,0x3731203220636f6c\n"
".quad 0x6c68730a31203435,0x6c7225203436622e,0x316c7225202c3032,0x64610a3b32202c39\n"
".quad 0x7225203436732e64,0x6c7225202c31326c,0x30326c7225202c34,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c346625,0x6c2e0a3b5d31326c,0x353731203220636f\n"
".quad 0x2e6464610a312035,0x3432722520323373,0x31202c337225202c,0x36732e7476630a3b\n"
".quad 0x7225203233732e34,0x327225202c32326c,0x732e6464610a3b34,0x33326c7225203436\n"
".quad 0x2c32326c7225202c,0x610a3b376c722520,0x25203436732e6464,0x7225202c34326c72\n"
".quad 0x333631202c33326c,0x636f6c2e0a3b3438,0x2035353731203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x326c7225202c3532,0x34336c7225202c34,0x3b356c7225202c37\n"
".quad 0x3436622e6c68730a,0x202c36326c722520,0x33202c35326c7225,0x732e7268730a3b32\n"
".quad 0x37326c7225203436,0x2c36326c7225202c,0x6f6c2e0a3b323320,0x3535373120322063\n"
".quad 0x622e6c68730a3120,0x38326c7225203436,0x2c37326c7225202c,0x2e6464610a3b3220\n"
".quad 0x326c722520343673,0x2c346c7225202c39,0x0a3b38326c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x326c72255b202c35,0x2e6464610a3b5d39,0x3632722520323373\n"
".quad 0x2d202c357225202c,0x636f6c2e0a3b3436,0x2036353731203220,0x36732e7476630a31\n"
".quad 0x7225203233732e34,0x327225202c30336c,0x732e6464610a3b36,0x31336c7225203436\n"
".quad 0x202c366c7225202c,0x610a3b30336c7225,0x25203436732e6464,0x7225202c32336c72\n"
".quad 0x383633202c31336c,0x636f6c2e0a3b3436,0x2036353731203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x336c7225202c3333,0x34336c7225202c32,0x3b356c7225202c37\n"
".quad 0x3436622e6c68730a,0x202c34336c722520,0x33202c33336c7225,0x732e7268730a3b32\n"
".quad 0x35336c7225203436,0x2c34336c7225202c,0x6f6c2e0a3b323320,0x3635373120322063\n"
".quad 0x622e6c68730a3120,0x36336c7225203436,0x2c35336c7225202c,0x2e6464610a3b3220\n"
".quad 0x336c722520343673,0x2c346c7225202c37,0x0a3b36336c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x336c72255b202c36,0x2e6464610a3b5d37,0x336c722520343673\n"
".quad 0x34316c7225202c38,0x3b30336c7225202c,0x3436732e6464610a,0x202c39336c722520\n"
".quad 0x34202c38336c7225,0x6c2e0a3b36353035,0x353731203220636f,0x2e64616d0a312037\n"
".quad 0x25203436732e6f6c,0x7225202c30346c72,0x6c7225202c39336c,0x6c7225202c373433\n"
".quad 0x622e6c68730a3b35,0x31346c7225203436,0x2c30346c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x346c7225202c3234,0x2e0a3b3233202c31,0x3731203220636f6c\n"
".quad 0x6c68730a31203735,0x6c7225203436622e,0x346c7225202c3334,0x64610a3b32202c32\n"
".quad 0x7225203436732e64,0x6c7225202c34346c,0x33346c7225202c34,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c376625,0x64610a3b5d34346c,0x7225203436732e64\n"
".quad 0x6c7225202c35346c,0x336c7225202c3232,0x732e6464610a3b30,0x36346c7225203436\n"
".quad 0x2c35346c7225202c,0x0a3b383432333520,0x31203220636f6c2e,0x616d0a3120383537\n"
".quad 0x3436732e6f6c2e64,0x202c37346c722520,0x25202c36346c7225,0x25202c3734336c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x346c7225202c3834,0x730a3b3233202c37\n"
".quad 0x25203436732e7268,0x7225202c39346c72,0x3b3233202c38346c,0x203220636f6c2e0a\n"
".quad 0x730a312038353731,0x25203436622e6c68,0x7225202c30356c72,0x0a3b32202c39346c\n"
".quad 0x203436732e646461,0x25202c31356c7225,0x6c7225202c346c72,0x672e646c0a3b3035\n"
".quad 0x33662e6c61626f6c,0x5b202c3866252032,0x0a3b5d31356c7225,0x203233732e646461\n"
".quad 0x7225202c30337225,0x2e0a3b3436202c35,0x3731203220636f6c,0x7476630a31203935\n"
".quad 0x3233732e3436732e,0x202c32356c722520,0x64610a3b30337225,0x7225203436732e64\n"
".quad 0x6c7225202c33356c,0x32356c7225202c36,0x36732e6464610a3b,0x2c34356c72252034\n"
".quad 0x202c33356c722520,0x2e0a3b3434333735,0x3731203220636f6c,0x64616d0a31203935\n"
".quad 0x203436732e6f6c2e,0x25202c35356c7225,0x7225202c34356c72,0x7225202c3734336c\n"
".quad 0x2e6c68730a3b356c,0x356c722520343662,0x35356c7225202c36,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c37356c,0x0a3b3233202c3635,0x31203220636f6c2e\n"
".quad 0x68730a3120393537,0x7225203436622e6c,0x6c7225202c38356c,0x610a3b32202c3735\n"
".quad 0x25203436732e6464,0x7225202c39356c72,0x356c7225202c346c,0x6c672e646c0a3b38\n"
".quad 0x3233662e6c61626f,0x255b202c39662520,0x610a3b5d39356c72,0x25203436732e6464\n"
".quad 0x7225202c30366c72,0x6c7225202c34316c,0x2e6464610a3b3235,0x366c722520343673\n"
".quad 0x30366c7225202c31,0x3b3633353536202c,0x203220636f6c2e0a,0x6d0a312030363731\n"
".quad 0x36732e6f6c2e6461,0x2c32366c72252034,0x202c31366c722520,0x202c3734336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x6c7225202c33366c,0x0a3b3233202c3236\n"
".quad 0x203436732e726873,0x25202c34366c7225,0x3233202c33366c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203036373120,0x203436622e6c6873,0x25202c35366c7225,0x3b32202c34366c72\n"
".quad 0x3436732e6464610a,0x202c36366c722520,0x7225202c346c7225,0x2e646c0a3b35366c\n"
".quad 0x662e6c61626f6c67,0x2c30316625203233,0x5d36366c72255b20,0x3220636f6c2e0a3b\n"
".quad 0x0a31203136373120,0x2e71652e70746573,0x2c32702520323373,0x3336202c34722520\n"
".quad 0x6220327025400a3b,0x5f37314242206172,0x636f6c2e0a0a3b32,0x2035353731203220\n"
".quad 0x36752e7476630a31,0x7225203233752e34,0x327225202c37366c,0x20636f6c2e0a3b34\n"
".quad 0x3120393537312032,0x3436752e7476630a,0x6c7225203233752e,0x30337225202c3836\n"
".quad 0x36732e6464610a3b,0x2c39366c72252034,0x202c37366c722520,0x610a3b38366c7225\n"
".quad 0x25203436732e6464,0x7225202c30376c72,0x373337202c39366c,0x2e7476630a3b3832\n"
".quad 0x203233752e343675,0x25202c31376c7225,0x2e646c0a3b333172,0x36752e6d61726170\n"
".quad 0x3634336c72252034,0x4c38315a5f5b202c,0x416279685f645f52,0x63726f665f444342\n"
".quad 0x536d665f53665065,0x705f695f535f535f,0x3b5d335f6d617261,0x203220636f6c2e0a\n"
".quad 0x6d0a312032363731,0x36732e6f6c2e6461,0x2c32376c72252034,0x202c30376c722520\n"
".quad 0x202c3634336c7225,0x6c0a3b31376c7225,0x2e6d617261702e64,0x336c722520343675\n"
".quad 0x315a5f5b202c3134,0x79685f645f524c38,0x6f665f4443424162,0x665f536650656372\n"
".quad 0x695f535f535f536d,0x305f6d617261705f,0x2e617476630a3b5d,0x61626f6c672e6f74\n"
".quad 0x7225203436752e6c,0x6c7225202c33376c,0x6c68730a3b313433,0x6c7225203436622e\n"
".quad 0x376c7225202c3437,0x730a3b3233202c32,0x25203436732e7268,0x7225202c35376c72\n"
".quad 0x3b3233202c34376c,0x203220636f6c2e0a,0x730a312032363731,0x25203436622e6c68\n"
".quad 0x7225202c36376c72,0x0a3b32202c35376c,0x203436732e646461,0x25202c37376c7225\n"
".quad 0x7225202c33376c72,0x2e646c0a3b36376c,0x662e6c61626f6c67,0x3031356625203233\n"
".quad 0x37376c72255b202c,0x373142420a0a3b5d,0x2e6464610a3a325f,0x3335722520323373\n"
".quad 0x202c33317225202c,0x636f6c2e0a3b312d,0x2034363731203220,0x6e722e7476630a31\n"
".quad 0x3233732e3233662e,0x25202c3539662520,0x6464610a3b333572,0x386625203233662e\n"
".quad 0x2c35396625202c37,0x3030304633663020,0x7476630a3b303030,0x2e3233662e6e722e\n"
".quad 0x3639662520323373,0x610a3b357225202c,0x25203233662e6464,0x326625202c373966\n"
".quad 0x303046336630202c,0x64610a3b30303030,0x6625203233662e64,0x37396625202c3634\n"
".quad 0x0a3b36396625202c,0x64322e786574090a,0x2e3233662e34762e,0x3366257b20323366\n"
".quad 0x2c36336625202c35,0x25202c3733662520,0x745b202c7d383366,0x31665f6665527865\n"
".quad 0x373866257b202c43,0x5d7d36346625202c,0x636f6c2e090a0a3b,0x2035363731203220\n"
".quad 0x33732e6464610a31,0x202c303672252032,0x3b31202c33317225,0x2e6e722e7476630a\n"
".quad 0x203233732e323366,0x7225202c38396625,0x2e6464610a3b3036,0x3339662520323366\n"
".quad 0x202c38396625202c,0x3030303046336630,0x6574090a0a3b3030,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x25202c313466257b,0x346625202c323466,0x7d34346625202c33\n"
".quad 0x65527865745b202c,0x7b202c4333665f66,0x6625202c33396625,0x090a0a3b5d7d3634\n"
".quad 0x31203220636f6c2e,0x76630a3120363637,0x3233662e6e722e74,0x396625203233732e\n"
".quad 0x3b32327225202c39,0x3233662e6464610a,0x202c303031662520,0x6630202c39396625\n"
".quad 0x3030303030304633,0x33662e6464610a3b,0x202c383566252032,0x25202c3030316625\n"
".quad 0x74090a0a3b363966,0x34762e64322e7865,0x3233662e3233662e,0x202c373466257b20\n"
".quad 0x6625202c38346625,0x30356625202c3934,0x527865745b202c7d,0x202c4335665f6665\n"
".quad 0x25202c373866257b,0x0a0a3b5d7d383566,0x322e786574090a09,0x3233662e34762e64\n"
".quad 0x66257b203233662e,0x34356625202c3335,0x202c35356625202c,0x5b202c7d36356625\n"
".quad 0x665f666552786574,0x3966257b202c4336,0x7d38356625202c33,0x6f6c2e090a0a3b5d\n"
".quad 0x3836373120322063,0x722e7476630a3120,0x33732e3233662e6e,0x2c31303166252032\n"
".quad 0x610a3b3432722520,0x25203233662e6464,0x6625202c32303166,0x336630202c313031\n"
".quad 0x3b30303030303046,0x3233662e6464610a,0x25202c3037662520,0x6625202c32303166\n"
".quad 0x6574090a0a3b3639,0x2e34762e64322e78,0x203233662e323366,0x25202c393566257b\n"
".quad 0x366625202c303666,0x7d32366625202c31,0x65527865745b202c,0x7b202c4337665f66\n"
".quad 0x6625202c33396625,0x090a0a3b5d7d3037,0x64322e786574090a,0x2e3233662e34762e\n"
".quad 0x3666257b20323366,0x2c36366625202c35,0x25202c3736662520,0x745b202c7d383666\n"
".quad 0x38665f6665527865,0x373866257b202c43,0x5d7d30376625202c,0x636f6c2e090a0a3b\n"
".quad 0x2030373731203220,0x6e722e7476630a31,0x3233732e3233662e,0x202c333031662520\n"
".quad 0x64610a3b30337225,0x6625203233662e64,0x37396625202c3238,0x3b3330316625202c\n"
".quad 0x322e786574090a0a,0x3233662e34762e64,0x66257b203233662e,0x32376625202c3137\n"
".quad 0x202c33376625202c,0x5b202c7d34376625,0x665f666552786574,0x66257b202c433531\n"
".quad 0x32386625202c3738,0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x2c373766257b2032,0x25202c3837662520,0x386625202c393766,0x7865745b202c7d30\n"
".quad 0x433731665f666552,0x2c333966257b202c,0x3b5d7d3238662520,0x20636f6c2e090a0a\n"
".quad 0x3120323737312032,0x2e6e722e7476630a,0x203233732e323366,0x25202c3430316625\n"
".quad 0x6464610a3b363272,0x396625203233662e,0x2c37396625202c34,0x0a3b343031662520\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3866257b20323366,0x2c34386625202c33\n"
".quad 0x25202c3538662520,0x745b202c7d363866,0x31665f6665527865,0x3866257b202c4330\n"
".quad 0x7d34396625202c37,0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x202c393866257b20,0x6625202c30396625,0x32396625202c3139,0x527865745b202c7d\n"
".quad 0x2c433231665f6665,0x202c333966257b20,0x0a3b5d7d34396625,0x3220636f6c2e090a\n"
".quad 0x0a31203537373120,0x6172622031702540,0x3b345f3731424220,0x3220636f6c2e0a0a\n"
".quad 0x0a31203233373120,0x203233752e766f6d,0x25202c3536317225,0x6d0a3b782e646974\n"
".quad 0x2e656469772e6c75,0x376c722520323375,0x3536317225202c38,0x766f6d0a3b34202c\n"
".quad 0x6c7225203436752e,0x75635f5f202c3937,0x6c61636f6c5f6164,0x3137335f7261765f\n"
".quad 0x6f6e5f32335f3634,0x5f74736e6f635f6e,0x64610a3b586d7573,0x7225203436732e64\n"
".quad 0x6c7225202c30386c,0x376c7225202c3937,0x20636f6c2e0a3b38,0x3120333138312032\n"
".quad 0x726168732e74730a,0x5b203233752e6465,0x202c5d30386c7225,0x6f6d0a3b30327225\n"
".quad 0x7225203436752e76,0x635f5f202c31386c,0x61636f6c5f616475,0x37335f7261765f6c\n"
".quad 0x6e5f32345f363431,0x74736e6f635f6e6f,0x610a3b596d75735f,0x25203436732e6464\n"
".quad 0x7225202c32386c72,0x6c7225202c31386c,0x636f6c2e0a3b3837,0x2034313831203220\n"
".quad 0x6168732e74730a31,0x203233752e646572,0x2c5d32386c72255b,0x6d0a3b3032722520\n"
".quad 0x25203436752e766f,0x5f5f202c33386c72,0x636f6c5f61647563,0x335f7261765f6c61\n"
".quad 0x5f32355f36343137,0x736e6f635f6e6f6e,0x0a3b5a6d75735f74,0x203436732e646461\n"
".quad 0x25202c34386c7225,0x7225202c33386c72,0x6f6c2e0a3b38376c,0x3531383120322063\n"
".quad 0x68732e74730a3120,0x3233752e64657261,0x5d34386c72255b20,0x0a3b30327225202c\n"
".quad 0x31203220636f6c2e,0x75730a3120323338,0x6625203233662e62,0x336625202c353031\n"
".quad 0x3b31346625202c35,0x3233662e6464610a,0x202c363031662520,0x25202c3530316625\n"
".quad 0x6275730a3b373466,0x316625203233662e,0x30316625202c3730,0x3b33356625202c36\n"
".quad 0x3233662e6275730a,0x202c383031662520,0x25202c3730316625,0x6464610a3b393566\n"
".quad 0x316625203233662e,0x30316625202c3930,0x3b35366625202c38,0x3233662e6464610a\n"
".quad 0x202c303131662520,0x25202c3930316625,0x6275730a3b333866,0x316625203233662e\n"
".quad 0x31316625202c3131,0x3b39386625202c30,0x3233662e6464610a,0x202c323131662520\n"
".quad 0x25202c3131316625,0x6275730a3b313766,0x316625203233662e,0x31316625202c3331\n"
".quad 0x3b37376625202c32,0x3233662e6275730a,0x202c343131662520,0x356625202c346625\n"
".quad 0x33662e6464610a3b,0x2c35313166252032,0x202c343131662520,0x64610a3b37346625\n"
".quad 0x6625203233662e64,0x316625202c363131,0x33356625202c3531,0x33662e6275730a3b\n"
".quad 0x2c37313166252032,0x202c363131662520,0x75730a3b39356625,0x6625203233662e62\n"
".quad 0x316625202c383131,0x35366625202c3731,0x33662e6464610a3b,0x2c39313166252032\n"
".quad 0x202c383131662520,0x6275730a3b376625,0x316625203233662e,0x31316625202c3032\n"
".quad 0x0a3b386625202c39,0x203233662e646461,0x25202c3132316625,0x6625202c30323166\n"
".quad 0x2e6275730a3b3031,0x3231662520323366,0x3132316625202c32,0x3b3031356625202c\n"
".quad 0x3233662e6464610a,0x202c333231662520,0x386625202c366625,0x662e6464610a3b33\n"
".quad 0x3432316625203233,0x2c3332316625202c,0x64610a3b37662520,0x6625203233662e64\n"
".quad 0x316625202c353231,0x39386625202c3432,0x33662e6464610a3b,0x2c36323166252032\n"
".quad 0x202c353231662520,0x6275730a3b386625,0x316625203233662e,0x32316625202c3732\n"
".quad 0x0a3b396625202c36,0x203233662e627573,0x25202c3832316625,0x6625202c37323166\n"
".quad 0x2e6275730a3b3137,0x3231662520323366,0x3832316625202c39,0x0a3b30316625202c\n"
".quad 0x203233662e627573,0x25202c3033316625,0x6625202c39323166,0x2e6275730a3b3737\n"
".quad 0x3331662520323366,0x3033316625202c31,0x3b3031356625202c,0x3233662e6275730a\n"
".quad 0x202c323331662520,0x6625202c37346625,0x20636f6c2e0a3b33,0x3120323338312032\n"
".quad 0x3233662e6464610a,0x202c333331662520,0x25202c3233316625,0x6464610a3b333566\n"
".quad 0x316625203233662e,0x33316625202c3433,0x3b39356625202c33,0x3233662e6464610a\n"
".quad 0x202c353331662520,0x25202c3433316625,0x6464610a3b353666,0x316625203233662e\n"
".quad 0x33316625202c3633,0x3b33386625202c35,0x3233662e6464610a,0x202c373331662520\n"
".quad 0x25202c3633316625,0x2e6464610a3b3766,0x3331662520323366,0x3733316625202c38\n"
".quad 0x0a3b39386625202c,0x203233662e646461,0x25202c3933316625,0x6625202c38333166\n"
".quad 0x662e6464610a3b38,0x3034316625203233,0x2c3933316625202c,0x610a3b3137662520\n"
".quad 0x25203233662e6464,0x6625202c31343166,0x316625202c303431,0x662e6464610a3b30\n"
".quad 0x3234316625203233,0x2c3134316625202c,0x610a3b3737662520,0x25203233662e6464\n"
".quad 0x6625202c33343166,0x356625202c323431,0x2e6c756d0a3b3031,0x3431662520323366\n"
".quad 0x3232316625202c34,0x3b3232316625202c,0x2e6e722e616d660a,0x3431662520323366\n"
".quad 0x3331316625202c35,0x2c3331316625202c,0x0a3b343431662520,0x203233662e6c756d\n"
".quad 0x25202c3634316625,0x6625202c31333166,0x616d660a3b313331,0x203233662e6e722e\n"
".quad 0x25202c3734316625,0x6625202c31333166,0x316625202c313331,0x2e6275730a3b3534\n"
".quad 0x3431662520323366,0x3334316625202c38,0x3b3734316625202c,0x3233662e6c756d0a\n"
".quad 0x202c393431662520,0x6630202c35336625,0x3030303030383043,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x2c336625202c3035,0x3030343134663020,0x316625202c303030\n"
".quad 0x2e616d660a3b3934,0x25203233662e6e72,0x6625202c31353166,0x3830436630202c34\n"
".quad 0x25202c3030303030,0x6d660a3b30353166,0x3233662e6e722e61,0x202c323531662520\n"
".quad 0x6630202c31346625,0x3030303030383043,0x3b3135316625202c,0x2e6e722e616d660a\n"
".quad 0x3531662520323366,0x202c356625202c33,0x3030303830436630,0x35316625202c3030\n"
".quad 0x662e6464610a3b32,0x3435316625203233,0x2c3335316625202c,0x610a3b3734662520\n"
".quad 0x25203233662e6464,0x6625202c35353166,0x356625202c343531,0x662e6464610a3b33\n"
".quad 0x3635316625203233,0x2c3535316625202c,0x610a3b3935662520,0x25203233662e6464\n"
".quad 0x6625202c37353166,0x366625202c363531,0x722e616d660a3b35,0x6625203233662e6e\n"
".quad 0x366625202c383531,0x303830436630202c,0x6625202c30303030,0x6464610a3b373531\n"
".quad 0x316625203233662e,0x35316625202c3935,0x3b33386625202c38,0x3233662e6464610a\n"
".quad 0x202c303631662520,0x25202c3935316625,0x2e6464610a3b3766,0x3631662520323366\n"
".quad 0x3036316625202c31,0x0a3b39386625202c,0x203233662e646461,0x25202c3236316625\n"
".quad 0x6625202c31363166,0x722e616d660a3b38,0x6625203233662e6e,0x396625202c333631\n"
".quad 0x303830436630202c,0x6625202c30303030,0x6464610a3b323631,0x316625203233662e\n"
".quad 0x36316625202c3436,0x3b31376625202c33,0x3233662e6464610a,0x202c353631662520\n"
".quad 0x25202c3436316625,0x6464610a3b303166,0x316625203233662e,0x36316625202c3636\n"
".quad 0x3b37376625202c35,0x3233662e6464610a,0x202c373631662520,0x25202c3636316625\n"
".quad 0x6d660a3b30313566,0x3233662e6e722e61,0x202c383631662520,0x30202c3734316625\n"
".quad 0x3135343146303466,0x3736316625202c34,0x33662e6c756d0a3b,0x2c39363166252032\n"
".quad 0x30202c3134662520,0x3030303041303466,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x336625202c303731,0x4130436630202c35,0x25202c3030303030,0x6d660a3b39363166\n"
".quad 0x3233662e6e722e61,0x202c313731662520,0x30202c3331316625,0x3535353544463366\n"
".quad 0x3037316625202c35,0x33662e6c756d0a3b,0x2c32373166252032,0x6630202c35662520\n"
".quad 0x3030303030413034,0x6e722e616d660a3b,0x316625203233662e,0x2c346625202c3337\n"
".quad 0x3030413043663020,0x316625202c303030,0x2e616d660a3b3237,0x25203233662e6e72\n"
".quad 0x6625202c34373166,0x336630202c323231,0x2c35353535354446,0x0a3b333731662520\n"
".quad 0x203233662e6c756d,0x25202c3537316625,0x30346630202c3966,0x0a3b303030303041\n"
".quad 0x662e6e722e616d66,0x3637316625203233,0x30202c366625202c,0x3030303041304366\n"
".quad 0x3537316625202c30,0x6e722e616d660a3b,0x316625203233662e,0x33316625202c3737\n"
".quad 0x4446336630202c31,0x25202c3535353535,0x64610a3b36373166,0x6625203233662e64\n"
".quad 0x336625202c383731,0x3b35336625202c35,0x3233662e6275730a,0x202c393731662520\n"
".quad 0x25202c3837316625,0x636f6c2e0a3b3466,0x2032333831203220,0x33662e6464610a31\n"
".quad 0x2c30383166252032,0x25202c3134662520,0x6464610a3b313466,0x316625203233662e\n"
".quad 0x37316625202c3138,0x3038316625202c39,0x33662e6275730a3b,0x2c32383166252032\n"
".quad 0x202c313831662520,0x6f6c2e0a3b356625,0x3233383120322063,0x662e6464610a3120\n"
".quad 0x3338316625203233,0x2c3238316625202c,0x610a3b3734662520,0x25203233662e6464\n"
".quad 0x6625202c34383166,0x356625202c333831,0x662e6464610a3b33,0x3538316625203233\n"
".quad 0x2c3438316625202c,0x610a3b3935662520,0x25203233662e6464,0x6625202c36383166\n"
".quad 0x366625202c353831,0x662e6275730a3b35,0x3738316625203233,0x2c3638316625202c\n"
".quad 0x6c2e0a3b36662520,0x333831203220636f,0x2e6464610a312032,0x3831662520323366\n"
".quad 0x3738316625202c38,0x0a3b33386625202c,0x203233662e766f6d,0x30202c3938316625\n"
".quad 0x3030303030304366,0x20636f6c2e0a3b30,0x3120323338312032,0x2e6e722e616d660a\n"
".quad 0x3931662520323366,0x202c376625202c30,0x3030303030436630,0x38316625202c3030\n"
".quad 0x662e6464610a3b38,0x3139316625203233,0x2c3039316625202c,0x660a3b3938662520\n"
".quad 0x33662e6e722e616d,0x2c32393166252032,0x6630202c38662520,0x3030303030303043\n"
".quad 0x3b3139316625202c,0x3233662e6275730a,0x202c333931662520,0x25202c3239316625\n"
".quad 0x636f6c2e0a3b3966,0x2032333831203220,0x33662e6464610a31,0x2c34393166252032\n"
".quad 0x202c333931662520,0x6d660a3b31376625,0x3233662e6e722e61,0x202c353931662520\n"
".quad 0x6630202c30316625,0x3030303030303043,0x3b3439316625202c,0x3233662e6464610a\n"
".quad 0x202c363931662520,0x25202c3539316625,0x616d660a3b373766,0x203233662e6e722e\n"
".quad 0x25202c3739316625,0x6630202c30313566,0x3030303030303043,0x3b3639316625202c\n"
".quad 0x3233662e6464610a,0x202c383931662520,0x25202c3331316625,0x6d660a3b33313166\n"
".quad 0x3233662e6e722e61,0x202c393931662520,0x25202c3232316625,0x6625202c32323166\n"
".quad 0x67656e0a3b363431,0x326625203233662e,0x39316625202c3030,0x722e616d660a3b39\n"
".quad 0x6625203233662e6e,0x316625202c313032,0x31316625202c3839,0x3030326625202c33\n"
".quad 0x33662e6275730a3b,0x2c32303266252032,0x202c373931662520,0x610a3b3130326625\n"
".quad 0x25203233662e6464,0x6625202c33303266,0x0a3b346625202c34,0x662e6e722e616d66\n"
".quad 0x3430326625203233,0x202c35336625202c,0x3030303830436630,0x30326625202c3030\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x346625202c353032,0x3830436630202c31\n"
".quad 0x25202c3030303030,0x64610a3b34303266,0x6625203233662e64,0x356625202c363032\n"
".quad 0x610a3b356625202c,0x25203233662e6464,0x6625202c37303266,0x326625202c353032\n"
".quad 0x2e6464610a3b3630,0x3032662520323366,0x3730326625202c38,0x0a3b37346625202c\n"
".quad 0x203233662e646461,0x25202c3930326625,0x6625202c38303266,0x2e6464610a3b3335\n"
".quad 0x3132662520323366,0x3930326625202c30,0x0a3b39356625202c,0x203233662e646461\n"
".quad 0x25202c3131326625,0x6625202c30313266,0x2e6464610a3b3536,0x3132662520323366\n"
".quad 0x202c366625202c32,0x6464610a3b366625,0x326625203233662e,0x31326625202c3331\n"
".quad 0x3231326625202c31,0x33662e6464610a3b,0x2c34313266252032,0x202c333132662520\n"
".quad 0x6d660a3b33386625,0x3233662e6e722e61,0x202c353132662520,0x436630202c376625\n"
".quad 0x2c30303030303030,0x0a3b343132662520,0x203233662e646461,0x25202c3631326625\n"
".quad 0x6625202c35313266,0x2e616d660a3b3938,0x25203233662e6e72,0x6625202c37313266\n"
".quad 0x3030436630202c38,0x25202c3030303030,0x64610a3b36313266,0x6625203233662e64\n"
".quad 0x396625202c383132,0x610a3b396625202c,0x25203233662e6464,0x6625202c39313266\n"
".quad 0x326625202c373132,0x2e6464610a3b3831,0x3232662520323366,0x3931326625202c30\n"
".quad 0x0a3b31376625202c,0x662e6e722e616d66,0x3132326625203233,0x202c30316625202c\n"
".quad 0x3030303030436630,0x32326625202c3030,0x662e6464610a3b30,0x3232326625203233\n"
".quad 0x2c3132326625202c,0x660a3b3737662520,0x33662e6e722e616d,0x2c33323266252032\n"
".quad 0x202c303135662520,0x3030303030436630,0x32326625202c3030,0x662e6464610a3b32\n"
".quad 0x3432326625203233,0x25202c346625202c,0x2e6464610a3b3566,0x3232662520323366\n"
".quad 0x3432326625202c35,0x0a3b37346625202c,0x203233662e646461,0x25202c3632326625\n"
".quad 0x6625202c35323266,0x2e6464610a3b3335,0x3232662520323366,0x3632326625202c37\n"
".quad 0x0a3b39356625202c,0x203233662e646461,0x25202c3832326625,0x6625202c37323266\n"
".quad 0x2e6275730a3b3536,0x3232662520323366,0x3832326625202c39,0x730a3b366625202c\n"
".quad 0x25203233662e6275,0x6625202c30333266,0x386625202c393232,0x662e6275730a3b33\n"
".quad 0x3133326625203233,0x2c3033326625202c,0x730a3b3938662520,0x25203233662e6275\n"
".quad 0x6625202c32333266,0x396625202c313332,0x33662e6275730a3b,0x2c33333266252032\n"
".quad 0x202c323332662520,0x75730a3b31376625,0x6625203233662e62,0x326625202c343332\n"
".quad 0x37376625202c3333,0x3220636f6c2e0a3b,0x0a31203233383120,0x203233662e67656e\n"
".quad 0x25202c3533326625,0x6d660a3b31333166,0x3233662e6e722e61,0x202c363332662520\n"
".quad 0x25202c3533326625,0x6625202c31333166,0x6275730a3b343431,0x326625203233662e\n"
".quad 0x33326625202c3733,0x3633326625202c34,0x33662e67656e0a3b,0x2c38333266252032\n"
".quad 0x0a3b363032662520,0x662e6e722e616d66,0x3933326625203233,0x25202c346625202c\n"
".quad 0x6625202c39383166,0x6464610a3b383332,0x326625203233662e,0x33326625202c3034\n"
".quad 0x3b37346625202c39,0x3233662e6464610a,0x202c313432662520,0x25202c3034326625\n"
".quad 0x6464610a3b333566,0x326625203233662e,0x34326625202c3234,0x3b39356625202c31\n"
".quad 0x3233662e6464610a,0x202c333432662520,0x25202c3234326625,0x6464610a3b353666\n"
".quad 0x326625203233662e,0x34326625202c3434,0x3231326625202c33,0x33662e6275730a3b\n"
".quad 0x2c35343266252032,0x202c343432662520,0x75730a3b33386625,0x6625203233662e62\n"
".quad 0x326625202c363432,0x39386625202c3534,0x3220636f6c2e0a3b,0x0a31203233383120\n"
".quad 0x203233662e646461,0x25202c3734326625,0x6625202c36343266,0x6275730a3b383132\n"
".quad 0x326625203233662e,0x34326625202c3834,0x3b31376625202c37,0x3233662e6275730a\n"
".quad 0x202c393432662520,0x25202c3834326625,0x6275730a3b373766,0x326625203233662e\n"
".quad 0x37346625202c3035,0x0a3b33356625202c,0x31203220636f6c2e,0x64610a3120323338\n"
".quad 0x6625203233662e64,0x326625202c313532,0x39356625202c3035,0x33662e6275730a3b\n"
".quad 0x2c32353266252032,0x202c313532662520,0x6c2e0a3b35366625,0x333831203220636f\n"
".quad 0x2e67656e0a312032,0x3532662520323366,0x3331316625202c33,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x35326625202c3435,0x3232316625202c33,0x3b3235326625202c\n"
".quad 0x3233662e6275730a,0x202c353532662520,0x386625202c376625,0x33662e6275730a3b\n"
".quad 0x2c36353266252032,0x202c353532662520,0x6c2e0a3b30316625,0x333831203220636f\n"
".quad 0x2e6464610a312032,0x3532662520323366,0x3635326625202c37,0x3b3031356625202c\n"
".quad 0x3233662e67656e0a,0x202c383532662520,0x660a3b3232316625,0x33662e6e722e616d\n"
".quad 0x2c39353266252032,0x202c383532662520,0x25202c3133316625,0x75730a3b37353266\n"
".quad 0x6625203233662e62,0x386625202c303632,0x3b39386625202c33,0x3233662e6275730a\n"
".quad 0x202c313632662520,0x25202c3036326625,0x6f6c2e0a3b313766,0x3233383120322063\n"
".quad 0x662e6464610a3120,0x3236326625203233,0x2c3136326625202c,0x660a3b3737662520\n"
".quad 0x33662e6e722e616d,0x2c33363266252032,0x202c333532662520,0x25202c3133316625\n"
".quad 0x75730a3b32363266,0x6625203233662e62,0x326625202c343632,0x39356625202c3035\n"
".quad 0x3220636f6c2e0a3b,0x0a31203233383120,0x203233662e646461,0x25202c3536326625\n"
".quad 0x6625202c34363266,0x2e6275730a3b3536,0x3632662520323366,0x3536326625202c36\n"
".quad 0x0a3b33386625202c,0x203233662e646461,0x25202c3736326625,0x6625202c36363266\n"
".quad 0x2e6275730a3b3938,0x3632662520323366,0x3736326625202c38,0x0a3b31376625202c\n"
".quad 0x31203220636f6c2e,0x64610a3120323338,0x6625203233662e64,0x326625202c393632\n"
".quad 0x37376625202c3836,0x33662e67656e0a3b,0x2c30373266252032,0x730a3b3335662520\n"
".quad 0x25203233662e6275,0x6625202c31373266,0x346625202c303732,0x20636f6c2e0a3b37\n"
".quad 0x3120323338312032,0x3233662e6464610a,0x202c323732662520,0x25202c3137326625\n"
".quad 0x6464610a3b393566,0x326625203233662e,0x37326625202c3337,0x3b35366625202c32\n"
".quad 0x3233662e6464610a,0x202c343732662520,0x25202c3337326625,0x2e6275730a3b3766\n"
".quad 0x3732662520323366,0x3437326625202c35,0x2e0a3b386625202c,0x3831203220636f6c\n"
".quad 0x6464610a31203233,0x326625203233662e,0x37326625202c3637,0x3b30316625202c35\n"
".quad 0x3233662e6275730a,0x202c373732662520,0x25202c3637326625,0x75730a3b30313566\n"
".quad 0x6625203233662e62,0x386625202c383732,0x0a3b376625202c33,0x31203220636f6c2e\n"
".quad 0x64610a3120323338,0x6625203233662e64,0x326625202c393732,0x39386625202c3837\n"
".quad 0x33662e6275730a3b,0x2c30383266252032,0x202c393732662520,0x6275730a3b386625\n"
".quad 0x326625203233662e,0x38326625202c3138,0x3b31376625202c30,0x203220636f6c2e0a\n"
".quad 0x610a312032333831,0x25203233662e6464,0x6625202c32383266,0x316625202c313832\n"
".quad 0x662e6275730a3b30,0x3338326625203233,0x2c3238326625202c,0x2e0a3b3737662520\n"
".quad 0x3831203220636f6c,0x6464610a31203233,0x326625203233662e,0x38326625202c3438\n"
".quad 0x3031356625202c33,0x33662e766f6d0a3b,0x2c35383266252032,0x3030384533663020\n"
".quad 0x2e646c0a3b303030,0x33662e6d61726170,0x2c39303566252032,0x524c38315a5f5b20\n"
".quad 0x42416279685f645f,0x6563726f665f4443,0x5f536d665f536650,0x61705f695f535f53\n"
".quad 0x0a3b5d325f6d6172,0x31203220636f6c2e,0x756d0a3120323338,0x6625203233662e6c\n"
".quad 0x356625202c363832,0x45336630202c3930,0x0a3b303030303038,0x203233662e766f6d\n"
".quad 0x30202c3738326625,0x3030303030453366,0x20636f6c2e0a3b30,0x3120323338312032\n"
".quad 0x3233662e6c756d0a,0x202c383832662520,0x30202c3934326625,0x4141414132443366\n"
".quad 0x662e766f6d0a3b42,0x3938326625203233,0x413244336630202c,0x6c2e0a3b42414141\n"
".quad 0x333831203220636f,0x2e6c756d0a312032,0x3932662520323366,0x3930356625202c30\n"
".quad 0x414144336630202c,0x756d0a3b42414141,0x6625203233662e6c,0x326625202c313932\n"
".quad 0x43336630202c3332,0x0a3b393345383336,0x203233662e6c756d,0x25202c3239326625\n"
".quad 0x6630202c39303566,0x3933453833454333,0x33662e6c756d0a3b,0x2c33393266252032\n"
".quad 0x202c323032662520,0x6d0a3b3239326625,0x25203233662e6c75,0x6625202c34393266\n"
".quad 0x336630202c313731,0x3b44434343434343,0x3233662e766f6d0a,0x202c353932662520\n"
".quad 0x4343434343336630,0x636f6c2e0a3b4443,0x2032333831203220,0x33662e6c756d0a31\n"
".quad 0x2c36393266252032,0x202c343731662520,0x4343434343336630,0x2e6c756d0a3b4443\n"
".quad 0x3932662520323366,0x3737316625202c37,0x434343336630202c,0x756d0a3b44434343\n"
".quad 0x6625203233662e6c,0x316625202c383932,0x42336630202c3836,0x0a3b313238303238\n"
".quad 0x203233662e6c756d,0x25202c3939326625,0x6630202c38393266,0x3030303030343134\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x34316625202c3030,0x3745426630202c38\n"
".quad 0x25202c4433464333,0x75730a3b39393266,0x6625203233662e62,0x336625202c313033\n"
".quad 0x3b3030336625202c,0x3233662e6c756d0a,0x202c323033662520,0x30202c3839326625\n"
".quad 0x3030303038304366,0x722e616d660a3b30,0x6625203233662e6e,0x316625202c333033\n"
".quad 0x44426630202c3834,0x202c443242433242,0x660a3b3230336625,0x33662e6e722e616d\n"
".quad 0x2c34303366252032,0x202c343932662520,0x3030303830436630,0x30336625202c3030\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x326625202c353033,0x39326625202c3230\n"
".quad 0x3339326625202c32,0x33662e6464610a3b,0x2c36303366252032,0x202c343033662520\n"
".quad 0x660a3b3530336625,0x33662e6e722e616d,0x2c37303366252032,0x202c313932662520\n"
".quad 0x3030303830436630,0x30336625202c3030,0x662e6275730a3b36,0x3830336625203233\n"
".quad 0x202c35336625202c,0x660a3b3730336625,0x33662e6e722e616d,0x2c39303366252032\n"
".quad 0x202c363932662520,0x3030303830436630,0x30336625202c3030,0x662e67656e0a3b33\n"
".quad 0x3031336625203233,0x3b3230326625202c,0x2e6e722e616d660a,0x3133662520323366\n"
".quad 0x3031336625202c31,0x2c3239326625202c,0x0a3b393033662520,0x31203220636f6c2e\n"
".quad 0x6d660a3120323338,0x3233662e6e722e61,0x202c323133662520,0x30202c3332326625\n"
".quad 0x3345383336433366,0x3139326625202c39,0x33662e6464610a3b,0x2c33313366252032\n"
".quad 0x202c313133662520,0x660a3b3231336625,0x33662e6e722e616d,0x2c34313366252032\n"
".quad 0x202c373332662520,0x25202c3039326625,0x6d660a3b33313366,0x3233662e6e722e61\n"
".quad 0x202c353133662520,0x30202c3838326625,0x3030303030304366,0x3431336625202c30\n"
".quad 0x33662e6275730a3b,0x2c36313366252032,0x6625202c34662520,0x616d660a3b353133\n"
".quad 0x203233662e6e722e,0x25202c3731336625,0x6630202c34393266,0x3030303030383034\n"
".quad 0x3b3330336625202c,0x3233662e6464610a,0x202c383133662520,0x25202c3731336625\n"
".quad 0x6d660a3b35303366,0x3233662e6e722e61,0x202c393133662520,0x30202c3139326625\n"
".quad 0x3030303038304366,0x3831336625202c30,0x33662e6275730a3b,0x2c30323366252032\n"
".quad 0x25202c3134662520,0x6d660a3b39313366,0x3233662e6e722e61,0x202c313233662520\n"
".quad 0x30202c3639326625,0x3030303038303466,0x3330336625202c30,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x31336625202c3232,0x3239326625202c30,0x3b3132336625202c\n"
".quad 0x203220636f6c2e0a,0x610a312032333831,0x25203233662e6464,0x6625202c33323366\n"
".quad 0x336625202c323233,0x2e616d660a3b3231,0x25203233662e6e72,0x6625202c34323366\n"
".quad 0x326625202c373332,0x32336625202c3039,0x722e616d660a3b33,0x6625203233662e6e\n"
".quad 0x326625202c353233,0x30436630202c3838,0x202c303030303030,0x730a3b3432336625\n"
".quad 0x25203233662e6275,0x6625202c36323366,0x3532336625202c35,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x34316625202c3732,0x3844336630202c38,0x25202c3032383032\n"
".quad 0x6d660a3b38393266,0x3233662e6e722e61,0x202c383233662520,0x30202c3137316625\n"
".quad 0x4343434343433366,0x3732336625202c44,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x37316625202c3932,0x4343336630202c34,0x25202c4443434343,0x6d660a3b38323366\n"
".quad 0x3233662e6e722e61,0x202c303333662520,0x25202c3230326625,0x6625202c32393266\n"
".quad 0x616d660a3b393233,0x203233662e6e722e,0x25202c3133336625,0x6630202c33323266\n"
".quad 0x3933453833364333,0x3b3033336625202c,0x2e6e722e616d660a,0x3333662520323366\n"
".quad 0x3733326625202c32,0x2c3039326625202c,0x0a3b313333662520,0x662e6e722e616d66\n"
".quad 0x3333336625203233,0x2c3934326625202c,0x4141324433663020,0x336625202c424141\n"
".quad 0x2e616d660a3b3233,0x25203233662e6e72,0x6625202c34333366,0x336630202c343532\n"
".quad 0x2c30303030303845,0x0a3b333333662520,0x662e6e722e616d66,0x3533336625203233\n"
".quad 0x2c3936326625202c,0x3030304533663020,0x336625202c303030,0x2e67656e0a3b3433\n"
".quad 0x3333662520323366,0x3737326625202c36,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x33336625202c3733,0x3738326625202c36,0x3b3533336625202c,0x203220636f6c2e0a\n"
".quad 0x730a312032333831,0x25203233662e6275,0x6625202c38333366,0x33336625202c3734\n"
".quad 0x662e67656e0a3b37,0x3933336625203233,0x3b3137316625202c,0x2e6e722e616d660a\n"
".quad 0x3433662520323366,0x3933336625202c30,0x2c3539326625202c,0x0a3b373233662520\n"
".quad 0x31203220636f6c2e,0x6d660a3120323338,0x3233662e6e722e61,0x202c313433662520\n"
".quad 0x30202c3437316625,0x4343434343433366,0x3034336625202c44,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x30326625202c3234,0x3239326625202c32,0x3b3134336625202c\n"
".quad 0x2e6e722e616d660a,0x3433662520323366,0x3332326625202c33,0x333643336630202c\n"
".quad 0x6625202c39334538,0x616d660a3b323433,0x203233662e6e722e,0x25202c3434336625\n"
".quad 0x6625202c37333266,0x336625202c303932,0x2e616d660a3b3334,0x25203233662e6e72\n"
".quad 0x6625202c35343366,0x336630202c393432,0x2c42414141413244,0x0a3b343433662520\n"
".quad 0x203233662e67656e,0x25202c3634336625,0x6d660a3b34353266,0x3233662e6e722e61\n"
".quad 0x202c373433662520,0x25202c3634336625,0x6625202c35383266,0x67656e0a3b353433\n"
".quad 0x336625203233662e,0x36326625202c3834,0x722e616d660a3b39,0x6625203233662e6e\n"
".quad 0x336625202c393433,0x38326625202c3834,0x3734336625202c37,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x33336625202c3035,0x3738326625202c36,0x3b3934336625202c\n"
".quad 0x203220636f6c2e0a,0x730a312032333831,0x25203233662e6275,0x6625202c31353366\n"
".quad 0x35336625202c3335,0x662e67656e0a3b30,0x3235336625203233,0x3b3437316625202c\n"
".quad 0x2e6e722e616d660a,0x3533662520323366,0x3235336625202c33,0x2c3539326625202c\n"
".quad 0x0a3b303433662520,0x31203220636f6c2e,0x6d660a3120323338,0x3233662e6e722e61\n"
".quad 0x202c343533662520,0x25202c3230326625,0x6625202c32393266,0x616d660a3b333533\n"
".quad 0x203233662e6e722e,0x25202c3535336625,0x6630202c33323266,0x3933453833364333\n"
".quad 0x3b3435336625202c,0x2e6e722e616d660a,0x3533662520323366,0x3733326625202c36\n"
".quad 0x2c3039326625202c,0x0a3b353533662520,0x662e6e722e616d66,0x3735336625203233\n"
".quad 0x2c3934326625202c,0x4141324433663020,0x336625202c424141,0x2e616d660a3b3635\n"
".quad 0x25203233662e6e72,0x6625202c38353366,0x336630202c343532,0x2c30303030303845\n"
".quad 0x0a3b373533662520,0x662e6e722e616d66,0x3935336625203233,0x2c3834336625202c\n"
".quad 0x202c373832662520,0x2e0a3b3835336625,0x3831203220636f6c,0x616d660a31203233\n"
".quad 0x203233662e6e722e,0x25202c3036336625,0x6630202c37373266,0x3030303030304533\n"
".quad 0x3b3935336625202c,0x3233662e6275730a,0x202c313633662520,0x6625202c39356625\n"
".quad 0x616d660a3b303633,0x203233662e6e722e,0x25202c3236336625,0x6625202c32353366\n"
".quad 0x336625202c353932,0x636f6c2e0a3b3832,0x2032333831203220,0x6e722e616d660a31\n"
".quad 0x336625203233662e,0x30326625202c3336,0x3239326625202c32,0x3b3236336625202c\n"
".quad 0x2e6e722e616d660a,0x3633662520323366,0x3332326625202c34,0x333643336630202c\n"
".quad 0x6625202c39334538,0x616d660a3b333633,0x203233662e6e722e,0x25202c3536336625\n"
".quad 0x6625202c37333266,0x336625202c303932,0x2e616d660a3b3436,0x25203233662e6e72\n"
".quad 0x6625202c36363366,0x336630202c393432,0x2c42414141413244,0x0a3b353633662520\n"
".quad 0x662e6e722e616d66,0x3736336625203233,0x2c3634336625202c,0x202c353832662520\n"
".quad 0x2e0a3b3636336625,0x3831203220636f6c,0x616d660a31203233,0x203233662e6e722e\n"
".quad 0x25202c3836336625,0x6630202c39363266,0x3030303030304533,0x3b3736336625202c\n"
".quad 0x2e6e722e616d660a,0x3633662520323366,0x3737326625202c39,0x303045336630202c\n"
".quad 0x6625202c30303030,0x6275730a3b383633,0x336625203233662e,0x35366625202c3037\n"
".quad 0x3b3936336625202c,0x2e6e722e616d660a,0x3733662520323366,0x3739326625202c31\n"
".quad 0x303830436630202c,0x6625202c30303030,0x616d660a3b333033,0x203233662e6e722e\n"
".quad 0x25202c3237336625,0x6625202c30313366,0x336625202c323932,0x636f6c2e0a3b3137\n"
".quad 0x2032333831203220,0x33662e6464610a31,0x2c33373366252032,0x202c323733662520\n"
".quad 0x6e0a3b3231336625,0x25203233662e6765,0x6625202c34373366,0x616d660a3b373332\n"
".quad 0x203233662e6e722e,0x25202c3537336625,0x6625202c34373366,0x336625202c303932\n"
".quad 0x636f6c2e0a3b3337,0x2032333831203220,0x6e722e616d660a31,0x336625203233662e\n"
".quad 0x34326625202c3637,0x3244336630202c39,0x25202c4241414141,0x64610a3b38383266\n"
".quad 0x6625203233662e64,0x336625202c373733,0x37336625202c3537,0x662e6275730a3b36\n"
".quad 0x3837336625203233,0x25202c366625202c,0x6d660a3b37373366,0x3233662e6e722e61\n"
".quad 0x202c393733662520,0x30202c3737316625,0x4343434343433366,0x3832336625202c44\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x30326625202c3038,0x3239326625202c32\n"
".quad 0x3b3937336625202c,0x2e6e722e616d660a,0x3833662520323366,0x3332326625202c31\n"
".quad 0x333643336630202c,0x6625202c39334538,0x616d660a3b303833,0x203233662e6e722e\n"
".quad 0x25202c3238336625,0x6625202c34373366,0x336625202c303932,0x2e67656e0a3b3138\n"
".quad 0x3833662520323366,0x3934326625202c33,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x38336625202c3438,0x3938326625202c33,0x3b3238336625202c,0x203220636f6c2e0a\n"
".quad 0x660a312032333831,0x33662e6e722e616d,0x2c35383366252032,0x202c333632662520\n"
".quad 0x25202c3638326625,0x6d660a3b34383366,0x3233662e6e722e61,0x202c363833662520\n"
".quad 0x25202c3834336625,0x6625202c37383266,0x6f6c2e0a3b353833,0x3233383120322063\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x326625202c373833,0x45336630202c3438\n"
".quad 0x202c303030303030,0x730a3b3638336625,0x25203233662e6275,0x6625202c38383366\n"
".quad 0x38336625202c3338,0x722e616d660a3b37,0x6625203233662e6e,0x316625202c393833\n"
".quad 0x43336630202c3437,0x202c444343434343,0x660a3b3732336625,0x33662e6e722e616d\n"
".quad 0x2c30393366252032,0x202c373731662520,0x4343434343336630,0x38336625202c4443\n"
".quad 0x722e616d660a3b39,0x6625203233662e6e,0x326625202c313933,0x30436630202c3339\n"
".quad 0x202c303030303030,0x660a3b3039336625,0x33662e6e722e616d,0x2c32393366252032\n"
".quad 0x202c313932662520,0x3030303030436630,0x39336625202c3030,0x722e616d660a3b31\n"
".quad 0x6625203233662e6e,0x326625202c333933,0x45336630202c3935,0x202c303030303038\n"
".quad 0x660a3b3239336625,0x33662e6e722e616d,0x2c34393366252032,0x202c373732662520\n"
".quad 0x3030303045336630,0x39336625202c3030,0x662e67656e0a3b33,0x3539336625203233\n"
".quad 0x3b3438326625202c,0x2e6e722e616d660a,0x3933662520323366,0x3539336625202c36\n"
".quad 0x2c3738326625202c,0x0a3b343933662520,0x31203220636f6c2e,0x75730a3120323338\n"
".quad 0x6625203233662e62,0x376625202c373933,0x3b3639336625202c,0x2e6e722e616d660a\n"
".quad 0x3933662520323366,0x3737316625202c38,0x434343336630202c,0x6625202c44434343\n"
".quad 0x616d660a3b303433,0x203233662e6e722e,0x25202c3939336625,0x6625202c32303266\n"
".quad 0x336625202c323932,0x2e616d660a3b3839,0x25203233662e6e72,0x6625202c30303466\n"
".quad 0x336630202c333232,0x2c39334538333643,0x0a3b393933662520,0x662e6e722e616d66\n"
".quad 0x3130346625203233,0x2c3437336625202c,0x202c303932662520,0x660a3b3030346625\n"
".quad 0x33662e6e722e616d,0x2c32303466252032,0x202c333833662520,0x25202c3938326625\n"
".quad 0x656e0a3b31303466,0x6625203233662e67,0x326625202c333034,0x2e616d660a3b3336\n"
".quad 0x25203233662e6e72,0x6625202c34303466,0x326625202c333034,0x30346625202c3638\n"
".quad 0x20636f6c2e0a3b32,0x3120323338312032,0x2e6e722e616d660a,0x3034662520323366\n"
".quad 0x3936326625202c35,0x303045336630202c,0x6625202c30303030,0x616d660a3b343034\n"
".quad 0x203233662e6e722e,0x25202c3630346625,0x6630202c34383266,0x3030303030304533\n"
".quad 0x3b3530346625202c,0x3233662e6275730a,0x202c373034662520,0x6625202c39386625\n"
".quad 0x616d660a3b363034,0x203233662e6e722e,0x25202c3830346625,0x6625202c32353366\n"
".quad 0x336625202c353932,0x636f6c2e0a3b3732,0x2032333831203220,0x6e722e616d660a31\n"
".quad 0x346625203233662e,0x37316625202c3930,0x4343336630202c37,0x25202c4443434343\n"
".quad 0x6d660a3b38303466,0x3233662e6e722e61,0x202c303134662520,0x30202c3339326625\n"
".quad 0x3030303030304366,0x3930346625202c30,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x39326625202c3131,0x3030436630202c31,0x25202c3030303030,0x656e0a3b30313466\n"
".quad 0x6625203233662e67,0x326625202c323134,0x2e616d660a3b3935,0x25203233662e6e72\n"
".quad 0x6625202c33313466,0x326625202c323134,0x31346625202c3538,0x722e616d660a3b31\n"
".quad 0x6625203233662e6e,0x336625202c343134,0x38326625202c3633,0x3331346625202c37\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x39336625202c3531,0x3738326625202c35\n"
".quad 0x3b3431346625202c,0x203220636f6c2e0a,0x730a312032333831,0x25203233662e6275\n"
".quad 0x6625202c36313466,0x3531346625202c38,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x39326625202c3731,0x3830346630202c37,0x25202c3030303030,0x6d660a3b33303366\n"
".quad 0x3233662e6e722e61,0x202c383134662520,0x25202c3031336625,0x6625202c32393266\n"
".quad 0x6f6c2e0a3b373134,0x3233383120322063,0x662e6464610a3120,0x3931346625203233\n"
".quad 0x2c3831346625202c,0x0a3b323133662520,0x662e6e722e616d66,0x3032346625203233\n"
".quad 0x2c3437336625202c,0x202c303932662520,0x2e0a3b3931346625,0x3831203220636f6c\n"
".quad 0x6464610a31203233,0x346625203233662e,0x32346625202c3132,0x3637336625202c30\n"
".quad 0x33662e6275730a3b,0x2c32323466252032,0x6625202c39662520,0x67656e0a3b313234\n"
".quad 0x346625203233662e,0x37316625202c3332,0x722e616d660a3b37,0x6625203233662e6e\n"
".quad 0x346625202c343234,0x39326625202c3332,0x3832336625202c35,0x3220636f6c2e0a3b\n"
".quad 0x0a31203233383120,0x662e6e722e616d66,0x3532346625203233,0x2c3230326625202c\n"
".quad 0x202c323932662520,0x660a3b3432346625,0x33662e6e722e616d,0x2c36323466252032\n"
".quad 0x202c333232662520,0x4538333643336630,0x32346625202c3933,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x336625202c373234,0x39326625202c3437,0x3632346625202c30\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x38336625202c3832,0x3938326625202c33\n"
".quad 0x3b3732346625202c,0x2e6e722e616d660a,0x3234662520323366,0x3330346625202c39\n"
".quad 0x2c3638326625202c,0x0a3b383234662520,0x662e6e722e616d66,0x3033346625203233\n"
".quad 0x2c3834336625202c,0x202c373832662520,0x660a3b3932346625,0x33662e6e722e616d\n"
".quad 0x2c31333466252032,0x202c353933662520,0x25202c3738326625,0x6c2e0a3b30333466\n"
".quad 0x333831203220636f,0x2e6275730a312032,0x3334662520323366,0x2c31376625202c32\n"
".quad 0x0a3b313334662520,0x662e6e722e616d66,0x3333346625203233,0x2c3332346625202c\n"
".quad 0x202c353932662520,0x2e0a3b3938336625,0x3831203220636f6c,0x616d660a31203233\n"
".quad 0x203233662e6e722e,0x25202c3433346625,0x6630202c33393266,0x3030303030303043\n"
".quad 0x3b3333346625202c,0x2e6e722e616d660a,0x3334662520323366,0x3139326625202c35\n"
".quad 0x303030436630202c,0x6625202c30303030,0x616d660a3b343334,0x203233662e6e722e\n"
".quad 0x25202c3633346625,0x6625202c32313466,0x346625202c353832,0x636f6c2e0a3b3533\n"
".quad 0x2032333831203220,0x6e722e616d660a31,0x346625203233662e,0x37326625202c3733\n"
".quad 0x3045336630202c37,0x25202c3030303030,0x6d660a3b36333466,0x3233662e6e722e61\n"
".quad 0x202c383334662520,0x30202c3438326625,0x3030303030453366,0x3733346625202c30\n"
".quad 0x33662e6275730a3b,0x2c39333466252032,0x25202c3031662520,0x6d660a3b38333466\n"
".quad 0x3233662e6e722e61,0x202c303434662520,0x25202c3332346625,0x6625202c35393266\n"
".quad 0x6f6c2e0a3b303433,0x3233383120322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x326625202c313434,0x39326625202c3230,0x3034346625202c32,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x32326625202c3234,0x3643336630202c33,0x25202c3933453833\n"
".quad 0x6d660a3b31343466,0x3233662e6e722e61,0x202c333434662520,0x25202c3437336625\n"
".quad 0x6625202c30393266,0x616d660a3b323434,0x203233662e6e722e,0x25202c3434346625\n"
".quad 0x6625202c33383366,0x346625202c393832,0x636f6c2e0a3b3334,0x2032333831203220\n"
".quad 0x6e722e616d660a31,0x346625203233662e,0x36326625202c3534,0x3638326625202c33\n"
".quad 0x3b3434346625202c,0x2e6e722e616d660a,0x3434662520323366,0x3936326625202c36\n"
".quad 0x303045336630202c,0x6625202c30303030,0x616d660a3b353434,0x203233662e6e722e\n"
".quad 0x25202c3734346625,0x6625202c35393366,0x346625202c373832,0x636f6c2e0a3b3634\n"
".quad 0x2032333831203220,0x33662e6275730a31,0x2c38343466252032,0x25202c3737662520\n"
".quad 0x6d660a3b37343466,0x3233662e6e722e61,0x202c393434662520,0x25202c3332346625\n"
".quad 0x6625202c35393266,0x6f6c2e0a3b383034,0x3233383120322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x326625202c303534,0x30436630202c3339,0x202c303030303030\n"
".quad 0x660a3b3934346625,0x33662e6e722e616d,0x2c31353466252032,0x202c313932662520\n"
".quad 0x3030303030436630,0x35346625202c3030,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x326625202c323534,0x45336630202c3935,0x202c303030303038,0x660a3b3135346625\n"
".quad 0x33662e6e722e616d,0x2c33353466252032,0x202c363333662520,0x25202c3738326625\n"
".quad 0x6c2e0a3b32353466,0x333831203220636f,0x2e616d660a312032,0x25203233662e6e72\n"
".quad 0x6625202c34353466,0x336630202c343832,0x2c30303030303045,0x0a3b333534662520\n"
".quad 0x203233662e627573,0x25202c3535346625,0x6625202c30313566,0x2e646c0a3b343534\n"
".quad 0x36752e6d61726170,0x3534336c72252034,0x4c38315a5f5b202c,0x416279685f645f52\n"
".quad 0x63726f665f444342,0x536d665f53665065,0x705f695f535f535f,0x3b5d335f6d617261\n"
".quad 0x203220636f6c2e0a,0x6d0a312038333731,0x36732e6f6c2e6461,0x2c39386c72252034\n"
".quad 0x25202c396c722520,0x25202c3534336c72,0x2e646c0a3b356c72,0x36752e6d61726170\n"
".quad 0x3334336c72252034,0x4c38315a5f5b202c,0x416279685f645f52,0x63726f665f444342\n"
".quad 0x536d665f53665065,0x705f695f535f535f,0x3b5d315f6d617261,0x6f742e617476630a\n"
".quad 0x2e6c61626f6c672e,0x396c722520343675,0x34336c7225202c30,0x622e6c68730a3b33\n"
".quad 0x31396c7225203436,0x2c39386c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x396c7225202c3239,0x2e0a3b3233202c31,0x3831203220636f6c,0x6c68730a31203633\n"
".quad 0x6c7225203436622e,0x396c7225202c3339,0x64610a3b32202c32,0x7225203436732e64\n"
".quad 0x6c7225202c34396c,0x396c7225202c3039,0x6c672e74730a3b33,0x3233662e6c61626f\n"
".quad 0x5d34396c72255b20,0x3b3130336625202c,0x3436732e6464610a,0x202c35396c722520\n"
".quad 0x3034202c396c7225,0x636f6c2e0a3b3639,0x2033393731203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x396c7225202c3639,0x34336c7225202c35,0x3b356c7225202c35\n"
".quad 0x3436622e6c68730a,0x202c37396c722520,0x33202c36396c7225,0x732e7268730a3b32\n"
".quad 0x38396c7225203436,0x2c37396c7225202c,0x6f6c2e0a3b323320,0x3339373120322063\n"
".quad 0x622e6c68730a3120,0x39396c7225203436,0x2c38396c7225202c,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x396c7225202c3030,0x39396c7225202c30,0x3220636f6c2e0a3b\n"
".quad 0x0a31203733383120,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3030316c72\n"
".quad 0x610a3b3830336625,0x25203436732e6464,0x25202c3130316c72,0x393138202c396c72\n"
".quad 0x20636f6c2e0a3b32,0x3120343937312032,0x2e6f6c2e64616d0a,0x316c722520343673\n"
".quad 0x316c7225202c3230,0x336c7225202c3130,0x356c7225202c3534,0x36622e6c68730a3b\n"
".quad 0x3330316c72252034,0x3230316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3430316c,0x3233202c3330316c,0x3220636f6c2e0a3b,0x0a31203439373120\n"
".quad 0x203436622e6c6873,0x202c3530316c7225,0x202c3430316c7225,0x732e6464610a3b32\n"
".quad 0x30316c7225203436,0x30396c7225202c36,0x3530316c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203833383120,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3630316c72\n"
".quad 0x610a3b3631336625,0x25203436732e6464,0x25202c3730316c72,0x323231202c396c72\n"
".quad 0x636f6c2e0a3b3838,0x2035393731203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c383031,0x6c7225202c373031,0x6c7225202c353433,0x622e6c68730a3b35\n"
".quad 0x30316c7225203436,0x30316c7225202c39,0x730a3b3233202c38,0x25203436732e7268\n"
".quad 0x25202c3031316c72,0x33202c3930316c72,0x20636f6c2e0a3b32,0x3120353937312032\n"
".quad 0x3436622e6c68730a,0x2c3131316c722520,0x2c3031316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x396c7225202c3231,0x31316c7225202c30,0x20636f6c2e0a3b31\n"
".quad 0x3120393338312032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3231316c7225\n"
".quad 0x0a3b303233662520,0x203436732e646461,0x202c3331316c7225,0x3631202c396c7225\n"
".quad 0x6f6c2e0a3b343833,0x3639373120322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3431316c,0x7225202c3331316c,0x7225202c3534336c,0x2e6c68730a3b356c\n"
".quad 0x316c722520343662,0x316c7225202c3531,0x0a3b3233202c3431,0x203436732e726873\n"
".quad 0x202c3631316c7225,0x202c3531316c7225,0x636f6c2e0a3b3233,0x2036393731203220\n"
".quad 0x36622e6c68730a31,0x3731316c72252034,0x3631316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c383131,0x316c7225202c3039,0x636f6c2e0a3b3731\n"
".quad 0x2030343831203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3831316c72255b\n"
".quad 0x3b3632336625202c,0x3436732e6464610a,0x2c3931316c722520,0x32202c396c722520\n"
".quad 0x6c2e0a3b30383430,0x393731203220636f,0x2e64616d0a312037,0x25203436732e6f6c\n"
".quad 0x25202c3032316c72,0x25202c3931316c72,0x25202c3534336c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c313231,0x3b3233202c303231,0x3436732e7268730a\n"
".quad 0x2c3232316c722520,0x2c3132316c722520,0x6f6c2e0a3b323320,0x3739373120322063\n"
".quad 0x622e6c68730a3120,0x32316c7225203436,0x32316c7225202c33,0x64610a3b32202c32\n"
".quad 0x7225203436732e64,0x7225202c3432316c,0x6c7225202c30396c,0x6f6c2e0a3b333231\n"
".quad 0x3134383120322063,0x6c672e74730a3120,0x3233662e6c61626f,0x3432316c72255b20\n"
".quad 0x3833336625202c5d,0x36732e6464610a3b,0x3532316c72252034,0x202c396c7225202c\n"
".quad 0x2e0a3b3637353432,0x3731203220636f6c,0x64616d0a31203839,0x203436732e6f6c2e\n"
".quad 0x202c3632316c7225,0x202c3532316c7225,0x202c3534336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3732316c,0x3233202c3632316c,0x36732e7268730a3b\n"
".quad 0x3832316c72252034,0x3732316c7225202c,0x6c2e0a3b3233202c,0x393731203220636f\n"
".quad 0x2e6c68730a312038,0x316c722520343662,0x316c7225202c3932,0x610a3b32202c3832\n"
".quad 0x25203436732e6464,0x25202c3033316c72,0x7225202c30396c72,0x6c2e0a3b3932316c\n"
".quad 0x343831203220636f,0x672e74730a312032,0x33662e6c61626f6c,0x33316c72255b2032\n"
".quad 0x35336625202c5d30,0x732e6464610a3b31,0x33316c7225203436,0x2c396c7225202c31\n"
".quad 0x0a3b323736383220,0x31203220636f6c2e,0x616d0a3120393937,0x3436732e6f6c2e64\n"
".quad 0x2c3233316c722520,0x2c3133316c722520,0x2c3534336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3333316c72,0x33202c3233316c72,0x732e7268730a3b32\n"
".quad 0x33316c7225203436,0x33316c7225202c34,0x2e0a3b3233202c33,0x3731203220636f6c\n"
".quad 0x6c68730a31203939,0x6c7225203436622e,0x6c7225202c353331,0x0a3b32202c343331\n"
".quad 0x203436732e646461,0x202c3633316c7225,0x25202c30396c7225,0x2e0a3b3533316c72\n"
".quad 0x3831203220636f6c,0x2e74730a31203334,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x336625202c5d3633,0x2e6464610a3b3136,0x316c722520343673,0x396c7225202c3733\n"
".quad 0x3b3836373233202c,0x203220636f6c2e0a,0x6d0a312030303831,0x36732e6f6c2e6461\n"
".quad 0x3833316c72252034,0x3733316c7225202c,0x3534336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3933316c7225,0x202c3833316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3034,0x0a3b3233202c3933,0x31203220636f6c2e\n"
".quad 0x68730a3120303038,0x7225203436622e6c,0x7225202c3134316c,0x3b32202c3034316c\n"
".quad 0x3436732e6464610a,0x2c3234316c722520,0x202c30396c722520,0x0a3b3134316c7225\n"
".quad 0x31203220636f6c2e,0x74730a3120343438,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d323431,0x6464610a3b303733,0x6c7225203436732e,0x6c7225202c333431\n"
".quad 0x3436383633202c39,0x3220636f6c2e0a3b,0x0a31203130383120,0x732e6f6c2e64616d\n"
".quad 0x34316c7225203436,0x34316c7225202c34,0x34336c7225202c33,0x3b356c7225202c35\n"
".quad 0x3436622e6c68730a,0x2c3534316c722520,0x2c3434316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c363431,0x3b3233202c353431,0x203220636f6c2e0a\n"
".quad 0x730a312031303831,0x25203436622e6c68,0x25202c3734316c72,0x32202c3634316c72\n"
".quad 0x36732e6464610a3b,0x3834316c72252034,0x2c30396c7225202c,0x3b3734316c722520\n"
".quad 0x203220636f6c2e0a,0x730a312035343831,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3834316c,0x64610a3b38373366,0x7225203436732e64,0x7225202c3934316c\n"
".quad 0x36393034202c396c,0x20636f6c2e0a3b30,0x3120323038312032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3035,0x336c7225202c3934,0x356c7225202c3534\n"
".quad 0x36622e6c68730a3b,0x3135316c72252034,0x3035316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3235316c,0x3233202c3135316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203230383120,0x203436622e6c6873,0x202c3335316c7225,0x202c3235316c7225\n"
".quad 0x732e6464610a3b32,0x35316c7225203436,0x30396c7225202c34,0x3335316c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203634383120,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3435316c72,0x610a3b3838336625,0x25203436732e6464,0x25202c3535316c72\n"
".quad 0x303534202c396c72,0x636f6c2e0a3b3635,0x2033303831203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c363531,0x6c7225202c353531,0x6c7225202c353433\n"
".quad 0x622e6c68730a3b35,0x35316c7225203436,0x35316c7225202c37,0x730a3b3233202c36\n"
".quad 0x25203436732e7268,0x25202c3835316c72,0x33202c3735316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120333038312032,0x3436622e6c68730a,0x2c3935316c722520,0x2c3835316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x396c7225202c3036,0x35316c7225202c30\n"
".quad 0x20636f6c2e0a3b39,0x3120373438312032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3036316c7225,0x0a3b373933662520,0x203436732e646461,0x202c3136316c7225\n"
".quad 0x3934202c396c7225,0x6f6c2e0a3b323531,0x3430383120322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3236316c,0x7225202c3136316c,0x7225202c3534336c\n"
".quad 0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3336,0x0a3b3233202c3236\n"
".quad 0x203436732e726873,0x202c3436316c7225,0x202c3336316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2034303831203220,0x36622e6c68730a31,0x3536316c72252034,0x3436316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c363631,0x316c7225202c3039\n"
".quad 0x636f6c2e0a3b3536,0x2038343831203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x5d3636316c72255b,0x3b3730346625202c,0x3436732e6464610a,0x2c3736316c722520\n"
".quad 0x35202c396c722520,0x6c2e0a3b38343233,0x303831203220636f,0x2e64616d0a312035\n"
".quad 0x25203436732e6f6c,0x25202c3836316c72,0x25202c3736316c72,0x25202c3534336c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c393631,0x3b3233202c383631\n"
".quad 0x3436732e7268730a,0x2c3037316c722520,0x2c3936316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3530383120322063,0x622e6c68730a3120,0x37316c7225203436,0x37316c7225202c31\n"
".quad 0x64610a3b32202c30,0x7225203436732e64,0x7225202c3237316c,0x6c7225202c30396c\n"
".quad 0x6f6c2e0a3b313731,0x3934383120322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3237316c72255b20,0x3631346625202c5d,0x36732e6464610a3b,0x3337316c72252034\n"
".quad 0x202c396c7225202c,0x2e0a3b3434333735,0x3831203220636f6c,0x64616d0a31203630\n"
".quad 0x203436732e6f6c2e,0x202c3437316c7225,0x202c3337316c7225,0x202c3534336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3537316c,0x3233202c3437316c\n"
".quad 0x36732e7268730a3b,0x3637316c72252034,0x3537316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x303831203220636f,0x2e6c68730a312036,0x316c722520343662,0x316c7225202c3737\n"
".quad 0x610a3b32202c3637,0x25203436732e6464,0x25202c3837316c72,0x7225202c30396c72\n"
".quad 0x6c2e0a3b3737316c,0x353831203220636f,0x672e74730a312030,0x33662e6c61626f6c\n"
".quad 0x37316c72255b2032,0x32346625202c5d38,0x732e6464610a3b32,0x37316c7225203436\n"
".quad 0x2c396c7225202c39,0x0a3b303434313620,0x31203220636f6c2e,0x616d0a3120373038\n"
".quad 0x3436732e6f6c2e64,0x2c3038316c722520,0x2c3937316c722520,0x2c3534336c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3138316c72,0x33202c3038316c72\n"
".quad 0x732e7268730a3b32,0x38316c7225203436,0x38316c7225202c32,0x2e0a3b3233202c31\n"
".quad 0x3831203220636f6c,0x6c68730a31203730,0x6c7225203436622e,0x6c7225202c333831\n"
".quad 0x0a3b32202c323831,0x203436732e646461,0x202c3438316c7225,0x25202c30396c7225\n"
".quad 0x2e0a3b3338316c72,0x3831203220636f6c,0x2e74730a31203135,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x346625202c5d3438,0x2e6464610a3b3233,0x316c722520343673\n"
".quad 0x396c7225202c3538,0x3b3633353536202c,0x203220636f6c2e0a,0x6d0a312038303831\n"
".quad 0x36732e6f6c2e6461,0x3638316c72252034,0x3538316c7225202c,0x3534336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3738316c7225,0x202c3638316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3838,0x0a3b3233202c3738\n"
".quad 0x31203220636f6c2e,0x68730a3120383038,0x7225203436622e6c,0x7225202c3938316c\n"
".quad 0x3b32202c3838316c,0x3436732e6464610a,0x2c3039316c722520,0x202c30396c722520\n"
".quad 0x0a3b3938316c7225,0x31203220636f6c2e,0x74730a3120323538,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d303931,0x6464610a3b393334,0x6c7225203436732e\n"
".quad 0x6c7225202c313931,0x3233363936202c39,0x3220636f6c2e0a3b,0x0a31203930383120\n"
".quad 0x732e6f6c2e64616d,0x39316c7225203436,0x39316c7225202c32,0x34336c7225202c31\n"
".quad 0x3b356c7225202c35,0x3436622e6c68730a,0x2c3339316c722520,0x2c3239316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c343931,0x3b3233202c333931\n"
".quad 0x203220636f6c2e0a,0x730a312039303831,0x25203436622e6c68,0x25202c3539316c72\n"
".quad 0x32202c3439316c72,0x36732e6464610a3b,0x3639316c72252034,0x2c30396c7225202c\n"
".quad 0x3b3539316c722520,0x203220636f6c2e0a,0x730a312033353831,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3639316c,0x64610a3b38343466,0x7225203436732e64\n"
".quad 0x7225202c3739316c,0x32373337202c396c,0x20636f6c2e0a3b38,0x3120303138312032\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3839,0x336c7225202c3739\n"
".quad 0x356c7225202c3534,0x36622e6c68730a3b,0x3939316c72252034,0x3839316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3030326c,0x3233202c3939316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203031383120,0x203436622e6c6873,0x202c3130326c7225\n"
".quad 0x202c3030326c7225,0x732e6464610a3b32,0x30326c7225203436,0x30396c7225202c32\n"
".quad 0x3130326c7225202c,0x3220636f6c2e0a3b,0x0a31203435383120,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3230326c72,0x620a3b3535346625,0x4220696e752e6172\n"
".quad 0x0a0a3b385f373142,0x0a3a345f37314242,0x31203220636f6c2e,0x25400a3120363737\n"
".quad 0x4220617262203170,0x0a0a3b365f373142,0x31203220636f6c2e,0x6f6d0a3120323337\n"
".quad 0x7225203233752e76,0x697425202c343631,0x6c756d0a3b782e64,0x33752e656469772e\n"
".quad 0x3330326c72252032,0x2c3436317225202c,0x2e766f6d0a3b3420,0x326c722520343675\n"
".quad 0x75635f5f202c3430,0x6c61636f6c5f6164,0x3137335f7261765f,0x6f6e5f32335f3634\n"
".quad 0x5f74736e6f635f6e,0x64610a3b586d7573,0x7225203436732e64,0x7225202c3530326c\n"
".quad 0x7225202c3430326c,0x6c2e0a3b3330326c,0x383731203220636f,0x732e74730a312039\n"
".quad 0x33752e6465726168,0x30326c72255b2032,0x30327225202c5d35,0x36752e766f6d0a3b\n"
".quad 0x3630326c72252034,0x616475635f5f202c,0x765f6c61636f6c5f,0x36343137335f7261\n"
".quad 0x5f6e6f6e5f32345f,0x75735f74736e6f63,0x2e6464610a3b596d,0x326c722520343673\n"
".quad 0x326c7225202c3730,0x326c7225202c3630,0x636f6c2e0a3b3330,0x2030393731203220\n"
".quad 0x6168732e74730a31,0x203233752e646572,0x5d3730326c72255b,0x0a3b30327225202c\n"
".quad 0x203436752e766f6d,0x202c3830326c7225,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x355f36343137335f,0x6f635f6e6f6e5f32,0x5a6d75735f74736e,0x36732e6464610a3b\n"
".quad 0x3930326c72252034,0x3830326c7225202c,0x3330326c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203139373120,0x65726168732e7473,0x255b203233752e64,0x202c5d3930326c72\n"
".quad 0x72620a3b30327225,0x424220696e752e61,0x420a0a3b375f3731,0x6d0a3a365f373142\n"
".quad 0x25203233752e766f,0x3b31202c30313172,0x203220636f6c2e0a,0x730a312037373731\n"
".quad 0x6465726168732e74,0x5f5f5b203233752e,0x636f6c5f61647563,0x335f7261765f6c61\n"
".quad 0x5f30335f37343137,0x736e6f635f6e6f6e,0x5d6b636568635f74,0x3b3031317225202c\n"
".quad 0x203220636f6c2e0a,0x610a312031383731,0x25203233662e6464,0x6625202c36353466\n"
".quad 0x35336625202c3533,0x6e722e616d660a3b,0x346625203233662e,0x31346625202c3735\n"
".quad 0x303030436630202c,0x6625202c30303030,0x6464610a3b363534,0x346625203233662e\n"
".quad 0x37346625202c3835,0x0a3b37346625202c,0x203233662e646461,0x25202c3935346625\n"
".quad 0x6625202c37353466,0x6464610a3b383534,0x346625203233662e,0x35366625202c3036\n"
".quad 0x0a3b35366625202c,0x203233662e646461,0x25202c3136346625,0x6625202c39353466\n"
".quad 0x6464610a3b303634,0x346625203233662e,0x33356625202c3236,0x0a3b33356625202c\n"
".quad 0x203233662e627573,0x25202c3336346625,0x6625202c31363466,0x6f6c2e0a3b323634\n"
".quad 0x3238373120322063,0x662e6464610a3120,0x3436346625203233,0x202c33386625202c\n"
".quad 0x6f6d0a3b33386625,0x6625203233662e76,0x436630202c353634,0x3b30303030303030\n"
".quad 0x203220636f6c2e0a,0x660a312032383731,0x33662e6e722e616d,0x2c36363466252032\n"
".quad 0x30202c3935662520,0x3030303030304366,0x3436346625202c30,0x33662e6464610a3b\n"
".quad 0x2c37363466252032,0x25202c3938662520,0x6275730a3b393866,0x346625203233662e\n"
".quad 0x36346625202c3836,0x3736346625202c36,0x33662e6464610a3b,0x2c39363466252032\n"
".quad 0x25202c3137662520,0x6464610a3b313766,0x346625203233662e,0x36346625202c3037\n"
".quad 0x3936346625202c38,0x33662e6464610a3b,0x2c31373466252032,0x25202c3737662520\n"
".quad 0x6275730a3b373766,0x346625203233662e,0x37346625202c3237,0x3137346625202c30\n"
".quad 0x33662e6464610a3b,0x2c33373466252032,0x202c333634662520,0x2e0a3b3237346625\n"
".quad 0x3731203220636f6c,0x766f6d0a31203233,0x317225203233752e,0x64697425202c3236\n"
".quad 0x2e6c756d0a3b782e,0x3233752e65646977,0x2c3031326c722520,0x202c323631722520\n"
".quad 0x752e766f6d0a3b34,0x31326c7225203436,0x6475635f5f202c31,0x5f6c61636f6c5f61\n"
".quad 0x343137335f726176,0x6e6f6e5f32335f36,0x735f74736e6f635f,0x6464610a3b586d75\n"
".quad 0x6c7225203436732e,0x6c7225202c323132,0x6c7225202c313132,0x6f6c2e0a3b303132\n"
".quad 0x3238373120322063,0x68732e74730a3120,0x3233662e64657261,0x3231326c72255b20\n"
".quad 0x3337346625202c5d,0x3220636f6c2e0a3b,0x0a31203338373120,0x203233662e646461\n"
".quad 0x25202c3437346625,0x3b356625202c3566,0x3233662e6464610a,0x202c353734662520\n"
".quad 0x346625202c346625,0x33662e6275730a3b,0x2c36373466252032,0x202c353734662520\n"
".quad 0x610a3b3437346625,0x25203233662e6464,0x6625202c37373466,0x346625202c363734\n"
".quad 0x2e6275730a3b3835,0x3734662520323366,0x3737346625202c38,0x3b3036346625202c\n"
".quad 0x3233662e6464610a,0x202c393734662520,0x25202c3837346625,0x6c2e0a3b32363466\n"
".quad 0x383731203220636f,0x2e6464610a312034,0x3834662520323366,0x202c376625202c30\n"
".quad 0x616d660a3b376625,0x203233662e6e722e,0x25202c3138346625,0x436630202c393566\n"
".quad 0x2c30303030303030,0x0a3b303834662520,0x203233662e646461,0x25202c3238346625\n"
".quad 0x3b386625202c3866,0x3233662e6275730a,0x202c333834662520,0x25202c3138346625\n"
".quad 0x64610a3b32383466,0x6625203233662e64,0x316625202c343834,0x3b30316625202c30\n"
".quad 0x3233662e6464610a,0x202c353834662520,0x25202c3338346625,0x64610a3b34383466\n"
".quad 0x6625203233662e64,0x356625202c363834,0x31356625202c3031,0x662e6275730a3b30\n"
".quad 0x3738346625203233,0x2c3538346625202c,0x0a3b363834662520,0x203233662e646461\n"
".quad 0x25202c3838346625,0x6625202c39373466,0x766f6d0a3b373834,0x6c7225203436752e\n"
".quad 0x635f5f202c333132,0x61636f6c5f616475,0x37335f7261765f6c,0x6e5f32345f363431\n"
".quad 0x74736e6f635f6e6f,0x610a3b596d75735f,0x25203436732e6464,0x25202c3431326c72\n"
".quad 0x25202c3331326c72,0x2e0a3b3031326c72,0x3731203220636f6c,0x2e74730a31203438\n"
".quad 0x662e646572616873,0x326c72255b203233,0x346625202c5d3431,0x636f6c2e0a3b3838\n"
".quad 0x2035383731203220,0x33662e6464610a31,0x2c39383466252032,0x6625202c36662520\n"
".quad 0x662e6464610a3b36,0x3039346625203233,0x2c3938346625202c,0x0a3b343634662520\n"
".quad 0x203233662e646461,0x25202c3139346625,0x6625202c30393466,0x6464610a3b303834\n"
".quad 0x346625203233662e,0x39346625202c3239,0x3736346625202c31,0x33662e6464610a3b\n"
".quad 0x2c33393466252032,0x202c323934662520,0x2e0a3b3238346625,0x3731203220636f6c\n"
".quad 0x67656e0a31203638,0x346625203233662e,0x36346625202c3439,0x722e616d660a3b39\n"
".quad 0x6625203233662e6e,0x396625202c353934,0x2c3536346625202c,0x0a3b343934662520\n"
".quad 0x203233662e627573,0x25202c3639346625,0x6625202c35393466,0x6275730a3b343834\n"
".quad 0x346625203233662e,0x39346625202c3739,0x3137346625202c36,0x33662e6275730a3b\n"
".quad 0x2c38393466252032,0x202c373934662520,0x610a3b3638346625,0x25203233662e6464\n"
".quad 0x6625202c39393466,0x346625202c333934,0x2e766f6d0a3b3839,0x326c722520343675\n"
".quad 0x75635f5f202c3531,0x6c61636f6c5f6164,0x3137335f7261765f,0x6f6e5f32355f3634\n"
".quad 0x5f74736e6f635f6e,0x64610a3b5a6d7573,0x7225203436732e64,0x7225202c3631326c\n"
".quad 0x7225202c3531326c,0x6c2e0a3b3031326c,0x383731203220636f,0x732e74730a312036\n"
".quad 0x33662e6465726168,0x31326c72255b2032,0x39346625202c5d36,0x373142420a0a3b39\n"
".quad 0x2e6464610a3a375f,0x326c722520343673,0x366c7225202c3931,0x0a3b376c7225202c\n"
".quad 0x203436732e646461,0x202c3032326c7225,0x202c3931326c7225,0x6c2e0a3b36393034\n"
".quad 0x333731203220636f,0x2e766f6d0a312032,0x3231722520323375,0x6469746e25202c35\n"
".quad 0x2e766f6d0a3b782e,0x3631722520323375,0x6961746325202c31,0x766f6d0a3b782e64\n"
".quad 0x317225203233752e,0x64697425202c3336,0x2e64616d0a3b782e,0x25203233732e6f6c\n"
".quad 0x7225202c37323172,0x317225202c353231,0x36317225202c3136,0x752e7476630a3b33\n"
".quad 0x25203233752e3436,0x25202c3132326c72,0x646c0a3b37323172,0x752e6d617261702e\n"
".quad 0x34336c7225203436,0x38315a5f5b202c34,0x6279685f645f524c,0x726f665f44434241\n"
".quad 0x6d665f5366506563,0x5f695f535f535f53,0x5d335f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x0a31203339373120,0x732e6f6c2e64616d,0x32326c7225203436,0x32326c7225202c32\n"
".quad 0x34336c7225202c30,0x32326c7225202c34,0x61702e646c0a3b31,0x203436752e6d6172\n"
".quad 0x202c3234336c7225,0x5f524c38315a5f5b,0x4342416279685f64,0x506563726f665f44\n"
".quad 0x535f536d665f5366,0x7261705f695f535f,0x630a3b5d315f6d61,0x672e6f742e617476\n"
".quad 0x36752e6c61626f6c,0x3332326c72252034,0x3234336c7225202c,0x36622e6c68730a3b\n"
".quad 0x3432326c72252034,0x3232326c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3532326c,0x3233202c3432326c,0x3220636f6c2e0a3b,0x0a31203339373120\n"
".quad 0x203436622e6c6873,0x202c3632326c7225,0x202c3532326c7225,0x732e6464610a3b32\n"
".quad 0x32326c7225203436,0x32326c7225202c37,0x32326c7225202c33,0x6c672e74730a3b36\n"
".quad 0x3233662e6c61626f,0x3732326c72255b20,0x3b31346625202c5d,0x3436732e6464610a\n"
".quad 0x2c3832326c722520,0x2c3931326c722520,0x2e0a3b3239313820,0x3731203220636f6c\n"
".quad 0x64616d0a31203439,0x203436732e6f6c2e,0x202c3932326c7225,0x202c3832326c7225\n"
".quad 0x202c3434336c7225,0x0a3b3132326c7225,0x203436622e6c6873,0x202c3033326c7225\n"
".quad 0x202c3932326c7225,0x2e7268730a3b3233,0x326c722520343673,0x326c7225202c3133\n"
".quad 0x0a3b3233202c3033,0x31203220636f6c2e,0x68730a3120343937,0x7225203436622e6c\n"
".quad 0x7225202c3233326c,0x3b32202c3133326c,0x3436732e6464610a,0x2c3333326c722520\n"
".quad 0x2c3332326c722520,0x3b3233326c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3333326c7225,0x64610a3b35662520,0x7225203436732e64,0x7225202c3433326c\n"
".quad 0x3231202c3931326c,0x6f6c2e0a3b383832,0x3539373120322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3533326c,0x7225202c3433326c,0x7225202c3434336c\n"
".quad 0x68730a3b3132326c,0x7225203436622e6c,0x7225202c3633326c,0x3233202c3533326c\n"
".quad 0x36732e7268730a3b,0x3733326c72252034,0x3633326c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x393731203220636f,0x2e6c68730a312035,0x326c722520343662,0x326c7225202c3833\n"
".quad 0x610a3b32202c3733,0x25203436732e6464,0x25202c3933326c72,0x25202c3332326c72\n"
".quad 0x730a3b3833326c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3933326c\n"
".quad 0x6464610a3b353366,0x6c7225203436732e,0x6c7225202c303432,0x333631202c393132\n"
".quad 0x636f6c2e0a3b3438,0x2036393731203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c313432,0x6c7225202c303432,0x6c7225202c343433,0x6c68730a3b313232\n"
".quad 0x6c7225203436622e,0x6c7225202c323432,0x3b3233202c313432,0x3436732e7268730a\n"
".quad 0x2c3334326c722520,0x2c3234326c722520,0x6f6c2e0a3b323320,0x3639373120322063\n"
".quad 0x622e6c68730a3120,0x34326c7225203436,0x34326c7225202c34,0x64610a3b32202c33\n"
".quad 0x7225203436732e64,0x7225202c3534326c,0x7225202c3332326c,0x74730a3b3434326c\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d353432,0x732e6464610a3b34\n"
".quad 0x34326c7225203436,0x31326c7225202c36,0x3038343032202c39,0x3220636f6c2e0a3b\n"
".quad 0x0a31203739373120,0x732e6f6c2e64616d,0x34326c7225203436,0x34326c7225202c37\n"
".quad 0x34336c7225202c36,0x32326c7225202c34,0x622e6c68730a3b31,0x34326c7225203436\n"
".quad 0x34326c7225202c38,0x730a3b3233202c37,0x25203436732e7268,0x25202c3934326c72\n"
".quad 0x33202c3834326c72,0x20636f6c2e0a3b32,0x3120373937312032,0x3436622e6c68730a\n"
".quad 0x2c3035326c722520,0x2c3934326c722520,0x2e6464610a3b3220,0x326c722520343673\n"
".quad 0x326c7225202c3135,0x326c7225202c3332,0x672e74730a3b3035,0x33662e6c61626f6c\n"
".quad 0x35326c72255b2032,0x39356625202c5d31,0x36732e6464610a3b,0x3235326c72252034\n"
".quad 0x3931326c7225202c,0x3b3637353432202c,0x203220636f6c2e0a,0x6d0a312038393731\n"
".quad 0x36732e6f6c2e6461,0x3335326c72252034,0x3235326c7225202c,0x3434336c7225202c\n"
".quad 0x3132326c7225202c,0x36622e6c68730a3b,0x3435326c72252034,0x3335326c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3535326c,0x3233202c3435326c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203839373120,0x203436622e6c6873,0x202c3635326c7225\n"
".quad 0x202c3535326c7225,0x732e6464610a3b32,0x35326c7225203436,0x32326c7225202c37\n"
".quad 0x35326c7225202c33,0x6c672e74730a3b36,0x3233662e6c61626f,0x3735326c72255b20\n"
".quad 0x3b35366625202c5d,0x3436732e6464610a,0x2c3835326c722520,0x2c3931326c722520\n"
".quad 0x0a3b323736383220,0x31203220636f6c2e,0x616d0a3120393937,0x3436732e6f6c2e64\n"
".quad 0x2c3935326c722520,0x2c3835326c722520,0x2c3434336c722520,0x3b3132326c722520\n"
".quad 0x3436622e6c68730a,0x2c3036326c722520,0x2c3935326c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c313632,0x3b3233202c303632,0x203220636f6c2e0a\n"
".quad 0x730a312039393731,0x25203436622e6c68,0x25202c3236326c72,0x32202c3136326c72\n"
".quad 0x36732e6464610a3b,0x3336326c72252034,0x3332326c7225202c,0x3236326c7225202c\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3336326c72255b,0x0a3b37346625202c\n"
".quad 0x203436732e646461,0x202c3436326c7225,0x202c3931326c7225,0x2e0a3b3836373233\n"
".quad 0x3831203220636f6c,0x64616d0a31203030,0x203436732e6f6c2e,0x202c3536326c7225\n"
".quad 0x202c3436326c7225,0x202c3434336c7225,0x0a3b3132326c7225,0x203436622e6c6873\n"
".quad 0x202c3636326c7225,0x202c3536326c7225,0x2e7268730a3b3233,0x326c722520343673\n"
".quad 0x326c7225202c3736,0x0a3b3233202c3636,0x31203220636f6c2e,0x68730a3120303038\n"
".quad 0x7225203436622e6c,0x7225202c3836326c,0x3b32202c3736326c,0x3436732e6464610a\n"
".quad 0x2c3936326c722520,0x2c3332326c722520,0x3b3836326c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3936326c7225,0x610a3b3335662520,0x25203436732e6464\n"
".quad 0x25202c3037326c72,0x33202c3931326c72,0x6c2e0a3b34363836,0x303831203220636f\n"
".quad 0x2e64616d0a312031,0x25203436732e6f6c,0x25202c3137326c72,0x25202c3037326c72\n"
".quad 0x25202c3434336c72,0x730a3b3132326c72,0x25203436622e6c68,0x25202c3237326c72\n"
".quad 0x33202c3137326c72,0x732e7268730a3b32,0x37326c7225203436,0x37326c7225202c33\n"
".quad 0x2e0a3b3233202c32,0x3831203220636f6c,0x6c68730a31203130,0x6c7225203436622e\n"
".quad 0x6c7225202c343732,0x0a3b32202c333732,0x203436732e646461,0x202c3537326c7225\n"
".quad 0x202c3332326c7225,0x0a3b3437326c7225,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3537326c72,0x6464610a3b396625,0x6c7225203436732e,0x6c7225202c363732\n"
".quad 0x393034202c393132,0x636f6c2e0a3b3036,0x2032303831203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c373732,0x6c7225202c363732,0x6c7225202c343433\n"
".quad 0x6c68730a3b313232,0x6c7225203436622e,0x6c7225202c383732,0x3b3233202c373732\n"
".quad 0x3436732e7268730a,0x2c3937326c722520,0x2c3837326c722520,0x6f6c2e0a3b323320\n"
".quad 0x3230383120322063,0x622e6c68730a3120,0x38326c7225203436,0x37326c7225202c30\n"
".quad 0x64610a3b32202c39,0x7225203436732e64,0x7225202c3138326c,0x7225202c3332326c\n"
".quad 0x74730a3b3038326c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d313832\n"
".quad 0x2e6464610a3b3737,0x326c722520343673,0x326c7225202c3238,0x35303534202c3931\n"
".quad 0x20636f6c2e0a3b36,0x3120333038312032,0x2e6f6c2e64616d0a,0x326c722520343673\n"
".quad 0x326c7225202c3338,0x336c7225202c3238,0x326c7225202c3434,0x2e6c68730a3b3132\n"
".quad 0x326c722520343662,0x326c7225202c3438,0x0a3b3233202c3338,0x203436732e726873\n"
".quad 0x202c3538326c7225,0x202c3438326c7225,0x636f6c2e0a3b3233,0x2033303831203220\n"
".quad 0x36622e6c68730a31,0x3638326c72252034,0x3538326c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c373832,0x6c7225202c333232,0x2e74730a3b363832\n"
".quad 0x662e6c61626f6c67,0x326c72255b203233,0x356625202c5d3738,0x2e6464610a3b3031\n"
".quad 0x326c722520343673,0x326c7225202c3838,0x35313934202c3931,0x20636f6c2e0a3b32\n"
".quad 0x3120343038312032,0x2e6f6c2e64616d0a,0x326c722520343673,0x326c7225202c3938\n"
".quad 0x336c7225202c3838,0x326c7225202c3434,0x2e6c68730a3b3132,0x326c722520343662\n"
".quad 0x326c7225202c3039,0x0a3b3233202c3938,0x203436732e726873,0x202c3139326c7225\n"
".quad 0x202c3039326c7225,0x636f6c2e0a3b3233,0x2034303831203220,0x36622e6c68730a31\n"
".quad 0x3239326c72252034,0x3139326c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c333932,0x6c7225202c333232,0x2e74730a3b323932,0x662e6c61626f6c67\n"
".quad 0x326c72255b203233,0x376625202c5d3339,0x732e6464610a3b31,0x39326c7225203436\n"
".quad 0x31326c7225202c34,0x3834323335202c39,0x3220636f6c2e0a3b,0x0a31203530383120\n"
".quad 0x732e6f6c2e64616d,0x39326c7225203436,0x39326c7225202c35,0x34336c7225202c34\n"
".quad 0x32326c7225202c34,0x622e6c68730a3b31,0x39326c7225203436,0x39326c7225202c36\n"
".quad 0x730a3b3233202c35,0x25203436732e7268,0x25202c3739326c72,0x33202c3639326c72\n"
".quad 0x20636f6c2e0a3b32,0x3120353038312032,0x3436622e6c68730a,0x2c3839326c722520\n"
".quad 0x2c3739326c722520,0x2e6464610a3b3220,0x326c722520343673,0x326c7225202c3939\n"
".quad 0x326c7225202c3332,0x672e74730a3b3839,0x33662e6c61626f6c,0x39326c72255b2032\n"
".quad 0x30316625202c5d39,0x36732e6464610a3b,0x3030336c72252034,0x3931326c7225202c\n"
".quad 0x3b3434333735202c,0x203220636f6c2e0a,0x6d0a312036303831,0x36732e6f6c2e6461\n"
".quad 0x3130336c72252034,0x3030336c7225202c,0x3434336c7225202c,0x3132326c7225202c\n"
".quad 0x36622e6c68730a3b,0x3230336c72252034,0x3130336c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3330336c,0x3233202c3230336c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203630383120,0x203436622e6c6873,0x202c3430336c7225,0x202c3330336c7225\n"
".quad 0x732e6464610a3b32,0x30336c7225203436,0x32326c7225202c35,0x30336c7225202c33\n"
".quad 0x6c672e74730a3b34,0x3233662e6c61626f,0x3530336c72255b20,0x0a3b366625202c5d\n"
".quad 0x203436732e646461,0x202c3630336c7225,0x202c3931326c7225,0x2e0a3b3034343136\n"
".quad 0x3831203220636f6c,0x64616d0a31203730,0x203436732e6f6c2e,0x202c3730336c7225\n"
".quad 0x202c3630336c7225,0x202c3434336c7225,0x0a3b3132326c7225,0x203436622e6c6873\n"
".quad 0x202c3830336c7225,0x202c3730336c7225,0x2e7268730a3b3233,0x336c722520343673\n"
".quad 0x336c7225202c3930,0x0a3b3233202c3830,0x31203220636f6c2e,0x68730a3120373038\n"
".quad 0x7225203436622e6c,0x7225202c3031336c,0x3b32202c3930336c,0x3436732e6464610a\n"
".quad 0x2c3131336c722520,0x2c3332326c722520,0x3b3031336c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3131336c7225,0x610a3b3938662520,0x25203436732e6464\n"
".quad 0x25202c3231336c72,0x36202c3931326c72,0x6c2e0a3b36333535,0x303831203220636f\n"
".quad 0x2e64616d0a312038,0x25203436732e6f6c,0x25202c3331336c72,0x25202c3231336c72\n"
".quad 0x25202c3434336c72,0x730a3b3132326c72,0x25203436622e6c68,0x25202c3431336c72\n"
".quad 0x33202c3331336c72,0x732e7268730a3b32,0x31336c7225203436,0x31336c7225202c35\n"
".quad 0x2e0a3b3233202c34,0x3831203220636f6c,0x6c68730a31203830,0x6c7225203436622e\n"
".quad 0x6c7225202c363133,0x0a3b32202c353133,0x203436732e646461,0x202c3731336c7225\n"
".quad 0x202c3332326c7225,0x0a3b3631336c7225,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3731336c72,0x6464610a3b386625,0x6c7225203436732e,0x6c7225202c383133\n"
".quad 0x363936202c393132,0x636f6c2e0a3b3233,0x2039303831203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c393133,0x6c7225202c383133,0x6c7225202c343433\n"
".quad 0x6c68730a3b313232,0x6c7225203436622e,0x6c7225202c303233,0x3b3233202c393133\n"
".quad 0x3436732e7268730a,0x2c3132336c722520,0x2c3032336c722520,0x6f6c2e0a3b323320\n"
".quad 0x3930383120322063,0x622e6c68730a3120,0x32336c7225203436,0x32336c7225202c32\n"
".quad 0x64610a3b32202c31,0x7225203436732e64,0x7225202c3332336c,0x7225202c3332326c\n"
".quad 0x74730a3b3232336c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d333233\n"
".quad 0x2e6464610a3b3338,0x336c722520343673,0x326c7225202c3432,0x32373337202c3931\n"
".quad 0x20636f6c2e0a3b38,0x3120303138312032,0x2e6f6c2e64616d0a,0x336c722520343673\n"
".quad 0x336c7225202c3532,0x336c7225202c3432,0x326c7225202c3434,0x2e6c68730a3b3132\n"
".quad 0x336c722520343662,0x336c7225202c3632,0x0a3b3233202c3532,0x203436732e726873\n"
".quad 0x202c3732336c7225,0x202c3632336c7225,0x636f6c2e0a3b3233,0x2030313831203220\n"
".quad 0x36622e6c68730a31,0x3832336c72252034,0x3732336c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c393233,0x6c7225202c333232,0x2e74730a3b383233\n"
".quad 0x662e6c61626f6c67,0x336c72255b203233,0x376625202c5d3932,0x5f373142420a0a3b\n"
".quad 0x20636f6c2e0a3a38,0x3120383538312032,0x6e79732e7261620a,0x6f6c2e0a3b302063\n"
".quad 0x3935383120322063,0x68732e646c0a3120,0x3233752e64657261,0x202c363431722520\n"
".quad 0x5f616475635f5f5b,0x61765f6c61636f6c,0x5f37343137335f72,0x635f6e6f6e5f3033\n"
".quad 0x6568635f74736e6f,0x7465730a3b5d6b63,0x3233732e71652e70,0x7225202c33702520\n"
".quad 0x0a3b31202c363431,0x6d617261702e646c,0x317225203233752e,0x315a5f5b202c3935\n"
".quad 0x79685f645f524c38,0x6f665f4443424162,0x665f536650656372,0x695f535f535f536d\n"
".quad 0x375f6d617261705f,0x2e707465730a3b5d,0x25203233732e7467,0x35317225202c3470\n"
".quad 0x3b39393939202c39,0x6572702e646e610a,0x25202c3570252064,0x3b347025202c3370\n"
".quad 0x203220636f6c2e0a,0x6d0a312032333731,0x25203233752e766f,0x6e25202c30363172\n"
".quad 0x2e0a3b782e646974,0x3831203220636f6c,0x7465730a31203236,0x3233732e74672e70\n"
".quad 0x7225202c36702520,0x0a3b31202c303631,0x646572702e646e61,0x7025202c37702520\n"
".quad 0x0a3b367025202c35,0x31203220636f6c2e,0x21400a3120393538,0x2061726220377025\n"
".quad 0x3b32315f37314242,0x395f373142420a0a,0x3220636f6c2e0a3a,0x0a31203336383120\n"
".quad 0x203233732e726873,0x25202c3636317225,0x3b31202c36363172,0x203220636f6c2e0a\n"
".quad 0x730a312034363831,0x752e65672e707465,0x202c387025203233,0x7225202c32317225\n"
".quad 0x7025400a3b363631,0x4242206172622038,0x0a0a3b31315f3731,0x31203220636f6c2e\n"
".quad 0x64610a3120353638,0x7225203233732e64,0x317225202c393431,0x3636317225202c32\n"
".quad 0x69772e6c756d0a3b,0x25203233752e6564,0x25202c3033336c72,0x3b34202c39343172\n"
".quad 0x3436752e766f6d0a,0x2c3133336c722520,0x5f616475635f5f20,0x61765f6c61636f6c\n"
".quad 0x5f36343137335f72,0x635f6e6f6e5f3233,0x6d75735f74736e6f,0x732e6464610a3b58\n"
".quad 0x33336c7225203436,0x33336c7225202c32,0x33336c7225202c31,0x772e6c756d0a3b30\n"
".quad 0x203233752e656469,0x202c3333336c7225,0x3b34202c32317225,0x3436732e6464610a\n"
".quad 0x2c3433336c722520,0x2c3133336c722520,0x3b3333336c722520,0x203220636f6c2e0a\n"
".quad 0x6c0a312035363831,0x6465726168732e64,0x356625203233662e,0x6c72255b202c3030\n"
".quad 0x646c0a3b5d343333,0x2e6465726168732e,0x3035662520323366,0x336c72255b202c31\n"
".quad 0x6464610a3b5d3233,0x356625203233662e,0x30356625202c3230,0x3130356625202c30\n"
".quad 0x6168732e74730a3b,0x203233662e646572,0x5d3433336c72255b,0x3b3230356625202c\n"
".quad 0x3436752e766f6d0a,0x2c3533336c722520,0x5f616475635f5f20,0x61765f6c61636f6c\n"
".quad 0x5f36343137335f72,0x635f6e6f6e5f3234,0x6d75735f74736e6f,0x732e6464610a3b59\n"
".quad 0x33336c7225203436,0x33336c7225202c36,0x33336c7225202c35,0x732e6464610a3b30\n"
".quad 0x33336c7225203436,0x33336c7225202c37,0x33336c7225202c35,0x20636f6c2e0a3b33\n"
".quad 0x3120363638312032,0x726168732e646c0a,0x25203233662e6465,0x255b202c33303566\n"
".quad 0x0a3b5d3733336c72,0x65726168732e646c,0x6625203233662e64,0x72255b202c343035\n"
".quad 0x610a3b5d3633336c,0x25203233662e6464,0x6625202c35303566,0x356625202c333035\n"
".quad 0x732e74730a3b3430,0x33662e6465726168,0x33336c72255b2032,0x30356625202c5d37\n"
".quad 0x752e766f6d0a3b35,0x33336c7225203436,0x6475635f5f202c38,0x5f6c61636f6c5f61\n"
".quad 0x343137335f726176,0x6e6f6e5f32355f36,0x735f74736e6f635f,0x6464610a3b5a6d75\n"
".quad 0x6c7225203436732e,0x6c7225202c393333,0x6c7225202c383333,0x6464610a3b303333\n"
".quad 0x6c7225203436732e,0x6c7225202c303433,0x6c7225202c383333,0x6f6c2e0a3b333333\n"
".quad 0x3736383120322063,0x68732e646c0a3120,0x3233662e64657261,0x202c363035662520\n"
".quad 0x5d3034336c72255b,0x6168732e646c0a3b,0x203233662e646572,0x5b202c3730356625\n"
".quad 0x3b5d3933336c7225,0x3233662e6464610a,0x202c383035662520,0x25202c3630356625\n"
".quad 0x74730a3b37303566,0x2e6465726168732e,0x6c72255b20323366,0x6625202c5d303433\n"
".quad 0x42420a0a3b383035,0x2e0a3a31315f3731,0x3831203220636f6c,0x7261620a31203936\n"
".quad 0x3b3020636e79732e,0x203220636f6c2e0a,0x730a312032363831,0x732e74672e707465\n"
".quad 0x202c397025203233,0x31202c3636317225,0x6220397025400a3b,0x5f37314242206172\n"
".quad 0x373142420a0a3b39,0x7465720a3a32315f,0x6e652e0a0a7d0a3b,0x38315a5f20797274\n"
".quad 0x6279685f645f524c,0x726f665f44434142,0x6d665f5366506563,0x28695f535f535f53\n"
".quad 0x206d617261702e0a,0x315a5f203436752e,0x79685f645f524c38,0x6f665f4443414262\n"
".quad 0x665f536650656372,0x695f535f535f536d,0x305f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203436752e20,0x685f645f524c3831,0x665f444341426279,0x5f5366506563726f\n"
".quad 0x5f535f535f536d66,0x5f6d617261705f69,0x617261702e0a2c31,0x5f203233662e206d\n"
".quad 0x5f645f524c38315a,0x5f44434142627968,0x5366506563726f66,0x535f535f536d665f\n"
".quad 0x6d617261705f695f,0x7261702e0a2c325f,0x203436752e206d61,0x645f524c38315a5f\n"
".quad 0x444341426279685f,0x66506563726f665f,0x5f535f536d665f53,0x617261705f695f53\n"
".quad 0x61702e0a2c335f6d,0x3436752e206d6172,0x5f524c38315a5f20,0x4341426279685f64\n"
".quad 0x506563726f665f44,0x535f536d665f5366,0x7261705f695f535f,0x702e0a2c345f6d61\n"
".quad 0x36752e206d617261,0x524c38315a5f2034,0x41426279685f645f,0x6563726f665f4443\n"
".quad 0x5f536d665f536650,0x61705f695f535f53,0x2e0a2c355f6d6172,0x752e206d61726170\n"
".quad 0x4c38315a5f203436,0x426279685f645f52,0x63726f665f444341,0x536d665f53665065\n"
".quad 0x705f695f535f535f,0x0a2c365f6d617261,0x2e206d617261702e,0x38315a5f20323375\n"
".quad 0x6279685f645f524c,0x726f665f44434142,0x6d665f5366506563,0x5f695f535f535f53\n"
".quad 0x0a375f6d61726170,0x6765722e0a7b0a29,0x6625203233662e20,0x2e0a3b3e3231353c\n"
".quad 0x6572702e20676572,0x3e39313c70252064,0x2e206765722e0a3b,0x313c722520323373\n"
".quad 0x65722e0a3b3e3137,0x25203436732e2067,0x3b3e3535333c6c72,0x726168732e090a0a\n"
".quad 0x67696c612e206465,0x2038622e2034206e,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x335f39373237335f,0x6f635f6e6f6e5f32,0x586d75735f74736e,0x0a0a3b5d3635325b\n"
".quad 0x6465726168732e09,0x206e67696c612e20,0x5f5f2038622e2034,0x636f6c5f61647563\n"
".quad 0x335f7261765f6c61,0x5f32345f39373237,0x736e6f635f6e6f6e,0x325b596d75735f74\n"
".quad 0x2e090a0a3b5d3635,0x2e20646572616873,0x2034206e67696c61,0x75635f5f2038622e\n"
".quad 0x6c61636f6c5f6164,0x3237335f7261765f,0x6f6e5f32355f3937,0x5f74736e6f635f6e\n"
".quad 0x3635325b5a6d7573,0x68732e090a0a3b5d,0x6c612e2064657261,0x622e2034206e6769\n"
".quad 0x616475635f5f2038,0x765f6c61636f6c5f,0x30383237335f7261,0x5f6e6f6e5f30335f\n"
".quad 0x68635f74736e6f63,0x0a3b5d345b6b6365,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x315a5f5b202c316c,0x79685f645f524c38,0x6f665f4443414262,0x665f536650656372\n"
".quad 0x695f535f535f536d,0x305f6d617261705f,0x61702e646c0a3b5d,0x203436752e6d6172\n"
".quad 0x5f5b202c336c7225,0x5f645f524c38315a,0x5f44434142627968,0x5366506563726f66\n"
".quad 0x535f535f536d665f,0x6d617261705f695f,0x7476630a3b5d335f,0x6f6c672e6f742e61\n"
".quad 0x203436752e6c6162,0x7225202c346c7225,0x636f6c2e0a3b316c,0x2033383831203220\n"
".quad 0x33752e766f6d0a31,0x2c30373172252032,0x782e6469746e2520,0x33752e766f6d0a3b\n"
".quad 0x202c323172252032,0x782e646961746325,0x33752e766f6d0a3b,0x25202c3272252032\n"
".quad 0x6d0a3b782e646974,0x33732e6f6c2e6461,0x25202c3372252032,0x7225202c30373172\n"
".quad 0x3b327225202c3231,0x203220636f6c2e0a,0x6d0a312034383831,0x25203233752e766f\n"
".quad 0x746e25202c333172,0x6f6d0a3b792e6469,0x7225203233752e76,0x61746325202c3431\n"
".quad 0x6f6d0a3b792e6469,0x7225203233752e76,0x64697425202c3531,0x2e64616d0a3b792e\n"
".quad 0x25203233732e6f6c,0x33317225202c3472,0x202c34317225202c,0x6c2e0a3b35317225\n"
".quad 0x383831203220636f,0x2e766f6d0a312035,0x3631722520323375,0x2e6469746e25202c\n"
".quad 0x752e766f6d0a3b7a,0x2c37317225203233,0x2e64696174632520,0x752e766f6d0a3b7a\n"
".quad 0x2c38317225203233,0x3b7a2e6469742520,0x2e6f6c2e64616d0a,0x2c35722520323373\n"
".quad 0x25202c3631722520,0x317225202c373172,0x20636f6c2e0a3b38,0x3120363838312032\n"
".quad 0x2e6e722e7476630a,0x203233732e323366,0x7225202c33326625,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x33326625202c3432,0x303046336630202c,0x6630202c30303030\n"
".quad 0x3030303043373134,0x3220636f6c2e0a3b,0x0a31203738383120,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x3b347225202c3266,0x2e6e722e616d660a,0x3532662520323366\n"
".quad 0x30202c326625202c,0x3030303030463366,0x3731346630202c30,0x2e0a3b3030303043\n"
".quad 0x3831203220636f6c,0x7476630a31203838,0x2e3233662e6e722e,0x3632662520323373\n"
".quad 0x660a3b357225202c,0x33662e6e722e616d,0x202c373266252032,0x6630202c36326625\n"
".quad 0x3030303030304633,0x433731346630202c,0x76630a3b30303030,0x33752e3436752e74\n"
".quad 0x202c356c72252032,0x6f6c2e0a3b337225,0x3938383120322063,0x732e7476630a3120\n"
".quad 0x25203233732e3436,0x347225202c366c72,0x33622e6c68730a3b,0x25202c3672252032\n"
".quad 0x2e0a3b36202c3572,0x3831203220636f6c,0x7476630a31203938,0x3233732e3436732e\n"
".quad 0x25202c376c722520,0x2e6464610a3b3672,0x316c722520343673,0x2c376c7225202c32\n"
".quad 0x2e0a3b366c722520,0x3831203220636f6c,0x64616d0a31203938,0x203436732e6f6c2e\n"
".quad 0x7225202c386c7225,0x6c7225202c32316c,0x3b356c7225202c33,0x3233662e6464610a\n"
".quad 0x25202c3832662520,0x436630202c343266,0x3b30303030453732,0x3233662e6464610a\n"
".quad 0x25202c3932662520,0x436630202c353266,0x3b30303030434631,0x203220636f6c2e0a\n"
".quad 0x6c756d0a31203037,0x336625203233662e,0x2c39326625202c30,0x660a3b3932662520\n"
".quad 0x33662e6e722e616d,0x202c313366252032,0x6625202c38326625,0x30336625202c3832\n"
".quad 0x33662e6464610a3b,0x202c323366252032,0x6630202c37326625,0x3030303043463143\n"
".quad 0x3220636f6c2e0a3b,0x6d660a3120303720,0x3233662e6e722e61,0x25202c3333662520\n"
".quad 0x336625202c323366,0x3b31336625202c32,0x746c2e707465730a,0x317025203233662e\n"
".quad 0x202c33336625202c,0x3030303831346630,0x2e766f6d0a3b3030,0x3931722520323375\n"
".quad 0x6f6c2e0a3b30202c,0x3439383120322063,0x68732e74730a3120,0x3233752e64657261\n"
".quad 0x616475635f5f5b20,0x765f6c61636f6c5f,0x30383237335f7261,0x5f6e6f6e5f30335f\n"
".quad 0x68635f74736e6f63,0x7225202c5d6b6365,0x636f6c2e0a3b3931,0x2035393831203220\n"
".quad 0x79732e7261620a31,0x64610a3b3020636e,0x7225203233732e64,0x2c337225202c3032\n"
".quad 0x7465730a3b312d20,0x3233752e74672e70,0x7225202c32702520,0x0a3b3136202c3032\n"
".quad 0x31203220636f6c2e,0x65730a3120363938,0x33732e746c2e7074,0x25202c3370252032\n"
".quad 0x6f0a3b31202c3472,0x2520646572702e72,0x2c327025202c3470,0x6c2e0a3b33702520\n"
".quad 0x393831203220636f,0x707465730a312036,0x203233732e74672e,0x347225202c357025\n"
".quad 0x726f0a3b3236202c,0x702520646572702e,0x202c347025202c36,0x6f6c2e0a3b357025\n"
".quad 0x3639383120322063,0x2e707465730a3120,0x25203233732e746c,0x2c357225202c3770\n"
".quad 0x702e726f0a3b3120,0x2c38702520646572,0x7025202c36702520,0x20636f6c2e0a3b37\n"
".quad 0x3120363938312032,0x74672e707465730a,0x397025203233732e,0x36202c357225202c\n"
".quad 0x72702e726f0a3b32,0x2c30317025206465,0x7025202c38702520,0x20636f6c2e0a3b39\n"
".quad 0x3120333838312032,0x3233752e766f6d0a,0x202c393631722520,0x0a3b782e64697425\n"
".quad 0x656469772e6c756d,0x6c7225203233752e,0x36317225202c3331,0x6f6d0a3b34202c39\n"
".quad 0x7225203436752e76,0x635f5f202c34316c,0x61636f6c5f616475,0x37335f7261765f6c\n"
".quad 0x6e5f32335f393732,0x74736e6f635f6e6f,0x610a3b586d75735f,0x25203436732e6464\n"
".quad 0x6c7225202c396c72,0x316c7225202c3431,0x752e766f6d0a3b33,0x35316c7225203436\n"
".quad 0x616475635f5f202c,0x765f6c61636f6c5f,0x39373237335f7261,0x5f6e6f6e5f32345f\n"
".quad 0x75735f74736e6f63,0x2e6464610a3b596d,0x316c722520343673,0x35316c7225202c30\n"
".quad 0x3b33316c7225202c,0x3436752e766f6d0a,0x202c36316c722520,0x6c5f616475635f5f\n"
".quad 0x7261765f6c61636f,0x355f39373237335f,0x6f635f6e6f6e5f32,0x5a6d75735f74736e\n"
".quad 0x36732e6464610a3b,0x2c31316c72252034,0x202c36316c722520,0x2e0a3b33316c7225\n"
".quad 0x3831203220636f6c,0x7025400a31203639,0x4220617262203031,0x0a0a3b395f383142\n"
".quad 0x203436622e6c6873,0x25202c37316c7225,0x3b3233202c386c72,0x3436732e7268730a\n"
".quad 0x202c38316c722520,0x33202c37316c7225,0x20636f6c2e0a3b32,0x3120343039312032\n"
".quad 0x3436622e6c68730a,0x202c39316c722520,0x32202c38316c7225,0x36732e6464610a3b\n"
".quad 0x2c30326c72252034,0x25202c346c722520,0x646c0a3b39316c72,0x2e6c61626f6c672e\n"
".quad 0x2c33662520323366,0x5d30326c72255b20,0x33732e6464610a3b,0x202c323272252032\n"
".quad 0x3b312d202c347225,0x203220636f6c2e0a,0x630a312035303931,0x732e3436732e7476\n"
".quad 0x31326c7225203233,0x0a3b32327225202c,0x203436732e646461,0x25202c32326c7225\n"
".quad 0x7225202c31326c72,0x2e6464610a3b376c,0x326c722520343673,0x32326c7225202c33\n"
".quad 0x0a3b32393138202c,0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c343533\n"
".quad 0x685f645f524c3831,0x665f444341426279,0x5f5366506563726f,0x5f535f535f536d66\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d33,0x2035303931203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x326c7225202c3432,0x35336c7225202c33,0x3b356c7225202c34\n"
".quad 0x3436622e6c68730a,0x202c35326c722520,0x33202c34326c7225,0x732e7268730a3b32\n"
".quad 0x36326c7225203436,0x2c35326c7225202c,0x6f6c2e0a3b323320,0x3530393120322063\n"
".quad 0x622e6c68730a3120,0x37326c7225203436,0x2c36326c7225202c,0x2e6464610a3b3220\n"
".quad 0x326c722520343673,0x2c346c7225202c38,0x0a3b37326c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x326c72255b202c34,0x636f6c2e0a3b5d38,0x2036303931203220\n"
".quad 0x33732e6464610a31,0x202c343272252032,0x0a3b31202c347225,0x2e3436732e747663\n"
".quad 0x326c722520323373,0x3b34327225202c39,0x3436732e6464610a,0x202c30336c722520\n"
".quad 0x25202c39326c7225,0x6464610a3b376c72,0x6c7225203436732e,0x336c7225202c3133\n"
".quad 0x3438333631202c30,0x3220636f6c2e0a3b,0x0a31203630393120,0x732e6f6c2e64616d\n"
".quad 0x32336c7225203436,0x2c31336c7225202c,0x2c3435336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x7225202c33336c72,0x3b3233202c32336c,0x3436732e7268730a\n"
".quad 0x202c34336c722520,0x33202c33336c7225,0x20636f6c2e0a3b32,0x3120363039312032\n"
".quad 0x3436622e6c68730a,0x202c35336c722520,0x32202c34336c7225,0x36732e6464610a3b\n"
".quad 0x2c36336c72252034,0x25202c346c722520,0x646c0a3b35336c72,0x2e6c61626f6c672e\n"
".quad 0x2c35662520323366,0x5d36336c72255b20,0x33732e6464610a3b,0x202c363272252032\n"
".quad 0x34362d202c367225,0x3220636f6c2e0a3b,0x0a31203730393120,0x2e3436732e747663\n"
".quad 0x336c722520323373,0x3b36327225202c37,0x3436732e6464610a,0x202c38336c722520\n"
".quad 0x7225202c366c7225,0x6464610a3b37336c,0x6c7225203436732e,0x336c7225202c3933\n"
".quad 0x3436383633202c38,0x3220636f6c2e0a3b,0x0a31203730393120,0x732e6f6c2e64616d\n"
".quad 0x30346c7225203436,0x2c39336c7225202c,0x2c3435336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x7225202c31346c72,0x3b3233202c30346c,0x3436732e7268730a\n"
".quad 0x202c32346c722520,0x33202c31346c7225,0x20636f6c2e0a3b32,0x3120373039312032\n"
".quad 0x3436622e6c68730a,0x202c33346c722520,0x32202c32346c7225,0x36732e6464610a3b\n"
".quad 0x2c34346c72252034,0x25202c346c722520,0x646c0a3b33346c72,0x2e6c61626f6c672e\n"
".quad 0x2c36662520323366,0x5d34346c72255b20,0x36732e6464610a3b,0x2c35346c72252034\n"
".quad 0x202c31326c722520,0x610a3b37336c7225,0x25203436732e6464,0x7225202c36346c72\n"
".quad 0x303534202c35346c,0x636f6c2e0a3b3635,0x2038303931203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x346c7225202c3734,0x35336c7225202c36,0x3b356c7225202c34\n"
".quad 0x3436622e6c68730a,0x202c38346c722520,0x33202c37346c7225,0x732e7268730a3b32\n"
".quad 0x39346c7225203436,0x2c38346c7225202c,0x6f6c2e0a3b323320,0x3830393120322063\n"
".quad 0x622e6c68730a3120,0x30356c7225203436,0x2c39346c7225202c,0x2e6464610a3b3220\n"
".quad 0x356c722520343673,0x2c346c7225202c31,0x0a3b30356c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x356c72255b202c37,0x2e6464610a3b5d31,0x356c722520343673\n"
".quad 0x39326c7225202c32,0x3b37336c7225202c,0x3436732e6464610a,0x202c33356c722520\n"
".quad 0x35202c32356c7225,0x6c2e0a3b38343233,0x303931203220636f,0x2e64616d0a312039\n"
".quad 0x25203436732e6f6c,0x7225202c34356c72,0x6c7225202c33356c,0x6c7225202c343533\n"
".quad 0x622e6c68730a3b35,0x35356c7225203436,0x2c34356c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x356c7225202c3635,0x2e0a3b3233202c35,0x3931203220636f6c\n"
".quad 0x6c68730a31203930,0x6c7225203436622e,0x356c7225202c3735,0x64610a3b32202c36\n"
".quad 0x7225203436732e64,0x6c7225202c38356c,0x37356c7225202c34,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c386625,0x64610a3b5d38356c,0x7225203233732e64\n"
".quad 0x2c367225202c3033,0x6f6c2e0a3b343620,0x3031393120322063,0x732e7476630a3120\n"
".quad 0x25203233732e3436,0x7225202c39356c72,0x2e6464610a3b3033,0x366c722520343673\n"
".quad 0x2c366c7225202c30,0x0a3b39356c722520,0x203436732e646461,0x25202c31366c7225\n"
".quad 0x3735202c30366c72,0x6f6c2e0a3b343433,0x3031393120322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c32366c,0x336c7225202c3136,0x356c7225202c3435\n"
".quad 0x36622e6c68730a3b,0x2c33366c72252034,0x202c32366c722520,0x2e7268730a3b3233\n"
".quad 0x366c722520343673,0x33366c7225202c34,0x6c2e0a3b3233202c,0x313931203220636f\n"
".quad 0x2e6c68730a312030,0x366c722520343662,0x34366c7225202c35,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x346c7225202c3636,0x3b35366c7225202c,0x626f6c672e646c0a\n"
".quad 0x25203233662e6c61,0x6c72255b202c3966,0x6464610a3b5d3636,0x6c7225203436732e\n"
".quad 0x326c7225202c3736,0x39356c7225202c31,0x36732e6464610a3b,0x2c38366c72252034\n"
".quad 0x202c37366c722520,0x2e0a3b3633353536,0x3931203220636f6c,0x64616d0a31203131\n"
".quad 0x203436732e6f6c2e,0x25202c39366c7225,0x7225202c38366c72,0x7225202c3435336c\n"
".quad 0x2e6c68730a3b356c,0x376c722520343662,0x39366c7225202c30,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c31376c,0x0a3b3233202c3037,0x31203220636f6c2e\n"
".quad 0x68730a3120313139,0x7225203436622e6c,0x6c7225202c32376c,0x610a3b32202c3137\n"
".quad 0x25203436732e6464,0x7225202c33376c72,0x376c7225202c346c,0x6c672e646c0a3b32\n"
".quad 0x3233662e6c61626f,0x5b202c3031662520,0x0a3b5d33376c7225,0x31203220636f6c2e\n"
".quad 0x65730a3120323139,0x33732e71652e7074,0x202c313170252032,0x3b3336202c357225\n"
".quad 0x622031317025400a,0x5f38314242206172,0x636f6c2e0a0a3b33,0x2036303931203220\n"
".quad 0x36752e7476630a31,0x7225203233752e34,0x327225202c34376c,0x20636f6c2e0a3b34\n"
".quad 0x3120303139312032,0x3436752e7476630a,0x6c7225203233752e,0x30337225202c3537\n"
".quad 0x36732e6464610a3b,0x2c36376c72252034,0x202c34376c722520,0x610a3b35376c7225\n"
".quad 0x25203436732e6464,0x7225202c37376c72,0x373337202c36376c,0x2e7476630a3b3832\n"
".quad 0x203233752e343675,0x25202c38376c7225,0x702e646c0a3b3372,0x3436752e6d617261\n"
".quad 0x2c3335336c722520,0x524c38315a5f5b20,0x41426279685f645f,0x6563726f665f4443\n"
".quad 0x5f536d665f536650,0x61705f695f535f53,0x0a3b5d335f6d6172,0x31203220636f6c2e\n"
".quad 0x616d0a3120333139,0x3436732e6f6c2e64,0x202c39376c722520,0x25202c37376c7225\n"
".quad 0x25202c3335336c72,0x646c0a3b38376c72,0x752e6d617261702e,0x34336c7225203436\n"
".quad 0x38315a5f5b202c38,0x6279685f645f524c,0x726f665f44434142,0x6d665f5366506563\n"
".quad 0x5f695f535f535f53,0x5d305f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f\n"
".quad 0x6c7225203436752e,0x336c7225202c3038,0x2e6c68730a3b3834,0x386c722520343662\n"
".quad 0x39376c7225202c31,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c32386c\n"
".quad 0x0a3b3233202c3138,0x31203220636f6c2e,0x68730a3120333139,0x7225203436622e6c\n"
".quad 0x6c7225202c33386c,0x610a3b32202c3238,0x25203436732e6464,0x7225202c34386c72\n"
".quad 0x6c7225202c30386c,0x672e646c0a3b3338,0x33662e6c61626f6c,0x2c31313566252032\n"
".quad 0x5d34386c72255b20,0x5f383142420a0a3b,0x20636f6c2e0a3a33,0x3120353139312032\n"
".quad 0x2e6e722e7476630a,0x203233732e323366,0x7225202c35396625,0x2e6464610a3b3032\n"
".quad 0x3738662520323366,0x202c35396625202c,0x3030303046336630,0x2e7476630a3b3030\n"
".quad 0x732e3233662e6e72,0x2c36396625203233,0x64610a3b36722520,0x6625203233662e64\n"
".quad 0x2c326625202c3739,0x3030304633663020,0x6464610a3b303030,0x346625203233662e\n"
".quad 0x2c37396625202c36,0x0a0a3b3639662520,0x2e64322e78657409,0x662e3233662e3476\n"
".quad 0x353366257b203233,0x202c36336625202c,0x6625202c37336625,0x65745b202c7d3833\n"
".quad 0x4331665f66655278,0x2c373866257b202c,0x3b5d7d3634662520,0x20636f6c2e090a0a\n"
".quad 0x3120363139312032,0x3233732e6464610a,0x25202c3036722520,0x630a3b31202c3372\n"
".quad 0x33662e6e722e7476,0x6625203233732e32,0x30367225202c3839,0x33662e6464610a3b\n"
".quad 0x202c333966252032,0x6630202c38396625,0x3030303030304633,0x2e786574090a0a3b\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x346625202c313466,0x2c33346625202c32\n"
".quad 0x202c7d3434662520,0x5f6665527865745b,0x66257b202c433366,0x36346625202c3339\n"
".quad 0x6c2e090a0a3b5d7d,0x313931203220636f,0x2e7476630a312037,0x732e3233662e6e72\n"
".quad 0x2c39396625203233,0x610a3b3232722520,0x25203233662e6464,0x6625202c30303166\n"
".quad 0x46336630202c3939,0x0a3b303030303030,0x203233662e646461,0x6625202c38356625\n"
".quad 0x396625202c303031,0x786574090a0a3b36,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x6625202c37346625,0x39346625202c3834,0x2c7d30356625202c,0x6665527865745b20\n"
".quad 0x257b202c4335665f,0x356625202c373866,0x0a090a0a3b5d7d38,0x2e64322e78657409\n"
".quad 0x662e3233662e3476,0x333566257b203233,0x202c34356625202c,0x6625202c35356625\n"
".quad 0x65745b202c7d3635,0x4336665f66655278,0x2c333966257b202c,0x3b5d7d3835662520\n"
".quad 0x20636f6c2e090a0a,0x3120393139312032,0x2e6e722e7476630a,0x203233732e323366\n"
".quad 0x25202c3130316625,0x6464610a3b343272,0x316625203233662e,0x30316625202c3230\n"
".quad 0x3046336630202c31,0x610a3b3030303030,0x25203233662e6464,0x316625202c303766\n"
".quad 0x36396625202c3230,0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x366625202c393566,0x2c31366625202c30,0x202c7d3236662520,0x5f6665527865745b\n"
".quad 0x66257b202c433766,0x30376625202c3339,0x090a090a0a3b5d7d,0x762e64322e786574\n"
".quad 0x33662e3233662e34,0x2c353666257b2032,0x25202c3636662520,0x366625202c373666\n"
".quad 0x7865745b202c7d38,0x2c4338665f666552,0x202c373866257b20,0x0a3b5d7d30376625\n"
".quad 0x3220636f6c2e090a,0x0a31203132393120,0x662e6e722e747663,0x25203233732e3233\n"
".quad 0x7225202c33303166,0x2e6464610a3b3033,0x3238662520323366,0x202c37396625202c\n"
".quad 0x0a0a3b3330316625,0x2e64322e78657409,0x662e3233662e3476,0x313766257b203233\n"
".quad 0x202c32376625202c,0x6625202c33376625,0x65745b202c7d3437,0x3531665f66655278\n"
".quad 0x373866257b202c43,0x5d7d32386625202c,0x6574090a090a0a3b,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x25202c373766257b,0x376625202c383766,0x7d30386625202c39\n"
".quad 0x65527865745b202c,0x202c433731665f66,0x25202c333966257b,0x0a0a3b5d7d323866\n"
".quad 0x203220636f6c2e09,0x630a312033323931,0x33662e6e722e7476,0x6625203233732e32\n"
".quad 0x327225202c343031,0x662e6464610a3b36,0x2c34396625203233,0x25202c3739662520\n"
".quad 0x090a0a3b34303166,0x762e64322e786574,0x33662e3233662e34,0x2c333866257b2032\n"
".quad 0x25202c3438662520,0x386625202c353866,0x7865745b202c7d36,0x433031665f666552\n"
".quad 0x2c373866257b202c,0x3b5d7d3439662520,0x786574090a090a0a,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x6625202c39386625,0x31396625202c3039,0x2c7d32396625202c\n"
".quad 0x6665527865745b20,0x7b202c433231665f,0x6625202c33396625,0x090a0a3b5d7d3439\n"
".quad 0x31203220636f6c2e,0x25400a3120363239,0x4220617262203170,0x0a0a3b355f383142\n"
".quad 0x31203220636f6c2e,0x6f6d0a3120333838,0x7225203233752e76,0x697425202c383631\n"
".quad 0x6c756d0a3b782e64,0x33752e656469772e,0x2c35386c72252032,0x202c383631722520\n"
".quad 0x732e6464610a3b34,0x37386c7225203436,0x2c34316c7225202c,0x0a3b35386c722520\n"
".quad 0x31203220636f6c2e,0x74730a3120303639,0x2e6465726168732e,0x6c72255b20323375\n"
".quad 0x317225202c5d3738,0x732e6464610a3b39,0x39386c7225203436,0x2c35316c7225202c\n"
".quad 0x0a3b35386c722520,0x31203220636f6c2e,0x74730a3120313639,0x2e6465726168732e\n"
".quad 0x6c72255b20323375,0x317225202c5d3938,0x732e6464610a3b39,0x31396c7225203436\n"
".quad 0x2c36316c7225202c,0x0a3b35386c722520,0x31203220636f6c2e,0x74730a3120323639\n"
".quad 0x2e6465726168732e,0x6c72255b20323375,0x317225202c5d3139,0x20636f6c2e0a3b39\n"
".quad 0x3120393739312032,0x3233662e6275730a,0x202c353031662520,0x6625202c35336625\n"
".quad 0x2e6464610a3b3134,0x3031662520323366,0x3530316625202c36,0x0a3b37346625202c\n"
".quad 0x203233662e627573,0x25202c3730316625,0x6625202c36303166,0x2e6275730a3b3335\n"
".quad 0x3031662520323366,0x3730316625202c38,0x0a3b39356625202c,0x203233662e646461\n"
".quad 0x25202c3930316625,0x6625202c38303166,0x2e6464610a3b3536,0x3131662520323366\n"
".quad 0x3930316625202c30,0x0a3b33386625202c,0x203233662e627573,0x25202c3131316625\n"
".quad 0x6625202c30313166,0x2e6464610a3b3938,0x3131662520323366,0x3131316625202c32\n"
".quad 0x0a3b31376625202c,0x203233662e627573,0x25202c3331316625,0x6625202c32313166\n"
".quad 0x2e6275730a3b3737,0x3131662520323366,0x202c346625202c34,0x6464610a3b356625\n"
".quad 0x316625203233662e,0x31316625202c3531,0x3b37346625202c34,0x3233662e6464610a\n"
".quad 0x202c363131662520,0x25202c3531316625,0x6275730a3b333566,0x316625203233662e\n"
".quad 0x31316625202c3731,0x3b39356625202c36,0x3233662e6275730a,0x202c383131662520\n"
".quad 0x25202c3731316625,0x6464610a3b353666,0x316625203233662e,0x31316625202c3931\n"
".quad 0x0a3b376625202c38,0x203233662e627573,0x25202c3032316625,0x6625202c39313166\n"
".quad 0x662e6464610a3b38,0x3132316625203233,0x2c3032316625202c,0x730a3b3031662520\n"
".quad 0x25203233662e6275,0x6625202c32323166,0x356625202c313231,0x2e6464610a3b3131\n"
".quad 0x3231662520323366,0x202c366625202c33,0x64610a3b33386625,0x6625203233662e64\n"
".quad 0x316625202c343231,0x3b376625202c3332,0x3233662e6464610a,0x202c353231662520\n"
".quad 0x25202c3432316625,0x6464610a3b393866,0x316625203233662e,0x32316625202c3632\n"
".quad 0x0a3b386625202c35,0x203233662e627573,0x25202c3732316625,0x6625202c36323166\n"
".quad 0x662e6275730a3b39,0x3832316625203233,0x2c3732316625202c,0x730a3b3137662520\n"
".quad 0x25203233662e6275,0x6625202c39323166,0x316625202c383231,0x662e6275730a3b30\n"
".quad 0x3033316625203233,0x2c3932316625202c,0x730a3b3737662520,0x25203233662e6275\n"
".quad 0x6625202c31333166,0x356625202c303331,0x2e6275730a3b3131,0x3331662520323366\n"
".quad 0x2c37346625202c32,0x6c2e0a3b33662520,0x373931203220636f,0x2e6464610a312039\n"
".quad 0x3331662520323366,0x3233316625202c33,0x0a3b33356625202c,0x203233662e646461\n"
".quad 0x25202c3433316625,0x6625202c33333166,0x2e6464610a3b3935,0x3331662520323366\n"
".quad 0x3433316625202c35,0x0a3b35366625202c,0x203233662e646461,0x25202c3633316625\n"
".quad 0x6625202c35333166,0x2e6464610a3b3338,0x3331662520323366,0x3633316625202c37\n"
".quad 0x610a3b376625202c,0x25203233662e6464,0x6625202c38333166,0x386625202c373331\n"
".quad 0x662e6464610a3b39,0x3933316625203233,0x2c3833316625202c,0x64610a3b38662520\n"
".quad 0x6625203233662e64,0x316625202c303431,0x31376625202c3933,0x33662e6464610a3b\n"
".quad 0x2c31343166252032,0x202c303431662520,0x64610a3b30316625,0x6625203233662e64\n"
".quad 0x316625202c323431,0x37376625202c3134,0x33662e6464610a3b,0x2c33343166252032\n"
".quad 0x202c323431662520,0x6d0a3b3131356625,0x25203233662e6c75,0x6625202c34343166\n"
".quad 0x316625202c323231,0x2e616d660a3b3232,0x25203233662e6e72,0x6625202c35343166\n"
".quad 0x316625202c333131,0x34316625202c3331,0x662e6c756d0a3b34,0x3634316625203233\n"
".quad 0x2c3133316625202c,0x0a3b313331662520,0x662e6e722e616d66,0x3734316625203233\n"
".quad 0x2c3133316625202c,0x202c313331662520,0x730a3b3534316625,0x25203233662e6275\n"
".quad 0x6625202c38343166,0x316625202c333431,0x2e6c756d0a3b3734,0x3431662520323366\n"
".quad 0x2c35336625202c39,0x3030383043663020,0x616d660a3b303030,0x203233662e6e722e\n"
".quad 0x25202c3035316625,0x31346630202c3366,0x202c303030303034,0x660a3b3934316625\n"
".quad 0x33662e6e722e616d,0x2c31353166252032,0x6630202c34662520,0x3030303030383043\n"
".quad 0x3b3035316625202c,0x2e6e722e616d660a,0x3531662520323366,0x2c31346625202c32\n"
".quad 0x3030383043663020,0x316625202c303030,0x2e616d660a3b3135,0x25203233662e6e72\n"
".quad 0x6625202c33353166,0x3830436630202c35,0x25202c3030303030,0x64610a3b32353166\n"
".quad 0x6625203233662e64,0x316625202c343531,0x37346625202c3335,0x33662e6464610a3b\n"
".quad 0x2c35353166252032,0x202c343531662520,0x64610a3b33356625,0x6625203233662e64\n"
".quad 0x316625202c363531,0x39356625202c3535,0x33662e6464610a3b,0x2c37353166252032\n"
".quad 0x202c363531662520,0x6d660a3b35366625,0x3233662e6e722e61,0x202c383531662520\n"
".quad 0x436630202c366625,0x2c30303030303830,0x0a3b373531662520,0x203233662e646461\n"
".quad 0x25202c3935316625,0x6625202c38353166,0x2e6464610a3b3338,0x3631662520323366\n"
".quad 0x3935316625202c30,0x610a3b376625202c,0x25203233662e6464,0x6625202c31363166\n"
".quad 0x386625202c303631,0x662e6464610a3b39,0x3236316625203233,0x2c3136316625202c\n"
".quad 0x6d660a3b38662520,0x3233662e6e722e61,0x202c333631662520,0x436630202c396625\n"
".quad 0x2c30303030303830,0x0a3b323631662520,0x203233662e646461,0x25202c3436316625\n"
".quad 0x6625202c33363166,0x2e6464610a3b3137,0x3631662520323366,0x3436316625202c35\n"
".quad 0x0a3b30316625202c,0x203233662e646461,0x25202c3636316625,0x6625202c35363166\n"
".quad 0x2e6464610a3b3737,0x3631662520323366,0x3636316625202c37,0x3b3131356625202c\n"
".quad 0x2e6e722e616d660a,0x3631662520323366,0x3734316625202c38,0x314630346630202c\n"
".quad 0x6625202c34313534,0x6c756d0a3b373631,0x316625203233662e,0x31346625202c3936\n"
".quad 0x304130346630202c,0x6d660a3b30303030,0x3233662e6e722e61,0x202c303731662520\n"
".quad 0x6630202c35336625,0x3030303030413043,0x3b3936316625202c,0x2e6e722e616d660a\n"
".quad 0x3731662520323366,0x3331316625202c31,0x354446336630202c,0x6625202c35353535\n"
".quad 0x6c756d0a3b303731,0x316625203233662e,0x2c356625202c3237,0x3030413034663020\n"
".quad 0x616d660a3b303030,0x203233662e6e722e,0x25202c3337316625,0x30436630202c3466\n"
".quad 0x202c303030303041,0x660a3b3237316625,0x33662e6e722e616d,0x2c34373166252032\n"
".quad 0x202c323231662520,0x3535354446336630,0x37316625202c3535,0x662e6c756d0a3b33\n"
".quad 0x3537316625203233,0x30202c396625202c,0x3030303041303466,0x722e616d660a3b30\n"
".quad 0x6625203233662e6e,0x366625202c363731,0x304130436630202c,0x6625202c30303030\n"
".quad 0x616d660a3b353731,0x203233662e6e722e,0x25202c3737316625,0x6630202c31333166\n"
".quad 0x3535353535444633,0x3b3637316625202c,0x3233662e6464610a,0x202c383731662520\n"
".quad 0x6625202c35336625,0x2e6275730a3b3533,0x3731662520323366,0x3837316625202c39\n"
".quad 0x2e0a3b346625202c,0x3931203220636f6c,0x6464610a31203937,0x316625203233662e\n"
".quad 0x31346625202c3038,0x0a3b31346625202c,0x203233662e646461,0x25202c3138316625\n"
".quad 0x6625202c39373166,0x6275730a3b303831,0x316625203233662e,0x38316625202c3238\n"
".quad 0x0a3b356625202c31,0x31203220636f6c2e,0x64610a3120393739,0x6625203233662e64\n"
".quad 0x316625202c333831,0x37346625202c3238,0x33662e6464610a3b,0x2c34383166252032\n"
".quad 0x202c333831662520,0x64610a3b33356625,0x6625203233662e64,0x316625202c353831\n"
".quad 0x39356625202c3438,0x33662e6464610a3b,0x2c36383166252032,0x202c353831662520\n"
".quad 0x75730a3b35366625,0x6625203233662e62,0x316625202c373831,0x3b366625202c3638\n"
".quad 0x203220636f6c2e0a,0x610a312039373931,0x25203233662e6464,0x6625202c38383166\n"
".quad 0x386625202c373831,0x662e766f6d0a3b33,0x3938316625203233,0x303030436630202c\n"
".quad 0x6c2e0a3b30303030,0x373931203220636f,0x2e616d660a312039,0x25203233662e6e72\n"
".quad 0x6625202c30393166,0x3030436630202c37,0x25202c3030303030,0x64610a3b38383166\n"
".quad 0x6625203233662e64,0x316625202c313931,0x39386625202c3039,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x2c386625202c3239,0x3030303043663020,0x316625202c303030\n"
".quad 0x2e6275730a3b3139,0x3931662520323366,0x3239316625202c33,0x2e0a3b396625202c\n"
".quad 0x3931203220636f6c,0x6464610a31203937,0x316625203233662e,0x39316625202c3439\n"
".quad 0x3b31376625202c33,0x2e6e722e616d660a,0x3931662520323366,0x2c30316625202c35\n"
".quad 0x3030303043663020,0x316625202c303030,0x2e6464610a3b3439,0x3931662520323366\n"
".quad 0x3539316625202c36,0x0a3b37376625202c,0x662e6e722e616d66,0x3739316625203233\n"
".quad 0x2c3131356625202c,0x3030303043663020,0x316625202c303030,0x2e6464610a3b3639\n"
".quad 0x3931662520323366,0x3331316625202c38,0x3b3331316625202c,0x2e6e722e616d660a\n"
".quad 0x3931662520323366,0x3232316625202c39,0x2c3232316625202c,0x0a3b363431662520\n"
".quad 0x203233662e67656e,0x25202c3030326625,0x6d660a3b39393166,0x3233662e6e722e61\n"
".quad 0x202c313032662520,0x25202c3839316625,0x6625202c33313166,0x6275730a3b303032\n"
".quad 0x326625203233662e,0x39316625202c3230,0x3130326625202c37,0x33662e6464610a3b\n"
".quad 0x2c33303266252032,0x6625202c34662520,0x722e616d660a3b34,0x6625203233662e6e\n"
".quad 0x336625202c343032,0x3830436630202c35,0x25202c3030303030,0x6d660a3b33303266\n"
".quad 0x3233662e6e722e61,0x202c353032662520,0x6630202c31346625,0x3030303030383043\n"
".quad 0x3b3430326625202c,0x3233662e6464610a,0x202c363032662520,0x356625202c356625\n"
".quad 0x33662e6464610a3b,0x2c37303266252032,0x202c353032662520,0x610a3b3630326625\n"
".quad 0x25203233662e6464,0x6625202c38303266,0x346625202c373032,0x662e6464610a3b37\n"
".quad 0x3930326625203233,0x2c3830326625202c,0x610a3b3335662520,0x25203233662e6464\n"
".quad 0x6625202c30313266,0x356625202c393032,0x662e6464610a3b39,0x3131326625203233\n"
".quad 0x2c3031326625202c,0x610a3b3536662520,0x25203233662e6464,0x6625202c32313266\n"
".quad 0x0a3b366625202c36,0x203233662e646461,0x25202c3331326625,0x6625202c31313266\n"
".quad 0x6464610a3b323132,0x326625203233662e,0x31326625202c3431,0x3b33386625202c33\n"
".quad 0x2e6e722e616d660a,0x3132662520323366,0x202c376625202c35,0x3030303030436630\n"
".quad 0x31326625202c3030,0x662e6464610a3b34,0x3631326625203233,0x2c3531326625202c\n"
".quad 0x660a3b3938662520,0x33662e6e722e616d,0x2c37313266252032,0x6630202c38662520\n"
".quad 0x3030303030303043,0x3b3631326625202c,0x3233662e6464610a,0x202c383132662520\n"
".quad 0x396625202c396625,0x33662e6464610a3b,0x2c39313266252032,0x202c373132662520\n"
".quad 0x610a3b3831326625,0x25203233662e6464,0x6625202c30323266,0x376625202c393132\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x316625202c313232,0x3030436630202c30\n"
".quad 0x25202c3030303030,0x64610a3b30323266,0x6625203233662e64,0x326625202c323232\n"
".quad 0x37376625202c3132,0x6e722e616d660a3b,0x326625203233662e,0x31356625202c3332\n"
".quad 0x3030436630202c31,0x25202c3030303030,0x64610a3b32323266,0x6625203233662e64\n"
".quad 0x346625202c343232,0x610a3b356625202c,0x25203233662e6464,0x6625202c35323266\n"
".quad 0x346625202c343232,0x662e6464610a3b37,0x3632326625203233,0x2c3532326625202c\n"
".quad 0x610a3b3335662520,0x25203233662e6464,0x6625202c37323266,0x356625202c363232\n"
".quad 0x662e6464610a3b39,0x3832326625203233,0x2c3732326625202c,0x730a3b3536662520\n"
".quad 0x25203233662e6275,0x6625202c39323266,0x366625202c383232,0x33662e6275730a3b\n"
".quad 0x2c30333266252032,0x202c393232662520,0x75730a3b33386625,0x6625203233662e62\n"
".quad 0x326625202c313332,0x39386625202c3033,0x33662e6275730a3b,0x2c32333266252032\n"
".quad 0x202c313332662520,0x6275730a3b396625,0x326625203233662e,0x33326625202c3333\n"
".quad 0x3b31376625202c32,0x3233662e6275730a,0x202c343332662520,0x25202c3333326625\n"
".quad 0x6f6c2e0a3b373766,0x3937393120322063,0x662e67656e0a3120,0x3533326625203233\n"
".quad 0x3b3133316625202c,0x2e6e722e616d660a,0x3332662520323366,0x3533326625202c36\n"
".quad 0x2c3133316625202c,0x0a3b343431662520,0x203233662e627573,0x25202c3733326625\n"
".quad 0x6625202c34333266,0x67656e0a3b363332,0x326625203233662e,0x30326625202c3833\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x346625202c393332,0x2c3938316625202c\n"
".quad 0x0a3b383332662520,0x203233662e646461,0x25202c3034326625,0x6625202c39333266\n"
".quad 0x2e6464610a3b3734,0x3432662520323366,0x3034326625202c31,0x0a3b33356625202c\n"
".quad 0x203233662e646461,0x25202c3234326625,0x6625202c31343266,0x2e6464610a3b3935\n"
".quad 0x3432662520323366,0x3234326625202c33,0x0a3b35366625202c,0x203233662e646461\n"
".quad 0x25202c3434326625,0x6625202c33343266,0x6275730a3b323132,0x326625203233662e\n"
".quad 0x34326625202c3534,0x3b33386625202c34,0x3233662e6275730a,0x202c363432662520\n"
".quad 0x25202c3534326625,0x6f6c2e0a3b393866,0x3937393120322063,0x662e6464610a3120\n"
".quad 0x3734326625203233,0x2c3634326625202c,0x0a3b383132662520,0x203233662e627573\n"
".quad 0x25202c3834326625,0x6625202c37343266,0x2e6275730a3b3137,0x3432662520323366\n"
".quad 0x3834326625202c39,0x0a3b37376625202c,0x203233662e627573,0x25202c3035326625\n"
".quad 0x356625202c373466,0x20636f6c2e0a3b33,0x3120393739312032,0x3233662e6464610a\n"
".quad 0x202c313532662520,0x25202c3035326625,0x6275730a3b393566,0x326625203233662e\n"
".quad 0x35326625202c3235,0x3b35366625202c31,0x203220636f6c2e0a,0x6e0a312039373931\n"
".quad 0x25203233662e6765,0x6625202c33353266,0x616d660a3b333131,0x203233662e6e722e\n"
".quad 0x25202c3435326625,0x6625202c33353266,0x326625202c323231,0x2e6275730a3b3235\n"
".quad 0x3532662520323366,0x202c376625202c35,0x6275730a3b386625,0x326625203233662e\n"
".quad 0x35326625202c3635,0x3b30316625202c35,0x203220636f6c2e0a,0x610a312039373931\n"
".quad 0x25203233662e6464,0x6625202c37353266,0x356625202c363532,0x2e67656e0a3b3131\n"
".quad 0x3532662520323366,0x3232316625202c38,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x35326625202c3935,0x3133316625202c38,0x3b3735326625202c,0x3233662e6275730a\n"
".quad 0x202c303632662520,0x6625202c33386625,0x2e6275730a3b3938,0x3632662520323366\n"
".quad 0x3036326625202c31,0x0a3b31376625202c,0x31203220636f6c2e,0x64610a3120393739\n"
".quad 0x6625203233662e64,0x326625202c323632,0x37376625202c3136,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x35326625202c3336,0x3133316625202c33,0x3b3236326625202c\n"
".quad 0x3233662e6275730a,0x202c343632662520,0x25202c3035326625,0x6f6c2e0a3b393566\n"
".quad 0x3937393120322063,0x662e6464610a3120,0x3536326625203233,0x2c3436326625202c\n"
".quad 0x730a3b3536662520,0x25203233662e6275,0x6625202c36363266,0x386625202c353632\n"
".quad 0x662e6464610a3b33,0x3736326625203233,0x2c3636326625202c,0x730a3b3938662520\n"
".quad 0x25203233662e6275,0x6625202c38363266,0x376625202c373632,0x20636f6c2e0a3b31\n"
".quad 0x3120393739312032,0x3233662e6464610a,0x202c393632662520,0x25202c3836326625\n"
".quad 0x67656e0a3b373766,0x326625203233662e,0x33356625202c3037,0x33662e6275730a3b\n"
".quad 0x2c31373266252032,0x202c303732662520,0x6c2e0a3b37346625,0x373931203220636f\n"
".quad 0x2e6464610a312039,0x3732662520323366,0x3137326625202c32,0x0a3b39356625202c\n"
".quad 0x203233662e646461,0x25202c3337326625,0x6625202c32373266,0x2e6464610a3b3536\n"
".quad 0x3732662520323366,0x3337326625202c34,0x730a3b376625202c,0x25203233662e6275\n"
".quad 0x6625202c35373266,0x386625202c343732,0x3220636f6c2e0a3b,0x0a31203937393120\n"
".quad 0x203233662e646461,0x25202c3637326625,0x6625202c35373266,0x2e6275730a3b3031\n"
".quad 0x3732662520323366,0x3637326625202c37,0x3b3131356625202c,0x3233662e6275730a\n"
".quad 0x202c383732662520,0x6625202c33386625,0x20636f6c2e0a3b37,0x3120393739312032\n"
".quad 0x3233662e6464610a,0x202c393732662520,0x25202c3837326625,0x6275730a3b393866\n"
".quad 0x326625203233662e,0x37326625202c3038,0x0a3b386625202c39,0x203233662e627573\n"
".quad 0x25202c3138326625,0x6625202c30383266,0x636f6c2e0a3b3137,0x2039373931203220\n"
".quad 0x33662e6464610a31,0x2c32383266252032,0x202c313832662520,0x75730a3b30316625\n"
".quad 0x6625203233662e62,0x326625202c333832,0x37376625202c3238,0x3220636f6c2e0a3b\n"
".quad 0x0a31203937393120,0x203233662e646461,0x25202c3438326625,0x6625202c33383266\n"
".quad 0x766f6d0a3b313135,0x326625203233662e,0x45336630202c3538,0x0a3b303030303038\n"
".quad 0x6d617261702e646c,0x356625203233662e,0x315a5f5b202c3031,0x79685f645f524c38\n"
".quad 0x6f665f4443414262,0x665f536650656372,0x695f535f535f536d,0x325f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x3120393739312032,0x3233662e6c756d0a,0x202c363832662520\n"
".quad 0x30202c3031356625,0x3030303038453366,0x662e766f6d0a3b30,0x3738326625203233\n"
".quad 0x303045336630202c,0x6c2e0a3b30303030,0x373931203220636f,0x2e6c756d0a312039\n"
".quad 0x3832662520323366,0x3934326625202c38,0x413244336630202c,0x6f6d0a3b42414141\n"
".quad 0x6625203233662e76,0x336630202c393832,0x3b42414141413244,0x203220636f6c2e0a\n"
".quad 0x6d0a312039373931,0x25203233662e6c75,0x6625202c30393266,0x336630202c303135\n"
".quad 0x3b42414141414144,0x3233662e6c756d0a,0x202c313932662520,0x30202c3332326625\n"
".quad 0x3345383336433366,0x662e6c756d0a3b39,0x3239326625203233,0x2c3031356625202c\n"
".quad 0x3833454333663020,0x6c756d0a3b393345,0x326625203233662e,0x30326625202c3339\n"
".quad 0x3239326625202c32,0x33662e6c756d0a3b,0x2c34393266252032,0x202c313731662520\n"
".quad 0x4343434343336630,0x2e766f6d0a3b4443,0x3932662520323366,0x4343336630202c35\n"
".quad 0x2e0a3b4443434343,0x3931203220636f6c,0x6c756d0a31203937,0x326625203233662e\n"
".quad 0x37316625202c3639,0x4343336630202c34,0x6d0a3b4443434343,0x25203233662e6c75\n"
".quad 0x6625202c37393266,0x336630202c373731,0x3b44434343434343,0x3233662e6c756d0a\n"
".quad 0x202c383932662520,0x30202c3836316625,0x3238303238423366,0x662e6c756d0a3b31\n"
".quad 0x3939326625203233,0x2c3839326625202c,0x3030343134663020,0x616d660a3b303030\n"
".quad 0x203233662e6e722e,0x25202c3030336625,0x6630202c38343166,0x4433464333374542\n"
".quad 0x3b3939326625202c,0x3233662e6275730a,0x202c313033662520,0x336625202c336625\n"
".quad 0x2e6c756d0a3b3030,0x3033662520323366,0x3839326625202c32,0x303830436630202c\n"
".quad 0x6d660a3b30303030,0x3233662e6e722e61,0x202c333033662520,0x30202c3834316625\n"
".quad 0x3242433242444266,0x3230336625202c44,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x39326625202c3430,0x3830436630202c34,0x25202c3030303030,0x6d660a3b33303366\n"
".quad 0x3233662e6e722e61,0x202c353033662520,0x25202c3230326625,0x6625202c32393266\n"
".quad 0x6464610a3b333932,0x336625203233662e,0x30336625202c3630,0x3530336625202c34\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x39326625202c3730,0x3830436630202c31\n"
".quad 0x25202c3030303030,0x75730a3b36303366,0x6625203233662e62,0x336625202c383033\n"
".quad 0x3730336625202c35,0x6e722e616d660a3b,0x336625203233662e,0x39326625202c3930\n"
".quad 0x3830436630202c36,0x25202c3030303030,0x656e0a3b33303366,0x6625203233662e67\n"
".quad 0x326625202c303133,0x2e616d660a3b3230,0x25203233662e6e72,0x6625202c31313366\n"
".quad 0x326625202c303133,0x30336625202c3239,0x20636f6c2e0a3b39,0x3120393739312032\n"
".quad 0x2e6e722e616d660a,0x3133662520323366,0x3332326625202c32,0x333643336630202c\n"
".quad 0x6625202c39334538,0x6464610a3b313932,0x336625203233662e,0x31336625202c3331\n"
".quad 0x3231336625202c31,0x6e722e616d660a3b,0x336625203233662e,0x33326625202c3431\n"
".quad 0x3039326625202c37,0x3b3331336625202c,0x2e6e722e616d660a,0x3133662520323366\n"
".quad 0x3838326625202c35,0x303030436630202c,0x6625202c30303030,0x6275730a3b343133\n"
".quad 0x336625203233662e,0x2c346625202c3631,0x0a3b353133662520,0x662e6e722e616d66\n"
".quad 0x3731336625203233,0x2c3439326625202c,0x3030383034663020,0x336625202c303030\n"
".quad 0x2e6464610a3b3330,0x3133662520323366,0x3731336625202c38,0x3b3530336625202c\n"
".quad 0x2e6e722e616d660a,0x3133662520323366,0x3139326625202c39,0x303830436630202c\n"
".quad 0x6625202c30303030,0x6275730a3b383133,0x336625203233662e,0x31346625202c3032\n"
".quad 0x3b3931336625202c,0x2e6e722e616d660a,0x3233662520323366,0x3639326625202c31\n"
".quad 0x303830346630202c,0x6625202c30303030,0x616d660a3b333033,0x203233662e6e722e\n"
".quad 0x25202c3232336625,0x6625202c30313366,0x336625202c323932,0x636f6c2e0a3b3132\n"
".quad 0x2039373931203220,0x33662e6464610a31,0x2c33323366252032,0x202c323233662520\n"
".quad 0x660a3b3231336625,0x33662e6e722e616d,0x2c34323366252032,0x202c373332662520\n"
".quad 0x25202c3039326625,0x6d660a3b33323366,0x3233662e6e722e61,0x202c353233662520\n"
".quad 0x30202c3838326625,0x3030303030304366,0x3432336625202c30,0x33662e6275730a3b\n"
".quad 0x2c36323366252032,0x6625202c35662520,0x616d660a3b353233,0x203233662e6e722e\n"
".quad 0x25202c3732336625,0x6630202c38343166,0x3032383032384433,0x3b3839326625202c\n"
".quad 0x2e6e722e616d660a,0x3233662520323366,0x3137316625202c38,0x434343336630202c\n"
".quad 0x6625202c44434343,0x616d660a3b373233,0x203233662e6e722e,0x25202c3932336625\n"
".quad 0x6630202c34373166,0x4443434343434333,0x3b3832336625202c,0x2e6e722e616d660a\n"
".quad 0x3333662520323366,0x3230326625202c30,0x2c3239326625202c,0x0a3b393233662520\n"
".quad 0x662e6e722e616d66,0x3133336625203233,0x2c3332326625202c,0x3833364333663020\n"
".quad 0x336625202c393345,0x2e616d660a3b3033,0x25203233662e6e72,0x6625202c32333366\n"
".quad 0x326625202c373332,0x33336625202c3039,0x722e616d660a3b31,0x6625203233662e6e\n"
".quad 0x326625202c333333,0x44336630202c3934,0x202c424141414132,0x660a3b3233336625\n"
".quad 0x33662e6e722e616d,0x2c34333366252032,0x202c343532662520,0x3030303845336630\n"
".quad 0x33336625202c3030,0x722e616d660a3b33,0x6625203233662e6e,0x326625202c353333\n"
".quad 0x45336630202c3936,0x202c303030303030,0x6e0a3b3433336625,0x25203233662e6765\n"
".quad 0x6625202c36333366,0x616d660a3b373732,0x203233662e6e722e,0x25202c3733336625\n"
".quad 0x6625202c36333366,0x336625202c373832,0x636f6c2e0a3b3533,0x2039373931203220\n"
".quad 0x33662e6275730a31,0x2c38333366252032,0x25202c3734662520,0x656e0a3b37333366\n"
".quad 0x6625203233662e67,0x316625202c393333,0x2e616d660a3b3137,0x25203233662e6e72\n"
".quad 0x6625202c30343366,0x326625202c393333,0x32336625202c3539,0x20636f6c2e0a3b37\n"
".quad 0x3120393739312032,0x2e6e722e616d660a,0x3433662520323366,0x3437316625202c31\n"
".quad 0x434343336630202c,0x6625202c44434343,0x616d660a3b303433,0x203233662e6e722e\n"
".quad 0x25202c3234336625,0x6625202c32303266,0x336625202c323932,0x2e616d660a3b3134\n"
".quad 0x25203233662e6e72,0x6625202c33343366,0x336630202c333232,0x2c39334538333643\n"
".quad 0x0a3b323433662520,0x662e6e722e616d66,0x3434336625203233,0x2c3733326625202c\n"
".quad 0x202c303932662520,0x660a3b3334336625,0x33662e6e722e616d,0x2c35343366252032\n"
".quad 0x202c393432662520,0x4141413244336630,0x34336625202c4241,0x662e67656e0a3b34\n"
".quad 0x3634336625203233,0x3b3435326625202c,0x2e6e722e616d660a,0x3433662520323366\n"
".quad 0x3634336625202c37,0x2c3538326625202c,0x0a3b353433662520,0x203233662e67656e\n"
".quad 0x25202c3834336625,0x6d660a3b39363266,0x3233662e6e722e61,0x202c393433662520\n"
".quad 0x25202c3834336625,0x6625202c37383266,0x616d660a3b373433,0x203233662e6e722e\n"
".quad 0x25202c3035336625,0x6625202c36333366,0x336625202c373832,0x636f6c2e0a3b3934\n"
".quad 0x2039373931203220,0x33662e6275730a31,0x2c31353366252032,0x25202c3335662520\n"
".quad 0x656e0a3b30353366,0x6625203233662e67,0x316625202c323533,0x2e616d660a3b3437\n"
".quad 0x25203233662e6e72,0x6625202c33353366,0x326625202c323533,0x34336625202c3539\n"
".quad 0x20636f6c2e0a3b30,0x3120393739312032,0x2e6e722e616d660a,0x3533662520323366\n"
".quad 0x3230326625202c34,0x2c3239326625202c,0x0a3b333533662520,0x662e6e722e616d66\n"
".quad 0x3535336625203233,0x2c3332326625202c,0x3833364333663020,0x336625202c393345\n"
".quad 0x2e616d660a3b3435,0x25203233662e6e72,0x6625202c36353366,0x326625202c373332\n"
".quad 0x35336625202c3039,0x722e616d660a3b35,0x6625203233662e6e,0x326625202c373533\n"
".quad 0x44336630202c3934,0x202c424141414132,0x660a3b3635336625,0x33662e6e722e616d\n"
".quad 0x2c38353366252032,0x202c343532662520,0x3030303845336630,0x35336625202c3030\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x336625202c393533,0x38326625202c3834\n"
".quad 0x3835336625202c37,0x3220636f6c2e0a3b,0x0a31203937393120,0x662e6e722e616d66\n"
".quad 0x3036336625203233,0x2c3737326625202c,0x3030304533663020,0x336625202c303030\n"
".quad 0x2e6275730a3b3935,0x3633662520323366,0x2c39356625202c31,0x0a3b303633662520\n"
".quad 0x662e6e722e616d66,0x3236336625203233,0x2c3235336625202c,0x202c353932662520\n"
".quad 0x2e0a3b3832336625,0x3931203220636f6c,0x616d660a31203937,0x203233662e6e722e\n"
".quad 0x25202c3336336625,0x6625202c32303266,0x336625202c323932,0x2e616d660a3b3236\n"
".quad 0x25203233662e6e72,0x6625202c34363366,0x336630202c333232,0x2c39334538333643\n"
".quad 0x0a3b333633662520,0x662e6e722e616d66,0x3536336625203233,0x2c3733326625202c\n"
".quad 0x202c303932662520,0x660a3b3436336625,0x33662e6e722e616d,0x2c36363366252032\n"
".quad 0x202c393432662520,0x4141413244336630,0x36336625202c4241,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x336625202c373633,0x38326625202c3634,0x3636336625202c35\n"
".quad 0x3220636f6c2e0a3b,0x0a31203937393120,0x662e6e722e616d66,0x3836336625203233\n"
".quad 0x2c3936326625202c,0x3030304533663020,0x336625202c303030,0x2e616d660a3b3736\n"
".quad 0x25203233662e6e72,0x6625202c39363366,0x336630202c373732,0x2c30303030303045\n"
".quad 0x0a3b383633662520,0x203233662e627573,0x25202c3037336625,0x336625202c353666\n"
".quad 0x2e616d660a3b3936,0x25203233662e6e72,0x6625202c31373366,0x436630202c373932\n"
".quad 0x2c30303030303830,0x0a3b333033662520,0x662e6e722e616d66,0x3237336625203233\n"
".quad 0x2c3031336625202c,0x202c323932662520,0x2e0a3b3137336625,0x3931203220636f6c\n"
".quad 0x6464610a31203937,0x336625203233662e,0x37336625202c3337,0x3231336625202c32\n"
".quad 0x33662e67656e0a3b,0x2c34373366252032,0x0a3b373332662520,0x662e6e722e616d66\n"
".quad 0x3537336625203233,0x2c3437336625202c,0x202c303932662520,0x2e0a3b3337336625\n"
".quad 0x3931203220636f6c,0x616d660a31203937,0x203233662e6e722e,0x25202c3637336625\n"
".quad 0x6630202c39343266,0x4241414141324433,0x3b3838326625202c,0x3233662e6464610a\n"
".quad 0x202c373733662520,0x25202c3537336625,0x75730a3b36373366,0x6625203233662e62\n"
".quad 0x366625202c383733,0x3b3737336625202c,0x2e6e722e616d660a,0x3733662520323366\n"
".quad 0x3737316625202c39,0x434343336630202c,0x6625202c44434343,0x616d660a3b383233\n"
".quad 0x203233662e6e722e,0x25202c3038336625,0x6625202c32303266,0x336625202c323932\n"
".quad 0x2e616d660a3b3937,0x25203233662e6e72,0x6625202c31383366,0x336630202c333232\n"
".quad 0x2c39334538333643,0x0a3b303833662520,0x662e6e722e616d66,0x3238336625203233\n"
".quad 0x2c3437336625202c,0x202c303932662520,0x6e0a3b3138336625,0x25203233662e6765\n"
".quad 0x6625202c33383366,0x616d660a3b393432,0x203233662e6e722e,0x25202c3438336625\n"
".quad 0x6625202c33383366,0x336625202c393832,0x636f6c2e0a3b3238,0x2039373931203220\n"
".quad 0x6e722e616d660a31,0x336625203233662e,0x36326625202c3538,0x3638326625202c33\n"
".quad 0x3b3438336625202c,0x2e6e722e616d660a,0x3833662520323366,0x3834336625202c36\n"
".quad 0x2c3738326625202c,0x0a3b353833662520,0x31203220636f6c2e,0x6d660a3120393739\n"
".quad 0x3233662e6e722e61,0x202c373833662520,0x30202c3438326625,0x3030303030453366\n"
".quad 0x3638336625202c30,0x33662e6275730a3b,0x2c38383366252032,0x25202c3338662520\n"
".quad 0x6d660a3b37383366,0x3233662e6e722e61,0x202c393833662520,0x30202c3437316625\n"
".quad 0x4343434343433366,0x3732336625202c44,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x37316625202c3039,0x4343336630202c37,0x25202c4443434343,0x6d660a3b39383366\n"
".quad 0x3233662e6e722e61,0x202c313933662520,0x30202c3339326625,0x3030303030304366\n"
".quad 0x3039336625202c30,0x6e722e616d660a3b,0x336625203233662e,0x39326625202c3239\n"
".quad 0x3030436630202c31,0x25202c3030303030,0x6d660a3b31393366,0x3233662e6e722e61\n"
".quad 0x202c333933662520,0x30202c3935326625,0x3030303038453366,0x3239336625202c30\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x37326625202c3439,0x3045336630202c37\n"
".quad 0x25202c3030303030,0x656e0a3b33393366,0x6625203233662e67,0x326625202c353933\n"
".quad 0x2e616d660a3b3438,0x25203233662e6e72,0x6625202c36393366,0x326625202c353933\n"
".quad 0x39336625202c3738,0x20636f6c2e0a3b34,0x3120393739312032,0x3233662e6275730a\n"
".quad 0x202c373933662520,0x336625202c376625,0x2e616d660a3b3639,0x25203233662e6e72\n"
".quad 0x6625202c38393366,0x336630202c373731,0x2c44434343434343,0x0a3b303433662520\n"
".quad 0x662e6e722e616d66,0x3939336625203233,0x2c3230326625202c,0x202c323932662520\n"
".quad 0x660a3b3839336625,0x33662e6e722e616d,0x2c30303466252032,0x202c333232662520\n"
".quad 0x4538333643336630,0x39336625202c3933,0x722e616d660a3b39,0x6625203233662e6e\n"
".quad 0x336625202c313034,0x39326625202c3437,0x3030346625202c30,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x38336625202c3230,0x3938326625202c33,0x3b3130346625202c\n"
".quad 0x3233662e67656e0a,0x202c333034662520,0x660a3b3336326625,0x33662e6e722e616d\n"
".quad 0x2c34303466252032,0x202c333034662520,0x25202c3638326625,0x6c2e0a3b32303466\n"
".quad 0x373931203220636f,0x2e616d660a312039,0x25203233662e6e72,0x6625202c35303466\n"
".quad 0x336630202c393632,0x2c30303030303045,0x0a3b343034662520,0x662e6e722e616d66\n"
".quad 0x3630346625203233,0x2c3438326625202c,0x3030304533663020,0x346625202c303030\n"
".quad 0x2e6275730a3b3530,0x3034662520323366,0x2c39386625202c37,0x0a3b363034662520\n"
".quad 0x662e6e722e616d66,0x3830346625203233,0x2c3235336625202c,0x202c353932662520\n"
".quad 0x2e0a3b3732336625,0x3931203220636f6c,0x616d660a31203937,0x203233662e6e722e\n"
".quad 0x25202c3930346625,0x6630202c37373166,0x4443434343434333,0x3b3830346625202c\n"
".quad 0x2e6e722e616d660a,0x3134662520323366,0x3339326625202c30,0x303030436630202c\n"
".quad 0x6625202c30303030,0x616d660a3b393034,0x203233662e6e722e,0x25202c3131346625\n"
".quad 0x6630202c31393266,0x3030303030303043,0x3b3031346625202c,0x3233662e67656e0a\n"
".quad 0x202c323134662520,0x660a3b3935326625,0x33662e6e722e616d,0x2c33313466252032\n"
".quad 0x202c323134662520,0x25202c3538326625,0x6d660a3b31313466,0x3233662e6e722e61\n"
".quad 0x202c343134662520,0x25202c3633336625,0x6625202c37383266,0x616d660a3b333134\n"
".quad 0x203233662e6e722e,0x25202c3531346625,0x6625202c35393366,0x346625202c373832\n"
".quad 0x636f6c2e0a3b3431,0x2039373931203220,0x33662e6275730a31,0x2c36313466252032\n"
".quad 0x6625202c38662520,0x616d660a3b353134,0x203233662e6e722e,0x25202c3731346625\n"
".quad 0x6630202c37393266,0x3030303030383034,0x3b3330336625202c,0x2e6e722e616d660a\n"
".quad 0x3134662520323366,0x3031336625202c38,0x2c3239326625202c,0x0a3b373134662520\n"
".quad 0x31203220636f6c2e,0x64610a3120393739,0x6625203233662e64,0x346625202c393134\n"
".quad 0x31336625202c3831,0x722e616d660a3b32,0x6625203233662e6e,0x336625202c303234\n"
".quad 0x39326625202c3437,0x3931346625202c30,0x3220636f6c2e0a3b,0x0a31203937393120\n"
".quad 0x203233662e646461,0x25202c3132346625,0x6625202c30323466,0x6275730a3b363733\n"
".quad 0x346625203233662e,0x2c396625202c3232,0x0a3b313234662520,0x203233662e67656e\n"
".quad 0x25202c3332346625,0x6d660a3b37373166,0x3233662e6e722e61,0x202c343234662520\n"
".quad 0x25202c3332346625,0x6625202c35393266,0x6f6c2e0a3b383233,0x3937393120322063\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x326625202c353234,0x39326625202c3230\n"
".quad 0x3432346625202c32,0x6e722e616d660a3b,0x346625203233662e,0x32326625202c3632\n"
".quad 0x3643336630202c33,0x25202c3933453833,0x6d660a3b35323466,0x3233662e6e722e61\n"
".quad 0x202c373234662520,0x25202c3437336625,0x6625202c30393266,0x616d660a3b363234\n"
".quad 0x203233662e6e722e,0x25202c3832346625,0x6625202c33383366,0x346625202c393832\n"
".quad 0x2e616d660a3b3732,0x25203233662e6e72,0x6625202c39323466,0x326625202c333034\n"
".quad 0x32346625202c3638,0x722e616d660a3b38,0x6625203233662e6e,0x336625202c303334\n"
".quad 0x38326625202c3834,0x3932346625202c37,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x39336625202c3133,0x3738326625202c35,0x3b3033346625202c,0x203220636f6c2e0a\n"
".quad 0x730a312039373931,0x25203233662e6275,0x6625202c32333466,0x33346625202c3137\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x346625202c333334,0x39326625202c3332\n"
".quad 0x3938336625202c35,0x3220636f6c2e0a3b,0x0a31203937393120,0x662e6e722e616d66\n"
".quad 0x3433346625203233,0x2c3339326625202c,0x3030303043663020,0x346625202c303030\n"
".quad 0x2e616d660a3b3333,0x25203233662e6e72,0x6625202c35333466,0x436630202c313932\n"
".quad 0x2c30303030303030,0x0a3b343334662520,0x662e6e722e616d66,0x3633346625203233\n"
".quad 0x2c3231346625202c,0x202c353832662520,0x2e0a3b3533346625,0x3931203220636f6c\n"
".quad 0x616d660a31203937,0x203233662e6e722e,0x25202c3733346625,0x6630202c37373266\n"
".quad 0x3030303030304533,0x3b3633346625202c,0x2e6e722e616d660a,0x3334662520323366\n"
".quad 0x3438326625202c38,0x303045336630202c,0x6625202c30303030,0x6275730a3b373334\n"
".quad 0x346625203233662e,0x30316625202c3933,0x3b3833346625202c,0x2e6e722e616d660a\n"
".quad 0x3434662520323366,0x3332346625202c30,0x2c3539326625202c,0x0a3b303433662520\n"
".quad 0x31203220636f6c2e,0x6d660a3120393739,0x3233662e6e722e61,0x202c313434662520\n"
".quad 0x25202c3230326625,0x6625202c32393266,0x616d660a3b303434,0x203233662e6e722e\n"
".quad 0x25202c3234346625,0x6630202c33323266,0x3933453833364333,0x3b3134346625202c\n"
".quad 0x2e6e722e616d660a,0x3434662520323366,0x3437336625202c33,0x2c3039326625202c\n"
".quad 0x0a3b323434662520,0x662e6e722e616d66,0x3434346625203233,0x2c3338336625202c\n"
".quad 0x202c393832662520,0x2e0a3b3334346625,0x3931203220636f6c,0x616d660a31203937\n"
".quad 0x203233662e6e722e,0x25202c3534346625,0x6625202c33363266,0x346625202c363832\n"
".quad 0x2e616d660a3b3434,0x25203233662e6e72,0x6625202c36343466,0x336630202c393632\n"
".quad 0x2c30303030303045,0x0a3b353434662520,0x662e6e722e616d66,0x3734346625203233\n"
".quad 0x2c3539336625202c,0x202c373832662520,0x2e0a3b3634346625,0x3931203220636f6c\n"
".quad 0x6275730a31203937,0x346625203233662e,0x37376625202c3834,0x3b3734346625202c\n"
".quad 0x2e6e722e616d660a,0x3434662520323366,0x3332346625202c39,0x2c3539326625202c\n"
".quad 0x0a3b383034662520,0x31203220636f6c2e,0x6d660a3120393739,0x3233662e6e722e61\n"
".quad 0x202c303534662520,0x30202c3339326625,0x3030303030304366,0x3934346625202c30\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x39326625202c3135,0x3030436630202c31\n"
".quad 0x25202c3030303030,0x6d660a3b30353466,0x3233662e6e722e61,0x202c323534662520\n"
".quad 0x30202c3935326625,0x3030303038453366,0x3135346625202c30,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x33336625202c3335,0x3738326625202c36,0x3b3235346625202c\n"
".quad 0x203220636f6c2e0a,0x660a312039373931,0x33662e6e722e616d,0x2c34353466252032\n"
".quad 0x202c343832662520,0x3030303045336630,0x35346625202c3030,0x662e6275730a3b33\n"
".quad 0x3535346625203233,0x2c3131356625202c,0x0a3b343534662520,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c323533,0x685f645f524c3831,0x665f444341426279\n"
".quad 0x5f5366506563726f,0x5f535f535f536d66,0x5f6d617261705f69,0x636f6c2e0a3b5d33\n"
".quad 0x2039383831203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x316c7225202c3639\n"
".quad 0x35336c7225202c32,0x3b356c7225202c32,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5f5b202c3035336c,0x5f645f524c38315a,0x5f44434142627968,0x5366506563726f66\n"
".quad 0x535f535f536d665f,0x6d617261705f695f,0x7476630a3b5d315f,0x6f6c672e6f742e61\n"
".quad 0x203436752e6c6162,0x25202c37396c7225,0x730a3b3035336c72,0x25203436622e6c68\n"
".quad 0x7225202c38396c72,0x3b3233202c36396c,0x3436732e7268730a,0x202c39396c722520\n"
".quad 0x33202c38396c7225,0x20636f6c2e0a3b32,0x3120333839312032,0x3436622e6c68730a\n"
".quad 0x2c3030316c722520,0x202c39396c722520,0x732e6464610a3b32,0x30316c7225203436\n"
".quad 0x37396c7225202c31,0x3030316c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x5d3130316c72255b,0x3b3130336625202c,0x3436732e6464610a,0x2c3230316c722520\n"
".quad 0x202c32316c722520,0x6c2e0a3b36393034,0x343931203220636f,0x2e64616d0a312030\n"
".quad 0x25203436732e6f6c,0x25202c3330316c72,0x25202c3230316c72,0x25202c3235336c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c343031,0x3b3233202c333031\n"
".quad 0x3436732e7268730a,0x2c3530316c722520,0x2c3430316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3034393120322063,0x622e6c68730a3120,0x30316c7225203436,0x30316c7225202c36\n"
".quad 0x64610a3b32202c35,0x7225203436732e64,0x7225202c3730316c,0x6c7225202c37396c\n"
".quad 0x6f6c2e0a3b363031,0x3438393120322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3730316c72255b20,0x3830336625202c5d,0x36732e6464610a3b,0x3830316c72252034\n"
".quad 0x2c32316c7225202c,0x2e0a3b3239313820,0x3931203220636f6c,0x64616d0a31203134\n"
".quad 0x203436732e6f6c2e,0x202c3930316c7225,0x202c3830316c7225,0x202c3235336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3031316c,0x3233202c3930316c\n"
".quad 0x36732e7268730a3b,0x3131316c72252034,0x3031316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x343931203220636f,0x2e6c68730a312031,0x316c722520343662,0x316c7225202c3231\n"
".quad 0x610a3b32202c3131,0x25203436732e6464,0x25202c3331316c72,0x7225202c37396c72\n"
".quad 0x6c2e0a3b3231316c,0x383931203220636f,0x672e74730a312035,0x33662e6c61626f6c\n"
".quad 0x31316c72255b2032,0x31336625202c5d33,0x732e6464610a3b36,0x31316c7225203436\n"
".quad 0x32316c7225202c34,0x3b3838323231202c,0x203220636f6c2e0a,0x6d0a312032343931\n"
".quad 0x36732e6f6c2e6461,0x3531316c72252034,0x3431316c7225202c,0x3235336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3631316c7225,0x202c3531316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3731,0x0a3b3233202c3631\n"
".quad 0x31203220636f6c2e,0x68730a3120323439,0x7225203436622e6c,0x7225202c3831316c\n"
".quad 0x3b32202c3731316c,0x3436732e6464610a,0x2c3931316c722520,0x202c37396c722520\n"
".quad 0x0a3b3831316c7225,0x31203220636f6c2e,0x74730a3120363839,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d393131,0x6464610a3b303233,0x6c7225203436732e\n"
".quad 0x6c7225202c303231,0x38333631202c3231,0x20636f6c2e0a3b34,0x3120333439312032\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3132,0x336c7225202c3032\n"
".quad 0x356c7225202c3235,0x36622e6c68730a3b,0x3232316c72252034,0x3132316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3332316c,0x3233202c3232316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203334393120,0x203436622e6c6873,0x202c3432316c7225\n"
".quad 0x202c3332316c7225,0x732e6464610a3b32,0x32316c7225203436,0x37396c7225202c35\n"
".quad 0x3432316c7225202c,0x3220636f6c2e0a3b,0x0a31203738393120,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3532316c72,0x610a3b3632336625,0x25203436732e6464\n"
".quad 0x25202c3632316c72,0x3032202c32316c72,0x6f6c2e0a3b303834,0x3434393120322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3732316c,0x7225202c3632316c\n"
".quad 0x7225202c3235336c,0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3832\n"
".quad 0x0a3b3233202c3732,0x203436732e726873,0x202c3932316c7225,0x202c3832316c7225\n"
".quad 0x636f6c2e0a3b3233,0x2034343931203220,0x36622e6c68730a31,0x3033316c72252034\n"
".quad 0x3932316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c313331\n"
".quad 0x316c7225202c3739,0x636f6c2e0a3b3033,0x2038383931203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x5d3133316c72255b,0x3b3833336625202c,0x3436732e6464610a\n"
".quad 0x2c3233316c722520,0x202c32316c722520,0x2e0a3b3637353432,0x3931203220636f6c\n"
".quad 0x64616d0a31203534,0x203436732e6f6c2e,0x202c3333316c7225,0x202c3233316c7225\n"
".quad 0x202c3235336c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3433316c\n"
".quad 0x3233202c3333316c,0x36732e7268730a3b,0x3533316c72252034,0x3433316c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x343931203220636f,0x2e6c68730a312035,0x316c722520343662\n"
".quad 0x316c7225202c3633,0x610a3b32202c3533,0x25203436732e6464,0x25202c3733316c72\n"
".quad 0x7225202c37396c72,0x6c2e0a3b3633316c,0x383931203220636f,0x672e74730a312039\n"
".quad 0x33662e6c61626f6c,0x33316c72255b2032,0x35336625202c5d37,0x732e6464610a3b31\n"
".quad 0x33316c7225203436,0x32316c7225202c38,0x3b3237363832202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312036343931,0x36732e6f6c2e6461,0x3933316c72252034,0x3833316c7225202c\n"
".quad 0x3235336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3034316c7225\n"
".quad 0x202c3933316c7225,0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3134\n"
".quad 0x0a3b3233202c3034,0x31203220636f6c2e,0x68730a3120363439,0x7225203436622e6c\n"
".quad 0x7225202c3234316c,0x3b32202c3134316c,0x3436732e6464610a,0x2c3334316c722520\n"
".quad 0x202c37396c722520,0x0a3b3234316c7225,0x31203220636f6c2e,0x74730a3120303939\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d333431,0x6464610a3b313633\n"
".quad 0x6c7225203436732e,0x6c7225202c343431,0x36373233202c3231,0x20636f6c2e0a3b38\n"
".quad 0x3120373439312032,0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3534\n"
".quad 0x336c7225202c3434,0x356c7225202c3235,0x36622e6c68730a3b,0x3634316c72252034\n"
".quad 0x3534316c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3734316c\n"
".quad 0x3233202c3634316c,0x3220636f6c2e0a3b,0x0a31203734393120,0x203436622e6c6873\n"
".quad 0x202c3834316c7225,0x202c3734316c7225,0x732e6464610a3b32,0x34316c7225203436\n"
".quad 0x37396c7225202c39,0x3834316c7225202c,0x3220636f6c2e0a3b,0x0a31203139393120\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3934316c72,0x610a3b3037336625\n"
".quad 0x25203436732e6464,0x25202c3035316c72,0x3633202c32316c72,0x6f6c2e0a3b343638\n"
".quad 0x3834393120322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3135316c\n"
".quad 0x7225202c3035316c,0x7225202c3235336c,0x2e6c68730a3b356c,0x316c722520343662\n"
".quad 0x316c7225202c3235,0x0a3b3233202c3135,0x203436732e726873,0x202c3335316c7225\n"
".quad 0x202c3235316c7225,0x636f6c2e0a3b3233,0x2038343931203220,0x36622e6c68730a31\n"
".quad 0x3435316c72252034,0x3335316c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c353531,0x316c7225202c3739,0x636f6c2e0a3b3435,0x2032393931203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3535316c72255b,0x3b3837336625202c\n"
".quad 0x3436732e6464610a,0x2c3635316c722520,0x202c32316c722520,0x2e0a3b3036393034\n"
".quad 0x3931203220636f6c,0x64616d0a31203934,0x203436732e6f6c2e,0x202c3735316c7225\n"
".quad 0x202c3635316c7225,0x202c3235336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3835316c,0x3233202c3735316c,0x36732e7268730a3b,0x3935316c72252034\n"
".quad 0x3835316c7225202c,0x6c2e0a3b3233202c,0x343931203220636f,0x2e6c68730a312039\n"
".quad 0x316c722520343662,0x316c7225202c3036,0x610a3b32202c3935,0x25203436732e6464\n"
".quad 0x25202c3136316c72,0x7225202c37396c72,0x6c2e0a3b3036316c,0x393931203220636f\n"
".quad 0x672e74730a312033,0x33662e6c61626f6c,0x36316c72255b2032,0x38336625202c5d31\n"
".quad 0x732e6464610a3b38,0x36316c7225203436,0x32316c7225202c32,0x3b3635303534202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312030353931,0x36732e6f6c2e6461,0x3336316c72252034\n"
".quad 0x3236316c7225202c,0x3235336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3436316c7225,0x202c3336316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3536,0x0a3b3233202c3436,0x31203220636f6c2e,0x68730a3120303539\n"
".quad 0x7225203436622e6c,0x7225202c3636316c,0x3b32202c3536316c,0x3436732e6464610a\n"
".quad 0x2c3736316c722520,0x202c37396c722520,0x0a3b3636316c7225,0x31203220636f6c2e\n"
".quad 0x74730a3120343939,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d373631\n"
".quad 0x6464610a3b373933,0x6c7225203436732e,0x6c7225202c383631,0x35313934202c3231\n"
".quad 0x20636f6c2e0a3b32,0x3120313539312032,0x2e6f6c2e64616d0a,0x316c722520343673\n"
".quad 0x316c7225202c3936,0x336c7225202c3836,0x356c7225202c3235,0x36622e6c68730a3b\n"
".quad 0x3037316c72252034,0x3936316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3137316c,0x3233202c3037316c,0x3220636f6c2e0a3b,0x0a31203135393120\n"
".quad 0x203436622e6c6873,0x202c3237316c7225,0x202c3137316c7225,0x732e6464610a3b32\n"
".quad 0x37316c7225203436,0x37396c7225202c33,0x3237316c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203539393120,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3337316c72\n"
".quad 0x610a3b3730346625,0x25203436732e6464,0x25202c3437316c72,0x3335202c32316c72\n"
".quad 0x6f6c2e0a3b383432,0x3235393120322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3537316c,0x7225202c3437316c,0x7225202c3235336c,0x2e6c68730a3b356c\n"
".quad 0x316c722520343662,0x316c7225202c3637,0x0a3b3233202c3537,0x203436732e726873\n"
".quad 0x202c3737316c7225,0x202c3637316c7225,0x636f6c2e0a3b3233,0x2032353931203220\n"
".quad 0x36622e6c68730a31,0x3837316c72252034,0x3737316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c393731,0x316c7225202c3739,0x636f6c2e0a3b3837\n"
".quad 0x2036393931203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3937316c72255b\n"
".quad 0x3b3631346625202c,0x3436732e6464610a,0x2c3038316c722520,0x202c32316c722520\n"
".quad 0x2e0a3b3434333735,0x3931203220636f6c,0x64616d0a31203335,0x203436732e6f6c2e\n"
".quad 0x202c3138316c7225,0x202c3038316c7225,0x202c3235336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3238316c,0x3233202c3138316c,0x36732e7268730a3b\n"
".quad 0x3338316c72252034,0x3238316c7225202c,0x6c2e0a3b3233202c,0x353931203220636f\n"
".quad 0x2e6c68730a312033,0x316c722520343662,0x316c7225202c3438,0x610a3b32202c3338\n"
".quad 0x25203436732e6464,0x25202c3538316c72,0x7225202c37396c72,0x6c2e0a3b3438316c\n"
".quad 0x393931203220636f,0x672e74730a312037,0x33662e6c61626f6c,0x38316c72255b2032\n"
".quad 0x32346625202c5d35,0x732e6464610a3b32,0x38316c7225203436,0x32316c7225202c36\n"
".quad 0x3b3034343136202c,0x203220636f6c2e0a,0x6d0a312034353931,0x36732e6f6c2e6461\n"
".quad 0x3738316c72252034,0x3638316c7225202c,0x3235336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3838316c7225,0x202c3738316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3938,0x0a3b3233202c3838,0x31203220636f6c2e\n"
".quad 0x68730a3120343539,0x7225203436622e6c,0x7225202c3039316c,0x3b32202c3938316c\n"
".quad 0x3436732e6464610a,0x2c3139316c722520,0x202c37396c722520,0x0a3b3039316c7225\n"
".quad 0x31203220636f6c2e,0x74730a3120383939,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d313931,0x6464610a3b323334,0x6c7225203436732e,0x6c7225202c323931\n"
".quad 0x33353536202c3231,0x20636f6c2e0a3b36,0x3120353539312032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3339,0x336c7225202c3239,0x356c7225202c3235\n"
".quad 0x36622e6c68730a3b,0x3439316c72252034,0x3339316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3539316c,0x3233202c3439316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203535393120,0x203436622e6c6873,0x202c3639316c7225,0x202c3539316c7225\n"
".quad 0x732e6464610a3b32,0x39316c7225203436,0x37396c7225202c37,0x3639316c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203939393120,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3739316c72,0x610a3b3933346625,0x25203436732e6464,0x25202c3839316c72\n"
".quad 0x3936202c32316c72,0x6f6c2e0a3b323336,0x3635393120322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3939316c,0x7225202c3839316c,0x7225202c3235336c\n"
".quad 0x2e6c68730a3b356c,0x326c722520343662,0x316c7225202c3030,0x0a3b3233202c3939\n"
".quad 0x203436732e726873,0x202c3130326c7225,0x202c3030326c7225,0x636f6c2e0a3b3233\n"
".quad 0x2036353931203220,0x36622e6c68730a31,0x3230326c72252034,0x3130326c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c333032,0x326c7225202c3739\n"
".quad 0x636f6c2e0a3b3230,0x2030303032203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x5d3330326c72255b,0x3b3834346625202c,0x3436732e6464610a,0x2c3430326c722520\n"
".quad 0x202c32316c722520,0x2e0a3b3832373337,0x3931203220636f6c,0x64616d0a31203735\n"
".quad 0x203436732e6f6c2e,0x202c3530326c7225,0x202c3430326c7225,0x202c3235336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3630326c,0x3233202c3530326c\n"
".quad 0x36732e7268730a3b,0x3730326c72252034,0x3630326c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x353931203220636f,0x2e6c68730a312037,0x326c722520343662,0x326c7225202c3830\n"
".quad 0x610a3b32202c3730,0x25203436732e6464,0x25202c3930326c72,0x7225202c37396c72\n"
".quad 0x6c2e0a3b3830326c,0x303032203220636f,0x672e74730a312031,0x33662e6c61626f6c\n"
".quad 0x30326c72255b2032,0x35346625202c5d39,0x752e6172620a3b35,0x5f3831424220696e\n"
".quad 0x3142420a0a3b3031,0x6f6c2e0a3a355f38,0x3732393120322063,0x20317025400a3120\n"
".quad 0x3831424220617262,0x6f6c2e0a0a3b375f,0x3338383120322063,0x752e766f6d0a3120\n"
".quad 0x3736317225203233,0x782e64697425202c,0x69772e6c756d0a3b,0x25203233752e6564\n"
".quad 0x25202c3031326c72,0x3b34202c37363172,0x3436732e6464610a,0x2c3231326c722520\n"
".quad 0x202c34316c722520,0x0a3b3031326c7225,0x31203220636f6c2e,0x74730a3120363339\n"
".quad 0x2e6465726168732e,0x6c72255b20323375,0x7225202c5d323132,0x2e6464610a3b3931\n"
".quad 0x326c722520343673,0x316c7225202c3431,0x31326c7225202c35,0x20636f6c2e0a3b30\n"
".quad 0x3120373339312032,0x726168732e74730a,0x5b203233752e6465,0x2c5d3431326c7225\n"
".quad 0x610a3b3931722520,0x25203436732e6464,0x25202c3631326c72,0x7225202c36316c72\n"
".quad 0x6c2e0a3b3031326c,0x333931203220636f,0x732e74730a312038,0x33752e6465726168\n"
".quad 0x31326c72255b2032,0x39317225202c5d36,0x6e752e6172620a3b,0x385f383142422069\n"
".quad 0x5f383142420a0a3b,0x752e766f6d0a3a37,0x3031317225203233,0x6f6c2e0a3b31202c\n"
".quad 0x3832393120322063,0x68732e74730a3120,0x3233752e64657261,0x616475635f5f5b20\n"
".quad 0x765f6c61636f6c5f,0x30383237335f7261,0x5f6e6f6e5f30335f,0x68635f74736e6f63\n"
".quad 0x7225202c5d6b6365,0x6f6c2e0a3b303131,0x3932393120322063,0x662e6464610a3120\n"
".quad 0x3635346625203233,0x202c35336625202c,0x6d660a3b35336625,0x3233662e6e722e61\n"
".quad 0x202c373534662520,0x6630202c31346625,0x3030303030303043,0x3b3635346625202c\n"
".quad 0x3233662e6464610a,0x202c383534662520,0x6625202c37346625,0x2e6464610a3b3734\n"
".quad 0x3534662520323366,0x3735346625202c39,0x3b3835346625202c,0x3233662e6464610a\n"
".quad 0x202c303634662520,0x6625202c35366625,0x2e6464610a3b3536,0x3634662520323366\n"
".quad 0x3935346625202c31,0x3b3036346625202c,0x3233662e6464610a,0x202c323634662520\n"
".quad 0x6625202c33356625,0x2e6275730a3b3335,0x3634662520323366,0x3136346625202c33\n"
".quad 0x3b3236346625202c,0x3233662e6464610a,0x202c343634662520,0x6625202c39356625\n"
".quad 0x2e6275730a3b3935,0x3634662520323366,0x3336346625202c35,0x3b3436346625202c\n"
".quad 0x3233662e6464610a,0x202c363634662520,0x6625202c33386625,0x2e6464610a3b3338\n"
".quad 0x3634662520323366,0x3536346625202c37,0x3b3636346625202c,0x3233662e6464610a\n"
".quad 0x202c383634662520,0x6625202c39386625,0x2e6275730a3b3938,0x3634662520323366\n"
".quad 0x3736346625202c39,0x3b3836346625202c,0x3233662e6464610a,0x202c303734662520\n"
".quad 0x6625202c31376625,0x2e6464610a3b3137,0x3734662520323366,0x3936346625202c31\n"
".quad 0x3b3037346625202c,0x3233662e6464610a,0x202c323734662520,0x6625202c37376625\n"
".quad 0x2e6275730a3b3737,0x3734662520323366,0x3137346625202c33,0x3b3237346625202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312033383831,0x25203233752e766f,0x7425202c36363172\n"
".quad 0x756d0a3b782e6469,0x752e656469772e6c,0x31326c7225203233,0x3636317225202c37\n"
".quad 0x6464610a3b34202c,0x6c7225203436732e,0x6c7225202c393132,0x326c7225202c3431\n"
".quad 0x636f6c2e0a3b3731,0x2039323931203220,0x6168732e74730a31,0x203233662e646572\n"
".quad 0x5d3931326c72255b,0x3b3337346625202c,0x203220636f6c2e0a,0x610a312030333931\n"
".quad 0x25203233662e6464,0x6625202c34373466,0x0a3b356625202c35,0x203233662e646461\n"
".quad 0x25202c3537346625,0x3b346625202c3466,0x3233662e6275730a,0x202c363734662520\n"
".quad 0x25202c3537346625,0x64610a3b34373466,0x6625203233662e64,0x346625202c373734\n"
".quad 0x35346625202c3637,0x662e6275730a3b38,0x3837346625203233,0x2c3737346625202c\n"
".quad 0x0a3b303634662520,0x203233662e646461,0x25202c3937346625,0x6625202c38373466\n"
".quad 0x6275730a3b323634,0x346625203233662e,0x37346625202c3038,0x3436346625202c39\n"
".quad 0x33662e6464610a3b,0x2c31383466252032,0x6625202c37662520,0x662e6464610a3b37\n"
".quad 0x3238346625203233,0x2c3038346625202c,0x0a3b313834662520,0x203233662e646461\n"
".quad 0x25202c3338346625,0x3b386625202c3866,0x3233662e6275730a,0x202c343834662520\n"
".quad 0x25202c3238346625,0x64610a3b33383466,0x6625203233662e64,0x316625202c353834\n"
".quad 0x3b30316625202c30,0x3233662e6464610a,0x202c363834662520,0x25202c3438346625\n"
".quad 0x64610a3b35383466,0x6625203233662e64,0x356625202c373834,0x31356625202c3131\n"
".quad 0x662e6275730a3b31,0x3838346625203233,0x2c3638346625202c,0x0a3b373834662520\n"
".quad 0x203436732e646461,0x202c3132326c7225,0x25202c35316c7225,0x2e0a3b3731326c72\n"
".quad 0x3931203220636f6c,0x2e74730a31203033,0x662e646572616873,0x326c72255b203233\n"
".quad 0x346625202c5d3132,0x636f6c2e0a3b3838,0x2032333931203220,0x33662e6464610a31\n"
".quad 0x2c39383466252032,0x6625202c36662520,0x662e6464610a3b36,0x3039346625203233\n"
".quad 0x2c3938346625202c,0x0a3b363634662520,0x203233662e646461,0x25202c3139346625\n"
".quad 0x6625202c30393466,0x6464610a3b313834,0x346625203233662e,0x39346625202c3239\n"
".quad 0x3836346625202c31,0x33662e6464610a3b,0x2c33393466252032,0x202c323934662520\n"
".quad 0x6d0a3b3338346625,0x25203233662e766f,0x6630202c34393466,0x3030303030303043\n"
".quad 0x3220636f6c2e0a3b,0x0a31203333393120,0x203233662e67656e,0x25202c3539346625\n"
".quad 0x6d660a3b30373466,0x3233662e6e722e61,0x202c363934662520,0x346625202c396625\n"
".quad 0x39346625202c3439,0x662e6275730a3b35,0x3739346625203233,0x2c3639346625202c\n"
".quad 0x0a3b353834662520,0x203233662e627573,0x25202c3839346625,0x6625202c37393466\n"
".quad 0x6275730a3b323734,0x346625203233662e,0x39346625202c3939,0x3738346625202c38\n"
".quad 0x33662e6464610a3b,0x2c30303566252032,0x202c333934662520,0x610a3b3939346625\n"
".quad 0x25203436732e6464,0x25202c3332326c72,0x7225202c36316c72,0x6c2e0a3b3731326c\n"
".quad 0x333931203220636f,0x732e74730a312033,0x33662e6465726168,0x32326c72255b2032\n"
".quad 0x30356625202c5d33,0x383142420a0a3b30,0x2e6464610a3a385f,0x326c722520343673\n"
".quad 0x366c7225202c3632,0x0a3b376c7225202c,0x203436732e646461,0x202c3732326c7225\n"
".quad 0x202c3632326c7225,0x646c0a3b36393034,0x752e6d617261702e,0x35336c7225203436\n"
".quad 0x38315a5f5b202c31,0x6279685f645f524c,0x726f665f44434142,0x6d665f5366506563\n"
".quad 0x5f695f535f535f53,0x5d335f6d61726170,0x3220636f6c2e0a3b,0x0a31203034393120\n"
".quad 0x732e6f6c2e64616d,0x32326c7225203436,0x32326c7225202c39,0x35336c7225202c37\n"
".quad 0x3b356c7225202c31,0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3934336c\n"
".quad 0x5f645f524c38315a,0x5f44434142627968,0x5366506563726f66,0x535f535f536d665f\n"
".quad 0x6d617261705f695f,0x7476630a3b5d315f,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x202c3033326c7225,0x0a3b3934336c7225,0x203436622e6c6873,0x202c3133326c7225\n"
".quad 0x202c3932326c7225,0x2e7268730a3b3233,0x326c722520343673,0x326c7225202c3233\n"
".quad 0x0a3b3233202c3133,0x31203220636f6c2e,0x68730a3120303439,0x7225203436622e6c\n"
".quad 0x7225202c3333326c,0x3b32202c3233326c,0x3436732e6464610a,0x2c3433326c722520\n"
".quad 0x2c3033326c722520,0x3b3333326c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3433326c7225,0x610a3b3134662520,0x25203436732e6464,0x25202c3533326c72\n"
".quad 0x38202c3632326c72,0x6f6c2e0a3b323931,0x3134393120322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3633326c,0x7225202c3533326c,0x7225202c3135336c\n"
".quad 0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3733,0x0a3b3233202c3633\n"
".quad 0x203436732e726873,0x202c3833326c7225,0x202c3733326c7225,0x636f6c2e0a3b3233\n"
".quad 0x2031343931203220,0x36622e6c68730a31,0x3933326c72252034,0x3833326c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c303432,0x6c7225202c303332\n"
".quad 0x2e74730a3b393332,0x662e6c61626f6c67,0x326c72255b203233,0x356625202c5d3034\n"
".quad 0x36732e6464610a3b,0x3134326c72252034,0x3632326c7225202c,0x3b3838323231202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312032343931,0x36732e6f6c2e6461,0x3234326c72252034\n"
".quad 0x3134326c7225202c,0x3135336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3334326c7225,0x202c3234326c7225,0x2e7268730a3b3233,0x326c722520343673\n"
".quad 0x326c7225202c3434,0x0a3b3233202c3334,0x31203220636f6c2e,0x68730a3120323439\n"
".quad 0x7225203436622e6c,0x7225202c3534326c,0x3b32202c3434326c,0x3436732e6464610a\n"
".quad 0x2c3634326c722520,0x2c3033326c722520,0x3b3534326c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3634326c7225,0x610a3b3533662520,0x25203436732e6464\n"
".quad 0x25202c3734326c72,0x31202c3632326c72,0x6c2e0a3b34383336,0x343931203220636f\n"
".quad 0x2e64616d0a312033,0x25203436732e6f6c,0x25202c3834326c72,0x25202c3734326c72\n"
".quad 0x25202c3135336c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c393432\n"
".quad 0x3b3233202c383432,0x3436732e7268730a,0x2c3035326c722520,0x2c3934326c722520\n"
".quad 0x6f6c2e0a3b323320,0x3334393120322063,0x622e6c68730a3120,0x35326c7225203436\n"
".quad 0x35326c7225202c31,0x64610a3b32202c30,0x7225203436732e64,0x7225202c3235326c\n"
".quad 0x7225202c3033326c,0x74730a3b3135326c,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d323532,0x732e6464610a3b34,0x35326c7225203436,0x32326c7225202c33\n"
".quad 0x3038343032202c36,0x3220636f6c2e0a3b,0x0a31203434393120,0x732e6f6c2e64616d\n"
".quad 0x35326c7225203436,0x35326c7225202c34,0x35336c7225202c33,0x3b356c7225202c31\n"
".quad 0x3436622e6c68730a,0x2c3535326c722520,0x2c3435326c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c363532,0x3b3233202c353532,0x203220636f6c2e0a\n"
".quad 0x730a312034343931,0x25203436622e6c68,0x25202c3735326c72,0x32202c3635326c72\n"
".quad 0x36732e6464610a3b,0x3835326c72252034,0x3033326c7225202c,0x3735326c7225202c\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3835326c72255b,0x0a3b39356625202c\n"
".quad 0x203436732e646461,0x202c3935326c7225,0x202c3632326c7225,0x2e0a3b3637353432\n"
".quad 0x3931203220636f6c,0x64616d0a31203534,0x203436732e6f6c2e,0x202c3036326c7225\n"
".quad 0x202c3935326c7225,0x202c3135336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3136326c,0x3233202c3036326c,0x36732e7268730a3b,0x3236326c72252034\n"
".quad 0x3136326c7225202c,0x6c2e0a3b3233202c,0x343931203220636f,0x2e6c68730a312035\n"
".quad 0x326c722520343662,0x326c7225202c3336,0x610a3b32202c3236,0x25203436732e6464\n"
".quad 0x25202c3436326c72,0x25202c3033326c72,0x730a3b3336326c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3436326c,0x6464610a3b353666,0x6c7225203436732e\n"
".quad 0x6c7225202c353632,0x363832202c363232,0x636f6c2e0a3b3237,0x2036343931203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c363632,0x6c7225202c353632\n"
".quad 0x6c7225202c313533,0x622e6c68730a3b35,0x36326c7225203436,0x36326c7225202c37\n"
".quad 0x730a3b3233202c36,0x25203436732e7268,0x25202c3836326c72,0x33202c3736326c72\n"
".quad 0x20636f6c2e0a3b32,0x3120363439312032,0x3436622e6c68730a,0x2c3936326c722520\n"
".quad 0x2c3836326c722520,0x2e6464610a3b3220,0x326c722520343673,0x326c7225202c3037\n"
".quad 0x326c7225202c3033,0x672e74730a3b3936,0x33662e6c61626f6c,0x37326c72255b2032\n"
".quad 0x37346625202c5d30,0x36732e6464610a3b,0x3137326c72252034,0x3632326c7225202c\n"
".quad 0x3b3836373233202c,0x203220636f6c2e0a,0x6d0a312037343931,0x36732e6f6c2e6461\n"
".quad 0x3237326c72252034,0x3137326c7225202c,0x3135336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3337326c7225,0x202c3237326c7225,0x2e7268730a3b3233\n"
".quad 0x326c722520343673,0x326c7225202c3437,0x0a3b3233202c3337,0x31203220636f6c2e\n"
".quad 0x68730a3120373439,0x7225203436622e6c,0x7225202c3537326c,0x3b32202c3437326c\n"
".quad 0x3436732e6464610a,0x2c3637326c722520,0x2c3033326c722520,0x3b3537326c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3637326c7225,0x610a3b3335662520\n"
".quad 0x25203436732e6464,0x25202c3737326c72,0x33202c3632326c72,0x6c2e0a3b34363836\n"
".quad 0x343931203220636f,0x2e64616d0a312038,0x25203436732e6f6c,0x25202c3837326c72\n"
".quad 0x25202c3737326c72,0x25202c3135336c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c393732,0x3b3233202c383732,0x3436732e7268730a,0x2c3038326c722520\n"
".quad 0x2c3937326c722520,0x6f6c2e0a3b323320,0x3834393120322063,0x622e6c68730a3120\n"
".quad 0x38326c7225203436,0x38326c7225202c31,0x64610a3b32202c30,0x7225203436732e64\n"
".quad 0x7225202c3238326c,0x7225202c3033326c,0x74730a3b3138326c,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d323832,0x732e6464610a3b39,0x38326c7225203436\n"
".quad 0x32326c7225202c33,0x3036393034202c36,0x3220636f6c2e0a3b,0x0a31203934393120\n"
".quad 0x732e6f6c2e64616d,0x38326c7225203436,0x38326c7225202c34,0x35336c7225202c33\n"
".quad 0x3b356c7225202c31,0x3436622e6c68730a,0x2c3538326c722520,0x2c3438326c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c363832,0x3b3233202c353832\n"
".quad 0x203220636f6c2e0a,0x730a312039343931,0x25203436622e6c68,0x25202c3738326c72\n"
".quad 0x32202c3638326c72,0x36732e6464610a3b,0x3838326c72252034,0x3033326c7225202c\n"
".quad 0x3738326c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3838326c72255b\n"
".quad 0x0a3b37376625202c,0x203436732e646461,0x202c3938326c7225,0x202c3632326c7225\n"
".quad 0x2e0a3b3635303534,0x3931203220636f6c,0x64616d0a31203035,0x203436732e6f6c2e\n"
".quad 0x202c3039326c7225,0x202c3938326c7225,0x202c3135336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3139326c,0x3233202c3039326c,0x36732e7268730a3b\n"
".quad 0x3239326c72252034,0x3139326c7225202c,0x6c2e0a3b3233202c,0x353931203220636f\n"
".quad 0x2e6c68730a312030,0x326c722520343662,0x326c7225202c3339,0x610a3b32202c3239\n"
".quad 0x25203436732e6464,0x25202c3439326c72,0x25202c3033326c72,0x730a3b3339326c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3439326c,0x64610a3b31313566\n"
".quad 0x7225203436732e64,0x7225202c3539326c,0x3934202c3632326c,0x6f6c2e0a3b323531\n"
".quad 0x3135393120322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3639326c\n"
".quad 0x7225202c3539326c,0x7225202c3135336c,0x2e6c68730a3b356c,0x326c722520343662\n"
".quad 0x326c7225202c3739,0x0a3b3233202c3639,0x203436732e726873,0x202c3839326c7225\n"
".quad 0x202c3739326c7225,0x636f6c2e0a3b3233,0x2031353931203220,0x36622e6c68730a31\n"
".quad 0x3939326c72252034,0x3839326c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c303033,0x6c7225202c303332,0x2e74730a3b393932,0x662e6c61626f6c67\n"
".quad 0x336c72255b203233,0x376625202c5d3030,0x732e6464610a3b31,0x30336c7225203436\n"
".quad 0x32326c7225202c31,0x3834323335202c36,0x3220636f6c2e0a3b,0x0a31203235393120\n"
".quad 0x732e6f6c2e64616d,0x30336c7225203436,0x30336c7225202c32,0x35336c7225202c31\n"
".quad 0x3b356c7225202c31,0x3436622e6c68730a,0x2c3330336c722520,0x2c3230336c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c343033,0x3b3233202c333033\n"
".quad 0x203220636f6c2e0a,0x730a312032353931,0x25203436622e6c68,0x25202c3530336c72\n"
".quad 0x32202c3430336c72,0x36732e6464610a3b,0x3630336c72252034,0x3033326c7225202c\n"
".quad 0x3530336c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3630336c72255b\n"
".quad 0x0a3b30316625202c,0x203436732e646461,0x202c3730336c7225,0x202c3632326c7225\n"
".quad 0x2e0a3b3434333735,0x3931203220636f6c,0x64616d0a31203335,0x203436732e6f6c2e\n"
".quad 0x202c3830336c7225,0x202c3730336c7225,0x202c3135336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3930336c,0x3233202c3830336c,0x36732e7268730a3b\n"
".quad 0x3031336c72252034,0x3930336c7225202c,0x6c2e0a3b3233202c,0x353931203220636f\n"
".quad 0x2e6c68730a312033,0x336c722520343662,0x336c7225202c3131,0x610a3b32202c3031\n"
".quad 0x25203436732e6464,0x25202c3231336c72,0x25202c3033326c72,0x730a3b3131336c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3231336c,0x2e6464610a3b3666\n"
".quad 0x336c722520343673,0x326c7225202c3331,0x34343136202c3632,0x20636f6c2e0a3b30\n"
".quad 0x3120343539312032,0x2e6f6c2e64616d0a,0x336c722520343673,0x336c7225202c3431\n"
".quad 0x336c7225202c3331,0x356c7225202c3135,0x36622e6c68730a3b,0x3531336c72252034\n"
".quad 0x3431336c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3631336c\n"
".quad 0x3233202c3531336c,0x3220636f6c2e0a3b,0x0a31203435393120,0x203436622e6c6873\n"
".quad 0x202c3731336c7225,0x202c3631336c7225,0x732e6464610a3b32,0x31336c7225203436\n"
".quad 0x33326c7225202c38,0x31336c7225202c30,0x6c672e74730a3b37,0x3233662e6c61626f\n"
".quad 0x3831336c72255b20,0x3b39386625202c5d,0x3436732e6464610a,0x2c3931336c722520\n"
".quad 0x2c3632326c722520,0x0a3b363335353620,0x31203220636f6c2e,0x616d0a3120353539\n"
".quad 0x3436732e6f6c2e64,0x2c3032336c722520,0x2c3931336c722520,0x2c3135336c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3132336c72,0x33202c3032336c72\n"
".quad 0x732e7268730a3b32,0x32336c7225203436,0x32336c7225202c32,0x2e0a3b3233202c31\n"
".quad 0x3931203220636f6c,0x6c68730a31203535,0x6c7225203436622e,0x6c7225202c333233\n"
".quad 0x0a3b32202c323233,0x203436732e646461,0x202c3432336c7225,0x202c3033326c7225\n"
".quad 0x0a3b3332336c7225,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3432336c72\n"
".quad 0x6464610a3b386625,0x6c7225203436732e,0x6c7225202c353233,0x363936202c363232\n"
".quad 0x636f6c2e0a3b3233,0x2036353931203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c363233,0x6c7225202c353233,0x6c7225202c313533,0x622e6c68730a3b35\n"
".quad 0x32336c7225203436,0x32336c7225202c37,0x730a3b3233202c36,0x25203436732e7268\n"
".quad 0x25202c3832336c72,0x33202c3732336c72,0x20636f6c2e0a3b32,0x3120363539312032\n"
".quad 0x3436622e6c68730a,0x2c3932336c722520,0x2c3832336c722520,0x2e6464610a3b3220\n"
".quad 0x336c722520343673,0x326c7225202c3033,0x336c7225202c3033,0x672e74730a3b3932\n"
".quad 0x33662e6c61626f6c,0x33336c72255b2032,0x33386625202c5d30,0x36732e6464610a3b\n"
".quad 0x3133336c72252034,0x3632326c7225202c,0x3b3832373337202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312037353931,0x36732e6f6c2e6461,0x3233336c72252034,0x3133336c7225202c\n"
".quad 0x3135336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3333336c7225\n"
".quad 0x202c3233336c7225,0x2e7268730a3b3233,0x336c722520343673,0x336c7225202c3433\n"
".quad 0x0a3b3233202c3333,0x31203220636f6c2e,0x68730a3120373539,0x7225203436622e6c\n"
".quad 0x7225202c3533336c,0x3b32202c3433336c,0x3436732e6464610a,0x2c3633336c722520\n"
".quad 0x2c3033326c722520,0x3b3533336c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3633336c7225,0x72620a3b37662520,0x424220696e752e61,0x0a0a3b30315f3831\n"
".quad 0x0a3a395f38314242,0x31203220636f6c2e,0x74730a3120393938,0x2e6465726168732e\n"
".quad 0x6c72255b20323375,0x39317225202c5d39,0x3220636f6c2e0a3b,0x0a31203030393120\n"
".quad 0x65726168732e7473,0x255b203233752e64,0x25202c5d30316c72,0x6f6c2e0a3b393172\n"
".quad 0x3130393120322063,0x68732e74730a3120,0x3233752e64657261,0x5d31316c72255b20\n"
".quad 0x0a3b39317225202c,0x30315f383142420a,0x3220636f6c2e0a3a,0x0a31203530303220\n"
".quad 0x636e79732e726162,0x636f6c2e0a3b3020,0x2036303032203220,0x6168732e646c0a31\n"
".quad 0x203233752e646572,0x5b202c3035317225,0x6c5f616475635f5f,0x7261765f6c61636f\n"
".quad 0x335f30383237335f,0x6f635f6e6f6e5f30,0x636568635f74736e,0x707465730a3b5d6b\n"
".quad 0x203233732e71652e,0x7225202c32317025,0x0a3b31202c303531,0x6d617261702e646c\n"
".quad 0x317225203233752e,0x315a5f5b202c3336,0x79685f645f524c38,0x6f665f4443414262\n"
".quad 0x665f536650656372,0x695f535f535f536d,0x375f6d617261705f,0x2e707465730a3b5d\n"
".quad 0x25203233732e7467,0x317225202c333170,0x39393939202c3336,0x72702e646e610a3b\n"
".quad 0x2c34317025206465,0x25202c3231702520,0x6f6c2e0a3b333170,0x3338383120322063\n"
".quad 0x752e766f6d0a3120,0x3536317225203233,0x2e6469746e25202c,0x20636f6c2e0a3b78\n"
".quad 0x3120393030322032,0x74672e707465730a,0x317025203233732e,0x3536317225202c35\n"
".quad 0x646e610a3b31202c,0x702520646572702e,0x34317025202c3631,0x0a3b35317025202c\n"
".quad 0x32203220636f6c2e,0x21400a3120363030,0x6172622036317025,0x34315f3831424220\n"
".quad 0x5f383142420a0a3b,0x636f6c2e0a3a3131,0x2030313032203220,0x33732e7268730a31\n"
".quad 0x2c30373172252032,0x202c303731722520,0x20636f6c2e0a3b31,0x3120313130322032\n"
".quad 0x65672e707465730a,0x317025203233752e,0x202c327225202c37,0x400a3b3037317225\n"
".quad 0x6172622037317025,0x33315f3831424220,0x20636f6c2e0a0a3b,0x3120323130322032\n"
".quad 0x3233732e6464610a,0x202c333531722520,0x317225202c327225,0x2e6c756d0a3b3037\n"
".quad 0x3233752e65646977,0x2c3733336c722520,0x202c333531722520,0x732e6464610a3b34\n"
".quad 0x33336c7225203436,0x34316c7225202c39,0x3733336c7225202c,0x69772e6c756d0a3b\n"
".quad 0x25203233752e6564,0x25202c3034336c72,0x610a3b34202c3272,0x25203436732e6464\n"
".quad 0x25202c3134336c72,0x7225202c34316c72,0x6c2e0a3b3034336c,0x313032203220636f\n"
".quad 0x732e646c0a312032,0x33662e6465726168,0x2c31303566252032,0x3134336c72255b20\n"
".quad 0x68732e646c0a3b5d,0x3233662e64657261,0x202c323035662520,0x5d3933336c72255b\n"
".quad 0x33662e6464610a3b,0x2c33303566252032,0x202c313035662520,0x730a3b3230356625\n"
".quad 0x6465726168732e74,0x72255b203233662e,0x25202c5d3134336c,0x64610a3b33303566\n"
".quad 0x7225203436732e64,0x7225202c3334336c,0x6c7225202c35316c,0x6464610a3b373333\n"
".quad 0x6c7225203436732e,0x6c7225202c343433,0x336c7225202c3531,0x636f6c2e0a3b3034\n"
".quad 0x2033313032203220,0x6168732e646c0a31,0x203233662e646572,0x5b202c3430356625\n"
".quad 0x3b5d3434336c7225,0x726168732e646c0a,0x25203233662e6465,0x255b202c35303566\n"
".quad 0x0a3b5d3334336c72,0x203233662e646461,0x25202c3630356625,0x6625202c34303566\n"
".quad 0x2e74730a3b353035,0x662e646572616873,0x336c72255b203233,0x356625202c5d3434\n"
".quad 0x2e6464610a3b3630,0x336c722520343673,0x316c7225202c3634,0x33336c7225202c36\n"
".quad 0x732e6464610a3b37,0x34336c7225203436,0x36316c7225202c37,0x3034336c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203431303220,0x65726168732e646c,0x6625203233662e64\n"
".quad 0x72255b202c373035,0x6c0a3b5d3734336c,0x6465726168732e64,0x356625203233662e\n"
".quad 0x6c72255b202c3830,0x64610a3b5d363433,0x6625203233662e64,0x356625202c393035\n"
".quad 0x30356625202c3730,0x68732e74730a3b38,0x3233662e64657261,0x3734336c72255b20\n"
".quad 0x3930356625202c5d,0x5f383142420a0a3b,0x636f6c2e0a3a3331,0x2036313032203220\n"
".quad 0x79732e7261620a31,0x6c2e0a3b3020636e,0x303032203220636f,0x707465730a312039\n"
".quad 0x203233732e74672e,0x7225202c38317025,0x0a3b31202c303731,0x7262203831702540\n"
".quad 0x315f383142422061,0x383142420a0a3b31,0x7465720a3a34315f,0x6e652e0a0a7d0a3b\n"
".quad 0x32315a5f20797274,0x6279685f645f524c,0x5f53665044434241,0x7261702e0a286d66\n"
".quad 0x203436752e206d61,0x645f524c32315a5f,0x444342416279685f,0x705f6d665f536650\n"
".quad 0x0a2c305f6d617261,0x2e206d617261702e,0x32315a5f20343675,0x6279685f645f524c\n"
".quad 0x5f53665044434241,0x6d617261705f6d66,0x7261702e0a2c315f,0x203233662e206d61\n"
".quad 0x645f524c32315a5f,0x444342416279685f,0x705f6d665f536650,0x0a2c325f6d617261\n"
".quad 0x2e206d617261702e,0x32315a5f20343675,0x6279685f645f524c,0x5f53665044434241\n"
".quad 0x6d617261705f6d66,0x2e0a7b0a290a335f,0x3233662e20676572,0x3e3835343c662520\n"
".quad 0x2e206765722e0a3b,0x3c70252064657270,0x65722e0a3b3e3231,0x25203233732e2067\n"
".quad 0x0a3b3e3632313c72,0x36732e206765722e,0x31333c6c72252034,0x646c0a0a0a3b3e36\n"
".quad 0x752e6d617261702e,0x2c316c7225203436,0x524c32315a5f5b20,0x42416279685f645f\n"
".quad 0x6d665f5366504443,0x305f6d617261705f,0x61702e646c0a3b5d,0x203436752e6d6172\n"
".quad 0x5f5b202c336c7225,0x5f645f524c32315a,0x5044434241627968,0x61705f6d665f5366\n"
".quad 0x0a3b5d335f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67,0x2c346c7225203436\n"
".quad 0x2e0a3b316c722520,0x3032203220636f6c,0x766f6d0a31203033,0x347225203233752e\n"
".quad 0x2e6469746e25202c,0x752e766f6d0a3b78,0x202c357225203233,0x782e646961746325\n"
".quad 0x33752e766f6d0a3b,0x25202c3672252032,0x6d0a3b782e646974,0x33732e6f6c2e6461\n"
".quad 0x25202c3772252032,0x2c357225202c3472,0x6c2e0a3b36722520,0x333032203220636f\n"
".quad 0x2e766f6d0a312031,0x2c38722520323375,0x792e6469746e2520,0x33752e766f6d0a3b\n"
".quad 0x25202c3972252032,0x3b792e6469617463,0x3233752e766f6d0a,0x25202c3031722520\n"
".quad 0x6d0a3b792e646974,0x33732e6f6c2e6461,0x25202c3172252032,0x2c397225202c3872\n"
".quad 0x2e0a3b3031722520,0x3032203220636f6c,0x766f6d0a31203233,0x317225203233752e\n"
".quad 0x6469746e25202c31,0x2e766f6d0a3b7a2e,0x3231722520323375,0x646961746325202c\n"
".quad 0x2e766f6d0a3b7a2e,0x3331722520323375,0x7a2e64697425202c,0x6f6c2e64616d0a3b\n"
".quad 0x327225203233732e,0x202c31317225202c,0x7225202c32317225,0x636f6c2e0a3b3331\n"
".quad 0x2033333032203220,0x6e722e7476630a31,0x3233732e3233662e,0x25202c3332662520\n"
".quad 0x2e616d660a3b3772,0x25203233662e6e72,0x326625202c343266,0x3046336630202c33\n"
".quad 0x30202c3030303030,0x3030304337313466,0x20636f6c2e0a3b30,0x3120343330322032\n"
".quad 0x2e6e722e7476630a,0x203233732e323366,0x317225202c326625,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x202c326625202c35,0x3030303046336630,0x31346630202c3030\n"
".quad 0x0a3b303030304337,0x32203220636f6c2e,0x76630a3120353330,0x3233662e6e722e74\n"
".quad 0x326625203233732e,0x0a3b327225202c36,0x662e6e722e616d66,0x2c37326625203233\n"
".quad 0x30202c3632662520,0x3030303030463366,0x3731346630202c30,0x630a3b3030303043\n"
".quad 0x752e3436752e7476,0x2c356c7225203233,0x6c2e0a3b37722520,0x333032203220636f\n"
".quad 0x2e7476630a312036,0x203233732e343673,0x7225202c366c7225,0x622e6c68730a3b31\n"
".quad 0x202c337225203233,0x0a3b36202c327225,0x32203220636f6c2e,0x76630a3120363330\n"
".quad 0x33732e3436732e74,0x202c376c72252032,0x6464610a3b337225,0x6c7225203436732e\n"
".quad 0x2c376c7225202c39,0x2e0a3b366c722520,0x3032203220636f6c,0x64616d0a31203633\n"
".quad 0x203436732e6f6c2e,0x7225202c386c7225,0x336c7225202c396c,0x0a3b356c7225202c\n"
".quad 0x203233662e646461,0x6625202c38326625,0x32436630202c3432,0x0a3b303030304537\n"
".quad 0x203233662e646461,0x6625202c39326625,0x31436630202c3532,0x0a3b303030304346\n"
".quad 0x37203220636f6c2e,0x2e6c756d0a312030,0x3033662520323366,0x202c39326625202c\n"
".quad 0x6d660a3b39326625,0x3233662e6e722e61,0x25202c3133662520,0x326625202c383266\n"
".quad 0x3b30336625202c38,0x3233662e6464610a,0x25202c3233662520,0x436630202c373266\n"
".quad 0x3b30303030434631,0x203220636f6c2e0a,0x616d660a31203037,0x203233662e6e722e\n"
".quad 0x6625202c33336625,0x32336625202c3233,0x0a3b31336625202c,0x2e746c2e70746573\n"
".quad 0x2c31702520323366,0x30202c3333662520,0x3030303038313466,0x732e6464610a3b30\n"
".quad 0x2c34317225203233,0x312d202c37722520,0x672e707465730a3b,0x7025203233752e74\n"
".quad 0x2c34317225202c32,0x6f6c2e0a3b313620,0x3933303220322063,0x2e707465730a3120\n"
".quad 0x25203233732e746c,0x2c317225202c3370,0x702e726f0a3b3120,0x2c34702520646572\n"
".quad 0x7025202c32702520,0x20636f6c2e0a3b33,0x3120393330322032,0x74672e707465730a\n"
".quad 0x357025203233732e,0x36202c317225202c,0x72702e726f0a3b32,0x202c367025206465\n"
".quad 0x357025202c347025,0x3220636f6c2e0a3b,0x0a31203933303220,0x2e746c2e70746573\n"
".quad 0x2c37702520323373,0x3b31202c32722520,0x646572702e726f0a,0x7025202c38702520\n"
".quad 0x0a3b377025202c36,0x32203220636f6c2e,0x65730a3120393330,0x33732e74672e7074\n"
".quad 0x25202c3970252032,0x0a3b3236202c3272,0x20646572702e726f,0x7025202c30317025\n"
".quad 0x0a3b397025202c38,0x32203220636f6c2e,0x25400a3120393330,0x2061726220303170\n"
".quad 0x0a3b365f39314242,0x3436622e6c68730a,0x202c30316c722520,0x3233202c386c7225\n"
".quad 0x36732e7268730a3b,0x2c31316c72252034,0x202c30316c722520,0x636f6c2e0a3b3233\n"
".quad 0x2034343032203220,0x36622e6c68730a31,0x2c32316c72252034,0x202c31316c722520\n"
".quad 0x732e6464610a3b32,0x33316c7225203436,0x202c346c7225202c,0x6c0a3b32316c7225\n"
".quad 0x6c61626f6c672e64,0x336625203233662e,0x33316c72255b202c,0x732e6464610a3b5d\n"
".quad 0x2c36317225203233,0x312d202c31722520,0x3220636f6c2e0a3b,0x0a31203534303220\n"
".quad 0x2e3436732e747663,0x316c722520323373,0x3b36317225202c34,0x3436732e6464610a\n"
".quad 0x202c35316c722520,0x25202c34316c7225,0x6464610a3b376c72,0x6c7225203436732e\n"
".quad 0x316c7225202c3631,0x3b32393138202c35,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5f5b202c3531336c,0x5f645f524c32315a,0x5044434241627968,0x61705f6d665f5366\n"
".quad 0x0a3b5d335f6d6172,0x32203220636f6c2e,0x616d0a3120353430,0x3436732e6f6c2e64\n"
".quad 0x202c37316c722520,0x25202c36316c7225,0x25202c3531336c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x316c7225202c3831,0x730a3b3233202c37,0x25203436732e7268\n"
".quad 0x7225202c39316c72,0x3b3233202c38316c,0x203220636f6c2e0a,0x730a312035343032\n"
".quad 0x25203436622e6c68,0x7225202c30326c72,0x0a3b32202c39316c,0x203436732e646461\n"
".quad 0x25202c31326c7225,0x6c7225202c346c72,0x672e646c0a3b3032,0x33662e6c61626f6c\n"
".quad 0x5b202c3466252032,0x0a3b5d31326c7225,0x32203220636f6c2e,0x64610a3120363430\n"
".quad 0x7225203233732e64,0x2c317225202c3831,0x2e7476630a3b3120,0x203233732e343673\n"
".quad 0x25202c32326c7225,0x6464610a3b383172,0x6c7225203436732e,0x326c7225202c3332\n"
".quad 0x3b376c7225202c32,0x3436732e6464610a,0x202c34326c722520,0x31202c33326c7225\n"
".quad 0x6c2e0a3b34383336,0x343032203220636f,0x2e64616d0a312036,0x25203436732e6f6c\n"
".quad 0x7225202c35326c72,0x6c7225202c34326c,0x6c7225202c353133,0x622e6c68730a3b35\n"
".quad 0x36326c7225203436,0x2c35326c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x326c7225202c3732,0x2e0a3b3233202c36,0x3032203220636f6c,0x6c68730a31203634\n"
".quad 0x6c7225203436622e,0x326c7225202c3832,0x64610a3b32202c37,0x7225203436732e64\n"
".quad 0x6c7225202c39326c,0x38326c7225202c34,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x72255b202c356625,0x64610a3b5d39326c,0x7225203233732e64,0x2c337225202c3032\n"
".quad 0x6c2e0a3b34362d20,0x343032203220636f,0x2e7476630a312037,0x203233732e343673\n"
".quad 0x25202c30336c7225,0x6464610a3b303272,0x6c7225203436732e,0x366c7225202c3133\n"
".quad 0x3b30336c7225202c,0x3436732e6464610a,0x202c32336c722520,0x33202c31336c7225\n"
".quad 0x6c2e0a3b34363836,0x343032203220636f,0x2e64616d0a312037,0x25203436732e6f6c\n"
".quad 0x7225202c33336c72,0x6c7225202c32336c,0x6c7225202c353133,0x622e6c68730a3b35\n"
".quad 0x34336c7225203436,0x2c33336c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x336c7225202c3533,0x2e0a3b3233202c34,0x3032203220636f6c,0x6c68730a31203734\n"
".quad 0x6c7225203436622e,0x336c7225202c3633,0x64610a3b32202c35,0x7225203436732e64\n"
".quad 0x6c7225202c37336c,0x36336c7225202c34,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x72255b202c366625,0x64610a3b5d37336c,0x7225203436732e64,0x6c7225202c38336c\n"
".quad 0x336c7225202c3431,0x732e6464610a3b30,0x39336c7225203436,0x2c38336c7225202c\n"
".quad 0x0a3b363530353420,0x32203220636f6c2e,0x616d0a3120383430,0x3436732e6f6c2e64\n"
".quad 0x202c30346c722520,0x25202c39336c7225,0x25202c3531336c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x346c7225202c3134,0x730a3b3233202c30,0x25203436732e7268\n"
".quad 0x7225202c32346c72,0x3b3233202c31346c,0x203220636f6c2e0a,0x730a312038343032\n"
".quad 0x25203436622e6c68,0x7225202c33346c72,0x0a3b32202c32346c,0x203436732e646461\n"
".quad 0x25202c34346c7225,0x6c7225202c346c72,0x672e646c0a3b3334,0x33662e6c61626f6c\n"
".quad 0x5b202c3766252032,0x0a3b5d34346c7225,0x203436732e646461,0x25202c35346c7225\n"
".quad 0x7225202c32326c72,0x6464610a3b30336c,0x6c7225203436732e,0x346c7225202c3634\n"
".quad 0x3834323335202c35,0x3220636f6c2e0a3b,0x0a31203934303220,0x732e6f6c2e64616d\n"
".quad 0x37346c7225203436,0x2c36346c7225202c,0x2c3531336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x7225202c38346c72,0x3b3233202c37346c,0x3436732e7268730a\n"
".quad 0x202c39346c722520,0x33202c38346c7225,0x20636f6c2e0a3b32,0x3120393430322032\n"
".quad 0x3436622e6c68730a,0x202c30356c722520,0x32202c39346c7225,0x36732e6464610a3b\n"
".quad 0x2c31356c72252034,0x25202c346c722520,0x646c0a3b30356c72,0x2e6c61626f6c672e\n"
".quad 0x2c38662520323366,0x5d31356c72255b20,0x33732e6464610a3b,0x202c343272252032\n"
".quad 0x3b3436202c337225,0x203220636f6c2e0a,0x630a312030353032,0x732e3436732e7476\n"
".quad 0x32356c7225203233,0x0a3b34327225202c,0x203436732e646461,0x25202c33356c7225\n"
".quad 0x6c7225202c366c72,0x2e6464610a3b3235,0x356c722520343673,0x33356c7225202c34\n"
".quad 0x3b3434333735202c,0x203220636f6c2e0a,0x6d0a312030353032,0x36732e6f6c2e6461\n"
".quad 0x2c35356c72252034,0x202c34356c722520,0x202c3531336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x6c7225202c36356c,0x0a3b3233202c3535,0x203436732e726873\n"
".quad 0x25202c37356c7225,0x3233202c36356c72,0x3220636f6c2e0a3b,0x0a31203035303220\n"
".quad 0x203436622e6c6873,0x25202c38356c7225,0x3b32202c37356c72,0x3436732e6464610a\n"
".quad 0x202c39356c722520,0x7225202c346c7225,0x2e646c0a3b38356c,0x662e6c61626f6c67\n"
".quad 0x202c396625203233,0x3b5d39356c72255b,0x3436732e6464610a,0x202c30366c722520\n"
".quad 0x25202c34316c7225,0x64610a3b32356c72,0x7225203436732e64,0x6c7225202c31366c\n"
".quad 0x33353536202c3036,0x20636f6c2e0a3b36,0x3120313530322032,0x2e6f6c2e64616d0a\n"
".quad 0x366c722520343673,0x31366c7225202c32,0x3531336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x25202c33366c7225,0x3233202c32366c72,0x36732e7268730a3b\n"
".quad 0x2c34366c72252034,0x202c33366c722520,0x636f6c2e0a3b3233,0x2031353032203220\n"
".quad 0x36622e6c68730a31,0x2c35366c72252034,0x202c34366c722520,0x732e6464610a3b32\n"
".quad 0x36366c7225203436,0x202c346c7225202c,0x6c0a3b35366c7225,0x6c61626f6c672e64\n"
".quad 0x316625203233662e,0x366c72255b202c30,0x636f6c2e0a3b5d36,0x2032353032203220\n"
".quad 0x652e707465730a31,0x7025203233732e71,0x2c327225202c3131,0x7025400a3b333620\n"
".quad 0x4220617262203131,0x0a0a3b335f393142,0x32203220636f6c2e,0x76630a3120363430\n"
".quad 0x33752e3436752e74,0x2c37366c72252032,0x2e0a3b3831722520,0x3032203220636f6c\n"
".quad 0x7476630a31203035,0x3233752e3436752e,0x202c38366c722520,0x64610a3b34327225\n"
".quad 0x7225203436732e64,0x6c7225202c39366c,0x366c7225202c3736,0x732e6464610a3b38\n"
".quad 0x30376c7225203436,0x2c39366c7225202c,0x0a3b383237333720,0x2e3436752e747663\n"
".quad 0x376c722520323375,0x0a3b377225202c31,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x5a5f5b202c343133,0x685f645f524c3231,0x6650444342416279,0x7261705f6d665f53\n"
".quad 0x2e0a3b5d335f6d61,0x3032203220636f6c,0x64616d0a31203335,0x203436732e6f6c2e\n"
".quad 0x25202c32376c7225,0x7225202c30376c72,0x7225202c3431336c,0x2e646c0a3b31376c\n"
".quad 0x36752e6d61726170,0x3930336c72252034,0x4c32315a5f5b202c,0x416279685f645f52\n"
".quad 0x665f536650444342,0x5f6d617261705f6d,0x617476630a3b5d30,0x626f6c672e6f742e\n"
".quad 0x25203436752e6c61,0x7225202c33376c72,0x68730a3b3930336c,0x7225203436622e6c\n"
".quad 0x6c7225202c34376c,0x0a3b3233202c3237,0x203436732e726873,0x25202c35376c7225\n"
".quad 0x3233202c34376c72,0x3220636f6c2e0a3b,0x0a31203335303220,0x203436622e6c6873\n"
".quad 0x25202c36376c7225,0x3b32202c35376c72,0x3436732e6464610a,0x202c37376c722520\n"
".quad 0x25202c33376c7225,0x646c0a3b36376c72,0x2e6c61626f6c672e,0x3534662520323366\n"
".quad 0x376c72255b202c37,0x3142420a0a3b5d37,0x6f6c2e0a3a335f39,0x3535303220322063\n"
".quad 0x722e7476630a3120,0x33732e3233662e6e,0x202c353966252032,0x64610a3b34317225\n"
".quad 0x6625203233662e64,0x35396625202c3738,0x303046336630202c,0x76630a3b30303030\n"
".quad 0x3233662e6e722e74,0x396625203233732e,0x0a3b337225202c36,0x203233662e646461\n"
".quad 0x6625202c37396625,0x3046336630202c32,0x610a3b3030303030,0x25203233662e6464\n"
".quad 0x396625202c363466,0x3b36396625202c37,0x3233752e766f6d0a,0x30202c3335722520\n"
".quad 0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32,0x336625202c353366\n"
".quad 0x2c37336625202c36,0x202c7d3833662520,0x5f6665527865745b,0x66257b202c433166\n"
".quad 0x36346625202c3738,0x6c2e090a0a3b5d7d,0x353032203220636f,0x2e6464610a312036\n"
".quad 0x3435722520323373,0x31202c377225202c,0x6e722e7476630a3b,0x3233732e3233662e\n"
".quad 0x25202c3839662520,0x6464610a3b343572,0x396625203233662e,0x2c38396625202c33\n"
".quad 0x3030304633663020,0x74090a0a3b303030,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x202c313466257b20,0x6625202c32346625,0x34346625202c3334,0x527865745b202c7d\n"
".quad 0x202c4333665f6665,0x25202c333966257b,0x0a0a3b5d7d363466,0x203220636f6c2e09\n"
".quad 0x630a312037353032,0x33662e6e722e7476,0x6625203233732e32,0x36317225202c3939\n"
".quad 0x33662e6464610a3b,0x2c30303166252032,0x30202c3939662520,0x3030303030463366\n"
".quad 0x662e6464610a3b30,0x2c38356625203233,0x202c303031662520,0x090a0a3b36396625\n"
".quad 0x762e64322e786574,0x33662e3233662e34,0x2c373466257b2032,0x25202c3834662520\n"
".quad 0x356625202c393466,0x7865745b202c7d30,0x2c4335665f666552,0x202c373866257b20\n"
".quad 0x0a3b5d7d38356625,0x2e786574090a090a,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x356625202c333566,0x2c35356625202c34,0x202c7d3635662520,0x5f6665527865745b\n"
".quad 0x66257b202c433666,0x38356625202c3339,0x6c2e090a0a3b5d7d,0x353032203220636f\n"
".quad 0x2e7476630a312039,0x732e3233662e6e72,0x3130316625203233,0x0a3b38317225202c\n"
".quad 0x203233662e646461,0x25202c3230316625,0x6630202c31303166,0x3030303030304633\n"
".quad 0x33662e6464610a3b,0x202c303766252032,0x25202c3230316625,0x74090a0a3b363966\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x202c393566257b20,0x6625202c30366625\n"
".quad 0x32366625202c3136,0x527865745b202c7d,0x202c4337665f6665,0x25202c333966257b\n"
".quad 0x0a0a3b5d7d303766,0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e\n"
".quad 0x36366625202c3536,0x202c37366625202c,0x5b202c7d38366625,0x665f666552786574\n"
".quad 0x3866257b202c4338,0x7d30376625202c37,0x6f6c2e090a0a3b5d,0x3136303220322063\n"
".quad 0x722e7476630a3120,0x33732e3233662e6e,0x2c33303166252032,0x610a3b3432722520\n"
".quad 0x25203233662e6464,0x396625202c323866,0x3330316625202c37,0x2e786574090a0a3b\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x376625202c313766,0x2c33376625202c32\n"
".quad 0x202c7d3437662520,0x5f6665527865745b,0x257b202c43353166,0x386625202c373866\n"
".quad 0x0a090a0a3b5d7d32,0x2e64322e78657409,0x662e3233662e3476,0x373766257b203233\n"
".quad 0x202c38376625202c,0x6625202c39376625,0x65745b202c7d3038,0x3731665f66655278\n"
".quad 0x333966257b202c43,0x5d7d32386625202c,0x636f6c2e090a0a3b,0x2033363032203220\n"
".quad 0x6e722e7476630a31,0x3233732e3233662e,0x202c343031662520,0x64610a3b30327225\n"
".quad 0x6625203233662e64,0x37396625202c3439,0x3b3430316625202c,0x322e786574090a0a\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x34386625202c3338,0x202c35386625202c\n"
".quad 0x5b202c7d36386625,0x665f666552786574,0x66257b202c433031,0x34396625202c3738\n"
".quad 0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34,0x2c393866257b2032\n"
".quad 0x25202c3039662520,0x396625202c313966,0x7865745b202c7d32,0x433231665f666552\n"
".quad 0x2c333966257b202c,0x3b5d7d3439662520,0x20636f6c2e090a0a,0x3120363630322032\n"
".quad 0x726220317025400a,0x355f393142422061,0x20636f6c2e0a0a3b,0x3120323031322032\n"
".quad 0x3233662e6275730a,0x202c353031662520,0x6625202c35336625,0x2e6464610a3b3134\n"
".quad 0x3031662520323366,0x3530316625202c36,0x0a3b37346625202c,0x203233662e627573\n"
".quad 0x25202c3730316625,0x6625202c36303166,0x2e6275730a3b3335,0x3031662520323366\n"
".quad 0x3730316625202c38,0x0a3b39356625202c,0x203233662e646461,0x25202c3930316625\n"
".quad 0x6625202c38303166,0x2e6464610a3b3536,0x3131662520323366,0x3930316625202c30\n"
".quad 0x0a3b33386625202c,0x203233662e627573,0x25202c3131316625,0x6625202c30313166\n"
".quad 0x2e6464610a3b3938,0x3131662520323366,0x3131316625202c32,0x0a3b31376625202c\n"
".quad 0x203233662e627573,0x25202c3331316625,0x6625202c32313166,0x2e6275730a3b3737\n"
".quad 0x3131662520323366,0x202c346625202c34,0x6464610a3b356625,0x316625203233662e\n"
".quad 0x31316625202c3531,0x3b37346625202c34,0x3233662e6464610a,0x202c363131662520\n"
".quad 0x25202c3531316625,0x6275730a3b333566,0x316625203233662e,0x31316625202c3731\n"
".quad 0x3b39356625202c36,0x3233662e6275730a,0x202c383131662520,0x25202c3731316625\n"
".quad 0x6464610a3b353666,0x316625203233662e,0x31316625202c3931,0x0a3b376625202c38\n"
".quad 0x203233662e627573,0x25202c3032316625,0x6625202c39313166,0x662e6464610a3b38\n"
".quad 0x3132316625203233,0x2c3032316625202c,0x730a3b3031662520,0x25203233662e6275\n"
".quad 0x6625202c32323166,0x346625202c313231,0x2e6464610a3b3735,0x3231662520323366\n"
".quad 0x202c366625202c33,0x64610a3b33386625,0x6625203233662e64,0x316625202c343231\n"
".quad 0x3b376625202c3332,0x3233662e6464610a,0x202c353231662520,0x25202c3432316625\n"
".quad 0x6464610a3b393866,0x316625203233662e,0x32316625202c3632,0x0a3b386625202c35\n"
".quad 0x203233662e627573,0x25202c3732316625,0x6625202c36323166,0x662e6275730a3b39\n"
".quad 0x3832316625203233,0x2c3732316625202c,0x730a3b3137662520,0x25203233662e6275\n"
".quad 0x6625202c39323166,0x316625202c383231,0x662e6275730a3b30,0x3033316625203233\n"
".quad 0x2c3932316625202c,0x730a3b3737662520,0x25203233662e6275,0x6625202c31333166\n"
".quad 0x346625202c303331,0x2e6275730a3b3735,0x3331662520323366,0x2c37346625202c32\n"
".quad 0x6c2e0a3b33662520,0x303132203220636f,0x2e6464610a312032,0x3331662520323366\n"
".quad 0x3233316625202c33,0x0a3b33356625202c,0x203233662e646461,0x25202c3433316625\n"
".quad 0x6625202c33333166,0x2e6464610a3b3935,0x3331662520323366,0x3433316625202c35\n"
".quad 0x0a3b35366625202c,0x203233662e646461,0x25202c3633316625,0x6625202c35333166\n"
".quad 0x2e6464610a3b3338,0x3331662520323366,0x3633316625202c37,0x610a3b376625202c\n"
".quad 0x25203233662e6464,0x6625202c38333166,0x386625202c373331,0x662e6464610a3b39\n"
".quad 0x3933316625203233,0x2c3833316625202c,0x64610a3b38662520,0x6625203233662e64\n"
".quad 0x316625202c303431,0x31376625202c3933,0x33662e6464610a3b,0x2c31343166252032\n"
".quad 0x202c303431662520,0x64610a3b30316625,0x6625203233662e64,0x316625202c323431\n"
".quad 0x37376625202c3134,0x33662e6464610a3b,0x2c33343166252032,0x202c323431662520\n"
".quad 0x6d0a3b3735346625,0x25203233662e6c75,0x6625202c34343166,0x316625202c323231\n"
".quad 0x2e616d660a3b3232,0x25203233662e6e72,0x6625202c35343166,0x316625202c333131\n"
".quad 0x34316625202c3331,0x662e6c756d0a3b34,0x3634316625203233,0x2c3133316625202c\n"
".quad 0x0a3b313331662520,0x662e6e722e616d66,0x3734316625203233,0x2c3133316625202c\n"
".quad 0x202c313331662520,0x730a3b3534316625,0x25203233662e6275,0x6625202c38343166\n"
".quad 0x316625202c333431,0x2e6c756d0a3b3734,0x3431662520323366,0x2c35336625202c39\n"
".quad 0x3030383043663020,0x616d660a3b303030,0x203233662e6e722e,0x25202c3035316625\n"
".quad 0x31346630202c3366,0x202c303030303034,0x660a3b3934316625,0x33662e6e722e616d\n"
".quad 0x2c31353166252032,0x6630202c34662520,0x3030303030383043,0x3b3035316625202c\n"
".quad 0x2e6e722e616d660a,0x3531662520323366,0x2c31346625202c32,0x3030383043663020\n"
".quad 0x316625202c303030,0x2e616d660a3b3135,0x25203233662e6e72,0x6625202c33353166\n"
".quad 0x3830436630202c35,0x25202c3030303030,0x64610a3b32353166,0x6625203233662e64\n"
".quad 0x316625202c343531,0x37346625202c3335,0x33662e6464610a3b,0x2c35353166252032\n"
".quad 0x202c343531662520,0x64610a3b33356625,0x6625203233662e64,0x316625202c363531\n"
".quad 0x39356625202c3535,0x33662e6464610a3b,0x2c37353166252032,0x202c363531662520\n"
".quad 0x6d660a3b35366625,0x3233662e6e722e61,0x202c383531662520,0x436630202c366625\n"
".quad 0x2c30303030303830,0x0a3b373531662520,0x203233662e646461,0x25202c3935316625\n"
".quad 0x6625202c38353166,0x2e6464610a3b3338,0x3631662520323366,0x3935316625202c30\n"
".quad 0x610a3b376625202c,0x25203233662e6464,0x6625202c31363166,0x386625202c303631\n"
".quad 0x662e6464610a3b39,0x3236316625203233,0x2c3136316625202c,0x6d660a3b38662520\n"
".quad 0x3233662e6e722e61,0x202c333631662520,0x436630202c396625,0x2c30303030303830\n"
".quad 0x0a3b323631662520,0x203233662e646461,0x25202c3436316625,0x6625202c33363166\n"
".quad 0x2e6464610a3b3137,0x3631662520323366,0x3436316625202c35,0x0a3b30316625202c\n"
".quad 0x203233662e646461,0x25202c3636316625,0x6625202c35363166,0x2e6464610a3b3737\n"
".quad 0x3631662520323366,0x3636316625202c37,0x3b3735346625202c,0x2e6e722e616d660a\n"
".quad 0x3631662520323366,0x3734316625202c38,0x314630346630202c,0x6625202c34313534\n"
".quad 0x6c756d0a3b373631,0x316625203233662e,0x31346625202c3936,0x304130346630202c\n"
".quad 0x6d660a3b30303030,0x3233662e6e722e61,0x202c303731662520,0x6630202c35336625\n"
".quad 0x3030303030413043,0x3b3936316625202c,0x2e6e722e616d660a,0x3731662520323366\n"
".quad 0x3331316625202c31,0x354446336630202c,0x6625202c35353535,0x6c756d0a3b303731\n"
".quad 0x316625203233662e,0x2c356625202c3237,0x3030413034663020,0x616d660a3b303030\n"
".quad 0x203233662e6e722e,0x25202c3337316625,0x30436630202c3466,0x202c303030303041\n"
".quad 0x660a3b3237316625,0x33662e6e722e616d,0x2c34373166252032,0x202c323231662520\n"
".quad 0x3535354446336630,0x37316625202c3535,0x662e6c756d0a3b33,0x3537316625203233\n"
".quad 0x30202c396625202c,0x3030303041303466,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x366625202c363731,0x304130436630202c,0x6625202c30303030,0x616d660a3b353731\n"
".quad 0x203233662e6e722e,0x25202c3737316625,0x6630202c31333166,0x3535353535444633\n"
".quad 0x3b3637316625202c,0x3233662e6464610a,0x202c383731662520,0x6625202c35336625\n"
".quad 0x2e6275730a3b3533,0x3731662520323366,0x3837316625202c39,0x2e0a3b346625202c\n"
".quad 0x3132203220636f6c,0x6464610a31203230,0x316625203233662e,0x31346625202c3038\n"
".quad 0x0a3b31346625202c,0x203233662e646461,0x25202c3138316625,0x6625202c39373166\n"
".quad 0x6275730a3b303831,0x316625203233662e,0x38316625202c3238,0x0a3b356625202c31\n"
".quad 0x32203220636f6c2e,0x64610a3120323031,0x6625203233662e64,0x316625202c333831\n"
".quad 0x37346625202c3238,0x33662e6464610a3b,0x2c34383166252032,0x202c333831662520\n"
".quad 0x64610a3b33356625,0x6625203233662e64,0x316625202c353831,0x39356625202c3438\n"
".quad 0x33662e6464610a3b,0x2c36383166252032,0x202c353831662520,0x75730a3b35366625\n"
".quad 0x6625203233662e62,0x316625202c373831,0x3b366625202c3638,0x203220636f6c2e0a\n"
".quad 0x610a312032303132,0x25203233662e6464,0x6625202c38383166,0x386625202c373831\n"
".quad 0x662e766f6d0a3b33,0x3938316625203233,0x303030436630202c,0x6c2e0a3b30303030\n"
".quad 0x303132203220636f,0x2e616d660a312032,0x25203233662e6e72,0x6625202c30393166\n"
".quad 0x3030436630202c37,0x25202c3030303030,0x64610a3b38383166,0x6625203233662e64\n"
".quad 0x316625202c313931,0x39386625202c3039,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x2c386625202c3239,0x3030303043663020,0x316625202c303030,0x2e6275730a3b3139\n"
".quad 0x3931662520323366,0x3239316625202c33,0x2e0a3b396625202c,0x3132203220636f6c\n"
".quad 0x6464610a31203230,0x316625203233662e,0x39316625202c3439,0x3b31376625202c33\n"
".quad 0x2e6e722e616d660a,0x3931662520323366,0x2c30316625202c35,0x3030303043663020\n"
".quad 0x316625202c303030,0x2e6464610a3b3439,0x3931662520323366,0x3539316625202c36\n"
".quad 0x0a3b37376625202c,0x662e6e722e616d66,0x3739316625203233,0x2c3735346625202c\n"
".quad 0x3030303043663020,0x316625202c303030,0x2e6464610a3b3639,0x3931662520323366\n"
".quad 0x3331316625202c38,0x3b3331316625202c,0x2e6e722e616d660a,0x3931662520323366\n"
".quad 0x3232316625202c39,0x2c3232316625202c,0x0a3b363431662520,0x203233662e67656e\n"
".quad 0x25202c3030326625,0x6d660a3b39393166,0x3233662e6e722e61,0x202c313032662520\n"
".quad 0x25202c3839316625,0x6625202c33313166,0x6275730a3b303032,0x326625203233662e\n"
".quad 0x39316625202c3230,0x3130326625202c37,0x33662e6464610a3b,0x2c33303266252032\n"
".quad 0x6625202c34662520,0x722e616d660a3b34,0x6625203233662e6e,0x336625202c343032\n"
".quad 0x3830436630202c35,0x25202c3030303030,0x6d660a3b33303266,0x3233662e6e722e61\n"
".quad 0x202c353032662520,0x6630202c31346625,0x3030303030383043,0x3b3430326625202c\n"
".quad 0x3233662e6464610a,0x202c363032662520,0x356625202c356625,0x33662e6464610a3b\n"
".quad 0x2c37303266252032,0x202c353032662520,0x610a3b3630326625,0x25203233662e6464\n"
".quad 0x6625202c38303266,0x346625202c373032,0x662e6464610a3b37,0x3930326625203233\n"
".quad 0x2c3830326625202c,0x610a3b3335662520,0x25203233662e6464,0x6625202c30313266\n"
".quad 0x356625202c393032,0x662e6464610a3b39,0x3131326625203233,0x2c3031326625202c\n"
".quad 0x610a3b3536662520,0x25203233662e6464,0x6625202c32313266,0x0a3b366625202c36\n"
".quad 0x203233662e646461,0x25202c3331326625,0x6625202c31313266,0x6464610a3b323132\n"
".quad 0x326625203233662e,0x31326625202c3431,0x3b33386625202c33,0x2e6e722e616d660a\n"
".quad 0x3132662520323366,0x202c376625202c35,0x3030303030436630,0x31326625202c3030\n"
".quad 0x662e6464610a3b34,0x3631326625203233,0x2c3531326625202c,0x660a3b3938662520\n"
".quad 0x33662e6e722e616d,0x2c37313266252032,0x6630202c38662520,0x3030303030303043\n"
".quad 0x3b3631326625202c,0x3233662e6464610a,0x202c383132662520,0x396625202c396625\n"
".quad 0x33662e6464610a3b,0x2c39313266252032,0x202c373132662520,0x610a3b3831326625\n"
".quad 0x25203233662e6464,0x6625202c30323266,0x376625202c393132,0x722e616d660a3b31\n"
".quad 0x6625203233662e6e,0x316625202c313232,0x3030436630202c30,0x25202c3030303030\n"
".quad 0x64610a3b30323266,0x6625203233662e64,0x326625202c323232,0x37376625202c3132\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x35346625202c3332,0x3030436630202c37\n"
".quad 0x25202c3030303030,0x64610a3b32323266,0x6625203233662e64,0x346625202c343232\n"
".quad 0x610a3b356625202c,0x25203233662e6464,0x6625202c35323266,0x346625202c343232\n"
".quad 0x662e6464610a3b37,0x3632326625203233,0x2c3532326625202c,0x610a3b3335662520\n"
".quad 0x25203233662e6464,0x6625202c37323266,0x356625202c363232,0x662e6464610a3b39\n"
".quad 0x3832326625203233,0x2c3732326625202c,0x730a3b3536662520,0x25203233662e6275\n"
".quad 0x6625202c39323266,0x366625202c383232,0x33662e6275730a3b,0x2c30333266252032\n"
".quad 0x202c393232662520,0x75730a3b33386625,0x6625203233662e62,0x326625202c313332\n"
".quad 0x39386625202c3033,0x33662e6275730a3b,0x2c32333266252032,0x202c313332662520\n"
".quad 0x6275730a3b396625,0x326625203233662e,0x33326625202c3333,0x3b31376625202c32\n"
".quad 0x3233662e6275730a,0x202c343332662520,0x25202c3333326625,0x6f6c2e0a3b373766\n"
".quad 0x3230313220322063,0x662e67656e0a3120,0x3533326625203233,0x3b3133316625202c\n"
".quad 0x2e6e722e616d660a,0x3332662520323366,0x3533326625202c36,0x2c3133316625202c\n"
".quad 0x0a3b343431662520,0x203233662e627573,0x25202c3733326625,0x6625202c34333266\n"
".quad 0x67656e0a3b363332,0x326625203233662e,0x30326625202c3833,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x346625202c393332,0x2c3938316625202c,0x0a3b383332662520\n"
".quad 0x203233662e646461,0x25202c3034326625,0x6625202c39333266,0x2e6464610a3b3734\n"
".quad 0x3432662520323366,0x3034326625202c31,0x0a3b33356625202c,0x203233662e646461\n"
".quad 0x25202c3234326625,0x6625202c31343266,0x2e6464610a3b3935,0x3432662520323366\n"
".quad 0x3234326625202c33,0x0a3b35366625202c,0x203233662e646461,0x25202c3434326625\n"
".quad 0x6625202c33343266,0x6275730a3b323132,0x326625203233662e,0x34326625202c3534\n"
".quad 0x3b33386625202c34,0x3233662e6275730a,0x202c363432662520,0x25202c3534326625\n"
".quad 0x6f6c2e0a3b393866,0x3230313220322063,0x662e6464610a3120,0x3734326625203233\n"
".quad 0x2c3634326625202c,0x0a3b383132662520,0x203233662e627573,0x25202c3834326625\n"
".quad 0x6625202c37343266,0x2e6275730a3b3137,0x3432662520323366,0x3834326625202c39\n"
".quad 0x0a3b37376625202c,0x203233662e627573,0x25202c3035326625,0x356625202c373466\n"
".quad 0x20636f6c2e0a3b33,0x3120323031322032,0x3233662e6464610a,0x202c313532662520\n"
".quad 0x25202c3035326625,0x6275730a3b393566,0x326625203233662e,0x35326625202c3235\n"
".quad 0x3b35366625202c31,0x203220636f6c2e0a,0x6e0a312032303132,0x25203233662e6765\n"
".quad 0x6625202c33353266,0x616d660a3b333131,0x203233662e6e722e,0x25202c3435326625\n"
".quad 0x6625202c33353266,0x326625202c323231,0x2e6275730a3b3235,0x3532662520323366\n"
".quad 0x202c376625202c35,0x6275730a3b386625,0x326625203233662e,0x35326625202c3635\n"
".quad 0x3b30316625202c35,0x203220636f6c2e0a,0x610a312032303132,0x25203233662e6464\n"
".quad 0x6625202c37353266,0x346625202c363532,0x2e67656e0a3b3735,0x3532662520323366\n"
".quad 0x3232316625202c38,0x6e722e616d660a3b,0x326625203233662e,0x35326625202c3935\n"
".quad 0x3133316625202c38,0x3b3735326625202c,0x3233662e6275730a,0x202c303632662520\n"
".quad 0x6625202c33386625,0x2e6275730a3b3938,0x3632662520323366,0x3036326625202c31\n"
".quad 0x0a3b31376625202c,0x32203220636f6c2e,0x64610a3120323031,0x6625203233662e64\n"
".quad 0x326625202c323632,0x37376625202c3136,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x35326625202c3336,0x3133316625202c33,0x3b3236326625202c,0x3233662e6275730a\n"
".quad 0x202c343632662520,0x25202c3035326625,0x6f6c2e0a3b393566,0x3230313220322063\n"
".quad 0x662e6464610a3120,0x3536326625203233,0x2c3436326625202c,0x730a3b3536662520\n"
".quad 0x25203233662e6275,0x6625202c36363266,0x386625202c353632,0x662e6464610a3b33\n"
".quad 0x3736326625203233,0x2c3636326625202c,0x730a3b3938662520,0x25203233662e6275\n"
".quad 0x6625202c38363266,0x376625202c373632,0x20636f6c2e0a3b31,0x3120323031322032\n"
".quad 0x3233662e6464610a,0x202c393632662520,0x25202c3836326625,0x67656e0a3b373766\n"
".quad 0x326625203233662e,0x33356625202c3037,0x33662e6275730a3b,0x2c31373266252032\n"
".quad 0x202c303732662520,0x6c2e0a3b37346625,0x303132203220636f,0x2e6464610a312032\n"
".quad 0x3732662520323366,0x3137326625202c32,0x0a3b39356625202c,0x203233662e646461\n"
".quad 0x25202c3337326625,0x6625202c32373266,0x2e6464610a3b3536,0x3732662520323366\n"
".quad 0x3337326625202c34,0x730a3b376625202c,0x25203233662e6275,0x6625202c35373266\n"
".quad 0x386625202c343732,0x3220636f6c2e0a3b,0x0a31203230313220,0x203233662e646461\n"
".quad 0x25202c3637326625,0x6625202c35373266,0x2e6275730a3b3031,0x3732662520323366\n"
".quad 0x3637326625202c37,0x3b3735346625202c,0x3233662e6275730a,0x202c383732662520\n"
".quad 0x6625202c33386625,0x20636f6c2e0a3b37,0x3120323031322032,0x3233662e6464610a\n"
".quad 0x202c393732662520,0x25202c3837326625,0x6275730a3b393866,0x326625203233662e\n"
".quad 0x37326625202c3038,0x0a3b386625202c39,0x203233662e627573,0x25202c3138326625\n"
".quad 0x6625202c30383266,0x636f6c2e0a3b3137,0x2032303132203220,0x33662e6464610a31\n"
".quad 0x2c32383266252032,0x202c313832662520,0x75730a3b30316625,0x6625203233662e62\n"
".quad 0x326625202c333832,0x37376625202c3238,0x3220636f6c2e0a3b,0x0a31203230313220\n"
".quad 0x203233662e646461,0x25202c3438326625,0x6625202c33383266,0x766f6d0a3b373534\n"
".quad 0x326625203233662e,0x45336630202c3538,0x0a3b303030303038,0x6d617261702e646c\n"
".quad 0x346625203233662e,0x315a5f5b202c3635,0x79685f645f524c32,0x5366504443424162\n"
".quad 0x617261705f6d665f,0x6c2e0a3b5d325f6d,0x303132203220636f,0x2e6c756d0a312032\n"
".quad 0x3832662520323366,0x3635346625202c36,0x303845336630202c,0x6f6d0a3b30303030\n"
".quad 0x6625203233662e76,0x336630202c373832,0x3b30303030303045,0x203220636f6c2e0a\n"
".quad 0x6d0a312032303132,0x25203233662e6c75,0x6625202c38383266,0x336630202c393432\n"
".quad 0x3b42414141413244,0x3233662e766f6d0a,0x202c393832662520,0x4141413244336630\n"
".quad 0x636f6c2e0a3b4241,0x2032303132203220,0x33662e6c756d0a31,0x2c30393266252032\n"
".quad 0x202c363534662520,0x4141414144336630,0x2e6c756d0a3b4241,0x3932662520323366\n"
".quad 0x3332326625202c31,0x333643336630202c,0x756d0a3b39334538,0x6625203233662e6c\n"
".quad 0x346625202c323932,0x43336630202c3635,0x0a3b393345383345,0x203233662e6c756d\n"
".quad 0x25202c3339326625,0x6625202c32303266,0x6c756d0a3b323932,0x326625203233662e\n"
".quad 0x37316625202c3439,0x4343336630202c31,0x6d0a3b4443434343,0x25203233662e766f\n"
".quad 0x6630202c35393266,0x4443434343434333,0x3220636f6c2e0a3b,0x0a31203230313220\n"
".quad 0x203233662e6c756d,0x25202c3639326625,0x6630202c34373166,0x4443434343434333\n"
".quad 0x33662e6c756d0a3b,0x2c37393266252032,0x202c373731662520,0x4343434343336630\n"
".quad 0x2e6c756d0a3b4443,0x3932662520323366,0x3836316625202c38,0x323842336630202c\n"
".quad 0x756d0a3b31323830,0x6625203233662e6c,0x326625202c393932,0x31346630202c3839\n"
".quad 0x0a3b303030303034,0x662e6e722e616d66,0x3030336625203233,0x2c3834316625202c\n"
".quad 0x4333374542663020,0x326625202c443346,0x2e6275730a3b3939,0x3033662520323366\n"
".quad 0x202c336625202c31,0x6d0a3b3030336625,0x25203233662e6c75,0x6625202c32303366\n"
".quad 0x436630202c383932,0x3b30303030303830,0x2e6e722e616d660a,0x3033662520323366\n"
".quad 0x3834316625202c33,0x324244426630202c,0x6625202c44324243,0x616d660a3b323033\n"
".quad 0x203233662e6e722e,0x25202c3430336625,0x6630202c34393266,0x3030303030383043\n"
".quad 0x3b3330336625202c,0x2e6e722e616d660a,0x3033662520323366,0x3230326625202c35\n"
".quad 0x2c3239326625202c,0x0a3b333932662520,0x203233662e646461,0x25202c3630336625\n"
".quad 0x6625202c34303366,0x616d660a3b353033,0x203233662e6e722e,0x25202c3730336625\n"
".quad 0x6630202c31393266,0x3030303030383043,0x3b3630336625202c,0x3233662e6275730a\n"
".quad 0x202c383033662520,0x6625202c35336625,0x616d660a3b373033,0x203233662e6e722e\n"
".quad 0x25202c3930336625,0x6630202c36393266,0x3030303030383043,0x3b3330336625202c\n"
".quad 0x3233662e67656e0a,0x202c303133662520,0x660a3b3230326625,0x33662e6e722e616d\n"
".quad 0x2c31313366252032,0x202c303133662520,0x25202c3239326625,0x6c2e0a3b39303366\n"
".quad 0x303132203220636f,0x2e616d660a312032,0x25203233662e6e72,0x6625202c32313366\n"
".quad 0x336630202c333232,0x2c39334538333643,0x0a3b313932662520,0x203233662e646461\n"
".quad 0x25202c3331336625,0x6625202c31313366,0x616d660a3b323133,0x203233662e6e722e\n"
".quad 0x25202c3431336625,0x6625202c37333266,0x336625202c303932,0x2e616d660a3b3331\n"
".quad 0x25203233662e6e72,0x6625202c35313366,0x436630202c383832,0x2c30303030303030\n"
".quad 0x0a3b343133662520,0x203233662e627573,0x25202c3631336625,0x31336625202c3466\n"
".quad 0x722e616d660a3b35,0x6625203233662e6e,0x326625202c373133,0x30346630202c3439\n"
".quad 0x202c303030303038,0x610a3b3330336625,0x25203233662e6464,0x6625202c38313366\n"
".quad 0x336625202c373133,0x2e616d660a3b3530,0x25203233662e6e72,0x6625202c39313366\n"
".quad 0x436630202c313932,0x2c30303030303830,0x0a3b383133662520,0x203233662e627573\n"
".quad 0x25202c3032336625,0x336625202c313466,0x2e616d660a3b3931,0x25203233662e6e72\n"
".quad 0x6625202c31323366,0x346630202c363932,0x2c30303030303830,0x0a3b333033662520\n"
".quad 0x662e6e722e616d66,0x3232336625203233,0x2c3031336625202c,0x202c323932662520\n"
".quad 0x2e0a3b3132336625,0x3132203220636f6c,0x6464610a31203230,0x336625203233662e\n"
".quad 0x32336625202c3332,0x3231336625202c32,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x33326625202c3432,0x3039326625202c37,0x3b3332336625202c,0x2e6e722e616d660a\n"
".quad 0x3233662520323366,0x3838326625202c35,0x303030436630202c,0x6625202c30303030\n"
".quad 0x6275730a3b343233,0x336625203233662e,0x2c356625202c3632,0x0a3b353233662520\n"
".quad 0x662e6e722e616d66,0x3732336625203233,0x2c3834316625202c,0x3032384433663020\n"
".quad 0x326625202c303238,0x2e616d660a3b3839,0x25203233662e6e72,0x6625202c38323366\n"
".quad 0x336630202c313731,0x2c44434343434343,0x0a3b373233662520,0x662e6e722e616d66\n"
".quad 0x3932336625203233,0x2c3437316625202c,0x4343434333663020,0x336625202c444343\n"
".quad 0x2e616d660a3b3832,0x25203233662e6e72,0x6625202c30333366,0x326625202c323032\n"
".quad 0x32336625202c3239,0x722e616d660a3b39,0x6625203233662e6e,0x326625202c313333\n"
".quad 0x43336630202c3332,0x202c393345383336,0x660a3b3033336625,0x33662e6e722e616d\n"
".quad 0x2c32333366252032,0x202c373332662520,0x25202c3039326625,0x6d660a3b31333366\n"
".quad 0x3233662e6e722e61,0x202c333333662520,0x30202c3934326625,0x4141414132443366\n"
".quad 0x3233336625202c42,0x6e722e616d660a3b,0x336625203233662e,0x35326625202c3433\n"
".quad 0x3845336630202c34,0x25202c3030303030,0x6d660a3b33333366,0x3233662e6e722e61\n"
".quad 0x202c353333662520,0x30202c3936326625,0x3030303030453366,0x3433336625202c30\n"
".quad 0x33662e67656e0a3b,0x2c36333366252032,0x0a3b373732662520,0x662e6e722e616d66\n"
".quad 0x3733336625203233,0x2c3633336625202c,0x202c373832662520,0x2e0a3b3533336625\n"
".quad 0x3132203220636f6c,0x6275730a31203230,0x336625203233662e,0x37346625202c3833\n"
".quad 0x3b3733336625202c,0x3233662e67656e0a,0x202c393333662520,0x660a3b3137316625\n"
".quad 0x33662e6e722e616d,0x2c30343366252032,0x202c393333662520,0x25202c3539326625\n"
".quad 0x6c2e0a3b37323366,0x303132203220636f,0x2e616d660a312032,0x25203233662e6e72\n"
".quad 0x6625202c31343366,0x336630202c343731,0x2c44434343434343,0x0a3b303433662520\n"
".quad 0x662e6e722e616d66,0x3234336625203233,0x2c3230326625202c,0x202c323932662520\n"
".quad 0x660a3b3134336625,0x33662e6e722e616d,0x2c33343366252032,0x202c333232662520\n"
".quad 0x4538333643336630,0x34336625202c3933,0x722e616d660a3b32,0x6625203233662e6e\n"
".quad 0x326625202c343433,0x39326625202c3733,0x3334336625202c30,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x34326625202c3534,0x3244336630202c39,0x25202c4241414141\n"
".quad 0x656e0a3b34343366,0x6625203233662e67,0x326625202c363433,0x2e616d660a3b3435\n"
".quad 0x25203233662e6e72,0x6625202c37343366,0x326625202c363433,0x34336625202c3538\n"
".quad 0x662e67656e0a3b35,0x3834336625203233,0x3b3936326625202c,0x2e6e722e616d660a\n"
".quad 0x3433662520323366,0x3834336625202c39,0x2c3738326625202c,0x0a3b373433662520\n"
".quad 0x662e6e722e616d66,0x3035336625203233,0x2c3633336625202c,0x202c373832662520\n"
".quad 0x2e0a3b3934336625,0x3132203220636f6c,0x6275730a31203230,0x336625203233662e\n"
".quad 0x33356625202c3135,0x3b3035336625202c,0x3233662e67656e0a,0x202c323533662520\n"
".quad 0x660a3b3437316625,0x33662e6e722e616d,0x2c33353366252032,0x202c323533662520\n"
".quad 0x25202c3539326625,0x6c2e0a3b30343366,0x303132203220636f,0x2e616d660a312032\n"
".quad 0x25203233662e6e72,0x6625202c34353366,0x326625202c323032,0x35336625202c3239\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x326625202c353533,0x43336630202c3332\n"
".quad 0x202c393345383336,0x660a3b3435336625,0x33662e6e722e616d,0x2c36353366252032\n"
".quad 0x202c373332662520,0x25202c3039326625,0x6d660a3b35353366,0x3233662e6e722e61\n"
".quad 0x202c373533662520,0x30202c3934326625,0x4141414132443366,0x3635336625202c42\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x35326625202c3835,0x3845336630202c34\n"
".quad 0x25202c3030303030,0x6d660a3b37353366,0x3233662e6e722e61,0x202c393533662520\n"
".quad 0x25202c3834336625,0x6625202c37383266,0x6f6c2e0a3b383533,0x3230313220322063\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x326625202c303633,0x45336630202c3737\n"
".quad 0x202c303030303030,0x730a3b3935336625,0x25203233662e6275,0x6625202c31363366\n"
".quad 0x36336625202c3935,0x722e616d660a3b30,0x6625203233662e6e,0x336625202c323633\n"
".quad 0x39326625202c3235,0x3832336625202c35,0x3220636f6c2e0a3b,0x0a31203230313220\n"
".quad 0x662e6e722e616d66,0x3336336625203233,0x2c3230326625202c,0x202c323932662520\n"
".quad 0x660a3b3236336625,0x33662e6e722e616d,0x2c34363366252032,0x202c333232662520\n"
".quad 0x4538333643336630,0x36336625202c3933,0x722e616d660a3b33,0x6625203233662e6e\n"
".quad 0x326625202c353633,0x39326625202c3733,0x3436336625202c30,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x34326625202c3636,0x3244336630202c39,0x25202c4241414141\n"
".quad 0x6d660a3b35363366,0x3233662e6e722e61,0x202c373633662520,0x25202c3634336625\n"
".quad 0x6625202c35383266,0x6f6c2e0a3b363633,0x3230313220322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x326625202c383633,0x45336630202c3936,0x202c303030303030\n"
".quad 0x660a3b3736336625,0x33662e6e722e616d,0x2c39363366252032,0x202c373732662520\n"
".quad 0x3030303045336630,0x36336625202c3030,0x662e6275730a3b38,0x3037336625203233\n"
".quad 0x202c35366625202c,0x660a3b3936336625,0x33662e6e722e616d,0x2c31373366252032\n"
".quad 0x202c373932662520,0x3030303830436630,0x30336625202c3030,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x336625202c323733,0x39326625202c3031,0x3137336625202c32\n"
".quad 0x3220636f6c2e0a3b,0x0a31203230313220,0x203233662e646461,0x25202c3337336625\n"
".quad 0x6625202c32373366,0x67656e0a3b323133,0x336625203233662e,0x33326625202c3437\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x336625202c353733,0x39326625202c3437\n"
".quad 0x3337336625202c30,0x3220636f6c2e0a3b,0x0a31203230313220,0x662e6e722e616d66\n"
".quad 0x3637336625203233,0x2c3934326625202c,0x4141324433663020,0x326625202c424141\n"
".quad 0x2e6464610a3b3838,0x3733662520323366,0x3537336625202c37,0x3b3637336625202c\n"
".quad 0x3233662e6275730a,0x202c383733662520,0x336625202c366625,0x2e616d660a3b3737\n"
".quad 0x25203233662e6e72,0x6625202c39373366,0x336630202c373731,0x2c44434343434343\n"
".quad 0x0a3b383233662520,0x662e6e722e616d66,0x3038336625203233,0x2c3230326625202c\n"
".quad 0x202c323932662520,0x660a3b3937336625,0x33662e6e722e616d,0x2c31383366252032\n"
".quad 0x202c333232662520,0x4538333643336630,0x38336625202c3933,0x722e616d660a3b30\n"
".quad 0x6625203233662e6e,0x336625202c323833,0x39326625202c3437,0x3138336625202c30\n"
".quad 0x33662e67656e0a3b,0x2c33383366252032,0x0a3b393432662520,0x662e6e722e616d66\n"
".quad 0x3438336625203233,0x2c3338336625202c,0x202c393832662520,0x2e0a3b3238336625\n"
".quad 0x3132203220636f6c,0x616d660a31203230,0x203233662e6e722e,0x25202c3538336625\n"
".quad 0x6625202c33363266,0x336625202c363832,0x2e616d660a3b3438,0x25203233662e6e72\n"
".quad 0x6625202c36383366,0x326625202c383433,0x38336625202c3738,0x20636f6c2e0a3b35\n"
".quad 0x3120323031322032,0x2e6e722e616d660a,0x3833662520323366,0x3438326625202c37\n"
".quad 0x303045336630202c,0x6625202c30303030,0x6275730a3b363833,0x336625203233662e\n"
".quad 0x33386625202c3838,0x3b3738336625202c,0x2e6e722e616d660a,0x3833662520323366\n"
".quad 0x3437316625202c39,0x434343336630202c,0x6625202c44434343,0x616d660a3b373233\n"
".quad 0x203233662e6e722e,0x25202c3039336625,0x6630202c37373166,0x4443434343434333\n"
".quad 0x3b3938336625202c,0x2e6e722e616d660a,0x3933662520323366,0x3339326625202c31\n"
".quad 0x303030436630202c,0x6625202c30303030,0x616d660a3b303933,0x203233662e6e722e\n"
".quad 0x25202c3239336625,0x6630202c31393266,0x3030303030303043,0x3b3139336625202c\n"
".quad 0x2e6e722e616d660a,0x3933662520323366,0x3935326625202c33,0x303845336630202c\n"
".quad 0x6625202c30303030,0x616d660a3b323933,0x203233662e6e722e,0x25202c3439336625\n"
".quad 0x6630202c37373266,0x3030303030304533,0x3b3339336625202c,0x3233662e67656e0a\n"
".quad 0x202c353933662520,0x660a3b3438326625,0x33662e6e722e616d,0x2c36393366252032\n"
".quad 0x202c353933662520,0x25202c3738326625,0x6c2e0a3b34393366,0x303132203220636f\n"
".quad 0x2e6275730a312032,0x3933662520323366,0x202c376625202c37,0x660a3b3639336625\n"
".quad 0x33662e6e722e616d,0x2c38393366252032,0x202c373731662520,0x4343434343336630\n"
".quad 0x34336625202c4443,0x722e616d660a3b30,0x6625203233662e6e,0x326625202c393933\n"
".quad 0x39326625202c3230,0x3839336625202c32,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x32326625202c3030,0x3643336630202c33,0x25202c3933453833,0x6d660a3b39393366\n"
".quad 0x3233662e6e722e61,0x202c313034662520,0x25202c3437336625,0x6625202c30393266\n"
".quad 0x616d660a3b303034,0x203233662e6e722e,0x25202c3230346625,0x6625202c33383366\n"
".quad 0x346625202c393832,0x2e67656e0a3b3130,0x3034662520323366,0x3336326625202c33\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x30346625202c3430,0x3638326625202c33\n"
".quad 0x3b3230346625202c,0x203220636f6c2e0a,0x660a312032303132,0x33662e6e722e616d\n"
".quad 0x2c35303466252032,0x202c393632662520,0x3030303045336630,0x30346625202c3030\n"
".quad 0x722e616d660a3b34,0x6625203233662e6e,0x326625202c363034,0x45336630202c3438\n"
".quad 0x202c303030303030,0x730a3b3530346625,0x25203233662e6275,0x6625202c37303466\n"
".quad 0x30346625202c3938,0x722e616d660a3b36,0x6625203233662e6e,0x336625202c383034\n"
".quad 0x39326625202c3235,0x3732336625202c35,0x3220636f6c2e0a3b,0x0a31203230313220\n"
".quad 0x662e6e722e616d66,0x3930346625203233,0x2c3737316625202c,0x4343434333663020\n"
".quad 0x346625202c444343,0x2e616d660a3b3830,0x25203233662e6e72,0x6625202c30313466\n"
".quad 0x436630202c333932,0x2c30303030303030,0x0a3b393034662520,0x662e6e722e616d66\n"
".quad 0x3131346625203233,0x2c3139326625202c,0x3030303043663020,0x346625202c303030\n"
".quad 0x2e67656e0a3b3031,0x3134662520323366,0x3935326625202c32,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x31346625202c3331,0x3538326625202c32,0x3b3131346625202c\n"
".quad 0x2e6e722e616d660a,0x3134662520323366,0x3633336625202c34,0x2c3738326625202c\n"
".quad 0x0a3b333134662520,0x662e6e722e616d66,0x3531346625203233,0x2c3539336625202c\n"
".quad 0x202c373832662520,0x2e0a3b3431346625,0x3132203220636f6c,0x6275730a31203230\n"
".quad 0x346625203233662e,0x2c386625202c3631,0x0a3b353134662520,0x662e6e722e616d66\n"
".quad 0x3731346625203233,0x2c3739326625202c,0x3030383034663020,0x336625202c303030\n"
".quad 0x2e616d660a3b3330,0x25203233662e6e72,0x6625202c38313466,0x326625202c303133\n"
".quad 0x31346625202c3239,0x20636f6c2e0a3b37,0x3120323031322032,0x3233662e6464610a\n"
".quad 0x202c393134662520,0x25202c3831346625,0x6d660a3b32313366,0x3233662e6e722e61\n"
".quad 0x202c303234662520,0x25202c3437336625,0x6625202c30393266,0x6f6c2e0a3b393134\n"
".quad 0x3230313220322063,0x662e6464610a3120,0x3132346625203233,0x2c3032346625202c\n"
".quad 0x0a3b363733662520,0x203233662e627573,0x25202c3232346625,0x32346625202c3966\n"
".quad 0x662e67656e0a3b31,0x3332346625203233,0x3b3737316625202c,0x2e6e722e616d660a\n"
".quad 0x3234662520323366,0x3332346625202c34,0x2c3539326625202c,0x0a3b383233662520\n"
".quad 0x32203220636f6c2e,0x6d660a3120323031,0x3233662e6e722e61,0x202c353234662520\n"
".quad 0x25202c3230326625,0x6625202c32393266,0x616d660a3b343234,0x203233662e6e722e\n"
".quad 0x25202c3632346625,0x6630202c33323266,0x3933453833364333,0x3b3532346625202c\n"
".quad 0x2e6e722e616d660a,0x3234662520323366,0x3437336625202c37,0x2c3039326625202c\n"
".quad 0x0a3b363234662520,0x662e6e722e616d66,0x3832346625203233,0x2c3338336625202c\n"
".quad 0x202c393832662520,0x660a3b3732346625,0x33662e6e722e616d,0x2c39323466252032\n"
".quad 0x202c333034662520,0x25202c3638326625,0x6d660a3b38323466,0x3233662e6e722e61\n"
".quad 0x202c303334662520,0x25202c3834336625,0x6625202c37383266,0x616d660a3b393234\n"
".quad 0x203233662e6e722e,0x25202c3133346625,0x6625202c35393366,0x346625202c373832\n"
".quad 0x636f6c2e0a3b3033,0x2032303132203220,0x33662e6275730a31,0x2c32333466252032\n"
".quad 0x25202c3137662520,0x6d660a3b31333466,0x3233662e6e722e61,0x202c333334662520\n"
".quad 0x25202c3332346625,0x6625202c35393266,0x6f6c2e0a3b393833,0x3230313220322063\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x326625202c343334,0x30436630202c3339\n"
".quad 0x202c303030303030,0x660a3b3333346625,0x33662e6e722e616d,0x2c35333466252032\n"
".quad 0x202c313932662520,0x3030303030436630,0x33346625202c3030,0x722e616d660a3b34\n"
".quad 0x6625203233662e6e,0x346625202c363334,0x38326625202c3231,0x3533346625202c35\n"
".quad 0x3220636f6c2e0a3b,0x0a31203230313220,0x662e6e722e616d66,0x3733346625203233\n"
".quad 0x2c3737326625202c,0x3030304533663020,0x346625202c303030,0x2e616d660a3b3633\n"
".quad 0x25203233662e6e72,0x6625202c38333466,0x336630202c343832,0x2c30303030303045\n"
".quad 0x0a3b373334662520,0x203233662e627573,0x25202c3933346625,0x346625202c303166\n"
".quad 0x2e616d660a3b3833,0x25203233662e6e72,0x6625202c30343466,0x326625202c333234\n"
".quad 0x34336625202c3539,0x20636f6c2e0a3b30,0x3120323031322032,0x2e6e722e616d660a\n"
".quad 0x3434662520323366,0x3230326625202c31,0x2c3239326625202c,0x0a3b303434662520\n"
".quad 0x662e6e722e616d66,0x3234346625203233,0x2c3332326625202c,0x3833364333663020\n"
".quad 0x346625202c393345,0x2e616d660a3b3134,0x25203233662e6e72,0x6625202c33343466\n"
".quad 0x326625202c343733,0x34346625202c3039,0x722e616d660a3b32,0x6625203233662e6e\n"
".quad 0x336625202c343434,0x38326625202c3338,0x3334346625202c39,0x3220636f6c2e0a3b\n"
".quad 0x0a31203230313220,0x662e6e722e616d66,0x3534346625203233,0x2c3336326625202c\n"
".quad 0x202c363832662520,0x660a3b3434346625,0x33662e6e722e616d,0x2c36343466252032\n"
".quad 0x202c393632662520,0x3030303045336630,0x34346625202c3030,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x336625202c373434,0x38326625202c3539,0x3634346625202c37\n"
".quad 0x3220636f6c2e0a3b,0x0a31203230313220,0x203233662e627573,0x25202c3834346625\n"
".quad 0x346625202c373766,0x2e616d660a3b3734,0x25203233662e6e72,0x6625202c39343466\n"
".quad 0x326625202c333234,0x30346625202c3539,0x20636f6c2e0a3b38,0x3120323031322032\n"
".quad 0x2e6e722e616d660a,0x3534662520323366,0x3339326625202c30,0x303030436630202c\n"
".quad 0x6625202c30303030,0x616d660a3b393434,0x203233662e6e722e,0x25202c3135346625\n"
".quad 0x6630202c31393266,0x3030303030303043,0x3b3035346625202c,0x2e6e722e616d660a\n"
".quad 0x3534662520323366,0x3935326625202c32,0x303845336630202c,0x6625202c30303030\n"
".quad 0x616d660a3b313534,0x203233662e6e722e,0x25202c3335346625,0x6625202c36333366\n"
".quad 0x346625202c373832,0x636f6c2e0a3b3235,0x2032303132203220,0x6e722e616d660a31\n"
".quad 0x346625203233662e,0x38326625202c3435,0x3045336630202c34,0x25202c3030303030\n"
".quad 0x75730a3b33353466,0x6625203233662e62,0x346625202c353534,0x35346625202c3735\n"
".quad 0x61702e646c0a3b34,0x203436752e6d6172,0x202c3331336c7225,0x5f524c32315a5f5b\n"
".quad 0x4342416279685f64,0x5f6d665f53665044,0x5d335f6d61726170,0x3220636f6c2e0a3b\n"
".quad 0x0a31203633303220,0x732e6f6c2e64616d,0x32386c7225203436,0x202c396c7225202c\n"
".quad 0x202c3331336c7225,0x646c0a3b356c7225,0x752e6d617261702e,0x31336c7225203436\n"
".quad 0x32315a5f5b202c31,0x6279685f645f524c,0x5f53665044434241,0x6d617261705f6d66\n"
".quad 0x7476630a3b5d315f,0x6f6c672e6f742e61,0x203436752e6c6162,0x25202c33386c7225\n"
".quad 0x730a3b3131336c72,0x25203436622e6c68,0x7225202c34386c72,0x3b3233202c32386c\n"
".quad 0x3436732e7268730a,0x202c35386c722520,0x33202c34386c7225,0x20636f6c2e0a3b32\n"
".quad 0x3120363031322032,0x3436622e6c68730a,0x202c36386c722520,0x32202c35386c7225\n"
".quad 0x36732e6464610a3b,0x2c37386c72252034,0x202c33386c722520,0x730a3b36386c7225\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d37386c,0x6464610a3b313033\n"
".quad 0x6c7225203436732e,0x396c7225202c3838,0x0a3b36393034202c,0x32203220636f6c2e\n"
".quad 0x616d0a3120373630,0x3436732e6f6c2e64,0x202c39386c722520,0x25202c38386c7225\n"
".quad 0x25202c3331336c72,0x6c68730a3b356c72,0x6c7225203436622e,0x386c7225202c3039\n"
".quad 0x730a3b3233202c39,0x25203436732e7268,0x7225202c31396c72,0x3b3233202c30396c\n"
".quad 0x203220636f6c2e0a,0x730a312037363032,0x25203436622e6c68,0x7225202c32396c72\n"
".quad 0x0a3b32202c31396c,0x203436732e646461,0x25202c33396c7225,0x7225202c33386c72\n"
".quad 0x6f6c2e0a3b32396c,0x3730313220322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x5d33396c72255b20,0x3b3830336625202c,0x3436732e6464610a,0x202c34396c722520\n"
".quad 0x3138202c396c7225,0x636f6c2e0a3b3239,0x2038363032203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x396c7225202c3539,0x31336c7225202c34,0x3b356c7225202c33\n"
".quad 0x3436622e6c68730a,0x202c36396c722520,0x33202c35396c7225,0x732e7268730a3b32\n"
".quad 0x37396c7225203436,0x2c36396c7225202c,0x6f6c2e0a3b323320,0x3836303220322063\n"
".quad 0x622e6c68730a3120,0x38396c7225203436,0x2c37396c7225202c,0x2e6464610a3b3220\n"
".quad 0x396c722520343673,0x33386c7225202c39,0x3b38396c7225202c,0x203220636f6c2e0a\n"
".quad 0x730a312038303132,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d39396c\n"
".quad 0x6464610a3b363133,0x6c7225203436732e,0x6c7225202c303031,0x3838323231202c39\n"
".quad 0x3220636f6c2e0a3b,0x0a31203936303220,0x732e6f6c2e64616d,0x30316c7225203436\n"
".quad 0x30316c7225202c31,0x31336c7225202c30,0x3b356c7225202c33,0x3436622e6c68730a\n"
".quad 0x2c3230316c722520,0x2c3130316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c333031,0x3b3233202c323031,0x203220636f6c2e0a,0x730a312039363032\n"
".quad 0x25203436622e6c68,0x25202c3430316c72,0x32202c3330316c72,0x36732e6464610a3b\n"
".quad 0x3530316c72252034,0x2c33386c7225202c,0x3b3430316c722520,0x203220636f6c2e0a\n"
".quad 0x730a312039303132,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3530316c\n"
".quad 0x64610a3b30323366,0x7225203436732e64,0x7225202c3630316c,0x38333631202c396c\n"
".quad 0x20636f6c2e0a3b34,0x3120303730322032,0x2e6f6c2e64616d0a,0x316c722520343673\n"
".quad 0x316c7225202c3730,0x336c7225202c3630,0x356c7225202c3331,0x36622e6c68730a3b\n"
".quad 0x3830316c72252034,0x3730316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3930316c,0x3233202c3830316c,0x3220636f6c2e0a3b,0x0a31203037303220\n"
".quad 0x203436622e6c6873,0x202c3031316c7225,0x202c3930316c7225,0x732e6464610a3b32\n"
".quad 0x31316c7225203436,0x33386c7225202c31,0x3031316c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203031313220,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3131316c72\n"
".quad 0x610a3b3632336625,0x25203436732e6464,0x25202c3231316c72,0x343032202c396c72\n"
".quad 0x636f6c2e0a3b3038,0x2031373032203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c333131,0x6c7225202c323131,0x6c7225202c333133,0x622e6c68730a3b35\n"
".quad 0x31316c7225203436,0x31316c7225202c34,0x730a3b3233202c33,0x25203436732e7268\n"
".quad 0x25202c3531316c72,0x33202c3431316c72,0x20636f6c2e0a3b32,0x3120313730322032\n"
".quad 0x3436622e6c68730a,0x2c3631316c722520,0x2c3531316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x386c7225202c3731,0x31316c7225202c33,0x20636f6c2e0a3b36\n"
".quad 0x3120313131322032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3731316c7225\n"
".quad 0x0a3b383333662520,0x203436732e646461,0x202c3831316c7225,0x3432202c396c7225\n"
".quad 0x6f6c2e0a3b363735,0x3237303220322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3931316c,0x7225202c3831316c,0x7225202c3331336c,0x2e6c68730a3b356c\n"
".quad 0x316c722520343662,0x316c7225202c3032,0x0a3b3233202c3931,0x203436732e726873\n"
".quad 0x202c3132316c7225,0x202c3032316c7225,0x636f6c2e0a3b3233,0x2032373032203220\n"
".quad 0x36622e6c68730a31,0x3232316c72252034,0x3132316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c333231,0x316c7225202c3338,0x636f6c2e0a3b3232\n"
".quad 0x2032313132203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3332316c72255b\n"
".quad 0x3b3135336625202c,0x3436732e6464610a,0x2c3432316c722520,0x32202c396c722520\n"
".quad 0x6c2e0a3b32373638,0x373032203220636f,0x2e64616d0a312033,0x25203436732e6f6c\n"
".quad 0x25202c3532316c72,0x25202c3432316c72,0x25202c3331336c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c363231,0x3b3233202c353231,0x3436732e7268730a\n"
".quad 0x2c3732316c722520,0x2c3632316c722520,0x6f6c2e0a3b323320,0x3337303220322063\n"
".quad 0x622e6c68730a3120,0x32316c7225203436,0x32316c7225202c38,0x64610a3b32202c37\n"
".quad 0x7225203436732e64,0x7225202c3932316c,0x6c7225202c33386c,0x6f6c2e0a3b383231\n"
".quad 0x3331313220322063,0x6c672e74730a3120,0x3233662e6c61626f,0x3932316c72255b20\n"
".quad 0x3136336625202c5d,0x36732e6464610a3b,0x3033316c72252034,0x202c396c7225202c\n"
".quad 0x2e0a3b3836373233,0x3032203220636f6c,0x64616d0a31203437,0x203436732e6f6c2e\n"
".quad 0x202c3133316c7225,0x202c3033316c7225,0x202c3331336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3233316c,0x3233202c3133316c,0x36732e7268730a3b\n"
".quad 0x3333316c72252034,0x3233316c7225202c,0x6c2e0a3b3233202c,0x373032203220636f\n"
".quad 0x2e6c68730a312034,0x316c722520343662,0x316c7225202c3433,0x610a3b32202c3333\n"
".quad 0x25203436732e6464,0x25202c3533316c72,0x7225202c33386c72,0x6c2e0a3b3433316c\n"
".quad 0x313132203220636f,0x672e74730a312034,0x33662e6c61626f6c,0x33316c72255b2032\n"
".quad 0x37336625202c5d35,0x732e6464610a3b30,0x33316c7225203436,0x2c396c7225202c36\n"
".quad 0x0a3b343638363320,0x32203220636f6c2e,0x616d0a3120353730,0x3436732e6f6c2e64\n"
".quad 0x2c3733316c722520,0x2c3633316c722520,0x2c3331336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3833316c72,0x33202c3733316c72,0x732e7268730a3b32\n"
".quad 0x33316c7225203436,0x33316c7225202c39,0x2e0a3b3233202c38,0x3032203220636f6c\n"
".quad 0x6c68730a31203537,0x6c7225203436622e,0x6c7225202c303431,0x0a3b32202c393331\n"
".quad 0x203436732e646461,0x202c3134316c7225,0x25202c33386c7225,0x2e0a3b3034316c72\n"
".quad 0x3132203220636f6c,0x2e74730a31203531,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x336625202c5d3134,0x2e6464610a3b3837,0x316c722520343673,0x396c7225202c3234\n"
".quad 0x3b3036393034202c,0x203220636f6c2e0a,0x6d0a312036373032,0x36732e6f6c2e6461\n"
".quad 0x3334316c72252034,0x3234316c7225202c,0x3331336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3434316c7225,0x202c3334316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3534,0x0a3b3233202c3434,0x32203220636f6c2e\n"
".quad 0x68730a3120363730,0x7225203436622e6c,0x7225202c3634316c,0x3b32202c3534316c\n"
".quad 0x3436732e6464610a,0x2c3734316c722520,0x202c33386c722520,0x0a3b3634316c7225\n"
".quad 0x32203220636f6c2e,0x74730a3120363131,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d373431,0x6464610a3b383833,0x6c7225203436732e,0x6c7225202c383431\n"
".quad 0x3635303534202c39,0x3220636f6c2e0a3b,0x0a31203737303220,0x732e6f6c2e64616d\n"
".quad 0x34316c7225203436,0x34316c7225202c39,0x31336c7225202c38,0x3b356c7225202c33\n"
".quad 0x3436622e6c68730a,0x2c3035316c722520,0x2c3934316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c313531,0x3b3233202c303531,0x203220636f6c2e0a\n"
".quad 0x730a312037373032,0x25203436622e6c68,0x25202c3235316c72,0x32202c3135316c72\n"
".quad 0x36732e6464610a3b,0x3335316c72252034,0x2c33386c7225202c,0x3b3235316c722520\n"
".quad 0x203220636f6c2e0a,0x730a312037313132,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3335316c,0x64610a3b37393366,0x7225203436732e64,0x7225202c3435316c\n"
".quad 0x35313934202c396c,0x20636f6c2e0a3b32,0x3120383730322032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3535,0x336c7225202c3435,0x356c7225202c3331\n"
".quad 0x36622e6c68730a3b,0x3635316c72252034,0x3535316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3735316c,0x3233202c3635316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203837303220,0x203436622e6c6873,0x202c3835316c7225,0x202c3735316c7225\n"
".quad 0x732e6464610a3b32,0x35316c7225203436,0x33386c7225202c39,0x3835316c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203831313220,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3935316c72,0x610a3b3730346625,0x25203436732e6464,0x25202c3036316c72\n"
".quad 0x323335202c396c72,0x636f6c2e0a3b3834,0x2039373032203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c313631,0x6c7225202c303631,0x6c7225202c333133\n"
".quad 0x622e6c68730a3b35,0x36316c7225203436,0x36316c7225202c32,0x730a3b3233202c31\n"
".quad 0x25203436732e7268,0x25202c3336316c72,0x33202c3236316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120393730322032,0x3436622e6c68730a,0x2c3436316c722520,0x2c3336316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x386c7225202c3536,0x36316c7225202c33\n"
".quad 0x20636f6c2e0a3b34,0x3120393131322032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3536316c7225,0x0a3b363134662520,0x203436732e646461,0x202c3636316c7225\n"
".quad 0x3735202c396c7225,0x6f6c2e0a3b343433,0x3038303220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3736316c,0x7225202c3636316c,0x7225202c3331336c\n"
".quad 0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3836,0x0a3b3233202c3736\n"
".quad 0x203436732e726873,0x202c3936316c7225,0x202c3836316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2030383032203220,0x36622e6c68730a31,0x3037316c72252034,0x3936316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c313731,0x316c7225202c3338\n"
".quad 0x636f6c2e0a3b3037,0x2030323132203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x5d3137316c72255b,0x3b3232346625202c,0x3436732e6464610a,0x2c3237316c722520\n"
".quad 0x36202c396c722520,0x6c2e0a3b30343431,0x383032203220636f,0x2e64616d0a312031\n"
".quad 0x25203436732e6f6c,0x25202c3337316c72,0x25202c3237316c72,0x25202c3331336c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c343731,0x3b3233202c333731\n"
".quad 0x3436732e7268730a,0x2c3537316c722520,0x2c3437316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3138303220322063,0x622e6c68730a3120,0x37316c7225203436,0x37316c7225202c36\n"
".quad 0x64610a3b32202c35,0x7225203436732e64,0x7225202c3737316c,0x6c7225202c33386c\n"
".quad 0x6f6c2e0a3b363731,0x3132313220322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3737316c72255b20,0x3233346625202c5d,0x36732e6464610a3b,0x3837316c72252034\n"
".quad 0x202c396c7225202c,0x2e0a3b3633353536,0x3032203220636f6c,0x64616d0a31203238\n"
".quad 0x203436732e6f6c2e,0x202c3937316c7225,0x202c3837316c7225,0x202c3331336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3038316c,0x3233202c3937316c\n"
".quad 0x36732e7268730a3b,0x3138316c72252034,0x3038316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x383032203220636f,0x2e6c68730a312032,0x316c722520343662,0x316c7225202c3238\n"
".quad 0x610a3b32202c3138,0x25203436732e6464,0x25202c3338316c72,0x7225202c33386c72\n"
".quad 0x6c2e0a3b3238316c,0x323132203220636f,0x672e74730a312032,0x33662e6c61626f6c\n"
".quad 0x38316c72255b2032,0x33346625202c5d33,0x732e6464610a3b39,0x38316c7225203436\n"
".quad 0x2c396c7225202c34,0x0a3b323336393620,0x32203220636f6c2e,0x616d0a3120333830\n"
".quad 0x3436732e6f6c2e64,0x2c3538316c722520,0x2c3438316c722520,0x2c3331336c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3638316c72,0x33202c3538316c72\n"
".quad 0x732e7268730a3b32,0x38316c7225203436,0x38316c7225202c37,0x2e0a3b3233202c36\n"
".quad 0x3032203220636f6c,0x6c68730a31203338,0x6c7225203436622e,0x6c7225202c383831\n"
".quad 0x0a3b32202c373831,0x203436732e646461,0x202c3938316c7225,0x25202c33386c7225\n"
".quad 0x2e0a3b3838316c72,0x3132203220636f6c,0x2e74730a31203332,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x346625202c5d3938,0x2e6464610a3b3834,0x316c722520343673\n"
".quad 0x396c7225202c3039,0x3b3832373337202c,0x203220636f6c2e0a,0x6d0a312034383032\n"
".quad 0x36732e6f6c2e6461,0x3139316c72252034,0x3039316c7225202c,0x3331336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3239316c7225,0x202c3139316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3339,0x0a3b3233202c3239\n"
".quad 0x32203220636f6c2e,0x68730a3120343830,0x7225203436622e6c,0x7225202c3439316c\n"
".quad 0x3b32202c3339316c,0x3436732e6464610a,0x2c3539316c722520,0x202c33386c722520\n"
".quad 0x0a3b3439316c7225,0x32203220636f6c2e,0x74730a3120343231,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d353931,0x6f6c2e0a3b353534,0x3732313220322063\n"
".quad 0x0a3b7465720a3220,0x3a355f393142420a,0x3436732e6464610a,0x2c3839316c722520\n"
".quad 0x25202c366c722520,0x6464610a3b376c72,0x6c7225203436732e,0x6c7225202c393931\n"
".quad 0x393034202c383931,0x61702e646c0a3b36,0x203436752e6d6172,0x202c3231336c7225\n"
".quad 0x5f524c32315a5f5b,0x4342416279685f64,0x5f6d665f53665044,0x5d335f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x0a31203736303220,0x732e6f6c2e64616d,0x30326c7225203436\n"
".quad 0x39316c7225202c31,0x31336c7225202c39,0x3b356c7225202c32,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3031336c,0x5f645f524c32315a,0x5044434241627968\n"
".quad 0x61705f6d665f5366,0x0a3b5d315f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67\n"
".quad 0x30326c7225203436,0x31336c7225202c32,0x622e6c68730a3b30,0x30326c7225203436\n"
".quad 0x30326c7225202c33,0x730a3b3233202c31,0x25203436732e7268,0x25202c3430326c72\n"
".quad 0x33202c3330326c72,0x20636f6c2e0a3b32,0x3120373630322032,0x3436622e6c68730a\n"
".quad 0x2c3530326c722520,0x2c3430326c722520,0x2e6464610a3b3220,0x326c722520343673\n"
".quad 0x326c7225202c3630,0x326c7225202c3230,0x672e74730a3b3530,0x33662e6c61626f6c\n"
".quad 0x30326c72255b2032,0x31346625202c5d36,0x36732e6464610a3b,0x3730326c72252034\n"
".quad 0x3839316c7225202c,0x0a3b32393138202c,0x32203220636f6c2e,0x616d0a3120383630\n"
".quad 0x3436732e6f6c2e64,0x2c3830326c722520,0x2c3730326c722520,0x2c3231336c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3930326c72,0x33202c3830326c72\n"
".quad 0x732e7268730a3b32,0x31326c7225203436,0x30326c7225202c30,0x2e0a3b3233202c39\n"
".quad 0x3032203220636f6c,0x6c68730a31203836,0x6c7225203436622e,0x6c7225202c313132\n"
".quad 0x0a3b32202c303132,0x203436732e646461,0x202c3231326c7225,0x202c3230326c7225\n"
".quad 0x0a3b3131326c7225,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3231326c72\n"
".quad 0x6464610a3b356625,0x6c7225203436732e,0x6c7225202c333132,0x323231202c383931\n"
".quad 0x636f6c2e0a3b3838,0x2039363032203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c343132,0x6c7225202c333132,0x6c7225202c323133,0x622e6c68730a3b35\n"
".quad 0x31326c7225203436,0x31326c7225202c35,0x730a3b3233202c34,0x25203436732e7268\n"
".quad 0x25202c3631326c72,0x33202c3531326c72,0x20636f6c2e0a3b32,0x3120393630322032\n"
".quad 0x3436622e6c68730a,0x2c3731326c722520,0x2c3631326c722520,0x2e6464610a3b3220\n"
".quad 0x326c722520343673,0x326c7225202c3831,0x326c7225202c3230,0x672e74730a3b3731\n"
".quad 0x33662e6c61626f6c,0x31326c72255b2032,0x35336625202c5d38,0x36732e6464610a3b\n"
".quad 0x3931326c72252034,0x3839316c7225202c,0x3b3438333631202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312030373032,0x36732e6f6c2e6461,0x3032326c72252034,0x3931326c7225202c\n"
".quad 0x3231336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3132326c7225\n"
".quad 0x202c3032326c7225,0x2e7268730a3b3233,0x326c722520343673,0x326c7225202c3232\n"
".quad 0x0a3b3233202c3132,0x32203220636f6c2e,0x68730a3120303730,0x7225203436622e6c\n"
".quad 0x7225202c3332326c,0x3b32202c3232326c,0x3436732e6464610a,0x2c3432326c722520\n"
".quad 0x2c3230326c722520,0x3b3332326c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3432326c7225,0x64610a3b34662520,0x7225203436732e64,0x7225202c3532326c\n"
".quad 0x3032202c3839316c,0x6f6c2e0a3b303834,0x3137303220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3632326c,0x7225202c3532326c,0x7225202c3231336c\n"
".quad 0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3732,0x0a3b3233202c3632\n"
".quad 0x203436732e726873,0x202c3832326c7225,0x202c3732326c7225,0x636f6c2e0a3b3233\n"
".quad 0x2031373032203220,0x36622e6c68730a31,0x3932326c72252034,0x3832326c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c303332,0x6c7225202c323032\n"
".quad 0x2e74730a3b393232,0x662e6c61626f6c67,0x326c72255b203233,0x356625202c5d3033\n"
".quad 0x732e6464610a3b39,0x33326c7225203436,0x39316c7225202c31,0x3637353432202c38\n"
".quad 0x3220636f6c2e0a3b,0x0a31203237303220,0x732e6f6c2e64616d,0x33326c7225203436\n"
".quad 0x33326c7225202c32,0x31336c7225202c31,0x3b356c7225202c32,0x3436622e6c68730a\n"
".quad 0x2c3333326c722520,0x2c3233326c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c343332,0x3b3233202c333332,0x203220636f6c2e0a,0x730a312032373032\n"
".quad 0x25203436622e6c68,0x25202c3533326c72,0x32202c3433326c72,0x36732e6464610a3b\n"
".quad 0x3633326c72252034,0x3230326c7225202c,0x3533326c7225202c,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x5d3633326c72255b,0x0a3b35366625202c,0x203436732e646461\n"
".quad 0x202c3733326c7225,0x202c3839316c7225,0x2e0a3b3237363832,0x3032203220636f6c\n"
".quad 0x64616d0a31203337,0x203436732e6f6c2e,0x202c3833326c7225,0x202c3733326c7225\n"
".quad 0x202c3231336c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3933326c\n"
".quad 0x3233202c3833326c,0x36732e7268730a3b,0x3034326c72252034,0x3933326c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x373032203220636f,0x2e6c68730a312033,0x326c722520343662\n"
".quad 0x326c7225202c3134,0x610a3b32202c3034,0x25203436732e6464,0x25202c3234326c72\n"
".quad 0x25202c3230326c72,0x730a3b3134326c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3234326c,0x6464610a3b373466,0x6c7225203436732e,0x6c7225202c333432\n"
".quad 0x373233202c383931,0x636f6c2e0a3b3836,0x2034373032203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c343432,0x6c7225202c333432,0x6c7225202c323133\n"
".quad 0x622e6c68730a3b35,0x34326c7225203436,0x34326c7225202c35,0x730a3b3233202c34\n"
".quad 0x25203436732e7268,0x25202c3634326c72,0x33202c3534326c72,0x20636f6c2e0a3b32\n"
".quad 0x3120343730322032,0x3436622e6c68730a,0x2c3734326c722520,0x2c3634326c722520\n"
".quad 0x2e6464610a3b3220,0x326c722520343673,0x326c7225202c3834,0x326c7225202c3230\n"
".quad 0x672e74730a3b3734,0x33662e6c61626f6c,0x34326c72255b2032,0x33356625202c5d38\n"
".quad 0x36732e6464610a3b,0x3934326c72252034,0x3839316c7225202c,0x3b3436383633202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312035373032,0x36732e6f6c2e6461,0x3035326c72252034\n"
".quad 0x3934326c7225202c,0x3231336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3135326c7225,0x202c3035326c7225,0x2e7268730a3b3233,0x326c722520343673\n"
".quad 0x326c7225202c3235,0x0a3b3233202c3135,0x32203220636f6c2e,0x68730a3120353730\n"
".quad 0x7225203436622e6c,0x7225202c3335326c,0x3b32202c3235326c,0x3436732e6464610a\n"
".quad 0x2c3435326c722520,0x2c3230326c722520,0x3b3335326c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3435326c7225,0x64610a3b39662520,0x7225203436732e64\n"
".quad 0x7225202c3535326c,0x3034202c3839316c,0x6f6c2e0a3b303639,0x3637303220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3635326c,0x7225202c3535326c\n"
".quad 0x7225202c3231336c,0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3735\n"
".quad 0x0a3b3233202c3635,0x203436732e726873,0x202c3835326c7225,0x202c3735326c7225\n"
".quad 0x636f6c2e0a3b3233,0x2036373032203220,0x36622e6c68730a31,0x3935326c72252034\n"
".quad 0x3835326c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c303632\n"
".quad 0x6c7225202c323032,0x2e74730a3b393532,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x376625202c5d3036,0x732e6464610a3b37,0x36326c7225203436,0x39316c7225202c31\n"
".quad 0x3635303534202c38,0x3220636f6c2e0a3b,0x0a31203737303220,0x732e6f6c2e64616d\n"
".quad 0x36326c7225203436,0x36326c7225202c32,0x31336c7225202c31,0x3b356c7225202c32\n"
".quad 0x3436622e6c68730a,0x2c3336326c722520,0x2c3236326c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c343632,0x3b3233202c333632,0x203220636f6c2e0a\n"
".quad 0x730a312037373032,0x25203436622e6c68,0x25202c3536326c72,0x32202c3436326c72\n"
".quad 0x36732e6464610a3b,0x3636326c72252034,0x3230326c7225202c,0x3536326c7225202c\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3636326c72255b,0x3b3735346625202c\n"
".quad 0x3436732e6464610a,0x2c3736326c722520,0x2c3839316c722520,0x0a3b323531393420\n"
".quad 0x32203220636f6c2e,0x616d0a3120383730,0x3436732e6f6c2e64,0x2c3836326c722520\n"
".quad 0x2c3736326c722520,0x2c3231336c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3936326c72,0x33202c3836326c72,0x732e7268730a3b32,0x37326c7225203436\n"
".quad 0x36326c7225202c30,0x2e0a3b3233202c39,0x3032203220636f6c,0x6c68730a31203837\n"
".quad 0x6c7225203436622e,0x6c7225202c313732,0x0a3b32202c303732,0x203436732e646461\n"
".quad 0x202c3237326c7225,0x202c3230326c7225,0x0a3b3137326c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3237326c72,0x64610a3b31376625,0x7225203436732e64\n"
".quad 0x7225202c3337326c,0x3335202c3839316c,0x6f6c2e0a3b383432,0x3937303220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3437326c,0x7225202c3337326c\n"
".quad 0x7225202c3231336c,0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3537\n"
".quad 0x0a3b3233202c3437,0x203436732e726873,0x202c3637326c7225,0x202c3537326c7225\n"
".quad 0x636f6c2e0a3b3233,0x2039373032203220,0x36622e6c68730a31,0x3737326c72252034\n"
".quad 0x3637326c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c383732\n"
".quad 0x6c7225202c323032,0x2e74730a3b373732,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x316625202c5d3837,0x732e6464610a3b30,0x37326c7225203436,0x39316c7225202c39\n"
".quad 0x3434333735202c38,0x3220636f6c2e0a3b,0x0a31203038303220,0x732e6f6c2e64616d\n"
".quad 0x38326c7225203436,0x37326c7225202c30,0x31336c7225202c39,0x3b356c7225202c32\n"
".quad 0x3436622e6c68730a,0x2c3138326c722520,0x2c3038326c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c323832,0x3b3233202c313832,0x203220636f6c2e0a\n"
".quad 0x730a312030383032,0x25203436622e6c68,0x25202c3338326c72,0x32202c3238326c72\n"
".quad 0x36732e6464610a3b,0x3438326c72252034,0x3230326c7225202c,0x3338326c7225202c\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3438326c72255b,0x610a3b366625202c\n"
".quad 0x25203436732e6464,0x25202c3538326c72,0x36202c3839316c72,0x6c2e0a3b30343431\n"
".quad 0x383032203220636f,0x2e64616d0a312031,0x25203436732e6f6c,0x25202c3638326c72\n"
".quad 0x25202c3538326c72,0x25202c3231336c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c373832,0x3b3233202c363832,0x3436732e7268730a,0x2c3838326c722520\n"
".quad 0x2c3738326c722520,0x6f6c2e0a3b323320,0x3138303220322063,0x622e6c68730a3120\n"
".quad 0x38326c7225203436,0x38326c7225202c39,0x64610a3b32202c38,0x7225203436732e64\n"
".quad 0x7225202c3039326c,0x7225202c3230326c,0x74730a3b3938326c,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d303932,0x2e6464610a3b3938,0x326c722520343673\n"
".quad 0x316c7225202c3139,0x33353536202c3839,0x20636f6c2e0a3b36,0x3120323830322032\n"
".quad 0x2e6f6c2e64616d0a,0x326c722520343673,0x326c7225202c3239,0x336c7225202c3139\n"
".quad 0x356c7225202c3231,0x36622e6c68730a3b,0x3339326c72252034,0x3239326c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3439326c,0x3233202c3339326c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203238303220,0x203436622e6c6873,0x202c3539326c7225\n"
".quad 0x202c3439326c7225,0x732e6464610a3b32,0x39326c7225203436,0x30326c7225202c36\n"
".quad 0x39326c7225202c32,0x6c672e74730a3b35,0x3233662e6c61626f,0x3639326c72255b20\n"
".quad 0x0a3b386625202c5d,0x203436732e646461,0x202c3739326c7225,0x202c3839316c7225\n"
".quad 0x2e0a3b3233363936,0x3032203220636f6c,0x64616d0a31203338,0x203436732e6f6c2e\n"
".quad 0x202c3839326c7225,0x202c3739326c7225,0x202c3231336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3939326c,0x3233202c3839326c,0x36732e7268730a3b\n"
".quad 0x3030336c72252034,0x3939326c7225202c,0x6c2e0a3b3233202c,0x383032203220636f\n"
".quad 0x2e6c68730a312033,0x336c722520343662,0x336c7225202c3130,0x610a3b32202c3030\n"
".quad 0x25203436732e6464,0x25202c3230336c72,0x25202c3230326c72,0x730a3b3130336c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3230336c,0x6464610a3b333866\n"
".quad 0x6c7225203436732e,0x6c7225202c333033,0x373337202c383931,0x636f6c2e0a3b3832\n"
".quad 0x2034383032203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c343033\n"
".quad 0x6c7225202c333033,0x6c7225202c323133,0x622e6c68730a3b35,0x30336c7225203436\n"
".quad 0x30336c7225202c35,0x730a3b3233202c34,0x25203436732e7268,0x25202c3630336c72\n"
".quad 0x33202c3530336c72,0x20636f6c2e0a3b32,0x3120343830322032,0x3436622e6c68730a\n"
".quad 0x2c3730336c722520,0x2c3630336c722520,0x2e6464610a3b3220,0x336c722520343673\n"
".quad 0x326c7225202c3830,0x336c7225202c3230,0x672e74730a3b3730,0x33662e6c61626f6c\n"
".quad 0x30336c72255b2032,0x3b376625202c5d38,0x365f393142420a0a,0x3220636f6c2e0a3a\n"
".quad 0x0a32203732313220,0x0a0a7d0a3b746572,0x5f207972746e652e,0x5f645f524c33315a\n"
".quad 0x3244434241627968,0x28696d665f536650,0x206d617261702e0a,0x315a5f203436752e\n"
".quad 0x79685f645f524c33,0x6650324443424162,0x61705f696d665f53,0x2e0a2c305f6d6172\n"
".quad 0x752e206d61726170,0x4c33315a5f203436,0x416279685f645f52,0x5f53665032444342\n"
".quad 0x617261705f696d66,0x61702e0a2c315f6d,0x3233662e206d6172,0x5f524c33315a5f20\n"
".quad 0x4342416279685f64,0x6d665f5366503244,0x5f6d617261705f69,0x617261702e0a2c32\n"
".quad 0x5f203436752e206d,0x5f645f524c33315a,0x3244434241627968,0x5f696d665f536650\n"
".quad 0x2c335f6d61726170,0x206d617261702e0a,0x315a5f203233752e,0x79685f645f524c33\n"
".quad 0x6650324443424162,0x61705f696d665f53,0x0a290a345f6d6172,0x2e206765722e0a7b\n"
".quad 0x343c662520323366,0x65722e0a3b3e3835,0x20646572702e2067,0x0a3b3e34313c7025\n"
".quad 0x33732e206765722e,0x3932313c72252032,0x206765722e0a3b3e,0x6c7225203436732e\n"
".quad 0x0a0a3b3e3631333c,0x617261702e646c0a,0x7225203436752e6d,0x315a5f5b202c316c\n"
".quad 0x79685f645f524c33,0x6650324443424162,0x61705f696d665f53,0x0a3b5d305f6d6172\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x33315a5f5b202c33,0x6279685f645f524c\n"
".quad 0x5366503244434241,0x7261705f696d665f,0x6c0a3b5d335f6d61,0x2e6d617261702e64\n"
".quad 0x2c36722520323375,0x524c33315a5f5b20,0x42416279685f645f,0x665f536650324443\n"
".quad 0x6d617261705f696d,0x7476630a3b5d345f,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x7225202c346c7225,0x636f6c2e0a3b316c,0x2031333132203220,0x33752e766f6d0a31\n"
".quad 0x25202c3772252032,0x0a3b782e6469746e,0x203233752e766f6d,0x746325202c387225\n"
".quad 0x6d0a3b782e646961,0x25203233752e766f,0x64697425202c3272,0x2e64616d0a3b782e\n"
".quad 0x25203233732e6f6c,0x2c377225202c3972,0x7225202c38722520,0x20636f6c2e0a3b32\n"
".quad 0x3120323331322032,0x3233752e766f6d0a,0x25202c3031722520,0x0a3b792e6469746e\n"
".quad 0x203233752e766f6d,0x6325202c31317225,0x0a3b792e64696174,0x203233752e766f6d\n"
".quad 0x7425202c32317225,0x616d0a3b792e6469,0x3233732e6f6c2e64,0x7225202c33722520\n"
".quad 0x31317225202c3031,0x0a3b32317225202c,0x32203220636f6c2e,0x6f6d0a3120333331\n"
".quad 0x7225203233752e76,0x69746e25202c3331,0x766f6d0a3b7a2e64,0x317225203233752e\n"
".quad 0x6961746325202c34,0x766f6d0a3b7a2e64,0x317225203233752e,0x2e64697425202c35\n"
".quad 0x6c2e64616d0a3b7a,0x7225203233732e6f,0x2c33317225202c34,0x25202c3431722520\n"
".quad 0x6f6c2e0a3b353172,0x3433313220322063,0x722e7476630a3120,0x33732e3233662e6e\n"
".quad 0x202c333266252032,0x616d660a3b397225,0x203233662e6e722e,0x6625202c34326625\n"
".quad 0x46336630202c3332,0x202c303030303030,0x3030433731346630,0x636f6c2e0a3b3030\n"
".quad 0x2035333132203220,0x6e722e7476630a31,0x3233732e3233662e,0x7225202c32662520\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x2c326625202c3532,0x3030304633663020\n"
".quad 0x346630202c303030,0x3b30303030433731,0x203220636f6c2e0a,0x630a312036333132\n"
".quad 0x33662e6e722e7476,0x6625203233732e32,0x3b347225202c3632,0x2e6e722e616d660a\n"
".quad 0x3732662520323366,0x202c36326625202c,0x3030303046336630,0x31346630202c3030\n"
".quad 0x0a3b303030304337,0x2e3436752e747663,0x356c722520323375,0x2e0a3b397225202c\n"
".quad 0x3132203220636f6c,0x7476630a31203733,0x3233732e3436732e,0x25202c366c722520\n"
".quad 0x2e6c68730a3b3372,0x2c35722520323362,0x3b36202c34722520,0x203220636f6c2e0a\n"
".quad 0x630a312037333132,0x732e3436732e7476,0x2c376c7225203233,0x64610a3b35722520\n"
".quad 0x7225203436732e64,0x376c7225202c396c,0x0a3b366c7225202c,0x32203220636f6c2e\n"
".quad 0x616d0a3120373331,0x3436732e6f6c2e64,0x25202c386c722520,0x6c7225202c396c72\n"
".quad 0x3b356c7225202c33,0x3233662e6464610a,0x25202c3832662520,0x436630202c343266\n"
".quad 0x3b30303030453732,0x3233662e6464610a,0x25202c3932662520,0x436630202c353266\n"
".quad 0x3b30303030434631,0x203220636f6c2e0a,0x6c756d0a31203037,0x336625203233662e\n"
".quad 0x2c39326625202c30,0x660a3b3932662520,0x33662e6e722e616d,0x202c313366252032\n"
".quad 0x6625202c38326625,0x30336625202c3832,0x33662e6464610a3b,0x202c323366252032\n"
".quad 0x6630202c37326625,0x3030303043463143,0x3220636f6c2e0a3b,0x6d660a3120303720\n"
".quad 0x3233662e6e722e61,0x25202c3333662520,0x336625202c323366,0x3b31336625202c32\n"
".quad 0x746c2e707465730a,0x317025203233662e,0x202c33336625202c,0x3030303831346630\n"
".quad 0x636f6c2e0a3b3030,0x2030343132203220,0x6c2e707465730a31,0x7025203233732e74\n"
".quad 0x202c397225202c32,0x766f6d0a3b367225,0x317225203233752e,0x2e0a3b3336202c36\n"
".quad 0x3132203220636f6c,0x6275730a31203034,0x317225203233732e,0x2c36317225202c37\n"
".quad 0x65730a3b36722520,0x33732e74672e7074,0x25202c3370252032,0x37317225202c3972\n"
".quad 0x6572702e726f0a3b,0x25202c3470252064,0x3b337025202c3270,0x203220636f6c2e0a\n"
".quad 0x730a312030343132,0x732e746c2e707465,0x202c357025203233,0x367225202c337225\n"
".quad 0x6572702e726f0a3b,0x25202c3670252064,0x3b357025202c3470,0x203220636f6c2e0a\n"
".quad 0x730a312030343132,0x732e74672e707465,0x202c377025203233,0x317225202c337225\n"
".quad 0x72702e726f0a3b37,0x202c387025206465,0x377025202c367025,0x3220636f6c2e0a3b\n"
".quad 0x0a31203034313220,0x2e746c2e70746573,0x2c39702520323373,0x7225202c34722520\n"
".quad 0x72702e726f0a3b36,0x2c30317025206465,0x7025202c38702520,0x20636f6c2e0a3b39\n"
".quad 0x3120303431322032,0x74672e707465730a,0x317025203233732e,0x202c347225202c31\n"
".quad 0x726f0a3b37317225,0x702520646572702e,0x30317025202c3231,0x0a3b31317025202c\n"
".quad 0x32203220636f6c2e,0x25400a3120303431,0x2061726220323170,0x0a3b365f30324242\n"
".quad 0x3436622e6c68730a,0x202c30316c722520,0x3233202c386c7225,0x36732e7268730a3b\n"
".quad 0x2c31316c72252034,0x202c30316c722520,0x636f6c2e0a3b3233,0x2035343132203220\n"
".quad 0x36622e6c68730a31,0x2c32316c72252034,0x202c31316c722520,0x732e6464610a3b32\n"
".quad 0x33316c7225203436,0x202c346c7225202c,0x6c0a3b32316c7225,0x6c61626f6c672e64\n"
".quad 0x336625203233662e,0x33316c72255b202c,0x732e6464610a3b5d,0x2c39317225203233\n"
".quad 0x312d202c33722520,0x3220636f6c2e0a3b,0x0a31203634313220,0x2e3436732e747663\n"
".quad 0x316c722520323373,0x3b39317225202c34,0x3436732e6464610a,0x202c35316c722520\n"
".quad 0x25202c34316c7225,0x6464610a3b376c72,0x6c7225203436732e,0x316c7225202c3631\n"
".quad 0x3b32393138202c35,0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3531336c\n"
".quad 0x5f645f524c33315a,0x3244434241627968,0x5f696d665f536650,0x5d335f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x0a31203634313220,0x732e6f6c2e64616d,0x37316c7225203436\n"
".quad 0x2c36316c7225202c,0x2c3531336c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x7225202c38316c72,0x3b3233202c37316c,0x3436732e7268730a,0x202c39316c722520\n"
".quad 0x33202c38316c7225,0x20636f6c2e0a3b32,0x3120363431322032,0x3436622e6c68730a\n"
".quad 0x202c30326c722520,0x32202c39316c7225,0x36732e6464610a3b,0x2c31326c72252034\n"
".quad 0x25202c346c722520,0x646c0a3b30326c72,0x2e6c61626f6c672e,0x2c34662520323366\n"
".quad 0x5d31326c72255b20,0x3220636f6c2e0a3b,0x0a31203734313220,0x203233732e646461\n"
".quad 0x7225202c31327225,0x76630a3b31202c33,0x33732e3436732e74,0x2c32326c72252032\n"
".quad 0x610a3b3132722520,0x25203436732e6464,0x7225202c33326c72,0x6c7225202c32326c\n"
".quad 0x732e6464610a3b37,0x34326c7225203436,0x2c33326c7225202c,0x0a3b343833363120\n"
".quad 0x32203220636f6c2e,0x616d0a3120373431,0x3436732e6f6c2e64,0x202c35326c722520\n"
".quad 0x25202c34326c7225,0x25202c3531336c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x326c7225202c3632,0x730a3b3233202c35,0x25203436732e7268,0x7225202c37326c72\n"
".quad 0x3b3233202c36326c,0x203220636f6c2e0a,0x730a312037343132,0x25203436622e6c68\n"
".quad 0x7225202c38326c72,0x0a3b32202c37326c,0x203436732e646461,0x25202c39326c7225\n"
".quad 0x6c7225202c346c72,0x672e646c0a3b3832,0x33662e6c61626f6c,0x5b202c3566252032\n"
".quad 0x0a3b5d39326c7225,0x203233732e646461,0x7225202c33327225,0x0a3b34362d202c35\n"
".quad 0x32203220636f6c2e,0x76630a3120383431,0x33732e3436732e74,0x2c30336c72252032\n"
".quad 0x610a3b3332722520,0x25203436732e6464,0x7225202c31336c72,0x336c7225202c366c\n"
".quad 0x732e6464610a3b30,0x32336c7225203436,0x2c31336c7225202c,0x0a3b343638363320\n"
".quad 0x32203220636f6c2e,0x616d0a3120383431,0x3436732e6f6c2e64,0x202c33336c722520\n"
".quad 0x25202c32336c7225,0x25202c3531336c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x336c7225202c3433,0x730a3b3233202c33,0x25203436732e7268,0x7225202c35336c72\n"
".quad 0x3b3233202c34336c,0x203220636f6c2e0a,0x730a312038343132,0x25203436622e6c68\n"
".quad 0x7225202c36336c72,0x0a3b32202c35336c,0x203436732e646461,0x25202c37336c7225\n"
".quad 0x6c7225202c346c72,0x672e646c0a3b3633,0x33662e6c61626f6c,0x5b202c3666252032\n"
".quad 0x0a3b5d37336c7225,0x203436732e646461,0x25202c38336c7225,0x7225202c34316c72\n"
".quad 0x6464610a3b30336c,0x6c7225203436732e,0x336c7225202c3933,0x3635303534202c38\n"
".quad 0x3220636f6c2e0a3b,0x0a31203934313220,0x732e6f6c2e64616d,0x30346c7225203436\n"
".quad 0x2c39336c7225202c,0x2c3531336c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x7225202c31346c72,0x3b3233202c30346c,0x3436732e7268730a,0x202c32346c722520\n"
".quad 0x33202c31346c7225,0x20636f6c2e0a3b32,0x3120393431322032,0x3436622e6c68730a\n"
".quad 0x202c33346c722520,0x32202c32346c7225,0x36732e6464610a3b,0x2c34346c72252034\n"
".quad 0x25202c346c722520,0x646c0a3b33346c72,0x2e6c61626f6c672e,0x2c37662520323366\n"
".quad 0x5d34346c72255b20,0x36732e6464610a3b,0x2c35346c72252034,0x202c32326c722520\n"
".quad 0x610a3b30336c7225,0x25203436732e6464,0x7225202c36346c72,0x323335202c35346c\n"
".quad 0x636f6c2e0a3b3834,0x2030353132203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x346c7225202c3734,0x31336c7225202c36,0x3b356c7225202c35,0x3436622e6c68730a\n"
".quad 0x202c38346c722520,0x33202c37346c7225,0x732e7268730a3b32,0x39346c7225203436\n"
".quad 0x2c38346c7225202c,0x6f6c2e0a3b323320,0x3035313220322063,0x622e6c68730a3120\n"
".quad 0x30356c7225203436,0x2c39346c7225202c,0x2e6464610a3b3220,0x356c722520343673\n"
".quad 0x2c346c7225202c31,0x0a3b30356c722520,0x61626f6c672e646c,0x6625203233662e6c\n"
".quad 0x356c72255b202c38,0x2e6464610a3b5d31,0x3732722520323373,0x36202c357225202c\n"
".quad 0x20636f6c2e0a3b34,0x3120313531322032,0x3436732e7476630a,0x6c7225203233732e\n"
".quad 0x37327225202c3235,0x36732e6464610a3b,0x2c33356c72252034,0x25202c366c722520\n"
".quad 0x64610a3b32356c72,0x7225203436732e64,0x6c7225202c34356c,0x34333735202c3335\n"
".quad 0x20636f6c2e0a3b34,0x3120313531322032,0x2e6f6c2e64616d0a,0x356c722520343673\n"
".quad 0x34356c7225202c35,0x3531336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x25202c36356c7225,0x3233202c35356c72,0x36732e7268730a3b,0x2c37356c72252034\n"
".quad 0x202c36356c722520,0x636f6c2e0a3b3233,0x2031353132203220,0x36622e6c68730a31\n"
".quad 0x2c38356c72252034,0x202c37356c722520,0x732e6464610a3b32,0x39356c7225203436\n"
".quad 0x202c346c7225202c,0x6c0a3b38356c7225,0x6c61626f6c672e64,0x396625203233662e\n"
".quad 0x39356c72255b202c,0x732e6464610a3b5d,0x30366c7225203436,0x2c34316c7225202c\n"
".quad 0x0a3b32356c722520,0x203436732e646461,0x25202c31366c7225,0x3536202c30366c72\n"
".quad 0x6f6c2e0a3b363335,0x3235313220322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c32366c,0x336c7225202c3136,0x356c7225202c3531,0x36622e6c68730a3b\n"
".quad 0x2c33366c72252034,0x202c32366c722520,0x2e7268730a3b3233,0x366c722520343673\n"
".quad 0x33366c7225202c34,0x6c2e0a3b3233202c,0x353132203220636f,0x2e6c68730a312032\n"
".quad 0x366c722520343662,0x34366c7225202c35,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x346c7225202c3636,0x3b35366c7225202c,0x626f6c672e646c0a,0x25203233662e6c61\n"
".quad 0x72255b202c303166,0x6c2e0a3b5d36366c,0x353132203220636f,0x707465730a312033\n"
".quad 0x203233732e71652e,0x7225202c33317025,0x400a3b3336202c34,0x6172622033317025\n"
".quad 0x3b335f3032424220,0x3220636f6c2e0a0a,0x0a31203734313220,0x2e3436752e747663\n"
".quad 0x366c722520323375,0x3b31327225202c37,0x203220636f6c2e0a,0x630a312031353132\n"
".quad 0x752e3436752e7476,0x38366c7225203233,0x0a3b37327225202c,0x203436732e646461\n"
".quad 0x25202c39366c7225,0x7225202c37366c72,0x6464610a3b38366c,0x6c7225203436732e\n"
".quad 0x366c7225202c3037,0x3832373337202c39,0x36752e7476630a3b,0x7225203233752e34\n"
".quad 0x397225202c31376c,0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3431336c72\n"
".quad 0x645f524c33315a5f,0x444342416279685f,0x696d665f53665032,0x335f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x3120343531322032,0x2e6f6c2e64616d0a,0x376c722520343673\n"
".quad 0x30376c7225202c32,0x3431336c7225202c,0x3b31376c7225202c,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3930336c,0x5f645f524c33315a,0x3244434241627968\n"
".quad 0x5f696d665f536650,0x5d305f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f\n"
".quad 0x6c7225203436752e,0x336c7225202c3337,0x2e6c68730a3b3930,0x376c722520343662\n"
".quad 0x32376c7225202c34,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c35376c\n"
".quad 0x0a3b3233202c3437,0x32203220636f6c2e,0x68730a3120343531,0x7225203436622e6c\n"
".quad 0x6c7225202c36376c,0x610a3b32202c3537,0x25203436732e6464,0x7225202c37376c72\n"
".quad 0x6c7225202c33376c,0x672e646c0a3b3637,0x33662e6c61626f6c,0x2c37353466252032\n"
".quad 0x5d37376c72255b20,0x5f303242420a0a3b,0x732e6464610a3a33,0x2c30357225203233\n"
".quad 0x312d202c39722520,0x3220636f6c2e0a3b,0x0a31203635313220,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x357225202c353966,0x662e6464610a3b30,0x2c37386625203233\n"
".quad 0x30202c3539662520,0x3030303030463366,0x722e7476630a3b30,0x33732e3233662e6e\n"
".quad 0x202c363966252032,0x6464610a3b357225,0x396625203233662e,0x202c326625202c37\n"
".quad 0x3030303046336630,0x2e6464610a3b3030,0x3634662520323366,0x202c37396625202c\n"
".quad 0x6f6d0a3b36396625,0x7225203233752e76,0x0a0a3b30202c3635,0x2e64322e78657409\n"
".quad 0x662e3233662e3476,0x353366257b203233,0x202c36336625202c,0x6625202c37336625\n"
".quad 0x65745b202c7d3833,0x4331665f66655278,0x2c373866257b202c,0x3b5d7d3634662520\n"
".quad 0x20636f6c2e090a0a,0x3120373531322032,0x3233732e6464610a,0x25202c3735722520\n"
".quad 0x630a3b31202c3972,0x33662e6e722e7476,0x6625203233732e32,0x37357225202c3839\n"
".quad 0x33662e6464610a3b,0x202c333966252032,0x6630202c38396625,0x3030303030304633\n"
".quad 0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32,0x346625202c313466\n"
".quad 0x2c33346625202c32,0x202c7d3434662520,0x5f6665527865745b,0x66257b202c433366\n"
".quad 0x36346625202c3339,0x6c2e090a0a3b5d7d,0x353132203220636f,0x2e7476630a312038\n"
".quad 0x732e3233662e6e72,0x2c39396625203233,0x610a3b3931722520,0x25203233662e6464\n"
".quad 0x6625202c30303166,0x46336630202c3939,0x0a3b303030303030,0x203233662e646461\n"
".quad 0x6625202c38356625,0x396625202c303031,0x786574090a0a3b36,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x6625202c37346625,0x39346625202c3834,0x2c7d30356625202c\n"
".quad 0x6665527865745b20,0x257b202c4335665f,0x356625202c373866,0x0a090a0a3b5d7d38\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x333566257b203233,0x202c34356625202c\n"
".quad 0x6625202c35356625,0x65745b202c7d3635,0x4336665f66655278,0x2c333966257b202c\n"
".quad 0x3b5d7d3835662520,0x20636f6c2e090a0a,0x3120303631322032,0x2e6e722e7476630a\n"
".quad 0x203233732e323366,0x25202c3130316625,0x6464610a3b313272,0x316625203233662e\n"
".quad 0x30316625202c3230,0x3046336630202c31,0x610a3b3030303030,0x25203233662e6464\n"
".quad 0x316625202c303766,0x36396625202c3230,0x2e786574090a0a3b,0x33662e34762e6432\n"
".quad 0x257b203233662e32,0x366625202c393566,0x2c31366625202c30,0x202c7d3236662520\n"
".quad 0x5f6665527865745b,0x66257b202c433766,0x30376625202c3339,0x090a090a0a3b5d7d\n"
".quad 0x762e64322e786574,0x33662e3233662e34,0x2c353666257b2032,0x25202c3636662520\n"
".quad 0x366625202c373666,0x7865745b202c7d38,0x2c4338665f666552,0x202c373866257b20\n"
".quad 0x0a3b5d7d30376625,0x3220636f6c2e090a,0x0a31203236313220,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x7225202c33303166,0x2e6464610a3b3732,0x3238662520323366\n"
".quad 0x202c37396625202c,0x0a0a3b3330316625,0x2e64322e78657409,0x662e3233662e3476\n"
".quad 0x313766257b203233,0x202c32376625202c,0x6625202c33376625,0x65745b202c7d3437\n"
".quad 0x3531665f66655278,0x373866257b202c43,0x5d7d32386625202c,0x6574090a090a0a3b\n"
".quad 0x2e34762e64322e78,0x203233662e323366,0x25202c373766257b,0x376625202c383766\n"
".quad 0x7d30386625202c39,0x65527865745b202c,0x202c433731665f66,0x25202c333966257b\n"
".quad 0x0a0a3b5d7d323866,0x203220636f6c2e09,0x630a312034363132,0x33662e6e722e7476\n"
".quad 0x6625203233732e32,0x327225202c343031,0x662e6464610a3b33,0x2c34396625203233\n"
".quad 0x25202c3739662520,0x090a0a3b34303166,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x2c333866257b2032,0x25202c3438662520,0x386625202c353866,0x7865745b202c7d36\n"
".quad 0x433031665f666552,0x2c373866257b202c,0x3b5d7d3439662520,0x786574090a090a0a\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x6625202c39386625,0x31396625202c3039\n"
".quad 0x2c7d32396625202c,0x6665527865745b20,0x7b202c433231665f,0x6625202c33396625\n"
".quad 0x090a0a3b5d7d3439,0x32203220636f6c2e,0x25400a3120373631,0x4220617262203170\n"
".quad 0x0a0a3b355f303242,0x32203220636f6c2e,0x75730a3120323032,0x6625203233662e62\n"
".quad 0x336625202c353031,0x3b31346625202c35,0x3233662e6464610a,0x202c363031662520\n"
".quad 0x25202c3530316625,0x6275730a3b373466,0x316625203233662e,0x30316625202c3730\n"
".quad 0x3b33356625202c36,0x3233662e6275730a,0x202c383031662520,0x25202c3730316625\n"
".quad 0x6464610a3b393566,0x316625203233662e,0x30316625202c3930,0x3b35366625202c38\n"
".quad 0x3233662e6464610a,0x202c303131662520,0x25202c3930316625,0x6275730a3b333866\n"
".quad 0x316625203233662e,0x31316625202c3131,0x3b39386625202c30,0x3233662e6464610a\n"
".quad 0x202c323131662520,0x25202c3131316625,0x6275730a3b313766,0x316625203233662e\n"
".quad 0x31316625202c3331,0x3b37376625202c32,0x3233662e6275730a,0x202c343131662520\n"
".quad 0x356625202c346625,0x33662e6464610a3b,0x2c35313166252032,0x202c343131662520\n"
".quad 0x64610a3b37346625,0x6625203233662e64,0x316625202c363131,0x33356625202c3531\n"
".quad 0x33662e6275730a3b,0x2c37313166252032,0x202c363131662520,0x75730a3b39356625\n"
".quad 0x6625203233662e62,0x316625202c383131,0x35366625202c3731,0x33662e6464610a3b\n"
".quad 0x2c39313166252032,0x202c383131662520,0x6275730a3b376625,0x316625203233662e\n"
".quad 0x31316625202c3032,0x0a3b386625202c39,0x203233662e646461,0x25202c3132316625\n"
".quad 0x6625202c30323166,0x2e6275730a3b3031,0x3231662520323366,0x3132316625202c32\n"
".quad 0x3b3735346625202c,0x3233662e6464610a,0x202c333231662520,0x386625202c366625\n"
".quad 0x662e6464610a3b33,0x3432316625203233,0x2c3332316625202c,0x64610a3b37662520\n"
".quad 0x6625203233662e64,0x316625202c353231,0x39386625202c3432,0x33662e6464610a3b\n"
".quad 0x2c36323166252032,0x202c353231662520,0x6275730a3b386625,0x316625203233662e\n"
".quad 0x32316625202c3732,0x0a3b396625202c36,0x203233662e627573,0x25202c3832316625\n"
".quad 0x6625202c37323166,0x2e6275730a3b3137,0x3231662520323366,0x3832316625202c39\n"
".quad 0x0a3b30316625202c,0x203233662e627573,0x25202c3033316625,0x6625202c39323166\n"
".quad 0x2e6275730a3b3737,0x3331662520323366,0x3033316625202c31,0x3b3735346625202c\n"
".quad 0x3233662e6275730a,0x202c323331662520,0x6625202c37346625,0x20636f6c2e0a3b33\n"
".quad 0x3120323032322032,0x3233662e6464610a,0x202c333331662520,0x25202c3233316625\n"
".quad 0x6464610a3b333566,0x316625203233662e,0x33316625202c3433,0x3b39356625202c33\n"
".quad 0x3233662e6464610a,0x202c353331662520,0x25202c3433316625,0x6464610a3b353666\n"
".quad 0x316625203233662e,0x33316625202c3633,0x3b33386625202c35,0x3233662e6464610a\n"
".quad 0x202c373331662520,0x25202c3633316625,0x2e6464610a3b3766,0x3331662520323366\n"
".quad 0x3733316625202c38,0x0a3b39386625202c,0x203233662e646461,0x25202c3933316625\n"
".quad 0x6625202c38333166,0x662e6464610a3b38,0x3034316625203233,0x2c3933316625202c\n"
".quad 0x610a3b3137662520,0x25203233662e6464,0x6625202c31343166,0x316625202c303431\n"
".quad 0x662e6464610a3b30,0x3234316625203233,0x2c3134316625202c,0x610a3b3737662520\n"
".quad 0x25203233662e6464,0x6625202c33343166,0x346625202c323431,0x2e6c756d0a3b3735\n"
".quad 0x3431662520323366,0x3232316625202c34,0x3b3232316625202c,0x2e6e722e616d660a\n"
".quad 0x3431662520323366,0x3331316625202c35,0x2c3331316625202c,0x0a3b343431662520\n"
".quad 0x203233662e6c756d,0x25202c3634316625,0x6625202c31333166,0x616d660a3b313331\n"
".quad 0x203233662e6e722e,0x25202c3734316625,0x6625202c31333166,0x316625202c313331\n"
".quad 0x2e6275730a3b3534,0x3431662520323366,0x3334316625202c38,0x3b3734316625202c\n"
".quad 0x3233662e6c756d0a,0x202c393431662520,0x6630202c35336625,0x3030303030383043\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x2c336625202c3035,0x3030343134663020\n"
".quad 0x316625202c303030,0x2e616d660a3b3934,0x25203233662e6e72,0x6625202c31353166\n"
".quad 0x3830436630202c34,0x25202c3030303030,0x6d660a3b30353166,0x3233662e6e722e61\n"
".quad 0x202c323531662520,0x6630202c31346625,0x3030303030383043,0x3b3135316625202c\n"
".quad 0x2e6e722e616d660a,0x3531662520323366,0x202c356625202c33,0x3030303830436630\n"
".quad 0x35316625202c3030,0x662e6464610a3b32,0x3435316625203233,0x2c3335316625202c\n"
".quad 0x610a3b3734662520,0x25203233662e6464,0x6625202c35353166,0x356625202c343531\n"
".quad 0x662e6464610a3b33,0x3635316625203233,0x2c3535316625202c,0x610a3b3935662520\n"
".quad 0x25203233662e6464,0x6625202c37353166,0x366625202c363531,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x366625202c383531,0x303830436630202c,0x6625202c30303030\n"
".quad 0x6464610a3b373531,0x316625203233662e,0x35316625202c3935,0x3b33386625202c38\n"
".quad 0x3233662e6464610a,0x202c303631662520,0x25202c3935316625,0x2e6464610a3b3766\n"
".quad 0x3631662520323366,0x3036316625202c31,0x0a3b39386625202c,0x203233662e646461\n"
".quad 0x25202c3236316625,0x6625202c31363166,0x722e616d660a3b38,0x6625203233662e6e\n"
".quad 0x396625202c333631,0x303830436630202c,0x6625202c30303030,0x6464610a3b323631\n"
".quad 0x316625203233662e,0x36316625202c3436,0x3b31376625202c33,0x3233662e6464610a\n"
".quad 0x202c353631662520,0x25202c3436316625,0x6464610a3b303166,0x316625203233662e\n"
".quad 0x36316625202c3636,0x3b37376625202c35,0x3233662e6464610a,0x202c373631662520\n"
".quad 0x25202c3636316625,0x6d660a3b37353466,0x3233662e6e722e61,0x202c383631662520\n"
".quad 0x30202c3734316625,0x3135343146303466,0x3736316625202c34,0x33662e6c756d0a3b\n"
".quad 0x2c39363166252032,0x30202c3134662520,0x3030303041303466,0x722e616d660a3b30\n"
".quad 0x6625203233662e6e,0x336625202c303731,0x4130436630202c35,0x25202c3030303030\n"
".quad 0x6d660a3b39363166,0x3233662e6e722e61,0x202c313731662520,0x30202c3331316625\n"
".quad 0x3535353544463366,0x3037316625202c35,0x33662e6c756d0a3b,0x2c32373166252032\n"
".quad 0x6630202c35662520,0x3030303030413034,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x2c346625202c3337,0x3030413043663020,0x316625202c303030,0x2e616d660a3b3237\n"
".quad 0x25203233662e6e72,0x6625202c34373166,0x336630202c323231,0x2c35353535354446\n"
".quad 0x0a3b333731662520,0x203233662e6c756d,0x25202c3537316625,0x30346630202c3966\n"
".quad 0x0a3b303030303041,0x662e6e722e616d66,0x3637316625203233,0x30202c366625202c\n"
".quad 0x3030303041304366,0x3537316625202c30,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x33316625202c3737,0x4446336630202c31,0x25202c3535353535,0x64610a3b36373166\n"
".quad 0x6625203233662e64,0x336625202c383731,0x3b35336625202c35,0x3233662e6275730a\n"
".quad 0x202c393731662520,0x25202c3837316625,0x636f6c2e0a3b3466,0x2032303232203220\n"
".quad 0x33662e6464610a31,0x2c30383166252032,0x25202c3134662520,0x6464610a3b313466\n"
".quad 0x316625203233662e,0x37316625202c3138,0x3038316625202c39,0x33662e6275730a3b\n"
".quad 0x2c32383166252032,0x202c313831662520,0x6f6c2e0a3b356625,0x3230323220322063\n"
".quad 0x662e6464610a3120,0x3338316625203233,0x2c3238316625202c,0x610a3b3734662520\n"
".quad 0x25203233662e6464,0x6625202c34383166,0x356625202c333831,0x662e6464610a3b33\n"
".quad 0x3538316625203233,0x2c3438316625202c,0x610a3b3935662520,0x25203233662e6464\n"
".quad 0x6625202c36383166,0x366625202c353831,0x662e6275730a3b35,0x3738316625203233\n"
".quad 0x2c3638316625202c,0x6c2e0a3b36662520,0x303232203220636f,0x2e6464610a312032\n"
".quad 0x3831662520323366,0x3738316625202c38,0x0a3b33386625202c,0x203233662e766f6d\n"
".quad 0x30202c3938316625,0x3030303030304366,0x20636f6c2e0a3b30,0x3120323032322032\n"
".quad 0x2e6e722e616d660a,0x3931662520323366,0x202c376625202c30,0x3030303030436630\n"
".quad 0x38316625202c3030,0x662e6464610a3b38,0x3139316625203233,0x2c3039316625202c\n"
".quad 0x660a3b3938662520,0x33662e6e722e616d,0x2c32393166252032,0x6630202c38662520\n"
".quad 0x3030303030303043,0x3b3139316625202c,0x3233662e6275730a,0x202c333931662520\n"
".quad 0x25202c3239316625,0x636f6c2e0a3b3966,0x2032303232203220,0x33662e6464610a31\n"
".quad 0x2c34393166252032,0x202c333931662520,0x6d660a3b31376625,0x3233662e6e722e61\n"
".quad 0x202c353931662520,0x6630202c30316625,0x3030303030303043,0x3b3439316625202c\n"
".quad 0x3233662e6464610a,0x202c363931662520,0x25202c3539316625,0x616d660a3b373766\n"
".quad 0x203233662e6e722e,0x25202c3739316625,0x6630202c37353466,0x3030303030303043\n"
".quad 0x3b3639316625202c,0x3233662e6464610a,0x202c383931662520,0x25202c3331316625\n"
".quad 0x6d660a3b33313166,0x3233662e6e722e61,0x202c393931662520,0x25202c3232316625\n"
".quad 0x6625202c32323166,0x67656e0a3b363431,0x326625203233662e,0x39316625202c3030\n"
".quad 0x722e616d660a3b39,0x6625203233662e6e,0x316625202c313032,0x31316625202c3839\n"
".quad 0x3030326625202c33,0x33662e6275730a3b,0x2c32303266252032,0x202c373931662520\n"
".quad 0x610a3b3130326625,0x25203233662e6464,0x6625202c33303266,0x0a3b346625202c34\n"
".quad 0x662e6e722e616d66,0x3430326625203233,0x202c35336625202c,0x3030303830436630\n"
".quad 0x30326625202c3030,0x722e616d660a3b33,0x6625203233662e6e,0x346625202c353032\n"
".quad 0x3830436630202c31,0x25202c3030303030,0x64610a3b34303266,0x6625203233662e64\n"
".quad 0x356625202c363032,0x610a3b356625202c,0x25203233662e6464,0x6625202c37303266\n"
".quad 0x326625202c353032,0x2e6464610a3b3630,0x3032662520323366,0x3730326625202c38\n"
".quad 0x0a3b37346625202c,0x203233662e646461,0x25202c3930326625,0x6625202c38303266\n"
".quad 0x2e6464610a3b3335,0x3132662520323366,0x3930326625202c30,0x0a3b39356625202c\n"
".quad 0x203233662e646461,0x25202c3131326625,0x6625202c30313266,0x2e6464610a3b3536\n"
".quad 0x3132662520323366,0x202c366625202c32,0x6464610a3b366625,0x326625203233662e\n"
".quad 0x31326625202c3331,0x3231326625202c31,0x33662e6464610a3b,0x2c34313266252032\n"
".quad 0x202c333132662520,0x6d660a3b33386625,0x3233662e6e722e61,0x202c353132662520\n"
".quad 0x436630202c376625,0x2c30303030303030,0x0a3b343132662520,0x203233662e646461\n"
".quad 0x25202c3631326625,0x6625202c35313266,0x2e616d660a3b3938,0x25203233662e6e72\n"
".quad 0x6625202c37313266,0x3030436630202c38,0x25202c3030303030,0x64610a3b36313266\n"
".quad 0x6625203233662e64,0x396625202c383132,0x610a3b396625202c,0x25203233662e6464\n"
".quad 0x6625202c39313266,0x326625202c373132,0x2e6464610a3b3831,0x3232662520323366\n"
".quad 0x3931326625202c30,0x0a3b31376625202c,0x662e6e722e616d66,0x3132326625203233\n"
".quad 0x202c30316625202c,0x3030303030436630,0x32326625202c3030,0x662e6464610a3b30\n"
".quad 0x3232326625203233,0x2c3132326625202c,0x660a3b3737662520,0x33662e6e722e616d\n"
".quad 0x2c33323266252032,0x202c373534662520,0x3030303030436630,0x32326625202c3030\n"
".quad 0x662e6464610a3b32,0x3432326625203233,0x25202c346625202c,0x2e6464610a3b3566\n"
".quad 0x3232662520323366,0x3432326625202c35,0x0a3b37346625202c,0x203233662e646461\n"
".quad 0x25202c3632326625,0x6625202c35323266,0x2e6464610a3b3335,0x3232662520323366\n"
".quad 0x3632326625202c37,0x0a3b39356625202c,0x203233662e646461,0x25202c3832326625\n"
".quad 0x6625202c37323266,0x2e6275730a3b3536,0x3232662520323366,0x3832326625202c39\n"
".quad 0x730a3b366625202c,0x25203233662e6275,0x6625202c30333266,0x386625202c393232\n"
".quad 0x662e6275730a3b33,0x3133326625203233,0x2c3033326625202c,0x730a3b3938662520\n"
".quad 0x25203233662e6275,0x6625202c32333266,0x396625202c313332,0x33662e6275730a3b\n"
".quad 0x2c33333266252032,0x202c323332662520,0x75730a3b31376625,0x6625203233662e62\n"
".quad 0x326625202c343332,0x37376625202c3333,0x3220636f6c2e0a3b,0x0a31203230323220\n"
".quad 0x203233662e67656e,0x25202c3533326625,0x6d660a3b31333166,0x3233662e6e722e61\n"
".quad 0x202c363332662520,0x25202c3533326625,0x6625202c31333166,0x6275730a3b343431\n"
".quad 0x326625203233662e,0x33326625202c3733,0x3633326625202c34,0x33662e67656e0a3b\n"
".quad 0x2c38333266252032,0x0a3b363032662520,0x662e6e722e616d66,0x3933326625203233\n"
".quad 0x25202c346625202c,0x6625202c39383166,0x6464610a3b383332,0x326625203233662e\n"
".quad 0x33326625202c3034,0x3b37346625202c39,0x3233662e6464610a,0x202c313432662520\n"
".quad 0x25202c3034326625,0x6464610a3b333566,0x326625203233662e,0x34326625202c3234\n"
".quad 0x3b39356625202c31,0x3233662e6464610a,0x202c333432662520,0x25202c3234326625\n"
".quad 0x6464610a3b353666,0x326625203233662e,0x34326625202c3434,0x3231326625202c33\n"
".quad 0x33662e6275730a3b,0x2c35343266252032,0x202c343432662520,0x75730a3b33386625\n"
".quad 0x6625203233662e62,0x326625202c363432,0x39386625202c3534,0x3220636f6c2e0a3b\n"
".quad 0x0a31203230323220,0x203233662e646461,0x25202c3734326625,0x6625202c36343266\n"
".quad 0x6275730a3b383132,0x326625203233662e,0x34326625202c3834,0x3b31376625202c37\n"
".quad 0x3233662e6275730a,0x202c393432662520,0x25202c3834326625,0x6275730a3b373766\n"
".quad 0x326625203233662e,0x37346625202c3035,0x0a3b33356625202c,0x32203220636f6c2e\n"
".quad 0x64610a3120323032,0x6625203233662e64,0x326625202c313532,0x39356625202c3035\n"
".quad 0x33662e6275730a3b,0x2c32353266252032,0x202c313532662520,0x6c2e0a3b35366625\n"
".quad 0x303232203220636f,0x2e67656e0a312032,0x3532662520323366,0x3331316625202c33\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x35326625202c3435,0x3232316625202c33\n"
".quad 0x3b3235326625202c,0x3233662e6275730a,0x202c353532662520,0x386625202c376625\n"
".quad 0x33662e6275730a3b,0x2c36353266252032,0x202c353532662520,0x6c2e0a3b30316625\n"
".quad 0x303232203220636f,0x2e6464610a312032,0x3532662520323366,0x3635326625202c37\n"
".quad 0x3b3735346625202c,0x3233662e67656e0a,0x202c383532662520,0x660a3b3232316625\n"
".quad 0x33662e6e722e616d,0x2c39353266252032,0x202c383532662520,0x25202c3133316625\n"
".quad 0x75730a3b37353266,0x6625203233662e62,0x386625202c303632,0x3b39386625202c33\n"
".quad 0x3233662e6275730a,0x202c313632662520,0x25202c3036326625,0x6f6c2e0a3b313766\n"
".quad 0x3230323220322063,0x662e6464610a3120,0x3236326625203233,0x2c3136326625202c\n"
".quad 0x660a3b3737662520,0x33662e6e722e616d,0x2c33363266252032,0x202c333532662520\n"
".quad 0x25202c3133316625,0x75730a3b32363266,0x6625203233662e62,0x326625202c343632\n"
".quad 0x39356625202c3035,0x3220636f6c2e0a3b,0x0a31203230323220,0x203233662e646461\n"
".quad 0x25202c3536326625,0x6625202c34363266,0x2e6275730a3b3536,0x3632662520323366\n"
".quad 0x3536326625202c36,0x0a3b33386625202c,0x203233662e646461,0x25202c3736326625\n"
".quad 0x6625202c36363266,0x2e6275730a3b3938,0x3632662520323366,0x3736326625202c38\n"
".quad 0x0a3b31376625202c,0x32203220636f6c2e,0x64610a3120323032,0x6625203233662e64\n"
".quad 0x326625202c393632,0x37376625202c3836,0x33662e67656e0a3b,0x2c30373266252032\n"
".quad 0x730a3b3335662520,0x25203233662e6275,0x6625202c31373266,0x346625202c303732\n"
".quad 0x20636f6c2e0a3b37,0x3120323032322032,0x3233662e6464610a,0x202c323732662520\n"
".quad 0x25202c3137326625,0x6464610a3b393566,0x326625203233662e,0x37326625202c3337\n"
".quad 0x3b35366625202c32,0x3233662e6464610a,0x202c343732662520,0x25202c3337326625\n"
".quad 0x2e6275730a3b3766,0x3732662520323366,0x3437326625202c35,0x2e0a3b386625202c\n"
".quad 0x3232203220636f6c,0x6464610a31203230,0x326625203233662e,0x37326625202c3637\n"
".quad 0x3b30316625202c35,0x3233662e6275730a,0x202c373732662520,0x25202c3637326625\n"
".quad 0x75730a3b37353466,0x6625203233662e62,0x386625202c383732,0x0a3b376625202c33\n"
".quad 0x32203220636f6c2e,0x64610a3120323032,0x6625203233662e64,0x326625202c393732\n"
".quad 0x39386625202c3837,0x33662e6275730a3b,0x2c30383266252032,0x202c393732662520\n"
".quad 0x6275730a3b386625,0x326625203233662e,0x38326625202c3138,0x3b31376625202c30\n"
".quad 0x203220636f6c2e0a,0x610a312032303232,0x25203233662e6464,0x6625202c32383266\n"
".quad 0x316625202c313832,0x662e6275730a3b30,0x3338326625203233,0x2c3238326625202c\n"
".quad 0x2e0a3b3737662520,0x3232203220636f6c,0x6464610a31203230,0x326625203233662e\n"
".quad 0x38326625202c3438,0x3735346625202c33,0x33662e766f6d0a3b,0x2c35383266252032\n"
".quad 0x3030384533663020,0x2e646c0a3b303030,0x33662e6d61726170,0x2c36353466252032\n"
".quad 0x524c33315a5f5b20,0x42416279685f645f,0x665f536650324443,0x6d617261705f696d\n"
".quad 0x6f6c2e0a3b5d325f,0x3230323220322063,0x662e6c756d0a3120,0x3638326625203233\n"
".quad 0x2c3635346625202c,0x3030384533663020,0x766f6d0a3b303030,0x326625203233662e\n"
".quad 0x45336630202c3738,0x0a3b303030303030,0x32203220636f6c2e,0x756d0a3120323032\n"
".quad 0x6625203233662e6c,0x326625202c383832,0x44336630202c3934,0x0a3b424141414132\n"
".quad 0x203233662e766f6d,0x30202c3938326625,0x4141414132443366,0x20636f6c2e0a3b42\n"
".quad 0x3120323032322032,0x3233662e6c756d0a,0x202c303932662520,0x30202c3635346625\n"
".quad 0x4141414141443366,0x662e6c756d0a3b42,0x3139326625203233,0x2c3332326625202c\n"
".quad 0x3833364333663020,0x6c756d0a3b393345,0x326625203233662e,0x35346625202c3239\n"
".quad 0x4543336630202c36,0x6d0a3b3933453833,0x25203233662e6c75,0x6625202c33393266\n"
".quad 0x326625202c323032,0x2e6c756d0a3b3239,0x3932662520323366,0x3137316625202c34\n"
".quad 0x434343336630202c,0x6f6d0a3b44434343,0x6625203233662e76,0x336630202c353932\n"
".quad 0x3b44434343434343,0x203220636f6c2e0a,0x6d0a312032303232,0x25203233662e6c75\n"
".quad 0x6625202c36393266,0x336630202c343731,0x3b44434343434343,0x3233662e6c756d0a\n"
".quad 0x202c373932662520,0x30202c3737316625,0x4343434343433366,0x662e6c756d0a3b44\n"
".quad 0x3839326625203233,0x2c3836316625202c,0x3032384233663020,0x6c756d0a3b313238\n"
".quad 0x326625203233662e,0x39326625202c3939,0x3431346630202c38,0x660a3b3030303030\n"
".quad 0x33662e6e722e616d,0x2c30303366252032,0x202c383431662520,0x4643333745426630\n"
".quad 0x39326625202c4433,0x662e6275730a3b39,0x3130336625203233,0x25202c336625202c\n"
".quad 0x756d0a3b30303366,0x6625203233662e6c,0x326625202c323033,0x30436630202c3839\n"
".quad 0x0a3b303030303038,0x662e6e722e616d66,0x3330336625203233,0x2c3834316625202c\n"
".quad 0x4332424442663020,0x336625202c443242,0x2e616d660a3b3230,0x25203233662e6e72\n"
".quad 0x6625202c34303366,0x436630202c343932,0x2c30303030303830,0x0a3b333033662520\n"
".quad 0x662e6e722e616d66,0x3530336625203233,0x2c3230326625202c,0x202c323932662520\n"
".quad 0x610a3b3339326625,0x25203233662e6464,0x6625202c36303366,0x336625202c343033\n"
".quad 0x2e616d660a3b3530,0x25203233662e6e72,0x6625202c37303366,0x436630202c313932\n"
".quad 0x2c30303030303830,0x0a3b363033662520,0x203233662e627573,0x25202c3830336625\n"
".quad 0x336625202c353366,0x2e616d660a3b3730,0x25203233662e6e72,0x6625202c39303366\n"
".quad 0x436630202c363932,0x2c30303030303830,0x0a3b333033662520,0x203233662e67656e\n"
".quad 0x25202c3031336625,0x6d660a3b32303266,0x3233662e6e722e61,0x202c313133662520\n"
".quad 0x25202c3031336625,0x6625202c32393266,0x6f6c2e0a3b393033,0x3230323220322063\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x326625202c323133,0x43336630202c3332\n"
".quad 0x202c393345383336,0x610a3b3139326625,0x25203233662e6464,0x6625202c33313366\n"
".quad 0x336625202c313133,0x2e616d660a3b3231,0x25203233662e6e72,0x6625202c34313366\n"
".quad 0x326625202c373332,0x31336625202c3039,0x722e616d660a3b33,0x6625203233662e6e\n"
".quad 0x326625202c353133,0x30436630202c3838,0x202c303030303030,0x730a3b3431336625\n"
".quad 0x25203233662e6275,0x6625202c36313366,0x3531336625202c34,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x39326625202c3731,0x3830346630202c34,0x25202c3030303030\n"
".quad 0x64610a3b33303366,0x6625203233662e64,0x336625202c383133,0x30336625202c3731\n"
".quad 0x722e616d660a3b35,0x6625203233662e6e,0x326625202c393133,0x30436630202c3139\n"
".quad 0x202c303030303038,0x730a3b3831336625,0x25203233662e6275,0x6625202c30323366\n"
".quad 0x31336625202c3134,0x722e616d660a3b39,0x6625203233662e6e,0x326625202c313233\n"
".quad 0x30346630202c3639,0x202c303030303038,0x660a3b3330336625,0x33662e6e722e616d\n"
".quad 0x2c32323366252032,0x202c303133662520,0x25202c3239326625,0x6c2e0a3b31323366\n"
".quad 0x303232203220636f,0x2e6464610a312032,0x3233662520323366,0x3232336625202c33\n"
".quad 0x3b3231336625202c,0x2e6e722e616d660a,0x3233662520323366,0x3733326625202c34\n"
".quad 0x2c3039326625202c,0x0a3b333233662520,0x662e6e722e616d66,0x3532336625203233\n"
".quad 0x2c3838326625202c,0x3030303043663020,0x336625202c303030,0x2e6275730a3b3432\n"
".quad 0x3233662520323366,0x202c356625202c36,0x660a3b3532336625,0x33662e6e722e616d\n"
".quad 0x2c37323366252032,0x202c383431662520,0x3830323844336630,0x39326625202c3032\n"
".quad 0x722e616d660a3b38,0x6625203233662e6e,0x316625202c383233,0x43336630202c3137\n"
".quad 0x202c444343434343,0x660a3b3732336625,0x33662e6e722e616d,0x2c39323366252032\n"
".quad 0x202c343731662520,0x4343434343336630,0x32336625202c4443,0x722e616d660a3b38\n"
".quad 0x6625203233662e6e,0x326625202c303333,0x39326625202c3230,0x3932336625202c32\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x32326625202c3133,0x3643336630202c33\n"
".quad 0x25202c3933453833,0x6d660a3b30333366,0x3233662e6e722e61,0x202c323333662520\n"
".quad 0x25202c3733326625,0x6625202c30393266,0x616d660a3b313333,0x203233662e6e722e\n"
".quad 0x25202c3333336625,0x6630202c39343266,0x4241414141324433,0x3b3233336625202c\n"
".quad 0x2e6e722e616d660a,0x3333662520323366,0x3435326625202c34,0x303845336630202c\n"
".quad 0x6625202c30303030,0x616d660a3b333333,0x203233662e6e722e,0x25202c3533336625\n"
".quad 0x6630202c39363266,0x3030303030304533,0x3b3433336625202c,0x3233662e67656e0a\n"
".quad 0x202c363333662520,0x660a3b3737326625,0x33662e6e722e616d,0x2c37333366252032\n"
".quad 0x202c363333662520,0x25202c3738326625,0x6c2e0a3b35333366,0x303232203220636f\n"
".quad 0x2e6275730a312032,0x3333662520323366,0x2c37346625202c38,0x0a3b373333662520\n"
".quad 0x203233662e67656e,0x25202c3933336625,0x6d660a3b31373166,0x3233662e6e722e61\n"
".quad 0x202c303433662520,0x25202c3933336625,0x6625202c35393266,0x6f6c2e0a3b373233\n"
".quad 0x3230323220322063,0x722e616d660a3120,0x6625203233662e6e,0x316625202c313433\n"
".quad 0x43336630202c3437,0x202c444343434343,0x660a3b3034336625,0x33662e6e722e616d\n"
".quad 0x2c32343366252032,0x202c323032662520,0x25202c3239326625,0x6d660a3b31343366\n"
".quad 0x3233662e6e722e61,0x202c333433662520,0x30202c3332326625,0x3345383336433366\n"
".quad 0x3234336625202c39,0x6e722e616d660a3b,0x336625203233662e,0x33326625202c3434\n"
".quad 0x3039326625202c37,0x3b3334336625202c,0x2e6e722e616d660a,0x3433662520323366\n"
".quad 0x3934326625202c35,0x413244336630202c,0x6625202c42414141,0x67656e0a3b343433\n"
".quad 0x336625203233662e,0x35326625202c3634,0x722e616d660a3b34,0x6625203233662e6e\n"
".quad 0x336625202c373433,0x38326625202c3634,0x3534336625202c35,0x33662e67656e0a3b\n"
".quad 0x2c38343366252032,0x0a3b393632662520,0x662e6e722e616d66,0x3934336625203233\n"
".quad 0x2c3834336625202c,0x202c373832662520,0x660a3b3734336625,0x33662e6e722e616d\n"
".quad 0x2c30353366252032,0x202c363333662520,0x25202c3738326625,0x6c2e0a3b39343366\n"
".quad 0x303232203220636f,0x2e6275730a312032,0x3533662520323366,0x2c33356625202c31\n"
".quad 0x0a3b303533662520,0x203233662e67656e,0x25202c3235336625,0x6d660a3b34373166\n"
".quad 0x3233662e6e722e61,0x202c333533662520,0x25202c3235336625,0x6625202c35393266\n"
".quad 0x6f6c2e0a3b303433,0x3230323220322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x326625202c343533,0x39326625202c3230,0x3335336625202c32,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x32326625202c3535,0x3643336630202c33,0x25202c3933453833\n"
".quad 0x6d660a3b34353366,0x3233662e6e722e61,0x202c363533662520,0x25202c3733326625\n"
".quad 0x6625202c30393266,0x616d660a3b353533,0x203233662e6e722e,0x25202c3735336625\n"
".quad 0x6630202c39343266,0x4241414141324433,0x3b3635336625202c,0x2e6e722e616d660a\n"
".quad 0x3533662520323366,0x3435326625202c38,0x303845336630202c,0x6625202c30303030\n"
".quad 0x616d660a3b373533,0x203233662e6e722e,0x25202c3935336625,0x6625202c38343366\n"
".quad 0x336625202c373832,0x636f6c2e0a3b3835,0x2032303232203220,0x6e722e616d660a31\n"
".quad 0x336625203233662e,0x37326625202c3036,0x3045336630202c37,0x25202c3030303030\n"
".quad 0x75730a3b39353366,0x6625203233662e62,0x356625202c313633,0x3036336625202c39\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x35336625202c3236,0x3539326625202c32\n"
".quad 0x3b3832336625202c,0x203220636f6c2e0a,0x660a312032303232,0x33662e6e722e616d\n"
".quad 0x2c33363366252032,0x202c323032662520,0x25202c3239326625,0x6d660a3b32363366\n"
".quad 0x3233662e6e722e61,0x202c343633662520,0x30202c3332326625,0x3345383336433366\n"
".quad 0x3336336625202c39,0x6e722e616d660a3b,0x336625203233662e,0x33326625202c3536\n"
".quad 0x3039326625202c37,0x3b3436336625202c,0x2e6e722e616d660a,0x3633662520323366\n"
".quad 0x3934326625202c36,0x413244336630202c,0x6625202c42414141,0x616d660a3b353633\n"
".quad 0x203233662e6e722e,0x25202c3736336625,0x6625202c36343366,0x336625202c353832\n"
".quad 0x636f6c2e0a3b3636,0x2032303232203220,0x6e722e616d660a31,0x336625203233662e\n"
".quad 0x36326625202c3836,0x3045336630202c39,0x25202c3030303030,0x6d660a3b37363366\n"
".quad 0x3233662e6e722e61,0x202c393633662520,0x30202c3737326625,0x3030303030453366\n"
".quad 0x3836336625202c30,0x33662e6275730a3b,0x2c30373366252032,0x25202c3536662520\n"
".quad 0x6d660a3b39363366,0x3233662e6e722e61,0x202c313733662520,0x30202c3739326625\n"
".quad 0x3030303038304366,0x3330336625202c30,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x31336625202c3237,0x3239326625202c30,0x3b3137336625202c,0x203220636f6c2e0a\n"
".quad 0x610a312032303232,0x25203233662e6464,0x6625202c33373366,0x336625202c323733\n"
".quad 0x2e67656e0a3b3231,0x3733662520323366,0x3733326625202c34,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x37336625202c3537,0x3039326625202c34,0x3b3337336625202c\n"
".quad 0x203220636f6c2e0a,0x660a312032303232,0x33662e6e722e616d,0x2c36373366252032\n"
".quad 0x202c393432662520,0x4141413244336630,0x38326625202c4241,0x662e6464610a3b38\n"
".quad 0x3737336625203233,0x2c3537336625202c,0x0a3b363733662520,0x203233662e627573\n"
".quad 0x25202c3837336625,0x37336625202c3666,0x722e616d660a3b37,0x6625203233662e6e\n"
".quad 0x316625202c393733,0x43336630202c3737,0x202c444343434343,0x660a3b3832336625\n"
".quad 0x33662e6e722e616d,0x2c30383366252032,0x202c323032662520,0x25202c3239326625\n"
".quad 0x6d660a3b39373366,0x3233662e6e722e61,0x202c313833662520,0x30202c3332326625\n"
".quad 0x3345383336433366,0x3038336625202c39,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x37336625202c3238,0x3039326625202c34,0x3b3138336625202c,0x3233662e67656e0a\n"
".quad 0x202c333833662520,0x660a3b3934326625,0x33662e6e722e616d,0x2c34383366252032\n"
".quad 0x202c333833662520,0x25202c3938326625,0x6c2e0a3b32383366,0x303232203220636f\n"
".quad 0x2e616d660a312032,0x25203233662e6e72,0x6625202c35383366,0x326625202c333632\n"
".quad 0x38336625202c3638,0x722e616d660a3b34,0x6625203233662e6e,0x336625202c363833\n"
".quad 0x38326625202c3834,0x3538336625202c37,0x3220636f6c2e0a3b,0x0a31203230323220\n"
".quad 0x662e6e722e616d66,0x3738336625203233,0x2c3438326625202c,0x3030304533663020\n"
".quad 0x336625202c303030,0x2e6275730a3b3638,0x3833662520323366,0x2c33386625202c38\n"
".quad 0x0a3b373833662520,0x662e6e722e616d66,0x3938336625203233,0x2c3437316625202c\n"
".quad 0x4343434333663020,0x336625202c444343,0x2e616d660a3b3732,0x25203233662e6e72\n"
".quad 0x6625202c30393366,0x336630202c373731,0x2c44434343434343,0x0a3b393833662520\n"
".quad 0x662e6e722e616d66,0x3139336625203233,0x2c3339326625202c,0x3030303043663020\n"
".quad 0x336625202c303030,0x2e616d660a3b3039,0x25203233662e6e72,0x6625202c32393366\n"
".quad 0x436630202c313932,0x2c30303030303030,0x0a3b313933662520,0x662e6e722e616d66\n"
".quad 0x3339336625203233,0x2c3935326625202c,0x3030384533663020,0x336625202c303030\n"
".quad 0x2e616d660a3b3239,0x25203233662e6e72,0x6625202c34393366,0x336630202c373732\n"
".quad 0x2c30303030303045,0x0a3b333933662520,0x203233662e67656e,0x25202c3539336625\n"
".quad 0x6d660a3b34383266,0x3233662e6e722e61,0x202c363933662520,0x25202c3539336625\n"
".quad 0x6625202c37383266,0x6f6c2e0a3b343933,0x3230323220322063,0x662e6275730a3120\n"
".quad 0x3739336625203233,0x25202c376625202c,0x6d660a3b36393366,0x3233662e6e722e61\n"
".quad 0x202c383933662520,0x30202c3737316625,0x4343434343433366,0x3034336625202c44\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x30326625202c3939,0x3239326625202c32\n"
".quad 0x3b3839336625202c,0x2e6e722e616d660a,0x3034662520323366,0x3332326625202c30\n"
".quad 0x333643336630202c,0x6625202c39334538,0x616d660a3b393933,0x203233662e6e722e\n"
".quad 0x25202c3130346625,0x6625202c34373366,0x346625202c303932,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x6625202c32303466,0x326625202c333833,0x30346625202c3938\n"
".quad 0x662e67656e0a3b31,0x3330346625203233,0x3b3336326625202c,0x2e6e722e616d660a\n"
".quad 0x3034662520323366,0x3330346625202c34,0x2c3638326625202c,0x0a3b323034662520\n"
".quad 0x32203220636f6c2e,0x6d660a3120323032,0x3233662e6e722e61,0x202c353034662520\n"
".quad 0x30202c3936326625,0x3030303030453366,0x3430346625202c30,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x38326625202c3630,0x3045336630202c34,0x25202c3030303030\n"
".quad 0x75730a3b35303466,0x6625203233662e62,0x386625202c373034,0x3630346625202c39\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x35336625202c3830,0x3539326625202c32\n"
".quad 0x3b3732336625202c,0x203220636f6c2e0a,0x660a312032303232,0x33662e6e722e616d\n"
".quad 0x2c39303466252032,0x202c373731662520,0x4343434343336630,0x30346625202c4443\n"
".quad 0x722e616d660a3b38,0x6625203233662e6e,0x326625202c303134,0x30436630202c3339\n"
".quad 0x202c303030303030,0x660a3b3930346625,0x33662e6e722e616d,0x2c31313466252032\n"
".quad 0x202c313932662520,0x3030303030436630,0x31346625202c3030,0x662e67656e0a3b30\n"
".quad 0x3231346625203233,0x3b3935326625202c,0x2e6e722e616d660a,0x3134662520323366\n"
".quad 0x3231346625202c33,0x2c3538326625202c,0x0a3b313134662520,0x662e6e722e616d66\n"
".quad 0x3431346625203233,0x2c3633336625202c,0x202c373832662520,0x660a3b3331346625\n"
".quad 0x33662e6e722e616d,0x2c35313466252032,0x202c353933662520,0x25202c3738326625\n"
".quad 0x6c2e0a3b34313466,0x303232203220636f,0x2e6275730a312032,0x3134662520323366\n"
".quad 0x202c386625202c36,0x660a3b3531346625,0x33662e6e722e616d,0x2c37313466252032\n"
".quad 0x202c373932662520,0x3030303830346630,0x30336625202c3030,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x336625202c383134,0x39326625202c3031,0x3731346625202c32\n"
".quad 0x3220636f6c2e0a3b,0x0a31203230323220,0x203233662e646461,0x25202c3931346625\n"
".quad 0x6625202c38313466,0x616d660a3b323133,0x203233662e6e722e,0x25202c3032346625\n"
".quad 0x6625202c34373366,0x346625202c303932,0x636f6c2e0a3b3931,0x2032303232203220\n"
".quad 0x33662e6464610a31,0x2c31323466252032,0x202c303234662520,0x730a3b3637336625\n"
".quad 0x25203233662e6275,0x6625202c32323466,0x3132346625202c39,0x33662e67656e0a3b\n"
".quad 0x2c33323466252032,0x0a3b373731662520,0x662e6e722e616d66,0x3432346625203233\n"
".quad 0x2c3332346625202c,0x202c353932662520,0x2e0a3b3832336625,0x3232203220636f6c\n"
".quad 0x616d660a31203230,0x203233662e6e722e,0x25202c3532346625,0x6625202c32303266\n"
".quad 0x346625202c323932,0x2e616d660a3b3432,0x25203233662e6e72,0x6625202c36323466\n"
".quad 0x336630202c333232,0x2c39334538333643,0x0a3b353234662520,0x662e6e722e616d66\n"
".quad 0x3732346625203233,0x2c3437336625202c,0x202c303932662520,0x660a3b3632346625\n"
".quad 0x33662e6e722e616d,0x2c38323466252032,0x202c333833662520,0x25202c3938326625\n"
".quad 0x6d660a3b37323466,0x3233662e6e722e61,0x202c393234662520,0x25202c3330346625\n"
".quad 0x6625202c36383266,0x616d660a3b383234,0x203233662e6e722e,0x25202c3033346625\n"
".quad 0x6625202c38343366,0x346625202c373832,0x2e616d660a3b3932,0x25203233662e6e72\n"
".quad 0x6625202c31333466,0x326625202c353933,0x33346625202c3738,0x20636f6c2e0a3b30\n"
".quad 0x3120323032322032,0x3233662e6275730a,0x202c323334662520,0x6625202c31376625\n"
".quad 0x616d660a3b313334,0x203233662e6e722e,0x25202c3333346625,0x6625202c33323466\n"
".quad 0x336625202c353932,0x636f6c2e0a3b3938,0x2032303232203220,0x6e722e616d660a31\n"
".quad 0x346625203233662e,0x39326625202c3433,0x3030436630202c33,0x25202c3030303030\n"
".quad 0x6d660a3b33333466,0x3233662e6e722e61,0x202c353334662520,0x30202c3139326625\n"
".quad 0x3030303030304366,0x3433346625202c30,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x31346625202c3633,0x3538326625202c32,0x3b3533346625202c,0x203220636f6c2e0a\n"
".quad 0x660a312032303232,0x33662e6e722e616d,0x2c37333466252032,0x202c373732662520\n"
".quad 0x3030303045336630,0x33346625202c3030,0x722e616d660a3b36,0x6625203233662e6e\n"
".quad 0x326625202c383334,0x45336630202c3438,0x202c303030303030,0x730a3b3733346625\n"
".quad 0x25203233662e6275,0x6625202c39333466,0x33346625202c3031,0x722e616d660a3b38\n"
".quad 0x6625203233662e6e,0x346625202c303434,0x39326625202c3332,0x3034336625202c35\n"
".quad 0x3220636f6c2e0a3b,0x0a31203230323220,0x662e6e722e616d66,0x3134346625203233\n"
".quad 0x2c3230326625202c,0x202c323932662520,0x660a3b3034346625,0x33662e6e722e616d\n"
".quad 0x2c32343466252032,0x202c333232662520,0x4538333643336630,0x34346625202c3933\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x336625202c333434,0x39326625202c3437\n"
".quad 0x3234346625202c30,0x6e722e616d660a3b,0x346625203233662e,0x38336625202c3434\n"
".quad 0x3938326625202c33,0x3b3334346625202c,0x203220636f6c2e0a,0x660a312032303232\n"
".quad 0x33662e6e722e616d,0x2c35343466252032,0x202c333632662520,0x25202c3638326625\n"
".quad 0x6d660a3b34343466,0x3233662e6e722e61,0x202c363434662520,0x30202c3936326625\n"
".quad 0x3030303030453366,0x3534346625202c30,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x39336625202c3734,0x3738326625202c35,0x3b3634346625202c,0x203220636f6c2e0a\n"
".quad 0x730a312032303232,0x25203233662e6275,0x6625202c38343466,0x34346625202c3737\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x346625202c393434,0x39326625202c3332\n"
".quad 0x3830346625202c35,0x3220636f6c2e0a3b,0x0a31203230323220,0x662e6e722e616d66\n"
".quad 0x3035346625203233,0x2c3339326625202c,0x3030303043663020,0x346625202c303030\n"
".quad 0x2e616d660a3b3934,0x25203233662e6e72,0x6625202c31353466,0x436630202c313932\n"
".quad 0x2c30303030303030,0x0a3b303534662520,0x662e6e722e616d66,0x3235346625203233\n"
".quad 0x2c3935326625202c,0x3030384533663020,0x346625202c303030,0x2e616d660a3b3135\n"
".quad 0x25203233662e6e72,0x6625202c33353466,0x326625202c363333,0x35346625202c3738\n"
".quad 0x20636f6c2e0a3b32,0x3120323032322032,0x2e6e722e616d660a,0x3534662520323366\n"
".quad 0x3438326625202c34,0x303045336630202c,0x6625202c30303030,0x6275730a3b333534\n"
".quad 0x346625203233662e,0x35346625202c3535,0x3435346625202c37,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3331336c72,0x645f524c33315a5f,0x444342416279685f\n"
".quad 0x696d665f53665032,0x335f6d617261705f,0x20636f6c2e0a3b5d,0x3120373331322032\n"
".quad 0x2e6f6c2e64616d0a,0x386c722520343673,0x2c396c7225202c32,0x2c3331336c722520\n"
".quad 0x6c0a3b356c722520,0x2e6d617261702e64,0x336c722520343675,0x315a5f5b202c3131\n"
".quad 0x79685f645f524c33,0x6650324443424162,0x61705f696d665f53,0x0a3b5d315f6d6172\n"
".quad 0x2e6f742e61747663,0x752e6c61626f6c67,0x33386c7225203436,0x3131336c7225202c\n"
".quad 0x36622e6c68730a3b,0x2c34386c72252034,0x202c32386c722520,0x2e7268730a3b3233\n"
".quad 0x386c722520343673,0x34386c7225202c35,0x6c2e0a3b3233202c,0x303232203220636f\n"
".quad 0x2e6c68730a312036,0x386c722520343662,0x35386c7225202c36,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x386c7225202c3738,0x36386c7225202c33,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x2c5d37386c72255b,0x0a3b313033662520,0x203436732e646461\n"
".quad 0x25202c38386c7225,0x393034202c396c72,0x20636f6c2e0a3b36,0x3120383631322032\n"
".quad 0x2e6f6c2e64616d0a,0x386c722520343673,0x38386c7225202c39,0x3331336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x25202c30396c7225,0x3233202c39386c72\n"
".quad 0x36732e7268730a3b,0x2c31396c72252034,0x202c30396c722520,0x636f6c2e0a3b3233\n"
".quad 0x2038363132203220,0x36622e6c68730a31,0x2c32396c72252034,0x202c31396c722520\n"
".quad 0x732e6464610a3b32,0x33396c7225203436,0x2c33386c7225202c,0x0a3b32396c722520\n"
".quad 0x32203220636f6c2e,0x74730a3120373032,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x336625202c5d3339,0x2e6464610a3b3830,0x396c722520343673,0x2c396c7225202c34\n"
".quad 0x2e0a3b3239313820,0x3132203220636f6c,0x64616d0a31203936,0x203436732e6f6c2e\n"
".quad 0x25202c35396c7225,0x7225202c34396c72,0x7225202c3331336c,0x2e6c68730a3b356c\n"
".quad 0x396c722520343662,0x35396c7225202c36,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c37396c,0x0a3b3233202c3639,0x32203220636f6c2e,0x68730a3120393631\n"
".quad 0x7225203436622e6c,0x6c7225202c38396c,0x610a3b32202c3739,0x25203436732e6464\n"
".quad 0x7225202c39396c72,0x6c7225202c33386c,0x636f6c2e0a3b3839,0x2038303232203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d39396c72255b,0x0a3b363133662520\n"
".quad 0x203436732e646461,0x202c3030316c7225,0x3231202c396c7225,0x6f6c2e0a3b383832\n"
".quad 0x3037313220322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3130316c\n"
".quad 0x7225202c3030316c,0x7225202c3331336c,0x2e6c68730a3b356c,0x316c722520343662\n"
".quad 0x316c7225202c3230,0x0a3b3233202c3130,0x203436732e726873,0x202c3330316c7225\n"
".quad 0x202c3230316c7225,0x636f6c2e0a3b3233,0x2030373132203220,0x36622e6c68730a31\n"
".quad 0x3430316c72252034,0x3330316c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c353031,0x316c7225202c3338,0x636f6c2e0a3b3430,0x2039303232203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3530316c72255b,0x3b3032336625202c\n"
".quad 0x3436732e6464610a,0x2c3630316c722520,0x31202c396c722520,0x6c2e0a3b34383336\n"
".quad 0x373132203220636f,0x2e64616d0a312031,0x25203436732e6f6c,0x25202c3730316c72\n"
".quad 0x25202c3630316c72,0x25202c3331336c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c383031,0x3b3233202c373031,0x3436732e7268730a,0x2c3930316c722520\n"
".quad 0x2c3830316c722520,0x6f6c2e0a3b323320,0x3137313220322063,0x622e6c68730a3120\n"
".quad 0x31316c7225203436,0x30316c7225202c30,0x64610a3b32202c39,0x7225203436732e64\n"
".quad 0x7225202c3131316c,0x6c7225202c33386c,0x6f6c2e0a3b303131,0x3031323220322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3131316c72255b20,0x3632336625202c5d\n"
".quad 0x36732e6464610a3b,0x3231316c72252034,0x202c396c7225202c,0x2e0a3b3038343032\n"
".quad 0x3132203220636f6c,0x64616d0a31203237,0x203436732e6f6c2e,0x202c3331316c7225\n"
".quad 0x202c3231316c7225,0x202c3331336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3431316c,0x3233202c3331316c,0x36732e7268730a3b,0x3531316c72252034\n"
".quad 0x3431316c7225202c,0x6c2e0a3b3233202c,0x373132203220636f,0x2e6c68730a312032\n"
".quad 0x316c722520343662,0x316c7225202c3631,0x610a3b32202c3531,0x25203436732e6464\n"
".quad 0x25202c3731316c72,0x7225202c33386c72,0x6c2e0a3b3631316c,0x313232203220636f\n"
".quad 0x672e74730a312031,0x33662e6c61626f6c,0x31316c72255b2032,0x33336625202c5d37\n"
".quad 0x732e6464610a3b38,0x31316c7225203436,0x2c396c7225202c38,0x0a3b363735343220\n"
".quad 0x32203220636f6c2e,0x616d0a3120333731,0x3436732e6f6c2e64,0x2c3931316c722520\n"
".quad 0x2c3831316c722520,0x2c3331336c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3032316c72,0x33202c3931316c72,0x732e7268730a3b32,0x32316c7225203436\n"
".quad 0x32316c7225202c31,0x2e0a3b3233202c30,0x3132203220636f6c,0x6c68730a31203337\n"
".quad 0x6c7225203436622e,0x6c7225202c323231,0x0a3b32202c313231,0x203436732e646461\n"
".quad 0x202c3332316c7225,0x25202c33386c7225,0x2e0a3b3232316c72,0x3232203220636f6c\n"
".quad 0x2e74730a31203231,0x662e6c61626f6c67,0x316c72255b203233,0x336625202c5d3332\n"
".quad 0x2e6464610a3b3135,0x316c722520343673,0x396c7225202c3432,0x3b3237363832202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312034373132,0x36732e6f6c2e6461,0x3532316c72252034\n"
".quad 0x3432316c7225202c,0x3331336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3632316c7225,0x202c3532316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3732,0x0a3b3233202c3632,0x32203220636f6c2e,0x68730a3120343731\n"
".quad 0x7225203436622e6c,0x7225202c3832316c,0x3b32202c3732316c,0x3436732e6464610a\n"
".quad 0x2c3932316c722520,0x202c33386c722520,0x0a3b3832316c7225,0x32203220636f6c2e\n"
".quad 0x74730a3120333132,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d393231\n"
".quad 0x6464610a3b313633,0x6c7225203436732e,0x6c7225202c303331,0x3836373233202c39\n"
".quad 0x3220636f6c2e0a3b,0x0a31203537313220,0x732e6f6c2e64616d,0x33316c7225203436\n"
".quad 0x33316c7225202c31,0x31336c7225202c30,0x3b356c7225202c33,0x3436622e6c68730a\n"
".quad 0x2c3233316c722520,0x2c3133316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c333331,0x3b3233202c323331,0x203220636f6c2e0a,0x730a312035373132\n"
".quad 0x25203436622e6c68,0x25202c3433316c72,0x32202c3333316c72,0x36732e6464610a3b\n"
".quad 0x3533316c72252034,0x2c33386c7225202c,0x3b3433316c722520,0x203220636f6c2e0a\n"
".quad 0x730a312034313232,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3533316c\n"
".quad 0x64610a3b30373366,0x7225203436732e64,0x7225202c3633316c,0x36383633202c396c\n"
".quad 0x20636f6c2e0a3b34,0x3120363731322032,0x2e6f6c2e64616d0a,0x316c722520343673\n"
".quad 0x316c7225202c3733,0x336c7225202c3633,0x356c7225202c3331,0x36622e6c68730a3b\n"
".quad 0x3833316c72252034,0x3733316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3933316c,0x3233202c3833316c,0x3220636f6c2e0a3b,0x0a31203637313220\n"
".quad 0x203436622e6c6873,0x202c3034316c7225,0x202c3933316c7225,0x732e6464610a3b32\n"
".quad 0x34316c7225203436,0x33386c7225202c31,0x3034316c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203531323220,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3134316c72\n"
".quad 0x610a3b3837336625,0x25203436732e6464,0x25202c3234316c72,0x393034202c396c72\n"
".quad 0x636f6c2e0a3b3036,0x2037373132203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c333431,0x6c7225202c323431,0x6c7225202c333133,0x622e6c68730a3b35\n"
".quad 0x34316c7225203436,0x34316c7225202c34,0x730a3b3233202c33,0x25203436732e7268\n"
".quad 0x25202c3534316c72,0x33202c3434316c72,0x20636f6c2e0a3b32,0x3120373731322032\n"
".quad 0x3436622e6c68730a,0x2c3634316c722520,0x2c3534316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x386c7225202c3734,0x34316c7225202c33,0x20636f6c2e0a3b36\n"
".quad 0x3120363132322032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3734316c7225\n"
".quad 0x0a3b383833662520,0x203436732e646461,0x202c3834316c7225,0x3534202c396c7225\n"
".quad 0x6f6c2e0a3b363530,0x3837313220322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3934316c,0x7225202c3834316c,0x7225202c3331336c,0x2e6c68730a3b356c\n"
".quad 0x316c722520343662,0x316c7225202c3035,0x0a3b3233202c3934,0x203436732e726873\n"
".quad 0x202c3135316c7225,0x202c3035316c7225,0x636f6c2e0a3b3233,0x2038373132203220\n"
".quad 0x36622e6c68730a31,0x3235316c72252034,0x3135316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c333531,0x316c7225202c3338,0x636f6c2e0a3b3235\n"
".quad 0x2037313232203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3335316c72255b\n"
".quad 0x3b3739336625202c,0x3436732e6464610a,0x2c3435316c722520,0x34202c396c722520\n"
".quad 0x6c2e0a3b32353139,0x373132203220636f,0x2e64616d0a312039,0x25203436732e6f6c\n"
".quad 0x25202c3535316c72,0x25202c3435316c72,0x25202c3331336c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c363531,0x3b3233202c353531,0x3436732e7268730a\n"
".quad 0x2c3735316c722520,0x2c3635316c722520,0x6f6c2e0a3b323320,0x3937313220322063\n"
".quad 0x622e6c68730a3120,0x35316c7225203436,0x35316c7225202c38,0x64610a3b32202c37\n"
".quad 0x7225203436732e64,0x7225202c3935316c,0x6c7225202c33386c,0x6f6c2e0a3b383531\n"
".quad 0x3831323220322063,0x6c672e74730a3120,0x3233662e6c61626f,0x3935316c72255b20\n"
".quad 0x3730346625202c5d,0x36732e6464610a3b,0x3036316c72252034,0x202c396c7225202c\n"
".quad 0x2e0a3b3834323335,0x3132203220636f6c,0x64616d0a31203038,0x203436732e6f6c2e\n"
".quad 0x202c3136316c7225,0x202c3036316c7225,0x202c3331336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3236316c,0x3233202c3136316c,0x36732e7268730a3b\n"
".quad 0x3336316c72252034,0x3236316c7225202c,0x6c2e0a3b3233202c,0x383132203220636f\n"
".quad 0x2e6c68730a312030,0x316c722520343662,0x316c7225202c3436,0x610a3b32202c3336\n"
".quad 0x25203436732e6464,0x25202c3536316c72,0x7225202c33386c72,0x6c2e0a3b3436316c\n"
".quad 0x313232203220636f,0x672e74730a312039,0x33662e6c61626f6c,0x36316c72255b2032\n"
".quad 0x31346625202c5d35,0x732e6464610a3b36,0x36316c7225203436,0x2c396c7225202c36\n"
".quad 0x0a3b343433373520,0x32203220636f6c2e,0x616d0a3120313831,0x3436732e6f6c2e64\n"
".quad 0x2c3736316c722520,0x2c3636316c722520,0x2c3331336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3836316c72,0x33202c3736316c72,0x732e7268730a3b32\n"
".quad 0x36316c7225203436,0x36316c7225202c39,0x2e0a3b3233202c38,0x3132203220636f6c\n"
".quad 0x6c68730a31203138,0x6c7225203436622e,0x6c7225202c303731,0x0a3b32202c393631\n"
".quad 0x203436732e646461,0x202c3137316c7225,0x25202c33386c7225,0x2e0a3b3037316c72\n"
".quad 0x3232203220636f6c,0x2e74730a31203032,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x346625202c5d3137,0x2e6464610a3b3232,0x316c722520343673,0x396c7225202c3237\n"
".quad 0x3b3034343136202c,0x203220636f6c2e0a,0x6d0a312032383132,0x36732e6f6c2e6461\n"
".quad 0x3337316c72252034,0x3237316c7225202c,0x3331336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3437316c7225,0x202c3337316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3537,0x0a3b3233202c3437,0x32203220636f6c2e\n"
".quad 0x68730a3120323831,0x7225203436622e6c,0x7225202c3637316c,0x3b32202c3537316c\n"
".quad 0x3436732e6464610a,0x2c3737316c722520,0x202c33386c722520,0x0a3b3637316c7225\n"
".quad 0x32203220636f6c2e,0x74730a3120313232,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d373731,0x6464610a3b323334,0x6c7225203436732e,0x6c7225202c383731\n"
".quad 0x3633353536202c39,0x3220636f6c2e0a3b,0x0a31203338313220,0x732e6f6c2e64616d\n"
".quad 0x37316c7225203436,0x37316c7225202c39,0x31336c7225202c38,0x3b356c7225202c33\n"
".quad 0x3436622e6c68730a,0x2c3038316c722520,0x2c3937316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c313831,0x3b3233202c303831,0x203220636f6c2e0a\n"
".quad 0x730a312033383132,0x25203436622e6c68,0x25202c3238316c72,0x32202c3138316c72\n"
".quad 0x36732e6464610a3b,0x3338316c72252034,0x2c33386c7225202c,0x3b3238316c722520\n"
".quad 0x203220636f6c2e0a,0x730a312032323232,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3338316c,0x64610a3b39333466,0x7225203436732e64,0x7225202c3438316c\n"
".quad 0x33363936202c396c,0x20636f6c2e0a3b32,0x3120343831322032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3538,0x336c7225202c3438,0x356c7225202c3331\n"
".quad 0x36622e6c68730a3b,0x3638316c72252034,0x3538316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3738316c,0x3233202c3638316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203438313220,0x203436622e6c6873,0x202c3838316c7225,0x202c3738316c7225\n"
".quad 0x732e6464610a3b32,0x38316c7225203436,0x33386c7225202c39,0x3838316c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203332323220,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3938316c72,0x610a3b3834346625,0x25203436732e6464,0x25202c3039316c72\n"
".quad 0x373337202c396c72,0x636f6c2e0a3b3832,0x2035383132203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c313931,0x6c7225202c303931,0x6c7225202c333133\n"
".quad 0x622e6c68730a3b35,0x39316c7225203436,0x39316c7225202c32,0x730a3b3233202c31\n"
".quad 0x25203436732e7268,0x25202c3339316c72,0x33202c3239316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120353831322032,0x3436622e6c68730a,0x2c3439316c722520,0x2c3339316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x386c7225202c3539,0x39316c7225202c33\n"
".quad 0x20636f6c2e0a3b34,0x3120343232322032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3539316c7225,0x0a3b353534662520,0x32203220636f6c2e,0x65720a3220373232\n"
".quad 0x303242420a0a3b74,0x2e6464610a3a355f,0x316c722520343673,0x366c7225202c3839\n"
".quad 0x0a3b376c7225202c,0x203436732e646461,0x202c3939316c7225,0x202c3839316c7225\n"
".quad 0x646c0a3b36393034,0x752e6d617261702e,0x31336c7225203436,0x33315a5f5b202c32\n"
".quad 0x6279685f645f524c,0x5366503244434241,0x7261705f696d665f,0x2e0a3b5d335f6d61\n"
".quad 0x3132203220636f6c,0x64616d0a31203836,0x203436732e6f6c2e,0x202c3130326c7225\n"
".quad 0x202c3939316c7225,0x202c3231336c7225,0x646c0a3b356c7225,0x752e6d617261702e\n"
".quad 0x31336c7225203436,0x33315a5f5b202c30,0x6279685f645f524c,0x5366503244434241\n"
".quad 0x7261705f696d665f,0x630a3b5d315f6d61,0x672e6f742e617476,0x36752e6c61626f6c\n"
".quad 0x3230326c72252034,0x3031336c7225202c,0x36622e6c68730a3b,0x3330326c72252034\n"
".quad 0x3130326c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3430326c\n"
".quad 0x3233202c3330326c,0x3220636f6c2e0a3b,0x0a31203836313220,0x203436622e6c6873\n"
".quad 0x202c3530326c7225,0x202c3430326c7225,0x732e6464610a3b32,0x30326c7225203436\n"
".quad 0x30326c7225202c36,0x30326c7225202c32,0x6c672e74730a3b35,0x3233662e6c61626f\n"
".quad 0x3630326c72255b20,0x3b31346625202c5d,0x3436732e6464610a,0x2c3730326c722520\n"
".quad 0x2c3839316c722520,0x2e0a3b3239313820,0x3132203220636f6c,0x64616d0a31203936\n"
".quad 0x203436732e6f6c2e,0x202c3830326c7225,0x202c3730326c7225,0x202c3231336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3930326c,0x3233202c3830326c\n"
".quad 0x36732e7268730a3b,0x3031326c72252034,0x3930326c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x363132203220636f,0x2e6c68730a312039,0x326c722520343662,0x326c7225202c3131\n"
".quad 0x610a3b32202c3031,0x25203436732e6464,0x25202c3231326c72,0x25202c3230326c72\n"
".quad 0x730a3b3131326c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3231326c\n"
".quad 0x2e6464610a3b3566,0x326c722520343673,0x316c7225202c3331,0x38323231202c3839\n"
".quad 0x20636f6c2e0a3b38,0x3120303731322032,0x2e6f6c2e64616d0a,0x326c722520343673\n"
".quad 0x326c7225202c3431,0x336c7225202c3331,0x356c7225202c3231,0x36622e6c68730a3b\n"
".quad 0x3531326c72252034,0x3431326c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3631326c,0x3233202c3531326c,0x3220636f6c2e0a3b,0x0a31203037313220\n"
".quad 0x203436622e6c6873,0x202c3731326c7225,0x202c3631326c7225,0x732e6464610a3b32\n"
".quad 0x31326c7225203436,0x30326c7225202c38,0x31326c7225202c32,0x6c672e74730a3b37\n"
".quad 0x3233662e6c61626f,0x3831326c72255b20,0x3b35336625202c5d,0x3436732e6464610a\n"
".quad 0x2c3931326c722520,0x2c3839316c722520,0x0a3b343833363120,0x32203220636f6c2e\n"
".quad 0x616d0a3120313731,0x3436732e6f6c2e64,0x2c3032326c722520,0x2c3931326c722520\n"
".quad 0x2c3231336c722520,0x730a3b356c722520,0x25203436622e6c68,0x25202c3132326c72\n"
".quad 0x33202c3032326c72,0x732e7268730a3b32,0x32326c7225203436,0x32326c7225202c32\n"
".quad 0x2e0a3b3233202c31,0x3132203220636f6c,0x6c68730a31203137,0x6c7225203436622e\n"
".quad 0x6c7225202c333232,0x0a3b32202c323232,0x203436732e646461,0x202c3432326c7225\n"
".quad 0x202c3230326c7225,0x0a3b3332326c7225,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3432326c72,0x6464610a3b346625,0x6c7225203436732e,0x6c7225202c353232\n"
".quad 0x343032202c383931,0x636f6c2e0a3b3038,0x2032373132203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c363232,0x6c7225202c353232,0x6c7225202c323133\n"
".quad 0x622e6c68730a3b35,0x32326c7225203436,0x32326c7225202c37,0x730a3b3233202c36\n"
".quad 0x25203436732e7268,0x25202c3832326c72,0x33202c3732326c72,0x20636f6c2e0a3b32\n"
".quad 0x3120323731322032,0x3436622e6c68730a,0x2c3932326c722520,0x2c3832326c722520\n"
".quad 0x2e6464610a3b3220,0x326c722520343673,0x326c7225202c3033,0x326c7225202c3230\n"
".quad 0x672e74730a3b3932,0x33662e6c61626f6c,0x33326c72255b2032,0x39356625202c5d30\n"
".quad 0x36732e6464610a3b,0x3133326c72252034,0x3839316c7225202c,0x3b3637353432202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312033373132,0x36732e6f6c2e6461,0x3233326c72252034\n"
".quad 0x3133326c7225202c,0x3231336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3333326c7225,0x202c3233326c7225,0x2e7268730a3b3233,0x326c722520343673\n"
".quad 0x326c7225202c3433,0x0a3b3233202c3333,0x32203220636f6c2e,0x68730a3120333731\n"
".quad 0x7225203436622e6c,0x7225202c3533326c,0x3b32202c3433326c,0x3436732e6464610a\n"
".quad 0x2c3633326c722520,0x2c3230326c722520,0x3b3533326c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3633326c7225,0x610a3b3536662520,0x25203436732e6464\n"
".quad 0x25202c3733326c72,0x32202c3839316c72,0x6c2e0a3b32373638,0x373132203220636f\n"
".quad 0x2e64616d0a312034,0x25203436732e6f6c,0x25202c3833326c72,0x25202c3733326c72\n"
".quad 0x25202c3231336c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c393332\n"
".quad 0x3b3233202c383332,0x3436732e7268730a,0x2c3034326c722520,0x2c3933326c722520\n"
".quad 0x6f6c2e0a3b323320,0x3437313220322063,0x622e6c68730a3120,0x34326c7225203436\n"
".quad 0x34326c7225202c31,0x64610a3b32202c30,0x7225203436732e64,0x7225202c3234326c\n"
".quad 0x7225202c3230326c,0x74730a3b3134326c,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d323432,0x2e6464610a3b3734,0x326c722520343673,0x316c7225202c3334\n"
".quad 0x36373233202c3839,0x20636f6c2e0a3b38,0x3120353731322032,0x2e6f6c2e64616d0a\n"
".quad 0x326c722520343673,0x326c7225202c3434,0x336c7225202c3334,0x356c7225202c3231\n"
".quad 0x36622e6c68730a3b,0x3534326c72252034,0x3434326c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3634326c,0x3233202c3534326c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203537313220,0x203436622e6c6873,0x202c3734326c7225,0x202c3634326c7225\n"
".quad 0x732e6464610a3b32,0x34326c7225203436,0x30326c7225202c38,0x34326c7225202c32\n"
".quad 0x6c672e74730a3b37,0x3233662e6c61626f,0x3834326c72255b20,0x3b33356625202c5d\n"
".quad 0x3436732e6464610a,0x2c3934326c722520,0x2c3839316c722520,0x0a3b343638363320\n"
".quad 0x32203220636f6c2e,0x616d0a3120363731,0x3436732e6f6c2e64,0x2c3035326c722520\n"
".quad 0x2c3934326c722520,0x2c3231336c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3135326c72,0x33202c3035326c72,0x732e7268730a3b32,0x35326c7225203436\n"
".quad 0x35326c7225202c32,0x2e0a3b3233202c31,0x3132203220636f6c,0x6c68730a31203637\n"
".quad 0x6c7225203436622e,0x6c7225202c333532,0x0a3b32202c323532,0x203436732e646461\n"
".quad 0x202c3435326c7225,0x202c3230326c7225,0x0a3b3335326c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3435326c72,0x6464610a3b396625,0x6c7225203436732e\n"
".quad 0x6c7225202c353532,0x393034202c383931,0x636f6c2e0a3b3036,0x2037373132203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c363532,0x6c7225202c353532\n"
".quad 0x6c7225202c323133,0x622e6c68730a3b35,0x35326c7225203436,0x35326c7225202c37\n"
".quad 0x730a3b3233202c36,0x25203436732e7268,0x25202c3835326c72,0x33202c3735326c72\n"
".quad 0x20636f6c2e0a3b32,0x3120373731322032,0x3436622e6c68730a,0x2c3935326c722520\n"
".quad 0x2c3835326c722520,0x2e6464610a3b3220,0x326c722520343673,0x326c7225202c3036\n"
".quad 0x326c7225202c3230,0x672e74730a3b3935,0x33662e6c61626f6c,0x36326c72255b2032\n"
".quad 0x37376625202c5d30,0x36732e6464610a3b,0x3136326c72252034,0x3839316c7225202c\n"
".quad 0x3b3635303534202c,0x203220636f6c2e0a,0x6d0a312038373132,0x36732e6f6c2e6461\n"
".quad 0x3236326c72252034,0x3136326c7225202c,0x3231336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3336326c7225,0x202c3236326c7225,0x2e7268730a3b3233\n"
".quad 0x326c722520343673,0x326c7225202c3436,0x0a3b3233202c3336,0x32203220636f6c2e\n"
".quad 0x68730a3120383731,0x7225203436622e6c,0x7225202c3536326c,0x3b32202c3436326c\n"
".quad 0x3436732e6464610a,0x2c3636326c722520,0x2c3230326c722520,0x3b3536326c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3636326c7225,0x0a3b373534662520\n"
".quad 0x203436732e646461,0x202c3736326c7225,0x202c3839316c7225,0x2e0a3b3235313934\n"
".quad 0x3132203220636f6c,0x64616d0a31203937,0x203436732e6f6c2e,0x202c3836326c7225\n"
".quad 0x202c3736326c7225,0x202c3231336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3936326c,0x3233202c3836326c,0x36732e7268730a3b,0x3037326c72252034\n"
".quad 0x3936326c7225202c,0x6c2e0a3b3233202c,0x373132203220636f,0x2e6c68730a312039\n"
".quad 0x326c722520343662,0x326c7225202c3137,0x610a3b32202c3037,0x25203436732e6464\n"
".quad 0x25202c3237326c72,0x25202c3230326c72,0x730a3b3137326c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3237326c,0x6464610a3b313766,0x6c7225203436732e\n"
".quad 0x6c7225202c333732,0x323335202c383931,0x636f6c2e0a3b3834,0x2030383132203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c343732,0x6c7225202c333732\n"
".quad 0x6c7225202c323133,0x622e6c68730a3b35,0x37326c7225203436,0x37326c7225202c35\n"
".quad 0x730a3b3233202c34,0x25203436732e7268,0x25202c3637326c72,0x33202c3537326c72\n"
".quad 0x20636f6c2e0a3b32,0x3120303831322032,0x3436622e6c68730a,0x2c3737326c722520\n"
".quad 0x2c3637326c722520,0x2e6464610a3b3220,0x326c722520343673,0x326c7225202c3837\n"
".quad 0x326c7225202c3230,0x672e74730a3b3737,0x33662e6c61626f6c,0x37326c72255b2032\n"
".quad 0x30316625202c5d38,0x36732e6464610a3b,0x3937326c72252034,0x3839316c7225202c\n"
".quad 0x3b3434333735202c,0x203220636f6c2e0a,0x6d0a312031383132,0x36732e6f6c2e6461\n"
".quad 0x3038326c72252034,0x3937326c7225202c,0x3231336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3138326c7225,0x202c3038326c7225,0x2e7268730a3b3233\n"
".quad 0x326c722520343673,0x326c7225202c3238,0x0a3b3233202c3138,0x32203220636f6c2e\n"
".quad 0x68730a3120313831,0x7225203436622e6c,0x7225202c3338326c,0x3b32202c3238326c\n"
".quad 0x3436732e6464610a,0x2c3438326c722520,0x2c3230326c722520,0x3b3338326c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3438326c7225,0x64610a3b36662520\n"
".quad 0x7225203436732e64,0x7225202c3538326c,0x3136202c3839316c,0x6f6c2e0a3b303434\n"
".quad 0x3238313220322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3638326c\n"
".quad 0x7225202c3538326c,0x7225202c3231336c,0x2e6c68730a3b356c,0x326c722520343662\n"
".quad 0x326c7225202c3738,0x0a3b3233202c3638,0x203436732e726873,0x202c3838326c7225\n"
".quad 0x202c3738326c7225,0x636f6c2e0a3b3233,0x2032383132203220,0x36622e6c68730a31\n"
".quad 0x3938326c72252034,0x3838326c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c303932,0x6c7225202c323032,0x2e74730a3b393832,0x662e6c61626f6c67\n"
".quad 0x326c72255b203233,0x386625202c5d3039,0x732e6464610a3b39,0x39326c7225203436\n"
".quad 0x39316c7225202c31,0x3633353536202c38,0x3220636f6c2e0a3b,0x0a31203338313220\n"
".quad 0x732e6f6c2e64616d,0x39326c7225203436,0x39326c7225202c32,0x31336c7225202c31\n"
".quad 0x3b356c7225202c32,0x3436622e6c68730a,0x2c3339326c722520,0x2c3239326c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c343932,0x3b3233202c333932\n"
".quad 0x203220636f6c2e0a,0x730a312033383132,0x25203436622e6c68,0x25202c3539326c72\n"
".quad 0x32202c3439326c72,0x36732e6464610a3b,0x3639326c72252034,0x3230326c7225202c\n"
".quad 0x3539326c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3639326c72255b\n"
".quad 0x610a3b386625202c,0x25203436732e6464,0x25202c3739326c72,0x36202c3839316c72\n"
".quad 0x6c2e0a3b32333639,0x383132203220636f,0x2e64616d0a312034,0x25203436732e6f6c\n"
".quad 0x25202c3839326c72,0x25202c3739326c72,0x25202c3231336c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c393932,0x3b3233202c383932,0x3436732e7268730a\n"
".quad 0x2c3030336c722520,0x2c3939326c722520,0x6f6c2e0a3b323320,0x3438313220322063\n"
".quad 0x622e6c68730a3120,0x30336c7225203436,0x30336c7225202c31,0x64610a3b32202c30\n"
".quad 0x7225203436732e64,0x7225202c3230336c,0x7225202c3230326c,0x74730a3b3130336c\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d323033,0x2e6464610a3b3338\n"
".quad 0x336c722520343673,0x316c7225202c3330,0x32373337202c3839,0x20636f6c2e0a3b38\n"
".quad 0x3120353831322032,0x2e6f6c2e64616d0a,0x336c722520343673,0x336c7225202c3430\n"
".quad 0x336c7225202c3330,0x356c7225202c3231,0x36622e6c68730a3b,0x3530336c72252034\n"
".quad 0x3430336c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3630336c\n"
".quad 0x3233202c3530336c,0x3220636f6c2e0a3b,0x0a31203538313220,0x203436622e6c6873\n"
".quad 0x202c3730336c7225,0x202c3630336c7225,0x732e6464610a3b32,0x30336c7225203436\n"
".quad 0x30326c7225202c38,0x30336c7225202c32,0x6c672e74730a3b37,0x3233662e6c61626f\n"
".quad 0x3830336c72255b20,0x0a3b376625202c5d,0x3a365f303242420a,0x203220636f6c2e0a\n"
".quad 0x720a322037323232,0x2e0a0a7d0a3b7465,0x5a5f207972746e65,0x685f645f524c3231\n"
".quad 0x6650434442416279,0x2e0a28666d665f53,0x752e206d61726170,0x4c32315a5f203436\n"
".quad 0x416279685f645f52,0x665f536650434442,0x6d617261705f666d,0x7261702e0a2c305f\n"
".quad 0x203436752e206d61,0x645f524c32315a5f,0x434442416279685f,0x5f666d665f536650\n"
".quad 0x2c315f6d61726170,0x206d617261702e0a,0x315a5f203233662e,0x79685f645f524c32\n"
".quad 0x5366504344424162,0x7261705f666d665f,0x702e0a2c325f6d61,0x36752e206d617261\n"
".quad 0x524c32315a5f2034,0x42416279685f645f,0x6d665f5366504344,0x5f6d617261705f66\n"
".quad 0x617261702e0a2c33,0x5f203233662e206d,0x5f645f524c32315a,0x5043444241627968\n"
".quad 0x705f666d665f5366,0x290a345f6d617261,0x206765722e0a7b0a,0x3c6625203233662e\n"
".quad 0x722e0a3b3e383534,0x646572702e206765,0x3b3e32313c702520,0x732e206765722e0a\n"
".quad 0x32313c7225203233,0x6765722e0a3b3e37,0x7225203436732e20,0x0a3b3e3631333c6c\n"
".quad 0x7261702e646c0a0a,0x25203436752e6d61,0x5a5f5b202c316c72,0x685f645f524c3231\n"
".quad 0x6650434442416279,0x61705f666d665f53,0x0a3b5d305f6d6172,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x32315a5f5b202c33,0x6279685f645f524c,0x5f53665043444241\n"
".quad 0x617261705f666d66,0x76630a3b5d335f6d,0x6c672e6f742e6174,0x3436752e6c61626f\n"
".quad 0x25202c346c722520,0x6f6c2e0a3b316c72,0x3133323220322063,0x752e766f6d0a3120\n"
".quad 0x202c367225203233,0x3b782e6469746e25,0x3233752e766f6d0a,0x6325202c37722520\n"
".quad 0x0a3b782e64696174,0x203233752e766f6d,0x697425202c327225,0x64616d0a3b782e64\n"
".quad 0x203233732e6f6c2e,0x367225202c387225,0x25202c377225202c,0x636f6c2e0a3b3272\n"
".quad 0x2032333232203220,0x33752e766f6d0a31,0x25202c3972252032,0x0a3b792e6469746e\n"
".quad 0x203233752e766f6d,0x6325202c30317225,0x0a3b792e64696174,0x203233752e766f6d\n"
".quad 0x7425202c31317225,0x616d0a3b792e6469,0x3233732e6f6c2e64,0x7225202c33722520\n"
".quad 0x2c30317225202c39,0x2e0a3b3131722520,0x3232203220636f6c,0x766f6d0a31203333\n"
".quad 0x317225203233752e,0x6469746e25202c32,0x2e766f6d0a3b7a2e,0x3331722520323375\n"
".quad 0x646961746325202c,0x2e766f6d0a3b7a2e,0x3431722520323375,0x7a2e64697425202c\n"
".quad 0x6f6c2e64616d0a3b,0x347225203233732e,0x202c32317225202c,0x7225202c33317225\n"
".quad 0x636f6c2e0a3b3431,0x2034333232203220,0x6e722e7476630a31,0x3233732e3233662e\n"
".quad 0x25202c3332662520,0x2e616d660a3b3872,0x25203233662e6e72,0x326625202c343266\n"
".quad 0x3046336630202c33,0x30202c3030303030,0x3030304337313466,0x20636f6c2e0a3b30\n"
".quad 0x3120353332322032,0x2e6e722e7476630a,0x203233732e323366,0x337225202c326625\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x202c326625202c35,0x3030303046336630\n"
".quad 0x31346630202c3030,0x0a3b303030304337,0x32203220636f6c2e,0x76630a3120363332\n"
".quad 0x3233662e6e722e74,0x326625203233732e,0x0a3b347225202c36,0x662e6e722e616d66\n"
".quad 0x2c37326625203233,0x30202c3632662520,0x3030303030463366,0x3731346630202c30\n"
".quad 0x630a3b3030303043,0x752e3436752e7476,0x2c356c7225203233,0x6c2e0a3b38722520\n"
".quad 0x333232203220636f,0x2e7476630a312039,0x203233732e343673,0x7225202c366c7225\n"
".quad 0x622e6c68730a3b33,0x202c357225203233,0x0a3b36202c347225,0x32203220636f6c2e\n"
".quad 0x76630a3120393332,0x33732e3436732e74,0x202c376c72252032,0x6464610a3b357225\n"
".quad 0x6c7225203436732e,0x2c376c7225202c39,0x2e0a3b366c722520,0x3232203220636f6c\n"
".quad 0x64616d0a31203933,0x203436732e6f6c2e,0x7225202c386c7225,0x336c7225202c396c\n"
".quad 0x0a3b356c7225202c,0x203233662e646461,0x6625202c38326625,0x32436630202c3432\n"
".quad 0x0a3b303030304537,0x203233662e646461,0x6625202c39326625,0x31436630202c3532\n"
".quad 0x0a3b303030304346,0x37203220636f6c2e,0x2e6c756d0a312030,0x3033662520323366\n"
".quad 0x202c39326625202c,0x6d660a3b39326625,0x3233662e6e722e61,0x25202c3133662520\n"
".quad 0x326625202c383266,0x3b30336625202c38,0x3233662e6464610a,0x25202c3233662520\n"
".quad 0x436630202c373266,0x3b30303030434631,0x203220636f6c2e0a,0x616d660a31203037\n"
".quad 0x203233662e6e722e,0x6625202c33336625,0x32336625202c3233,0x0a3b31336625202c\n"
".quad 0x2e746c2e70746573,0x2c31702520323366,0x30202c3333662520,0x3030303038313466\n"
".quad 0x732e6464610a3b30,0x2c35317225203233,0x322d202c38722520,0x672e707465730a3b\n"
".quad 0x7025203233752e74,0x2c35317225202c32,0x6f6c2e0a3b393520,0x3234323220322063\n"
".quad 0x2e707465730a3120,0x25203233732e746c,0x2c337225202c3370,0x702e726f0a3b3220\n"
".quad 0x2c34702520646572,0x7025202c32702520,0x20636f6c2e0a3b33,0x3120323432322032\n"
".quad 0x74672e707465730a,0x357025203233732e,0x36202c337225202c,0x72702e726f0a3b31\n"
".quad 0x202c367025206465,0x357025202c347025,0x3220636f6c2e0a3b,0x0a31203234323220\n"
".quad 0x2e746c2e70746573,0x2c37702520323373,0x3b32202c34722520,0x646572702e726f0a\n"
".quad 0x7025202c38702520,0x0a3b377025202c36,0x32203220636f6c2e,0x65730a3120323432\n"
".quad 0x33732e74672e7074,0x25202c3970252032,0x0a3b3136202c3472,0x20646572702e726f\n"
".quad 0x7025202c30317025,0x0a3b397025202c38,0x32203220636f6c2e,0x25400a3120323432\n"
".quad 0x2061726220303170,0x0a3b365f31324242,0x3436622e6c68730a,0x202c30316c722520\n"
".quad 0x3233202c386c7225,0x36732e7268730a3b,0x2c31316c72252034,0x202c30316c722520\n"
".quad 0x636f6c2e0a3b3233,0x2037343232203220,0x36622e6c68730a31,0x2c32316c72252034\n"
".quad 0x202c31316c722520,0x732e6464610a3b32,0x33316c7225203436,0x202c346c7225202c\n"
".quad 0x6c0a3b32316c7225,0x6c61626f6c672e64,0x336625203233662e,0x33316c72255b202c\n"
".quad 0x732e6464610a3b5d,0x2c37317225203233,0x312d202c33722520,0x3220636f6c2e0a3b\n"
".quad 0x0a31203834323220,0x2e3436732e747663,0x316c722520323373,0x3b37317225202c34\n"
".quad 0x3436732e6464610a,0x202c35316c722520,0x25202c34316c7225,0x6464610a3b376c72\n"
".quad 0x6c7225203436732e,0x316c7225202c3631,0x3b32393138202c35,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3531336c,0x5f645f524c32315a,0x5043444241627968\n"
".quad 0x705f666d665f5366,0x3b5d335f6d617261,0x203220636f6c2e0a,0x6d0a312038343232\n"
".quad 0x36732e6f6c2e6461,0x2c37316c72252034,0x202c36316c722520,0x202c3531336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x6c7225202c38316c,0x0a3b3233202c3731\n"
".quad 0x203436732e726873,0x25202c39316c7225,0x3233202c38316c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203834323220,0x203436622e6c6873,0x25202c30326c7225,0x3b32202c39316c72\n"
".quad 0x3436732e6464610a,0x202c31326c722520,0x7225202c346c7225,0x2e646c0a3b30326c\n"
".quad 0x662e6c61626f6c67,0x202c346625203233,0x3b5d31326c72255b,0x203220636f6c2e0a\n"
".quad 0x610a312039343232,0x25203233732e6464,0x337225202c393172,0x7476630a3b31202c\n"
".quad 0x3233732e3436732e,0x202c32326c722520,0x64610a3b39317225,0x7225203436732e64\n"
".quad 0x6c7225202c33326c,0x376c7225202c3232,0x36732e6464610a3b,0x2c34326c72252034\n"
".quad 0x202c33326c722520,0x2e0a3b3438333631,0x3232203220636f6c,0x64616d0a31203934\n"
".quad 0x203436732e6f6c2e,0x25202c35326c7225,0x7225202c34326c72,0x7225202c3531336c\n"
".quad 0x2e6c68730a3b356c,0x326c722520343662,0x35326c7225202c36,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c37326c,0x0a3b3233202c3632,0x32203220636f6c2e\n"
".quad 0x68730a3120393432,0x7225203436622e6c,0x6c7225202c38326c,0x610a3b32202c3732\n"
".quad 0x25203436732e6464,0x7225202c39326c72,0x326c7225202c346c,0x6c672e646c0a3b38\n"
".quad 0x3233662e6c61626f,0x255b202c35662520,0x610a3b5d39326c72,0x25203233732e6464\n"
".quad 0x357225202c313272,0x2e0a3b34362d202c,0x3232203220636f6c,0x7476630a31203035\n"
".quad 0x3233732e3436732e,0x202c30336c722520,0x64610a3b31327225,0x7225203436732e64\n"
".quad 0x6c7225202c31336c,0x30336c7225202c36,0x36732e6464610a3b,0x2c32336c72252034\n"
".quad 0x202c31336c722520,0x2e0a3b3436383633,0x3232203220636f6c,0x64616d0a31203035\n"
".quad 0x203436732e6f6c2e,0x25202c33336c7225,0x7225202c32336c72,0x7225202c3531336c\n"
".quad 0x2e6c68730a3b356c,0x336c722520343662,0x33336c7225202c34,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c35336c,0x0a3b3233202c3433,0x32203220636f6c2e\n"
".quad 0x68730a3120303532,0x7225203436622e6c,0x6c7225202c36336c,0x610a3b32202c3533\n"
".quad 0x25203436732e6464,0x7225202c37336c72,0x336c7225202c346c,0x6c672e646c0a3b36\n"
".quad 0x3233662e6c61626f,0x255b202c36662520,0x610a3b5d37336c72,0x25203436732e6464\n"
".quad 0x7225202c38336c72,0x6c7225202c34316c,0x2e6464610a3b3033,0x336c722520343673\n"
".quad 0x38336c7225202c39,0x3b3635303534202c,0x203220636f6c2e0a,0x6d0a312031353232\n"
".quad 0x36732e6f6c2e6461,0x2c30346c72252034,0x202c39336c722520,0x202c3531336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x6c7225202c31346c,0x0a3b3233202c3034\n"
".quad 0x203436732e726873,0x25202c32346c7225,0x3233202c31346c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203135323220,0x203436622e6c6873,0x25202c33346c7225,0x3b32202c32346c72\n"
".quad 0x3436732e6464610a,0x202c34346c722520,0x7225202c346c7225,0x2e646c0a3b33346c\n"
".quad 0x662e6c61626f6c67,0x202c376625203233,0x3b5d34346c72255b,0x3436732e6464610a\n"
".quad 0x202c35346c722520,0x25202c32326c7225,0x64610a3b30336c72,0x7225203436732e64\n"
".quad 0x6c7225202c36346c,0x34323335202c3534,0x20636f6c2e0a3b38,0x3120323532322032\n"
".quad 0x2e6f6c2e64616d0a,0x346c722520343673,0x36346c7225202c37,0x3531336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x25202c38346c7225,0x3233202c37346c72\n"
".quad 0x36732e7268730a3b,0x2c39346c72252034,0x202c38346c722520,0x636f6c2e0a3b3233\n"
".quad 0x2032353232203220,0x36622e6c68730a31,0x2c30356c72252034,0x202c39346c722520\n"
".quad 0x732e6464610a3b32,0x31356c7225203436,0x202c346c7225202c,0x6c0a3b30356c7225\n"
".quad 0x6c61626f6c672e64,0x386625203233662e,0x31356c72255b202c,0x732e6464610a3b5d\n"
".quad 0x2c35327225203233,0x3436202c35722520,0x3220636f6c2e0a3b,0x0a31203335323220\n"
".quad 0x2e3436732e747663,0x356c722520323373,0x3b35327225202c32,0x3436732e6464610a\n"
".quad 0x202c33356c722520,0x7225202c366c7225,0x6464610a3b32356c,0x6c7225203436732e\n"
".quad 0x356c7225202c3435,0x3434333735202c33,0x3220636f6c2e0a3b,0x0a31203335323220\n"
".quad 0x732e6f6c2e64616d,0x35356c7225203436,0x2c34356c7225202c,0x2c3531336c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x7225202c36356c72,0x3b3233202c35356c\n"
".quad 0x3436732e7268730a,0x202c37356c722520,0x33202c36356c7225,0x20636f6c2e0a3b32\n"
".quad 0x3120333532322032,0x3436622e6c68730a,0x202c38356c722520,0x32202c37356c7225\n"
".quad 0x36732e6464610a3b,0x2c39356c72252034,0x25202c346c722520,0x646c0a3b38356c72\n"
".quad 0x2e6c61626f6c672e,0x2c39662520323366,0x5d39356c72255b20,0x36732e6464610a3b\n"
".quad 0x2c30366c72252034,0x202c34316c722520,0x610a3b32356c7225,0x25203436732e6464\n"
".quad 0x7225202c31366c72,0x353536202c30366c,0x636f6c2e0a3b3633,0x2034353232203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x366c7225202c3236,0x31336c7225202c31\n"
".quad 0x3b356c7225202c35,0x3436622e6c68730a,0x202c33366c722520,0x33202c32366c7225\n"
".quad 0x732e7268730a3b32,0x34366c7225203436,0x2c33366c7225202c,0x6f6c2e0a3b323320\n"
".quad 0x3435323220322063,0x622e6c68730a3120,0x35366c7225203436,0x2c34366c7225202c\n"
".quad 0x2e6464610a3b3220,0x366c722520343673,0x2c346c7225202c36,0x0a3b35366c722520\n"
".quad 0x61626f6c672e646c,0x6625203233662e6c,0x6c72255b202c3031,0x6f6c2e0a3b5d3636\n"
".quad 0x3535323220322063,0x2e707465730a3120,0x25203233732e7165,0x347225202c313170\n"
".quad 0x25400a3b3336202c,0x2061726220313170,0x0a3b335f31324242,0x203220636f6c2e0a\n"
".quad 0x630a312039343232,0x752e3436752e7476,0x37366c7225203233,0x0a3b39317225202c\n"
".quad 0x32203220636f6c2e,0x76630a3120333532,0x33752e3436752e74,0x2c38366c72252032\n"
".quad 0x610a3b3532722520,0x25203436732e6464,0x7225202c39366c72,0x6c7225202c37366c\n"
".quad 0x2e6464610a3b3836,0x376c722520343673,0x39366c7225202c30,0x3b3832373337202c\n"
".quad 0x3436752e7476630a,0x6c7225203233752e,0x3b387225202c3137,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3431336c,0x5f645f524c32315a,0x5043444241627968\n"
".quad 0x705f666d665f5366,0x3b5d335f6d617261,0x203220636f6c2e0a,0x6d0a312036353232\n"
".quad 0x36732e6f6c2e6461,0x2c32376c72252034,0x202c30376c722520,0x202c3431336c7225\n"
".quad 0x6c0a3b31376c7225,0x2e6d617261702e64,0x336c722520343675,0x315a5f5b202c3930\n"
".quad 0x79685f645f524c32,0x5366504344424162,0x7261705f666d665f,0x630a3b5d305f6d61\n"
".quad 0x672e6f742e617476,0x36752e6c61626f6c,0x2c33376c72252034,0x3b3930336c722520\n"
".quad 0x3436622e6c68730a,0x202c34376c722520,0x33202c32376c7225,0x732e7268730a3b32\n"
".quad 0x35376c7225203436,0x2c34376c7225202c,0x6f6c2e0a3b323320,0x3635323220322063\n"
".quad 0x622e6c68730a3120,0x36376c7225203436,0x2c35376c7225202c,0x2e6464610a3b3220\n"
".quad 0x376c722520343673,0x33376c7225202c37,0x3b36376c7225202c,0x626f6c672e646c0a\n"
".quad 0x25203233662e6c61,0x255b202c37353466,0x0a0a3b5d37376c72,0x0a3a335f31324242\n"
".quad 0x203233732e646461,0x7225202c38347225,0x2e0a3b312d202c38,0x3232203220636f6c\n"
".quad 0x7476630a31203835,0x2e3233662e6e722e,0x3539662520323373,0x0a3b38347225202c\n"
".quad 0x203233662e646461,0x6625202c37386625,0x46336630202c3539,0x0a3b303030303030\n"
".quad 0x662e6e722e747663,0x25203233732e3233,0x357225202c363966,0x33662e6464610a3b\n"
".quad 0x202c373966252032,0x336630202c326625,0x3b30303030303046,0x3233662e6464610a\n"
".quad 0x25202c3634662520,0x396625202c373966,0x752e766f6d0a3b36,0x2c34357225203233\n"
".quad 0x6574090a0a3b3020,0x2e34762e64322e78,0x203233662e323366,0x25202c353366257b\n"
".quad 0x336625202c363366,0x7d38336625202c37,0x65527865745b202c,0x7b202c4431665f66\n"
".quad 0x6625202c37386625,0x090a0a3b5d7d3634,0x32203220636f6c2e,0x64610a3120393532\n"
".quad 0x7225203233732e64,0x2c387225202c3535,0x2e7476630a3b3120,0x732e3233662e6e72\n"
".quad 0x2c38396625203233,0x610a3b3535722520,0x25203233662e6464,0x396625202c333966\n"
".quad 0x3046336630202c38,0x0a0a3b3030303030,0x2e64322e78657409,0x662e3233662e3476\n"
".quad 0x313466257b203233,0x202c32346625202c,0x6625202c33346625,0x65745b202c7d3434\n"
".quad 0x4433665f66655278,0x2c333966257b202c,0x3b5d7d3634662520,0x20636f6c2e090a0a\n"
".quad 0x3120303632322032,0x2e6e722e7476630a,0x203233732e323366,0x7225202c39396625\n"
".quad 0x2e6464610a3b3731,0x3031662520323366,0x2c39396625202c30,0x3030304633663020\n"
".quad 0x6464610a3b303030,0x356625203233662e,0x3030316625202c38,0x0a3b36396625202c\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3466257b20323366,0x2c38346625202c37\n"
".quad 0x25202c3934662520,0x745b202c7d303566,0x35665f6665527865,0x373866257b202c44\n"
".quad 0x5d7d38356625202c,0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366\n"
".quad 0x25202c333566257b,0x356625202c343566,0x7d36356625202c35,0x65527865745b202c\n"
".quad 0x7b202c4436665f66,0x6625202c33396625,0x090a0a3b5d7d3835,0x32203220636f6c2e\n"
".quad 0x76630a3120323632,0x3233662e6e722e74,0x316625203233732e,0x39317225202c3130\n"
".quad 0x33662e6464610a3b,0x2c32303166252032,0x202c313031662520,0x3030303046336630\n"
".quad 0x2e6464610a3b3030,0x3037662520323366,0x2c3230316625202c,0x0a0a3b3639662520\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x393566257b203233,0x202c30366625202c\n"
".quad 0x6625202c31366625,0x65745b202c7d3236,0x4437665f66655278,0x2c333966257b202c\n"
".quad 0x3b5d7d3037662520,0x786574090a090a0a,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x6625202c35366625,0x37366625202c3636,0x2c7d38366625202c,0x6665527865745b20\n"
".quad 0x257b202c4438665f,0x376625202c373866,0x2e090a0a3b5d7d30,0x3232203220636f6c\n"
".quad 0x7476630a31203436,0x2e3233662e6e722e,0x3031662520323373,0x3b35327225202c33\n"
".quad 0x3233662e6464610a,0x25202c3238662520,0x316625202c373966,0x6574090a0a3b3330\n"
".quad 0x2e34762e64322e78,0x203233662e323366,0x25202c313766257b,0x376625202c323766\n"
".quad 0x7d34376625202c33,0x65527865745b202c,0x202c443531665f66,0x25202c373866257b\n"
".quad 0x0a0a3b5d7d323866,0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e\n"
".quad 0x38376625202c3737,0x202c39376625202c,0x5b202c7d30386625,0x665f666552786574\n"
".quad 0x66257b202c443731,0x32386625202c3339,0x6c2e090a0a3b5d7d,0x363232203220636f\n"
".quad 0x2e7476630a312036,0x732e3233662e6e72,0x3430316625203233,0x0a3b31327225202c\n"
".quad 0x203233662e646461,0x6625202c34396625,0x30316625202c3739,0x786574090a0a3b34\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x6625202c33386625,0x35386625202c3438\n"
".quad 0x2c7d36386625202c,0x6665527865745b20,0x7b202c443031665f,0x6625202c37386625\n"
".quad 0x090a0a3b5d7d3439,0x64322e786574090a,0x2e3233662e34762e,0x3866257b20323366\n"
".quad 0x2c30396625202c39,0x25202c3139662520,0x745b202c7d323966,0x31665f6665527865\n"
".quad 0x3966257b202c4432,0x7d34396625202c33,0x6f6c2e090a0a3b5d,0x3037323220322063\n"
".quad 0x20317025400a3120,0x3132424220617262,0x6f6c2e0a0a3b355f,0x3430333220322063\n"
".quad 0x662e6275730a3120,0x3530316625203233,0x202c35336625202c,0x64610a3b31346625\n"
".quad 0x6625203233662e64,0x316625202c363031,0x37346625202c3530,0x33662e6275730a3b\n"
".quad 0x2c37303166252032,0x202c363031662520,0x75730a3b33356625,0x6625203233662e62\n"
".quad 0x316625202c383031,0x39356625202c3730,0x33662e6464610a3b,0x2c39303166252032\n"
".quad 0x202c383031662520,0x64610a3b35366625,0x6625203233662e64,0x316625202c303131\n"
".quad 0x33386625202c3930,0x33662e6275730a3b,0x2c31313166252032,0x202c303131662520\n"
".quad 0x64610a3b39386625,0x6625203233662e64,0x316625202c323131,0x31376625202c3131\n"
".quad 0x33662e6275730a3b,0x2c33313166252032,0x202c323131662520,0x75730a3b37376625\n"
".quad 0x6625203233662e62,0x346625202c343131,0x610a3b356625202c,0x25203233662e6464\n"
".quad 0x6625202c35313166,0x346625202c343131,0x662e6464610a3b37,0x3631316625203233\n"
".quad 0x2c3531316625202c,0x730a3b3335662520,0x25203233662e6275,0x6625202c37313166\n"
".quad 0x356625202c363131,0x662e6275730a3b39,0x3831316625203233,0x2c3731316625202c\n"
".quad 0x610a3b3536662520,0x25203233662e6464,0x6625202c39313166,0x376625202c383131\n"
".quad 0x33662e6275730a3b,0x2c30323166252032,0x202c393131662520,0x6464610a3b386625\n"
".quad 0x316625203233662e,0x32316625202c3132,0x3b30316625202c30,0x3233662e6275730a\n"
".quad 0x202c323231662520,0x25202c3132316625,0x64610a3b37353466,0x6625203233662e64\n"
".quad 0x366625202c333231,0x0a3b33386625202c,0x203233662e646461,0x25202c3432316625\n"
".quad 0x6625202c33323166,0x662e6464610a3b37,0x3532316625203233,0x2c3432316625202c\n"
".quad 0x610a3b3938662520,0x25203233662e6464,0x6625202c36323166,0x386625202c353231\n"
".quad 0x33662e6275730a3b,0x2c37323166252032,0x202c363231662520,0x6275730a3b396625\n"
".quad 0x316625203233662e,0x32316625202c3832,0x3b31376625202c37,0x3233662e6275730a\n"
".quad 0x202c393231662520,0x25202c3832316625,0x6275730a3b303166,0x316625203233662e\n"
".quad 0x32316625202c3033,0x3b37376625202c39,0x3233662e6275730a,0x202c313331662520\n"
".quad 0x25202c3033316625,0x75730a3b37353466,0x6625203233662e62,0x346625202c323331\n"
".quad 0x0a3b336625202c37,0x32203220636f6c2e,0x64610a3120343033,0x6625203233662e64\n"
".quad 0x316625202c333331,0x33356625202c3233,0x33662e6464610a3b,0x2c34333166252032\n"
".quad 0x202c333331662520,0x64610a3b39356625,0x6625203233662e64,0x316625202c353331\n"
".quad 0x35366625202c3433,0x33662e6464610a3b,0x2c36333166252032,0x202c353331662520\n"
".quad 0x64610a3b33386625,0x6625203233662e64,0x316625202c373331,0x3b376625202c3633\n"
".quad 0x3233662e6464610a,0x202c383331662520,0x25202c3733316625,0x6464610a3b393866\n"
".quad 0x316625203233662e,0x33316625202c3933,0x0a3b386625202c38,0x203233662e646461\n"
".quad 0x25202c3034316625,0x6625202c39333166,0x2e6464610a3b3137,0x3431662520323366\n"
".quad 0x3034316625202c31,0x0a3b30316625202c,0x203233662e646461,0x25202c3234316625\n"
".quad 0x6625202c31343166,0x2e6464610a3b3737,0x3431662520323366,0x3234316625202c33\n"
".quad 0x3b3735346625202c,0x3233662e6c756d0a,0x202c343431662520,0x25202c3232316625\n"
".quad 0x6d660a3b32323166,0x3233662e6e722e61,0x202c353431662520,0x25202c3331316625\n"
".quad 0x6625202c33313166,0x6c756d0a3b343431,0x316625203233662e,0x33316625202c3634\n"
".quad 0x3133316625202c31,0x6e722e616d660a3b,0x316625203233662e,0x33316625202c3734\n"
".quad 0x3133316625202c31,0x3b3534316625202c,0x3233662e6275730a,0x202c383431662520\n"
".quad 0x25202c3334316625,0x756d0a3b37343166,0x6625203233662e6c,0x336625202c393431\n"
".quad 0x3830436630202c35,0x660a3b3030303030,0x33662e6e722e616d,0x2c30353166252032\n"
".quad 0x6630202c33662520,0x3030303030343134,0x3b3934316625202c,0x2e6e722e616d660a\n"
".quad 0x3531662520323366,0x202c346625202c31,0x3030303830436630,0x35316625202c3030\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x346625202c323531,0x3830436630202c31\n"
".quad 0x25202c3030303030,0x6d660a3b31353166,0x3233662e6e722e61,0x202c333531662520\n"
".quad 0x436630202c356625,0x2c30303030303830,0x0a3b323531662520,0x203233662e646461\n"
".quad 0x25202c3435316625,0x6625202c33353166,0x2e6464610a3b3734,0x3531662520323366\n"
".quad 0x3435316625202c35,0x0a3b33356625202c,0x203233662e646461,0x25202c3635316625\n"
".quad 0x6625202c35353166,0x2e6464610a3b3935,0x3531662520323366,0x3635316625202c37\n"
".quad 0x0a3b35366625202c,0x662e6e722e616d66,0x3835316625203233,0x30202c366625202c\n"
".quad 0x3030303038304366,0x3735316625202c30,0x33662e6464610a3b,0x2c39353166252032\n"
".quad 0x202c383531662520,0x64610a3b33386625,0x6625203233662e64,0x316625202c303631\n"
".quad 0x3b376625202c3935,0x3233662e6464610a,0x202c313631662520,0x25202c3036316625\n"
".quad 0x6464610a3b393866,0x316625203233662e,0x36316625202c3236,0x0a3b386625202c31\n"
".quad 0x662e6e722e616d66,0x3336316625203233,0x30202c396625202c,0x3030303038304366\n"
".quad 0x3236316625202c30,0x33662e6464610a3b,0x2c34363166252032,0x202c333631662520\n"
".quad 0x64610a3b31376625,0x6625203233662e64,0x316625202c353631,0x30316625202c3436\n"
".quad 0x33662e6464610a3b,0x2c36363166252032,0x202c353631662520,0x64610a3b37376625\n"
".quad 0x6625203233662e64,0x316625202c373631,0x35346625202c3636,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x316625202c383631,0x30346630202c3734,0x202c343135343146\n"
".quad 0x6d0a3b3736316625,0x25203233662e6c75,0x6625202c39363166,0x30346630202c3134\n"
".quad 0x0a3b303030303041,0x662e6e722e616d66,0x3037316625203233,0x202c35336625202c\n"
".quad 0x3030304130436630,0x36316625202c3030,0x722e616d660a3b39,0x6625203233662e6e\n"
".quad 0x316625202c313731,0x46336630202c3331,0x202c353535353544,0x6d0a3b3037316625\n"
".quad 0x25203233662e6c75,0x6625202c32373166,0x4130346630202c35,0x660a3b3030303030\n"
".quad 0x33662e6e722e616d,0x2c33373166252032,0x6630202c34662520,0x3030303030413043\n"
".quad 0x3b3237316625202c,0x2e6e722e616d660a,0x3731662520323366,0x3232316625202c34\n"
".quad 0x354446336630202c,0x6625202c35353535,0x6c756d0a3b333731,0x316625203233662e\n"
".quad 0x2c396625202c3537,0x3030413034663020,0x616d660a3b303030,0x203233662e6e722e\n"
".quad 0x25202c3637316625,0x30436630202c3666,0x202c303030303041,0x660a3b3537316625\n"
".quad 0x33662e6e722e616d,0x2c37373166252032,0x202c313331662520,0x3535354446336630\n"
".quad 0x37316625202c3535,0x662e6464610a3b36,0x3837316625203233,0x202c35336625202c\n"
".quad 0x75730a3b35336625,0x6625203233662e62,0x316625202c393731,0x3b346625202c3837\n"
".quad 0x203220636f6c2e0a,0x610a312034303332,0x25203233662e6464,0x6625202c30383166\n"
".quad 0x31346625202c3134,0x33662e6464610a3b,0x2c31383166252032,0x202c393731662520\n"
".quad 0x730a3b3038316625,0x25203233662e6275,0x6625202c32383166,0x356625202c313831\n"
".quad 0x3220636f6c2e0a3b,0x0a31203430333220,0x203233662e646461,0x25202c3338316625\n"
".quad 0x6625202c32383166,0x2e6464610a3b3734,0x3831662520323366,0x3338316625202c34\n"
".quad 0x0a3b33356625202c,0x203233662e646461,0x25202c3538316625,0x6625202c34383166\n"
".quad 0x2e6464610a3b3935,0x3831662520323366,0x3538316625202c36,0x0a3b35366625202c\n"
".quad 0x203233662e627573,0x25202c3738316625,0x6625202c36383166,0x20636f6c2e0a3b36\n"
".quad 0x3120343033322032,0x3233662e6464610a,0x202c383831662520,0x25202c3738316625\n"
".quad 0x766f6d0a3b333866,0x316625203233662e,0x30436630202c3938,0x0a3b303030303030\n"
".quad 0x32203220636f6c2e,0x6d660a3120343033,0x3233662e6e722e61,0x202c303931662520\n"
".quad 0x436630202c376625,0x2c30303030303030,0x0a3b383831662520,0x203233662e646461\n"
".quad 0x25202c3139316625,0x6625202c30393166,0x2e616d660a3b3938,0x25203233662e6e72\n"
".quad 0x6625202c32393166,0x3030436630202c38,0x25202c3030303030,0x75730a3b31393166\n"
".quad 0x6625203233662e62,0x316625202c333931,0x3b396625202c3239,0x203220636f6c2e0a\n"
".quad 0x610a312034303332,0x25203233662e6464,0x6625202c34393166,0x376625202c333931\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x316625202c353931,0x3030436630202c30\n"
".quad 0x25202c3030303030,0x64610a3b34393166,0x6625203233662e64,0x316625202c363931\n"
".quad 0x37376625202c3539,0x6e722e616d660a3b,0x316625203233662e,0x35346625202c3739\n"
".quad 0x3030436630202c37,0x25202c3030303030,0x64610a3b36393166,0x6625203233662e64\n"
".quad 0x316625202c383931,0x31316625202c3331,0x722e616d660a3b33,0x6625203233662e6e\n"
".quad 0x316625202c393931,0x32316625202c3232,0x3634316625202c32,0x33662e67656e0a3b\n"
".quad 0x2c30303266252032,0x0a3b393931662520,0x662e6e722e616d66,0x3130326625203233\n"
".quad 0x2c3839316625202c,0x202c333131662520,0x730a3b3030326625,0x25203233662e6275\n"
".quad 0x6625202c32303266,0x326625202c373931,0x2e6464610a3b3130,0x3032662520323366\n"
".quad 0x202c346625202c33,0x616d660a3b346625,0x203233662e6e722e,0x25202c3430326625\n"
".quad 0x436630202c353366,0x2c30303030303830,0x0a3b333032662520,0x662e6e722e616d66\n"
".quad 0x3530326625203233,0x202c31346625202c,0x3030303830436630,0x30326625202c3030\n"
".quad 0x662e6464610a3b34,0x3630326625203233,0x25202c356625202c,0x2e6464610a3b3566\n"
".quad 0x3032662520323366,0x3530326625202c37,0x3b3630326625202c,0x3233662e6464610a\n"
".quad 0x202c383032662520,0x25202c3730326625,0x6464610a3b373466,0x326625203233662e\n"
".quad 0x30326625202c3930,0x3b33356625202c38,0x3233662e6464610a,0x202c303132662520\n"
".quad 0x25202c3930326625,0x6464610a3b393566,0x326625203233662e,0x31326625202c3131\n"
".quad 0x3b35366625202c30,0x3233662e6464610a,0x202c323132662520,0x366625202c366625\n"
".quad 0x33662e6464610a3b,0x2c33313266252032,0x202c313132662520,0x610a3b3231326625\n"
".quad 0x25203233662e6464,0x6625202c34313266,0x386625202c333132,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x376625202c353132,0x303030436630202c,0x6625202c30303030\n"
".quad 0x6464610a3b343132,0x326625203233662e,0x31326625202c3631,0x3b39386625202c35\n"
".quad 0x2e6e722e616d660a,0x3132662520323366,0x202c386625202c37,0x3030303030436630\n"
".quad 0x31326625202c3030,0x662e6464610a3b36,0x3831326625203233,0x25202c396625202c\n"
".quad 0x2e6464610a3b3966,0x3132662520323366,0x3731326625202c39,0x3b3831326625202c\n"
".quad 0x3233662e6464610a,0x202c303232662520,0x25202c3931326625,0x616d660a3b313766\n"
".quad 0x203233662e6e722e,0x25202c3132326625,0x436630202c303166,0x2c30303030303030\n"
".quad 0x0a3b303232662520,0x203233662e646461,0x25202c3232326625,0x6625202c31323266\n"
".quad 0x2e616d660a3b3737,0x25203233662e6e72,0x6625202c33323266,0x436630202c373534\n"
".quad 0x2c30303030303030,0x0a3b323232662520,0x203233662e646461,0x25202c3432326625\n"
".quad 0x3b356625202c3466,0x3233662e6464610a,0x202c353232662520,0x25202c3432326625\n"
".quad 0x6464610a3b373466,0x326625203233662e,0x32326625202c3632,0x3b33356625202c35\n"
".quad 0x3233662e6464610a,0x202c373232662520,0x25202c3632326625,0x6464610a3b393566\n"
".quad 0x326625203233662e,0x32326625202c3832,0x3b35366625202c37,0x3233662e6275730a\n"
".quad 0x202c393232662520,0x25202c3832326625,0x2e6275730a3b3666,0x3332662520323366\n"
".quad 0x3932326625202c30,0x0a3b33386625202c,0x203233662e627573,0x25202c3133326625\n"
".quad 0x6625202c30333266,0x2e6275730a3b3938,0x3332662520323366,0x3133326625202c32\n"
".quad 0x730a3b396625202c,0x25203233662e6275,0x6625202c33333266,0x376625202c323332\n"
".quad 0x662e6275730a3b31,0x3433326625203233,0x2c3333326625202c,0x2e0a3b3737662520\n"
".quad 0x3332203220636f6c,0x67656e0a31203430,0x326625203233662e,0x33316625202c3533\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x326625202c363332,0x33316625202c3533\n"
".quad 0x3434316625202c31,0x33662e6275730a3b,0x2c37333266252032,0x202c343332662520\n"
".quad 0x6e0a3b3633326625,0x25203233662e6765,0x6625202c38333266,0x616d660a3b363032\n"
".quad 0x203233662e6e722e,0x25202c3933326625,0x38316625202c3466,0x3833326625202c39\n"
".quad 0x33662e6464610a3b,0x2c30343266252032,0x202c393332662520,0x64610a3b37346625\n"
".quad 0x6625203233662e64,0x326625202c313432,0x33356625202c3034,0x33662e6464610a3b\n"
".quad 0x2c32343266252032,0x202c313432662520,0x64610a3b39356625,0x6625203233662e64\n"
".quad 0x326625202c333432,0x35366625202c3234,0x33662e6464610a3b,0x2c34343266252032\n"
".quad 0x202c333432662520,0x730a3b3231326625,0x25203233662e6275,0x6625202c35343266\n"
".quad 0x386625202c343432,0x662e6275730a3b33,0x3634326625203233,0x2c3534326625202c\n"
".quad 0x2e0a3b3938662520,0x3332203220636f6c,0x6464610a31203430,0x326625203233662e\n"
".quad 0x34326625202c3734,0x3831326625202c36,0x33662e6275730a3b,0x2c38343266252032\n"
".quad 0x202c373432662520,0x75730a3b31376625,0x6625203233662e62,0x326625202c393432\n"
".quad 0x37376625202c3834,0x33662e6275730a3b,0x2c30353266252032,0x25202c3734662520\n"
".quad 0x6f6c2e0a3b333566,0x3430333220322063,0x662e6464610a3120,0x3135326625203233\n"
".quad 0x2c3035326625202c,0x730a3b3935662520,0x25203233662e6275,0x6625202c32353266\n"
".quad 0x366625202c313532,0x20636f6c2e0a3b35,0x3120343033322032,0x3233662e67656e0a\n"
".quad 0x202c333532662520,0x660a3b3331316625,0x33662e6e722e616d,0x2c34353266252032\n"
".quad 0x202c333532662520,0x25202c3232316625,0x75730a3b32353266,0x6625203233662e62\n"
".quad 0x376625202c353532,0x730a3b386625202c,0x25203233662e6275,0x6625202c36353266\n"
".quad 0x316625202c353532,0x20636f6c2e0a3b30,0x3120343033322032,0x3233662e6464610a\n"
".quad 0x202c373532662520,0x25202c3635326625,0x656e0a3b37353466,0x6625203233662e67\n"
".quad 0x316625202c383532,0x2e616d660a3b3232,0x25203233662e6e72,0x6625202c39353266\n"
".quad 0x316625202c383532,0x35326625202c3133,0x662e6275730a3b37,0x3036326625203233\n"
".quad 0x202c33386625202c,0x75730a3b39386625,0x6625203233662e62,0x326625202c313632\n"
".quad 0x31376625202c3036,0x3220636f6c2e0a3b,0x0a31203430333220,0x203233662e646461\n"
".quad 0x25202c3236326625,0x6625202c31363266,0x2e616d660a3b3737,0x25203233662e6e72\n"
".quad 0x6625202c33363266,0x316625202c333532,0x36326625202c3133,0x662e6275730a3b32\n"
".quad 0x3436326625203233,0x2c3035326625202c,0x2e0a3b3935662520,0x3332203220636f6c\n"
".quad 0x6464610a31203430,0x326625203233662e,0x36326625202c3536,0x3b35366625202c34\n"
".quad 0x3233662e6275730a,0x202c363632662520,0x25202c3536326625,0x6464610a3b333866\n"
".quad 0x326625203233662e,0x36326625202c3736,0x3b39386625202c36,0x3233662e6275730a\n"
".quad 0x202c383632662520,0x25202c3736326625,0x6f6c2e0a3b313766,0x3430333220322063\n"
".quad 0x662e6464610a3120,0x3936326625203233,0x2c3836326625202c,0x6e0a3b3737662520\n"
".quad 0x25203233662e6765,0x6625202c30373266,0x2e6275730a3b3335,0x3732662520323366\n"
".quad 0x3037326625202c31,0x0a3b37346625202c,0x32203220636f6c2e,0x64610a3120343033\n"
".quad 0x6625203233662e64,0x326625202c323732,0x39356625202c3137,0x33662e6464610a3b\n"
".quad 0x2c33373266252032,0x202c323732662520,0x64610a3b35366625,0x6625203233662e64\n"
".quad 0x326625202c343732,0x3b376625202c3337,0x3233662e6275730a,0x202c353732662520\n"
".quad 0x25202c3437326625,0x636f6c2e0a3b3866,0x2034303332203220,0x33662e6464610a31\n"
".quad 0x2c36373266252032,0x202c353732662520,0x75730a3b30316625,0x6625203233662e62\n"
".quad 0x326625202c373732,0x35346625202c3637,0x662e6275730a3b37,0x3837326625203233\n"
".quad 0x202c33386625202c,0x6f6c2e0a3b376625,0x3430333220322063,0x662e6464610a3120\n"
".quad 0x3937326625203233,0x2c3837326625202c,0x730a3b3938662520,0x25203233662e6275\n"
".quad 0x6625202c30383266,0x386625202c393732,0x33662e6275730a3b,0x2c31383266252032\n"
".quad 0x202c303832662520,0x6c2e0a3b31376625,0x303332203220636f,0x2e6464610a312034\n"
".quad 0x3832662520323366,0x3138326625202c32,0x0a3b30316625202c,0x203233662e627573\n"
".quad 0x25202c3338326625,0x6625202c32383266,0x636f6c2e0a3b3737,0x2034303332203220\n"
".quad 0x33662e6464610a31,0x2c34383266252032,0x202c333832662520,0x6d0a3b3735346625\n"
".quad 0x25203233662e766f,0x6630202c35383266,0x3030303030384533,0x7261702e646c0a3b\n"
".quad 0x25203233662e6d61,0x5f5b202c36353466,0x5f645f524c32315a,0x5043444241627968\n"
".quad 0x705f666d665f5366,0x3b5d325f6d617261,0x203220636f6c2e0a,0x6d0a312034303332\n"
".quad 0x25203233662e6c75,0x6625202c36383266,0x336630202c363534,0x3b30303030303845\n"
".quad 0x3233662e766f6d0a,0x202c373832662520,0x3030303045336630,0x636f6c2e0a3b3030\n"
".quad 0x2034303332203220,0x33662e6c756d0a31,0x2c38383266252032,0x202c393432662520\n"
".quad 0x4141413244336630,0x2e766f6d0a3b4241,0x3832662520323366,0x3244336630202c39\n"
".quad 0x2e0a3b4241414141,0x3332203220636f6c,0x6c756d0a31203430,0x326625203233662e\n"
".quad 0x35346625202c3039,0x4144336630202c36,0x6d0a3b4241414141,0x25203233662e6c75\n"
".quad 0x6625202c31393266,0x336630202c333232,0x3b39334538333643,0x3233662e6c756d0a\n"
".quad 0x202c323932662520,0x30202c3635346625,0x3345383345433366,0x662e6c756d0a3b39\n"
".quad 0x3339326625203233,0x2c3230326625202c,0x0a3b323932662520,0x203233662e6c756d\n"
".quad 0x25202c3439326625,0x6630202c31373166,0x4443434343434333,0x33662e766f6d0a3b\n"
".quad 0x2c35393266252032,0x4343434333663020,0x6f6c2e0a3b444343,0x3430333220322063\n"
".quad 0x662e6c756d0a3120,0x3639326625203233,0x2c3437316625202c,0x4343434333663020\n"
".quad 0x6c756d0a3b444343,0x326625203233662e,0x37316625202c3739,0x4343336630202c37\n"
".quad 0x6d0a3b4443434343,0x25203233662e6c75,0x6625202c38393266,0x336630202c383631\n"
".quad 0x3b31323830323842,0x3233662e6c756d0a,0x202c393932662520,0x30202c3839326625\n"
".quad 0x3030303034313466,0x722e616d660a3b30,0x6625203233662e6e,0x316625202c303033\n"
".quad 0x45426630202c3834,0x202c443346433337,0x730a3b3939326625,0x25203233662e6275\n"
".quad 0x6625202c31303366,0x3030336625202c33,0x33662e6c756d0a3b,0x2c32303366252032\n"
".quad 0x202c383932662520,0x3030303830436630,0x2e616d660a3b3030,0x25203233662e6e72\n"
".quad 0x6625202c33303366,0x426630202c383431,0x2c44324243324244,0x0a3b323033662520\n"
".quad 0x662e6e722e616d66,0x3430336625203233,0x2c3439326625202c,0x3030383043663020\n"
".quad 0x336625202c303030,0x2e616d660a3b3330,0x25203233662e6e72,0x6625202c35303366\n"
".quad 0x326625202c323032,0x39326625202c3239,0x662e6464610a3b33,0x3630336625203233\n"
".quad 0x2c3430336625202c,0x0a3b353033662520,0x662e6e722e616d66,0x3730336625203233\n"
".quad 0x2c3139326625202c,0x3030383043663020,0x336625202c303030,0x2e6275730a3b3630\n"
".quad 0x3033662520323366,0x2c35336625202c38,0x0a3b373033662520,0x662e6e722e616d66\n"
".quad 0x3930336625203233,0x2c3639326625202c,0x3030383043663020,0x336625202c303030\n"
".quad 0x2e67656e0a3b3330,0x3133662520323366,0x3230326625202c30,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x31336625202c3131,0x3239326625202c30,0x3b3930336625202c\n"
".quad 0x203220636f6c2e0a,0x660a312034303332,0x33662e6e722e616d,0x2c32313366252032\n"
".quad 0x202c333232662520,0x4538333643336630,0x39326625202c3933,0x662e6464610a3b31\n"
".quad 0x3331336625203233,0x2c3131336625202c,0x0a3b323133662520,0x662e6e722e616d66\n"
".quad 0x3431336625203233,0x2c3733326625202c,0x202c303932662520,0x660a3b3331336625\n"
".quad 0x33662e6e722e616d,0x2c35313366252032,0x202c383832662520,0x3030303030436630\n"
".quad 0x31336625202c3030,0x662e6275730a3b34,0x3631336625203233,0x25202c346625202c\n"
".quad 0x6d660a3b35313366,0x3233662e6e722e61,0x202c373133662520,0x30202c3439326625\n"
".quad 0x3030303038303466,0x3330336625202c30,0x33662e6464610a3b,0x2c38313366252032\n"
".quad 0x202c373133662520,0x660a3b3530336625,0x33662e6e722e616d,0x2c39313366252032\n"
".quad 0x202c313932662520,0x3030303830436630,0x31336625202c3030,0x662e6275730a3b38\n"
".quad 0x3032336625203233,0x202c31346625202c,0x660a3b3931336625,0x33662e6e722e616d\n"
".quad 0x2c31323366252032,0x202c363932662520,0x3030303830346630,0x30336625202c3030\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x336625202c323233,0x39326625202c3031\n"
".quad 0x3132336625202c32,0x3220636f6c2e0a3b,0x0a31203430333220,0x203233662e646461\n"
".quad 0x25202c3332336625,0x6625202c32323366,0x616d660a3b323133,0x203233662e6e722e\n"
".quad 0x25202c3432336625,0x6625202c37333266,0x336625202c303932,0x2e616d660a3b3332\n"
".quad 0x25203233662e6e72,0x6625202c35323366,0x436630202c383832,0x2c30303030303030\n"
".quad 0x0a3b343233662520,0x203233662e627573,0x25202c3632336625,0x32336625202c3566\n"
".quad 0x722e616d660a3b35,0x6625203233662e6e,0x316625202c373233,0x44336630202c3834\n"
".quad 0x202c303238303238,0x660a3b3839326625,0x33662e6e722e616d,0x2c38323366252032\n"
".quad 0x202c313731662520,0x4343434343336630,0x32336625202c4443,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x316625202c393233,0x43336630202c3437,0x202c444343434343\n"
".quad 0x660a3b3832336625,0x33662e6e722e616d,0x2c30333366252032,0x202c323032662520\n"
".quad 0x25202c3239326625,0x6d660a3b39323366,0x3233662e6e722e61,0x202c313333662520\n"
".quad 0x30202c3332326625,0x3345383336433366,0x3033336625202c39,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x33326625202c3233,0x3039326625202c37,0x3b3133336625202c\n"
".quad 0x2e6e722e616d660a,0x3333662520323366,0x3934326625202c33,0x413244336630202c\n"
".quad 0x6625202c42414141,0x616d660a3b323333,0x203233662e6e722e,0x25202c3433336625\n"
".quad 0x6630202c34353266,0x3030303030384533,0x3b3333336625202c,0x2e6e722e616d660a\n"
".quad 0x3333662520323366,0x3936326625202c35,0x303045336630202c,0x6625202c30303030\n"
".quad 0x67656e0a3b343333,0x336625203233662e,0x37326625202c3633,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x336625202c373333,0x38326625202c3633,0x3533336625202c37\n"
".quad 0x3220636f6c2e0a3b,0x0a31203430333220,0x203233662e627573,0x25202c3833336625\n"
".quad 0x336625202c373466,0x2e67656e0a3b3733,0x3333662520323366,0x3137316625202c39\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x33336625202c3034,0x3539326625202c39\n"
".quad 0x3b3732336625202c,0x203220636f6c2e0a,0x660a312034303332,0x33662e6e722e616d\n"
".quad 0x2c31343366252032,0x202c343731662520,0x4343434343336630,0x34336625202c4443\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x326625202c323433,0x39326625202c3230\n"
".quad 0x3134336625202c32,0x6e722e616d660a3b,0x336625203233662e,0x32326625202c3334\n"
".quad 0x3643336630202c33,0x25202c3933453833,0x6d660a3b32343366,0x3233662e6e722e61\n"
".quad 0x202c343433662520,0x25202c3733326625,0x6625202c30393266,0x616d660a3b333433\n"
".quad 0x203233662e6e722e,0x25202c3534336625,0x6630202c39343266,0x4241414141324433\n"
".quad 0x3b3434336625202c,0x3233662e67656e0a,0x202c363433662520,0x660a3b3435326625\n"
".quad 0x33662e6e722e616d,0x2c37343366252032,0x202c363433662520,0x25202c3538326625\n"
".quad 0x656e0a3b35343366,0x6625203233662e67,0x326625202c383433,0x2e616d660a3b3936\n"
".quad 0x25203233662e6e72,0x6625202c39343366,0x326625202c383433,0x34336625202c3738\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x336625202c303533,0x38326625202c3633\n"
".quad 0x3934336625202c37,0x3220636f6c2e0a3b,0x0a31203430333220,0x203233662e627573\n"
".quad 0x25202c3135336625,0x336625202c333566,0x2e67656e0a3b3035,0x3533662520323366\n"
".quad 0x3437316625202c32,0x6e722e616d660a3b,0x336625203233662e,0x35336625202c3335\n"
".quad 0x3539326625202c32,0x3b3034336625202c,0x203220636f6c2e0a,0x660a312034303332\n"
".quad 0x33662e6e722e616d,0x2c34353366252032,0x202c323032662520,0x25202c3239326625\n"
".quad 0x6d660a3b33353366,0x3233662e6e722e61,0x202c353533662520,0x30202c3332326625\n"
".quad 0x3345383336433366,0x3435336625202c39,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x33326625202c3635,0x3039326625202c37,0x3b3535336625202c,0x2e6e722e616d660a\n"
".quad 0x3533662520323366,0x3934326625202c37,0x413244336630202c,0x6625202c42414141\n"
".quad 0x616d660a3b363533,0x203233662e6e722e,0x25202c3835336625,0x6630202c34353266\n"
".quad 0x3030303030384533,0x3b3735336625202c,0x2e6e722e616d660a,0x3533662520323366\n"
".quad 0x3834336625202c39,0x2c3738326625202c,0x0a3b383533662520,0x32203220636f6c2e\n"
".quad 0x6d660a3120343033,0x3233662e6e722e61,0x202c303633662520,0x30202c3737326625\n"
".quad 0x3030303030453366,0x3935336625202c30,0x33662e6275730a3b,0x2c31363366252032\n"
".quad 0x25202c3935662520,0x6d660a3b30363366,0x3233662e6e722e61,0x202c323633662520\n"
".quad 0x25202c3235336625,0x6625202c35393266,0x6f6c2e0a3b383233,0x3430333220322063\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x326625202c333633,0x39326625202c3230\n"
".quad 0x3236336625202c32,0x6e722e616d660a3b,0x336625203233662e,0x32326625202c3436\n"
".quad 0x3643336630202c33,0x25202c3933453833,0x6d660a3b33363366,0x3233662e6e722e61\n"
".quad 0x202c353633662520,0x25202c3733326625,0x6625202c30393266,0x616d660a3b343633\n"
".quad 0x203233662e6e722e,0x25202c3636336625,0x6630202c39343266,0x4241414141324433\n"
".quad 0x3b3536336625202c,0x2e6e722e616d660a,0x3633662520323366,0x3634336625202c37\n"
".quad 0x2c3538326625202c,0x0a3b363633662520,0x32203220636f6c2e,0x6d660a3120343033\n"
".quad 0x3233662e6e722e61,0x202c383633662520,0x30202c3936326625,0x3030303030453366\n"
".quad 0x3736336625202c30,0x6e722e616d660a3b,0x336625203233662e,0x37326625202c3936\n"
".quad 0x3045336630202c37,0x25202c3030303030,0x75730a3b38363366,0x6625203233662e62\n"
".quad 0x366625202c303733,0x3936336625202c35,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x39326625202c3137,0x3830436630202c37,0x25202c3030303030,0x6d660a3b33303366\n"
".quad 0x3233662e6e722e61,0x202c323733662520,0x25202c3031336625,0x6625202c32393266\n"
".quad 0x6f6c2e0a3b313733,0x3430333220322063,0x662e6464610a3120,0x3337336625203233\n"
".quad 0x2c3237336625202c,0x0a3b323133662520,0x203233662e67656e,0x25202c3437336625\n"
".quad 0x6d660a3b37333266,0x3233662e6e722e61,0x202c353733662520,0x25202c3437336625\n"
".quad 0x6625202c30393266,0x6f6c2e0a3b333733,0x3430333220322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x326625202c363733,0x44336630202c3934,0x202c424141414132\n"
".quad 0x610a3b3838326625,0x25203233662e6464,0x6625202c37373366,0x336625202c353733\n"
".quad 0x2e6275730a3b3637,0x3733662520323366,0x202c366625202c38,0x660a3b3737336625\n"
".quad 0x33662e6e722e616d,0x2c39373366252032,0x202c373731662520,0x4343434343336630\n"
".quad 0x32336625202c4443,0x722e616d660a3b38,0x6625203233662e6e,0x326625202c303833\n"
".quad 0x39326625202c3230,0x3937336625202c32,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x32326625202c3138,0x3643336630202c33,0x25202c3933453833,0x6d660a3b30383366\n"
".quad 0x3233662e6e722e61,0x202c323833662520,0x25202c3437336625,0x6625202c30393266\n"
".quad 0x67656e0a3b313833,0x336625203233662e,0x34326625202c3338,0x722e616d660a3b39\n"
".quad 0x6625203233662e6e,0x336625202c343833,0x38326625202c3338,0x3238336625202c39\n"
".quad 0x3220636f6c2e0a3b,0x0a31203430333220,0x662e6e722e616d66,0x3538336625203233\n"
".quad 0x2c3336326625202c,0x202c363832662520,0x660a3b3438336625,0x33662e6e722e616d\n"
".quad 0x2c36383366252032,0x202c383433662520,0x25202c3738326625,0x6c2e0a3b35383366\n"
".quad 0x303332203220636f,0x2e616d660a312034,0x25203233662e6e72,0x6625202c37383366\n"
".quad 0x336630202c343832,0x2c30303030303045,0x0a3b363833662520,0x203233662e627573\n"
".quad 0x25202c3838336625,0x336625202c333866,0x2e616d660a3b3738,0x25203233662e6e72\n"
".quad 0x6625202c39383366,0x336630202c343731,0x2c44434343434343,0x0a3b373233662520\n"
".quad 0x662e6e722e616d66,0x3039336625203233,0x2c3737316625202c,0x4343434333663020\n"
".quad 0x336625202c444343,0x2e616d660a3b3938,0x25203233662e6e72,0x6625202c31393366\n"
".quad 0x436630202c333932,0x2c30303030303030,0x0a3b303933662520,0x662e6e722e616d66\n"
".quad 0x3239336625203233,0x2c3139326625202c,0x3030303043663020,0x336625202c303030\n"
".quad 0x2e616d660a3b3139,0x25203233662e6e72,0x6625202c33393366,0x336630202c393532\n"
".quad 0x2c30303030303845,0x0a3b323933662520,0x662e6e722e616d66,0x3439336625203233\n"
".quad 0x2c3737326625202c,0x3030304533663020,0x336625202c303030,0x2e67656e0a3b3339\n"
".quad 0x3933662520323366,0x3438326625202c35,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x39336625202c3639,0x3738326625202c35,0x3b3439336625202c,0x203220636f6c2e0a\n"
".quad 0x730a312034303332,0x25203233662e6275,0x6625202c37393366,0x3639336625202c37\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x37316625202c3839,0x4343336630202c37\n"
".quad 0x25202c4443434343,0x6d660a3b30343366,0x3233662e6e722e61,0x202c393933662520\n"
".quad 0x25202c3230326625,0x6625202c32393266,0x616d660a3b383933,0x203233662e6e722e\n"
".quad 0x25202c3030346625,0x6630202c33323266,0x3933453833364333,0x3b3939336625202c\n"
".quad 0x2e6e722e616d660a,0x3034662520323366,0x3437336625202c31,0x2c3039326625202c\n"
".quad 0x0a3b303034662520,0x662e6e722e616d66,0x3230346625203233,0x2c3338336625202c\n"
".quad 0x202c393832662520,0x6e0a3b3130346625,0x25203233662e6765,0x6625202c33303466\n"
".quad 0x616d660a3b333632,0x203233662e6e722e,0x25202c3430346625,0x6625202c33303466\n"
".quad 0x346625202c363832,0x636f6c2e0a3b3230,0x2034303332203220,0x6e722e616d660a31\n"
".quad 0x346625203233662e,0x36326625202c3530,0x3045336630202c39,0x25202c3030303030\n"
".quad 0x6d660a3b34303466,0x3233662e6e722e61,0x202c363034662520,0x30202c3438326625\n"
".quad 0x3030303030453366,0x3530346625202c30,0x33662e6275730a3b,0x2c37303466252032\n"
".quad 0x25202c3938662520,0x6d660a3b36303466,0x3233662e6e722e61,0x202c383034662520\n"
".quad 0x25202c3235336625,0x6625202c35393266,0x6f6c2e0a3b373233,0x3430333220322063\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x316625202c393034,0x43336630202c3737\n"
".quad 0x202c444343434343,0x660a3b3830346625,0x33662e6e722e616d,0x2c30313466252032\n"
".quad 0x202c333932662520,0x3030303030436630,0x30346625202c3030,0x722e616d660a3b39\n"
".quad 0x6625203233662e6e,0x326625202c313134,0x30436630202c3139,0x202c303030303030\n"
".quad 0x6e0a3b3031346625,0x25203233662e6765,0x6625202c32313466,0x616d660a3b393532\n"
".quad 0x203233662e6e722e,0x25202c3331346625,0x6625202c32313466,0x346625202c353832\n"
".quad 0x2e616d660a3b3131,0x25203233662e6e72,0x6625202c34313466,0x326625202c363333\n"
".quad 0x31346625202c3738,0x722e616d660a3b33,0x6625203233662e6e,0x336625202c353134\n"
".quad 0x38326625202c3539,0x3431346625202c37,0x3220636f6c2e0a3b,0x0a31203430333220\n"
".quad 0x203233662e627573,0x25202c3631346625,0x31346625202c3866,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x326625202c373134,0x30346630202c3739,0x202c303030303038\n"
".quad 0x660a3b3330336625,0x33662e6e722e616d,0x2c38313466252032,0x202c303133662520\n"
".quad 0x25202c3239326625,0x6c2e0a3b37313466,0x303332203220636f,0x2e6464610a312034\n"
".quad 0x3134662520323366,0x3831346625202c39,0x3b3231336625202c,0x2e6e722e616d660a\n"
".quad 0x3234662520323366,0x3437336625202c30,0x2c3039326625202c,0x0a3b393134662520\n"
".quad 0x32203220636f6c2e,0x64610a3120343033,0x6625203233662e64,0x346625202c313234\n"
".quad 0x37336625202c3032,0x662e6275730a3b36,0x3232346625203233,0x25202c396625202c\n"
".quad 0x656e0a3b31323466,0x6625203233662e67,0x316625202c333234,0x2e616d660a3b3737\n"
".quad 0x25203233662e6e72,0x6625202c34323466,0x326625202c333234,0x32336625202c3539\n"
".quad 0x20636f6c2e0a3b38,0x3120343033322032,0x2e6e722e616d660a,0x3234662520323366\n"
".quad 0x3230326625202c35,0x2c3239326625202c,0x0a3b343234662520,0x662e6e722e616d66\n"
".quad 0x3632346625203233,0x2c3332326625202c,0x3833364333663020,0x346625202c393345\n"
".quad 0x2e616d660a3b3532,0x25203233662e6e72,0x6625202c37323466,0x326625202c343733\n"
".quad 0x32346625202c3039,0x722e616d660a3b36,0x6625203233662e6e,0x336625202c383234\n"
".quad 0x38326625202c3338,0x3732346625202c39,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x30346625202c3932,0x3638326625202c33,0x3b3832346625202c,0x2e6e722e616d660a\n"
".quad 0x3334662520323366,0x3834336625202c30,0x2c3738326625202c,0x0a3b393234662520\n"
".quad 0x662e6e722e616d66,0x3133346625203233,0x2c3539336625202c,0x202c373832662520\n"
".quad 0x2e0a3b3033346625,0x3332203220636f6c,0x6275730a31203430,0x346625203233662e\n"
".quad 0x31376625202c3233,0x3b3133346625202c,0x2e6e722e616d660a,0x3334662520323366\n"
".quad 0x3332346625202c33,0x2c3539326625202c,0x0a3b393833662520,0x32203220636f6c2e\n"
".quad 0x6d660a3120343033,0x3233662e6e722e61,0x202c343334662520,0x30202c3339326625\n"
".quad 0x3030303030304366,0x3333346625202c30,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x39326625202c3533,0x3030436630202c31,0x25202c3030303030,0x6d660a3b34333466\n"
".quad 0x3233662e6e722e61,0x202c363334662520,0x25202c3231346625,0x6625202c35383266\n"
".quad 0x6f6c2e0a3b353334,0x3430333220322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x326625202c373334,0x45336630202c3737,0x202c303030303030,0x660a3b3633346625\n"
".quad 0x33662e6e722e616d,0x2c38333466252032,0x202c343832662520,0x3030303045336630\n"
".quad 0x33346625202c3030,0x662e6275730a3b37,0x3933346625203233,0x202c30316625202c\n"
".quad 0x660a3b3833346625,0x33662e6e722e616d,0x2c30343466252032,0x202c333234662520\n"
".quad 0x25202c3539326625,0x6c2e0a3b30343366,0x303332203220636f,0x2e616d660a312034\n"
".quad 0x25203233662e6e72,0x6625202c31343466,0x326625202c323032,0x34346625202c3239\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x326625202c323434,0x43336630202c3332\n"
".quad 0x202c393345383336,0x660a3b3134346625,0x33662e6e722e616d,0x2c33343466252032\n"
".quad 0x202c343733662520,0x25202c3039326625,0x6d660a3b32343466,0x3233662e6e722e61\n"
".quad 0x202c343434662520,0x25202c3338336625,0x6625202c39383266,0x6f6c2e0a3b333434\n"
".quad 0x3430333220322063,0x722e616d660a3120,0x6625203233662e6e,0x326625202c353434\n"
".quad 0x38326625202c3336,0x3434346625202c36,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x36326625202c3634,0x3045336630202c39,0x25202c3030303030,0x6d660a3b35343466\n"
".quad 0x3233662e6e722e61,0x202c373434662520,0x25202c3539336625,0x6625202c37383266\n"
".quad 0x6f6c2e0a3b363434,0x3430333220322063,0x662e6275730a3120,0x3834346625203233\n"
".quad 0x202c37376625202c,0x660a3b3734346625,0x33662e6e722e616d,0x2c39343466252032\n"
".quad 0x202c333234662520,0x25202c3539326625,0x6c2e0a3b38303466,0x303332203220636f\n"
".quad 0x2e616d660a312034,0x25203233662e6e72,0x6625202c30353466,0x436630202c333932\n"
".quad 0x2c30303030303030,0x0a3b393434662520,0x662e6e722e616d66,0x3135346625203233\n"
".quad 0x2c3139326625202c,0x3030303043663020,0x346625202c303030,0x2e616d660a3b3035\n"
".quad 0x25203233662e6e72,0x6625202c32353466,0x336630202c393532,0x2c30303030303845\n"
".quad 0x0a3b313534662520,0x662e6e722e616d66,0x3335346625203233,0x2c3633336625202c\n"
".quad 0x202c373832662520,0x2e0a3b3235346625,0x3332203220636f6c,0x616d660a31203430\n"
".quad 0x203233662e6e722e,0x25202c3435346625,0x6630202c34383266,0x3030303030304533\n"
".quad 0x3b3335346625202c,0x3233662e6275730a,0x202c353534662520,0x25202c3735346625\n"
".quad 0x646c0a3b34353466,0x752e6d617261702e,0x31336c7225203436,0x32315a5f5b202c33\n"
".quad 0x6279685f645f524c,0x5f53665043444241,0x617261705f666d66,0x6c2e0a3b5d335f6d\n"
".quad 0x333232203220636f,0x2e64616d0a312039,0x25203436732e6f6c,0x7225202c32386c72\n"
".quad 0x336c7225202c396c,0x356c7225202c3331,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3131336c72,0x645f524c32315a5f,0x434442416279685f,0x5f666d665f536650\n"
".quad 0x5d315f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e\n"
".quad 0x336c7225202c3338,0x2e6c68730a3b3131,0x386c722520343662,0x32386c7225202c34\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c35386c,0x0a3b3233202c3438\n"
".quad 0x32203220636f6c2e,0x68730a3120383033,0x7225203436622e6c,0x6c7225202c36386c\n"
".quad 0x610a3b32202c3538,0x25203436732e6464,0x7225202c37386c72,0x6c7225202c33386c\n"
".quad 0x672e74730a3b3638,0x33662e6c61626f6c,0x37386c72255b2032,0x3130336625202c5d\n"
".quad 0x36732e6464610a3b,0x2c38386c72252034,0x34202c396c722520,0x6f6c2e0a3b363930\n"
".quad 0x3137323220322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c39386c\n"
".quad 0x336c7225202c3838,0x356c7225202c3331,0x36622e6c68730a3b,0x2c30396c72252034\n"
".quad 0x202c39386c722520,0x2e7268730a3b3233,0x396c722520343673,0x30396c7225202c31\n"
".quad 0x6c2e0a3b3233202c,0x373232203220636f,0x2e6c68730a312031,0x396c722520343662\n"
".quad 0x31396c7225202c32,0x6464610a3b32202c,0x6c7225203436732e,0x386c7225202c3339\n"
".quad 0x32396c7225202c33,0x3220636f6c2e0a3b,0x0a31203930333220,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x25202c5d33396c72,0x64610a3b38303366,0x7225203436732e64\n"
".quad 0x6c7225202c34396c,0x3b32393138202c39,0x203220636f6c2e0a,0x6d0a312032373232\n"
".quad 0x36732e6f6c2e6461,0x2c35396c72252034,0x202c34396c722520,0x202c3331336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x6c7225202c36396c,0x0a3b3233202c3539\n"
".quad 0x203436732e726873,0x25202c37396c7225,0x3233202c36396c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203237323220,0x203436622e6c6873,0x25202c38396c7225,0x3b32202c37396c72\n"
".quad 0x3436732e6464610a,0x202c39396c722520,0x25202c33386c7225,0x6c2e0a3b38396c72\n"
".quad 0x313332203220636f,0x672e74730a312030,0x33662e6c61626f6c,0x39396c72255b2032\n"
".quad 0x3631336625202c5d,0x36732e6464610a3b,0x3030316c72252034,0x202c396c7225202c\n"
".quad 0x2e0a3b3838323231,0x3232203220636f6c,0x64616d0a31203337,0x203436732e6f6c2e\n"
".quad 0x202c3130316c7225,0x202c3030316c7225,0x202c3331336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3230316c,0x3233202c3130316c,0x36732e7268730a3b\n"
".quad 0x3330316c72252034,0x3230316c7225202c,0x6c2e0a3b3233202c,0x373232203220636f\n"
".quad 0x2e6c68730a312033,0x316c722520343662,0x316c7225202c3430,0x610a3b32202c3330\n"
".quad 0x25203436732e6464,0x25202c3530316c72,0x7225202c33386c72,0x6c2e0a3b3430316c\n"
".quad 0x313332203220636f,0x672e74730a312031,0x33662e6c61626f6c,0x30316c72255b2032\n"
".quad 0x32336625202c5d35,0x732e6464610a3b30,0x30316c7225203436,0x2c396c7225202c36\n"
".quad 0x0a3b343833363120,0x32203220636f6c2e,0x616d0a3120343732,0x3436732e6f6c2e64\n"
".quad 0x2c3730316c722520,0x2c3630316c722520,0x2c3331336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3830316c72,0x33202c3730316c72,0x732e7268730a3b32\n"
".quad 0x30316c7225203436,0x30316c7225202c39,0x2e0a3b3233202c38,0x3232203220636f6c\n"
".quad 0x6c68730a31203437,0x6c7225203436622e,0x6c7225202c303131,0x0a3b32202c393031\n"
".quad 0x203436732e646461,0x202c3131316c7225,0x25202c33386c7225,0x2e0a3b3031316c72\n"
".quad 0x3332203220636f6c,0x2e74730a31203231,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x336625202c5d3131,0x2e6464610a3b3632,0x316c722520343673,0x396c7225202c3231\n"
".quad 0x3b3038343032202c,0x203220636f6c2e0a,0x6d0a312035373232,0x36732e6f6c2e6461\n"
".quad 0x3331316c72252034,0x3231316c7225202c,0x3331336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3431316c7225,0x202c3331316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3531,0x0a3b3233202c3431,0x32203220636f6c2e\n"
".quad 0x68730a3120353732,0x7225203436622e6c,0x7225202c3631316c,0x3b32202c3531316c\n"
".quad 0x3436732e6464610a,0x2c3731316c722520,0x202c33386c722520,0x0a3b3631316c7225\n"
".quad 0x32203220636f6c2e,0x74730a3120333133,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d373131,0x6464610a3b383333,0x6c7225203436732e,0x6c7225202c383131\n"
".quad 0x3637353432202c39,0x3220636f6c2e0a3b,0x0a31203637323220,0x732e6f6c2e64616d\n"
".quad 0x31316c7225203436,0x31316c7225202c39,0x31336c7225202c38,0x3b356c7225202c33\n"
".quad 0x3436622e6c68730a,0x2c3032316c722520,0x2c3931316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c313231,0x3b3233202c303231,0x203220636f6c2e0a\n"
".quad 0x730a312036373232,0x25203436622e6c68,0x25202c3232316c72,0x32202c3132316c72\n"
".quad 0x36732e6464610a3b,0x3332316c72252034,0x2c33386c7225202c,0x3b3232316c722520\n"
".quad 0x203220636f6c2e0a,0x730a312034313332,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3332316c,0x64610a3b31353366,0x7225203436732e64,0x7225202c3432316c\n"
".quad 0x37363832202c396c,0x20636f6c2e0a3b32,0x3120373732322032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3532,0x336c7225202c3432,0x356c7225202c3331\n"
".quad 0x36622e6c68730a3b,0x3632316c72252034,0x3532316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3732316c,0x3233202c3632316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203737323220,0x203436622e6c6873,0x202c3832316c7225,0x202c3732316c7225\n"
".quad 0x732e6464610a3b32,0x32316c7225203436,0x33386c7225202c39,0x3832316c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203531333220,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3932316c72,0x610a3b3136336625,0x25203436732e6464,0x25202c3033316c72\n"
".quad 0x373233202c396c72,0x636f6c2e0a3b3836,0x2038373232203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c313331,0x6c7225202c303331,0x6c7225202c333133\n"
".quad 0x622e6c68730a3b35,0x33316c7225203436,0x33316c7225202c32,0x730a3b3233202c31\n"
".quad 0x25203436732e7268,0x25202c3333316c72,0x33202c3233316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120383732322032,0x3436622e6c68730a,0x2c3433316c722520,0x2c3333316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x386c7225202c3533,0x33316c7225202c33\n"
".quad 0x20636f6c2e0a3b34,0x3120363133322032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3533316c7225,0x0a3b303733662520,0x203436732e646461,0x202c3633316c7225\n"
".quad 0x3633202c396c7225,0x6f6c2e0a3b343638,0x3937323220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3733316c,0x7225202c3633316c,0x7225202c3331336c\n"
".quad 0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3833,0x0a3b3233202c3733\n"
".quad 0x203436732e726873,0x202c3933316c7225,0x202c3833316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2039373232203220,0x36622e6c68730a31,0x3034316c72252034,0x3933316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c313431,0x316c7225202c3338\n"
".quad 0x636f6c2e0a3b3034,0x2037313332203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x5d3134316c72255b,0x3b3837336625202c,0x3436732e6464610a,0x2c3234316c722520\n"
".quad 0x34202c396c722520,0x6c2e0a3b30363930,0x383232203220636f,0x2e64616d0a312030\n"
".quad 0x25203436732e6f6c,0x25202c3334316c72,0x25202c3234316c72,0x25202c3331336c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c343431,0x3b3233202c333431\n"
".quad 0x3436732e7268730a,0x2c3534316c722520,0x2c3434316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3038323220322063,0x622e6c68730a3120,0x34316c7225203436,0x34316c7225202c36\n"
".quad 0x64610a3b32202c35,0x7225203436732e64,0x7225202c3734316c,0x6c7225202c33386c\n"
".quad 0x6f6c2e0a3b363431,0x3831333220322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3734316c72255b20,0x3838336625202c5d,0x36732e6464610a3b,0x3834316c72252034\n"
".quad 0x202c396c7225202c,0x2e0a3b3635303534,0x3232203220636f6c,0x64616d0a31203138\n"
".quad 0x203436732e6f6c2e,0x202c3934316c7225,0x202c3834316c7225,0x202c3331336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3035316c,0x3233202c3934316c\n"
".quad 0x36732e7268730a3b,0x3135316c72252034,0x3035316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x383232203220636f,0x2e6c68730a312031,0x316c722520343662,0x316c7225202c3235\n"
".quad 0x610a3b32202c3135,0x25203436732e6464,0x25202c3335316c72,0x7225202c33386c72\n"
".quad 0x6c2e0a3b3235316c,0x313332203220636f,0x672e74730a312039,0x33662e6c61626f6c\n"
".quad 0x35316c72255b2032,0x39336625202c5d33,0x732e6464610a3b37,0x35316c7225203436\n"
".quad 0x2c396c7225202c34,0x0a3b323531393420,0x32203220636f6c2e,0x616d0a3120323832\n"
".quad 0x3436732e6f6c2e64,0x2c3535316c722520,0x2c3435316c722520,0x2c3331336c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3635316c72,0x33202c3535316c72\n"
".quad 0x732e7268730a3b32,0x35316c7225203436,0x35316c7225202c37,0x2e0a3b3233202c36\n"
".quad 0x3232203220636f6c,0x6c68730a31203238,0x6c7225203436622e,0x6c7225202c383531\n"
".quad 0x0a3b32202c373531,0x203436732e646461,0x202c3935316c7225,0x25202c33386c7225\n"
".quad 0x2e0a3b3835316c72,0x3332203220636f6c,0x2e74730a31203032,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x346625202c5d3935,0x2e6464610a3b3730,0x316c722520343673\n"
".quad 0x396c7225202c3036,0x3b3834323335202c,0x203220636f6c2e0a,0x6d0a312033383232\n"
".quad 0x36732e6f6c2e6461,0x3136316c72252034,0x3036316c7225202c,0x3331336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3236316c7225,0x202c3136316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3336,0x0a3b3233202c3236\n"
".quad 0x32203220636f6c2e,0x68730a3120333832,0x7225203436622e6c,0x7225202c3436316c\n"
".quad 0x3b32202c3336316c,0x3436732e6464610a,0x2c3536316c722520,0x202c33386c722520\n"
".quad 0x0a3b3436316c7225,0x32203220636f6c2e,0x74730a3120313233,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d353631,0x6464610a3b363134,0x6c7225203436732e\n"
".quad 0x6c7225202c363631,0x3434333735202c39,0x3220636f6c2e0a3b,0x0a31203438323220\n"
".quad 0x732e6f6c2e64616d,0x36316c7225203436,0x36316c7225202c37,0x31336c7225202c36\n"
".quad 0x3b356c7225202c33,0x3436622e6c68730a,0x2c3836316c722520,0x2c3736316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c393631,0x3b3233202c383631\n"
".quad 0x203220636f6c2e0a,0x730a312034383232,0x25203436622e6c68,0x25202c3037316c72\n"
".quad 0x32202c3936316c72,0x36732e6464610a3b,0x3137316c72252034,0x2c33386c7225202c\n"
".quad 0x3b3037316c722520,0x203220636f6c2e0a,0x730a312032323332,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3137316c,0x64610a3b32323466,0x7225203436732e64\n"
".quad 0x7225202c3237316c,0x34343136202c396c,0x20636f6c2e0a3b30,0x3120353832322032\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3337,0x336c7225202c3237\n"
".quad 0x356c7225202c3331,0x36622e6c68730a3b,0x3437316c72252034,0x3337316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3537316c,0x3233202c3437316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203538323220,0x203436622e6c6873,0x202c3637316c7225\n"
".quad 0x202c3537316c7225,0x732e6464610a3b32,0x37316c7225203436,0x33386c7225202c37\n"
".quad 0x3637316c7225202c,0x3220636f6c2e0a3b,0x0a31203332333220,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3737316c72,0x610a3b3233346625,0x25203436732e6464\n"
".quad 0x25202c3837316c72,0x353536202c396c72,0x636f6c2e0a3b3633,0x2036383232203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c393731,0x6c7225202c383731\n"
".quad 0x6c7225202c333133,0x622e6c68730a3b35,0x38316c7225203436,0x37316c7225202c30\n"
".quad 0x730a3b3233202c39,0x25203436732e7268,0x25202c3138316c72,0x33202c3038316c72\n"
".quad 0x20636f6c2e0a3b32,0x3120363832322032,0x3436622e6c68730a,0x2c3238316c722520\n"
".quad 0x2c3138316c722520,0x2e6464610a3b3220,0x316c722520343673,0x386c7225202c3338\n"
".quad 0x38316c7225202c33,0x20636f6c2e0a3b32,0x3120343233322032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3338316c7225,0x0a3b393334662520,0x203436732e646461\n"
".quad 0x202c3438316c7225,0x3936202c396c7225,0x6f6c2e0a3b323336,0x3738323220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3538316c,0x7225202c3438316c\n"
".quad 0x7225202c3331336c,0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3638\n"
".quad 0x0a3b3233202c3538,0x203436732e726873,0x202c3738316c7225,0x202c3638316c7225\n"
".quad 0x636f6c2e0a3b3233,0x2037383232203220,0x36622e6c68730a31,0x3838316c72252034\n"
".quad 0x3738316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c393831\n"
".quad 0x316c7225202c3338,0x636f6c2e0a3b3838,0x2035323332203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x5d3938316c72255b,0x3b3834346625202c,0x3436732e6464610a\n"
".quad 0x2c3039316c722520,0x37202c396c722520,0x6c2e0a3b38323733,0x383232203220636f\n"
".quad 0x2e64616d0a312038,0x25203436732e6f6c,0x25202c3139316c72,0x25202c3039316c72\n"
".quad 0x25202c3331336c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c323931\n"
".quad 0x3b3233202c313931,0x3436732e7268730a,0x2c3339316c722520,0x2c3239316c722520\n"
".quad 0x6f6c2e0a3b323320,0x3838323220322063,0x622e6c68730a3120,0x39316c7225203436\n"
".quad 0x39316c7225202c34,0x64610a3b32202c33,0x7225203436732e64,0x7225202c3539316c\n"
".quad 0x6c7225202c33386c,0x6f6c2e0a3b343931,0x3632333220322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x3539316c72255b20,0x3535346625202c5d,0x3220636f6c2e0a3b\n"
".quad 0x0a32203932333220,0x42420a0a3b746572,0x64610a3a355f3132,0x7225203436732e64\n"
".quad 0x7225202c3839316c,0x376c7225202c366c,0x36732e6464610a3b,0x3939316c72252034\n"
".quad 0x3839316c7225202c,0x0a3b36393034202c,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x5a5f5b202c323133,0x685f645f524c3231,0x6650434442416279,0x61705f666d665f53\n"
".quad 0x0a3b5d335f6d6172,0x32203220636f6c2e,0x616d0a3120313732,0x3436732e6f6c2e64\n"
".quad 0x2c3130326c722520,0x2c3939316c722520,0x2c3231336c722520,0x6c0a3b356c722520\n"
".quad 0x2e6d617261702e64,0x336c722520343675,0x315a5f5b202c3031,0x79685f645f524c32\n"
".quad 0x5366504344424162,0x7261705f666d665f,0x630a3b5d315f6d61,0x672e6f742e617476\n"
".quad 0x36752e6c61626f6c,0x3230326c72252034,0x3031336c7225202c,0x36622e6c68730a3b\n"
".quad 0x3330326c72252034,0x3130326c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3430326c,0x3233202c3330326c,0x3220636f6c2e0a3b,0x0a31203137323220\n"
".quad 0x203436622e6c6873,0x202c3530326c7225,0x202c3430326c7225,0x732e6464610a3b32\n"
".quad 0x30326c7225203436,0x30326c7225202c36,0x30326c7225202c32,0x6c672e74730a3b35\n"
".quad 0x3233662e6c61626f,0x3630326c72255b20,0x3b31346625202c5d,0x3436732e6464610a\n"
".quad 0x2c3730326c722520,0x2c3839316c722520,0x2e0a3b3239313820,0x3232203220636f6c\n"
".quad 0x64616d0a31203237,0x203436732e6f6c2e,0x202c3830326c7225,0x202c3730326c7225\n"
".quad 0x202c3231336c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3930326c\n"
".quad 0x3233202c3830326c,0x36732e7268730a3b,0x3031326c72252034,0x3930326c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x373232203220636f,0x2e6c68730a312032,0x326c722520343662\n"
".quad 0x326c7225202c3131,0x610a3b32202c3031,0x25203436732e6464,0x25202c3231326c72\n"
".quad 0x25202c3230326c72,0x730a3b3131326c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3231326c,0x2e6464610a3b3566,0x326c722520343673,0x316c7225202c3331\n"
".quad 0x38323231202c3839,0x20636f6c2e0a3b38,0x3120333732322032,0x2e6f6c2e64616d0a\n"
".quad 0x326c722520343673,0x326c7225202c3431,0x336c7225202c3331,0x356c7225202c3231\n"
".quad 0x36622e6c68730a3b,0x3531326c72252034,0x3431326c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3631326c,0x3233202c3531326c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203337323220,0x203436622e6c6873,0x202c3731326c7225,0x202c3631326c7225\n"
".quad 0x732e6464610a3b32,0x31326c7225203436,0x30326c7225202c38,0x31326c7225202c32\n"
".quad 0x6c672e74730a3b37,0x3233662e6c61626f,0x3831326c72255b20,0x3b35336625202c5d\n"
".quad 0x3436732e6464610a,0x2c3931326c722520,0x2c3839316c722520,0x0a3b343833363120\n"
".quad 0x32203220636f6c2e,0x616d0a3120343732,0x3436732e6f6c2e64,0x2c3032326c722520\n"
".quad 0x2c3931326c722520,0x2c3231336c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3132326c72,0x33202c3032326c72,0x732e7268730a3b32,0x32326c7225203436\n"
".quad 0x32326c7225202c32,0x2e0a3b3233202c31,0x3232203220636f6c,0x6c68730a31203437\n"
".quad 0x6c7225203436622e,0x6c7225202c333232,0x0a3b32202c323232,0x203436732e646461\n"
".quad 0x202c3432326c7225,0x202c3230326c7225,0x0a3b3332326c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3432326c72,0x6464610a3b346625,0x6c7225203436732e\n"
".quad 0x6c7225202c353232,0x343032202c383931,0x636f6c2e0a3b3038,0x2035373232203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c363232,0x6c7225202c353232\n"
".quad 0x6c7225202c323133,0x622e6c68730a3b35,0x32326c7225203436,0x32326c7225202c37\n"
".quad 0x730a3b3233202c36,0x25203436732e7268,0x25202c3832326c72,0x33202c3732326c72\n"
".quad 0x20636f6c2e0a3b32,0x3120353732322032,0x3436622e6c68730a,0x2c3932326c722520\n"
".quad 0x2c3832326c722520,0x2e6464610a3b3220,0x326c722520343673,0x326c7225202c3033\n"
".quad 0x326c7225202c3230,0x672e74730a3b3932,0x33662e6c61626f6c,0x33326c72255b2032\n"
".quad 0x39356625202c5d30,0x36732e6464610a3b,0x3133326c72252034,0x3839316c7225202c\n"
".quad 0x3b3637353432202c,0x203220636f6c2e0a,0x6d0a312036373232,0x36732e6f6c2e6461\n"
".quad 0x3233326c72252034,0x3133326c7225202c,0x3231336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3333326c7225,0x202c3233326c7225,0x2e7268730a3b3233\n"
".quad 0x326c722520343673,0x326c7225202c3433,0x0a3b3233202c3333,0x32203220636f6c2e\n"
".quad 0x68730a3120363732,0x7225203436622e6c,0x7225202c3533326c,0x3b32202c3433326c\n"
".quad 0x3436732e6464610a,0x2c3633326c722520,0x2c3230326c722520,0x3b3533326c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3633326c7225,0x610a3b3536662520\n"
".quad 0x25203436732e6464,0x25202c3733326c72,0x32202c3839316c72,0x6c2e0a3b32373638\n"
".quad 0x373232203220636f,0x2e64616d0a312037,0x25203436732e6f6c,0x25202c3833326c72\n"
".quad 0x25202c3733326c72,0x25202c3231336c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c393332,0x3b3233202c383332,0x3436732e7268730a,0x2c3034326c722520\n"
".quad 0x2c3933326c722520,0x6f6c2e0a3b323320,0x3737323220322063,0x622e6c68730a3120\n"
".quad 0x34326c7225203436,0x34326c7225202c31,0x64610a3b32202c30,0x7225203436732e64\n"
".quad 0x7225202c3234326c,0x7225202c3230326c,0x74730a3b3134326c,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d323432,0x2e6464610a3b3734,0x326c722520343673\n"
".quad 0x316c7225202c3334,0x36373233202c3839,0x20636f6c2e0a3b38,0x3120383732322032\n"
".quad 0x2e6f6c2e64616d0a,0x326c722520343673,0x326c7225202c3434,0x336c7225202c3334\n"
".quad 0x356c7225202c3231,0x36622e6c68730a3b,0x3534326c72252034,0x3434326c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3634326c,0x3233202c3534326c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203837323220,0x203436622e6c6873,0x202c3734326c7225\n"
".quad 0x202c3634326c7225,0x732e6464610a3b32,0x34326c7225203436,0x30326c7225202c38\n"
".quad 0x34326c7225202c32,0x6c672e74730a3b37,0x3233662e6c61626f,0x3834326c72255b20\n"
".quad 0x3b33356625202c5d,0x3436732e6464610a,0x2c3934326c722520,0x2c3839316c722520\n"
".quad 0x0a3b343638363320,0x32203220636f6c2e,0x616d0a3120393732,0x3436732e6f6c2e64\n"
".quad 0x2c3035326c722520,0x2c3934326c722520,0x2c3231336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3135326c72,0x33202c3035326c72,0x732e7268730a3b32\n"
".quad 0x35326c7225203436,0x35326c7225202c32,0x2e0a3b3233202c31,0x3232203220636f6c\n"
".quad 0x6c68730a31203937,0x6c7225203436622e,0x6c7225202c333532,0x0a3b32202c323532\n"
".quad 0x203436732e646461,0x202c3435326c7225,0x202c3230326c7225,0x0a3b3335326c7225\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3435326c72,0x6464610a3b396625\n"
".quad 0x6c7225203436732e,0x6c7225202c353532,0x393034202c383931,0x636f6c2e0a3b3036\n"
".quad 0x2030383232203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c363532\n"
".quad 0x6c7225202c353532,0x6c7225202c323133,0x622e6c68730a3b35,0x35326c7225203436\n"
".quad 0x35326c7225202c37,0x730a3b3233202c36,0x25203436732e7268,0x25202c3835326c72\n"
".quad 0x33202c3735326c72,0x20636f6c2e0a3b32,0x3120303832322032,0x3436622e6c68730a\n"
".quad 0x2c3935326c722520,0x2c3835326c722520,0x2e6464610a3b3220,0x326c722520343673\n"
".quad 0x326c7225202c3036,0x326c7225202c3230,0x672e74730a3b3935,0x33662e6c61626f6c\n"
".quad 0x36326c72255b2032,0x37376625202c5d30,0x36732e6464610a3b,0x3136326c72252034\n"
".quad 0x3839316c7225202c,0x3b3635303534202c,0x203220636f6c2e0a,0x6d0a312031383232\n"
".quad 0x36732e6f6c2e6461,0x3236326c72252034,0x3136326c7225202c,0x3231336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3336326c7225,0x202c3236326c7225\n"
".quad 0x2e7268730a3b3233,0x326c722520343673,0x326c7225202c3436,0x0a3b3233202c3336\n"
".quad 0x32203220636f6c2e,0x68730a3120313832,0x7225203436622e6c,0x7225202c3536326c\n"
".quad 0x3b32202c3436326c,0x3436732e6464610a,0x2c3636326c722520,0x2c3230326c722520\n"
".quad 0x3b3536326c722520,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3636326c7225\n"
".quad 0x0a3b373534662520,0x203436732e646461,0x202c3736326c7225,0x202c3839316c7225\n"
".quad 0x2e0a3b3235313934,0x3232203220636f6c,0x64616d0a31203238,0x203436732e6f6c2e\n"
".quad 0x202c3836326c7225,0x202c3736326c7225,0x202c3231336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3936326c,0x3233202c3836326c,0x36732e7268730a3b\n"
".quad 0x3037326c72252034,0x3936326c7225202c,0x6c2e0a3b3233202c,0x383232203220636f\n"
".quad 0x2e6c68730a312032,0x326c722520343662,0x326c7225202c3137,0x610a3b32202c3037\n"
".quad 0x25203436732e6464,0x25202c3237326c72,0x25202c3230326c72,0x730a3b3137326c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3237326c,0x6464610a3b313766\n"
".quad 0x6c7225203436732e,0x6c7225202c333732,0x323335202c383931,0x636f6c2e0a3b3834\n"
".quad 0x2033383232203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c343732\n"
".quad 0x6c7225202c333732,0x6c7225202c323133,0x622e6c68730a3b35,0x37326c7225203436\n"
".quad 0x37326c7225202c35,0x730a3b3233202c34,0x25203436732e7268,0x25202c3637326c72\n"
".quad 0x33202c3537326c72,0x20636f6c2e0a3b32,0x3120333832322032,0x3436622e6c68730a\n"
".quad 0x2c3737326c722520,0x2c3637326c722520,0x2e6464610a3b3220,0x326c722520343673\n"
".quad 0x326c7225202c3837,0x326c7225202c3230,0x672e74730a3b3737,0x33662e6c61626f6c\n"
".quad 0x37326c72255b2032,0x30316625202c5d38,0x36732e6464610a3b,0x3937326c72252034\n"
".quad 0x3839316c7225202c,0x3b3434333735202c,0x203220636f6c2e0a,0x6d0a312034383232\n"
".quad 0x36732e6f6c2e6461,0x3038326c72252034,0x3937326c7225202c,0x3231336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3138326c7225,0x202c3038326c7225\n"
".quad 0x2e7268730a3b3233,0x326c722520343673,0x326c7225202c3238,0x0a3b3233202c3138\n"
".quad 0x32203220636f6c2e,0x68730a3120343832,0x7225203436622e6c,0x7225202c3338326c\n"
".quad 0x3b32202c3238326c,0x3436732e6464610a,0x2c3438326c722520,0x2c3230326c722520\n"
".quad 0x3b3338326c722520,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3438326c7225\n"
".quad 0x64610a3b36662520,0x7225203436732e64,0x7225202c3538326c,0x3136202c3839316c\n"
".quad 0x6f6c2e0a3b303434,0x3538323220322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3638326c,0x7225202c3538326c,0x7225202c3231336c,0x2e6c68730a3b356c\n"
".quad 0x326c722520343662,0x326c7225202c3738,0x0a3b3233202c3638,0x203436732e726873\n"
".quad 0x202c3838326c7225,0x202c3738326c7225,0x636f6c2e0a3b3233,0x2035383232203220\n"
".quad 0x36622e6c68730a31,0x3938326c72252034,0x3838326c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c303932,0x6c7225202c323032,0x2e74730a3b393832\n"
".quad 0x662e6c61626f6c67,0x326c72255b203233,0x386625202c5d3039,0x732e6464610a3b39\n"
".quad 0x39326c7225203436,0x39316c7225202c31,0x3633353536202c38,0x3220636f6c2e0a3b\n"
".quad 0x0a31203638323220,0x732e6f6c2e64616d,0x39326c7225203436,0x39326c7225202c32\n"
".quad 0x31336c7225202c31,0x3b356c7225202c32,0x3436622e6c68730a,0x2c3339326c722520\n"
".quad 0x2c3239326c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c343932\n"
".quad 0x3b3233202c333932,0x203220636f6c2e0a,0x730a312036383232,0x25203436622e6c68\n"
".quad 0x25202c3539326c72,0x32202c3439326c72,0x36732e6464610a3b,0x3639326c72252034\n"
".quad 0x3230326c7225202c,0x3539326c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x5d3639326c72255b,0x610a3b386625202c,0x25203436732e6464,0x25202c3739326c72\n"
".quad 0x36202c3839316c72,0x6c2e0a3b32333639,0x383232203220636f,0x2e64616d0a312037\n"
".quad 0x25203436732e6f6c,0x25202c3839326c72,0x25202c3739326c72,0x25202c3231336c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c393932,0x3b3233202c383932\n"
".quad 0x3436732e7268730a,0x2c3030336c722520,0x2c3939326c722520,0x6f6c2e0a3b323320\n"
".quad 0x3738323220322063,0x622e6c68730a3120,0x30336c7225203436,0x30336c7225202c31\n"
".quad 0x64610a3b32202c30,0x7225203436732e64,0x7225202c3230336c,0x7225202c3230326c\n"
".quad 0x74730a3b3130336c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d323033\n"
".quad 0x2e6464610a3b3338,0x336c722520343673,0x316c7225202c3330,0x32373337202c3839\n"
".quad 0x20636f6c2e0a3b38,0x3120383832322032,0x2e6f6c2e64616d0a,0x336c722520343673\n"
".quad 0x336c7225202c3430,0x336c7225202c3330,0x356c7225202c3231,0x36622e6c68730a3b\n"
".quad 0x3530336c72252034,0x3430336c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3630336c,0x3233202c3530336c,0x3220636f6c2e0a3b,0x0a31203838323220\n"
".quad 0x203436622e6c6873,0x202c3730336c7225,0x202c3630336c7225,0x732e6464610a3b32\n"
".quad 0x30336c7225203436,0x30326c7225202c38,0x30336c7225202c32,0x6c672e74730a3b37\n"
".quad 0x3233662e6c61626f,0x3830336c72255b20,0x0a3b376625202c5d,0x3a365f313242420a\n"
".quad 0x203220636f6c2e0a,0x720a322039323332,0x2e0a0a7d0a3b7465,0x5a5f207972746e65\n"
".quad 0x685f645f524c3331,0x5032434442416279,0x2869666d665f5366,0x206d617261702e0a\n"
".quad 0x315a5f203436752e,0x79685f645f524c33,0x6650324344424162,0x705f69666d665f53\n"
".quad 0x0a2c305f6d617261,0x2e206d617261702e,0x33315a5f20343675,0x6279685f645f524c\n"
".quad 0x5366503243444241,0x61705f69666d665f,0x2e0a2c315f6d6172,0x662e206d61726170\n"
".quad 0x4c33315a5f203233,0x416279685f645f52,0x5f53665032434442,0x7261705f69666d66\n"
".quad 0x702e0a2c325f6d61,0x36752e206d617261,0x524c33315a5f2034,0x42416279685f645f\n"
".quad 0x665f536650324344,0x617261705f69666d,0x61702e0a2c335f6d,0x3233662e206d6172\n"
".quad 0x5f524c33315a5f20,0x4442416279685f64,0x6d665f5366503243,0x6d617261705f6966\n"
".quad 0x7261702e0a2c345f,0x203233752e206d61,0x645f524c33315a5f,0x434442416279685f\n"
".quad 0x666d665f53665032,0x5f6d617261705f69,0x722e0a7b0a290a35,0x203233662e206765\n"
".quad 0x3b3e3835343c6625,0x702e206765722e0a,0x313c702520646572,0x6765722e0a3b3e34\n"
".quad 0x7225203233732e20,0x2e0a3b3e3932313c,0x3436732e20676572,0x3631333c6c722520\n"
".quad 0x2e646c0a0a0a3b3e,0x36752e6d61726170,0x202c316c72252034,0x5f524c33315a5f5b\n"
".quad 0x4442416279685f64,0x6d665f5366503243,0x6d617261705f6966,0x2e646c0a3b5d305f\n"
".quad 0x36752e6d61726170,0x202c336c72252034,0x5f524c33315a5f5b,0x4442416279685f64\n"
".quad 0x6d665f5366503243,0x6d617261705f6966,0x2e646c0a3b5d335f,0x33752e6d61726170\n"
".quad 0x5b202c3672252032,0x645f524c33315a5f,0x434442416279685f,0x666d665f53665032\n"
".quad 0x5f6d617261705f69,0x617476630a3b5d35,0x626f6c672e6f742e,0x25203436752e6c61\n"
".quad 0x6c7225202c346c72,0x20636f6c2e0a3b31,0x3120333333322032,0x3233752e766f6d0a\n"
".quad 0x6e25202c37722520,0x6d0a3b782e646974,0x25203233752e766f,0x61746325202c3872\n"
".quad 0x6f6d0a3b782e6469,0x7225203233752e76,0x2e64697425202c32,0x6c2e64616d0a3b78\n"
".quad 0x7225203233732e6f,0x202c377225202c39,0x327225202c387225,0x3220636f6c2e0a3b\n"
".quad 0x0a31203433333220,0x203233752e766f6d,0x6e25202c30317225,0x6d0a3b792e646974\n"
".quad 0x25203233752e766f,0x746325202c313172,0x6d0a3b792e646961,0x25203233752e766f\n"
".quad 0x697425202c323172,0x64616d0a3b792e64,0x203233732e6f6c2e,0x317225202c337225\n"
".quad 0x2c31317225202c30,0x2e0a3b3231722520,0x3332203220636f6c,0x766f6d0a31203533\n"
".quad 0x317225203233752e,0x6469746e25202c33,0x2e766f6d0a3b7a2e,0x3431722520323375\n"
".quad 0x646961746325202c,0x2e766f6d0a3b7a2e,0x3531722520323375,0x7a2e64697425202c\n"
".quad 0x6f6c2e64616d0a3b,0x347225203233732e,0x202c33317225202c,0x7225202c34317225\n"
".quad 0x636f6c2e0a3b3531,0x2036333332203220,0x6e722e7476630a31,0x3233732e3233662e\n"
".quad 0x25202c3332662520,0x2e616d660a3b3972,0x25203233662e6e72,0x326625202c343266\n"
".quad 0x3046336630202c33,0x30202c3030303030,0x3030304337313466,0x20636f6c2e0a3b30\n"
".quad 0x3120373333322032,0x2e6e722e7476630a,0x203233732e323366,0x337225202c326625\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x202c326625202c35,0x3030303046336630\n"
".quad 0x31346630202c3030,0x0a3b303030304337,0x32203220636f6c2e,0x76630a3120383333\n"
".quad 0x3233662e6e722e74,0x326625203233732e,0x0a3b347225202c36,0x662e6e722e616d66\n"
".quad 0x2c37326625203233,0x30202c3632662520,0x3030303030463366,0x3731346630202c30\n"
".quad 0x630a3b3030303043,0x752e3436752e7476,0x2c356c7225203233,0x6c2e0a3b39722520\n"
".quad 0x343332203220636f,0x2e7476630a312031,0x203233732e343673,0x7225202c366c7225\n"
".quad 0x622e6c68730a3b33,0x202c357225203233,0x0a3b36202c347225,0x32203220636f6c2e\n"
".quad 0x76630a3120313433,0x33732e3436732e74,0x202c376c72252032,0x6464610a3b357225\n"
".quad 0x6c7225203436732e,0x2c376c7225202c39,0x2e0a3b366c722520,0x3332203220636f6c\n"
".quad 0x64616d0a31203134,0x203436732e6f6c2e,0x7225202c386c7225,0x336c7225202c396c\n"
".quad 0x0a3b356c7225202c,0x203233662e646461,0x6625202c38326625,0x32436630202c3432\n"
".quad 0x0a3b303030304537,0x203233662e646461,0x6625202c39326625,0x31436630202c3532\n"
".quad 0x0a3b303030304346,0x37203220636f6c2e,0x2e6c756d0a312030,0x3033662520323366\n"
".quad 0x202c39326625202c,0x6d660a3b39326625,0x3233662e6e722e61,0x25202c3133662520\n"
".quad 0x326625202c383266,0x3b30336625202c38,0x3233662e6464610a,0x25202c3233662520\n"
".quad 0x436630202c373266,0x3b30303030434631,0x203220636f6c2e0a,0x616d660a31203037\n"
".quad 0x203233662e6e722e,0x6625202c33336625,0x32336625202c3233,0x0a3b31336625202c\n"
".quad 0x2e746c2e70746573,0x2c31702520323366,0x30202c3333662520,0x3030303038313466\n"
".quad 0x20636f6c2e0a3b30,0x3120343433322032,0x746c2e707465730a,0x327025203233732e\n"
".quad 0x25202c397225202c,0x2e766f6d0a3b3672,0x3631722520323375,0x6c2e0a3b3336202c\n"
".quad 0x343332203220636f,0x2e6275730a312034,0x3731722520323373,0x202c36317225202c\n"
".quad 0x7465730a3b367225,0x3233732e74672e70,0x7225202c33702520,0x3b37317225202c39\n"
".quad 0x646572702e726f0a,0x7025202c34702520,0x0a3b337025202c32,0x32203220636f6c2e\n"
".quad 0x65730a3120343433,0x33732e746c2e7074,0x25202c3570252032,0x3b367225202c3372\n"
".quad 0x646572702e726f0a,0x7025202c36702520,0x0a3b357025202c34,0x32203220636f6c2e\n"
".quad 0x65730a3120343433,0x33732e74672e7074,0x25202c3770252032,0x37317225202c3372\n"
".quad 0x6572702e726f0a3b,0x25202c3870252064,0x3b377025202c3670,0x203220636f6c2e0a\n"
".quad 0x730a312034343332,0x732e746c2e707465,0x202c397025203233,0x367225202c347225\n"
".quad 0x6572702e726f0a3b,0x202c303170252064,0x397025202c387025,0x3220636f6c2e0a3b\n"
".quad 0x0a31203434333220,0x2e74672e70746573,0x3131702520323373,0x25202c347225202c\n"
".quad 0x2e726f0a3b373172,0x3170252064657270,0x2c30317025202c32,0x2e0a3b3131702520\n"
".quad 0x3332203220636f6c,0x7025400a31203434,0x4220617262203231,0x0a0a3b365f323242\n"
".quad 0x203436622e6c6873,0x25202c30316c7225,0x3b3233202c386c72,0x3436732e7268730a\n"
".quad 0x202c31316c722520,0x33202c30316c7225,0x20636f6c2e0a3b32,0x3120393433322032\n"
".quad 0x3436622e6c68730a,0x202c32316c722520,0x32202c31316c7225,0x36732e6464610a3b\n"
".quad 0x2c33316c72252034,0x25202c346c722520,0x646c0a3b32316c72,0x2e6c61626f6c672e\n"
".quad 0x2c33662520323366,0x5d33316c72255b20,0x33732e6464610a3b,0x202c393172252032\n"
".quad 0x3b312d202c337225,0x203220636f6c2e0a,0x630a312030353332,0x732e3436732e7476\n"
".quad 0x34316c7225203233,0x0a3b39317225202c,0x203436732e646461,0x25202c35316c7225\n"
".quad 0x7225202c34316c72,0x2e6464610a3b376c,0x316c722520343673,0x35316c7225202c36\n"
".quad 0x0a3b32393138202c,0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c353133\n"
".quad 0x685f645f524c3331,0x5032434442416279,0x5f69666d665f5366,0x5d335f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x0a31203035333220,0x732e6f6c2e64616d,0x37316c7225203436\n"
".quad 0x2c36316c7225202c,0x2c3531336c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x7225202c38316c72,0x3b3233202c37316c,0x3436732e7268730a,0x202c39316c722520\n"
".quad 0x33202c38316c7225,0x20636f6c2e0a3b32,0x3120303533322032,0x3436622e6c68730a\n"
".quad 0x202c30326c722520,0x32202c39316c7225,0x36732e6464610a3b,0x2c31326c72252034\n"
".quad 0x25202c346c722520,0x646c0a3b30326c72,0x2e6c61626f6c672e,0x2c34662520323366\n"
".quad 0x5d31326c72255b20,0x3220636f6c2e0a3b,0x0a31203135333220,0x203233732e646461\n"
".quad 0x7225202c31327225,0x76630a3b31202c33,0x33732e3436732e74,0x2c32326c72252032\n"
".quad 0x610a3b3132722520,0x25203436732e6464,0x7225202c33326c72,0x6c7225202c32326c\n"
".quad 0x732e6464610a3b37,0x34326c7225203436,0x2c33326c7225202c,0x0a3b343833363120\n"
".quad 0x32203220636f6c2e,0x616d0a3120313533,0x3436732e6f6c2e64,0x202c35326c722520\n"
".quad 0x25202c34326c7225,0x25202c3531336c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x326c7225202c3632,0x730a3b3233202c35,0x25203436732e7268,0x7225202c37326c72\n"
".quad 0x3b3233202c36326c,0x203220636f6c2e0a,0x730a312031353332,0x25203436622e6c68\n"
".quad 0x7225202c38326c72,0x0a3b32202c37326c,0x203436732e646461,0x25202c39326c7225\n"
".quad 0x6c7225202c346c72,0x672e646c0a3b3832,0x33662e6c61626f6c,0x5b202c3566252032\n"
".quad 0x0a3b5d39326c7225,0x203233732e646461,0x7225202c33327225,0x0a3b34362d202c35\n"
".quad 0x32203220636f6c2e,0x76630a3120323533,0x33732e3436732e74,0x2c30336c72252032\n"
".quad 0x610a3b3332722520,0x25203436732e6464,0x7225202c31336c72,0x336c7225202c366c\n"
".quad 0x732e6464610a3b30,0x32336c7225203436,0x2c31336c7225202c,0x0a3b343638363320\n"
".quad 0x32203220636f6c2e,0x616d0a3120323533,0x3436732e6f6c2e64,0x202c33336c722520\n"
".quad 0x25202c32336c7225,0x25202c3531336c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x336c7225202c3433,0x730a3b3233202c33,0x25203436732e7268,0x7225202c35336c72\n"
".quad 0x3b3233202c34336c,0x203220636f6c2e0a,0x730a312032353332,0x25203436622e6c68\n"
".quad 0x7225202c36336c72,0x0a3b32202c35336c,0x203436732e646461,0x25202c37336c7225\n"
".quad 0x6c7225202c346c72,0x672e646c0a3b3633,0x33662e6c61626f6c,0x5b202c3666252032\n"
".quad 0x0a3b5d37336c7225,0x203436732e646461,0x25202c38336c7225,0x7225202c34316c72\n"
".quad 0x6464610a3b30336c,0x6c7225203436732e,0x336c7225202c3933,0x3635303534202c38\n"
".quad 0x3220636f6c2e0a3b,0x0a31203335333220,0x732e6f6c2e64616d,0x30346c7225203436\n"
".quad 0x2c39336c7225202c,0x2c3531336c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x7225202c31346c72,0x3b3233202c30346c,0x3436732e7268730a,0x202c32346c722520\n"
".quad 0x33202c31346c7225,0x20636f6c2e0a3b32,0x3120333533322032,0x3436622e6c68730a\n"
".quad 0x202c33346c722520,0x32202c32346c7225,0x36732e6464610a3b,0x2c34346c72252034\n"
".quad 0x25202c346c722520,0x646c0a3b33346c72,0x2e6c61626f6c672e,0x2c37662520323366\n"
".quad 0x5d34346c72255b20,0x36732e6464610a3b,0x2c35346c72252034,0x202c32326c722520\n"
".quad 0x610a3b30336c7225,0x25203436732e6464,0x7225202c36346c72,0x323335202c35346c\n"
".quad 0x636f6c2e0a3b3834,0x2034353332203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x346c7225202c3734,0x31336c7225202c36,0x3b356c7225202c35,0x3436622e6c68730a\n"
".quad 0x202c38346c722520,0x33202c37346c7225,0x732e7268730a3b32,0x39346c7225203436\n"
".quad 0x2c38346c7225202c,0x6f6c2e0a3b323320,0x3435333220322063,0x622e6c68730a3120\n"
".quad 0x30356c7225203436,0x2c39346c7225202c,0x2e6464610a3b3220,0x356c722520343673\n"
".quad 0x2c346c7225202c31,0x0a3b30356c722520,0x61626f6c672e646c,0x6625203233662e6c\n"
".quad 0x356c72255b202c38,0x2e6464610a3b5d31,0x3732722520323373,0x36202c357225202c\n"
".quad 0x20636f6c2e0a3b34,0x3120353533322032,0x3436732e7476630a,0x6c7225203233732e\n"
".quad 0x37327225202c3235,0x36732e6464610a3b,0x2c33356c72252034,0x25202c366c722520\n"
".quad 0x64610a3b32356c72,0x7225203436732e64,0x6c7225202c34356c,0x34333735202c3335\n"
".quad 0x20636f6c2e0a3b34,0x3120353533322032,0x2e6f6c2e64616d0a,0x356c722520343673\n"
".quad 0x34356c7225202c35,0x3531336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x25202c36356c7225,0x3233202c35356c72,0x36732e7268730a3b,0x2c37356c72252034\n"
".quad 0x202c36356c722520,0x636f6c2e0a3b3233,0x2035353332203220,0x36622e6c68730a31\n"
".quad 0x2c38356c72252034,0x202c37356c722520,0x732e6464610a3b32,0x39356c7225203436\n"
".quad 0x202c346c7225202c,0x6c0a3b38356c7225,0x6c61626f6c672e64,0x396625203233662e\n"
".quad 0x39356c72255b202c,0x732e6464610a3b5d,0x30366c7225203436,0x2c34316c7225202c\n"
".quad 0x0a3b32356c722520,0x203436732e646461,0x25202c31366c7225,0x3536202c30366c72\n"
".quad 0x6f6c2e0a3b363335,0x3635333220322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c32366c,0x336c7225202c3136,0x356c7225202c3531,0x36622e6c68730a3b\n"
".quad 0x2c33366c72252034,0x202c32366c722520,0x2e7268730a3b3233,0x366c722520343673\n"
".quad 0x33366c7225202c34,0x6c2e0a3b3233202c,0x353332203220636f,0x2e6c68730a312036\n"
".quad 0x366c722520343662,0x34366c7225202c35,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x346c7225202c3636,0x3b35366c7225202c,0x626f6c672e646c0a,0x25203233662e6c61\n"
".quad 0x72255b202c303166,0x6c2e0a3b5d36366c,0x353332203220636f,0x707465730a312037\n"
".quad 0x203233732e71652e,0x7225202c33317025,0x400a3b3336202c34,0x6172622033317025\n"
".quad 0x3b335f3232424220,0x3220636f6c2e0a0a,0x0a31203135333220,0x2e3436752e747663\n"
".quad 0x366c722520323375,0x3b31327225202c37,0x203220636f6c2e0a,0x630a312035353332\n"
".quad 0x752e3436752e7476,0x38366c7225203233,0x0a3b37327225202c,0x203436732e646461\n"
".quad 0x25202c39366c7225,0x7225202c37366c72,0x6464610a3b38366c,0x6c7225203436732e\n"
".quad 0x366c7225202c3037,0x3832373337202c39,0x36752e7476630a3b,0x7225203233752e34\n"
".quad 0x397225202c31376c,0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3431336c72\n"
".quad 0x645f524c33315a5f,0x434442416279685f,0x666d665f53665032,0x5f6d617261705f69\n"
".quad 0x636f6c2e0a3b5d33,0x2038353332203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x376c7225202c3237,0x31336c7225202c30,0x31376c7225202c34,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3930336c72,0x645f524c33315a5f,0x434442416279685f\n"
".quad 0x666d665f53665032,0x5f6d617261705f69,0x617476630a3b5d30,0x626f6c672e6f742e\n"
".quad 0x25203436752e6c61,0x7225202c33376c72,0x68730a3b3930336c,0x7225203436622e6c\n"
".quad 0x6c7225202c34376c,0x0a3b3233202c3237,0x203436732e726873,0x25202c35376c7225\n"
".quad 0x3233202c34376c72,0x3220636f6c2e0a3b,0x0a31203835333220,0x203436622e6c6873\n"
".quad 0x25202c36376c7225,0x3b32202c35376c72,0x3436732e6464610a,0x202c37376c722520\n"
".quad 0x25202c33376c7225,0x646c0a3b36376c72,0x2e6c61626f6c672e,0x3534662520323366\n"
".quad 0x376c72255b202c37,0x3242420a0a3b5d37,0x6464610a3a335f32,0x357225203233732e\n"
".quad 0x202c397225202c30,0x636f6c2e0a3b312d,0x2030363332203220,0x6e722e7476630a31\n"
".quad 0x3233732e3233662e,0x25202c3539662520,0x6464610a3b303572,0x386625203233662e\n"
".quad 0x2c35396625202c37,0x3030304633663020,0x7476630a3b303030,0x2e3233662e6e722e\n"
".quad 0x3639662520323373,0x610a3b357225202c,0x25203233662e6464,0x326625202c373966\n"
".quad 0x303046336630202c,0x64610a3b30303030,0x6625203233662e64,0x37396625202c3634\n"
".quad 0x0a3b36396625202c,0x203233752e766f6d,0x3b30202c36357225,0x322e786574090a0a\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x36336625202c3533,0x202c37336625202c\n"
".quad 0x5b202c7d38336625,0x665f666552786574,0x3866257b202c4431,0x7d36346625202c37\n"
".quad 0x6f6c2e090a0a3b5d,0x3136333220322063,0x732e6464610a3120,0x2c37357225203233\n"
".quad 0x3b31202c39722520,0x2e6e722e7476630a,0x203233732e323366,0x7225202c38396625\n"
".quad 0x2e6464610a3b3735,0x3339662520323366,0x202c38396625202c,0x3030303046336630\n"
".quad 0x6574090a0a3b3030,0x2e34762e64322e78,0x203233662e323366,0x25202c313466257b\n"
".quad 0x346625202c323466,0x7d34346625202c33,0x65527865745b202c,0x7b202c4433665f66\n"
".quad 0x6625202c33396625,0x090a0a3b5d7d3634,0x32203220636f6c2e,0x76630a3120323633\n"
".quad 0x3233662e6e722e74,0x396625203233732e,0x3b39317225202c39,0x3233662e6464610a\n"
".quad 0x202c303031662520,0x6630202c39396625,0x3030303030304633,0x33662e6464610a3b\n"
".quad 0x202c383566252032,0x25202c3030316625,0x74090a0a3b363966,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x202c373466257b20,0x6625202c38346625,0x30356625202c3934\n"
".quad 0x527865745b202c7d,0x202c4435665f6665,0x25202c373866257b,0x0a0a3b5d7d383566\n"
".quad 0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e,0x34356625202c3335\n"
".quad 0x202c35356625202c,0x5b202c7d36356625,0x665f666552786574,0x3966257b202c4436\n"
".quad 0x7d38356625202c33,0x6f6c2e090a0a3b5d,0x3436333220322063,0x722e7476630a3120\n"
".quad 0x33732e3233662e6e,0x2c31303166252032,0x610a3b3132722520,0x25203233662e6464\n"
".quad 0x6625202c32303166,0x336630202c313031,0x3b30303030303046,0x3233662e6464610a\n"
".quad 0x25202c3037662520,0x6625202c32303166,0x6574090a0a3b3639,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x25202c393566257b,0x366625202c303666,0x7d32366625202c31\n"
".quad 0x65527865745b202c,0x7b202c4437665f66,0x6625202c33396625,0x090a0a3b5d7d3037\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3666257b20323366,0x2c36366625202c35\n"
".quad 0x25202c3736662520,0x745b202c7d383666,0x38665f6665527865,0x373866257b202c44\n"
".quad 0x5d7d30376625202c,0x636f6c2e090a0a3b,0x2036363332203220,0x6e722e7476630a31\n"
".quad 0x3233732e3233662e,0x202c333031662520,0x64610a3b37327225,0x6625203233662e64\n"
".quad 0x37396625202c3238,0x3b3330316625202c,0x322e786574090a0a,0x3233662e34762e64\n"
".quad 0x66257b203233662e,0x32376625202c3137,0x202c33376625202c,0x5b202c7d34376625\n"
".quad 0x665f666552786574,0x66257b202c443531,0x32386625202c3738,0x090a090a0a3b5d7d\n"
".quad 0x762e64322e786574,0x33662e3233662e34,0x2c373766257b2032,0x25202c3837662520\n"
".quad 0x386625202c393766,0x7865745b202c7d30,0x443731665f666552,0x2c333966257b202c\n"
".quad 0x3b5d7d3238662520,0x20636f6c2e090a0a,0x3120383633322032,0x2e6e722e7476630a\n"
".quad 0x203233732e323366,0x25202c3430316625,0x6464610a3b333272,0x396625203233662e\n"
".quad 0x2c37396625202c34,0x0a3b343031662520,0x64322e786574090a,0x2e3233662e34762e\n"
".quad 0x3866257b20323366,0x2c34386625202c33,0x25202c3538662520,0x745b202c7d363866\n"
".quad 0x31665f6665527865,0x3866257b202c4430,0x7d34396625202c37,0x74090a090a0a3b5d\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x202c393866257b20,0x6625202c30396625\n"
".quad 0x32396625202c3139,0x527865745b202c7d,0x2c443231665f6665,0x202c333966257b20\n"
".quad 0x0a3b5d7d34396625,0x3220636f6c2e090a,0x0a31203237333220,0x6172622031702540\n"
".quad 0x3b355f3232424220,0x3220636f6c2e0a0a,0x0a31203630343220,0x203233662e627573\n"
".quad 0x25202c3530316625,0x346625202c353366,0x662e6464610a3b31,0x3630316625203233\n"
".quad 0x2c3530316625202c,0x730a3b3734662520,0x25203233662e6275,0x6625202c37303166\n"
".quad 0x356625202c363031,0x662e6275730a3b33,0x3830316625203233,0x2c3730316625202c\n"
".quad 0x610a3b3935662520,0x25203233662e6464,0x6625202c39303166,0x366625202c383031\n"
".quad 0x662e6464610a3b35,0x3031316625203233,0x2c3930316625202c,0x730a3b3338662520\n"
".quad 0x25203233662e6275,0x6625202c31313166,0x386625202c303131,0x662e6464610a3b39\n"
".quad 0x3231316625203233,0x2c3131316625202c,0x730a3b3137662520,0x25203233662e6275\n"
".quad 0x6625202c33313166,0x376625202c323131,0x662e6275730a3b37,0x3431316625203233\n"
".quad 0x25202c346625202c,0x2e6464610a3b3566,0x3131662520323366,0x3431316625202c35\n"
".quad 0x0a3b37346625202c,0x203233662e646461,0x25202c3631316625,0x6625202c35313166\n"
".quad 0x2e6275730a3b3335,0x3131662520323366,0x3631316625202c37,0x0a3b39356625202c\n"
".quad 0x203233662e627573,0x25202c3831316625,0x6625202c37313166,0x2e6464610a3b3536\n"
".quad 0x3131662520323366,0x3831316625202c39,0x730a3b376625202c,0x25203233662e6275\n"
".quad 0x6625202c30323166,0x386625202c393131,0x33662e6464610a3b,0x2c31323166252032\n"
".quad 0x202c303231662520,0x75730a3b30316625,0x6625203233662e62,0x316625202c323231\n"
".quad 0x35346625202c3132,0x662e6464610a3b37,0x3332316625203233,0x25202c366625202c\n"
".quad 0x6464610a3b333866,0x316625203233662e,0x32316625202c3432,0x0a3b376625202c33\n"
".quad 0x203233662e646461,0x25202c3532316625,0x6625202c34323166,0x2e6464610a3b3938\n"
".quad 0x3231662520323366,0x3532316625202c36,0x730a3b386625202c,0x25203233662e6275\n"
".quad 0x6625202c37323166,0x396625202c363231,0x33662e6275730a3b,0x2c38323166252032\n"
".quad 0x202c373231662520,0x75730a3b31376625,0x6625203233662e62,0x316625202c393231\n"
".quad 0x30316625202c3832,0x33662e6275730a3b,0x2c30333166252032,0x202c393231662520\n"
".quad 0x75730a3b37376625,0x6625203233662e62,0x316625202c313331,0x35346625202c3033\n"
".quad 0x662e6275730a3b37,0x3233316625203233,0x202c37346625202c,0x6f6c2e0a3b336625\n"
".quad 0x3630343220322063,0x662e6464610a3120,0x3333316625203233,0x2c3233316625202c\n"
".quad 0x610a3b3335662520,0x25203233662e6464,0x6625202c34333166,0x356625202c333331\n"
".quad 0x662e6464610a3b39,0x3533316625203233,0x2c3433316625202c,0x610a3b3536662520\n"
".quad 0x25203233662e6464,0x6625202c36333166,0x386625202c353331,0x662e6464610a3b33\n"
".quad 0x3733316625203233,0x2c3633316625202c,0x64610a3b37662520,0x6625203233662e64\n"
".quad 0x316625202c383331,0x39386625202c3733,0x33662e6464610a3b,0x2c39333166252032\n"
".quad 0x202c383331662520,0x6464610a3b386625,0x316625203233662e,0x33316625202c3034\n"
".quad 0x3b31376625202c39,0x3233662e6464610a,0x202c313431662520,0x25202c3034316625\n"
".quad 0x6464610a3b303166,0x316625203233662e,0x34316625202c3234,0x3b37376625202c31\n"
".quad 0x3233662e6464610a,0x202c333431662520,0x25202c3234316625,0x756d0a3b37353466\n"
".quad 0x6625203233662e6c,0x316625202c343431,0x32316625202c3232,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x316625202c353431,0x31316625202c3331,0x3434316625202c33\n"
".quad 0x33662e6c756d0a3b,0x2c36343166252032,0x202c313331662520,0x660a3b3133316625\n"
".quad 0x33662e6e722e616d,0x2c37343166252032,0x202c313331662520,0x25202c3133316625\n"
".quad 0x75730a3b35343166,0x6625203233662e62,0x316625202c383431,0x34316625202c3334\n"
".quad 0x662e6c756d0a3b37,0x3934316625203233,0x202c35336625202c,0x3030303830436630\n"
".quad 0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c30353166,0x3431346630202c33\n"
".quad 0x25202c3030303030,0x6d660a3b39343166,0x3233662e6e722e61,0x202c313531662520\n"
".quad 0x436630202c346625,0x2c30303030303830,0x0a3b303531662520,0x662e6e722e616d66\n"
".quad 0x3235316625203233,0x202c31346625202c,0x3030303830436630,0x35316625202c3030\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x356625202c333531,0x303830436630202c\n"
".quad 0x6625202c30303030,0x6464610a3b323531,0x316625203233662e,0x35316625202c3435\n"
".quad 0x3b37346625202c33,0x3233662e6464610a,0x202c353531662520,0x25202c3435316625\n"
".quad 0x6464610a3b333566,0x316625203233662e,0x35316625202c3635,0x3b39356625202c35\n"
".quad 0x3233662e6464610a,0x202c373531662520,0x25202c3635316625,0x616d660a3b353666\n"
".quad 0x203233662e6e722e,0x25202c3835316625,0x30436630202c3666,0x202c303030303038\n"
".quad 0x610a3b3735316625,0x25203233662e6464,0x6625202c39353166,0x386625202c383531\n"
".quad 0x662e6464610a3b33,0x3036316625203233,0x2c3935316625202c,0x64610a3b37662520\n"
".quad 0x6625203233662e64,0x316625202c313631,0x39386625202c3036,0x33662e6464610a3b\n"
".quad 0x2c32363166252032,0x202c313631662520,0x616d660a3b386625,0x203233662e6e722e\n"
".quad 0x25202c3336316625,0x30436630202c3966,0x202c303030303038,0x610a3b3236316625\n"
".quad 0x25203233662e6464,0x6625202c34363166,0x376625202c333631,0x662e6464610a3b31\n"
".quad 0x3536316625203233,0x2c3436316625202c,0x610a3b3031662520,0x25203233662e6464\n"
".quad 0x6625202c36363166,0x376625202c353631,0x662e6464610a3b37,0x3736316625203233\n"
".quad 0x2c3636316625202c,0x0a3b373534662520,0x662e6e722e616d66,0x3836316625203233\n"
".quad 0x2c3734316625202c,0x3431463034663020,0x316625202c343135,0x2e6c756d0a3b3736\n"
".quad 0x3631662520323366,0x2c31346625202c39,0x3030413034663020,0x616d660a3b303030\n"
".quad 0x203233662e6e722e,0x25202c3037316625,0x436630202c353366,0x2c30303030304130\n"
".quad 0x0a3b393631662520,0x662e6e722e616d66,0x3137316625203233,0x2c3331316625202c\n"
".quad 0x3535444633663020,0x316625202c353535,0x2e6c756d0a3b3037,0x3731662520323366\n"
".quad 0x202c356625202c32,0x3030304130346630,0x2e616d660a3b3030,0x25203233662e6e72\n"
".quad 0x6625202c33373166,0x4130436630202c34,0x25202c3030303030,0x6d660a3b32373166\n"
".quad 0x3233662e6e722e61,0x202c343731662520,0x30202c3232316625,0x3535353544463366\n"
".quad 0x3337316625202c35,0x33662e6c756d0a3b,0x2c35373166252032,0x6630202c39662520\n"
".quad 0x3030303030413034,0x6e722e616d660a3b,0x316625203233662e,0x2c366625202c3637\n"
".quad 0x3030413043663020,0x316625202c303030,0x2e616d660a3b3537,0x25203233662e6e72\n"
".quad 0x6625202c37373166,0x336630202c313331,0x2c35353535354446,0x0a3b363731662520\n"
".quad 0x203233662e646461,0x25202c3837316625,0x336625202c353366,0x662e6275730a3b35\n"
".quad 0x3937316625203233,0x2c3837316625202c,0x6c2e0a3b34662520,0x303432203220636f\n"
".quad 0x2e6464610a312036,0x3831662520323366,0x2c31346625202c30,0x610a3b3134662520\n"
".quad 0x25203233662e6464,0x6625202c31383166,0x316625202c393731,0x2e6275730a3b3038\n"
".quad 0x3831662520323366,0x3138316625202c32,0x2e0a3b356625202c,0x3432203220636f6c\n"
".quad 0x6464610a31203630,0x316625203233662e,0x38316625202c3338,0x3b37346625202c32\n"
".quad 0x3233662e6464610a,0x202c343831662520,0x25202c3338316625,0x6464610a3b333566\n"
".quad 0x316625203233662e,0x38316625202c3538,0x3b39356625202c34,0x3233662e6464610a\n"
".quad 0x202c363831662520,0x25202c3538316625,0x6275730a3b353666,0x316625203233662e\n"
".quad 0x38316625202c3738,0x0a3b366625202c36,0x32203220636f6c2e,0x64610a3120363034\n"
".quad 0x6625203233662e64,0x316625202c383831,0x33386625202c3738,0x33662e766f6d0a3b\n"
".quad 0x2c39383166252032,0x3030303043663020,0x6f6c2e0a3b303030,0x3630343220322063\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x376625202c303931,0x303030436630202c\n"
".quad 0x6625202c30303030,0x6464610a3b383831,0x316625203233662e,0x39316625202c3139\n"
".quad 0x3b39386625202c30,0x2e6e722e616d660a,0x3931662520323366,0x202c386625202c32\n"
".quad 0x3030303030436630,0x39316625202c3030,0x662e6275730a3b31,0x3339316625203233\n"
".quad 0x2c3239316625202c,0x6c2e0a3b39662520,0x303432203220636f,0x2e6464610a312036\n"
".quad 0x3931662520323366,0x3339316625202c34,0x0a3b31376625202c,0x662e6e722e616d66\n"
".quad 0x3539316625203233,0x202c30316625202c,0x3030303030436630,0x39316625202c3030\n"
".quad 0x662e6464610a3b34,0x3639316625203233,0x2c3539316625202c,0x660a3b3737662520\n"
".quad 0x33662e6e722e616d,0x2c37393166252032,0x202c373534662520,0x3030303030436630\n"
".quad 0x39316625202c3030,0x662e6464610a3b36,0x3839316625203233,0x2c3331316625202c\n"
".quad 0x0a3b333131662520,0x662e6e722e616d66,0x3939316625203233,0x2c3232316625202c\n"
".quad 0x202c323231662520,0x6e0a3b3634316625,0x25203233662e6765,0x6625202c30303266\n"
".quad 0x616d660a3b393931,0x203233662e6e722e,0x25202c3130326625,0x6625202c38393166\n"
".quad 0x326625202c333131,0x2e6275730a3b3030,0x3032662520323366,0x3739316625202c32\n"
".quad 0x3b3130326625202c,0x3233662e6464610a,0x202c333032662520,0x346625202c346625\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x35336625202c3430,0x303830436630202c\n"
".quad 0x6625202c30303030,0x616d660a3b333032,0x203233662e6e722e,0x25202c3530326625\n"
".quad 0x436630202c313466,0x2c30303030303830,0x0a3b343032662520,0x203233662e646461\n"
".quad 0x25202c3630326625,0x3b356625202c3566,0x3233662e6464610a,0x202c373032662520\n"
".quad 0x25202c3530326625,0x64610a3b36303266,0x6625203233662e64,0x326625202c383032\n"
".quad 0x37346625202c3730,0x33662e6464610a3b,0x2c39303266252032,0x202c383032662520\n"
".quad 0x64610a3b33356625,0x6625203233662e64,0x326625202c303132,0x39356625202c3930\n"
".quad 0x33662e6464610a3b,0x2c31313266252032,0x202c303132662520,0x64610a3b35366625\n"
".quad 0x6625203233662e64,0x366625202c323132,0x610a3b366625202c,0x25203233662e6464\n"
".quad 0x6625202c33313266,0x326625202c313132,0x2e6464610a3b3231,0x3132662520323366\n"
".quad 0x3331326625202c34,0x0a3b33386625202c,0x662e6e722e616d66,0x3531326625203233\n"
".quad 0x30202c376625202c,0x3030303030304366,0x3431326625202c30,0x33662e6464610a3b\n"
".quad 0x2c36313266252032,0x202c353132662520,0x6d660a3b39386625,0x3233662e6e722e61\n"
".quad 0x202c373132662520,0x436630202c386625,0x2c30303030303030,0x0a3b363132662520\n"
".quad 0x203233662e646461,0x25202c3831326625,0x3b396625202c3966,0x3233662e6464610a\n"
".quad 0x202c393132662520,0x25202c3731326625,0x64610a3b38313266,0x6625203233662e64\n"
".quad 0x326625202c303232,0x31376625202c3931,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x30316625202c3132,0x303030436630202c,0x6625202c30303030,0x6464610a3b303232\n"
".quad 0x326625203233662e,0x32326625202c3232,0x3b37376625202c31,0x2e6e722e616d660a\n"
".quad 0x3232662520323366,0x3735346625202c33,0x303030436630202c,0x6625202c30303030\n"
".quad 0x6464610a3b323232,0x326625203233662e,0x2c346625202c3432,0x64610a3b35662520\n"
".quad 0x6625203233662e64,0x326625202c353232,0x37346625202c3432,0x33662e6464610a3b\n"
".quad 0x2c36323266252032,0x202c353232662520,0x64610a3b33356625,0x6625203233662e64\n"
".quad 0x326625202c373232,0x39356625202c3632,0x33662e6464610a3b,0x2c38323266252032\n"
".quad 0x202c373232662520,0x75730a3b35366625,0x6625203233662e62,0x326625202c393232\n"
".quad 0x3b366625202c3832,0x3233662e6275730a,0x202c303332662520,0x25202c3932326625\n"
".quad 0x6275730a3b333866,0x326625203233662e,0x33326625202c3133,0x3b39386625202c30\n"
".quad 0x3233662e6275730a,0x202c323332662520,0x25202c3133326625,0x2e6275730a3b3966\n"
".quad 0x3332662520323366,0x3233326625202c33,0x0a3b31376625202c,0x203233662e627573\n"
".quad 0x25202c3433326625,0x6625202c33333266,0x636f6c2e0a3b3737,0x2036303432203220\n"
".quad 0x33662e67656e0a31,0x2c35333266252032,0x0a3b313331662520,0x662e6e722e616d66\n"
".quad 0x3633326625203233,0x2c3533326625202c,0x202c313331662520,0x730a3b3434316625\n"
".quad 0x25203233662e6275,0x6625202c37333266,0x326625202c343332,0x2e67656e0a3b3633\n"
".quad 0x3332662520323366,0x3630326625202c38,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x2c346625202c3933,0x202c393831662520,0x610a3b3833326625,0x25203233662e6464\n"
".quad 0x6625202c30343266,0x346625202c393332,0x662e6464610a3b37,0x3134326625203233\n"
".quad 0x2c3034326625202c,0x610a3b3335662520,0x25203233662e6464,0x6625202c32343266\n"
".quad 0x356625202c313432,0x662e6464610a3b39,0x3334326625203233,0x2c3234326625202c\n"
".quad 0x610a3b3536662520,0x25203233662e6464,0x6625202c34343266,0x326625202c333432\n"
".quad 0x2e6275730a3b3231,0x3432662520323366,0x3434326625202c35,0x0a3b33386625202c\n"
".quad 0x203233662e627573,0x25202c3634326625,0x6625202c35343266,0x636f6c2e0a3b3938\n"
".quad 0x2036303432203220,0x33662e6464610a31,0x2c37343266252032,0x202c363432662520\n"
".quad 0x730a3b3831326625,0x25203233662e6275,0x6625202c38343266,0x376625202c373432\n"
".quad 0x662e6275730a3b31,0x3934326625203233,0x2c3834326625202c,0x730a3b3737662520\n"
".quad 0x25203233662e6275,0x6625202c30353266,0x33356625202c3734,0x3220636f6c2e0a3b\n"
".quad 0x0a31203630343220,0x203233662e646461,0x25202c3135326625,0x6625202c30353266\n"
".quad 0x2e6275730a3b3935,0x3532662520323366,0x3135326625202c32,0x0a3b35366625202c\n"
".quad 0x32203220636f6c2e,0x656e0a3120363034,0x6625203233662e67,0x316625202c333532\n"
".quad 0x2e616d660a3b3331,0x25203233662e6e72,0x6625202c34353266,0x316625202c333532\n"
".quad 0x35326625202c3232,0x662e6275730a3b32,0x3535326625203233,0x25202c376625202c\n"
".quad 0x2e6275730a3b3866,0x3532662520323366,0x3535326625202c36,0x0a3b30316625202c\n"
".quad 0x32203220636f6c2e,0x64610a3120363034,0x6625203233662e64,0x326625202c373532\n"
".quad 0x35346625202c3635,0x662e67656e0a3b37,0x3835326625203233,0x3b3232316625202c\n"
".quad 0x2e6e722e616d660a,0x3532662520323366,0x3835326625202c39,0x2c3133316625202c\n"
".quad 0x0a3b373532662520,0x203233662e627573,0x25202c3036326625,0x386625202c333866\n"
".quad 0x662e6275730a3b39,0x3136326625203233,0x2c3036326625202c,0x2e0a3b3137662520\n"
".quad 0x3432203220636f6c,0x6464610a31203630,0x326625203233662e,0x36326625202c3236\n"
".quad 0x3b37376625202c31,0x2e6e722e616d660a,0x3632662520323366,0x3335326625202c33\n"
".quad 0x2c3133316625202c,0x0a3b323632662520,0x203233662e627573,0x25202c3436326625\n"
".quad 0x6625202c30353266,0x636f6c2e0a3b3935,0x2036303432203220,0x33662e6464610a31\n"
".quad 0x2c35363266252032,0x202c343632662520,0x75730a3b35366625,0x6625203233662e62\n"
".quad 0x326625202c363632,0x33386625202c3536,0x33662e6464610a3b,0x2c37363266252032\n"
".quad 0x202c363632662520,0x75730a3b39386625,0x6625203233662e62,0x326625202c383632\n"
".quad 0x31376625202c3736,0x3220636f6c2e0a3b,0x0a31203630343220,0x203233662e646461\n"
".quad 0x25202c3936326625,0x6625202c38363266,0x2e67656e0a3b3737,0x3732662520323366\n"
".quad 0x3b33356625202c30,0x3233662e6275730a,0x202c313732662520,0x25202c3037326625\n"
".quad 0x6f6c2e0a3b373466,0x3630343220322063,0x662e6464610a3120,0x3237326625203233\n"
".quad 0x2c3137326625202c,0x610a3b3935662520,0x25203233662e6464,0x6625202c33373266\n"
".quad 0x366625202c323732,0x662e6464610a3b35,0x3437326625203233,0x2c3337326625202c\n"
".quad 0x75730a3b37662520,0x6625203233662e62,0x326625202c353732,0x3b386625202c3437\n"
".quad 0x203220636f6c2e0a,0x610a312036303432,0x25203233662e6464,0x6625202c36373266\n"
".quad 0x316625202c353732,0x662e6275730a3b30,0x3737326625203233,0x2c3637326625202c\n"
".quad 0x0a3b373534662520,0x203233662e627573,0x25202c3837326625,0x376625202c333866\n"
".quad 0x3220636f6c2e0a3b,0x0a31203630343220,0x203233662e646461,0x25202c3937326625\n"
".quad 0x6625202c38373266,0x2e6275730a3b3938,0x3832662520323366,0x3937326625202c30\n"
".quad 0x730a3b386625202c,0x25203233662e6275,0x6625202c31383266,0x376625202c303832\n"
".quad 0x20636f6c2e0a3b31,0x3120363034322032,0x3233662e6464610a,0x202c323832662520\n"
".quad 0x25202c3138326625,0x6275730a3b303166,0x326625203233662e,0x38326625202c3338\n"
".quad 0x3b37376625202c32,0x203220636f6c2e0a,0x610a312036303432,0x25203233662e6464\n"
".quad 0x6625202c34383266,0x346625202c333832,0x2e766f6d0a3b3735,0x3832662520323366\n"
".quad 0x3845336630202c35,0x6c0a3b3030303030,0x2e6d617261702e64,0x3534662520323366\n"
".quad 0x33315a5f5b202c36,0x6279685f645f524c,0x5366503243444241,0x61705f69666d665f\n"
".quad 0x0a3b5d325f6d6172,0x32203220636f6c2e,0x756d0a3120363034,0x6625203233662e6c\n"
".quad 0x346625202c363832,0x45336630202c3635,0x0a3b303030303038,0x203233662e766f6d\n"
".quad 0x30202c3738326625,0x3030303030453366,0x20636f6c2e0a3b30,0x3120363034322032\n"
".quad 0x3233662e6c756d0a,0x202c383832662520,0x30202c3934326625,0x4141414132443366\n"
".quad 0x662e766f6d0a3b42,0x3938326625203233,0x413244336630202c,0x6c2e0a3b42414141\n"
".quad 0x303432203220636f,0x2e6c756d0a312036,0x3932662520323366,0x3635346625202c30\n"
".quad 0x414144336630202c,0x756d0a3b42414141,0x6625203233662e6c,0x326625202c313932\n"
".quad 0x43336630202c3332,0x0a3b393345383336,0x203233662e6c756d,0x25202c3239326625\n"
".quad 0x6630202c36353466,0x3933453833454333,0x33662e6c756d0a3b,0x2c33393266252032\n"
".quad 0x202c323032662520,0x6d0a3b3239326625,0x25203233662e6c75,0x6625202c34393266\n"
".quad 0x336630202c313731,0x3b44434343434343,0x3233662e766f6d0a,0x202c353932662520\n"
".quad 0x4343434343336630,0x636f6c2e0a3b4443,0x2036303432203220,0x33662e6c756d0a31\n"
".quad 0x2c36393266252032,0x202c343731662520,0x4343434343336630,0x2e6c756d0a3b4443\n"
".quad 0x3932662520323366,0x3737316625202c37,0x434343336630202c,0x756d0a3b44434343\n"
".quad 0x6625203233662e6c,0x316625202c383932,0x42336630202c3836,0x0a3b313238303238\n"
".quad 0x203233662e6c756d,0x25202c3939326625,0x6630202c38393266,0x3030303030343134\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x34316625202c3030,0x3745426630202c38\n"
".quad 0x25202c4433464333,0x75730a3b39393266,0x6625203233662e62,0x336625202c313033\n"
".quad 0x3b3030336625202c,0x3233662e6c756d0a,0x202c323033662520,0x30202c3839326625\n"
".quad 0x3030303038304366,0x722e616d660a3b30,0x6625203233662e6e,0x316625202c333033\n"
".quad 0x44426630202c3834,0x202c443242433242,0x660a3b3230336625,0x33662e6e722e616d\n"
".quad 0x2c34303366252032,0x202c343932662520,0x3030303830436630,0x30336625202c3030\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x326625202c353033,0x39326625202c3230\n"
".quad 0x3339326625202c32,0x33662e6464610a3b,0x2c36303366252032,0x202c343033662520\n"
".quad 0x660a3b3530336625,0x33662e6e722e616d,0x2c37303366252032,0x202c313932662520\n"
".quad 0x3030303830436630,0x30336625202c3030,0x662e6275730a3b36,0x3830336625203233\n"
".quad 0x202c35336625202c,0x660a3b3730336625,0x33662e6e722e616d,0x2c39303366252032\n"
".quad 0x202c363932662520,0x3030303830436630,0x30336625202c3030,0x662e67656e0a3b33\n"
".quad 0x3031336625203233,0x3b3230326625202c,0x2e6e722e616d660a,0x3133662520323366\n"
".quad 0x3031336625202c31,0x2c3239326625202c,0x0a3b393033662520,0x32203220636f6c2e\n"
".quad 0x6d660a3120363034,0x3233662e6e722e61,0x202c323133662520,0x30202c3332326625\n"
".quad 0x3345383336433366,0x3139326625202c39,0x33662e6464610a3b,0x2c33313366252032\n"
".quad 0x202c313133662520,0x660a3b3231336625,0x33662e6e722e616d,0x2c34313366252032\n"
".quad 0x202c373332662520,0x25202c3039326625,0x6d660a3b33313366,0x3233662e6e722e61\n"
".quad 0x202c353133662520,0x30202c3838326625,0x3030303030304366,0x3431336625202c30\n"
".quad 0x33662e6275730a3b,0x2c36313366252032,0x6625202c34662520,0x616d660a3b353133\n"
".quad 0x203233662e6e722e,0x25202c3731336625,0x6630202c34393266,0x3030303030383034\n"
".quad 0x3b3330336625202c,0x3233662e6464610a,0x202c383133662520,0x25202c3731336625\n"
".quad 0x6d660a3b35303366,0x3233662e6e722e61,0x202c393133662520,0x30202c3139326625\n"
".quad 0x3030303038304366,0x3831336625202c30,0x33662e6275730a3b,0x2c30323366252032\n"
".quad 0x25202c3134662520,0x6d660a3b39313366,0x3233662e6e722e61,0x202c313233662520\n"
".quad 0x30202c3639326625,0x3030303038303466,0x3330336625202c30,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x31336625202c3232,0x3239326625202c30,0x3b3132336625202c\n"
".quad 0x203220636f6c2e0a,0x610a312036303432,0x25203233662e6464,0x6625202c33323366\n"
".quad 0x336625202c323233,0x2e616d660a3b3231,0x25203233662e6e72,0x6625202c34323366\n"
".quad 0x326625202c373332,0x32336625202c3039,0x722e616d660a3b33,0x6625203233662e6e\n"
".quad 0x326625202c353233,0x30436630202c3838,0x202c303030303030,0x730a3b3432336625\n"
".quad 0x25203233662e6275,0x6625202c36323366,0x3532336625202c35,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x34316625202c3732,0x3844336630202c38,0x25202c3032383032\n"
".quad 0x6d660a3b38393266,0x3233662e6e722e61,0x202c383233662520,0x30202c3137316625\n"
".quad 0x4343434343433366,0x3732336625202c44,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x37316625202c3932,0x4343336630202c34,0x25202c4443434343,0x6d660a3b38323366\n"
".quad 0x3233662e6e722e61,0x202c303333662520,0x25202c3230326625,0x6625202c32393266\n"
".quad 0x616d660a3b393233,0x203233662e6e722e,0x25202c3133336625,0x6630202c33323266\n"
".quad 0x3933453833364333,0x3b3033336625202c,0x2e6e722e616d660a,0x3333662520323366\n"
".quad 0x3733326625202c32,0x2c3039326625202c,0x0a3b313333662520,0x662e6e722e616d66\n"
".quad 0x3333336625203233,0x2c3934326625202c,0x4141324433663020,0x336625202c424141\n"
".quad 0x2e616d660a3b3233,0x25203233662e6e72,0x6625202c34333366,0x336630202c343532\n"
".quad 0x2c30303030303845,0x0a3b333333662520,0x662e6e722e616d66,0x3533336625203233\n"
".quad 0x2c3936326625202c,0x3030304533663020,0x336625202c303030,0x2e67656e0a3b3433\n"
".quad 0x3333662520323366,0x3737326625202c36,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x33336625202c3733,0x3738326625202c36,0x3b3533336625202c,0x203220636f6c2e0a\n"
".quad 0x730a312036303432,0x25203233662e6275,0x6625202c38333366,0x33336625202c3734\n"
".quad 0x662e67656e0a3b37,0x3933336625203233,0x3b3137316625202c,0x2e6e722e616d660a\n"
".quad 0x3433662520323366,0x3933336625202c30,0x2c3539326625202c,0x0a3b373233662520\n"
".quad 0x32203220636f6c2e,0x6d660a3120363034,0x3233662e6e722e61,0x202c313433662520\n"
".quad 0x30202c3437316625,0x4343434343433366,0x3034336625202c44,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x30326625202c3234,0x3239326625202c32,0x3b3134336625202c\n"
".quad 0x2e6e722e616d660a,0x3433662520323366,0x3332326625202c33,0x333643336630202c\n"
".quad 0x6625202c39334538,0x616d660a3b323433,0x203233662e6e722e,0x25202c3434336625\n"
".quad 0x6625202c37333266,0x336625202c303932,0x2e616d660a3b3334,0x25203233662e6e72\n"
".quad 0x6625202c35343366,0x336630202c393432,0x2c42414141413244,0x0a3b343433662520\n"
".quad 0x203233662e67656e,0x25202c3634336625,0x6d660a3b34353266,0x3233662e6e722e61\n"
".quad 0x202c373433662520,0x25202c3634336625,0x6625202c35383266,0x67656e0a3b353433\n"
".quad 0x336625203233662e,0x36326625202c3834,0x722e616d660a3b39,0x6625203233662e6e\n"
".quad 0x336625202c393433,0x38326625202c3834,0x3734336625202c37,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x33336625202c3035,0x3738326625202c36,0x3b3934336625202c\n"
".quad 0x203220636f6c2e0a,0x730a312036303432,0x25203233662e6275,0x6625202c31353366\n"
".quad 0x35336625202c3335,0x662e67656e0a3b30,0x3235336625203233,0x3b3437316625202c\n"
".quad 0x2e6e722e616d660a,0x3533662520323366,0x3235336625202c33,0x2c3539326625202c\n"
".quad 0x0a3b303433662520,0x32203220636f6c2e,0x6d660a3120363034,0x3233662e6e722e61\n"
".quad 0x202c343533662520,0x25202c3230326625,0x6625202c32393266,0x616d660a3b333533\n"
".quad 0x203233662e6e722e,0x25202c3535336625,0x6630202c33323266,0x3933453833364333\n"
".quad 0x3b3435336625202c,0x2e6e722e616d660a,0x3533662520323366,0x3733326625202c36\n"
".quad 0x2c3039326625202c,0x0a3b353533662520,0x662e6e722e616d66,0x3735336625203233\n"
".quad 0x2c3934326625202c,0x4141324433663020,0x336625202c424141,0x2e616d660a3b3635\n"
".quad 0x25203233662e6e72,0x6625202c38353366,0x336630202c343532,0x2c30303030303845\n"
".quad 0x0a3b373533662520,0x662e6e722e616d66,0x3935336625203233,0x2c3834336625202c\n"
".quad 0x202c373832662520,0x2e0a3b3835336625,0x3432203220636f6c,0x616d660a31203630\n"
".quad 0x203233662e6e722e,0x25202c3036336625,0x6630202c37373266,0x3030303030304533\n"
".quad 0x3b3935336625202c,0x3233662e6275730a,0x202c313633662520,0x6625202c39356625\n"
".quad 0x616d660a3b303633,0x203233662e6e722e,0x25202c3236336625,0x6625202c32353366\n"
".quad 0x336625202c353932,0x636f6c2e0a3b3832,0x2036303432203220,0x6e722e616d660a31\n"
".quad 0x336625203233662e,0x30326625202c3336,0x3239326625202c32,0x3b3236336625202c\n"
".quad 0x2e6e722e616d660a,0x3633662520323366,0x3332326625202c34,0x333643336630202c\n"
".quad 0x6625202c39334538,0x616d660a3b333633,0x203233662e6e722e,0x25202c3536336625\n"
".quad 0x6625202c37333266,0x336625202c303932,0x2e616d660a3b3436,0x25203233662e6e72\n"
".quad 0x6625202c36363366,0x336630202c393432,0x2c42414141413244,0x0a3b353633662520\n"
".quad 0x662e6e722e616d66,0x3736336625203233,0x2c3634336625202c,0x202c353832662520\n"
".quad 0x2e0a3b3636336625,0x3432203220636f6c,0x616d660a31203630,0x203233662e6e722e\n"
".quad 0x25202c3836336625,0x6630202c39363266,0x3030303030304533,0x3b3736336625202c\n"
".quad 0x2e6e722e616d660a,0x3633662520323366,0x3737326625202c39,0x303045336630202c\n"
".quad 0x6625202c30303030,0x6275730a3b383633,0x336625203233662e,0x35366625202c3037\n"
".quad 0x3b3936336625202c,0x2e6e722e616d660a,0x3733662520323366,0x3739326625202c31\n"
".quad 0x303830436630202c,0x6625202c30303030,0x616d660a3b333033,0x203233662e6e722e\n"
".quad 0x25202c3237336625,0x6625202c30313366,0x336625202c323932,0x636f6c2e0a3b3137\n"
".quad 0x2036303432203220,0x33662e6464610a31,0x2c33373366252032,0x202c323733662520\n"
".quad 0x6e0a3b3231336625,0x25203233662e6765,0x6625202c34373366,0x616d660a3b373332\n"
".quad 0x203233662e6e722e,0x25202c3537336625,0x6625202c34373366,0x336625202c303932\n"
".quad 0x636f6c2e0a3b3337,0x2036303432203220,0x6e722e616d660a31,0x336625203233662e\n"
".quad 0x34326625202c3637,0x3244336630202c39,0x25202c4241414141,0x64610a3b38383266\n"
".quad 0x6625203233662e64,0x336625202c373733,0x37336625202c3537,0x662e6275730a3b36\n"
".quad 0x3837336625203233,0x25202c366625202c,0x6d660a3b37373366,0x3233662e6e722e61\n"
".quad 0x202c393733662520,0x30202c3737316625,0x4343434343433366,0x3832336625202c44\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x30326625202c3038,0x3239326625202c32\n"
".quad 0x3b3937336625202c,0x2e6e722e616d660a,0x3833662520323366,0x3332326625202c31\n"
".quad 0x333643336630202c,0x6625202c39334538,0x616d660a3b303833,0x203233662e6e722e\n"
".quad 0x25202c3238336625,0x6625202c34373366,0x336625202c303932,0x2e67656e0a3b3138\n"
".quad 0x3833662520323366,0x3934326625202c33,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x38336625202c3438,0x3938326625202c33,0x3b3238336625202c,0x203220636f6c2e0a\n"
".quad 0x660a312036303432,0x33662e6e722e616d,0x2c35383366252032,0x202c333632662520\n"
".quad 0x25202c3638326625,0x6d660a3b34383366,0x3233662e6e722e61,0x202c363833662520\n"
".quad 0x25202c3834336625,0x6625202c37383266,0x6f6c2e0a3b353833,0x3630343220322063\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x326625202c373833,0x45336630202c3438\n"
".quad 0x202c303030303030,0x730a3b3638336625,0x25203233662e6275,0x6625202c38383366\n"
".quad 0x38336625202c3338,0x722e616d660a3b37,0x6625203233662e6e,0x316625202c393833\n"
".quad 0x43336630202c3437,0x202c444343434343,0x660a3b3732336625,0x33662e6e722e616d\n"
".quad 0x2c30393366252032,0x202c373731662520,0x4343434343336630,0x38336625202c4443\n"
".quad 0x722e616d660a3b39,0x6625203233662e6e,0x326625202c313933,0x30436630202c3339\n"
".quad 0x202c303030303030,0x660a3b3039336625,0x33662e6e722e616d,0x2c32393366252032\n"
".quad 0x202c313932662520,0x3030303030436630,0x39336625202c3030,0x722e616d660a3b31\n"
".quad 0x6625203233662e6e,0x326625202c333933,0x45336630202c3935,0x202c303030303038\n"
".quad 0x660a3b3239336625,0x33662e6e722e616d,0x2c34393366252032,0x202c373732662520\n"
".quad 0x3030303045336630,0x39336625202c3030,0x662e67656e0a3b33,0x3539336625203233\n"
".quad 0x3b3438326625202c,0x2e6e722e616d660a,0x3933662520323366,0x3539336625202c36\n"
".quad 0x2c3738326625202c,0x0a3b343933662520,0x32203220636f6c2e,0x75730a3120363034\n"
".quad 0x6625203233662e62,0x376625202c373933,0x3b3639336625202c,0x2e6e722e616d660a\n"
".quad 0x3933662520323366,0x3737316625202c38,0x434343336630202c,0x6625202c44434343\n"
".quad 0x616d660a3b303433,0x203233662e6e722e,0x25202c3939336625,0x6625202c32303266\n"
".quad 0x336625202c323932,0x2e616d660a3b3839,0x25203233662e6e72,0x6625202c30303466\n"
".quad 0x336630202c333232,0x2c39334538333643,0x0a3b393933662520,0x662e6e722e616d66\n"
".quad 0x3130346625203233,0x2c3437336625202c,0x202c303932662520,0x660a3b3030346625\n"
".quad 0x33662e6e722e616d,0x2c32303466252032,0x202c333833662520,0x25202c3938326625\n"
".quad 0x656e0a3b31303466,0x6625203233662e67,0x326625202c333034,0x2e616d660a3b3336\n"
".quad 0x25203233662e6e72,0x6625202c34303466,0x326625202c333034,0x30346625202c3638\n"
".quad 0x20636f6c2e0a3b32,0x3120363034322032,0x2e6e722e616d660a,0x3034662520323366\n"
".quad 0x3936326625202c35,0x303045336630202c,0x6625202c30303030,0x616d660a3b343034\n"
".quad 0x203233662e6e722e,0x25202c3630346625,0x6630202c34383266,0x3030303030304533\n"
".quad 0x3b3530346625202c,0x3233662e6275730a,0x202c373034662520,0x6625202c39386625\n"
".quad 0x616d660a3b363034,0x203233662e6e722e,0x25202c3830346625,0x6625202c32353366\n"
".quad 0x336625202c353932,0x636f6c2e0a3b3732,0x2036303432203220,0x6e722e616d660a31\n"
".quad 0x346625203233662e,0x37316625202c3930,0x4343336630202c37,0x25202c4443434343\n"
".quad 0x6d660a3b38303466,0x3233662e6e722e61,0x202c303134662520,0x30202c3339326625\n"
".quad 0x3030303030304366,0x3930346625202c30,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x39326625202c3131,0x3030436630202c31,0x25202c3030303030,0x656e0a3b30313466\n"
".quad 0x6625203233662e67,0x326625202c323134,0x2e616d660a3b3935,0x25203233662e6e72\n"
".quad 0x6625202c33313466,0x326625202c323134,0x31346625202c3538,0x722e616d660a3b31\n"
".quad 0x6625203233662e6e,0x336625202c343134,0x38326625202c3633,0x3331346625202c37\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x39336625202c3531,0x3738326625202c35\n"
".quad 0x3b3431346625202c,0x203220636f6c2e0a,0x730a312036303432,0x25203233662e6275\n"
".quad 0x6625202c36313466,0x3531346625202c38,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x39326625202c3731,0x3830346630202c37,0x25202c3030303030,0x6d660a3b33303366\n"
".quad 0x3233662e6e722e61,0x202c383134662520,0x25202c3031336625,0x6625202c32393266\n"
".quad 0x6f6c2e0a3b373134,0x3630343220322063,0x662e6464610a3120,0x3931346625203233\n"
".quad 0x2c3831346625202c,0x0a3b323133662520,0x662e6e722e616d66,0x3032346625203233\n"
".quad 0x2c3437336625202c,0x202c303932662520,0x2e0a3b3931346625,0x3432203220636f6c\n"
".quad 0x6464610a31203630,0x346625203233662e,0x32346625202c3132,0x3637336625202c30\n"
".quad 0x33662e6275730a3b,0x2c32323466252032,0x6625202c39662520,0x67656e0a3b313234\n"
".quad 0x346625203233662e,0x37316625202c3332,0x722e616d660a3b37,0x6625203233662e6e\n"
".quad 0x346625202c343234,0x39326625202c3332,0x3832336625202c35,0x3220636f6c2e0a3b\n"
".quad 0x0a31203630343220,0x662e6e722e616d66,0x3532346625203233,0x2c3230326625202c\n"
".quad 0x202c323932662520,0x660a3b3432346625,0x33662e6e722e616d,0x2c36323466252032\n"
".quad 0x202c333232662520,0x4538333643336630,0x32346625202c3933,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x336625202c373234,0x39326625202c3437,0x3632346625202c30\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x38336625202c3832,0x3938326625202c33\n"
".quad 0x3b3732346625202c,0x2e6e722e616d660a,0x3234662520323366,0x3330346625202c39\n"
".quad 0x2c3638326625202c,0x0a3b383234662520,0x662e6e722e616d66,0x3033346625203233\n"
".quad 0x2c3834336625202c,0x202c373832662520,0x660a3b3932346625,0x33662e6e722e616d\n"
".quad 0x2c31333466252032,0x202c353933662520,0x25202c3738326625,0x6c2e0a3b30333466\n"
".quad 0x303432203220636f,0x2e6275730a312036,0x3334662520323366,0x2c31376625202c32\n"
".quad 0x0a3b313334662520,0x662e6e722e616d66,0x3333346625203233,0x2c3332346625202c\n"
".quad 0x202c353932662520,0x2e0a3b3938336625,0x3432203220636f6c,0x616d660a31203630\n"
".quad 0x203233662e6e722e,0x25202c3433346625,0x6630202c33393266,0x3030303030303043\n"
".quad 0x3b3333346625202c,0x2e6e722e616d660a,0x3334662520323366,0x3139326625202c35\n"
".quad 0x303030436630202c,0x6625202c30303030,0x616d660a3b343334,0x203233662e6e722e\n"
".quad 0x25202c3633346625,0x6625202c32313466,0x346625202c353832,0x636f6c2e0a3b3533\n"
".quad 0x2036303432203220,0x6e722e616d660a31,0x346625203233662e,0x37326625202c3733\n"
".quad 0x3045336630202c37,0x25202c3030303030,0x6d660a3b36333466,0x3233662e6e722e61\n"
".quad 0x202c383334662520,0x30202c3438326625,0x3030303030453366,0x3733346625202c30\n"
".quad 0x33662e6275730a3b,0x2c39333466252032,0x25202c3031662520,0x6d660a3b38333466\n"
".quad 0x3233662e6e722e61,0x202c303434662520,0x25202c3332346625,0x6625202c35393266\n"
".quad 0x6f6c2e0a3b303433,0x3630343220322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x326625202c313434,0x39326625202c3230,0x3034346625202c32,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x32326625202c3234,0x3643336630202c33,0x25202c3933453833\n"
".quad 0x6d660a3b31343466,0x3233662e6e722e61,0x202c333434662520,0x25202c3437336625\n"
".quad 0x6625202c30393266,0x616d660a3b323434,0x203233662e6e722e,0x25202c3434346625\n"
".quad 0x6625202c33383366,0x346625202c393832,0x636f6c2e0a3b3334,0x2036303432203220\n"
".quad 0x6e722e616d660a31,0x346625203233662e,0x36326625202c3534,0x3638326625202c33\n"
".quad 0x3b3434346625202c,0x2e6e722e616d660a,0x3434662520323366,0x3936326625202c36\n"
".quad 0x303045336630202c,0x6625202c30303030,0x616d660a3b353434,0x203233662e6e722e\n"
".quad 0x25202c3734346625,0x6625202c35393366,0x346625202c373832,0x636f6c2e0a3b3634\n"
".quad 0x2036303432203220,0x33662e6275730a31,0x2c38343466252032,0x25202c3737662520\n"
".quad 0x6d660a3b37343466,0x3233662e6e722e61,0x202c393434662520,0x25202c3332346625\n"
".quad 0x6625202c35393266,0x6f6c2e0a3b383034,0x3630343220322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x326625202c303534,0x30436630202c3339,0x202c303030303030\n"
".quad 0x660a3b3934346625,0x33662e6e722e616d,0x2c31353466252032,0x202c313932662520\n"
".quad 0x3030303030436630,0x35346625202c3030,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x326625202c323534,0x45336630202c3935,0x202c303030303038,0x660a3b3135346625\n"
".quad 0x33662e6e722e616d,0x2c33353466252032,0x202c363333662520,0x25202c3738326625\n"
".quad 0x6c2e0a3b32353466,0x303432203220636f,0x2e616d660a312036,0x25203233662e6e72\n"
".quad 0x6625202c34353466,0x336630202c343832,0x2c30303030303045,0x0a3b333534662520\n"
".quad 0x203233662e627573,0x25202c3535346625,0x6625202c37353466,0x2e646c0a3b343534\n"
".quad 0x36752e6d61726170,0x3331336c72252034,0x4c33315a5f5b202c,0x416279685f645f52\n"
".quad 0x5f53665032434442,0x7261705f69666d66,0x2e0a3b5d335f6d61,0x3332203220636f6c\n"
".quad 0x64616d0a31203134,0x203436732e6f6c2e,0x25202c32386c7225,0x6c7225202c396c72\n"
".quad 0x6c7225202c333133,0x61702e646c0a3b35,0x203436752e6d6172,0x202c3131336c7225\n"
".quad 0x5f524c33315a5f5b,0x4442416279685f64,0x6d665f5366503243,0x6d617261705f6966\n"
".quad 0x7476630a3b5d315f,0x6f6c672e6f742e61,0x203436752e6c6162,0x25202c33386c7225\n"
".quad 0x730a3b3131336c72,0x25203436622e6c68,0x7225202c34386c72,0x3b3233202c32386c\n"
".quad 0x3436732e7268730a,0x202c35386c722520,0x33202c34386c7225,0x20636f6c2e0a3b32\n"
".quad 0x3120303134322032,0x3436622e6c68730a,0x202c36386c722520,0x32202c35386c7225\n"
".quad 0x36732e6464610a3b,0x2c37386c72252034,0x202c33386c722520,0x730a3b36386c7225\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d37386c,0x6464610a3b313033\n"
".quad 0x6c7225203436732e,0x396c7225202c3838,0x0a3b36393034202c,0x32203220636f6c2e\n"
".quad 0x616d0a3120333733,0x3436732e6f6c2e64,0x202c39386c722520,0x25202c38386c7225\n"
".quad 0x25202c3331336c72,0x6c68730a3b356c72,0x6c7225203436622e,0x386c7225202c3039\n"
".quad 0x730a3b3233202c39,0x25203436732e7268,0x7225202c31396c72,0x3b3233202c30396c\n"
".quad 0x203220636f6c2e0a,0x730a312033373332,0x25203436622e6c68,0x7225202c32396c72\n"
".quad 0x0a3b32202c31396c,0x203436732e646461,0x25202c33396c7225,0x7225202c33386c72\n"
".quad 0x6f6c2e0a3b32396c,0x3131343220322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x5d33396c72255b20,0x3b3830336625202c,0x3436732e6464610a,0x202c34396c722520\n"
".quad 0x3138202c396c7225,0x636f6c2e0a3b3239,0x2034373332203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x396c7225202c3539,0x31336c7225202c34,0x3b356c7225202c33\n"
".quad 0x3436622e6c68730a,0x202c36396c722520,0x33202c35396c7225,0x732e7268730a3b32\n"
".quad 0x37396c7225203436,0x2c36396c7225202c,0x6f6c2e0a3b323320,0x3437333220322063\n"
".quad 0x622e6c68730a3120,0x38396c7225203436,0x2c37396c7225202c,0x2e6464610a3b3220\n"
".quad 0x396c722520343673,0x33386c7225202c39,0x3b38396c7225202c,0x203220636f6c2e0a\n"
".quad 0x730a312032313432,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d39396c\n"
".quad 0x6464610a3b363133,0x6c7225203436732e,0x6c7225202c303031,0x3838323231202c39\n"
".quad 0x3220636f6c2e0a3b,0x0a31203537333220,0x732e6f6c2e64616d,0x30316c7225203436\n"
".quad 0x30316c7225202c31,0x31336c7225202c30,0x3b356c7225202c33,0x3436622e6c68730a\n"
".quad 0x2c3230316c722520,0x2c3130316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c333031,0x3b3233202c323031,0x203220636f6c2e0a,0x730a312035373332\n"
".quad 0x25203436622e6c68,0x25202c3430316c72,0x32202c3330316c72,0x36732e6464610a3b\n"
".quad 0x3530316c72252034,0x2c33386c7225202c,0x3b3430316c722520,0x203220636f6c2e0a\n"
".quad 0x730a312033313432,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3530316c\n"
".quad 0x64610a3b30323366,0x7225203436732e64,0x7225202c3630316c,0x38333631202c396c\n"
".quad 0x20636f6c2e0a3b34,0x3120363733322032,0x2e6f6c2e64616d0a,0x316c722520343673\n"
".quad 0x316c7225202c3730,0x336c7225202c3630,0x356c7225202c3331,0x36622e6c68730a3b\n"
".quad 0x3830316c72252034,0x3730316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3930316c,0x3233202c3830316c,0x3220636f6c2e0a3b,0x0a31203637333220\n"
".quad 0x203436622e6c6873,0x202c3031316c7225,0x202c3930316c7225,0x732e6464610a3b32\n"
".quad 0x31316c7225203436,0x33386c7225202c31,0x3031316c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203431343220,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3131316c72\n"
".quad 0x610a3b3632336625,0x25203436732e6464,0x25202c3231316c72,0x343032202c396c72\n"
".quad 0x636f6c2e0a3b3038,0x2037373332203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c333131,0x6c7225202c323131,0x6c7225202c333133,0x622e6c68730a3b35\n"
".quad 0x31316c7225203436,0x31316c7225202c34,0x730a3b3233202c33,0x25203436732e7268\n"
".quad 0x25202c3531316c72,0x33202c3431316c72,0x20636f6c2e0a3b32,0x3120373733322032\n"
".quad 0x3436622e6c68730a,0x2c3631316c722520,0x2c3531316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x386c7225202c3731,0x31316c7225202c33,0x20636f6c2e0a3b36\n"
".quad 0x3120353134322032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3731316c7225\n"
".quad 0x0a3b383333662520,0x203436732e646461,0x202c3831316c7225,0x3432202c396c7225\n"
".quad 0x6f6c2e0a3b363735,0x3837333220322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3931316c,0x7225202c3831316c,0x7225202c3331336c,0x2e6c68730a3b356c\n"
".quad 0x316c722520343662,0x316c7225202c3032,0x0a3b3233202c3931,0x203436732e726873\n"
".quad 0x202c3132316c7225,0x202c3032316c7225,0x636f6c2e0a3b3233,0x2038373332203220\n"
".quad 0x36622e6c68730a31,0x3232316c72252034,0x3132316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c333231,0x316c7225202c3338,0x636f6c2e0a3b3232\n"
".quad 0x2036313432203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3332316c72255b\n"
".quad 0x3b3135336625202c,0x3436732e6464610a,0x2c3432316c722520,0x32202c396c722520\n"
".quad 0x6c2e0a3b32373638,0x373332203220636f,0x2e64616d0a312039,0x25203436732e6f6c\n"
".quad 0x25202c3532316c72,0x25202c3432316c72,0x25202c3331336c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c363231,0x3b3233202c353231,0x3436732e7268730a\n"
".quad 0x2c3732316c722520,0x2c3632316c722520,0x6f6c2e0a3b323320,0x3937333220322063\n"
".quad 0x622e6c68730a3120,0x32316c7225203436,0x32316c7225202c38,0x64610a3b32202c37\n"
".quad 0x7225203436732e64,0x7225202c3932316c,0x6c7225202c33386c,0x6f6c2e0a3b383231\n"
".quad 0x3731343220322063,0x6c672e74730a3120,0x3233662e6c61626f,0x3932316c72255b20\n"
".quad 0x3136336625202c5d,0x36732e6464610a3b,0x3033316c72252034,0x202c396c7225202c\n"
".quad 0x2e0a3b3836373233,0x3332203220636f6c,0x64616d0a31203038,0x203436732e6f6c2e\n"
".quad 0x202c3133316c7225,0x202c3033316c7225,0x202c3331336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3233316c,0x3233202c3133316c,0x36732e7268730a3b\n"
".quad 0x3333316c72252034,0x3233316c7225202c,0x6c2e0a3b3233202c,0x383332203220636f\n"
".quad 0x2e6c68730a312030,0x316c722520343662,0x316c7225202c3433,0x610a3b32202c3333\n"
".quad 0x25203436732e6464,0x25202c3533316c72,0x7225202c33386c72,0x6c2e0a3b3433316c\n"
".quad 0x313432203220636f,0x672e74730a312038,0x33662e6c61626f6c,0x33316c72255b2032\n"
".quad 0x37336625202c5d35,0x732e6464610a3b30,0x33316c7225203436,0x2c396c7225202c36\n"
".quad 0x0a3b343638363320,0x32203220636f6c2e,0x616d0a3120313833,0x3436732e6f6c2e64\n"
".quad 0x2c3733316c722520,0x2c3633316c722520,0x2c3331336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3833316c72,0x33202c3733316c72,0x732e7268730a3b32\n"
".quad 0x33316c7225203436,0x33316c7225202c39,0x2e0a3b3233202c38,0x3332203220636f6c\n"
".quad 0x6c68730a31203138,0x6c7225203436622e,0x6c7225202c303431,0x0a3b32202c393331\n"
".quad 0x203436732e646461,0x202c3134316c7225,0x25202c33386c7225,0x2e0a3b3034316c72\n"
".quad 0x3432203220636f6c,0x2e74730a31203931,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x336625202c5d3134,0x2e6464610a3b3837,0x316c722520343673,0x396c7225202c3234\n"
".quad 0x3b3036393034202c,0x203220636f6c2e0a,0x6d0a312032383332,0x36732e6f6c2e6461\n"
".quad 0x3334316c72252034,0x3234316c7225202c,0x3331336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3434316c7225,0x202c3334316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3534,0x0a3b3233202c3434,0x32203220636f6c2e\n"
".quad 0x68730a3120323833,0x7225203436622e6c,0x7225202c3634316c,0x3b32202c3534316c\n"
".quad 0x3436732e6464610a,0x2c3734316c722520,0x202c33386c722520,0x0a3b3634316c7225\n"
".quad 0x32203220636f6c2e,0x74730a3120303234,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d373431,0x6464610a3b383833,0x6c7225203436732e,0x6c7225202c383431\n"
".quad 0x3635303534202c39,0x3220636f6c2e0a3b,0x0a31203338333220,0x732e6f6c2e64616d\n"
".quad 0x34316c7225203436,0x34316c7225202c39,0x31336c7225202c38,0x3b356c7225202c33\n"
".quad 0x3436622e6c68730a,0x2c3035316c722520,0x2c3934316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c313531,0x3b3233202c303531,0x203220636f6c2e0a\n"
".quad 0x730a312033383332,0x25203436622e6c68,0x25202c3235316c72,0x32202c3135316c72\n"
".quad 0x36732e6464610a3b,0x3335316c72252034,0x2c33386c7225202c,0x3b3235316c722520\n"
".quad 0x203220636f6c2e0a,0x730a312031323432,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3335316c,0x64610a3b37393366,0x7225203436732e64,0x7225202c3435316c\n"
".quad 0x35313934202c396c,0x20636f6c2e0a3b32,0x3120343833322032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3535,0x336c7225202c3435,0x356c7225202c3331\n"
".quad 0x36622e6c68730a3b,0x3635316c72252034,0x3535316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3735316c,0x3233202c3635316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203438333220,0x203436622e6c6873,0x202c3835316c7225,0x202c3735316c7225\n"
".quad 0x732e6464610a3b32,0x35316c7225203436,0x33386c7225202c39,0x3835316c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203232343220,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3935316c72,0x610a3b3730346625,0x25203436732e6464,0x25202c3036316c72\n"
".quad 0x323335202c396c72,0x636f6c2e0a3b3834,0x2035383332203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c313631,0x6c7225202c303631,0x6c7225202c333133\n"
".quad 0x622e6c68730a3b35,0x36316c7225203436,0x36316c7225202c32,0x730a3b3233202c31\n"
".quad 0x25203436732e7268,0x25202c3336316c72,0x33202c3236316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120353833322032,0x3436622e6c68730a,0x2c3436316c722520,0x2c3336316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x386c7225202c3536,0x36316c7225202c33\n"
".quad 0x20636f6c2e0a3b34,0x3120333234322032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3536316c7225,0x0a3b363134662520,0x203436732e646461,0x202c3636316c7225\n"
".quad 0x3735202c396c7225,0x6f6c2e0a3b343433,0x3638333220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3736316c,0x7225202c3636316c,0x7225202c3331336c\n"
".quad 0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3836,0x0a3b3233202c3736\n"
".quad 0x203436732e726873,0x202c3936316c7225,0x202c3836316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2036383332203220,0x36622e6c68730a31,0x3037316c72252034,0x3936316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c313731,0x316c7225202c3338\n"
".quad 0x636f6c2e0a3b3037,0x2034323432203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x5d3137316c72255b,0x3b3232346625202c,0x3436732e6464610a,0x2c3237316c722520\n"
".quad 0x36202c396c722520,0x6c2e0a3b30343431,0x383332203220636f,0x2e64616d0a312037\n"
".quad 0x25203436732e6f6c,0x25202c3337316c72,0x25202c3237316c72,0x25202c3331336c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c343731,0x3b3233202c333731\n"
".quad 0x3436732e7268730a,0x2c3537316c722520,0x2c3437316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3738333220322063,0x622e6c68730a3120,0x37316c7225203436,0x37316c7225202c36\n"
".quad 0x64610a3b32202c35,0x7225203436732e64,0x7225202c3737316c,0x6c7225202c33386c\n"
".quad 0x6f6c2e0a3b363731,0x3532343220322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3737316c72255b20,0x3233346625202c5d,0x36732e6464610a3b,0x3837316c72252034\n"
".quad 0x202c396c7225202c,0x2e0a3b3633353536,0x3332203220636f6c,0x64616d0a31203838\n"
".quad 0x203436732e6f6c2e,0x202c3937316c7225,0x202c3837316c7225,0x202c3331336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3038316c,0x3233202c3937316c\n"
".quad 0x36732e7268730a3b,0x3138316c72252034,0x3038316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x383332203220636f,0x2e6c68730a312038,0x316c722520343662,0x316c7225202c3238\n"
".quad 0x610a3b32202c3138,0x25203436732e6464,0x25202c3338316c72,0x7225202c33386c72\n"
".quad 0x6c2e0a3b3238316c,0x323432203220636f,0x672e74730a312036,0x33662e6c61626f6c\n"
".quad 0x38316c72255b2032,0x33346625202c5d33,0x732e6464610a3b39,0x38316c7225203436\n"
".quad 0x2c396c7225202c34,0x0a3b323336393620,0x32203220636f6c2e,0x616d0a3120393833\n"
".quad 0x3436732e6f6c2e64,0x2c3538316c722520,0x2c3438316c722520,0x2c3331336c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3638316c72,0x33202c3538316c72\n"
".quad 0x732e7268730a3b32,0x38316c7225203436,0x38316c7225202c37,0x2e0a3b3233202c36\n"
".quad 0x3332203220636f6c,0x6c68730a31203938,0x6c7225203436622e,0x6c7225202c383831\n"
".quad 0x0a3b32202c373831,0x203436732e646461,0x202c3938316c7225,0x25202c33386c7225\n"
".quad 0x2e0a3b3838316c72,0x3432203220636f6c,0x2e74730a31203732,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x346625202c5d3938,0x2e6464610a3b3834,0x316c722520343673\n"
".quad 0x396c7225202c3039,0x3b3832373337202c,0x203220636f6c2e0a,0x6d0a312030393332\n"
".quad 0x36732e6f6c2e6461,0x3139316c72252034,0x3039316c7225202c,0x3331336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3239316c7225,0x202c3139316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3339,0x0a3b3233202c3239\n"
".quad 0x32203220636f6c2e,0x68730a3120303933,0x7225203436622e6c,0x7225202c3439316c\n"
".quad 0x3b32202c3339316c,0x3436732e6464610a,0x2c3539316c722520,0x202c33386c722520\n"
".quad 0x0a3b3439316c7225,0x32203220636f6c2e,0x74730a3120383234,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d353931,0x6f6c2e0a3b353534,0x3133343220322063\n"
".quad 0x0a3b7465720a3220,0x3a355f323242420a,0x3436732e6464610a,0x2c3839316c722520\n"
".quad 0x25202c366c722520,0x6464610a3b376c72,0x6c7225203436732e,0x6c7225202c393931\n"
".quad 0x393034202c383931,0x61702e646c0a3b36,0x203436752e6d6172,0x202c3231336c7225\n"
".quad 0x5f524c33315a5f5b,0x4442416279685f64,0x6d665f5366503243,0x6d617261705f6966\n"
".quad 0x6f6c2e0a3b5d335f,0x3337333220322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3130326c,0x7225202c3939316c,0x7225202c3231336c,0x702e646c0a3b356c\n"
".quad 0x3436752e6d617261,0x2c3031336c722520,0x524c33315a5f5b20,0x42416279685f645f\n"
".quad 0x665f536650324344,0x617261705f69666d,0x76630a3b5d315f6d,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x2c3230326c722520,0x3b3031336c722520,0x3436622e6c68730a\n"
".quad 0x2c3330326c722520,0x2c3130326c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c343032,0x3b3233202c333032,0x203220636f6c2e0a,0x730a312033373332\n"
".quad 0x25203436622e6c68,0x25202c3530326c72,0x32202c3430326c72,0x36732e6464610a3b\n"
".quad 0x3630326c72252034,0x3230326c7225202c,0x3530326c7225202c,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x5d3630326c72255b,0x0a3b31346625202c,0x203436732e646461\n"
".quad 0x202c3730326c7225,0x202c3839316c7225,0x6c2e0a3b32393138,0x373332203220636f\n"
".quad 0x2e64616d0a312034,0x25203436732e6f6c,0x25202c3830326c72,0x25202c3730326c72\n"
".quad 0x25202c3231336c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c393032\n"
".quad 0x3b3233202c383032,0x3436732e7268730a,0x2c3031326c722520,0x2c3930326c722520\n"
".quad 0x6f6c2e0a3b323320,0x3437333220322063,0x622e6c68730a3120,0x31326c7225203436\n"
".quad 0x31326c7225202c31,0x64610a3b32202c30,0x7225203436732e64,0x7225202c3231326c\n"
".quad 0x7225202c3230326c,0x74730a3b3131326c,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d323132,0x732e6464610a3b35,0x31326c7225203436,0x39316c7225202c33\n"
".quad 0x3838323231202c38,0x3220636f6c2e0a3b,0x0a31203537333220,0x732e6f6c2e64616d\n"
".quad 0x31326c7225203436,0x31326c7225202c34,0x31336c7225202c33,0x3b356c7225202c32\n"
".quad 0x3436622e6c68730a,0x2c3531326c722520,0x2c3431326c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c363132,0x3b3233202c353132,0x203220636f6c2e0a\n"
".quad 0x730a312035373332,0x25203436622e6c68,0x25202c3731326c72,0x32202c3631326c72\n"
".quad 0x36732e6464610a3b,0x3831326c72252034,0x3230326c7225202c,0x3731326c7225202c\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3831326c72255b,0x0a3b35336625202c\n"
".quad 0x203436732e646461,0x202c3931326c7225,0x202c3839316c7225,0x2e0a3b3438333631\n"
".quad 0x3332203220636f6c,0x64616d0a31203637,0x203436732e6f6c2e,0x202c3032326c7225\n"
".quad 0x202c3931326c7225,0x202c3231336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3132326c,0x3233202c3032326c,0x36732e7268730a3b,0x3232326c72252034\n"
".quad 0x3132326c7225202c,0x6c2e0a3b3233202c,0x373332203220636f,0x2e6c68730a312036\n"
".quad 0x326c722520343662,0x326c7225202c3332,0x610a3b32202c3232,0x25203436732e6464\n"
".quad 0x25202c3432326c72,0x25202c3230326c72,0x730a3b3332326c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3432326c,0x2e6464610a3b3466,0x326c722520343673\n"
".quad 0x316c7225202c3532,0x38343032202c3839,0x20636f6c2e0a3b30,0x3120373733322032\n"
".quad 0x2e6f6c2e64616d0a,0x326c722520343673,0x326c7225202c3632,0x336c7225202c3532\n"
".quad 0x356c7225202c3231,0x36622e6c68730a3b,0x3732326c72252034,0x3632326c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3832326c,0x3233202c3732326c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203737333220,0x203436622e6c6873,0x202c3932326c7225\n"
".quad 0x202c3832326c7225,0x732e6464610a3b32,0x33326c7225203436,0x30326c7225202c30\n"
".quad 0x32326c7225202c32,0x6c672e74730a3b39,0x3233662e6c61626f,0x3033326c72255b20\n"
".quad 0x3b39356625202c5d,0x3436732e6464610a,0x2c3133326c722520,0x2c3839316c722520\n"
".quad 0x0a3b363735343220,0x32203220636f6c2e,0x616d0a3120383733,0x3436732e6f6c2e64\n"
".quad 0x2c3233326c722520,0x2c3133326c722520,0x2c3231336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3333326c72,0x33202c3233326c72,0x732e7268730a3b32\n"
".quad 0x33326c7225203436,0x33326c7225202c34,0x2e0a3b3233202c33,0x3332203220636f6c\n"
".quad 0x6c68730a31203837,0x6c7225203436622e,0x6c7225202c353332,0x0a3b32202c343332\n"
".quad 0x203436732e646461,0x202c3633326c7225,0x202c3230326c7225,0x0a3b3533326c7225\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3633326c72,0x64610a3b35366625\n"
".quad 0x7225203436732e64,0x7225202c3733326c,0x3832202c3839316c,0x6f6c2e0a3b323736\n"
".quad 0x3937333220322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3833326c\n"
".quad 0x7225202c3733326c,0x7225202c3231336c,0x2e6c68730a3b356c,0x326c722520343662\n"
".quad 0x326c7225202c3933,0x0a3b3233202c3833,0x203436732e726873,0x202c3034326c7225\n"
".quad 0x202c3933326c7225,0x636f6c2e0a3b3233,0x2039373332203220,0x36622e6c68730a31\n"
".quad 0x3134326c72252034,0x3034326c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c323432,0x6c7225202c323032,0x2e74730a3b313432,0x662e6c61626f6c67\n"
".quad 0x326c72255b203233,0x346625202c5d3234,0x732e6464610a3b37,0x34326c7225203436\n"
".quad 0x39316c7225202c33,0x3836373233202c38,0x3220636f6c2e0a3b,0x0a31203038333220\n"
".quad 0x732e6f6c2e64616d,0x34326c7225203436,0x34326c7225202c34,0x31336c7225202c33\n"
".quad 0x3b356c7225202c32,0x3436622e6c68730a,0x2c3534326c722520,0x2c3434326c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c363432,0x3b3233202c353432\n"
".quad 0x203220636f6c2e0a,0x730a312030383332,0x25203436622e6c68,0x25202c3734326c72\n"
".quad 0x32202c3634326c72,0x36732e6464610a3b,0x3834326c72252034,0x3230326c7225202c\n"
".quad 0x3734326c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3834326c72255b\n"
".quad 0x0a3b33356625202c,0x203436732e646461,0x202c3934326c7225,0x202c3839316c7225\n"
".quad 0x2e0a3b3436383633,0x3332203220636f6c,0x64616d0a31203138,0x203436732e6f6c2e\n"
".quad 0x202c3035326c7225,0x202c3934326c7225,0x202c3231336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3135326c,0x3233202c3035326c,0x36732e7268730a3b\n"
".quad 0x3235326c72252034,0x3135326c7225202c,0x6c2e0a3b3233202c,0x383332203220636f\n"
".quad 0x2e6c68730a312031,0x326c722520343662,0x326c7225202c3335,0x610a3b32202c3235\n"
".quad 0x25203436732e6464,0x25202c3435326c72,0x25202c3230326c72,0x730a3b3335326c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3435326c,0x2e6464610a3b3966\n"
".quad 0x326c722520343673,0x316c7225202c3535,0x36393034202c3839,0x20636f6c2e0a3b30\n"
".quad 0x3120323833322032,0x2e6f6c2e64616d0a,0x326c722520343673,0x326c7225202c3635\n"
".quad 0x336c7225202c3535,0x356c7225202c3231,0x36622e6c68730a3b,0x3735326c72252034\n"
".quad 0x3635326c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3835326c\n"
".quad 0x3233202c3735326c,0x3220636f6c2e0a3b,0x0a31203238333220,0x203436622e6c6873\n"
".quad 0x202c3935326c7225,0x202c3835326c7225,0x732e6464610a3b32,0x36326c7225203436\n"
".quad 0x30326c7225202c30,0x35326c7225202c32,0x6c672e74730a3b39,0x3233662e6c61626f\n"
".quad 0x3036326c72255b20,0x3b37376625202c5d,0x3436732e6464610a,0x2c3136326c722520\n"
".quad 0x2c3839316c722520,0x0a3b363530353420,0x32203220636f6c2e,0x616d0a3120333833\n"
".quad 0x3436732e6f6c2e64,0x2c3236326c722520,0x2c3136326c722520,0x2c3231336c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3336326c72,0x33202c3236326c72\n"
".quad 0x732e7268730a3b32,0x36326c7225203436,0x36326c7225202c34,0x2e0a3b3233202c33\n"
".quad 0x3332203220636f6c,0x6c68730a31203338,0x6c7225203436622e,0x6c7225202c353632\n"
".quad 0x0a3b32202c343632,0x203436732e646461,0x202c3636326c7225,0x202c3230326c7225\n"
".quad 0x0a3b3536326c7225,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3636326c72\n"
".quad 0x610a3b3735346625,0x25203436732e6464,0x25202c3736326c72,0x34202c3839316c72\n"
".quad 0x6c2e0a3b32353139,0x383332203220636f,0x2e64616d0a312034,0x25203436732e6f6c\n"
".quad 0x25202c3836326c72,0x25202c3736326c72,0x25202c3231336c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c393632,0x3b3233202c383632,0x3436732e7268730a\n"
".quad 0x2c3037326c722520,0x2c3936326c722520,0x6f6c2e0a3b323320,0x3438333220322063\n"
".quad 0x622e6c68730a3120,0x37326c7225203436,0x37326c7225202c31,0x64610a3b32202c30\n"
".quad 0x7225203436732e64,0x7225202c3237326c,0x7225202c3230326c,0x74730a3b3137326c\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d323732,0x2e6464610a3b3137\n"
".quad 0x326c722520343673,0x316c7225202c3337,0x34323335202c3839,0x20636f6c2e0a3b38\n"
".quad 0x3120353833322032,0x2e6f6c2e64616d0a,0x326c722520343673,0x326c7225202c3437\n"
".quad 0x336c7225202c3337,0x356c7225202c3231,0x36622e6c68730a3b,0x3537326c72252034\n"
".quad 0x3437326c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3637326c\n"
".quad 0x3233202c3537326c,0x3220636f6c2e0a3b,0x0a31203538333220,0x203436622e6c6873\n"
".quad 0x202c3737326c7225,0x202c3637326c7225,0x732e6464610a3b32,0x37326c7225203436\n"
".quad 0x30326c7225202c38,0x37326c7225202c32,0x6c672e74730a3b37,0x3233662e6c61626f\n"
".quad 0x3837326c72255b20,0x3b30316625202c5d,0x3436732e6464610a,0x2c3937326c722520\n"
".quad 0x2c3839316c722520,0x0a3b343433373520,0x32203220636f6c2e,0x616d0a3120363833\n"
".quad 0x3436732e6f6c2e64,0x2c3038326c722520,0x2c3937326c722520,0x2c3231336c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3138326c72,0x33202c3038326c72\n"
".quad 0x732e7268730a3b32,0x38326c7225203436,0x38326c7225202c32,0x2e0a3b3233202c31\n"
".quad 0x3332203220636f6c,0x6c68730a31203638,0x6c7225203436622e,0x6c7225202c333832\n"
".quad 0x0a3b32202c323832,0x203436732e646461,0x202c3438326c7225,0x202c3230326c7225\n"
".quad 0x0a3b3338326c7225,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3438326c72\n"
".quad 0x6464610a3b366625,0x6c7225203436732e,0x6c7225202c353832,0x343136202c383931\n"
".quad 0x636f6c2e0a3b3034,0x2037383332203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c363832,0x6c7225202c353832,0x6c7225202c323133,0x622e6c68730a3b35\n"
".quad 0x38326c7225203436,0x38326c7225202c37,0x730a3b3233202c36,0x25203436732e7268\n"
".quad 0x25202c3838326c72,0x33202c3738326c72,0x20636f6c2e0a3b32,0x3120373833322032\n"
".quad 0x3436622e6c68730a,0x2c3938326c722520,0x2c3838326c722520,0x2e6464610a3b3220\n"
".quad 0x326c722520343673,0x326c7225202c3039,0x326c7225202c3230,0x672e74730a3b3938\n"
".quad 0x33662e6c61626f6c,0x39326c72255b2032,0x39386625202c5d30,0x36732e6464610a3b\n"
".quad 0x3139326c72252034,0x3839316c7225202c,0x3b3633353536202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312038383332,0x36732e6f6c2e6461,0x3239326c72252034,0x3139326c7225202c\n"
".quad 0x3231336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3339326c7225\n"
".quad 0x202c3239326c7225,0x2e7268730a3b3233,0x326c722520343673,0x326c7225202c3439\n"
".quad 0x0a3b3233202c3339,0x32203220636f6c2e,0x68730a3120383833,0x7225203436622e6c\n"
".quad 0x7225202c3539326c,0x3b32202c3439326c,0x3436732e6464610a,0x2c3639326c722520\n"
".quad 0x2c3230326c722520,0x3b3539326c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3639326c7225,0x64610a3b38662520,0x7225203436732e64,0x7225202c3739326c\n"
".quad 0x3936202c3839316c,0x6f6c2e0a3b323336,0x3938333220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3839326c,0x7225202c3739326c,0x7225202c3231336c\n"
".quad 0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3939,0x0a3b3233202c3839\n"
".quad 0x203436732e726873,0x202c3030336c7225,0x202c3939326c7225,0x636f6c2e0a3b3233\n"
".quad 0x2039383332203220,0x36622e6c68730a31,0x3130336c72252034,0x3030336c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c323033,0x6c7225202c323032\n"
".quad 0x2e74730a3b313033,0x662e6c61626f6c67,0x336c72255b203233,0x386625202c5d3230\n"
".quad 0x732e6464610a3b33,0x30336c7225203436,0x39316c7225202c33,0x3832373337202c38\n"
".quad 0x3220636f6c2e0a3b,0x0a31203039333220,0x732e6f6c2e64616d,0x30336c7225203436\n"
".quad 0x30336c7225202c34,0x31336c7225202c33,0x3b356c7225202c32,0x3436622e6c68730a\n"
".quad 0x2c3530336c722520,0x2c3430336c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c363033,0x3b3233202c353033,0x203220636f6c2e0a,0x730a312030393332\n"
".quad 0x25203436622e6c68,0x25202c3730336c72,0x32202c3630336c72,0x36732e6464610a3b\n"
".quad 0x3830336c72252034,0x3230326c7225202c,0x3730336c7225202c,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x5d3830336c72255b,0x0a0a3b376625202c,0x0a3a365f32324242\n"
".quad 0x32203220636f6c2e,0x65720a3220313334,0x652e0a0a7d0a3b74,0x315a5f207972746e\n"
".quad 0x79685f645f524c39,0x6e495f4344424162,0x5f53665070726574,0x61702e0a28666d66\n"
".quad 0x3436752e206d6172,0x5f524c39315a5f20,0x4442416279685f64,0x707265746e495f43\n"
".quad 0x5f666d665f536650,0x2c305f6d61726170,0x206d617261702e0a,0x315a5f203436752e\n"
".quad 0x79685f645f524c39,0x6e495f4344424162,0x5f53665070726574,0x617261705f666d66\n"
".quad 0x61702e0a2c315f6d,0x3233662e206d6172,0x5f524c39315a5f20,0x4442416279685f64\n"
".quad 0x707265746e495f43,0x5f666d665f536650,0x2c325f6d61726170,0x206d617261702e0a\n"
".quad 0x315a5f203436752e,0x79685f645f524c39,0x6e495f4344424162,0x5f53665070726574\n"
".quad 0x617261705f666d66,0x61702e0a2c335f6d,0x3233662e206d6172,0x5f524c39315a5f20\n"
".quad 0x4442416279685f64,0x707265746e495f43,0x5f666d665f536650,0x0a345f6d61726170\n"
".quad 0x6765722e0a7b0a29,0x6625203233662e20,0x2e0a3b3e3739383c,0x6572702e20676572\n"
".quad 0x3e32313c70252064,0x2e206765722e0a3b,0x313c722520323373,0x65722e0a3b3e3336\n"
".quad 0x25203436732e2067,0x3b3e3733343c6c72,0x61702e646c0a0a0a,0x203436752e6d6172\n"
".quad 0x5f5b202c316c7225,0x5f645f524c39315a,0x5f43444241627968,0x6650707265746e49\n"
".quad 0x61705f666d665f53,0x0a3b5d305f6d6172,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x39315a5f5b202c32,0x6279685f645f524c,0x746e495f43444241,0x665f536650707265\n"
".quad 0x6d617261705f666d,0x2e646c0a3b5d315f,0x36752e6d61726170,0x202c336c72252034\n"
".quad 0x5f524c39315a5f5b,0x4442416279685f64,0x707265746e495f43,0x5f666d665f536650\n"
".quad 0x5d335f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f,0x6c7225203436752e\n"
".quad 0x3b316c7225202c34,0x203220636f6c2e0a,0x6d0a312035333432,0x25203233752e766f\n"
".quad 0x69746e25202c3572,0x766f6d0a3b782e64,0x367225203233752e,0x646961746325202c\n"
".quad 0x2e766f6d0a3b782e,0x2c37722520323375,0x3b782e6469742520,0x2e6f6c2e64616d0a\n"
".quad 0x2c38722520323373,0x7225202c35722520,0x0a3b377225202c36,0x32203220636f6c2e\n"
".quad 0x6f6d0a3120363334,0x7225203233752e76,0x6469746e25202c39,0x2e766f6d0a3b792e\n"
".quad 0x3031722520323375,0x646961746325202c,0x2e766f6d0a3b792e,0x3131722520323375\n"
".quad 0x792e64697425202c,0x6f6c2e64616d0a3b,0x317225203233732e,0x25202c397225202c\n"
".quad 0x317225202c303172,0x20636f6c2e0a3b31,0x3120373334322032,0x3233752e766f6d0a\n"
".quad 0x25202c3231722520,0x0a3b7a2e6469746e,0x203233752e766f6d,0x6325202c33317225\n"
".quad 0x0a3b7a2e64696174,0x203233752e766f6d,0x7425202c34317225,0x616d0a3b7a2e6469\n"
".quad 0x3233732e6f6c2e64,0x7225202c32722520,0x33317225202c3231,0x0a3b34317225202c\n"
".quad 0x32203220636f6c2e,0x76630a3120383334,0x3233662e6e722e74,0x326625203233732e\n"
".quad 0x0a3b387225202c37,0x662e6e722e616d66,0x202c336625203233,0x6630202c37326625\n"
".quad 0x3030303030304633,0x433731346630202c,0x6c2e0a3b30303030,0x333432203220636f\n"
".quad 0x2e7476630a312039,0x732e3233662e6e72,0x202c346625203233,0x616d660a3b317225\n"
".quad 0x203233662e6e722e,0x346625202c356625,0x303046336630202c,0x6630202c30303030\n"
".quad 0x3030303043373134,0x3220636f6c2e0a3b,0x0a31203034343220,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x327225202c383266,0x6e722e616d660a3b,0x366625203233662e\n"
".quad 0x202c38326625202c,0x3030303046336630,0x31346630202c3030,0x0a3b303030304337\n"
".quad 0x31203320636f6c2e,0x76630a3520333433,0x33732e697a722e74,0x7225203233662e32\n"
".quad 0x0a3b366625202c33,0x2e3436752e747663,0x356c722520323375,0x2e0a3b387225202c\n"
".quad 0x3432203220636f6c,0x7476630a31203334,0x3233732e3436732e,0x25202c366c722520\n"
".quad 0x2e6c68730a3b3172,0x2c34722520323362,0x3b36202c32722520,0x203220636f6c2e0a\n"
".quad 0x630a312033343432,0x732e3436732e7476,0x2c376c7225203233,0x64610a3b34722520\n"
".quad 0x7225203436732e64,0x6c7225202c35316c,0x3b366c7225202c37,0x203220636f6c2e0a\n"
".quad 0x6d0a312033343432,0x36732e6f6c2e6461,0x202c386c72252034,0x25202c35316c7225\n"
".quad 0x6c7225202c336c72,0x662e6464610a3b35,0x2c39326625203233,0x6630202c33662520\n"
".quad 0x3030303045373243,0x33662e6464610a3b,0x202c303366252032,0x436630202c356625\n"
".quad 0x3b30303030434631,0x203220636f6c2e0a,0x6c756d0a31203037,0x336625203233662e\n"
".quad 0x2c30336625202c31,0x660a3b3033662520,0x33662e6e722e616d,0x202c323366252032\n"
".quad 0x6625202c39326625,0x31336625202c3932,0x33662e6464610a3b,0x202c333366252032\n"
".quad 0x436630202c366625,0x3b30303030434631,0x203220636f6c2e0a,0x616d660a31203037\n"
".quad 0x203233662e6e722e,0x6625202c34336625,0x33336625202c3333,0x0a3b32336625202c\n"
".quad 0x2e746c2e70746573,0x2c31702520323366,0x30202c3433662520,0x3030303038313466\n"
".quad 0x732e6464610a3b30,0x2c35317225203233,0x322d202c38722520,0x672e707465730a3b\n"
".quad 0x7025203233752e74,0x2c35317225202c32,0x6f6c2e0a3b393520,0x3634343220322063\n"
".quad 0x2e707465730a3120,0x25203233732e746c,0x2c317225202c3370,0x702e726f0a3b3220\n"
".quad 0x2c34702520646572,0x7025202c32702520,0x20636f6c2e0a3b33,0x3120363434322032\n"
".quad 0x74672e707465730a,0x357025203233732e,0x36202c317225202c,0x72702e726f0a3b31\n"
".quad 0x202c367025206465,0x357025202c347025,0x3220636f6c2e0a3b,0x0a31203634343220\n"
".quad 0x2e746c2e70746573,0x2c37702520323373,0x3b32202c32722520,0x646572702e726f0a\n"
".quad 0x7025202c38702520,0x0a3b377025202c36,0x32203220636f6c2e,0x65730a3120363434\n"
".quad 0x33732e74672e7074,0x25202c3970252032,0x0a3b3136202c3272,0x20646572702e726f\n"
".quad 0x7025202c30317025,0x0a3b397025202c38,0x203436732e646461,0x25202c36316c7225\n"
".quad 0x3335202c35316c72,0x6f6c2e0a3b383432,0x3834363220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c37316c,0x336c7225202c3631,0x0a3b356c7225202c\n"
".quad 0x2e6f742e61747663,0x752e6c61626f6c67,0x38316c7225203436,0x0a3b326c7225202c\n"
".quad 0x203436622e6c6873,0x25202c39316c7225,0x3233202c37316c72,0x36732e7268730a3b\n"
".quad 0x2c30326c72252034,0x202c39316c722520,0x636f6c2e0a3b3233,0x2038343632203220\n"
".quad 0x36622e6c68730a31,0x2c31326c72252034,0x202c30326c722520,0x732e6464610a3b32\n"
".quad 0x2c396c7225203436,0x202c38316c722520,0x610a3b31326c7225,0x25203436732e6464\n"
".quad 0x7225202c32326c72,0x333735202c35316c,0x636f6c2e0a3b3434,0x2039343632203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x326c7225202c3332,0x2c336c7225202c32\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x7225202c34326c72,0x3b3233202c33326c\n"
".quad 0x3436732e7268730a,0x202c35326c722520,0x33202c34326c7225,0x20636f6c2e0a3b32\n"
".quad 0x3120393436322032,0x3436622e6c68730a,0x202c36326c722520,0x32202c35326c7225\n"
".quad 0x36732e6464610a3b,0x2c30316c72252034,0x202c38316c722520,0x610a3b36326c7225\n"
".quad 0x25203436732e6464,0x7225202c37326c72,0x343136202c35316c,0x636f6c2e0a3b3034\n"
".quad 0x2030353632203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x326c7225202c3832\n"
".quad 0x2c336c7225202c37,0x730a3b356c722520,0x25203436622e6c68,0x7225202c39326c72\n"
".quad 0x3b3233202c38326c,0x3436732e7268730a,0x202c30336c722520,0x33202c39326c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120303536322032,0x3436622e6c68730a,0x202c31336c722520\n"
".quad 0x32202c30336c7225,0x36732e6464610a3b,0x2c31316c72252034,0x202c38316c722520\n"
".quad 0x610a3b31336c7225,0x25203436732e6464,0x7225202c32336c72,0x353536202c35316c\n"
".quad 0x636f6c2e0a3b3633,0x2031353632203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x336c7225202c3333,0x2c336c7225202c32,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x7225202c34336c72,0x3b3233202c33336c,0x3436732e7268730a,0x202c35336c722520\n"
".quad 0x33202c34336c7225,0x20636f6c2e0a3b32,0x3120313536322032,0x3436622e6c68730a\n"
".quad 0x202c36336c722520,0x32202c35336c7225,0x36732e6464610a3b,0x2c32316c72252034\n"
".quad 0x202c38316c722520,0x610a3b36336c7225,0x25203436732e6464,0x7225202c37336c72\n"
".quad 0x363936202c35316c,0x636f6c2e0a3b3233,0x2032353632203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x336c7225202c3833,0x2c336c7225202c37,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x7225202c39336c72,0x3b3233202c38336c,0x3436732e7268730a\n"
".quad 0x202c30346c722520,0x33202c39336c7225,0x20636f6c2e0a3b32,0x3120323536322032\n"
".quad 0x3436622e6c68730a,0x202c31346c722520,0x32202c30346c7225,0x36732e6464610a3b\n"
".quad 0x2c33316c72252034,0x202c38316c722520,0x610a3b31346c7225,0x25203436732e6464\n"
".quad 0x7225202c32346c72,0x373337202c35316c,0x636f6c2e0a3b3832,0x2033353632203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x346c7225202c3334,0x2c336c7225202c32\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x7225202c34346c72,0x3b3233202c33346c\n"
".quad 0x3436732e7268730a,0x202c35346c722520,0x33202c34346c7225,0x20636f6c2e0a3b32\n"
".quad 0x3120333536322032,0x3436622e6c68730a,0x202c36346c722520,0x32202c35346c7225\n"
".quad 0x36732e6464610a3b,0x2c34316c72252034,0x202c38316c722520,0x2e0a3b36346c7225\n"
".quad 0x3432203220636f6c,0x7025400a31203634,0x4220617262203031,0x0a0a3b365f333242\n"
".quad 0x203436622e6c6873,0x25202c37346c7225,0x3b3233202c386c72,0x3436732e7268730a\n"
".quad 0x202c38346c722520,0x33202c37346c7225,0x20636f6c2e0a3b32,0x3120363536322032\n"
".quad 0x3436622e6c68730a,0x202c39346c722520,0x32202c38346c7225,0x36732e6464610a3b\n"
".quad 0x2c30356c72252034,0x25202c346c722520,0x646c0a3b39346c72,0x2e6c61626f6c672e\n"
".quad 0x2c37662520323366,0x5d30356c72255b20,0x33732e6464610a3b,0x202c373172252032\n"
".quad 0x3b312d202c317225,0x203220636f6c2e0a,0x630a312037353632,0x732e3436732e7476\n"
".quad 0x31356c7225203233,0x0a3b37317225202c,0x203436732e646461,0x25202c32356c7225\n"
".quad 0x7225202c31356c72,0x2e6464610a3b376c,0x356c722520343673,0x32356c7225202c33\n"
".quad 0x0a3b32393138202c,0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c363334\n"
".quad 0x685f645f524c3931,0x495f434442416279,0x536650707265746e,0x7261705f666d665f\n"
".quad 0x2e0a3b5d335f6d61,0x3632203220636f6c,0x64616d0a31203735,0x203436732e6f6c2e\n"
".quad 0x25202c34356c7225,0x7225202c33356c72,0x7225202c3633346c,0x2e6c68730a3b356c\n"
".quad 0x356c722520343662,0x34356c7225202c35,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c36356c,0x0a3b3233202c3535,0x32203220636f6c2e,0x68730a3120373536\n"
".quad 0x7225203436622e6c,0x6c7225202c37356c,0x610a3b32202c3635,0x25203436732e6464\n"
".quad 0x7225202c38356c72,0x356c7225202c346c,0x6c672e646c0a3b37,0x3233662e6c61626f\n"
".quad 0x255b202c38662520,0x2e0a3b5d38356c72,0x3632203220636f6c,0x6464610a31203835\n"
".quad 0x317225203233732e,0x202c317225202c39,0x732e7476630a3b31,0x25203233732e3436\n"
".quad 0x7225202c39356c72,0x2e6464610a3b3931,0x366c722520343673,0x39356c7225202c30\n"
".quad 0x0a3b376c7225202c,0x203436732e646461,0x25202c31366c7225,0x3631202c30366c72\n"
".quad 0x6f6c2e0a3b343833,0x3835363220322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c32366c,0x346c7225202c3136,0x356c7225202c3633,0x36622e6c68730a3b\n"
".quad 0x2c33366c72252034,0x202c32366c722520,0x2e7268730a3b3233,0x366c722520343673\n"
".quad 0x33366c7225202c34,0x6c2e0a3b3233202c,0x353632203220636f,0x2e6c68730a312038\n"
".quad 0x366c722520343662,0x34366c7225202c35,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x346c7225202c3636,0x3b35366c7225202c,0x626f6c672e646c0a,0x25203233662e6c61\n"
".quad 0x6c72255b202c3966,0x6464610a3b5d3636,0x327225203233732e,0x202c347225202c31\n"
".quad 0x6f6c2e0a3b34362d,0x3935363220322063,0x732e7476630a3120,0x25203233732e3436\n"
".quad 0x7225202c37366c72,0x2e6464610a3b3132,0x366c722520343673,0x2c366c7225202c38\n"
".quad 0x0a3b37366c722520,0x203436732e646461,0x25202c39366c7225,0x3633202c38366c72\n"
".quad 0x6f6c2e0a3b343638,0x3935363220322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c30376c,0x346c7225202c3936,0x356c7225202c3633,0x36622e6c68730a3b\n"
".quad 0x2c31376c72252034,0x202c30376c722520,0x2e7268730a3b3233,0x376c722520343673\n"
".quad 0x31376c7225202c32,0x6c2e0a3b3233202c,0x353632203220636f,0x2e6c68730a312039\n"
".quad 0x376c722520343662,0x32376c7225202c33,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x346c7225202c3437,0x3b33376c7225202c,0x626f6c672e646c0a,0x25203233662e6c61\n"
".quad 0x72255b202c303166,0x64610a3b5d34376c,0x7225203436732e64,0x6c7225202c35376c\n"
".quad 0x366c7225202c3135,0x732e6464610a3b37,0x36376c7225203436,0x2c35376c7225202c\n"
".quad 0x0a3b363530353420,0x32203220636f6c2e,0x616d0a3120303636,0x3436732e6f6c2e64\n"
".quad 0x202c37376c722520,0x25202c36376c7225,0x25202c3633346c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x376c7225202c3837,0x730a3b3233202c37,0x25203436732e7268\n"
".quad 0x7225202c39376c72,0x3b3233202c38376c,0x203220636f6c2e0a,0x730a312030363632\n"
".quad 0x25203436622e6c68,0x7225202c30386c72,0x0a3b32202c39376c,0x203436732e646461\n"
".quad 0x25202c31386c7225,0x6c7225202c346c72,0x672e646c0a3b3038,0x33662e6c61626f6c\n"
".quad 0x202c313166252032,0x3b5d31386c72255b,0x3436732e6464610a,0x202c32386c722520\n"
".quad 0x25202c39356c7225,0x64610a3b37366c72,0x7225203436732e64,0x6c7225202c33386c\n"
".quad 0x34323335202c3238,0x20636f6c2e0a3b38,0x3120313636322032,0x2e6f6c2e64616d0a\n"
".quad 0x386c722520343673,0x33386c7225202c34,0x3633346c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x25202c35386c7225,0x3233202c34386c72,0x36732e7268730a3b\n"
".quad 0x2c36386c72252034,0x202c35386c722520,0x636f6c2e0a3b3233,0x2031363632203220\n"
".quad 0x36622e6c68730a31,0x2c37386c72252034,0x202c36386c722520,0x732e6464610a3b32\n"
".quad 0x38386c7225203436,0x202c346c7225202c,0x6c0a3b37386c7225,0x6c61626f6c672e64\n"
".quad 0x316625203233662e,0x386c72255b202c32,0x2e6464610a3b5d38,0x3532722520323373\n"
".quad 0x36202c347225202c,0x20636f6c2e0a3b34,0x3120323636322032,0x3436732e7476630a\n"
".quad 0x6c7225203233732e,0x35327225202c3938,0x36732e6464610a3b,0x2c30396c72252034\n"
".quad 0x25202c366c722520,0x64610a3b39386c72,0x7225203436732e64,0x6c7225202c31396c\n"
".quad 0x34333735202c3039,0x20636f6c2e0a3b34,0x3120323636322032,0x2e6f6c2e64616d0a\n"
".quad 0x396c722520343673,0x31396c7225202c32,0x3633346c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x25202c33396c7225,0x3233202c32396c72,0x36732e7268730a3b\n"
".quad 0x2c34396c72252034,0x202c33396c722520,0x636f6c2e0a3b3233,0x2032363632203220\n"
".quad 0x36622e6c68730a31,0x2c35396c72252034,0x202c34396c722520,0x732e6464610a3b32\n"
".quad 0x36396c7225203436,0x202c346c7225202c,0x6c0a3b35396c7225,0x6c61626f6c672e64\n"
".quad 0x316625203233662e,0x396c72255b202c33,0x2e6464610a3b5d36,0x396c722520343673\n"
".quad 0x31356c7225202c37,0x3b39386c7225202c,0x3436732e6464610a,0x202c38396c722520\n"
".quad 0x36202c37396c7225,0x6c2e0a3b36333535,0x363632203220636f,0x2e64616d0a312033\n"
".quad 0x25203436732e6f6c,0x7225202c39396c72,0x6c7225202c38396c,0x6c7225202c363334\n"
".quad 0x622e6c68730a3b35,0x30316c7225203436,0x39396c7225202c30,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3130316c,0x3233202c3030316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203336363220,0x203436622e6c6873,0x202c3230316c7225,0x202c3130316c7225\n"
".quad 0x732e6464610a3b32,0x30316c7225203436,0x2c346c7225202c33,0x3b3230316c722520\n"
".quad 0x626f6c672e646c0a,0x25203233662e6c61,0x72255b202c343166,0x2e0a3b5d3330316c\n"
".quad 0x3632203220636f6c,0x7465730a31203436,0x3233732e71652e70,0x25202c3131702520\n"
".quad 0x0a3b3336202c3272,0x7262203131702540,0x335f333242422061,0x20636f6c2e0a0a3b\n"
".quad 0x3120383536322032,0x3436752e7476630a,0x6c7225203233752e,0x317225202c343031\n"
".quad 0x20636f6c2e0a3b39,0x3120323636322032,0x3436752e7476630a,0x6c7225203233752e\n"
".quad 0x327225202c353031,0x732e6464610a3b35,0x30316c7225203436,0x30316c7225202c36\n"
".quad 0x30316c7225202c34,0x732e6464610a3b35,0x30316c7225203436,0x30316c7225202c37\n"
".quad 0x3832373337202c36,0x36752e7476630a3b,0x7225203233752e34,0x7225202c3830316c\n"
".quad 0x61702e646c0a3b38,0x203436752e6d6172,0x202c3533346c7225,0x5f524c39315a5f5b\n"
".quad 0x4442416279685f64,0x707265746e495f43,0x5f666d665f536650,0x5d335f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x0a31203536363220,0x732e6f6c2e64616d,0x30316c7225203436\n"
".quad 0x30316c7225202c39,0x33346c7225202c37,0x30316c7225202c35,0x61702e646c0a3b38\n"
".quad 0x203436752e6d6172,0x202c3832346c7225,0x5f524c39315a5f5b,0x4442416279685f64\n"
".quad 0x707265746e495f43,0x5f666d665f536650,0x5d305f6d61726170,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x6c7225202c303131,0x6c68730a3b383234\n"
".quad 0x6c7225203436622e,0x6c7225202c313131,0x3b3233202c393031,0x3436732e7268730a\n"
".quad 0x2c3231316c722520,0x2c3131316c722520,0x6f6c2e0a3b323320,0x3536363220322063\n"
".quad 0x622e6c68730a3120,0x31316c7225203436,0x31316c7225202c33,0x64610a3b32202c32\n"
".quad 0x7225203436732e64,0x7225202c3431316c,0x7225202c3031316c,0x646c0a3b3331316c\n"
".quad 0x2e6c61626f6c672e,0x3938662520323366,0x316c72255b202c36,0x42420a0a3b5d3431\n"
".quad 0x64610a3a335f3332,0x7225203233732e64,0x2c387225202c3834,0x6f6c2e0a3b312d20\n"
".quad 0x3736363220322063,0x722e7476630a3120,0x33732e3233662e6e,0x202c363966252032\n"
".quad 0x64610a3b38347225,0x6625203233662e64,0x36396625202c3838,0x303046336630202c\n"
".quad 0x76630a3b30303030,0x3233662e6e722e74,0x396625203233732e,0x0a3b347225202c37\n"
".quad 0x203233662e646461,0x6625202c38396625,0x3046336630202c34,0x610a3b3030303030\n"
".quad 0x25203233662e6464,0x396625202c373466,0x3b37396625202c38,0x3233752e766f6d0a\n"
".quad 0x30202c3435722520,0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x336625202c363366,0x2c38336625202c37,0x202c7d3933662520,0x5f6665527865745b\n"
".quad 0x66257b202c443166,0x37346625202c3838,0x6c2e090a0a3b5d7d,0x363632203220636f\n"
".quad 0x2e6464610a312038,0x3535722520323373,0x31202c387225202c,0x6e722e7476630a3b\n"
".quad 0x3233732e3233662e,0x25202c3939662520,0x6464610a3b353572,0x396625203233662e\n"
".quad 0x2c39396625202c34,0x3030304633663020,0x74090a0a3b303030,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x202c323466257b20,0x6625202c33346625,0x35346625202c3434\n"
".quad 0x527865745b202c7d,0x202c4433665f6665,0x25202c343966257b,0x0a0a3b5d7d373466\n"
".quad 0x203220636f6c2e09,0x630a312039363632,0x33662e6e722e7476,0x6625203233732e32\n"
".quad 0x317225202c303031,0x662e6464610a3b37,0x3130316625203233,0x2c3030316625202c\n"
".quad 0x3030304633663020,0x6464610a3b303030,0x356625203233662e,0x3130316625202c39\n"
".quad 0x0a3b37396625202c,0x64322e786574090a,0x2e3233662e34762e,0x3466257b20323366\n"
".quad 0x2c39346625202c38,0x25202c3035662520,0x745b202c7d313566,0x35665f6665527865\n"
".quad 0x383866257b202c44,0x5d7d39356625202c,0x6574090a090a0a3b,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x25202c343566257b,0x356625202c353566,0x7d37356625202c36\n"
".quad 0x65527865745b202c,0x7b202c4436665f66,0x6625202c34396625,0x090a0a3b5d7d3935\n"
".quad 0x32203220636f6c2e,0x76630a3120313736,0x3233662e6e722e74,0x316625203233732e\n"
".quad 0x39317225202c3230,0x33662e6464610a3b,0x2c33303166252032,0x202c323031662520\n"
".quad 0x3030303046336630,0x2e6464610a3b3030,0x3137662520323366,0x2c3330316625202c\n"
".quad 0x0a0a3b3739662520,0x2e64322e78657409,0x662e3233662e3476,0x303666257b203233\n"
".quad 0x202c31366625202c,0x6625202c32366625,0x65745b202c7d3336,0x4437665f66655278\n"
".quad 0x2c343966257b202c,0x3b5d7d3137662520,0x786574090a090a0a,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x6625202c36366625,0x38366625202c3736,0x2c7d39366625202c\n"
".quad 0x6665527865745b20,0x257b202c4438665f,0x376625202c383866,0x2e090a0a3b5d7d31\n"
".quad 0x3632203220636f6c,0x7476630a31203337,0x2e3233662e6e722e,0x3031662520323373\n"
".quad 0x3b35327225202c34,0x3233662e6464610a,0x25202c3338662520,0x316625202c383966\n"
".quad 0x6574090a0a3b3430,0x2e34762e64322e78,0x203233662e323366,0x25202c323766257b\n"
".quad 0x376625202c333766,0x7d35376625202c34,0x65527865745b202c,0x202c443531665f66\n"
".quad 0x25202c383866257b,0x0a0a3b5d7d333866,0x322e786574090a09,0x3233662e34762e64\n"
".quad 0x66257b203233662e,0x39376625202c3837,0x202c30386625202c,0x5b202c7d31386625\n"
".quad 0x665f666552786574,0x66257b202c443731,0x33386625202c3439,0x6c2e090a0a3b5d7d\n"
".quad 0x373632203220636f,0x2e7476630a312035,0x732e3233662e6e72,0x3530316625203233\n"
".quad 0x0a3b31327225202c,0x203233662e646461,0x6625202c35396625,0x30316625202c3839\n"
".quad 0x786574090a0a3b35,0x662e34762e64322e,0x7b203233662e3233,0x6625202c34386625\n"
".quad 0x36386625202c3538,0x2c7d37386625202c,0x6665527865745b20,0x7b202c443031665f\n"
".quad 0x6625202c38386625,0x090a0a3b5d7d3539,0x64322e786574090a,0x2e3233662e34762e\n"
".quad 0x3966257b20323366,0x2c31396625202c30,0x25202c3239662520,0x745b202c7d333966\n"
".quad 0x31665f6665527865,0x3966257b202c4432,0x7d35396625202c34,0x6f6c2e090a0a3b5d\n"
".quad 0x3937363220322063,0x20317025400a3120,0x3332424220617262,0x6f6c2e0a0a3b355f\n"
".quad 0x3331373220322063,0x662e6275730a3120,0x3630316625203233,0x202c36336625202c\n"
".quad 0x64610a3b32346625,0x6625203233662e64,0x316625202c373031,0x38346625202c3630\n"
".quad 0x33662e6275730a3b,0x2c38303166252032,0x202c373031662520,0x75730a3b34356625\n"
".quad 0x6625203233662e62,0x316625202c393031,0x30366625202c3830,0x33662e6464610a3b\n"
".quad 0x2c30313166252032,0x202c393031662520,0x64610a3b36366625,0x6625203233662e64\n"
".quad 0x316625202c313131,0x34386625202c3031,0x33662e6275730a3b,0x2c32313166252032\n"
".quad 0x202c313131662520,0x64610a3b30396625,0x6625203233662e64,0x316625202c333131\n"
".quad 0x32376625202c3231,0x33662e6275730a3b,0x2c34313166252032,0x202c333131662520\n"
".quad 0x75730a3b38376625,0x6625203233662e62,0x386625202c353131,0x610a3b396625202c\n"
".quad 0x25203233662e6464,0x6625202c36313166,0x346625202c353131,0x662e6464610a3b38\n"
".quad 0x3731316625203233,0x2c3631316625202c,0x730a3b3435662520,0x25203233662e6275\n"
".quad 0x6625202c38313166,0x366625202c373131,0x662e6275730a3b30,0x3931316625203233\n"
".quad 0x2c3831316625202c,0x610a3b3636662520,0x25203233662e6464,0x6625202c30323166\n"
".quad 0x316625202c393131,0x662e6275730a3b31,0x3132316625203233,0x2c3032316625202c\n"
".quad 0x610a3b3231662520,0x25203233662e6464,0x6625202c32323166,0x316625202c313231\n"
".quad 0x662e6275730a3b34,0x3332316625203233,0x2c3232316625202c,0x0a3b363938662520\n"
".quad 0x203233662e646461,0x25202c3432316625,0x386625202c303166,0x662e6464610a3b34\n"
".quad 0x3532316625203233,0x2c3432316625202c,0x610a3b3131662520,0x25203233662e6464\n"
".quad 0x6625202c36323166,0x396625202c353231,0x662e6464610a3b30,0x3732316625203233\n"
".quad 0x2c3632316625202c,0x730a3b3231662520,0x25203233662e6275,0x6625202c38323166\n"
".quad 0x316625202c373231,0x662e6275730a3b33,0x3932316625203233,0x2c3832316625202c\n"
".quad 0x730a3b3237662520,0x25203233662e6275,0x6625202c30333166,0x316625202c393231\n"
".quad 0x662e6275730a3b34,0x3133316625203233,0x2c3033316625202c,0x730a3b3837662520\n"
".quad 0x25203233662e6275,0x6625202c32333166,0x386625202c313331,0x2e6275730a3b3639\n"
".quad 0x3331662520323366,0x2c38346625202c33,0x6c2e0a3b37662520,0x313732203220636f\n"
".quad 0x2e6464610a312033,0x3331662520323366,0x3333316625202c34,0x0a3b34356625202c\n"
".quad 0x203233662e646461,0x25202c3533316625,0x6625202c34333166,0x2e6464610a3b3036\n"
".quad 0x3331662520323366,0x3533316625202c36,0x0a3b36366625202c,0x203233662e646461\n"
".quad 0x25202c3733316625,0x6625202c36333166,0x2e6464610a3b3438,0x3331662520323366\n"
".quad 0x3733316625202c38,0x0a3b31316625202c,0x203233662e646461,0x25202c3933316625\n"
".quad 0x6625202c38333166,0x2e6464610a3b3039,0x3431662520323366,0x3933316625202c30\n"
".quad 0x0a3b32316625202c,0x203233662e646461,0x25202c3134316625,0x6625202c30343166\n"
".quad 0x2e6464610a3b3237,0x3431662520323366,0x3134316625202c32,0x0a3b34316625202c\n"
".quad 0x203233662e646461,0x25202c3334316625,0x6625202c32343166,0x2e6464610a3b3837\n"
".quad 0x3431662520323366,0x3334316625202c34,0x3b3639386625202c,0x3233662e6c756d0a\n"
".quad 0x202c353431662520,0x25202c3332316625,0x6d660a3b33323166,0x3233662e6e722e61\n"
".quad 0x202c363431662520,0x25202c3431316625,0x6625202c34313166,0x6c756d0a3b353431\n"
".quad 0x316625203233662e,0x33316625202c3734,0x3233316625202c32,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x33316625202c3834,0x3233316625202c32,0x3b3634316625202c\n"
".quad 0x3233662e6275730a,0x202c393431662520,0x25202c3434316625,0x756d0a3b38343166\n"
".quad 0x6625203233662e6c,0x336625202c303531,0x3830436630202c36,0x660a3b3030303030\n"
".quad 0x33662e6e722e616d,0x2c31353166252032,0x6630202c37662520,0x3030303030343134\n"
".quad 0x3b3035316625202c,0x2e6e722e616d660a,0x3531662520323366,0x202c386625202c32\n"
".quad 0x3030303830436630,0x35316625202c3030,0x722e616d660a3b31,0x6625203233662e6e\n"
".quad 0x346625202c333531,0x3830436630202c32,0x25202c3030303030,0x6d660a3b32353166\n"
".quad 0x3233662e6e722e61,0x202c343531662520,0x436630202c396625,0x2c30303030303830\n"
".quad 0x0a3b333531662520,0x203233662e646461,0x25202c3535316625,0x6625202c34353166\n"
".quad 0x2e6464610a3b3834,0x3531662520323366,0x3535316625202c36,0x0a3b34356625202c\n"
".quad 0x203233662e646461,0x25202c3735316625,0x6625202c36353166,0x2e6464610a3b3036\n"
".quad 0x3531662520323366,0x3735316625202c38,0x0a3b36366625202c,0x662e6e722e616d66\n"
".quad 0x3935316625203233,0x202c30316625202c,0x3030303830436630,0x35316625202c3030\n"
".quad 0x662e6464610a3b38,0x3036316625203233,0x2c3935316625202c,0x610a3b3438662520\n"
".quad 0x25203233662e6464,0x6625202c31363166,0x316625202c303631,0x662e6464610a3b31\n"
".quad 0x3236316625203233,0x2c3136316625202c,0x610a3b3039662520,0x25203233662e6464\n"
".quad 0x6625202c33363166,0x316625202c323631,0x722e616d660a3b32,0x6625203233662e6e\n"
".quad 0x316625202c343631,0x3830436630202c33,0x25202c3030303030,0x64610a3b33363166\n"
".quad 0x6625203233662e64,0x316625202c353631,0x32376625202c3436,0x33662e6464610a3b\n"
".quad 0x2c36363166252032,0x202c353631662520,0x64610a3b34316625,0x6625203233662e64\n"
".quad 0x316625202c373631,0x38376625202c3636,0x33662e6464610a3b,0x2c38363166252032\n"
".quad 0x202c373631662520,0x660a3b3639386625,0x33662e6e722e616d,0x2c39363166252032\n"
".quad 0x202c383431662520,0x3534314630346630,0x36316625202c3431,0x662e6c756d0a3b38\n"
".quad 0x3037316625203233,0x202c32346625202c,0x3030304130346630,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x6625202c31373166,0x30436630202c3633,0x202c303030303041\n"
".quad 0x660a3b3037316625,0x33662e6e722e616d,0x2c32373166252032,0x202c343131662520\n"
".quad 0x3535354446336630,0x37316625202c3535,0x662e6c756d0a3b31,0x3337316625203233\n"
".quad 0x30202c396625202c,0x3030303041303466,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x386625202c343731,0x304130436630202c,0x6625202c30303030,0x616d660a3b333731\n"
".quad 0x203233662e6e722e,0x25202c3537316625,0x6630202c33323166,0x3535353535444633\n"
".quad 0x3b3437316625202c,0x3233662e6c756d0a,0x202c363731662520,0x6630202c33316625\n"
".quad 0x3030303030413034,0x6e722e616d660a3b,0x316625203233662e,0x30316625202c3737\n"
".quad 0x304130436630202c,0x6625202c30303030,0x616d660a3b363731,0x203233662e6e722e\n"
".quad 0x25202c3837316625,0x6630202c32333166,0x3535353535444633,0x3b3737316625202c\n"
".quad 0x3233662e6464610a,0x202c393731662520,0x6625202c36336625,0x2e6275730a3b3633\n"
".quad 0x3831662520323366,0x3937316625202c30,0x2e0a3b386625202c,0x3732203220636f6c\n"
".quad 0x6464610a31203331,0x316625203233662e,0x32346625202c3138,0x0a3b32346625202c\n"
".quad 0x203233662e646461,0x25202c3238316625,0x6625202c30383166,0x6275730a3b313831\n"
".quad 0x316625203233662e,0x38316625202c3338,0x0a3b396625202c32,0x32203220636f6c2e\n"
".quad 0x64610a3120333137,0x6625203233662e64,0x316625202c343831,0x38346625202c3338\n"
".quad 0x33662e6464610a3b,0x2c35383166252032,0x202c343831662520,0x64610a3b34356625\n"
".quad 0x6625203233662e64,0x316625202c363831,0x30366625202c3538,0x33662e6464610a3b\n"
".quad 0x2c37383166252032,0x202c363831662520,0x75730a3b36366625,0x6625203233662e62\n"
".quad 0x316625202c383831,0x30316625202c3738,0x3220636f6c2e0a3b,0x0a31203331373220\n"
".quad 0x203233662e646461,0x25202c3938316625,0x6625202c38383166,0x2e766f6d0a3b3438\n"
".quad 0x3931662520323366,0x3030436630202c30,0x2e0a3b3030303030,0x3732203220636f6c\n"
".quad 0x616d660a31203331,0x203233662e6e722e,0x25202c3139316625,0x436630202c313166\n"
".quad 0x2c30303030303030,0x0a3b393831662520,0x203233662e646461,0x25202c3239316625\n"
".quad 0x6625202c31393166,0x2e616d660a3b3039,0x25203233662e6e72,0x6625202c33393166\n"
".quad 0x30436630202c3231,0x202c303030303030,0x730a3b3239316625,0x25203233662e6275\n"
".quad 0x6625202c34393166,0x316625202c333931,0x20636f6c2e0a3b33,0x3120333137322032\n"
".quad 0x3233662e6464610a,0x202c353931662520,0x25202c3439316625,0x616d660a3b323766\n"
".quad 0x203233662e6e722e,0x25202c3639316625,0x436630202c343166,0x2c30303030303030\n"
".quad 0x0a3b353931662520,0x203233662e646461,0x25202c3739316625,0x6625202c36393166\n"
".quad 0x2e616d660a3b3837,0x25203233662e6e72,0x6625202c38393166,0x436630202c363938\n"
".quad 0x2c30303030303030,0x0a3b373931662520,0x203233662e646461,0x25202c3939316625\n"
".quad 0x6625202c34313166,0x616d660a3b343131,0x203233662e6e722e,0x25202c3030326625\n"
".quad 0x6625202c33323166,0x316625202c333231,0x2e67656e0a3b3734,0x3032662520323366\n"
".quad 0x3030326625202c31,0x6e722e616d660a3b,0x326625203233662e,0x39316625202c3230\n"
".quad 0x3431316625202c39,0x3b3130326625202c,0x3233662e6275730a,0x202c333032662520\n"
".quad 0x25202c3839316625,0x64610a3b32303266,0x6625203233662e64,0x386625202c343032\n"
".quad 0x660a3b386625202c,0x33662e6e722e616d,0x2c35303266252032,0x30202c3633662520\n"
".quad 0x3030303038304366,0x3430326625202c30,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x32346625202c3630,0x303830436630202c,0x6625202c30303030,0x6464610a3b353032\n"
".quad 0x326625203233662e,0x2c396625202c3730,0x64610a3b39662520,0x6625203233662e64\n"
".quad 0x326625202c383032,0x30326625202c3630,0x662e6464610a3b37,0x3930326625203233\n"
".quad 0x2c3830326625202c,0x610a3b3834662520,0x25203233662e6464,0x6625202c30313266\n"
".quad 0x356625202c393032,0x662e6464610a3b34,0x3131326625203233,0x2c3031326625202c\n"
".quad 0x610a3b3036662520,0x25203233662e6464,0x6625202c32313266,0x366625202c313132\n"
".quad 0x662e6464610a3b36,0x3331326625203233,0x202c30316625202c,0x64610a3b30316625\n"
".quad 0x6625203233662e64,0x326625202c343132,0x31326625202c3231,0x662e6464610a3b33\n"
".quad 0x3531326625203233,0x2c3431326625202c,0x660a3b3438662520,0x33662e6e722e616d\n"
".quad 0x2c36313266252032,0x30202c3131662520,0x3030303030304366,0x3531326625202c30\n"
".quad 0x33662e6464610a3b,0x2c37313266252032,0x202c363132662520,0x6d660a3b30396625\n"
".quad 0x3233662e6e722e61,0x202c383132662520,0x6630202c32316625,0x3030303030303043\n"
".quad 0x3b3731326625202c,0x3233662e6464610a,0x202c393132662520,0x6625202c33316625\n"
".quad 0x2e6464610a3b3331,0x3232662520323366,0x3831326625202c30,0x3b3931326625202c\n"
".quad 0x3233662e6464610a,0x202c313232662520,0x25202c3032326625,0x616d660a3b323766\n"
".quad 0x203233662e6e722e,0x25202c3232326625,0x436630202c343166,0x2c30303030303030\n"
".quad 0x0a3b313232662520,0x203233662e646461,0x25202c3332326625,0x6625202c32323266\n"
".quad 0x2e616d660a3b3837,0x25203233662e6e72,0x6625202c34323266,0x436630202c363938\n"
".quad 0x2c30303030303030,0x0a3b333232662520,0x203233662e646461,0x25202c3532326625\n"
".quad 0x3b396625202c3866,0x3233662e6464610a,0x202c363232662520,0x25202c3532326625\n"
".quad 0x6464610a3b383466,0x326625203233662e,0x32326625202c3732,0x3b34356625202c36\n"
".quad 0x3233662e6464610a,0x202c383232662520,0x25202c3732326625,0x6464610a3b303666\n"
".quad 0x326625203233662e,0x32326625202c3932,0x3b36366625202c38,0x3233662e6275730a\n"
".quad 0x202c303332662520,0x25202c3932326625,0x6275730a3b303166,0x326625203233662e\n"
".quad 0x33326625202c3133,0x3b34386625202c30,0x3233662e6275730a,0x202c323332662520\n"
".quad 0x25202c3133326625,0x6275730a3b303966,0x326625203233662e,0x33326625202c3333\n"
".quad 0x3b33316625202c32,0x3233662e6275730a,0x202c343332662520,0x25202c3333326625\n"
".quad 0x6275730a3b323766,0x326625203233662e,0x33326625202c3533,0x3b38376625202c34\n"
".quad 0x203220636f6c2e0a,0x6e0a312033313732,0x25203233662e6765,0x6625202c36333266\n"
".quad 0x616d660a3b323331,0x203233662e6e722e,0x25202c3733326625,0x6625202c36333266\n"
".quad 0x316625202c323331,0x2e6275730a3b3534,0x3332662520323366,0x3533326625202c38\n"
".quad 0x3b3733326625202c,0x3233662e67656e0a,0x202c393332662520,0x660a3b3730326625\n"
".quad 0x33662e6e722e616d,0x2c30343266252032,0x6625202c38662520,0x326625202c303931\n"
".quad 0x2e6464610a3b3933,0x3432662520323366,0x3034326625202c31,0x0a3b38346625202c\n"
".quad 0x203233662e646461,0x25202c3234326625,0x6625202c31343266,0x2e6464610a3b3435\n"
".quad 0x3432662520323366,0x3234326625202c33,0x0a3b30366625202c,0x203233662e646461\n"
".quad 0x25202c3434326625,0x6625202c33343266,0x2e6464610a3b3636,0x3432662520323366\n"
".quad 0x3434326625202c35,0x3b3331326625202c,0x3233662e6275730a,0x202c363432662520\n"
".quad 0x25202c3534326625,0x6275730a3b343866,0x326625203233662e,0x34326625202c3734\n"
".quad 0x3b30396625202c36,0x203220636f6c2e0a,0x610a312033313732,0x25203233662e6464\n"
".quad 0x6625202c38343266,0x326625202c373432,0x2e6275730a3b3931,0x3432662520323366\n"
".quad 0x3834326625202c39,0x0a3b32376625202c,0x203233662e627573,0x25202c3035326625\n"
".quad 0x6625202c39343266,0x2e6275730a3b3837,0x3532662520323366,0x2c38346625202c31\n"
".quad 0x2e0a3b3435662520,0x3732203220636f6c,0x6464610a31203331,0x326625203233662e\n"
".quad 0x35326625202c3235,0x3b30366625202c31,0x3233662e6275730a,0x202c333532662520\n"
".quad 0x25202c3235326625,0x6f6c2e0a3b363666,0x3331373220322063,0x662e67656e0a3120\n"
".quad 0x3435326625203233,0x3b3431316625202c,0x2e6e722e616d660a,0x3532662520323366\n"
".quad 0x3435326625202c35,0x2c3332316625202c,0x0a3b333532662520,0x203233662e627573\n"
".quad 0x25202c3635326625,0x316625202c313166,0x662e6275730a3b32,0x3735326625203233\n"
".quad 0x2c3635326625202c,0x2e0a3b3431662520,0x3732203220636f6c,0x6464610a31203331\n"
".quad 0x326625203233662e,0x35326625202c3835,0x3639386625202c37,0x33662e67656e0a3b\n"
".quad 0x2c39353266252032,0x0a3b333231662520,0x662e6e722e616d66,0x3036326625203233\n"
".quad 0x2c3935326625202c,0x202c323331662520,0x730a3b3835326625,0x25203233662e6275\n"
".quad 0x6625202c31363266,0x30396625202c3438,0x33662e6275730a3b,0x2c32363266252032\n"
".quad 0x202c313632662520,0x6c2e0a3b32376625,0x313732203220636f,0x2e6464610a312033\n"
".quad 0x3632662520323366,0x3236326625202c33,0x0a3b38376625202c,0x662e6e722e616d66\n"
".quad 0x3436326625203233,0x2c3435326625202c,0x202c323331662520,0x730a3b3336326625\n"
".quad 0x25203233662e6275,0x6625202c35363266,0x366625202c313532,0x20636f6c2e0a3b30\n"
".quad 0x3120333137322032,0x3233662e6464610a,0x202c363632662520,0x25202c3536326625\n"
".quad 0x6275730a3b363666,0x326625203233662e,0x36326625202c3736,0x3b34386625202c36\n"
".quad 0x3233662e6464610a,0x202c383632662520,0x25202c3736326625,0x6275730a3b303966\n"
".quad 0x326625203233662e,0x36326625202c3936,0x3b32376625202c38,0x203220636f6c2e0a\n"
".quad 0x610a312033313732,0x25203233662e6464,0x6625202c30373266,0x376625202c393632\n"
".quad 0x662e67656e0a3b38,0x3137326625203233,0x0a3b34356625202c,0x203233662e627573\n"
".quad 0x25202c3237326625,0x6625202c31373266,0x636f6c2e0a3b3834,0x2033313732203220\n"
".quad 0x33662e6464610a31,0x2c33373266252032,0x202c323732662520,0x64610a3b30366625\n"
".quad 0x6625203233662e64,0x326625202c343732,0x36366625202c3337,0x33662e6464610a3b\n"
".quad 0x2c35373266252032,0x202c343732662520,0x75730a3b31316625,0x6625203233662e62\n"
".quad 0x326625202c363732,0x32316625202c3537,0x3220636f6c2e0a3b,0x0a31203331373220\n"
".quad 0x203233662e646461,0x25202c3737326625,0x6625202c36373266,0x2e6275730a3b3431\n"
".quad 0x3732662520323366,0x3737326625202c38,0x3b3639386625202c,0x3233662e6275730a\n"
".quad 0x202c393732662520,0x6625202c34386625,0x636f6c2e0a3b3131,0x2033313732203220\n"
".quad 0x33662e6464610a31,0x2c30383266252032,0x202c393732662520,0x75730a3b30396625\n"
".quad 0x6625203233662e62,0x326625202c313832,0x32316625202c3038,0x33662e6275730a3b\n"
".quad 0x2c32383266252032,0x202c313832662520,0x6c2e0a3b32376625,0x313732203220636f\n"
".quad 0x2e6464610a312033,0x3832662520323366,0x3238326625202c33,0x0a3b34316625202c\n"
".quad 0x203233662e627573,0x25202c3438326625,0x6625202c33383266,0x636f6c2e0a3b3837\n"
".quad 0x2033313732203220,0x33662e6464610a31,0x2c35383266252032,0x202c343832662520\n"
".quad 0x6d0a3b3639386625,0x25203233662e766f,0x6630202c36383266,0x3030303030384533\n"
".quad 0x7261702e646c0a3b,0x25203233662e6d61,0x5f5b202c34393866,0x5f645f524c39315a\n"
".quad 0x5f43444241627968,0x6650707265746e49,0x61705f666d665f53,0x0a3b5d325f6d6172\n"
".quad 0x32203220636f6c2e,0x756d0a3120333137,0x6625203233662e6c,0x386625202c373832\n"
".quad 0x45336630202c3439,0x0a3b303030303038,0x203233662e766f6d,0x30202c3838326625\n"
".quad 0x3030303030453366,0x20636f6c2e0a3b30,0x3120333137322032,0x3233662e6c756d0a\n"
".quad 0x202c393832662520,0x30202c3035326625,0x4141414132443366,0x662e766f6d0a3b42\n"
".quad 0x3039326625203233,0x413244336630202c,0x6c2e0a3b42414141,0x313732203220636f\n"
".quad 0x2e6c756d0a312033,0x3932662520323366,0x3439386625202c31,0x414144336630202c\n"
".quad 0x756d0a3b42414141,0x6625203233662e6c,0x326625202c323932,0x43336630202c3432\n"
".quad 0x0a3b393345383336,0x203233662e6c756d,0x25202c3339326625,0x6630202c34393866\n"
".quad 0x3933453833454333,0x33662e6c756d0a3b,0x2c34393266252032,0x202c333032662520\n"
".quad 0x6d0a3b3339326625,0x25203233662e6c75,0x6625202c35393266,0x336630202c323731\n"
".quad 0x3b44434343434343,0x3233662e766f6d0a,0x202c363932662520,0x4343434343336630\n"
".quad 0x636f6c2e0a3b4443,0x2033313732203220,0x33662e6c756d0a31,0x2c37393266252032\n"
".quad 0x202c353731662520,0x4343434343336630,0x2e6c756d0a3b4443,0x3932662520323366\n"
".quad 0x3837316625202c38,0x434343336630202c,0x756d0a3b44434343,0x6625203233662e6c\n"
".quad 0x316625202c393932,0x42336630202c3936,0x0a3b313238303238,0x203233662e6c756d\n"
".quad 0x25202c3030336625,0x6630202c39393266,0x3030303030343134,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x34316625202c3130,0x3745426630202c39,0x25202c4433464333\n"
".quad 0x75730a3b30303366,0x6625203233662e62,0x376625202c323033,0x3b3130336625202c\n"
".quad 0x3233662e6c756d0a,0x202c333033662520,0x30202c3939326625,0x3030303038304366\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x316625202c343033,0x44426630202c3934\n"
".quad 0x202c443242433242,0x660a3b3330336625,0x33662e6e722e616d,0x2c35303366252032\n"
".quad 0x202c353932662520,0x3030303830436630,0x30336625202c3030,0x722e616d660a3b34\n"
".quad 0x6625203233662e6e,0x326625202c363033,0x39326625202c3330,0x3439326625202c33\n"
".quad 0x33662e6464610a3b,0x2c37303366252032,0x202c353033662520,0x660a3b3630336625\n"
".quad 0x33662e6e722e616d,0x2c38303366252032,0x202c323932662520,0x3030303830436630\n"
".quad 0x30336625202c3030,0x662e6275730a3b37,0x3930336625203233,0x202c36336625202c\n"
".quad 0x660a3b3830336625,0x33662e6e722e616d,0x2c30313366252032,0x202c373932662520\n"
".quad 0x3030303830436630,0x30336625202c3030,0x662e67656e0a3b34,0x3131336625203233\n"
".quad 0x3b3330326625202c,0x2e6e722e616d660a,0x3133662520323366,0x3131336625202c32\n"
".quad 0x2c3339326625202c,0x0a3b303133662520,0x32203220636f6c2e,0x6d660a3120333137\n"
".quad 0x3233662e6e722e61,0x202c333133662520,0x30202c3432326625,0x3345383336433366\n"
".quad 0x3239326625202c39,0x33662e6464610a3b,0x2c34313366252032,0x202c323133662520\n"
".quad 0x660a3b3331336625,0x33662e6e722e616d,0x2c35313366252032,0x202c383332662520\n"
".quad 0x25202c3139326625,0x6d660a3b34313366,0x3233662e6e722e61,0x202c363133662520\n"
".quad 0x30202c3938326625,0x3030303030304366,0x3531336625202c30,0x33662e6275730a3b\n"
".quad 0x2c37313366252032,0x6625202c38662520,0x616d660a3b363133,0x203233662e6e722e\n"
".quad 0x25202c3831336625,0x6630202c35393266,0x3030303030383034,0x3b3430336625202c\n"
".quad 0x3233662e6464610a,0x202c393133662520,0x25202c3831336625,0x6d660a3b36303366\n"
".quad 0x3233662e6e722e61,0x202c303233662520,0x30202c3239326625,0x3030303038304366\n"
".quad 0x3931336625202c30,0x33662e6275730a3b,0x2c31323366252032,0x25202c3234662520\n"
".quad 0x6d660a3b30323366,0x3233662e6e722e61,0x202c323233662520,0x30202c3739326625\n"
".quad 0x3030303038303466,0x3430336625202c30,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x31336625202c3332,0x3339326625202c31,0x3b3232336625202c,0x203220636f6c2e0a\n"
".quad 0x610a312033313732,0x25203233662e6464,0x6625202c34323366,0x336625202c333233\n"
".quad 0x2e616d660a3b3331,0x25203233662e6e72,0x6625202c35323366,0x326625202c383332\n"
".quad 0x32336625202c3139,0x722e616d660a3b34,0x6625203233662e6e,0x326625202c363233\n"
".quad 0x30436630202c3938,0x202c303030303030,0x730a3b3532336625,0x25203233662e6275\n"
".quad 0x6625202c37323366,0x3632336625202c39,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x34316625202c3832,0x3844336630202c39,0x25202c3032383032,0x6d660a3b39393266\n"
".quad 0x3233662e6e722e61,0x202c393233662520,0x30202c3237316625,0x4343434343433366\n"
".quad 0x3832336625202c44,0x6e722e616d660a3b,0x336625203233662e,0x37316625202c3033\n"
".quad 0x4343336630202c35,0x25202c4443434343,0x6d660a3b39323366,0x3233662e6e722e61\n"
".quad 0x202c313333662520,0x25202c3330326625,0x6625202c33393266,0x616d660a3b303333\n"
".quad 0x203233662e6e722e,0x25202c3233336625,0x6630202c34323266,0x3933453833364333\n"
".quad 0x3b3133336625202c,0x2e6e722e616d660a,0x3333662520323366,0x3833326625202c33\n"
".quad 0x2c3139326625202c,0x0a3b323333662520,0x662e6e722e616d66,0x3433336625203233\n"
".quad 0x2c3035326625202c,0x4141324433663020,0x336625202c424141,0x2e616d660a3b3333\n"
".quad 0x25203233662e6e72,0x6625202c35333366,0x336630202c353532,0x2c30303030303845\n"
".quad 0x0a3b343333662520,0x662e6e722e616d66,0x3633336625203233,0x2c3037326625202c\n"
".quad 0x3030304533663020,0x336625202c303030,0x2e67656e0a3b3533,0x3333662520323366\n"
".quad 0x3837326625202c37,0x6e722e616d660a3b,0x336625203233662e,0x33336625202c3833\n"
".quad 0x3838326625202c37,0x3b3633336625202c,0x203220636f6c2e0a,0x730a312033313732\n"
".quad 0x25203233662e6275,0x6625202c39333366,0x33336625202c3834,0x662e67656e0a3b38\n"
".quad 0x3034336625203233,0x3b3237316625202c,0x2e6e722e616d660a,0x3433662520323366\n"
".quad 0x3034336625202c31,0x2c3639326625202c,0x0a3b383233662520,0x32203220636f6c2e\n"
".quad 0x6d660a3120333137,0x3233662e6e722e61,0x202c323433662520,0x30202c3537316625\n"
".quad 0x4343434343433366,0x3134336625202c44,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x30326625202c3334,0x3339326625202c33,0x3b3234336625202c,0x2e6e722e616d660a\n"
".quad 0x3433662520323366,0x3432326625202c34,0x333643336630202c,0x6625202c39334538\n"
".quad 0x616d660a3b333433,0x203233662e6e722e,0x25202c3534336625,0x6625202c38333266\n"
".quad 0x336625202c313932,0x2e616d660a3b3434,0x25203233662e6e72,0x6625202c36343366\n"
".quad 0x336630202c303532,0x2c42414141413244,0x0a3b353433662520,0x203233662e67656e\n"
".quad 0x25202c3734336625,0x6d660a3b35353266,0x3233662e6e722e61,0x202c383433662520\n"
".quad 0x25202c3734336625,0x6625202c36383266,0x67656e0a3b363433,0x336625203233662e\n"
".quad 0x37326625202c3934,0x722e616d660a3b30,0x6625203233662e6e,0x336625202c303533\n"
".quad 0x38326625202c3934,0x3834336625202c38,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x33336625202c3135,0x3838326625202c37,0x3b3035336625202c,0x203220636f6c2e0a\n"
".quad 0x730a312033313732,0x25203233662e6275,0x6625202c32353366,0x35336625202c3435\n"
".quad 0x662e67656e0a3b31,0x3335336625203233,0x3b3537316625202c,0x2e6e722e616d660a\n"
".quad 0x3533662520323366,0x3335336625202c34,0x2c3639326625202c,0x0a3b313433662520\n"
".quad 0x32203220636f6c2e,0x6d660a3120333137,0x3233662e6e722e61,0x202c353533662520\n"
".quad 0x25202c3330326625,0x6625202c33393266,0x616d660a3b343533,0x203233662e6e722e\n"
".quad 0x25202c3635336625,0x6630202c34323266,0x3933453833364333,0x3b3535336625202c\n"
".quad 0x2e6e722e616d660a,0x3533662520323366,0x3833326625202c37,0x2c3139326625202c\n"
".quad 0x0a3b363533662520,0x662e6e722e616d66,0x3835336625203233,0x2c3035326625202c\n"
".quad 0x4141324433663020,0x336625202c424141,0x2e616d660a3b3735,0x25203233662e6e72\n"
".quad 0x6625202c39353366,0x336630202c353532,0x2c30303030303845,0x0a3b383533662520\n"
".quad 0x662e6e722e616d66,0x3036336625203233,0x2c3934336625202c,0x202c383832662520\n"
".quad 0x2e0a3b3935336625,0x3732203220636f6c,0x616d660a31203331,0x203233662e6e722e\n"
".quad 0x25202c3136336625,0x6630202c38373266,0x3030303030304533,0x3b3036336625202c\n"
".quad 0x3233662e6275730a,0x202c323633662520,0x6625202c30366625,0x616d660a3b313633\n"
".quad 0x203233662e6e722e,0x25202c3336336625,0x6625202c33353366,0x336625202c363932\n"
".quad 0x636f6c2e0a3b3932,0x2033313732203220,0x6e722e616d660a31,0x336625203233662e\n"
".quad 0x30326625202c3436,0x3339326625202c33,0x3b3336336625202c,0x2e6e722e616d660a\n"
".quad 0x3633662520323366,0x3432326625202c35,0x333643336630202c,0x6625202c39334538\n"
".quad 0x616d660a3b343633,0x203233662e6e722e,0x25202c3636336625,0x6625202c38333266\n"
".quad 0x336625202c313932,0x2e616d660a3b3536,0x25203233662e6e72,0x6625202c37363366\n"
".quad 0x336630202c303532,0x2c42414141413244,0x0a3b363633662520,0x662e6e722e616d66\n"
".quad 0x3836336625203233,0x2c3734336625202c,0x202c363832662520,0x2e0a3b3736336625\n"
".quad 0x3732203220636f6c,0x616d660a31203331,0x203233662e6e722e,0x25202c3936336625\n"
".quad 0x6630202c30373266,0x3030303030304533,0x3b3836336625202c,0x2e6e722e616d660a\n"
".quad 0x3733662520323366,0x3837326625202c30,0x303045336630202c,0x6625202c30303030\n"
".quad 0x6275730a3b393633,0x336625203233662e,0x36366625202c3137,0x3b3037336625202c\n"
".quad 0x2e6e722e616d660a,0x3733662520323366,0x3839326625202c32,0x303830436630202c\n"
".quad 0x6625202c30303030,0x616d660a3b343033,0x203233662e6e722e,0x25202c3337336625\n"
".quad 0x6625202c31313366,0x336625202c333932,0x636f6c2e0a3b3237,0x2033313732203220\n"
".quad 0x33662e6464610a31,0x2c34373366252032,0x202c333733662520,0x6e0a3b3331336625\n"
".quad 0x25203233662e6765,0x6625202c35373366,0x616d660a3b383332,0x203233662e6e722e\n"
".quad 0x25202c3637336625,0x6625202c35373366,0x336625202c313932,0x636f6c2e0a3b3437\n"
".quad 0x2033313732203220,0x6e722e616d660a31,0x336625203233662e,0x35326625202c3737\n"
".quad 0x3244336630202c30,0x25202c4241414141,0x64610a3b39383266,0x6625203233662e64\n"
".quad 0x336625202c383733,0x37336625202c3637,0x662e6275730a3b37,0x3937336625203233\n"
".quad 0x202c30316625202c,0x660a3b3837336625,0x33662e6e722e616d,0x2c30383366252032\n"
".quad 0x202c383731662520,0x4343434343336630,0x32336625202c4443,0x722e616d660a3b39\n"
".quad 0x6625203233662e6e,0x326625202c313833,0x39326625202c3330,0x3038336625202c33\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x32326625202c3238,0x3643336630202c34\n"
".quad 0x25202c3933453833,0x6d660a3b31383366,0x3233662e6e722e61,0x202c333833662520\n"
".quad 0x25202c3537336625,0x6625202c31393266,0x67656e0a3b323833,0x336625203233662e\n"
".quad 0x35326625202c3438,0x722e616d660a3b30,0x6625203233662e6e,0x336625202c353833\n"
".quad 0x39326625202c3438,0x3338336625202c30,0x3220636f6c2e0a3b,0x0a31203331373220\n"
".quad 0x662e6e722e616d66,0x3638336625203233,0x2c3436326625202c,0x202c373832662520\n"
".quad 0x660a3b3538336625,0x33662e6e722e616d,0x2c37383366252032,0x202c393433662520\n"
".quad 0x25202c3838326625,0x6c2e0a3b36383366,0x313732203220636f,0x2e616d660a312033\n"
".quad 0x25203233662e6e72,0x6625202c38383366,0x336630202c353832,0x2c30303030303045\n"
".quad 0x0a3b373833662520,0x203233662e627573,0x25202c3938336625,0x336625202c343866\n"
".quad 0x2e616d660a3b3838,0x25203233662e6e72,0x6625202c30393366,0x336630202c353731\n"
".quad 0x2c44434343434343,0x0a3b383233662520,0x662e6e722e616d66,0x3139336625203233\n"
".quad 0x2c3837316625202c,0x4343434333663020,0x336625202c444343,0x2e616d660a3b3039\n"
".quad 0x25203233662e6e72,0x6625202c32393366,0x436630202c343932,0x2c30303030303030\n"
".quad 0x0a3b313933662520,0x662e6e722e616d66,0x3339336625203233,0x2c3239326625202c\n"
".quad 0x3030303043663020,0x336625202c303030,0x2e616d660a3b3239,0x25203233662e6e72\n"
".quad 0x6625202c34393366,0x336630202c303632,0x2c30303030303845,0x0a3b333933662520\n"
".quad 0x662e6e722e616d66,0x3539336625203233,0x2c3837326625202c,0x3030304533663020\n"
".quad 0x336625202c303030,0x2e67656e0a3b3439,0x3933662520323366,0x3538326625202c36\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x39336625202c3739,0x3838326625202c36\n"
".quad 0x3b3539336625202c,0x203220636f6c2e0a,0x730a312033313732,0x25203233662e6275\n"
".quad 0x6625202c38393366,0x39336625202c3131,0x722e616d660a3b37,0x6625203233662e6e\n"
".quad 0x316625202c393933,0x43336630202c3837,0x202c444343434343,0x660a3b3134336625\n"
".quad 0x33662e6e722e616d,0x2c30303466252032,0x202c333032662520,0x25202c3339326625\n"
".quad 0x6d660a3b39393366,0x3233662e6e722e61,0x202c313034662520,0x30202c3432326625\n"
".quad 0x3345383336433366,0x3030346625202c39,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x37336625202c3230,0x3139326625202c35,0x3b3130346625202c,0x2e6e722e616d660a\n"
".quad 0x3034662520323366,0x3438336625202c33,0x2c3039326625202c,0x0a3b323034662520\n"
".quad 0x203233662e67656e,0x25202c3430346625,0x6d660a3b34363266,0x3233662e6e722e61\n"
".quad 0x202c353034662520,0x25202c3430346625,0x6625202c37383266,0x6f6c2e0a3b333034\n"
".quad 0x3331373220322063,0x722e616d660a3120,0x6625203233662e6e,0x326625202c363034\n"
".quad 0x45336630202c3037,0x202c303030303030,0x660a3b3530346625,0x33662e6e722e616d\n"
".quad 0x2c37303466252032,0x202c353832662520,0x3030303045336630,0x30346625202c3030\n"
".quad 0x662e6275730a3b36,0x3830346625203233,0x202c30396625202c,0x660a3b3730346625\n"
".quad 0x33662e6e722e616d,0x2c39303466252032,0x202c333533662520,0x25202c3639326625\n"
".quad 0x6c2e0a3b38323366,0x313732203220636f,0x2e616d660a312033,0x25203233662e6e72\n"
".quad 0x6625202c30313466,0x336630202c383731,0x2c44434343434343,0x0a3b393034662520\n"
".quad 0x662e6e722e616d66,0x3131346625203233,0x2c3439326625202c,0x3030303043663020\n"
".quad 0x346625202c303030,0x2e616d660a3b3031,0x25203233662e6e72,0x6625202c32313466\n"
".quad 0x436630202c323932,0x2c30303030303030,0x0a3b313134662520,0x203233662e67656e\n"
".quad 0x25202c3331346625,0x6d660a3b30363266,0x3233662e6e722e61,0x202c343134662520\n"
".quad 0x25202c3331346625,0x6625202c36383266,0x616d660a3b323134,0x203233662e6e722e\n"
".quad 0x25202c3531346625,0x6625202c37333366,0x346625202c383832,0x2e616d660a3b3431\n"
".quad 0x25203233662e6e72,0x6625202c36313466,0x326625202c363933,0x31346625202c3838\n"
".quad 0x20636f6c2e0a3b35,0x3120333137322032,0x3233662e6275730a,0x202c373134662520\n"
".quad 0x6625202c32316625,0x616d660a3b363134,0x203233662e6e722e,0x25202c3831346625\n"
".quad 0x6630202c38393266,0x3030303030383034,0x3b3430336625202c,0x2e6e722e616d660a\n"
".quad 0x3134662520323366,0x3131336625202c39,0x2c3339326625202c,0x0a3b383134662520\n"
".quad 0x32203220636f6c2e,0x64610a3120333137,0x6625203233662e64,0x346625202c303234\n"
".quad 0x31336625202c3931,0x722e616d660a3b33,0x6625203233662e6e,0x336625202c313234\n"
".quad 0x39326625202c3537,0x3032346625202c31,0x3220636f6c2e0a3b,0x0a31203331373220\n"
".quad 0x203233662e646461,0x25202c3232346625,0x6625202c31323466,0x6275730a3b373733\n"
".quad 0x346625203233662e,0x33316625202c3332,0x3b3232346625202c,0x3233662e67656e0a\n"
".quad 0x202c343234662520,0x660a3b3837316625,0x33662e6e722e616d,0x2c35323466252032\n"
".quad 0x202c343234662520,0x25202c3639326625,0x6c2e0a3b39323366,0x313732203220636f\n"
".quad 0x2e616d660a312033,0x25203233662e6e72,0x6625202c36323466,0x326625202c333032\n"
".quad 0x32346625202c3339,0x722e616d660a3b35,0x6625203233662e6e,0x326625202c373234\n"
".quad 0x43336630202c3432,0x202c393345383336,0x660a3b3632346625,0x33662e6e722e616d\n"
".quad 0x2c38323466252032,0x202c353733662520,0x25202c3139326625,0x6d660a3b37323466\n"
".quad 0x3233662e6e722e61,0x202c393234662520,0x25202c3438336625,0x6625202c30393266\n"
".quad 0x616d660a3b383234,0x203233662e6e722e,0x25202c3033346625,0x6625202c34303466\n"
".quad 0x346625202c373832,0x2e616d660a3b3932,0x25203233662e6e72,0x6625202c31333466\n"
".quad 0x326625202c393433,0x33346625202c3838,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x336625202c323334,0x38326625202c3639,0x3133346625202c38,0x3220636f6c2e0a3b\n"
".quad 0x0a31203331373220,0x203233662e627573,0x25202c3333346625,0x346625202c323766\n"
".quad 0x2e616d660a3b3233,0x25203233662e6e72,0x6625202c34333466,0x326625202c343234\n"
".quad 0x39336625202c3639,0x20636f6c2e0a3b30,0x3120333137322032,0x2e6e722e616d660a\n"
".quad 0x3334662520323366,0x3439326625202c35,0x303030436630202c,0x6625202c30303030\n"
".quad 0x616d660a3b343334,0x203233662e6e722e,0x25202c3633346625,0x6630202c32393266\n"
".quad 0x3030303030303043,0x3b3533346625202c,0x2e6e722e616d660a,0x3334662520323366\n"
".quad 0x3331346625202c37,0x2c3638326625202c,0x0a3b363334662520,0x32203220636f6c2e\n"
".quad 0x6d660a3120333137,0x3233662e6e722e61,0x202c383334662520,0x30202c3837326625\n"
".quad 0x3030303030453366,0x3733346625202c30,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x38326625202c3933,0x3045336630202c35,0x25202c3030303030,0x75730a3b38333466\n"
".quad 0x6625203233662e62,0x316625202c303434,0x3933346625202c34,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x32346625202c3134,0x3639326625202c34,0x3b3134336625202c\n"
".quad 0x203220636f6c2e0a,0x660a312033313732,0x33662e6e722e616d,0x2c32343466252032\n"
".quad 0x202c333032662520,0x25202c3339326625,0x6d660a3b31343466,0x3233662e6e722e61\n"
".quad 0x202c333434662520,0x30202c3432326625,0x3345383336433366,0x3234346625202c39\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x37336625202c3434,0x3139326625202c35\n"
".quad 0x3b3334346625202c,0x2e6e722e616d660a,0x3434662520323366,0x3438336625202c35\n"
".quad 0x2c3039326625202c,0x0a3b343434662520,0x32203220636f6c2e,0x6d660a3120333137\n"
".quad 0x3233662e6e722e61,0x202c363434662520,0x25202c3436326625,0x6625202c37383266\n"
".quad 0x616d660a3b353434,0x203233662e6e722e,0x25202c3734346625,0x6630202c30373266\n"
".quad 0x3030303030304533,0x3b3634346625202c,0x2e6e722e616d660a,0x3434662520323366\n"
".quad 0x3639336625202c38,0x2c3838326625202c,0x0a3b373434662520,0x32203220636f6c2e\n"
".quad 0x75730a3120333137,0x6625203233662e62,0x376625202c393434,0x3834346625202c38\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x32346625202c3035,0x3639326625202c34\n"
".quad 0x3b3930346625202c,0x203220636f6c2e0a,0x660a312033313732,0x33662e6e722e616d\n"
".quad 0x2c31353466252032,0x202c343932662520,0x3030303030436630,0x35346625202c3030\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x326625202c323534,0x30436630202c3239\n"
".quad 0x202c303030303030,0x660a3b3135346625,0x33662e6e722e616d,0x2c33353466252032\n"
".quad 0x202c303632662520,0x3030303845336630,0x35346625202c3030,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x336625202c343534,0x38326625202c3733,0x3335346625202c38\n"
".quad 0x3220636f6c2e0a3b,0x0a31203331373220,0x662e6e722e616d66,0x3535346625203233\n"
".quad 0x2c3538326625202c,0x3030304533663020,0x346625202c303030,0x2e6275730a3b3435\n"
".quad 0x3534662520323366,0x3639386625202c36,0x3b3535346625202c,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3433346c,0x5f645f524c39315a,0x5f43444241627968\n"
".quad 0x6650707265746e49,0x61705f666d665f53,0x0a3b5d335f6d6172,0x32203220636f6c2e\n"
".quad 0x616d0a3120333434,0x3436732e6f6c2e64,0x2c3931316c722520,0x202c35316c722520\n"
".quad 0x202c3433346c7225,0x646c0a3b356c7225,0x752e6d617261702e,0x33346c7225203436\n"
".quad 0x39315a5f5b202c31,0x6279685f645f524c,0x746e495f43444241,0x665f536650707265\n"
".quad 0x6d617261705f666d,0x7476630a3b5d315f,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x202c3032316c7225,0x0a3b3133346c7225,0x203436622e6c6873,0x202c3132316c7225\n"
".quad 0x202c3931316c7225,0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3232\n"
".quad 0x0a3b3233202c3132,0x32203220636f6c2e,0x68730a3120353336,0x7225203436622e6c\n"
".quad 0x7225202c3332316c,0x3b32202c3232316c,0x3436732e6464610a,0x2c3432316c722520\n"
".quad 0x2c3032316c722520,0x3b3332316c722520,0x203220636f6c2e0a,0x730a312037313732\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3432316c,0x64610a3b32303366\n"
".quad 0x7225203436732e64,0x7225202c3532316c,0x393034202c35316c,0x20636f6c2e0a3b36\n"
".quad 0x3120363336322032,0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3632\n"
".quad 0x346c7225202c3532,0x356c7225202c3433,0x36622e6c68730a3b,0x3732316c72252034\n"
".quad 0x3632316c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3832316c\n"
".quad 0x3233202c3732316c,0x3220636f6c2e0a3b,0x0a31203633363220,0x203436622e6c6873\n"
".quad 0x202c3932316c7225,0x202c3832316c7225,0x732e6464610a3b32,0x33316c7225203436\n"
".quad 0x32316c7225202c30,0x32316c7225202c30,0x20636f6c2e0a3b39,0x3120383137322032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3033316c7225,0x0a3b393033662520\n"
".quad 0x203436732e646461,0x202c3133316c7225,0x38202c35316c7225,0x6f6c2e0a3b323931\n"
".quad 0x3733363220322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3233316c\n"
".quad 0x7225202c3133316c,0x7225202c3433346c,0x2e6c68730a3b356c,0x316c722520343662\n"
".quad 0x316c7225202c3333,0x0a3b3233202c3233,0x203436732e726873,0x202c3433316c7225\n"
".quad 0x202c3333316c7225,0x636f6c2e0a3b3233,0x2037333632203220,0x36622e6c68730a31\n"
".quad 0x3533316c72252034,0x3433316c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c363331,0x6c7225202c303231,0x6f6c2e0a3b353331,0x3931373220322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3633316c72255b20,0x3731336625202c5d\n"
".quad 0x36732e6464610a3b,0x3733316c72252034,0x2c35316c7225202c,0x0a3b383832323120\n"
".quad 0x32203220636f6c2e,0x616d0a3120383336,0x3436732e6f6c2e64,0x2c3833316c722520\n"
".quad 0x2c3733316c722520,0x2c3433346c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3933316c72,0x33202c3833316c72,0x732e7268730a3b32,0x34316c7225203436\n"
".quad 0x33316c7225202c30,0x2e0a3b3233202c39,0x3632203220636f6c,0x6c68730a31203833\n"
".quad 0x6c7225203436622e,0x6c7225202c313431,0x0a3b32202c303431,0x203436732e646461\n"
".quad 0x202c3234316c7225,0x202c3032316c7225,0x0a3b3134316c7225,0x32203220636f6c2e\n"
".quad 0x74730a3120303237,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d323431\n"
".quad 0x6464610a3b313233,0x6c7225203436732e,0x6c7225202c333431,0x38333631202c3531\n"
".quad 0x20636f6c2e0a3b34,0x3120393336322032,0x2e6f6c2e64616d0a,0x316c722520343673\n"
".quad 0x316c7225202c3434,0x346c7225202c3334,0x356c7225202c3433,0x36622e6c68730a3b\n"
".quad 0x3534316c72252034,0x3434316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3634316c,0x3233202c3534316c,0x3220636f6c2e0a3b,0x0a31203933363220\n"
".quad 0x203436622e6c6873,0x202c3734316c7225,0x202c3634316c7225,0x732e6464610a3b32\n"
".quad 0x34316c7225203436,0x32316c7225202c38,0x34316c7225202c30,0x20636f6c2e0a3b37\n"
".quad 0x3120313237322032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3834316c7225\n"
".quad 0x0a3b373233662520,0x203436732e646461,0x202c3934316c7225,0x32202c35316c7225\n"
".quad 0x6c2e0a3b30383430,0x343632203220636f,0x2e64616d0a312030,0x25203436732e6f6c\n"
".quad 0x25202c3035316c72,0x25202c3934316c72,0x25202c3433346c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c313531,0x3b3233202c303531,0x3436732e7268730a\n"
".quad 0x2c3235316c722520,0x2c3135316c722520,0x6f6c2e0a3b323320,0x3034363220322063\n"
".quad 0x622e6c68730a3120,0x35316c7225203436,0x35316c7225202c33,0x64610a3b32202c32\n"
".quad 0x7225203436732e64,0x7225202c3435316c,0x7225202c3032316c,0x6c2e0a3b3335316c\n"
".quad 0x323732203220636f,0x672e74730a312032,0x33662e6c61626f6c,0x35316c72255b2032\n"
".quad 0x33336625202c5d34,0x732e6464610a3b39,0x35316c7225203436,0x35316c7225202c35\n"
".quad 0x3b3637353432202c,0x203220636f6c2e0a,0x6d0a312031343632,0x36732e6f6c2e6461\n"
".quad 0x3635316c72252034,0x3535316c7225202c,0x3433346c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3735316c7225,0x202c3635316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3835,0x0a3b3233202c3735,0x32203220636f6c2e\n"
".quad 0x68730a3120313436,0x7225203436622e6c,0x7225202c3935316c,0x3b32202c3835316c\n"
".quad 0x3436732e6464610a,0x2c3036316c722520,0x2c3032316c722520,0x3b3935316c722520\n"
".quad 0x203220636f6c2e0a,0x730a312033323732,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3036316c,0x64610a3b32353366,0x7225203436732e64,0x7225202c3136316c\n"
".quad 0x363832202c35316c,0x636f6c2e0a3b3237,0x2032343632203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c323631,0x6c7225202c313631,0x6c7225202c343334\n"
".quad 0x622e6c68730a3b35,0x36316c7225203436,0x36316c7225202c33,0x730a3b3233202c32\n"
".quad 0x25203436732e7268,0x25202c3436316c72,0x33202c3336316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120323436322032,0x3436622e6c68730a,0x2c3536316c722520,0x2c3436316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x316c7225202c3636,0x316c7225202c3032\n"
".quad 0x636f6c2e0a3b3536,0x2034323732203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x5d3636316c72255b,0x3b3236336625202c,0x3436732e6464610a,0x2c3736316c722520\n"
".quad 0x202c35316c722520,0x2e0a3b3836373233,0x3632203220636f6c,0x64616d0a31203334\n"
".quad 0x203436732e6f6c2e,0x202c3836316c7225,0x202c3736316c7225,0x202c3433346c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3936316c,0x3233202c3836316c\n"
".quad 0x36732e7268730a3b,0x3037316c72252034,0x3936316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x343632203220636f,0x2e6c68730a312033,0x316c722520343662,0x316c7225202c3137\n"
".quad 0x610a3b32202c3037,0x25203436732e6464,0x25202c3237316c72,0x25202c3032316c72\n"
".quad 0x2e0a3b3137316c72,0x3732203220636f6c,0x2e74730a31203532,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x336625202c5d3237,0x2e6464610a3b3137,0x316c722520343673\n"
".quad 0x316c7225202c3337,0x3436383633202c35,0x3220636f6c2e0a3b,0x0a31203434363220\n"
".quad 0x732e6f6c2e64616d,0x37316c7225203436,0x37316c7225202c34,0x33346c7225202c33\n"
".quad 0x3b356c7225202c34,0x3436622e6c68730a,0x2c3537316c722520,0x2c3437316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c363731,0x3b3233202c353731\n"
".quad 0x203220636f6c2e0a,0x730a312034343632,0x25203436622e6c68,0x25202c3737316c72\n"
".quad 0x32202c3637316c72,0x36732e6464610a3b,0x3837316c72252034,0x3032316c7225202c\n"
".quad 0x3737316c7225202c,0x3220636f6c2e0a3b,0x0a31203632373220,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3837316c72,0x610a3b3937336625,0x25203436732e6464\n"
".quad 0x25202c3937316c72,0x3034202c35316c72,0x6f6c2e0a3b303639,0x3534363220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3038316c,0x7225202c3937316c\n"
".quad 0x7225202c3433346c,0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3138\n"
".quad 0x0a3b3233202c3038,0x203436732e726873,0x202c3238316c7225,0x202c3138316c7225\n"
".quad 0x636f6c2e0a3b3233,0x2035343632203220,0x36622e6c68730a31,0x3338316c72252034\n"
".quad 0x3238316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c343831\n"
".quad 0x6c7225202c303231,0x6f6c2e0a3b333831,0x3732373220322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x3438316c72255b20,0x3938336625202c5d,0x36732e6464610a3b\n"
".quad 0x3538316c72252034,0x2c35316c7225202c,0x0a3b363530353420,0x32203220636f6c2e\n"
".quad 0x616d0a3120363436,0x3436732e6f6c2e64,0x2c3638316c722520,0x2c3538316c722520\n"
".quad 0x2c3433346c722520,0x730a3b356c722520,0x25203436622e6c68,0x25202c3738316c72\n"
".quad 0x33202c3638316c72,0x732e7268730a3b32,0x38316c7225203436,0x38316c7225202c38\n"
".quad 0x2e0a3b3233202c37,0x3632203220636f6c,0x6c68730a31203634,0x6c7225203436622e\n"
".quad 0x6c7225202c393831,0x0a3b32202c383831,0x203436732e646461,0x202c3039316c7225\n"
".quad 0x202c3032316c7225,0x0a3b3938316c7225,0x32203220636f6c2e,0x74730a3120383237\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d303931,0x6464610a3b383933\n"
".quad 0x6c7225203436732e,0x6c7225202c313931,0x35313934202c3531,0x20636f6c2e0a3b32\n"
".quad 0x3120373436322032,0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3239\n"
".quad 0x346c7225202c3139,0x356c7225202c3433,0x36622e6c68730a3b,0x3339316c72252034\n"
".quad 0x3239316c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3439316c\n"
".quad 0x3233202c3339316c,0x3220636f6c2e0a3b,0x0a31203734363220,0x203436622e6c6873\n"
".quad 0x202c3539316c7225,0x202c3439316c7225,0x732e6464610a3b32,0x39316c7225203436\n"
".quad 0x32316c7225202c36,0x39316c7225202c30,0x20636f6c2e0a3b35,0x3120393237322032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3639316c7225,0x0a3b383034662520\n"
".quad 0x32203220636f6c2e,0x616d0a3120383436,0x3436732e6f6c2e64,0x2c3839316c722520\n"
".quad 0x202c36316c722520,0x202c3433346c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3939316c,0x3233202c3839316c,0x36732e7268730a3b,0x3030326c72252034\n"
".quad 0x3939316c7225202c,0x6c2e0a3b3233202c,0x343632203220636f,0x2e6c68730a312038\n"
".quad 0x326c722520343662,0x326c7225202c3130,0x610a3b32202c3030,0x25203436732e6464\n"
".quad 0x25202c3230326c72,0x25202c3032316c72,0x2e0a3b3130326c72,0x3732203220636f6c\n"
".quad 0x2e74730a31203033,0x662e6c61626f6c67,0x326c72255b203233,0x346625202c5d3230\n"
".quad 0x636f6c2e0a3b3731,0x2039343632203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c343032,0x346c7225202c3232,0x356c7225202c3433,0x36622e6c68730a3b\n"
".quad 0x3530326c72252034,0x3430326c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3630326c,0x3233202c3530326c,0x3220636f6c2e0a3b,0x0a31203934363220\n"
".quad 0x203436622e6c6873,0x202c3730326c7225,0x202c3630326c7225,0x732e6464610a3b32\n"
".quad 0x30326c7225203436,0x32316c7225202c38,0x30326c7225202c30,0x20636f6c2e0a3b37\n"
".quad 0x3120313337322032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3830326c7225\n"
".quad 0x0a3b333234662520,0x32203220636f6c2e,0x616d0a3120303536,0x3436732e6f6c2e64\n"
".quad 0x2c3031326c722520,0x202c37326c722520,0x202c3433346c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3131326c,0x3233202c3031326c,0x36732e7268730a3b\n"
".quad 0x3231326c72252034,0x3131326c7225202c,0x6c2e0a3b3233202c,0x353632203220636f\n"
".quad 0x2e6c68730a312030,0x326c722520343662,0x326c7225202c3331,0x610a3b32202c3231\n"
".quad 0x25203436732e6464,0x25202c3431326c72,0x25202c3032316c72,0x2e0a3b3331326c72\n"
".quad 0x3732203220636f6c,0x2e74730a31203233,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x346625202c5d3431,0x636f6c2e0a3b3333,0x2031353632203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c363132,0x346c7225202c3233,0x356c7225202c3433\n"
".quad 0x36622e6c68730a3b,0x3731326c72252034,0x3631326c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3831326c,0x3233202c3731326c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203135363220,0x203436622e6c6873,0x202c3931326c7225,0x202c3831326c7225\n"
".quad 0x732e6464610a3b32,0x32326c7225203436,0x32316c7225202c30,0x31326c7225202c30\n"
".quad 0x20636f6c2e0a3b39,0x3120333337322032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3032326c7225,0x0a3b303434662520,0x32203220636f6c2e,0x616d0a3120323536\n"
".quad 0x3436732e6f6c2e64,0x2c3232326c722520,0x202c37336c722520,0x202c3433346c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3332326c,0x3233202c3232326c\n"
".quad 0x36732e7268730a3b,0x3432326c72252034,0x3332326c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x353632203220636f,0x2e6c68730a312032,0x326c722520343662,0x326c7225202c3532\n"
".quad 0x610a3b32202c3432,0x25203436732e6464,0x25202c3632326c72,0x25202c3032316c72\n"
".quad 0x2e0a3b3532326c72,0x3732203220636f6c,0x2e74730a31203433,0x662e6c61626f6c67\n"
".quad 0x326c72255b203233,0x346625202c5d3632,0x636f6c2e0a3b3934,0x2033353632203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c383232,0x346c7225202c3234\n"
".quad 0x356c7225202c3433,0x36622e6c68730a3b,0x3932326c72252034,0x3832326c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3033326c,0x3233202c3932326c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203335363220,0x203436622e6c6873,0x202c3133326c7225\n"
".quad 0x202c3033326c7225,0x732e6464610a3b32,0x33326c7225203436,0x32316c7225202c32\n"
".quad 0x33326c7225202c30,0x20636f6c2e0a3b31,0x3120353337322032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3233326c7225,0x0a3b363534662520,0x32203220636f6c2e\n"
".quad 0x65720a3220383337,0x333242420a0a3b74,0x2e6464610a3a355f,0x326c722520343673\n"
".quad 0x366c7225202c3533,0x0a3b376c7225202c,0x203436732e646461,0x202c3633326c7225\n"
".quad 0x202c3533326c7225,0x646c0a3b36393034,0x752e6d617261702e,0x33346c7225203436\n"
".quad 0x39315a5f5b202c33,0x6279685f645f524c,0x746e495f43444241,0x665f536650707265\n"
".quad 0x6d617261705f666d,0x6f6c2e0a3b5d335f,0x3633363220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3833326c,0x7225202c3633326c,0x7225202c3333346c\n"
".quad 0x702e646c0a3b356c,0x3436752e6d617261,0x2c3033346c722520,0x524c39315a5f5b20\n"
".quad 0x42416279685f645f,0x7265746e495f4344,0x666d665f53665070,0x315f6d617261705f\n"
".quad 0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c,0x7225202c3933326c\n"
".quad 0x68730a3b3033346c,0x7225203436622e6c,0x7225202c3034326c,0x3233202c3833326c\n"
".quad 0x36732e7268730a3b,0x3134326c72252034,0x3034326c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x333632203220636f,0x2e6c68730a312036,0x326c722520343662,0x326c7225202c3234\n"
".quad 0x610a3b32202c3134,0x25203436732e6464,0x25202c3334326c72,0x25202c3933326c72\n"
".quad 0x2e0a3b3234326c72,0x3632203220636f6c,0x2e74730a31203038,0x662e6c61626f6c67\n"
".quad 0x326c72255b203233,0x346625202c5d3334,0x732e6464610a3b32,0x34326c7225203436\n"
".quad 0x33326c7225202c34,0x3b32393138202c35,0x203220636f6c2e0a,0x6d0a312037333632\n"
".quad 0x36732e6f6c2e6461,0x3534326c72252034,0x3434326c7225202c,0x3333346c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3634326c7225,0x202c3534326c7225\n"
".quad 0x2e7268730a3b3233,0x326c722520343673,0x326c7225202c3734,0x0a3b3233202c3634\n"
".quad 0x32203220636f6c2e,0x68730a3120373336,0x7225203436622e6c,0x7225202c3834326c\n"
".quad 0x3b32202c3734326c,0x3436732e6464610a,0x2c3934326c722520,0x2c3933326c722520\n"
".quad 0x3b3834326c722520,0x203220636f6c2e0a,0x730a312031383632,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3934326c,0x2e6464610a3b3966,0x326c722520343673\n"
".quad 0x326c7225202c3035,0x38323231202c3533,0x20636f6c2e0a3b38,0x3120383336322032\n"
".quad 0x2e6f6c2e64616d0a,0x326c722520343673,0x326c7225202c3135,0x346c7225202c3035\n"
".quad 0x356c7225202c3333,0x36622e6c68730a3b,0x3235326c72252034,0x3135326c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3335326c,0x3233202c3235326c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203833363220,0x203436622e6c6873,0x202c3435326c7225\n"
".quad 0x202c3335326c7225,0x732e6464610a3b32,0x35326c7225203436,0x33326c7225202c35\n"
".quad 0x35326c7225202c39,0x20636f6c2e0a3b34,0x3120323836322032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3535326c7225,0x610a3b3633662520,0x25203436732e6464\n"
".quad 0x25202c3635326c72,0x31202c3533326c72,0x6c2e0a3b34383336,0x333632203220636f\n"
".quad 0x2e64616d0a312039,0x25203436732e6f6c,0x25202c3735326c72,0x25202c3635326c72\n"
".quad 0x25202c3333346c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c383532\n"
".quad 0x3b3233202c373532,0x3436732e7268730a,0x2c3935326c722520,0x2c3835326c722520\n"
".quad 0x6f6c2e0a3b323320,0x3933363220322063,0x622e6c68730a3120,0x36326c7225203436\n"
".quad 0x35326c7225202c30,0x64610a3b32202c39,0x7225203436732e64,0x7225202c3136326c\n"
".quad 0x7225202c3933326c,0x6c2e0a3b3036326c,0x383632203220636f,0x672e74730a312033\n"
".quad 0x33662e6c61626f6c,0x36326c72255b2032,0x3b386625202c5d31,0x3436732e6464610a\n"
".quad 0x2c3236326c722520,0x2c3533326c722520,0x0a3b303834303220,0x32203220636f6c2e\n"
".quad 0x616d0a3120303436,0x3436732e6f6c2e64,0x2c3336326c722520,0x2c3236326c722520\n"
".quad 0x2c3333346c722520,0x730a3b356c722520,0x25203436622e6c68,0x25202c3436326c72\n"
".quad 0x33202c3336326c72,0x732e7268730a3b32,0x36326c7225203436,0x36326c7225202c35\n"
".quad 0x2e0a3b3233202c34,0x3632203220636f6c,0x6c68730a31203034,0x6c7225203436622e\n"
".quad 0x6c7225202c363632,0x0a3b32202c353632,0x203436732e646461,0x202c3736326c7225\n"
".quad 0x202c3933326c7225,0x0a3b3636326c7225,0x32203220636f6c2e,0x74730a3120343836\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d373632,0x2e6464610a3b3036\n"
".quad 0x326c722520343673,0x326c7225202c3836,0x37353432202c3533,0x20636f6c2e0a3b36\n"
".quad 0x3120313436322032,0x2e6f6c2e64616d0a,0x326c722520343673,0x326c7225202c3936\n"
".quad 0x346c7225202c3836,0x356c7225202c3333,0x36622e6c68730a3b,0x3037326c72252034\n"
".quad 0x3936326c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3137326c\n"
".quad 0x3233202c3037326c,0x3220636f6c2e0a3b,0x0a31203134363220,0x203436622e6c6873\n"
".quad 0x202c3237326c7225,0x202c3137326c7225,0x732e6464610a3b32,0x37326c7225203436\n"
".quad 0x33326c7225202c33,0x37326c7225202c39,0x20636f6c2e0a3b32,0x3120353836322032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3337326c7225,0x610a3b3636662520\n"
".quad 0x25203436732e6464,0x25202c3437326c72,0x32202c3533326c72,0x6c2e0a3b32373638\n"
".quad 0x343632203220636f,0x2e64616d0a312032,0x25203436732e6f6c,0x25202c3537326c72\n"
".quad 0x25202c3437326c72,0x25202c3333346c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c363732,0x3b3233202c353732,0x3436732e7268730a,0x2c3737326c722520\n"
".quad 0x2c3637326c722520,0x6f6c2e0a3b323320,0x3234363220322063,0x622e6c68730a3120\n"
".quad 0x37326c7225203436,0x37326c7225202c38,0x64610a3b32202c37,0x7225203436732e64\n"
".quad 0x7225202c3937326c,0x7225202c3933326c,0x6c2e0a3b3837326c,0x383632203220636f\n"
".quad 0x672e74730a312036,0x33662e6c61626f6c,0x37326c72255b2032,0x38346625202c5d39\n"
".quad 0x36732e6464610a3b,0x3038326c72252034,0x3533326c7225202c,0x3b3836373233202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312033343632,0x36732e6f6c2e6461,0x3138326c72252034\n"
".quad 0x3038326c7225202c,0x3333346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3238326c7225,0x202c3138326c7225,0x2e7268730a3b3233,0x326c722520343673\n"
".quad 0x326c7225202c3338,0x0a3b3233202c3238,0x32203220636f6c2e,0x68730a3120333436\n"
".quad 0x7225203436622e6c,0x7225202c3438326c,0x3b32202c3338326c,0x3436732e6464610a\n"
".quad 0x2c3538326c722520,0x2c3933326c722520,0x3b3438326c722520,0x203220636f6c2e0a\n"
".quad 0x730a312037383632,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3538326c\n"
".quad 0x6464610a3b343566,0x6c7225203436732e,0x6c7225202c363832,0x383633202c353332\n"
".quad 0x636f6c2e0a3b3436,0x2034343632203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c373832,0x6c7225202c363832,0x6c7225202c333334,0x622e6c68730a3b35\n"
".quad 0x38326c7225203436,0x38326c7225202c38,0x730a3b3233202c37,0x25203436732e7268\n"
".quad 0x25202c3938326c72,0x33202c3838326c72,0x20636f6c2e0a3b32,0x3120343436322032\n"
".quad 0x3436622e6c68730a,0x2c3039326c722520,0x2c3938326c722520,0x2e6464610a3b3220\n"
".quad 0x326c722520343673,0x326c7225202c3139,0x326c7225202c3933,0x636f6c2e0a3b3039\n"
".quad 0x2038383632203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3139326c72255b\n"
".quad 0x0a3b33316625202c,0x203436732e646461,0x202c3239326c7225,0x202c3533326c7225\n"
".quad 0x2e0a3b3036393034,0x3632203220636f6c,0x64616d0a31203534,0x203436732e6f6c2e\n"
".quad 0x202c3339326c7225,0x202c3239326c7225,0x202c3333346c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3439326c,0x3233202c3339326c,0x36732e7268730a3b\n"
".quad 0x3539326c72252034,0x3439326c7225202c,0x6c2e0a3b3233202c,0x343632203220636f\n"
".quad 0x2e6c68730a312035,0x326c722520343662,0x326c7225202c3639,0x610a3b32202c3539\n"
".quad 0x25203436732e6464,0x25202c3739326c72,0x25202c3933326c72,0x2e0a3b3639326c72\n"
".quad 0x3632203220636f6c,0x2e74730a31203938,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x376625202c5d3739,0x732e6464610a3b38,0x39326c7225203436,0x33326c7225202c38\n"
".quad 0x3635303534202c35,0x3220636f6c2e0a3b,0x0a31203634363220,0x732e6f6c2e64616d\n"
".quad 0x39326c7225203436,0x39326c7225202c39,0x33346c7225202c38,0x3b356c7225202c33\n"
".quad 0x3436622e6c68730a,0x2c3030336c722520,0x2c3939326c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c313033,0x3b3233202c303033,0x203220636f6c2e0a\n"
".quad 0x730a312036343632,0x25203436622e6c68,0x25202c3230336c72,0x32202c3130336c72\n"
".quad 0x36732e6464610a3b,0x3330336c72252034,0x3933326c7225202c,0x3230336c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203039363220,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3330336c72,0x610a3b3639386625,0x25203436732e6464,0x25202c3430336c72\n"
".quad 0x34202c3533326c72,0x6c2e0a3b32353139,0x343632203220636f,0x2e64616d0a312037\n"
".quad 0x25203436732e6f6c,0x25202c3530336c72,0x25202c3430336c72,0x25202c3333346c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c363033,0x3b3233202c353033\n"
".quad 0x3436732e7268730a,0x2c3730336c722520,0x2c3630336c722520,0x6f6c2e0a3b323320\n"
".quad 0x3734363220322063,0x622e6c68730a3120,0x30336c7225203436,0x30336c7225202c38\n"
".quad 0x64610a3b32202c37,0x7225203436732e64,0x7225202c3930336c,0x7225202c3933326c\n"
".quad 0x6c2e0a3b3830336c,0x393632203220636f,0x672e74730a312031,0x33662e6c61626f6c\n"
".quad 0x30336c72255b2032,0x32376625202c5d39,0x36732e6464610a3b,0x3031336c72252034\n"
".quad 0x3533326c7225202c,0x3b3834323335202c,0x203220636f6c2e0a,0x6d0a312038343632\n"
".quad 0x36732e6f6c2e6461,0x3131336c72252034,0x3031336c7225202c,0x3333346c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3231336c7225,0x202c3131336c7225\n"
".quad 0x2e7268730a3b3233,0x336c722520343673,0x336c7225202c3331,0x0a3b3233202c3231\n"
".quad 0x32203220636f6c2e,0x68730a3120383436,0x7225203436622e6c,0x7225202c3431336c\n"
".quad 0x3b32202c3331336c,0x3436732e6464610a,0x2c3531336c722520,0x2c3933326c722520\n"
".quad 0x3b3431336c722520,0x203220636f6c2e0a,0x730a312032393632,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3531336c,0x6464610a3b343166,0x6c7225203436732e\n"
".quad 0x6c7225202c363133,0x333735202c353332,0x636f6c2e0a3b3434,0x2039343632203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c373133,0x6c7225202c363133\n"
".quad 0x6c7225202c333334,0x622e6c68730a3b35,0x31336c7225203436,0x31336c7225202c38\n"
".quad 0x730a3b3233202c37,0x25203436732e7268,0x25202c3931336c72,0x33202c3831336c72\n"
".quad 0x20636f6c2e0a3b32,0x3120393436322032,0x3436622e6c68730a,0x2c3032336c722520\n"
".quad 0x2c3931336c722520,0x2e6464610a3b3220,0x336c722520343673,0x326c7225202c3132\n"
".quad 0x336c7225202c3933,0x636f6c2e0a3b3032,0x2033393632203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x5d3132336c72255b,0x0a3b30316625202c,0x203436732e646461\n"
".quad 0x202c3232336c7225,0x202c3533326c7225,0x2e0a3b3034343136,0x3632203220636f6c\n"
".quad 0x64616d0a31203035,0x203436732e6f6c2e,0x202c3332336c7225,0x202c3232336c7225\n"
".quad 0x202c3333346c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3432336c\n"
".quad 0x3233202c3332336c,0x36732e7268730a3b,0x3532336c72252034,0x3432336c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x353632203220636f,0x2e6c68730a312030,0x336c722520343662\n"
".quad 0x336c7225202c3632,0x610a3b32202c3532,0x25203436732e6464,0x25202c3732336c72\n"
".quad 0x25202c3933326c72,0x2e0a3b3632336c72,0x3632203220636f6c,0x2e74730a31203439\n"
".quad 0x662e6c61626f6c67,0x336c72255b203233,0x396625202c5d3732,0x732e6464610a3b30\n"
".quad 0x32336c7225203436,0x33326c7225202c38,0x3633353536202c35,0x3220636f6c2e0a3b\n"
".quad 0x0a31203135363220,0x732e6f6c2e64616d,0x32336c7225203436,0x32336c7225202c39\n"
".quad 0x33346c7225202c38,0x3b356c7225202c33,0x3436622e6c68730a,0x2c3033336c722520\n"
".quad 0x2c3932336c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c313333\n"
".quad 0x3b3233202c303333,0x203220636f6c2e0a,0x730a312031353632,0x25203436622e6c68\n"
".quad 0x25202c3233336c72,0x32202c3133336c72,0x36732e6464610a3b,0x3333336c72252034\n"
".quad 0x3933326c7225202c,0x3233336c7225202c,0x3220636f6c2e0a3b,0x0a31203539363220\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3333336c72,0x64610a3b32316625\n"
".quad 0x7225203436732e64,0x7225202c3433336c,0x3936202c3533326c,0x6f6c2e0a3b323336\n"
".quad 0x3235363220322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3533336c\n"
".quad 0x7225202c3433336c,0x7225202c3333346c,0x2e6c68730a3b356c,0x336c722520343662\n"
".quad 0x336c7225202c3633,0x0a3b3233202c3533,0x203436732e726873,0x202c3733336c7225\n"
".quad 0x202c3633336c7225,0x636f6c2e0a3b3233,0x2032353632203220,0x36622e6c68730a31\n"
".quad 0x3833336c72252034,0x3733336c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c393333,0x6c7225202c393332,0x6f6c2e0a3b383333,0x3639363220322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3933336c72255b20,0x3b34386625202c5d\n"
".quad 0x3436732e6464610a,0x2c3034336c722520,0x2c3533326c722520,0x0a3b383237333720\n"
".quad 0x32203220636f6c2e,0x616d0a3120333536,0x3436732e6f6c2e64,0x2c3134336c722520\n"
".quad 0x2c3034336c722520,0x2c3333346c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3234336c72,0x33202c3134336c72,0x732e7268730a3b32,0x34336c7225203436\n"
".quad 0x34336c7225202c33,0x2e0a3b3233202c32,0x3632203220636f6c,0x6c68730a31203335\n"
".quad 0x6c7225203436622e,0x6c7225202c343433,0x0a3b32202c333433,0x203436732e646461\n"
".quad 0x202c3534336c7225,0x202c3933326c7225,0x0a3b3434336c7225,0x32203220636f6c2e\n"
".quad 0x74730a3120373936,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d353433\n"
".quad 0x636f6c2e0a3b3131,0x2038333732203220,0x0a0a3b7465720a32,0x0a3a365f33324242\n"
".quad 0x32203220636f6c2e,0x64610a3120323434,0x7225203233732e64,0x337225202c373231\n"
".quad 0x6f6c2e0a3b31202c,0x3934343220322063,0x722e7476630a3120,0x33732e3233662e6e\n"
".quad 0x2c35383666252032,0x0a3b373231722520,0x203233662e627573,0x25202c3638366625\n"
".quad 0x6625202c35383666,0x622e6c68730a3b36,0x3832317225203233,0x36202c337225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203934343220,0x662e6e722e747663,0x25203233732e3233\n"
".quad 0x7225202c37383666,0x6464610a3b383231,0x366625203233662e,0x2c356625202c3838\n"
".quad 0x3030304633663020,0x6464610a3b303030,0x366625203233662e,0x38366625202c3837\n"
".quad 0x3738366625202c38,0x33662e6464610a3b,0x2c33383666252032,0x6630202c33662520\n"
".quad 0x3030303030304633,0x33752e766f6d0a3b,0x2c39323172252032,0x6574090a0a3b3020\n"
".quad 0x2e34762e64322e78,0x203233662e323366,0x202c37353466257b,0x25202c3835346625\n"
".quad 0x6625202c39353466,0x745b202c7d303634,0x30665f6665527865,0x383666257b202c42\n"
".quad 0x3837366625202c33,0x6c2e090a0a3b5d7d,0x343432203220636f,0x2e7476630a312039\n"
".quad 0x732e3233662e6e72,0x3938366625203233,0x730a3b337225202c,0x25203233662e6275\n"
".quad 0x6625202c30393666,0x3938366625202c36,0x33622e6c68730a3b,0x2c30333172252032\n"
".quad 0x202c373231722520,0x20636f6c2e0a3b36,0x3120393434322032,0x2e6e722e7476630a\n"
".quad 0x203233732e323366,0x25202c3139366625,0x64610a3b30333172,0x6625203233662e64\n"
".quad 0x366625202c343836,0x39366625202c3838,0x786574090a0a3b31,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x25202c3336346625,0x6625202c34363466,0x346625202c353634\n"
".quad 0x65745b202c7d3636,0x4230665f66655278,0x33383666257b202c,0x7d3438366625202c\n"
".quad 0x6c756d090a0a3b5d,0x366625203233662e,0x39366625202c3239,0x3336346625202c30\n"
".quad 0x6e722e616d660a3b,0x366625203233662e,0x38366625202c3339,0x3735346625202c36\n"
".quad 0x3b3239366625202c,0x322e786574090a0a,0x3233662e34762e64,0x66257b203233662e\n"
".quad 0x346625202c393634,0x37346625202c3037,0x3237346625202c31,0x527865745b202c7d\n"
".quad 0x202c4232665f6665,0x202c33383666257b,0x3b5d7d3837366625,0x786574090a090a0a\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x25202c3537346625,0x6625202c36373466\n"
".quad 0x346625202c373734,0x65745b202c7d3837,0x4232665f66655278,0x33383666257b202c\n"
".quad 0x7d3438366625202c,0x6f6c2e090a0a3b5d,0x3035343220322063,0x662e6c756d0a3120\n"
".quad 0x3439366625203233,0x2c3039366625202c,0x0a3b353734662520,0x662e6e722e616d66\n"
".quad 0x3539366625203233,0x2c3638366625202c,0x202c393634662520,0x0a0a3b3439366625\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x383466257b203233,0x3238346625202c31\n"
".quad 0x2c3338346625202c,0x2c7d343834662520,0x6665527865745b20,0x257b202c4234665f\n"
".quad 0x6625202c33383666,0x0a0a3b5d7d383736,0x322e786574090a09,0x3233662e34762e64\n"
".quad 0x66257b203233662e,0x346625202c373834,0x38346625202c3838,0x3039346625202c39\n"
".quad 0x527865745b202c7d,0x202c4234665f6665,0x202c33383666257b,0x3b5d7d3438366625\n"
".quad 0x20636f6c2e090a0a,0x3120313534322032,0x3233662e6c756d0a,0x202c363936662520\n"
".quad 0x25202c3039366625,0x6d660a3b37383466,0x3233662e6e722e61,0x202c373936662520\n"
".quad 0x25202c3638366625,0x6625202c31383466,0x74090a0a3b363936,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x2c33393466257b20,0x202c343934662520,0x25202c3539346625\n"
".quad 0x5b202c7d36393466,0x665f666552786574,0x3666257b202c4239,0x37366625202c3338\n"
".quad 0x0a090a0a3b5d7d38,0x2e64322e78657409,0x662e3233662e3476,0x393466257b203233\n"
".quad 0x3030356625202c39,0x2c3130356625202c,0x2c7d323035662520,0x6665527865745b20\n"
".quad 0x257b202c4239665f,0x6625202c33383666,0x0a0a3b5d7d343836,0x203220636f6c2e09\n"
".quad 0x6d0a312032353432,0x25203233662e6c75,0x6625202c38393666,0x346625202c303936\n"
".quad 0x2e616d660a3b3939,0x25203233662e6e72,0x6625202c39393666,0x346625202c363836\n"
".quad 0x39366625202c3339,0x786574090a0a3b38,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x25202c3530356625,0x6625202c36303566,0x356625202c373035,0x65745b202c7d3830\n"
".quad 0x3131665f66655278,0x383666257b202c42,0x3837366625202c33,0x090a090a0a3b5d7d\n"
".quad 0x762e64322e786574,0x33662e3233662e34,0x31313566257b2032,0x2c3231356625202c\n"
".quad 0x202c333135662520,0x202c7d3431356625,0x5f6665527865745b,0x257b202c42313166\n"
".quad 0x6625202c33383666,0x0a0a3b5d7d343836,0x203220636f6c2e09,0x6d0a312033353432\n"
".quad 0x25203233662e6c75,0x6625202c30303766,0x356625202c303936,0x2e616d660a3b3131\n"
".quad 0x25203233662e6e72,0x6625202c31303766,0x356625202c363836,0x30376625202c3530\n"
".quad 0x786574090a0a3b30,0x662e34762e64322e,0x7b203233662e3233,0x25202c3731356625\n"
".quad 0x6625202c38313566,0x356625202c393135,0x65745b202c7d3032,0x3331665f66655278\n"
".quad 0x383666257b202c42,0x3837366625202c33,0x090a090a0a3b5d7d,0x762e64322e786574\n"
".quad 0x33662e3233662e34,0x33323566257b2032,0x2c3432356625202c,0x202c353235662520\n"
".quad 0x202c7d3632356625,0x5f6665527865745b,0x257b202c42333166,0x6625202c33383666\n"
".quad 0x0a0a3b5d7d343836,0x203220636f6c2e09,0x6d0a312034353432,0x25203233662e6c75\n"
".quad 0x6625202c32303766,0x356625202c303936,0x2e616d660a3b3332,0x25203233662e6e72\n"
".quad 0x6625202c33303766,0x356625202c363836,0x30376625202c3731,0x786574090a0a3b32\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x25202c3932356625,0x6625202c30333566\n"
".quad 0x356625202c313335,0x65745b202c7d3233,0x3431665f66655278,0x383666257b202c42\n"
".quad 0x3837366625202c33,0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x35333566257b2032,0x2c3633356625202c,0x202c373335662520,0x202c7d3833356625\n"
".quad 0x5f6665527865745b,0x257b202c42343166,0x6625202c33383666,0x0a0a3b5d7d343836\n"
".quad 0x203220636f6c2e09,0x6d0a312035353432,0x25203233662e6c75,0x6625202c34303766\n"
".quad 0x356625202c303936,0x2e616d660a3b3533,0x25203233662e6e72,0x6625202c35303766\n"
".quad 0x356625202c363836,0x30376625202c3932,0x786574090a0a3b34,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x25202c3134356625,0x6625202c32343566,0x356625202c333435\n"
".quad 0x65745b202c7d3434,0x3631665f66655278,0x383666257b202c42,0x3837366625202c33\n"
".quad 0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34,0x37343566257b2032\n"
".quad 0x2c3834356625202c,0x202c393435662520,0x202c7d3035356625,0x5f6665527865745b\n"
".quad 0x257b202c42363166,0x6625202c33383666,0x0a0a3b5d7d343836,0x203220636f6c2e09\n"
".quad 0x6d0a312036353432,0x25203233662e6c75,0x6625202c36303766,0x356625202c303936\n"
".quad 0x2e616d660a3b3734,0x25203233662e6e72,0x6625202c37303766,0x356625202c363836\n"
".quad 0x30376625202c3134,0x786574090a0a3b36,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x25202c3335356625,0x6625202c34353566,0x356625202c353535,0x65745b202c7d3635\n"
".quad 0x3831665f66655278,0x383666257b202c42,0x3837366625202c33,0x090a090a0a3b5d7d\n"
".quad 0x762e64322e786574,0x33662e3233662e34,0x39353566257b2032,0x2c3036356625202c\n"
".quad 0x202c313635662520,0x202c7d3236356625,0x5f6665527865745b,0x257b202c42383166\n"
".quad 0x6625202c33383666,0x0a0a3b5d7d343836,0x203220636f6c2e09,0x6d0a312037353432\n"
".quad 0x25203233662e6c75,0x6625202c38303766,0x356625202c303936,0x2e616d660a3b3935\n"
".quad 0x25203233662e6e72,0x6625202c39303766,0x356625202c363836,0x30376625202c3335\n"
".quad 0x786574090a0a3b38,0x662e34762e64322e,0x7b203233662e3233,0x25202c3536356625\n"
".quad 0x6625202c36363566,0x356625202c373635,0x65745b202c7d3836,0x4231665f66655278\n"
".quad 0x33383666257b202c,0x7d3837366625202c,0x74090a090a0a3b5d,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x2c31373566257b20,0x202c323735662520,0x25202c3337356625\n"
".quad 0x5b202c7d34373566,0x665f666552786574,0x3666257b202c4231,0x38366625202c3338\n"
".quad 0x2e090a0a3b5d7d34,0x3432203220636f6c,0x6c756d0a31203835,0x376625203233662e\n"
".quad 0x39366625202c3031,0x3137356625202c30,0x6e722e616d660a3b,0x376625203233662e\n"
".quad 0x38366625202c3131,0x3536356625202c36,0x3b3031376625202c,0x322e786574090a0a\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x356625202c373735,0x37356625202c3837\n"
".quad 0x3038356625202c39,0x527865745b202c7d,0x202c4233665f6665,0x202c33383666257b\n"
".quad 0x3b5d7d3837366625,0x786574090a090a0a,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x25202c3338356625,0x6625202c34383566,0x356625202c353835,0x65745b202c7d3638\n"
".quad 0x4233665f66655278,0x33383666257b202c,0x7d3438366625202c,0x6f6c2e090a0a3b5d\n"
".quad 0x3935343220322063,0x662e6c756d0a3120,0x3231376625203233,0x2c3039366625202c\n"
".quad 0x0a3b333835662520,0x662e6e722e616d66,0x3331376625203233,0x2c3638366625202c\n"
".quad 0x202c373735662520,0x0a0a3b3231376625,0x2e64322e78657409,0x662e3233662e3476\n"
".quad 0x383566257b203233,0x3039356625202c39,0x2c3139356625202c,0x2c7d323935662520\n"
".quad 0x6665527865745b20,0x257b202c4235665f,0x6625202c33383666,0x0a0a3b5d7d383736\n"
".quad 0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e,0x356625202c353935\n"
".quad 0x39356625202c3639,0x3839356625202c37,0x527865745b202c7d,0x202c4235665f6665\n"
".quad 0x202c33383666257b,0x3b5d7d3438366625,0x20636f6c2e090a0a,0x3120303634322032\n"
".quad 0x3233662e6c756d0a,0x202c343137662520,0x25202c3039366625,0x6d660a3b35393566\n"
".quad 0x3233662e6e722e61,0x202c353137662520,0x25202c3638366625,0x6625202c39383566\n"
".quad 0x74090a0a3b343137,0x34762e64322e7865,0x3233662e3233662e,0x2c31303666257b20\n"
".quad 0x202c323036662520,0x25202c3330366625,0x5b202c7d34303666,0x665f666552786574\n"
".quad 0x3666257b202c4236,0x37366625202c3338,0x0a090a0a3b5d7d38,0x2e64322e78657409\n"
".quad 0x662e3233662e3476,0x303666257b203233,0x3830366625202c37,0x2c3930366625202c\n"
".quad 0x2c7d303136662520,0x6665527865745b20,0x257b202c4236665f,0x6625202c33383666\n"
".quad 0x0a0a3b5d7d343836,0x203220636f6c2e09,0x6d0a312031363432,0x25203233662e6c75\n"
".quad 0x6625202c36313766,0x366625202c303936,0x2e616d660a3b3730,0x25203233662e6e72\n"
".quad 0x6625202c37313766,0x366625202c363836,0x31376625202c3130,0x786574090a0a3b36\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x25202c3331366625,0x6625202c34313666\n"
".quad 0x366625202c353136,0x65745b202c7d3631,0x4237665f66655278,0x33383666257b202c\n"
".quad 0x7d3837366625202c,0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x2c39313666257b20,0x202c303236662520,0x25202c3132366625,0x5b202c7d32323666\n"
".quad 0x665f666552786574,0x3666257b202c4237,0x38366625202c3338,0x2e090a0a3b5d7d34\n"
".quad 0x3432203220636f6c,0x6c756d0a31203236,0x376625203233662e,0x39366625202c3831\n"
".quad 0x3931366625202c30,0x6e722e616d660a3b,0x376625203233662e,0x38366625202c3931\n"
".quad 0x3331366625202c36,0x3b3831376625202c,0x322e786574090a0a,0x3233662e34762e64\n"
".quad 0x66257b203233662e,0x366625202c353236,0x32366625202c3632,0x3832366625202c37\n"
".quad 0x527865745b202c7d,0x202c4238665f6665,0x202c33383666257b,0x3b5d7d3837366625\n"
".quad 0x786574090a090a0a,0x662e34762e64322e,0x7b203233662e3233,0x25202c3133366625\n"
".quad 0x6625202c32333666,0x366625202c333336,0x65745b202c7d3433,0x4238665f66655278\n"
".quad 0x33383666257b202c,0x7d3438366625202c,0x6f6c2e090a0a3b5d,0x3336343220322063\n"
".quad 0x662e6c756d0a3120,0x3032376625203233,0x2c3039366625202c,0x0a3b313336662520\n"
".quad 0x662e6e722e616d66,0x3132376625203233,0x2c3638366625202c,0x202c353236662520\n"
".quad 0x0a0a3b3032376625,0x2e64322e78657409,0x662e3233662e3476,0x333666257b203233\n"
".quad 0x3833366625202c37,0x2c3933366625202c,0x2c7d303436662520,0x6665527865745b20\n"
".quad 0x7b202c423531665f,0x25202c3338366625,0x0a3b5d7d38373666,0x2e786574090a090a\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x6625202c33343666,0x366625202c343436\n"
".quad 0x34366625202c3534,0x7865745b202c7d36,0x423531665f666552,0x33383666257b202c\n"
".quad 0x7d3438366625202c,0x6f6c2e090a0a3b5d,0x3436343220322063,0x662e6c756d0a3120\n"
".quad 0x3232376625203233,0x2c3039366625202c,0x0a3b333436662520,0x662e6e722e616d66\n"
".quad 0x3332376625203233,0x2c3638366625202c,0x202c373336662520,0x0a0a3b3232376625\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x343666257b203233,0x3035366625202c39\n"
".quad 0x2c3135366625202c,0x2c7d323536662520,0x6665527865745b20,0x7b202c423731665f\n"
".quad 0x25202c3338366625,0x0a3b5d7d38373666,0x2e786574090a090a,0x33662e34762e6432\n"
".quad 0x257b203233662e32,0x6625202c35353666,0x366625202c363536,0x35366625202c3735\n"
".quad 0x7865745b202c7d38,0x423731665f666552,0x33383666257b202c,0x7d3438366625202c\n"
".quad 0x6f6c2e090a0a3b5d,0x3536343220322063,0x662e6c756d0a3120,0x3432376625203233\n"
".quad 0x2c3039366625202c,0x0a3b353536662520,0x662e6e722e616d66,0x3532376625203233\n"
".quad 0x2c3638366625202c,0x202c393436662520,0x0a0a3b3432376625,0x2e64322e78657409\n"
".quad 0x662e3233662e3476,0x363666257b203233,0x3236366625202c31,0x2c3336366625202c\n"
".quad 0x2c7d343636662520,0x6665527865745b20,0x7b202c423031665f,0x25202c3338366625\n"
".quad 0x0a3b5d7d38373666,0x2e786574090a090a,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x6625202c37363666,0x366625202c383636,0x37366625202c3936,0x7865745b202c7d30\n"
".quad 0x423031665f666552,0x33383666257b202c,0x7d3438366625202c,0x6f6c2e090a0a3b5d\n"
".quad 0x3636343220322063,0x662e6c756d0a3120,0x3632376625203233,0x2c3039366625202c\n"
".quad 0x0a3b373636662520,0x662e6e722e616d66,0x3732376625203233,0x2c3638366625202c\n"
".quad 0x202c313636662520,0x0a0a3b3632376625,0x2e64322e78657409,0x662e3233662e3476\n"
".quad 0x373666257b203233,0x3437366625202c33,0x2c3537366625202c,0x2c7d363736662520\n"
".quad 0x6665527865745b20,0x7b202c423231665f,0x25202c3338366625,0x0a3b5d7d38373666\n"
".quad 0x2e786574090a090a,0x33662e34762e6432,0x257b203233662e32,0x6625202c39373666\n"
".quad 0x366625202c303836,0x38366625202c3138,0x7865745b202c7d32,0x423231665f666552\n"
".quad 0x33383666257b202c,0x7d3438366625202c,0x6f6c2e090a0a3b5d,0x3736343220322063\n"
".quad 0x662e6c756d0a3120,0x3832376625203233,0x2c3039366625202c,0x0a3b393736662520\n"
".quad 0x662e6e722e616d66,0x3932376625203233,0x2c3638366625202c,0x202c333736662520\n"
".quad 0x2e0a3b3832376625,0x3432203220636f6c,0x6464610a31203137,0x376625203233662e\n"
".quad 0x39366625202c3033,0x3131376625202c33,0x33662e6464610a3b,0x2c31333766252032\n"
".quad 0x202c303337662520,0x610a3b3539366625,0x25203233662e6464,0x6625202c32333766\n"
".quad 0x376625202c313337,0x2e6464610a3b3331,0x3337662520323366,0x3233376625202c33\n"
".quad 0x3b3739366625202c,0x3233662e6464610a,0x202c343337662520,0x25202c3333376625\n"
".quad 0x64610a3b35313766,0x6625203233662e64,0x376625202c353337,0x31376625202c3433\n"
".quad 0x662e6464610a3b37,0x3633376625203233,0x2c3533376625202c,0x0a3b393137662520\n"
".quad 0x203233662e646461,0x25202c3733376625,0x6625202c36333766,0x6464610a3b313237\n"
".quad 0x376625203233662e,0x33376625202c3833,0x3939366625202c37,0x33662e6464610a3b\n"
".quad 0x2c39333766252032,0x202c383337662520,0x610a3b3732376625,0x25203233662e6464\n"
".quad 0x6625202c30343766,0x376625202c393337,0x2e6464610a3b3130,0x3437662520323366\n"
".quad 0x3034376625202c31,0x3b3932376625202c,0x3233662e6464610a,0x202c323437662520\n"
".quad 0x25202c3134376625,0x64610a3b33303766,0x6625203233662e64,0x376625202c333437\n"
".quad 0x30376625202c3234,0x662e6464610a3b35,0x3434376625203233,0x2c3334376625202c\n"
".quad 0x0a3b333237662520,0x203233662e646461,0x25202c3534376625,0x6625202c34343766\n"
".quad 0x6464610a3b373037,0x376625203233662e,0x34376625202c3634,0x3532376625202c35\n"
".quad 0x33662e6464610a3b,0x2c37343766252032,0x202c363437662520,0x730a3b3930376625\n"
".quad 0x25203233662e6275,0x6625202c38343766,0x376625202c313137,0x2e6464610a3b3331\n"
".quad 0x3437662520323366,0x3834376625202c39,0x3b3531376625202c,0x3233662e6275730a\n"
".quad 0x202c303537662520,0x25202c3934376625,0x75730a3b37313766,0x6625203233662e62\n"
".quad 0x376625202c313537,0x31376625202c3035,0x662e6464610a3b39,0x3235376625203233\n"
".quad 0x2c3135376625202c,0x0a3b313237662520,0x203233662e646461,0x25202c3335376625\n"
".quad 0x6625202c32353766,0x6275730a3b373237,0x376625203233662e,0x35376625202c3435\n"
".quad 0x3932376625202c33,0x33662e6464610a3b,0x2c35353766252032,0x202c343537662520\n"
".quad 0x730a3b3332376625,0x25203233662e6275,0x6625202c36353766,0x376625202c353537\n"
".quad 0x2e6275730a3b3532,0x3537662520323366,0x3539366625202c37,0x3b3739366625202c\n"
".quad 0x3233662e6464610a,0x202c383537662520,0x25202c3735376625,0x64610a3b35313766\n"
".quad 0x6625203233662e64,0x376625202c393537,0x31376625202c3835,0x662e6275730a3b37\n"
".quad 0x3036376625203233,0x2c3935376625202c,0x0a3b393137662520,0x203233662e627573\n"
".quad 0x25202c3136376625,0x6625202c30363766,0x6464610a3b313237,0x376625203233662e\n"
".quad 0x36376625202c3236,0x3130376625202c31,0x33662e6275730a3b,0x2c33363766252032\n"
".quad 0x202c323637662520,0x610a3b3330376625,0x25203233662e6464,0x6625202c34363766\n"
".quad 0x376625202c333637,0x2e6275730a3b3730,0x3637662520323366,0x3436376625202c35\n"
".quad 0x3b3930376625202c,0x3233662e6464610a,0x202c363637662520,0x25202c3939366625\n"
".quad 0x64610a3b37323766,0x6625203233662e64,0x376625202c373637,0x30376625202c3636\n"
".quad 0x662e6464610a3b31,0x3836376625203233,0x2c3736376625202c,0x0a3b393237662520\n"
".quad 0x203233662e646461,0x25202c3936376625,0x6625202c38363766,0x6275730a3b333037\n"
".quad 0x376625203233662e,0x36376625202c3037,0x3530376625202c39,0x33662e6275730a3b\n"
".quad 0x2c31373766252032,0x202c303737662520,0x730a3b3332376625,0x25203233662e6275\n"
".quad 0x6625202c32373766,0x376625202c313737,0x2e6275730a3b3730,0x3737662520323366\n"
".quad 0x3237376625202c33,0x3b3532376625202c,0x3233662e6275730a,0x202c343737662520\n"
".quad 0x25202c3337376625,0x756d0a3b39303766,0x6625203233662e6c,0x376625202c353737\n"
".quad 0x36376625202c3536,0x722e616d660a3b35,0x6625203233662e6e,0x376625202c363737\n"
".quad 0x35376625202c3635,0x3537376625202c36,0x33662e6c756d0a3b,0x2c37373766252032\n"
".quad 0x202c343737662520,0x660a3b3437376625,0x33662e6e722e616d,0x2c38373766252032\n"
".quad 0x202c343737662520,0x25202c3437376625,0x756d0a3b36373766,0x6625203233662e6c\n"
".quad 0x376625202c393737,0x46426630202c3837,0x0a3b443544443831,0x662e6e722e616d66\n"
".quad 0x3038376625203233,0x2c3734376625202c,0x3033344533663020,0x376625202c303343\n"
".quad 0x2e6c756d0a3b3937,0x3837662520323366,0x3837376625202c31,0x343044336630202c\n"
".quad 0x6d660a3b43394339,0x3233662e6e722e61,0x202c323837662520,0x30202c3734376625\n"
".quad 0x3344343344443366,0x3138376625202c35,0x6e722e616d660a3b,0x376625203233662e\n"
".quad 0x35376625202c3338,0x3245336630202c36,0x25202c4241414141,0x6d660a3b32383766\n"
".quad 0x3233662e6e722e61,0x202c343837662520,0x30202c3536376625,0x4141414132453366\n"
".quad 0x3238376625202c42,0x6e722e616d660a3b,0x376625203233662e,0x35376625202c3538\n"
".quad 0x3245426630202c36,0x25202c4241414141,0x6d660a3b32383766,0x3233662e6e722e61\n"
".quad 0x202c363837662520,0x30202c3536376625,0x4141414132454266,0x3238376625202c42\n"
".quad 0x33662e6c756d0a3b,0x2c37383766252032,0x202c383737662520,0x3338393044336630\n"
".quad 0x2e616d660a3b3438,0x25203233662e6e72,0x6625202c38383766,0x336630202c373437\n"
".quad 0x2c30323830323843,0x0a3b373837662520,0x203233662e646461,0x25202c3938376625\n"
".quad 0x6625202c36353766,0x616d660a3b353637,0x203233662e6e722e,0x25202c3039376625\n"
".quad 0x6630202c39383766,0x4241414141414433,0x3b3838376625202c,0x3233662e6275730a\n"
".quad 0x202c313937662520,0x25202c3635376625,0x6d660a3b35363766,0x3233662e6e722e61\n"
".quad 0x202c323937662520,0x30202c3139376625,0x4141414141444266,0x3838376625202c42\n"
".quad 0x6e722e616d660a3b,0x376625203233662e,0x38376625202c3339,0x4144426630202c39\n"
".quad 0x25202c4241414141,0x6d660a3b38383766,0x3233662e6e722e61,0x202c343937662520\n"
".quad 0x30202c3139376625,0x4141414141443366,0x3838376625202c42,0x6e722e616d660a3b\n"
".quad 0x376625203233662e,0x37376625202c3539,0x3245336630202c34,0x25202c4241414141\n"
".quad 0x64610a3b32383766,0x6625203233662e64,0x376625202c363937,0x37376625202c3635\n"
".quad 0x722e616d660a3b34,0x6625203233662e6e,0x376625202c373937,0x44336630202c3639\n"
".quad 0x202c424141414141,0x610a3b3838376625,0x25203233662e6464,0x6625202c38393766\n"
".quad 0x376625202c353637,0x2e616d660a3b3437,0x25203233662e6e72,0x6625202c39393766\n"
".quad 0x336630202c383937,0x2c42414141414144,0x0a3b383837662520,0x203233662e627573\n"
".quad 0x25202c3030386625,0x6625202c36353766,0x616d660a3b343737,0x203233662e6e722e\n"
".quad 0x25202c3130386625,0x6630202c30303866,0x4241414141414442,0x3b3838376625202c\n"
".quad 0x3233662e6275730a,0x202c323038662520,0x25202c3536376625,0x6d660a3b34373766\n"
".quad 0x3233662e6e722e61,0x202c333038662520,0x30202c3230386625,0x4141414141444266\n"
".quad 0x3838376625202c42,0x6e722e616d660a3b,0x386625203233662e,0x37376625202c3430\n"
".quad 0x3245426630202c34,0x25202c4241414141,0x6d660a3b32383766,0x3233662e6e722e61\n"
".quad 0x202c353038662520,0x30202c3030386625,0x4141414141443366,0x3838376625202c42\n"
".quad 0x6e722e616d660a3b,0x386625203233662e,0x30386625202c3630,0x4144336630202c32\n"
".quad 0x25202c4241414141,0x6d660a3b38383766,0x3233662e6e722e61,0x202c373038662520\n"
".quad 0x30202c3639376625,0x4141414141444266,0x3838376625202c42,0x6e722e616d660a3b\n"
".quad 0x386625203233662e,0x39376625202c3830,0x4144426630202c38,0x25202c4241414141\n"
".quad 0x64610a3b38383766,0x6625203233662e64,0x376625202c393038,0x35376625202c3635\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x376625202c303138,0x36376625202c3536\n"
".quad 0x3737376625202c35,0x33662e67656e0a3b,0x2c31313866252032,0x0a3b303138662520\n"
".quad 0x662e6e722e616d66,0x3231386625203233,0x2c3930386625202c,0x202c363537662520\n"
".quad 0x660a3b3131386625,0x33662e6e722e616d,0x2c33313866252032,0x202c323138662520\n"
".quad 0x4538333644336630,0x38376625202c3933,0x662e67656e0a3b33,0x3431386625203233\n"
".quad 0x3b3437376625202c,0x2e6e722e616d660a,0x3138662520323366,0x3431386625202c35\n"
".quad 0x2c3437376625202c,0x0a3b353737662520,0x203233662e6c756d,0x25202c3631386625\n"
".quad 0x6630202c35313866,0x4241414141414433,0x6e722e616d660a3b,0x386625203233662e\n"
".quad 0x31386625202c3731,0x4543426630202c32,0x25202c3933453833,0x64610a3b36313866\n"
".quad 0x6625203233662e64,0x376625202c383138,0x31386625202c3438,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x386625202c393138,0x44336630202c3231,0x202c393345383336\n"
".quad 0x610a3b3538376625,0x25203233662e6464,0x6625202c30323866,0x386625202c363837\n"
".quad 0x2e616d660a3b3731,0x25203233662e6e72,0x6625202c31323866,0x336630202c323138\n"
".quad 0x2c39334538334543,0x0a3b363138662520,0x203233662e6c756d,0x25202c3232386625\n"
".quad 0x6630202c36353766,0x3030303030384533,0x6e722e616d660a3b,0x386625203233662e\n"
".quad 0x32386625202c3332,0x3536376625202c32,0x3b3132386625202c,0x3233662e6464610a\n"
".quad 0x202c343238662520,0x25202c3039376625,0x756d0a3b33323866,0x6625203233662e6c\n"
".quad 0x376625202c353238,0x45426630202c3635,0x0a3b303030303038,0x662e6e722e616d66\n"
".quad 0x3632386625203233,0x2c3532386625202c,0x202c353637662520,0x610a3b3132386625\n"
".quad 0x25203233662e6464,0x6625202c37323866,0x386625202c323937,0x2e6464610a3b3632\n"
".quad 0x3238662520323366,0x3339376625202c38,0x3b3332386625202c,0x3233662e6464610a\n"
".quad 0x202c393238662520,0x25202c3439376625,0x756d0a3b36323866,0x6625203233662e6c\n"
".quad 0x386625202c303338,0x44426630202c3531,0x0a3b424141414141,0x662e6e722e616d66\n"
".quad 0x3133386625203233,0x2c3231386625202c,0x3833454342663020,0x386625202c393345\n"
".quad 0x2e6464610a3b3033,0x3338662520323366,0x3539376625202c32,0x3b3133386625202c\n"
".quad 0x2e6e722e616d660a,0x3338662520323366,0x3231386625202c33,0x334543336630202c\n"
".quad 0x6625202c39334538,0x616d660a3b303338,0x203233662e6e722e,0x25202c3433386625\n"
".quad 0x6625202c32323866,0x386625202c343737,0x2e6464610a3b3333,0x3338662520323366\n"
".quad 0x3739376625202c35,0x3b3433386625202c,0x3233662e6c756d0a,0x202c363338662520\n"
".quad 0x30202c3231386625,0x3345383336444266,0x662e6c756d0a3b39,0x3733386625203233\n"
".quad 0x2c3536376625202c,0x3030384533663020,0x6c756d0a3b303030,0x386625203233662e\n"
".quad 0x33386625202c3833,0x3437376625202c37,0x6e722e616d660a3b,0x386625203233662e\n"
".quad 0x31386625202c3933,0x3644426630202c32,0x25202c3933453833,0x64610a3b38333866\n"
".quad 0x6625203233662e64,0x376625202c303438,0x33386625202c3939,0x722e616d660a3b39\n"
".quad 0x6625203233662e6e,0x386625202c313438,0x37376625202c3532,0x3333386625202c34\n"
".quad 0x33662e6464610a3b,0x2c32343866252032,0x202c313038662520,0x6e0a3b3134386625\n"
".quad 0x25203233662e6765,0x6625202c33343866,0x616d660a3b373338,0x203233662e6e722e\n"
".quad 0x25202c3434386625,0x6625202c33343866,0x386625202c343737,0x2e6464610a3b3633\n"
".quad 0x3438662520323366,0x3330386625202c35,0x3b3434386625202c,0x3233662e6464610a\n"
".quad 0x202c363438662520,0x25202c3430386625,0x64610a3b31333866,0x6625203233662e64\n"
".quad 0x386625202c373438,0x34386625202c3530,0x662e6c756d0a3b31,0x3834386625203233\n"
".quad 0x2c3536376625202c,0x3030384542663020,0x6c756d0a3b303030,0x386625203233662e\n"
".quad 0x34386625202c3934,0x3437376625202c38,0x6e722e616d660a3b,0x386625203233662e\n"
".quad 0x31386625202c3035,0x3644426630202c32,0x25202c3933453833,0x64610a3b39343866\n"
".quad 0x6625203233662e64,0x386625202c313538,0x35386625202c3630,0x662e6464610a3b30\n"
".quad 0x3235386625203233,0x2c3730386625202c,0x0a3b343338662520,0x203233662e646461\n"
".quad 0x25202c3335386625,0x6625202c38303866,0x766f6d0a3b393338,0x386625203233662e\n"
".quad 0x46336630202c3435,0x0a3b303030303038,0x6d617261702e646c,0x386625203233662e\n"
".quad 0x315a5f5b202c3539,0x79685f645f524c39,0x6e495f4344424162,0x5f53665070726574\n"
".quad 0x617261705f666d66,0x6c2e0a3b5d345f6d,0x373432203220636f,0x2e6275730a312031\n"
".quad 0x3538662520323366,0x3435386625202c35,0x3b3539386625202c,0x3233662e6c756d0a\n"
".quad 0x202c363538662520,0x25202c3535386625,0x6d660a3b30383766,0x3233662e6e722e61\n"
".quad 0x202c373538662520,0x25202c3339366625,0x6625202c35393866,0x6c756d0a3b363538\n"
".quad 0x386625203233662e,0x35386625202c3835,0x3331386625202c35,0x6e722e616d660a3b\n"
".quad 0x386625203233662e,0x31376625202c3935,0x3539386625202c31,0x3b3835386625202c\n"
".quad 0x3233662e6c756d0a,0x202c303638662520,0x25202c3535386625,0x6d660a3b38313866\n"
".quad 0x3233662e6e722e61,0x202c313638662520,0x25202c3539366625,0x6625202c35393866\n"
".quad 0x6c756d0a3b303638,0x386625203233662e,0x35386625202c3236,0x3931386625202c35\n"
".quad 0x6e722e616d660a3b,0x386625203233662e,0x31376625202c3336,0x3539386625202c33\n"
".quad 0x3b3236386625202c,0x3233662e6c756d0a,0x202c343638662520,0x25202c3535386625\n"
".quad 0x6d660a3b30323866,0x3233662e6e722e61,0x202c353638662520,0x25202c3739366625\n"
".quad 0x6625202c35393866,0x6c756d0a3b343638,0x386625203233662e,0x35386625202c3636\n"
".quad 0x3432386625202c35,0x6e722e616d660a3b,0x386625203233662e,0x31376625202c3736\n"
".quad 0x3539386625202c35,0x3b3636386625202c,0x3233662e6c756d0a,0x202c383638662520\n"
".quad 0x25202c3535386625,0x6d660a3b37323866,0x3233662e6e722e61,0x202c393638662520\n"
".quad 0x25202c3731376625,0x6625202c35393866,0x6c756d0a3b383638,0x386625203233662e\n"
".quad 0x35386625202c3037,0x3832386625202c35,0x6e722e616d660a3b,0x386625203233662e\n"
".quad 0x31376625202c3137,0x3539386625202c39,0x3b3037386625202c,0x3233662e6c756d0a\n"
".quad 0x202c323738662520,0x25202c3535386625,0x6d660a3b39323866,0x3233662e6e722e61\n"
".quad 0x202c333738662520,0x25202c3132376625,0x6625202c35393866,0x6c756d0a3b323738\n"
".quad 0x386625203233662e,0x35386625202c3437,0x3233386625202c35,0x6e722e616d660a3b\n"
".quad 0x386625203233662e,0x39366625202c3537,0x3539386625202c39,0x3b3437386625202c\n"
".quad 0x3233662e6c756d0a,0x202c363738662520,0x25202c3535386625,0x6d660a3b35333866\n"
".quad 0x3233662e6e722e61,0x202c373738662520,0x25202c3732376625,0x6625202c35393866\n"
".quad 0x6c756d0a3b363738,0x386625203233662e,0x35386625202c3837,0x3034386625202c35\n"
".quad 0x6e722e616d660a3b,0x386625203233662e,0x30376625202c3937,0x3539386625202c31\n"
".quad 0x3b3837386625202c,0x3233662e6c756d0a,0x202c303838662520,0x25202c3535386625\n"
".quad 0x6d660a3b32343866,0x3233662e6e722e61,0x202c313838662520,0x25202c3932376625\n"
".quad 0x6625202c35393866,0x6c756d0a3b303838,0x386625203233662e,0x35386625202c3238\n"
".quad 0x3534386625202c35,0x6e722e616d660a3b,0x386625203233662e,0x30376625202c3338\n"
".quad 0x3539386625202c33,0x3b3238386625202c,0x3233662e6c756d0a,0x202c343838662520\n"
".quad 0x25202c3535386625,0x6d660a3b36343866,0x3233662e6e722e61,0x202c353838662520\n"
".quad 0x25202c3530376625,0x6625202c35393866,0x6c756d0a3b343838,0x386625203233662e\n"
".quad 0x35386625202c3638,0x3734386625202c35,0x6e722e616d660a3b,0x386625203233662e\n"
".quad 0x32376625202c3738,0x3539386625202c33,0x3b3638386625202c,0x3233662e6c756d0a\n"
".quad 0x202c383838662520,0x25202c3535386625,0x6d660a3b31353866,0x3233662e6e722e61\n"
".quad 0x202c393838662520,0x25202c3730376625,0x6625202c35393866,0x6c756d0a3b383838\n"
".quad 0x386625203233662e,0x35386625202c3039,0x3235386625202c35,0x6e722e616d660a3b\n"
".quad 0x386625203233662e,0x32376625202c3139,0x3539386625202c35,0x3b3039386625202c\n"
".quad 0x3233662e6c756d0a,0x202c323938662520,0x25202c3535386625,0x6d660a3b33353866\n"
".quad 0x3233662e6e722e61,0x202c333938662520,0x25202c3930376625,0x6625202c35393866\n"
".quad 0x2e646c0a3b323938,0x36752e6d61726170,0x3233346c72252034,0x4c39315a5f5b202c\n"
".quad 0x416279685f645f52,0x65746e495f434442,0x6d665f5366507072,0x5f6d617261705f66\n"
".quad 0x636f6c2e0a3b5d33,0x2033343432203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c303533,0x346c7225202c3531,0x356c7225202c3233,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3932346c72,0x645f524c39315a5f,0x434442416279685f\n"
".quad 0x50707265746e495f,0x705f666d665f5366,0x3b5d315f6d617261,0x6f742e617476630a\n"
".quad 0x2e6c61626f6c672e,0x336c722520343675,0x346c7225202c3135,0x2e6c68730a3b3932\n"
".quad 0x336c722520343662,0x336c7225202c3235,0x0a3b3233202c3035,0x203436732e726873\n"
".quad 0x202c3335336c7225,0x202c3235336c7225,0x636f6c2e0a3b3233,0x2035333632203220\n"
".quad 0x36622e6c68730a31,0x3435336c72252034,0x3335336c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c353533,0x6c7225202c313533,0x2e74730a3b343533\n"
".quad 0x662e6c61626f6c67,0x336c72255b203233,0x386625202c5d3535,0x2e6464610a3b3735\n"
".quad 0x336c722520343673,0x316c7225202c3635,0x3b36393034202c35,0x203220636f6c2e0a\n"
".quad 0x6d0a312036333632,0x36732e6f6c2e6461,0x3735336c72252034,0x3635336c7225202c\n"
".quad 0x3233346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3835336c7225\n"
".quad 0x202c3735336c7225,0x2e7268730a3b3233,0x336c722520343673,0x336c7225202c3935\n"
".quad 0x0a3b3233202c3835,0x32203220636f6c2e,0x68730a3120363336,0x7225203436622e6c\n"
".quad 0x7225202c3036336c,0x3b32202c3935336c,0x3436732e6464610a,0x2c3136336c722520\n"
".quad 0x2c3135336c722520,0x3b3036336c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3136336c7225,0x0a3b393538662520,0x203436732e646461,0x202c3236336c7225\n"
".quad 0x38202c35316c7225,0x6f6c2e0a3b323931,0x3733363220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3336336c,0x7225202c3236336c,0x7225202c3233346c\n"
".quad 0x2e6c68730a3b356c,0x336c722520343662,0x336c7225202c3436,0x0a3b3233202c3336\n"
".quad 0x203436732e726873,0x202c3536336c7225,0x202c3436336c7225,0x636f6c2e0a3b3233\n"
".quad 0x2037333632203220,0x36622e6c68730a31,0x3636336c72252034,0x3536336c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c373633,0x6c7225202c313533\n"
".quad 0x2e74730a3b363633,0x662e6c61626f6c67,0x336c72255b203233,0x386625202c5d3736\n"
".quad 0x2e6464610a3b3136,0x336c722520343673,0x316c7225202c3836,0x3838323231202c35\n"
".quad 0x3220636f6c2e0a3b,0x0a31203833363220,0x732e6f6c2e64616d,0x36336c7225203436\n"
".quad 0x36336c7225202c39,0x33346c7225202c38,0x3b356c7225202c32,0x3436622e6c68730a\n"
".quad 0x2c3037336c722520,0x2c3936336c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c313733,0x3b3233202c303733,0x203220636f6c2e0a,0x730a312038333632\n"
".quad 0x25203436622e6c68,0x25202c3237336c72,0x32202c3137336c72,0x36732e6464610a3b\n"
".quad 0x3337336c72252034,0x3135336c7225202c,0x3237336c7225202c,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x5d3337336c72255b,0x3b3336386625202c,0x3436732e6464610a\n"
".quad 0x2c3437336c722520,0x202c35316c722520,0x2e0a3b3438333631,0x3632203220636f6c\n"
".quad 0x64616d0a31203933,0x203436732e6f6c2e,0x202c3537336c7225,0x202c3437336c7225\n"
".quad 0x202c3233346c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3637336c\n"
".quad 0x3233202c3537336c,0x36732e7268730a3b,0x3737336c72252034,0x3637336c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x333632203220636f,0x2e6c68730a312039,0x336c722520343662\n"
".quad 0x336c7225202c3837,0x610a3b32202c3737,0x25203436732e6464,0x25202c3937336c72\n"
".quad 0x25202c3135336c72,0x730a3b3837336c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3937336c,0x64610a3b35363866,0x7225203436732e64,0x7225202c3038336c\n"
".quad 0x343032202c35316c,0x636f6c2e0a3b3038,0x2030343632203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c313833,0x6c7225202c303833,0x6c7225202c323334\n"
".quad 0x622e6c68730a3b35,0x38336c7225203436,0x38336c7225202c32,0x730a3b3233202c31\n"
".quad 0x25203436732e7268,0x25202c3338336c72,0x33202c3238336c72,0x20636f6c2e0a3b32\n"
".quad 0x3120303436322032,0x3436622e6c68730a,0x2c3438336c722520,0x2c3338336c722520\n"
".quad 0x2e6464610a3b3220,0x336c722520343673,0x336c7225202c3538,0x336c7225202c3135\n"
".quad 0x672e74730a3b3438,0x33662e6c61626f6c,0x38336c72255b2032,0x36386625202c5d35\n"
".quad 0x732e6464610a3b37,0x38336c7225203436,0x35316c7225202c36,0x3b3637353432202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312031343632,0x36732e6f6c2e6461,0x3738336c72252034\n"
".quad 0x3638336c7225202c,0x3233346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3838336c7225,0x202c3738336c7225,0x2e7268730a3b3233,0x336c722520343673\n"
".quad 0x336c7225202c3938,0x0a3b3233202c3838,0x32203220636f6c2e,0x68730a3120313436\n"
".quad 0x7225203436622e6c,0x7225202c3039336c,0x3b32202c3938336c,0x3436732e6464610a\n"
".quad 0x2c3139336c722520,0x2c3135336c722520,0x3b3039336c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3139336c7225,0x0a3b393638662520,0x203436732e646461\n"
".quad 0x202c3239336c7225,0x32202c35316c7225,0x6c2e0a3b32373638,0x343632203220636f\n"
".quad 0x2e64616d0a312032,0x25203436732e6f6c,0x25202c3339336c72,0x25202c3239336c72\n"
".quad 0x25202c3233346c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c343933\n"
".quad 0x3b3233202c333933,0x3436732e7268730a,0x2c3539336c722520,0x2c3439336c722520\n"
".quad 0x6f6c2e0a3b323320,0x3234363220322063,0x622e6c68730a3120,0x39336c7225203436\n"
".quad 0x39336c7225202c36,0x64610a3b32202c35,0x7225203436732e64,0x7225202c3739336c\n"
".quad 0x7225202c3135336c,0x74730a3b3639336c,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d373933,0x6464610a3b313738,0x6c7225203436732e,0x6c7225202c383933\n"
".quad 0x36373233202c3531,0x20636f6c2e0a3b38,0x3120333436322032,0x2e6f6c2e64616d0a\n"
".quad 0x336c722520343673,0x336c7225202c3939,0x346c7225202c3839,0x356c7225202c3233\n"
".quad 0x36622e6c68730a3b,0x3030346c72252034,0x3939336c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3130346c,0x3233202c3030346c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203334363220,0x203436622e6c6873,0x202c3230346c7225,0x202c3130346c7225\n"
".quad 0x732e6464610a3b32,0x30346c7225203436,0x35336c7225202c33,0x30346c7225202c31\n"
".quad 0x6c672e74730a3b32,0x3233662e6c61626f,0x3330346c72255b20,0x3337386625202c5d\n"
".quad 0x36732e6464610a3b,0x3430346c72252034,0x2c35316c7225202c,0x0a3b343638363320\n"
".quad 0x32203220636f6c2e,0x616d0a3120343436,0x3436732e6f6c2e64,0x2c3530346c722520\n"
".quad 0x2c3430346c722520,0x2c3233346c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3630346c72,0x33202c3530346c72,0x732e7268730a3b32,0x30346c7225203436\n"
".quad 0x30346c7225202c37,0x2e0a3b3233202c36,0x3632203220636f6c,0x6c68730a31203434\n"
".quad 0x6c7225203436622e,0x6c7225202c383034,0x0a3b32202c373034,0x203436732e646461\n"
".quad 0x202c3930346c7225,0x202c3135336c7225,0x0a3b3830346c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3930346c72,0x610a3b3537386625,0x25203436732e6464\n"
".quad 0x25202c3031346c72,0x3034202c35316c72,0x6f6c2e0a3b303639,0x3534363220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3131346c,0x7225202c3031346c\n"
".quad 0x7225202c3233346c,0x2e6c68730a3b356c,0x346c722520343662,0x346c7225202c3231\n"
".quad 0x0a3b3233202c3131,0x203436732e726873,0x202c3331346c7225,0x202c3231346c7225\n"
".quad 0x636f6c2e0a3b3233,0x2035343632203220,0x36622e6c68730a31,0x3431346c72252034\n"
".quad 0x3331346c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c353134\n"
".quad 0x6c7225202c313533,0x2e74730a3b343134,0x662e6c61626f6c67,0x346c72255b203233\n"
".quad 0x386625202c5d3531,0x2e6464610a3b3737,0x346c722520343673,0x316c7225202c3631\n"
".quad 0x3635303534202c35,0x3220636f6c2e0a3b,0x0a31203634363220,0x732e6f6c2e64616d\n"
".quad 0x31346c7225203436,0x31346c7225202c37,0x33346c7225202c36,0x3b356c7225202c32\n"
".quad 0x3436622e6c68730a,0x2c3831346c722520,0x2c3731346c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c393134,0x3b3233202c383134,0x203220636f6c2e0a\n"
".quad 0x730a312036343632,0x25203436622e6c68,0x25202c3032346c72,0x32202c3931346c72\n"
".quad 0x36732e6464610a3b,0x3132346c72252034,0x3135336c7225202c,0x3032346c7225202c\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3132346c72255b,0x3b3937386625202c\n"
".quad 0x3436732e6464610a,0x2c3232346c722520,0x202c35316c722520,0x2e0a3b3235313934\n"
".quad 0x3632203220636f6c,0x64616d0a31203734,0x203436732e6f6c2e,0x202c3332346c7225\n"
".quad 0x202c3232346c7225,0x202c3233346c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3432346c,0x3233202c3332346c,0x36732e7268730a3b,0x3532346c72252034\n"
".quad 0x3432346c7225202c,0x6c2e0a3b3233202c,0x343632203220636f,0x2e6c68730a312037\n"
".quad 0x346c722520343662,0x346c7225202c3632,0x610a3b32202c3532,0x25203436732e6464\n"
".quad 0x25202c3732346c72,0x25202c3135336c72,0x730a3b3632346c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3732346c,0x6c2e0a3b31383866,0x343632203220636f\n"
".quad 0x672e74730a312038,0x33662e6c61626f6c,0x5d396c72255b2032,0x3b3338386625202c\n"
".quad 0x203220636f6c2e0a,0x730a312039343632,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x6625202c5d30316c,0x6f6c2e0a3b353838,0x3035363220322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x5d31316c72255b20,0x3b3738386625202c,0x203220636f6c2e0a\n"
".quad 0x730a312031353632,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d32316c\n"
".quad 0x6f6c2e0a3b393838,0x3235363220322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x5d33316c72255b20,0x3b3139386625202c,0x203220636f6c2e0a,0x730a312033353632\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d34316c,0x6f6c2e0a3b333938\n"
".quad 0x3833373220322063,0x0a3b7465720a3220,0x72746e652e0a0a7d,0x524c32315a5f2079\n"
".quad 0x41426279685f645f,0x6d665f5366504344,0x617261702e0a2866,0x5f203436752e206d\n"
".quad 0x5f645f524c32315a,0x5043444142627968,0x705f666d665f5366,0x0a2c305f6d617261\n"
".quad 0x2e206d617261702e,0x32315a5f20343675,0x6279685f645f524c,0x5f53665043444142\n"
".quad 0x617261705f666d66,0x61702e0a2c315f6d,0x3233662e206d6172,0x5f524c32315a5f20\n"
".quad 0x4441426279685f64,0x666d665f53665043,0x325f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203436752e20,0x685f645f524c3231,0x6650434441426279,0x61705f666d665f53\n"
".quad 0x2e0a2c335f6d6172,0x662e206d61726170,0x4c32315a5f203233,0x426279685f645f52\n"
".quad 0x665f536650434441,0x6d617261705f666d,0x2e0a7b0a290a345f,0x3233662e20676572\n"
".quad 0x3e3835343c662520,0x2e206765722e0a3b,0x3c70252064657270,0x65722e0a3b3e3231\n"
".quad 0x25203233732e2067,0x0a3b3e3732313c72,0x36732e206765722e,0x31333c6c72252034\n"
".quad 0x646c0a0a0a3b3e36,0x752e6d617261702e,0x2c316c7225203436,0x524c32315a5f5b20\n"
".quad 0x41426279685f645f,0x6d665f5366504344,0x5f6d617261705f66,0x702e646c0a3b5d30\n"
".quad 0x3436752e6d617261,0x5b202c336c722520,0x645f524c32315a5f,0x434441426279685f\n"
".quad 0x5f666d665f536650,0x5d335f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f\n"
".quad 0x6c7225203436752e,0x3b316c7225202c34,0x203220636f6c2e0a,0x6d0a312032343732\n"
".quad 0x25203233752e766f,0x69746e25202c3672,0x766f6d0a3b782e64,0x377225203233752e\n"
".quad 0x646961746325202c,0x2e766f6d0a3b782e,0x2c32722520323375,0x3b782e6469742520\n"
".quad 0x2e6f6c2e64616d0a,0x2c38722520323373,0x7225202c36722520,0x0a3b327225202c37\n"
".quad 0x32203220636f6c2e,0x6f6d0a3120333437,0x7225203233752e76,0x6469746e25202c39\n"
".quad 0x2e766f6d0a3b792e,0x3031722520323375,0x646961746325202c,0x2e766f6d0a3b792e\n"
".quad 0x3131722520323375,0x792e64697425202c,0x6f6c2e64616d0a3b,0x337225203233732e\n"
".quad 0x25202c397225202c,0x317225202c303172,0x20636f6c2e0a3b31,0x3120343437322032\n"
".quad 0x3233752e766f6d0a,0x25202c3231722520,0x0a3b7a2e6469746e,0x203233752e766f6d\n"
".quad 0x6325202c33317225,0x0a3b7a2e64696174,0x203233752e766f6d,0x7425202c34317225\n"
".quad 0x616d0a3b7a2e6469,0x3233732e6f6c2e64,0x7225202c34722520,0x33317225202c3231\n"
".quad 0x0a3b34317225202c,0x32203220636f6c2e,0x76630a3120353437,0x3233662e6e722e74\n"
".quad 0x326625203233732e,0x0a3b387225202c33,0x662e6e722e616d66,0x2c34326625203233\n"
".quad 0x30202c3332662520,0x3030303030463366,0x3731346630202c30,0x2e0a3b3030303043\n"
".quad 0x3732203220636f6c,0x7476630a31203634,0x2e3233662e6e722e,0x2c32662520323373\n"
".quad 0x6d660a3b33722520,0x3233662e6e722e61,0x25202c3532662520,0x46336630202c3266\n"
".quad 0x202c303030303030,0x3030433731346630,0x636f6c2e0a3b3030,0x2037343732203220\n"
".quad 0x6e722e7476630a31,0x3233732e3233662e,0x25202c3632662520,0x2e616d660a3b3472\n"
".quad 0x25203233662e6e72,0x326625202c373266,0x3046336630202c36,0x30202c3030303030\n"
".quad 0x3030304337313466,0x752e7476630a3b30,0x25203233752e3436,0x387225202c356c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203035373220,0x2e3436732e747663,0x366c722520323373\n"
".quad 0x730a3b337225202c,0x25203233622e6c68,0x2c347225202c3572,0x636f6c2e0a3b3620\n"
".quad 0x2030353732203220,0x36732e7476630a31,0x7225203233732e34,0x3b357225202c376c\n"
".quad 0x3436732e6464610a,0x25202c396c722520,0x6c7225202c376c72,0x20636f6c2e0a3b36\n"
".quad 0x3120303537322032,0x2e6f6c2e64616d0a,0x386c722520343673,0x202c396c7225202c\n"
".quad 0x7225202c336c7225,0x2e6464610a3b356c,0x3832662520323366,0x202c34326625202c\n"
".quad 0x3030453732436630,0x2e6464610a3b3030,0x3932662520323366,0x202c35326625202c\n"
".quad 0x3030434631436630,0x636f6c2e0a3b3030,0x0a31203037203220,0x203233662e6c756d\n"
".quad 0x6625202c30336625,0x39326625202c3932,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x2c38326625202c31,0x25202c3832662520,0x6464610a3b303366,0x336625203233662e\n"
".quad 0x2c37326625202c32,0x3043463143663020,0x6f6c2e0a3b303030,0x3120303720322063\n"
".quad 0x2e6e722e616d660a,0x3333662520323366,0x202c32336625202c,0x6625202c32336625\n"
".quad 0x707465730a3b3133,0x203233662e746c2e,0x336625202c317025,0x3831346630202c33\n"
".quad 0x610a3b3030303030,0x25203233732e6464,0x387225202c353172,0x65730a3b322d202c\n"
".quad 0x33752e74672e7074,0x25202c3270252032,0x3b3935202c353172,0x203220636f6c2e0a\n"
".quad 0x730a312033353732,0x732e746c2e707465,0x202c337025203233,0x0a3b32202c337225\n"
".quad 0x20646572702e726f,0x327025202c347025,0x2e0a3b337025202c,0x3732203220636f6c\n"
".quad 0x7465730a31203335,0x3233732e74672e70,0x7225202c35702520,0x6f0a3b3136202c33\n"
".quad 0x2520646572702e72,0x2c347025202c3670,0x6c2e0a3b35702520,0x353732203220636f\n"
".quad 0x707465730a312033,0x203233732e746c2e,0x347225202c377025,0x2e726f0a3b32202c\n"
".quad 0x3870252064657270,0x25202c367025202c,0x636f6c2e0a3b3770,0x2033353732203220\n"
".quad 0x672e707465730a31,0x7025203233732e74,0x202c347225202c39,0x702e726f0a3b3136\n"
".quad 0x3031702520646572,0x25202c387025202c,0x636f6c2e0a3b3970,0x2033353732203220\n"
".quad 0x2030317025400a31,0x3432424220617262,0x6c68730a0a3b365f,0x6c7225203436622e\n"
".quad 0x386c7225202c3031,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c31316c\n"
".quad 0x0a3b3233202c3031,0x32203220636f6c2e,0x68730a3120383537,0x7225203436622e6c\n"
".quad 0x6c7225202c32316c,0x610a3b32202c3131,0x25203436732e6464,0x7225202c33316c72\n"
".quad 0x316c7225202c346c,0x6c672e646c0a3b32,0x3233662e6c61626f,0x255b202c33662520\n"
".quad 0x610a3b5d33316c72,0x25203233732e6464,0x337225202c373172,0x6c2e0a3b312d202c\n"
".quad 0x353732203220636f,0x2e7476630a312039,0x203233732e343673,0x25202c34316c7225\n"
".quad 0x6464610a3b373172,0x6c7225203436732e,0x316c7225202c3531,0x3b376c7225202c34\n"
".quad 0x3436732e6464610a,0x202c36316c722520,0x38202c35316c7225,0x2e646c0a3b323931\n"
".quad 0x36752e6d61726170,0x3531336c72252034,0x4c32315a5f5b202c,0x426279685f645f52\n"
".quad 0x665f536650434441,0x6d617261705f666d,0x6f6c2e0a3b5d335f,0x3935373220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c37316c,0x336c7225202c3631\n"
".quad 0x356c7225202c3531,0x36622e6c68730a3b,0x2c38316c72252034,0x202c37316c722520\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x38316c7225202c39,0x6c2e0a3b3233202c\n"
".quad 0x353732203220636f,0x2e6c68730a312039,0x326c722520343662,0x39316c7225202c30\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x346c7225202c3132,0x3b30326c7225202c\n"
".quad 0x626f6c672e646c0a,0x25203233662e6c61,0x6c72255b202c3466,0x6f6c2e0a3b5d3132\n"
".quad 0x3036373220322063,0x732e6464610a3120,0x2c39317225203233,0x3b31202c33722520\n"
".quad 0x3436732e7476630a,0x6c7225203233732e,0x39317225202c3232,0x36732e6464610a3b\n"
".quad 0x2c33326c72252034,0x202c32326c722520,0x64610a3b376c7225,0x7225203436732e64\n"
".quad 0x6c7225202c34326c,0x38333631202c3332,0x20636f6c2e0a3b34,0x3120303637322032\n"
".quad 0x2e6f6c2e64616d0a,0x326c722520343673,0x34326c7225202c35,0x3531336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x25202c36326c7225,0x3233202c35326c72\n"
".quad 0x36732e7268730a3b,0x2c37326c72252034,0x202c36326c722520,0x636f6c2e0a3b3233\n"
".quad 0x2030363732203220,0x36622e6c68730a31,0x2c38326c72252034,0x202c37326c722520\n"
".quad 0x732e6464610a3b32,0x39326c7225203436,0x202c346c7225202c,0x6c0a3b38326c7225\n"
".quad 0x6c61626f6c672e64,0x356625203233662e,0x39326c72255b202c,0x732e6464610a3b5d\n"
".quad 0x2c31327225203233,0x362d202c35722520,0x20636f6c2e0a3b34,0x3120313637322032\n"
".quad 0x3436732e7476630a,0x6c7225203233732e,0x31327225202c3033,0x36732e6464610a3b\n"
".quad 0x2c31336c72252034,0x25202c366c722520,0x64610a3b30336c72,0x7225203436732e64\n"
".quad 0x6c7225202c32336c,0x36383633202c3133,0x20636f6c2e0a3b34,0x3120313637322032\n"
".quad 0x2e6f6c2e64616d0a,0x336c722520343673,0x32336c7225202c33,0x3531336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x25202c34336c7225,0x3233202c33336c72\n"
".quad 0x36732e7268730a3b,0x2c35336c72252034,0x202c34336c722520,0x636f6c2e0a3b3233\n"
".quad 0x2031363732203220,0x36622e6c68730a31,0x2c36336c72252034,0x202c35336c722520\n"
".quad 0x732e6464610a3b32,0x37336c7225203436,0x202c346c7225202c,0x6c0a3b36336c7225\n"
".quad 0x6c61626f6c672e64,0x366625203233662e,0x37336c72255b202c,0x732e6464610a3b5d\n"
".quad 0x38336c7225203436,0x2c34316c7225202c,0x0a3b30336c722520,0x203436732e646461\n"
".quad 0x25202c39336c7225,0x3534202c38336c72,0x6f6c2e0a3b363530,0x3236373220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c30346c,0x336c7225202c3933\n"
".quad 0x356c7225202c3531,0x36622e6c68730a3b,0x2c31346c72252034,0x202c30346c722520\n"
".quad 0x2e7268730a3b3233,0x346c722520343673,0x31346c7225202c32,0x6c2e0a3b3233202c\n"
".quad 0x363732203220636f,0x2e6c68730a312032,0x346c722520343662,0x32346c7225202c33\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x346c7225202c3434,0x3b33346c7225202c\n"
".quad 0x626f6c672e646c0a,0x25203233662e6c61,0x6c72255b202c3766,0x6464610a3b5d3434\n"
".quad 0x6c7225203436732e,0x326c7225202c3534,0x30336c7225202c32,0x36732e6464610a3b\n"
".quad 0x2c36346c72252034,0x202c35346c722520,0x2e0a3b3834323335,0x3732203220636f6c\n"
".quad 0x64616d0a31203336,0x203436732e6f6c2e,0x25202c37346c7225,0x7225202c36346c72\n"
".quad 0x7225202c3531336c,0x2e6c68730a3b356c,0x346c722520343662,0x37346c7225202c38\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c39346c,0x0a3b3233202c3834\n"
".quad 0x32203220636f6c2e,0x68730a3120333637,0x7225203436622e6c,0x6c7225202c30356c\n"
".quad 0x610a3b32202c3934,0x25203436732e6464,0x7225202c31356c72,0x356c7225202c346c\n"
".quad 0x6c672e646c0a3b30,0x3233662e6c61626f,0x255b202c38662520,0x610a3b5d31356c72\n"
".quad 0x25203233732e6464,0x357225202c353272,0x6c2e0a3b3436202c,0x363732203220636f\n"
".quad 0x2e7476630a312034,0x203233732e343673,0x25202c32356c7225,0x6464610a3b353272\n"
".quad 0x6c7225203436732e,0x366c7225202c3335,0x3b32356c7225202c,0x3436732e6464610a\n"
".quad 0x202c34356c722520,0x35202c33356c7225,0x6c2e0a3b34343337,0x363732203220636f\n"
".quad 0x2e64616d0a312034,0x25203436732e6f6c,0x7225202c35356c72,0x6c7225202c34356c\n"
".quad 0x6c7225202c353133,0x622e6c68730a3b35,0x36356c7225203436,0x2c35356c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x356c7225202c3735,0x2e0a3b3233202c36\n"
".quad 0x3732203220636f6c,0x6c68730a31203436,0x6c7225203436622e,0x356c7225202c3835\n"
".quad 0x64610a3b32202c37,0x7225203436732e64,0x6c7225202c39356c,0x38356c7225202c34\n"
".quad 0x6f6c672e646c0a3b,0x203233662e6c6162,0x72255b202c396625,0x64610a3b5d39356c\n"
".quad 0x7225203436732e64,0x6c7225202c30366c,0x356c7225202c3431,0x732e6464610a3b32\n"
".quad 0x31366c7225203436,0x2c30366c7225202c,0x0a3b363335353620,0x32203220636f6c2e\n"
".quad 0x616d0a3120353637,0x3436732e6f6c2e64,0x202c32366c722520,0x25202c31366c7225\n"
".quad 0x25202c3531336c72,0x6c68730a3b356c72,0x6c7225203436622e,0x366c7225202c3336\n"
".quad 0x730a3b3233202c32,0x25203436732e7268,0x7225202c34366c72,0x3b3233202c33366c\n"
".quad 0x203220636f6c2e0a,0x730a312035363732,0x25203436622e6c68,0x7225202c35366c72\n"
".quad 0x0a3b32202c34366c,0x203436732e646461,0x25202c36366c7225,0x6c7225202c346c72\n"
".quad 0x672e646c0a3b3536,0x33662e6c61626f6c,0x202c303166252032,0x3b5d36366c72255b\n"
".quad 0x203220636f6c2e0a,0x730a312036363732,0x732e71652e707465,0x2c31317025203233\n"
".quad 0x3336202c34722520,0x2031317025400a3b,0x3432424220617262,0x6f6c2e0a0a3b335f\n"
".quad 0x3036373220322063,0x752e7476630a3120,0x25203233752e3436,0x7225202c37366c72\n"
".quad 0x636f6c2e0a3b3931,0x2034363732203220,0x36752e7476630a31,0x7225203233752e34\n"
".quad 0x327225202c38366c,0x732e6464610a3b35,0x39366c7225203436,0x2c37366c7225202c\n"
".quad 0x0a3b38366c722520,0x203436732e646461,0x25202c30376c7225,0x3337202c39366c72\n"
".quad 0x7476630a3b383237,0x3233752e3436752e,0x202c31376c722520,0x2e646c0a3b387225\n"
".quad 0x36752e6d61726170,0x3431336c72252034,0x4c32315a5f5b202c,0x426279685f645f52\n"
".quad 0x665f536650434441,0x6d617261705f666d,0x6f6c2e0a3b5d335f,0x3736373220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c32376c,0x336c7225202c3037\n"
".quad 0x376c7225202c3431,0x61702e646c0a3b31,0x203436752e6d6172,0x202c3930336c7225\n"
".quad 0x5f524c32315a5f5b,0x4441426279685f64,0x666d665f53665043,0x305f6d617261705f\n"
".quad 0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c,0x6c7225202c33376c\n"
".quad 0x6c68730a3b393033,0x6c7225203436622e,0x376c7225202c3437,0x730a3b3233202c32\n"
".quad 0x25203436732e7268,0x7225202c35376c72,0x3b3233202c34376c,0x203220636f6c2e0a\n"
".quad 0x730a312037363732,0x25203436622e6c68,0x7225202c36376c72,0x0a3b32202c35376c\n"
".quad 0x203436732e646461,0x25202c37376c7225,0x7225202c33376c72,0x2e646c0a3b36376c\n"
".quad 0x662e6c61626f6c67,0x3735346625203233,0x37376c72255b202c,0x343242420a0a3b5d\n"
".quad 0x2e6464610a3a335f,0x3834722520323373,0x2d202c387225202c,0x20636f6c2e0a3b31\n"
".quad 0x3120393637322032,0x2e6e722e7476630a,0x203233732e323366,0x7225202c35396625\n"
".quad 0x2e6464610a3b3834,0x3738662520323366,0x202c35396625202c,0x3030303046336630\n"
".quad 0x2e7476630a3b3030,0x732e3233662e6e72,0x2c36396625203233,0x64610a3b35722520\n"
".quad 0x6625203233662e64,0x2c326625202c3739,0x3030304633663020,0x6464610a3b303030\n"
".quad 0x346625203233662e,0x2c37396625202c36,0x6d0a3b3639662520,0x25203233752e766f\n"
".quad 0x0a3b30202c343572,0x64322e786574090a,0x2e3233662e34762e,0x3366257b20323366\n"
".quad 0x2c36336625202c35,0x25202c3733662520,0x745b202c7d383366,0x31665f6665527865\n"
".quad 0x373866257b202c44,0x5d7d36346625202c,0x636f6c2e090a0a3b,0x2030373732203220\n"
".quad 0x33732e6464610a31,0x202c353572252032,0x0a3b31202c387225,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x357225202c383966,0x662e6464610a3b35,0x2c33396625203233\n"
".quad 0x30202c3839662520,0x3030303030463366,0x786574090a0a3b30,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x6625202c31346625,0x33346625202c3234,0x2c7d34346625202c\n"
".quad 0x6665527865745b20,0x257b202c4433665f,0x346625202c333966,0x2e090a0a3b5d7d36\n"
".quad 0x3732203220636f6c,0x7476630a31203137,0x2e3233662e6e722e,0x3939662520323373\n"
".quad 0x0a3b37317225202c,0x203233662e646461,0x25202c3030316625,0x336630202c393966\n"
".quad 0x3b30303030303046,0x3233662e6464610a,0x25202c3835662520,0x6625202c30303166\n"
".quad 0x6574090a0a3b3639,0x2e34762e64322e78,0x203233662e323366,0x25202c373466257b\n"
".quad 0x346625202c383466,0x7d30356625202c39,0x65527865745b202c,0x7b202c4435665f66\n"
".quad 0x6625202c37386625,0x090a0a3b5d7d3835,0x64322e786574090a,0x2e3233662e34762e\n"
".quad 0x3566257b20323366,0x2c34356625202c33,0x25202c3535662520,0x745b202c7d363566\n"
".quad 0x36665f6665527865,0x333966257b202c44,0x5d7d38356625202c,0x636f6c2e090a0a3b\n"
".quad 0x2033373732203220,0x6e722e7476630a31,0x3233732e3233662e,0x202c313031662520\n"
".quad 0x64610a3b39317225,0x6625203233662e64,0x316625202c323031,0x46336630202c3130\n"
".quad 0x0a3b303030303030,0x203233662e646461,0x6625202c30376625,0x396625202c323031\n"
".quad 0x786574090a0a3b36,0x662e34762e64322e,0x7b203233662e3233,0x6625202c39356625\n"
".quad 0x31366625202c3036,0x2c7d32366625202c,0x6665527865745b20,0x257b202c4437665f\n"
".quad 0x376625202c333966,0x0a090a0a3b5d7d30,0x2e64322e78657409,0x662e3233662e3476\n"
".quad 0x353666257b203233,0x202c36366625202c,0x6625202c37366625,0x65745b202c7d3836\n"
".quad 0x4438665f66655278,0x2c373866257b202c,0x3b5d7d3037662520,0x20636f6c2e090a0a\n"
".quad 0x3120353737322032,0x2e6e722e7476630a,0x203233732e323366,0x25202c3330316625\n"
".quad 0x6464610a3b353272,0x386625203233662e,0x2c37396625202c32,0x0a3b333031662520\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3766257b20323366,0x2c32376625202c31\n"
".quad 0x25202c3337662520,0x745b202c7d343766,0x31665f6665527865,0x3866257b202c4435\n"
".quad 0x7d32386625202c37,0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x202c373766257b20,0x6625202c38376625,0x30386625202c3937,0x527865745b202c7d\n"
".quad 0x2c443731665f6665,0x202c333966257b20,0x0a3b5d7d32386625,0x3220636f6c2e090a\n"
".quad 0x0a31203737373220,0x662e6e722e747663,0x25203233732e3233,0x7225202c34303166\n"
".quad 0x2e6464610a3b3132,0x3439662520323366,0x202c37396625202c,0x0a0a3b3430316625\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x333866257b203233,0x202c34386625202c\n"
".quad 0x6625202c35386625,0x65745b202c7d3638,0x3031665f66655278,0x373866257b202c44\n"
".quad 0x5d7d34396625202c,0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366\n"
".quad 0x25202c393866257b,0x396625202c303966,0x7d32396625202c31,0x65527865745b202c\n"
".quad 0x202c443231665f66,0x25202c333966257b,0x0a0a3b5d7d343966,0x203220636f6c2e09\n"
".quad 0x400a312031383732,0x2061726220317025,0x0a3b355f34324242,0x203220636f6c2e0a\n"
".quad 0x730a312035313832,0x25203233662e6275,0x6625202c35303166,0x31346625202c3533\n"
".quad 0x33662e6464610a3b,0x2c36303166252032,0x202c353031662520,0x75730a3b37346625\n"
".quad 0x6625203233662e62,0x316625202c373031,0x33356625202c3630,0x33662e6275730a3b\n"
".quad 0x2c38303166252032,0x202c373031662520,0x64610a3b39356625,0x6625203233662e64\n"
".quad 0x316625202c393031,0x35366625202c3830,0x33662e6464610a3b,0x2c30313166252032\n"
".quad 0x202c393031662520,0x75730a3b33386625,0x6625203233662e62,0x316625202c313131\n"
".quad 0x39386625202c3031,0x33662e6464610a3b,0x2c32313166252032,0x202c313131662520\n"
".quad 0x75730a3b31376625,0x6625203233662e62,0x316625202c333131,0x37376625202c3231\n"
".quad 0x33662e6275730a3b,0x2c34313166252032,0x6625202c34662520,0x662e6464610a3b35\n"
".quad 0x3531316625203233,0x2c3431316625202c,0x610a3b3734662520,0x25203233662e6464\n"
".quad 0x6625202c36313166,0x356625202c353131,0x662e6275730a3b33,0x3731316625203233\n"
".quad 0x2c3631316625202c,0x730a3b3935662520,0x25203233662e6275,0x6625202c38313166\n"
".quad 0x366625202c373131,0x662e6464610a3b35,0x3931316625203233,0x2c3831316625202c\n"
".quad 0x75730a3b37662520,0x6625203233662e62,0x316625202c303231,0x3b386625202c3931\n"
".quad 0x3233662e6464610a,0x202c313231662520,0x25202c3032316625,0x6275730a3b303166\n"
".quad 0x316625203233662e,0x32316625202c3232,0x3735346625202c31,0x33662e6464610a3b\n"
".quad 0x2c33323166252032,0x6625202c36662520,0x2e6464610a3b3338,0x3231662520323366\n"
".quad 0x3332316625202c34,0x610a3b376625202c,0x25203233662e6464,0x6625202c35323166\n"
".quad 0x386625202c343231,0x662e6464610a3b39,0x3632316625203233,0x2c3532316625202c\n"
".quad 0x75730a3b38662520,0x6625203233662e62,0x316625202c373231,0x3b396625202c3632\n"
".quad 0x3233662e6275730a,0x202c383231662520,0x25202c3732316625,0x6275730a3b313766\n"
".quad 0x316625203233662e,0x32316625202c3932,0x3b30316625202c38,0x3233662e6275730a\n"
".quad 0x202c303331662520,0x25202c3932316625,0x6275730a3b373766,0x316625203233662e\n"
".quad 0x33316625202c3133,0x3735346625202c30,0x33662e6275730a3b,0x2c32333166252032\n"
".quad 0x25202c3734662520,0x636f6c2e0a3b3366,0x2035313832203220,0x33662e6464610a31\n"
".quad 0x2c33333166252032,0x202c323331662520,0x64610a3b33356625,0x6625203233662e64\n"
".quad 0x316625202c343331,0x39356625202c3333,0x33662e6464610a3b,0x2c35333166252032\n"
".quad 0x202c343331662520,0x64610a3b35366625,0x6625203233662e64,0x316625202c363331\n"
".quad 0x33386625202c3533,0x33662e6464610a3b,0x2c37333166252032,0x202c363331662520\n"
".quad 0x6464610a3b376625,0x316625203233662e,0x33316625202c3833,0x3b39386625202c37\n"
".quad 0x3233662e6464610a,0x202c393331662520,0x25202c3833316625,0x2e6464610a3b3866\n"
".quad 0x3431662520323366,0x3933316625202c30,0x0a3b31376625202c,0x203233662e646461\n"
".quad 0x25202c3134316625,0x6625202c30343166,0x2e6464610a3b3031,0x3431662520323366\n"
".quad 0x3134316625202c32,0x0a3b37376625202c,0x203233662e646461,0x25202c3334316625\n"
".quad 0x6625202c32343166,0x6c756d0a3b373534,0x316625203233662e,0x32316625202c3434\n"
".quad 0x3232316625202c32,0x6e722e616d660a3b,0x316625203233662e,0x31316625202c3534\n"
".quad 0x3331316625202c33,0x3b3434316625202c,0x3233662e6c756d0a,0x202c363431662520\n"
".quad 0x25202c3133316625,0x6d660a3b31333166,0x3233662e6e722e61,0x202c373431662520\n"
".quad 0x25202c3133316625,0x6625202c31333166,0x6275730a3b353431,0x316625203233662e\n"
".quad 0x34316625202c3834,0x3734316625202c33,0x33662e6c756d0a3b,0x2c39343166252032\n"
".quad 0x30202c3533662520,0x3030303038304366,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x336625202c303531,0x303431346630202c,0x6625202c30303030,0x616d660a3b393431\n"
".quad 0x203233662e6e722e,0x25202c3135316625,0x30436630202c3466,0x202c303030303038\n"
".quad 0x660a3b3035316625,0x33662e6e722e616d,0x2c32353166252032,0x30202c3134662520\n"
".quad 0x3030303038304366,0x3135316625202c30,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x2c356625202c3335,0x3030383043663020,0x316625202c303030,0x2e6464610a3b3235\n"
".quad 0x3531662520323366,0x3335316625202c34,0x0a3b37346625202c,0x203233662e646461\n"
".quad 0x25202c3535316625,0x6625202c34353166,0x2e6464610a3b3335,0x3531662520323366\n"
".quad 0x3535316625202c36,0x0a3b39356625202c,0x203233662e646461,0x25202c3735316625\n"
".quad 0x6625202c36353166,0x2e616d660a3b3536,0x25203233662e6e72,0x6625202c38353166\n"
".quad 0x3830436630202c36,0x25202c3030303030,0x64610a3b37353166,0x6625203233662e64\n"
".quad 0x316625202c393531,0x33386625202c3835,0x33662e6464610a3b,0x2c30363166252032\n"
".quad 0x202c393531662520,0x6464610a3b376625,0x316625203233662e,0x36316625202c3136\n"
".quad 0x3b39386625202c30,0x3233662e6464610a,0x202c323631662520,0x25202c3136316625\n"
".quad 0x2e616d660a3b3866,0x25203233662e6e72,0x6625202c33363166,0x3830436630202c39\n"
".quad 0x25202c3030303030,0x64610a3b32363166,0x6625203233662e64,0x316625202c343631\n"
".quad 0x31376625202c3336,0x33662e6464610a3b,0x2c35363166252032,0x202c343631662520\n"
".quad 0x64610a3b30316625,0x6625203233662e64,0x316625202c363631,0x37376625202c3536\n"
".quad 0x33662e6464610a3b,0x2c37363166252032,0x202c363631662520,0x660a3b3735346625\n"
".quad 0x33662e6e722e616d,0x2c38363166252032,0x202c373431662520,0x3534314630346630\n"
".quad 0x36316625202c3431,0x662e6c756d0a3b37,0x3936316625203233,0x202c31346625202c\n"
".quad 0x3030304130346630,0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c30373166\n"
".quad 0x30436630202c3533,0x202c303030303041,0x660a3b3936316625,0x33662e6e722e616d\n"
".quad 0x2c31373166252032,0x202c333131662520,0x3535354446336630,0x37316625202c3535\n"
".quad 0x662e6c756d0a3b30,0x3237316625203233,0x30202c356625202c,0x3030303041303466\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x346625202c333731,0x304130436630202c\n"
".quad 0x6625202c30303030,0x616d660a3b323731,0x203233662e6e722e,0x25202c3437316625\n"
".quad 0x6630202c32323166,0x3535353535444633,0x3b3337316625202c,0x3233662e6c756d0a\n"
".quad 0x202c353731662520,0x346630202c396625,0x3b30303030304130,0x2e6e722e616d660a\n"
".quad 0x3731662520323366,0x202c366625202c36,0x3030304130436630,0x37316625202c3030\n"
".quad 0x722e616d660a3b35,0x6625203233662e6e,0x316625202c373731,0x46336630202c3133\n"
".quad 0x202c353535353544,0x610a3b3637316625,0x25203233662e6464,0x6625202c38373166\n"
".quad 0x35336625202c3533,0x33662e6275730a3b,0x2c39373166252032,0x202c383731662520\n"
".quad 0x6f6c2e0a3b346625,0x3531383220322063,0x662e6464610a3120,0x3038316625203233\n"
".quad 0x202c31346625202c,0x64610a3b31346625,0x6625203233662e64,0x316625202c313831\n"
".quad 0x38316625202c3937,0x662e6275730a3b30,0x3238316625203233,0x2c3138316625202c\n"
".quad 0x6c2e0a3b35662520,0x313832203220636f,0x2e6464610a312035,0x3831662520323366\n"
".quad 0x3238316625202c33,0x0a3b37346625202c,0x203233662e646461,0x25202c3438316625\n"
".quad 0x6625202c33383166,0x2e6464610a3b3335,0x3831662520323366,0x3438316625202c35\n"
".quad 0x0a3b39356625202c,0x203233662e646461,0x25202c3638316625,0x6625202c35383166\n"
".quad 0x2e6275730a3b3536,0x3831662520323366,0x3638316625202c37,0x2e0a3b366625202c\n"
".quad 0x3832203220636f6c,0x6464610a31203531,0x316625203233662e,0x38316625202c3838\n"
".quad 0x3b33386625202c37,0x3233662e766f6d0a,0x202c393831662520,0x3030303030436630\n"
".quad 0x636f6c2e0a3b3030,0x2035313832203220,0x6e722e616d660a31,0x316625203233662e\n"
".quad 0x2c376625202c3039,0x3030303043663020,0x316625202c303030,0x2e6464610a3b3838\n"
".quad 0x3931662520323366,0x3039316625202c31,0x0a3b39386625202c,0x662e6e722e616d66\n"
".quad 0x3239316625203233,0x30202c386625202c,0x3030303030304366,0x3139316625202c30\n"
".quad 0x33662e6275730a3b,0x2c33393166252032,0x202c323931662520,0x6f6c2e0a3b396625\n"
".quad 0x3531383220322063,0x662e6464610a3120,0x3439316625203233,0x2c3339316625202c\n"
".quad 0x660a3b3137662520,0x33662e6e722e616d,0x2c35393166252032,0x30202c3031662520\n"
".quad 0x3030303030304366,0x3439316625202c30,0x33662e6464610a3b,0x2c36393166252032\n"
".quad 0x202c353931662520,0x6d660a3b37376625,0x3233662e6e722e61,0x202c373931662520\n"
".quad 0x30202c3735346625,0x3030303030304366,0x3639316625202c30,0x33662e6464610a3b\n"
".quad 0x2c38393166252032,0x202c333131662520,0x660a3b3331316625,0x33662e6e722e616d\n"
".quad 0x2c39393166252032,0x202c323231662520,0x25202c3232316625,0x656e0a3b36343166\n"
".quad 0x6625203233662e67,0x316625202c303032,0x2e616d660a3b3939,0x25203233662e6e72\n"
".quad 0x6625202c31303266,0x316625202c383931,0x30326625202c3331,0x662e6275730a3b30\n"
".quad 0x3230326625203233,0x2c3739316625202c,0x0a3b313032662520,0x203233662e646461\n"
".quad 0x25202c3330326625,0x3b346625202c3466,0x2e6e722e616d660a,0x3032662520323366\n"
".quad 0x2c35336625202c34,0x3030383043663020,0x326625202c303030,0x2e616d660a3b3330\n"
".quad 0x25203233662e6e72,0x6625202c35303266,0x30436630202c3134,0x202c303030303038\n"
".quad 0x610a3b3430326625,0x25203233662e6464,0x6625202c36303266,0x0a3b356625202c35\n"
".quad 0x203233662e646461,0x25202c3730326625,0x6625202c35303266,0x6464610a3b363032\n"
".quad 0x326625203233662e,0x30326625202c3830,0x3b37346625202c37,0x3233662e6464610a\n"
".quad 0x202c393032662520,0x25202c3830326625,0x6464610a3b333566,0x326625203233662e\n"
".quad 0x30326625202c3031,0x3b39356625202c39,0x3233662e6464610a,0x202c313132662520\n"
".quad 0x25202c3031326625,0x6464610a3b353666,0x326625203233662e,0x2c366625202c3231\n"
".quad 0x64610a3b36662520,0x6625203233662e64,0x326625202c333132,0x31326625202c3131\n"
".quad 0x662e6464610a3b32,0x3431326625203233,0x2c3331326625202c,0x660a3b3338662520\n"
".quad 0x33662e6e722e616d,0x2c35313266252032,0x6630202c37662520,0x3030303030303043\n"
".quad 0x3b3431326625202c,0x3233662e6464610a,0x202c363132662520,0x25202c3531326625\n"
".quad 0x616d660a3b393866,0x203233662e6e722e,0x25202c3731326625,0x30436630202c3866\n"
".quad 0x202c303030303030,0x610a3b3631326625,0x25203233662e6464,0x6625202c38313266\n"
".quad 0x0a3b396625202c39,0x203233662e646461,0x25202c3931326625,0x6625202c37313266\n"
".quad 0x6464610a3b383132,0x326625203233662e,0x31326625202c3032,0x3b31376625202c39\n"
".quad 0x2e6e722e616d660a,0x3232662520323366,0x2c30316625202c31,0x3030303043663020\n"
".quad 0x326625202c303030,0x2e6464610a3b3032,0x3232662520323366,0x3132326625202c32\n"
".quad 0x0a3b37376625202c,0x662e6e722e616d66,0x3332326625203233,0x2c3735346625202c\n"
".quad 0x3030303043663020,0x326625202c303030,0x2e6464610a3b3232,0x3232662520323366\n"
".quad 0x202c346625202c34,0x6464610a3b356625,0x326625203233662e,0x32326625202c3532\n"
".quad 0x3b37346625202c34,0x3233662e6464610a,0x202c363232662520,0x25202c3532326625\n"
".quad 0x6464610a3b333566,0x326625203233662e,0x32326625202c3732,0x3b39356625202c36\n"
".quad 0x3233662e6464610a,0x202c383232662520,0x25202c3732326625,0x6275730a3b353666\n"
".quad 0x326625203233662e,0x32326625202c3932,0x0a3b366625202c38,0x203233662e627573\n"
".quad 0x25202c3033326625,0x6625202c39323266,0x2e6275730a3b3338,0x3332662520323366\n"
".quad 0x3033326625202c31,0x0a3b39386625202c,0x203233662e627573,0x25202c3233326625\n"
".quad 0x6625202c31333266,0x662e6275730a3b39,0x3333326625203233,0x2c3233326625202c\n"
".quad 0x730a3b3137662520,0x25203233662e6275,0x6625202c34333266,0x376625202c333332\n"
".quad 0x20636f6c2e0a3b37,0x3120353138322032,0x3233662e67656e0a,0x202c353332662520\n"
".quad 0x660a3b3133316625,0x33662e6e722e616d,0x2c36333266252032,0x202c353332662520\n"
".quad 0x25202c3133316625,0x75730a3b34343166,0x6625203233662e62,0x326625202c373332\n"
".quad 0x33326625202c3433,0x662e67656e0a3b36,0x3833326625203233,0x3b3630326625202c\n"
".quad 0x2e6e722e616d660a,0x3332662520323366,0x202c346625202c39,0x25202c3938316625\n"
".quad 0x64610a3b38333266,0x6625203233662e64,0x326625202c303432,0x37346625202c3933\n"
".quad 0x33662e6464610a3b,0x2c31343266252032,0x202c303432662520,0x64610a3b33356625\n"
".quad 0x6625203233662e64,0x326625202c323432,0x39356625202c3134,0x33662e6464610a3b\n"
".quad 0x2c33343266252032,0x202c323432662520,0x64610a3b35366625,0x6625203233662e64\n"
".quad 0x326625202c343432,0x31326625202c3334,0x662e6275730a3b32,0x3534326625203233\n"
".quad 0x2c3434326625202c,0x730a3b3338662520,0x25203233662e6275,0x6625202c36343266\n"
".quad 0x386625202c353432,0x20636f6c2e0a3b39,0x3120353138322032,0x3233662e6464610a\n"
".quad 0x202c373432662520,0x25202c3634326625,0x75730a3b38313266,0x6625203233662e62\n"
".quad 0x326625202c383432,0x31376625202c3734,0x33662e6275730a3b,0x2c39343266252032\n"
".quad 0x202c383432662520,0x75730a3b37376625,0x6625203233662e62,0x346625202c303532\n"
".quad 0x3b33356625202c37,0x203220636f6c2e0a,0x610a312035313832,0x25203233662e6464\n"
".quad 0x6625202c31353266,0x356625202c303532,0x662e6275730a3b39,0x3235326625203233\n"
".quad 0x2c3135326625202c,0x2e0a3b3536662520,0x3832203220636f6c,0x67656e0a31203531\n"
".quad 0x326625203233662e,0x31316625202c3335,0x722e616d660a3b33,0x6625203233662e6e\n"
".quad 0x326625202c343532,0x32316625202c3335,0x3235326625202c32,0x33662e6275730a3b\n"
".quad 0x2c35353266252032,0x6625202c37662520,0x662e6275730a3b38,0x3635326625203233\n"
".quad 0x2c3535326625202c,0x2e0a3b3031662520,0x3832203220636f6c,0x6464610a31203531\n"
".quad 0x326625203233662e,0x35326625202c3735,0x3735346625202c36,0x33662e67656e0a3b\n"
".quad 0x2c38353266252032,0x0a3b323231662520,0x662e6e722e616d66,0x3935326625203233\n"
".quad 0x2c3835326625202c,0x202c313331662520,0x730a3b3735326625,0x25203233662e6275\n"
".quad 0x6625202c30363266,0x39386625202c3338,0x33662e6275730a3b,0x2c31363266252032\n"
".quad 0x202c303632662520,0x6c2e0a3b31376625,0x313832203220636f,0x2e6464610a312035\n"
".quad 0x3632662520323366,0x3136326625202c32,0x0a3b37376625202c,0x662e6e722e616d66\n"
".quad 0x3336326625203233,0x2c3335326625202c,0x202c313331662520,0x730a3b3236326625\n"
".quad 0x25203233662e6275,0x6625202c34363266,0x356625202c303532,0x20636f6c2e0a3b39\n"
".quad 0x3120353138322032,0x3233662e6464610a,0x202c353632662520,0x25202c3436326625\n"
".quad 0x6275730a3b353666,0x326625203233662e,0x36326625202c3636,0x3b33386625202c35\n"
".quad 0x3233662e6464610a,0x202c373632662520,0x25202c3636326625,0x6275730a3b393866\n"
".quad 0x326625203233662e,0x36326625202c3836,0x3b31376625202c37,0x203220636f6c2e0a\n"
".quad 0x610a312035313832,0x25203233662e6464,0x6625202c39363266,0x376625202c383632\n"
".quad 0x662e67656e0a3b37,0x3037326625203233,0x0a3b33356625202c,0x203233662e627573\n"
".quad 0x25202c3137326625,0x6625202c30373266,0x636f6c2e0a3b3734,0x2035313832203220\n"
".quad 0x33662e6464610a31,0x2c32373266252032,0x202c313732662520,0x64610a3b39356625\n"
".quad 0x6625203233662e64,0x326625202c333732,0x35366625202c3237,0x33662e6464610a3b\n"
".quad 0x2c34373266252032,0x202c333732662520,0x6275730a3b376625,0x326625203233662e\n"
".quad 0x37326625202c3537,0x0a3b386625202c34,0x32203220636f6c2e,0x64610a3120353138\n"
".quad 0x6625203233662e64,0x326625202c363732,0x30316625202c3537,0x33662e6275730a3b\n"
".quad 0x2c37373266252032,0x202c363732662520,0x730a3b3735346625,0x25203233662e6275\n"
".quad 0x6625202c38373266,0x3b376625202c3338,0x203220636f6c2e0a,0x610a312035313832\n"
".quad 0x25203233662e6464,0x6625202c39373266,0x386625202c383732,0x662e6275730a3b39\n"
".quad 0x3038326625203233,0x2c3937326625202c,0x75730a3b38662520,0x6625203233662e62\n"
".quad 0x326625202c313832,0x31376625202c3038,0x3220636f6c2e0a3b,0x0a31203531383220\n"
".quad 0x203233662e646461,0x25202c3238326625,0x6625202c31383266,0x2e6275730a3b3031\n"
".quad 0x3832662520323366,0x3238326625202c33,0x0a3b37376625202c,0x32203220636f6c2e\n"
".quad 0x64610a3120353138,0x6625203233662e64,0x326625202c343832,0x35346625202c3338\n"
".quad 0x662e766f6d0a3b37,0x3538326625203233,0x303845336630202c,0x646c0a3b30303030\n"
".quad 0x662e6d617261702e,0x3635346625203233,0x4c32315a5f5b202c,0x426279685f645f52\n"
".quad 0x665f536650434441,0x6d617261705f666d,0x6f6c2e0a3b5d325f,0x3531383220322063\n"
".quad 0x662e6c756d0a3120,0x3638326625203233,0x2c3635346625202c,0x3030384533663020\n"
".quad 0x766f6d0a3b303030,0x326625203233662e,0x45336630202c3738,0x0a3b303030303030\n"
".quad 0x32203220636f6c2e,0x756d0a3120353138,0x6625203233662e6c,0x326625202c383832\n"
".quad 0x44336630202c3934,0x0a3b424141414132,0x203233662e766f6d,0x30202c3938326625\n"
".quad 0x4141414132443366,0x20636f6c2e0a3b42,0x3120353138322032,0x3233662e6c756d0a\n"
".quad 0x202c303932662520,0x30202c3635346625,0x4141414141443366,0x662e6c756d0a3b42\n"
".quad 0x3139326625203233,0x2c3332326625202c,0x3833364333663020,0x6c756d0a3b393345\n"
".quad 0x326625203233662e,0x35346625202c3239,0x4543336630202c36,0x6d0a3b3933453833\n"
".quad 0x25203233662e6c75,0x6625202c33393266,0x326625202c323032,0x2e6c756d0a3b3239\n"
".quad 0x3932662520323366,0x3137316625202c34,0x434343336630202c,0x6f6d0a3b44434343\n"
".quad 0x6625203233662e76,0x336630202c353932,0x3b44434343434343,0x203220636f6c2e0a\n"
".quad 0x6d0a312035313832,0x25203233662e6c75,0x6625202c36393266,0x336630202c343731\n"
".quad 0x3b44434343434343,0x3233662e6c756d0a,0x202c373932662520,0x30202c3737316625\n"
".quad 0x4343434343433366,0x662e6c756d0a3b44,0x3839326625203233,0x2c3836316625202c\n"
".quad 0x3032384233663020,0x6c756d0a3b313238,0x326625203233662e,0x39326625202c3939\n"
".quad 0x3431346630202c38,0x660a3b3030303030,0x33662e6e722e616d,0x2c30303366252032\n"
".quad 0x202c383431662520,0x4643333745426630,0x39326625202c4433,0x662e6275730a3b39\n"
".quad 0x3130336625203233,0x25202c336625202c,0x756d0a3b30303366,0x6625203233662e6c\n"
".quad 0x326625202c323033,0x30436630202c3839,0x0a3b303030303038,0x662e6e722e616d66\n"
".quad 0x3330336625203233,0x2c3834316625202c,0x4332424442663020,0x336625202c443242\n"
".quad 0x2e616d660a3b3230,0x25203233662e6e72,0x6625202c34303366,0x436630202c343932\n"
".quad 0x2c30303030303830,0x0a3b333033662520,0x662e6e722e616d66,0x3530336625203233\n"
".quad 0x2c3230326625202c,0x202c323932662520,0x610a3b3339326625,0x25203233662e6464\n"
".quad 0x6625202c36303366,0x336625202c343033,0x2e616d660a3b3530,0x25203233662e6e72\n"
".quad 0x6625202c37303366,0x436630202c313932,0x2c30303030303830,0x0a3b363033662520\n"
".quad 0x203233662e627573,0x25202c3830336625,0x336625202c353366,0x2e616d660a3b3730\n"
".quad 0x25203233662e6e72,0x6625202c39303366,0x436630202c363932,0x2c30303030303830\n"
".quad 0x0a3b333033662520,0x203233662e67656e,0x25202c3031336625,0x6d660a3b32303266\n"
".quad 0x3233662e6e722e61,0x202c313133662520,0x25202c3031336625,0x6625202c32393266\n"
".quad 0x6f6c2e0a3b393033,0x3531383220322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x326625202c323133,0x43336630202c3332,0x202c393345383336,0x610a3b3139326625\n"
".quad 0x25203233662e6464,0x6625202c33313366,0x336625202c313133,0x2e616d660a3b3231\n"
".quad 0x25203233662e6e72,0x6625202c34313366,0x326625202c373332,0x31336625202c3039\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x326625202c353133,0x30436630202c3838\n"
".quad 0x202c303030303030,0x730a3b3431336625,0x25203233662e6275,0x6625202c36313366\n"
".quad 0x3531336625202c34,0x6e722e616d660a3b,0x336625203233662e,0x39326625202c3731\n"
".quad 0x3830346630202c34,0x25202c3030303030,0x64610a3b33303366,0x6625203233662e64\n"
".quad 0x336625202c383133,0x30336625202c3731,0x722e616d660a3b35,0x6625203233662e6e\n"
".quad 0x326625202c393133,0x30436630202c3139,0x202c303030303038,0x730a3b3831336625\n"
".quad 0x25203233662e6275,0x6625202c30323366,0x31336625202c3134,0x722e616d660a3b39\n"
".quad 0x6625203233662e6e,0x326625202c313233,0x30346630202c3639,0x202c303030303038\n"
".quad 0x660a3b3330336625,0x33662e6e722e616d,0x2c32323366252032,0x202c303133662520\n"
".quad 0x25202c3239326625,0x6c2e0a3b31323366,0x313832203220636f,0x2e6464610a312035\n"
".quad 0x3233662520323366,0x3232336625202c33,0x3b3231336625202c,0x2e6e722e616d660a\n"
".quad 0x3233662520323366,0x3733326625202c34,0x2c3039326625202c,0x0a3b333233662520\n"
".quad 0x662e6e722e616d66,0x3532336625203233,0x2c3838326625202c,0x3030303043663020\n"
".quad 0x336625202c303030,0x2e6275730a3b3432,0x3233662520323366,0x202c356625202c36\n"
".quad 0x660a3b3532336625,0x33662e6e722e616d,0x2c37323366252032,0x202c383431662520\n"
".quad 0x3830323844336630,0x39326625202c3032,0x722e616d660a3b38,0x6625203233662e6e\n"
".quad 0x316625202c383233,0x43336630202c3137,0x202c444343434343,0x660a3b3732336625\n"
".quad 0x33662e6e722e616d,0x2c39323366252032,0x202c343731662520,0x4343434343336630\n"
".quad 0x32336625202c4443,0x722e616d660a3b38,0x6625203233662e6e,0x326625202c303333\n"
".quad 0x39326625202c3230,0x3932336625202c32,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x32326625202c3133,0x3643336630202c33,0x25202c3933453833,0x6d660a3b30333366\n"
".quad 0x3233662e6e722e61,0x202c323333662520,0x25202c3733326625,0x6625202c30393266\n"
".quad 0x616d660a3b313333,0x203233662e6e722e,0x25202c3333336625,0x6630202c39343266\n"
".quad 0x4241414141324433,0x3b3233336625202c,0x2e6e722e616d660a,0x3333662520323366\n"
".quad 0x3435326625202c34,0x303845336630202c,0x6625202c30303030,0x616d660a3b333333\n"
".quad 0x203233662e6e722e,0x25202c3533336625,0x6630202c39363266,0x3030303030304533\n"
".quad 0x3b3433336625202c,0x3233662e67656e0a,0x202c363333662520,0x660a3b3737326625\n"
".quad 0x33662e6e722e616d,0x2c37333366252032,0x202c363333662520,0x25202c3738326625\n"
".quad 0x6c2e0a3b35333366,0x313832203220636f,0x2e6275730a312035,0x3333662520323366\n"
".quad 0x2c37346625202c38,0x0a3b373333662520,0x203233662e67656e,0x25202c3933336625\n"
".quad 0x6d660a3b31373166,0x3233662e6e722e61,0x202c303433662520,0x25202c3933336625\n"
".quad 0x6625202c35393266,0x6f6c2e0a3b373233,0x3531383220322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x316625202c313433,0x43336630202c3437,0x202c444343434343\n"
".quad 0x660a3b3034336625,0x33662e6e722e616d,0x2c32343366252032,0x202c323032662520\n"
".quad 0x25202c3239326625,0x6d660a3b31343366,0x3233662e6e722e61,0x202c333433662520\n"
".quad 0x30202c3332326625,0x3345383336433366,0x3234336625202c39,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x33326625202c3434,0x3039326625202c37,0x3b3334336625202c\n"
".quad 0x2e6e722e616d660a,0x3433662520323366,0x3934326625202c35,0x413244336630202c\n"
".quad 0x6625202c42414141,0x67656e0a3b343433,0x336625203233662e,0x35326625202c3634\n"
".quad 0x722e616d660a3b34,0x6625203233662e6e,0x336625202c373433,0x38326625202c3634\n"
".quad 0x3534336625202c35,0x33662e67656e0a3b,0x2c38343366252032,0x0a3b393632662520\n"
".quad 0x662e6e722e616d66,0x3934336625203233,0x2c3834336625202c,0x202c373832662520\n"
".quad 0x660a3b3734336625,0x33662e6e722e616d,0x2c30353366252032,0x202c363333662520\n"
".quad 0x25202c3738326625,0x6c2e0a3b39343366,0x313832203220636f,0x2e6275730a312035\n"
".quad 0x3533662520323366,0x2c33356625202c31,0x0a3b303533662520,0x203233662e67656e\n"
".quad 0x25202c3235336625,0x6d660a3b34373166,0x3233662e6e722e61,0x202c333533662520\n"
".quad 0x25202c3235336625,0x6625202c35393266,0x6f6c2e0a3b303433,0x3531383220322063\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x326625202c343533,0x39326625202c3230\n"
".quad 0x3335336625202c32,0x6e722e616d660a3b,0x336625203233662e,0x32326625202c3535\n"
".quad 0x3643336630202c33,0x25202c3933453833,0x6d660a3b34353366,0x3233662e6e722e61\n"
".quad 0x202c363533662520,0x25202c3733326625,0x6625202c30393266,0x616d660a3b353533\n"
".quad 0x203233662e6e722e,0x25202c3735336625,0x6630202c39343266,0x4241414141324433\n"
".quad 0x3b3635336625202c,0x2e6e722e616d660a,0x3533662520323366,0x3435326625202c38\n"
".quad 0x303845336630202c,0x6625202c30303030,0x616d660a3b373533,0x203233662e6e722e\n"
".quad 0x25202c3935336625,0x6625202c38343366,0x336625202c373832,0x636f6c2e0a3b3835\n"
".quad 0x2035313832203220,0x6e722e616d660a31,0x336625203233662e,0x37326625202c3036\n"
".quad 0x3045336630202c37,0x25202c3030303030,0x75730a3b39353366,0x6625203233662e62\n"
".quad 0x356625202c313633,0x3036336625202c39,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x35336625202c3236,0x3539326625202c32,0x3b3832336625202c,0x203220636f6c2e0a\n"
".quad 0x660a312035313832,0x33662e6e722e616d,0x2c33363366252032,0x202c323032662520\n"
".quad 0x25202c3239326625,0x6d660a3b32363366,0x3233662e6e722e61,0x202c343633662520\n"
".quad 0x30202c3332326625,0x3345383336433366,0x3336336625202c39,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x33326625202c3536,0x3039326625202c37,0x3b3436336625202c\n"
".quad 0x2e6e722e616d660a,0x3633662520323366,0x3934326625202c36,0x413244336630202c\n"
".quad 0x6625202c42414141,0x616d660a3b353633,0x203233662e6e722e,0x25202c3736336625\n"
".quad 0x6625202c36343366,0x336625202c353832,0x636f6c2e0a3b3636,0x2035313832203220\n"
".quad 0x6e722e616d660a31,0x336625203233662e,0x36326625202c3836,0x3045336630202c39\n"
".quad 0x25202c3030303030,0x6d660a3b37363366,0x3233662e6e722e61,0x202c393633662520\n"
".quad 0x30202c3737326625,0x3030303030453366,0x3836336625202c30,0x33662e6275730a3b\n"
".quad 0x2c30373366252032,0x25202c3536662520,0x6d660a3b39363366,0x3233662e6e722e61\n"
".quad 0x202c313733662520,0x30202c3739326625,0x3030303038304366,0x3330336625202c30\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x31336625202c3237,0x3239326625202c30\n"
".quad 0x3b3137336625202c,0x203220636f6c2e0a,0x610a312035313832,0x25203233662e6464\n"
".quad 0x6625202c33373366,0x336625202c323733,0x2e67656e0a3b3231,0x3733662520323366\n"
".quad 0x3733326625202c34,0x6e722e616d660a3b,0x336625203233662e,0x37336625202c3537\n"
".quad 0x3039326625202c34,0x3b3337336625202c,0x203220636f6c2e0a,0x660a312035313832\n"
".quad 0x33662e6e722e616d,0x2c36373366252032,0x202c393432662520,0x4141413244336630\n"
".quad 0x38326625202c4241,0x662e6464610a3b38,0x3737336625203233,0x2c3537336625202c\n"
".quad 0x0a3b363733662520,0x203233662e627573,0x25202c3837336625,0x37336625202c3666\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x316625202c393733,0x43336630202c3737\n"
".quad 0x202c444343434343,0x660a3b3832336625,0x33662e6e722e616d,0x2c30383366252032\n"
".quad 0x202c323032662520,0x25202c3239326625,0x6d660a3b39373366,0x3233662e6e722e61\n"
".quad 0x202c313833662520,0x30202c3332326625,0x3345383336433366,0x3038336625202c39\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x37336625202c3238,0x3039326625202c34\n"
".quad 0x3b3138336625202c,0x3233662e67656e0a,0x202c333833662520,0x660a3b3934326625\n"
".quad 0x33662e6e722e616d,0x2c34383366252032,0x202c333833662520,0x25202c3938326625\n"
".quad 0x6c2e0a3b32383366,0x313832203220636f,0x2e616d660a312035,0x25203233662e6e72\n"
".quad 0x6625202c35383366,0x326625202c333632,0x38336625202c3638,0x722e616d660a3b34\n"
".quad 0x6625203233662e6e,0x336625202c363833,0x38326625202c3834,0x3538336625202c37\n"
".quad 0x3220636f6c2e0a3b,0x0a31203531383220,0x662e6e722e616d66,0x3738336625203233\n"
".quad 0x2c3438326625202c,0x3030304533663020,0x336625202c303030,0x2e6275730a3b3638\n"
".quad 0x3833662520323366,0x2c33386625202c38,0x0a3b373833662520,0x662e6e722e616d66\n"
".quad 0x3938336625203233,0x2c3437316625202c,0x4343434333663020,0x336625202c444343\n"
".quad 0x2e616d660a3b3732,0x25203233662e6e72,0x6625202c30393366,0x336630202c373731\n"
".quad 0x2c44434343434343,0x0a3b393833662520,0x662e6e722e616d66,0x3139336625203233\n"
".quad 0x2c3339326625202c,0x3030303043663020,0x336625202c303030,0x2e616d660a3b3039\n"
".quad 0x25203233662e6e72,0x6625202c32393366,0x436630202c313932,0x2c30303030303030\n"
".quad 0x0a3b313933662520,0x662e6e722e616d66,0x3339336625203233,0x2c3935326625202c\n"
".quad 0x3030384533663020,0x336625202c303030,0x2e616d660a3b3239,0x25203233662e6e72\n"
".quad 0x6625202c34393366,0x336630202c373732,0x2c30303030303045,0x0a3b333933662520\n"
".quad 0x203233662e67656e,0x25202c3539336625,0x6d660a3b34383266,0x3233662e6e722e61\n"
".quad 0x202c363933662520,0x25202c3539336625,0x6625202c37383266,0x6f6c2e0a3b343933\n"
".quad 0x3531383220322063,0x662e6275730a3120,0x3739336625203233,0x25202c376625202c\n"
".quad 0x6d660a3b36393366,0x3233662e6e722e61,0x202c383933662520,0x30202c3737316625\n"
".quad 0x4343434343433366,0x3034336625202c44,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x30326625202c3939,0x3239326625202c32,0x3b3839336625202c,0x2e6e722e616d660a\n"
".quad 0x3034662520323366,0x3332326625202c30,0x333643336630202c,0x6625202c39334538\n"
".quad 0x616d660a3b393933,0x203233662e6e722e,0x25202c3130346625,0x6625202c34373366\n"
".quad 0x346625202c303932,0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c32303466\n"
".quad 0x326625202c333833,0x30346625202c3938,0x662e67656e0a3b31,0x3330346625203233\n"
".quad 0x3b3336326625202c,0x2e6e722e616d660a,0x3034662520323366,0x3330346625202c34\n"
".quad 0x2c3638326625202c,0x0a3b323034662520,0x32203220636f6c2e,0x6d660a3120353138\n"
".quad 0x3233662e6e722e61,0x202c353034662520,0x30202c3936326625,0x3030303030453366\n"
".quad 0x3430346625202c30,0x6e722e616d660a3b,0x346625203233662e,0x38326625202c3630\n"
".quad 0x3045336630202c34,0x25202c3030303030,0x75730a3b35303466,0x6625203233662e62\n"
".quad 0x386625202c373034,0x3630346625202c39,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x35336625202c3830,0x3539326625202c32,0x3b3732336625202c,0x203220636f6c2e0a\n"
".quad 0x660a312035313832,0x33662e6e722e616d,0x2c39303466252032,0x202c373731662520\n"
".quad 0x4343434343336630,0x30346625202c4443,0x722e616d660a3b38,0x6625203233662e6e\n"
".quad 0x326625202c303134,0x30436630202c3339,0x202c303030303030,0x660a3b3930346625\n"
".quad 0x33662e6e722e616d,0x2c31313466252032,0x202c313932662520,0x3030303030436630\n"
".quad 0x31346625202c3030,0x662e67656e0a3b30,0x3231346625203233,0x3b3935326625202c\n"
".quad 0x2e6e722e616d660a,0x3134662520323366,0x3231346625202c33,0x2c3538326625202c\n"
".quad 0x0a3b313134662520,0x662e6e722e616d66,0x3431346625203233,0x2c3633336625202c\n"
".quad 0x202c373832662520,0x660a3b3331346625,0x33662e6e722e616d,0x2c35313466252032\n"
".quad 0x202c353933662520,0x25202c3738326625,0x6c2e0a3b34313466,0x313832203220636f\n"
".quad 0x2e6275730a312035,0x3134662520323366,0x202c386625202c36,0x660a3b3531346625\n"
".quad 0x33662e6e722e616d,0x2c37313466252032,0x202c373932662520,0x3030303830346630\n"
".quad 0x30336625202c3030,0x722e616d660a3b33,0x6625203233662e6e,0x336625202c383134\n"
".quad 0x39326625202c3031,0x3731346625202c32,0x3220636f6c2e0a3b,0x0a31203531383220\n"
".quad 0x203233662e646461,0x25202c3931346625,0x6625202c38313466,0x616d660a3b323133\n"
".quad 0x203233662e6e722e,0x25202c3032346625,0x6625202c34373366,0x346625202c303932\n"
".quad 0x636f6c2e0a3b3931,0x2035313832203220,0x33662e6464610a31,0x2c31323466252032\n"
".quad 0x202c303234662520,0x730a3b3637336625,0x25203233662e6275,0x6625202c32323466\n"
".quad 0x3132346625202c39,0x33662e67656e0a3b,0x2c33323466252032,0x0a3b373731662520\n"
".quad 0x662e6e722e616d66,0x3432346625203233,0x2c3332346625202c,0x202c353932662520\n"
".quad 0x2e0a3b3832336625,0x3832203220636f6c,0x616d660a31203531,0x203233662e6e722e\n"
".quad 0x25202c3532346625,0x6625202c32303266,0x346625202c323932,0x2e616d660a3b3432\n"
".quad 0x25203233662e6e72,0x6625202c36323466,0x336630202c333232,0x2c39334538333643\n"
".quad 0x0a3b353234662520,0x662e6e722e616d66,0x3732346625203233,0x2c3437336625202c\n"
".quad 0x202c303932662520,0x660a3b3632346625,0x33662e6e722e616d,0x2c38323466252032\n"
".quad 0x202c333833662520,0x25202c3938326625,0x6d660a3b37323466,0x3233662e6e722e61\n"
".quad 0x202c393234662520,0x25202c3330346625,0x6625202c36383266,0x616d660a3b383234\n"
".quad 0x203233662e6e722e,0x25202c3033346625,0x6625202c38343366,0x346625202c373832\n"
".quad 0x2e616d660a3b3932,0x25203233662e6e72,0x6625202c31333466,0x326625202c353933\n"
".quad 0x33346625202c3738,0x20636f6c2e0a3b30,0x3120353138322032,0x3233662e6275730a\n"
".quad 0x202c323334662520,0x6625202c31376625,0x616d660a3b313334,0x203233662e6e722e\n"
".quad 0x25202c3333346625,0x6625202c33323466,0x336625202c353932,0x636f6c2e0a3b3938\n"
".quad 0x2035313832203220,0x6e722e616d660a31,0x346625203233662e,0x39326625202c3433\n"
".quad 0x3030436630202c33,0x25202c3030303030,0x6d660a3b33333466,0x3233662e6e722e61\n"
".quad 0x202c353334662520,0x30202c3139326625,0x3030303030304366,0x3433346625202c30\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x31346625202c3633,0x3538326625202c32\n"
".quad 0x3b3533346625202c,0x203220636f6c2e0a,0x660a312035313832,0x33662e6e722e616d\n"
".quad 0x2c37333466252032,0x202c373732662520,0x3030303045336630,0x33346625202c3030\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x326625202c383334,0x45336630202c3438\n"
".quad 0x202c303030303030,0x730a3b3733346625,0x25203233662e6275,0x6625202c39333466\n"
".quad 0x33346625202c3031,0x722e616d660a3b38,0x6625203233662e6e,0x346625202c303434\n"
".quad 0x39326625202c3332,0x3034336625202c35,0x3220636f6c2e0a3b,0x0a31203531383220\n"
".quad 0x662e6e722e616d66,0x3134346625203233,0x2c3230326625202c,0x202c323932662520\n"
".quad 0x660a3b3034346625,0x33662e6e722e616d,0x2c32343466252032,0x202c333232662520\n"
".quad 0x4538333643336630,0x34346625202c3933,0x722e616d660a3b31,0x6625203233662e6e\n"
".quad 0x336625202c333434,0x39326625202c3437,0x3234346625202c30,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x38336625202c3434,0x3938326625202c33,0x3b3334346625202c\n"
".quad 0x203220636f6c2e0a,0x660a312035313832,0x33662e6e722e616d,0x2c35343466252032\n"
".quad 0x202c333632662520,0x25202c3638326625,0x6d660a3b34343466,0x3233662e6e722e61\n"
".quad 0x202c363434662520,0x30202c3936326625,0x3030303030453366,0x3534346625202c30\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x39336625202c3734,0x3738326625202c35\n"
".quad 0x3b3634346625202c,0x203220636f6c2e0a,0x730a312035313832,0x25203233662e6275\n"
".quad 0x6625202c38343466,0x34346625202c3737,0x722e616d660a3b37,0x6625203233662e6e\n"
".quad 0x346625202c393434,0x39326625202c3332,0x3830346625202c35,0x3220636f6c2e0a3b\n"
".quad 0x0a31203531383220,0x662e6e722e616d66,0x3035346625203233,0x2c3339326625202c\n"
".quad 0x3030303043663020,0x346625202c303030,0x2e616d660a3b3934,0x25203233662e6e72\n"
".quad 0x6625202c31353466,0x436630202c313932,0x2c30303030303030,0x0a3b303534662520\n"
".quad 0x662e6e722e616d66,0x3235346625203233,0x2c3935326625202c,0x3030384533663020\n"
".quad 0x346625202c303030,0x2e616d660a3b3135,0x25203233662e6e72,0x6625202c33353466\n"
".quad 0x326625202c363333,0x35346625202c3738,0x20636f6c2e0a3b32,0x3120353138322032\n"
".quad 0x2e6e722e616d660a,0x3534662520323366,0x3438326625202c34,0x303045336630202c\n"
".quad 0x6625202c30303030,0x6275730a3b333534,0x346625203233662e,0x35346625202c3535\n"
".quad 0x3435346625202c37,0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3331336c72\n"
".quad 0x645f524c32315a5f,0x434441426279685f,0x5f666d665f536650,0x5d335f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x0a31203035373220,0x732e6f6c2e64616d,0x32386c7225203436\n"
".quad 0x202c396c7225202c,0x202c3331336c7225,0x646c0a3b356c7225,0x752e6d617261702e\n"
".quad 0x31336c7225203436,0x32315a5f5b202c31,0x6279685f645f524c,0x5f53665043444142\n"
".quad 0x617261705f666d66,0x76630a3b5d315f6d,0x6c672e6f742e6174,0x3436752e6c61626f\n"
".quad 0x202c33386c722520,0x0a3b3131336c7225,0x203436622e6c6873,0x25202c34386c7225\n"
".quad 0x3233202c32386c72,0x36732e7268730a3b,0x2c35386c72252034,0x202c34386c722520\n"
".quad 0x636f6c2e0a3b3233,0x2039313832203220,0x36622e6c68730a31,0x2c36386c72252034\n"
".quad 0x202c35386c722520,0x732e6464610a3b32,0x37386c7225203436,0x2c33386c7225202c\n"
".quad 0x0a3b36386c722520,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d37386c72\n"
".quad 0x64610a3b31303366,0x7225203436732e64,0x6c7225202c38386c,0x3b36393034202c39\n"
".quad 0x203220636f6c2e0a,0x6d0a312032383732,0x36732e6f6c2e6461,0x2c39386c72252034\n"
".quad 0x202c38386c722520,0x202c3331336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x6c7225202c30396c,0x0a3b3233202c3938,0x203436732e726873,0x25202c31396c7225\n"
".quad 0x3233202c30396c72,0x3220636f6c2e0a3b,0x0a31203238373220,0x203436622e6c6873\n"
".quad 0x25202c32396c7225,0x3b32202c31396c72,0x3436732e6464610a,0x202c33396c722520\n"
".quad 0x25202c33386c7225,0x6c2e0a3b32396c72,0x323832203220636f,0x672e74730a312030\n"
".quad 0x33662e6c61626f6c,0x33396c72255b2032,0x3830336625202c5d,0x36732e6464610a3b\n"
".quad 0x2c34396c72252034,0x38202c396c722520,0x6f6c2e0a3b323931,0x3338373220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c35396c,0x336c7225202c3439\n"
".quad 0x356c7225202c3331,0x36622e6c68730a3b,0x2c36396c72252034,0x202c35396c722520\n"
".quad 0x2e7268730a3b3233,0x396c722520343673,0x36396c7225202c37,0x6c2e0a3b3233202c\n"
".quad 0x383732203220636f,0x2e6c68730a312033,0x396c722520343662,0x37396c7225202c38\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x386c7225202c3939,0x38396c7225202c33\n"
".quad 0x3220636f6c2e0a3b,0x0a31203132383220,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x25202c5d39396c72,0x64610a3b36313366,0x7225203436732e64,0x7225202c3030316c\n"
".quad 0x38323231202c396c,0x20636f6c2e0a3b38,0x3120343837322032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3130,0x336c7225202c3030,0x356c7225202c3331\n"
".quad 0x36622e6c68730a3b,0x3230316c72252034,0x3130316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3330316c,0x3233202c3230316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203438373220,0x203436622e6c6873,0x202c3430316c7225,0x202c3330316c7225\n"
".quad 0x732e6464610a3b32,0x30316c7225203436,0x33386c7225202c35,0x3430316c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203232383220,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3530316c72,0x610a3b3032336625,0x25203436732e6464,0x25202c3630316c72\n"
".quad 0x333631202c396c72,0x636f6c2e0a3b3438,0x2035383732203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c373031,0x6c7225202c363031,0x6c7225202c333133\n"
".quad 0x622e6c68730a3b35,0x30316c7225203436,0x30316c7225202c38,0x730a3b3233202c37\n"
".quad 0x25203436732e7268,0x25202c3930316c72,0x33202c3830316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120353837322032,0x3436622e6c68730a,0x2c3031316c722520,0x2c3930316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x386c7225202c3131,0x31316c7225202c33\n"
".quad 0x20636f6c2e0a3b30,0x3120333238322032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3131316c7225,0x0a3b363233662520,0x203436732e646461,0x202c3231316c7225\n"
".quad 0x3032202c396c7225,0x6f6c2e0a3b303834,0x3638373220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3331316c,0x7225202c3231316c,0x7225202c3331336c\n"
".quad 0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3431,0x0a3b3233202c3331\n"
".quad 0x203436732e726873,0x202c3531316c7225,0x202c3431316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2036383732203220,0x36622e6c68730a31,0x3631316c72252034,0x3531316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c373131,0x316c7225202c3338\n"
".quad 0x636f6c2e0a3b3631,0x2034323832203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x5d3731316c72255b,0x3b3833336625202c,0x3436732e6464610a,0x2c3831316c722520\n"
".quad 0x32202c396c722520,0x6c2e0a3b36373534,0x383732203220636f,0x2e64616d0a312037\n"
".quad 0x25203436732e6f6c,0x25202c3931316c72,0x25202c3831316c72,0x25202c3331336c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c303231,0x3b3233202c393131\n"
".quad 0x3436732e7268730a,0x2c3132316c722520,0x2c3032316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3738373220322063,0x622e6c68730a3120,0x32316c7225203436,0x32316c7225202c32\n"
".quad 0x64610a3b32202c31,0x7225203436732e64,0x7225202c3332316c,0x6c7225202c33386c\n"
".quad 0x6f6c2e0a3b323231,0x3532383220322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3332316c72255b20,0x3135336625202c5d,0x36732e6464610a3b,0x3432316c72252034\n"
".quad 0x202c396c7225202c,0x2e0a3b3237363832,0x3732203220636f6c,0x64616d0a31203838\n"
".quad 0x203436732e6f6c2e,0x202c3532316c7225,0x202c3432316c7225,0x202c3331336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3632316c,0x3233202c3532316c\n"
".quad 0x36732e7268730a3b,0x3732316c72252034,0x3632316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x383732203220636f,0x2e6c68730a312038,0x316c722520343662,0x316c7225202c3832\n"
".quad 0x610a3b32202c3732,0x25203436732e6464,0x25202c3932316c72,0x7225202c33386c72\n"
".quad 0x6c2e0a3b3832316c,0x323832203220636f,0x672e74730a312036,0x33662e6c61626f6c\n"
".quad 0x32316c72255b2032,0x36336625202c5d39,0x732e6464610a3b31,0x33316c7225203436\n"
".quad 0x2c396c7225202c30,0x0a3b383637323320,0x32203220636f6c2e,0x616d0a3120393837\n"
".quad 0x3436732e6f6c2e64,0x2c3133316c722520,0x2c3033316c722520,0x2c3331336c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3233316c72,0x33202c3133316c72\n"
".quad 0x732e7268730a3b32,0x33316c7225203436,0x33316c7225202c33,0x2e0a3b3233202c32\n"
".quad 0x3732203220636f6c,0x6c68730a31203938,0x6c7225203436622e,0x6c7225202c343331\n"
".quad 0x0a3b32202c333331,0x203436732e646461,0x202c3533316c7225,0x25202c33386c7225\n"
".quad 0x2e0a3b3433316c72,0x3832203220636f6c,0x2e74730a31203732,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x336625202c5d3533,0x2e6464610a3b3037,0x316c722520343673\n"
".quad 0x396c7225202c3633,0x3b3436383633202c,0x203220636f6c2e0a,0x6d0a312030393732\n"
".quad 0x36732e6f6c2e6461,0x3733316c72252034,0x3633316c7225202c,0x3331336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3833316c7225,0x202c3733316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3933,0x0a3b3233202c3833\n"
".quad 0x32203220636f6c2e,0x68730a3120303937,0x7225203436622e6c,0x7225202c3034316c\n"
".quad 0x3b32202c3933316c,0x3436732e6464610a,0x2c3134316c722520,0x202c33386c722520\n"
".quad 0x0a3b3034316c7225,0x32203220636f6c2e,0x74730a3120383238,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d313431,0x6464610a3b383733,0x6c7225203436732e\n"
".quad 0x6c7225202c323431,0x3036393034202c39,0x3220636f6c2e0a3b,0x0a31203139373220\n"
".quad 0x732e6f6c2e64616d,0x34316c7225203436,0x34316c7225202c33,0x31336c7225202c32\n"
".quad 0x3b356c7225202c33,0x3436622e6c68730a,0x2c3434316c722520,0x2c3334316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c353431,0x3b3233202c343431\n"
".quad 0x203220636f6c2e0a,0x730a312031393732,0x25203436622e6c68,0x25202c3634316c72\n"
".quad 0x32202c3534316c72,0x36732e6464610a3b,0x3734316c72252034,0x2c33386c7225202c\n"
".quad 0x3b3634316c722520,0x203220636f6c2e0a,0x730a312039323832,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3734316c,0x64610a3b38383366,0x7225203436732e64\n"
".quad 0x7225202c3834316c,0x35303534202c396c,0x20636f6c2e0a3b36,0x3120323937322032\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3934,0x336c7225202c3834\n"
".quad 0x356c7225202c3331,0x36622e6c68730a3b,0x3035316c72252034,0x3934316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3135316c,0x3233202c3035316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203239373220,0x203436622e6c6873,0x202c3235316c7225\n"
".quad 0x202c3135316c7225,0x732e6464610a3b32,0x35316c7225203436,0x33386c7225202c33\n"
".quad 0x3235316c7225202c,0x3220636f6c2e0a3b,0x0a31203033383220,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3335316c72,0x610a3b3739336625,0x25203436732e6464\n"
".quad 0x25202c3435316c72,0x313934202c396c72,0x636f6c2e0a3b3235,0x2033393732203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c353531,0x6c7225202c343531\n"
".quad 0x6c7225202c333133,0x622e6c68730a3b35,0x35316c7225203436,0x35316c7225202c36\n"
".quad 0x730a3b3233202c35,0x25203436732e7268,0x25202c3735316c72,0x33202c3635316c72\n"
".quad 0x20636f6c2e0a3b32,0x3120333937322032,0x3436622e6c68730a,0x2c3835316c722520\n"
".quad 0x2c3735316c722520,0x2e6464610a3b3220,0x316c722520343673,0x386c7225202c3935\n"
".quad 0x35316c7225202c33,0x20636f6c2e0a3b38,0x3120313338322032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3935316c7225,0x0a3b373034662520,0x203436732e646461\n"
".quad 0x202c3036316c7225,0x3335202c396c7225,0x6f6c2e0a3b383432,0x3439373220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3136316c,0x7225202c3036316c\n"
".quad 0x7225202c3331336c,0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3236\n"
".quad 0x0a3b3233202c3136,0x203436732e726873,0x202c3336316c7225,0x202c3236316c7225\n"
".quad 0x636f6c2e0a3b3233,0x2034393732203220,0x36622e6c68730a31,0x3436316c72252034\n"
".quad 0x3336316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c353631\n"
".quad 0x316c7225202c3338,0x636f6c2e0a3b3436,0x2032333832203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x5d3536316c72255b,0x3b3631346625202c,0x3436732e6464610a\n"
".quad 0x2c3636316c722520,0x35202c396c722520,0x6c2e0a3b34343337,0x393732203220636f\n"
".quad 0x2e64616d0a312035,0x25203436732e6f6c,0x25202c3736316c72,0x25202c3636316c72\n"
".quad 0x25202c3331336c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c383631\n"
".quad 0x3b3233202c373631,0x3436732e7268730a,0x2c3936316c722520,0x2c3836316c722520\n"
".quad 0x6f6c2e0a3b323320,0x3539373220322063,0x622e6c68730a3120,0x37316c7225203436\n"
".quad 0x36316c7225202c30,0x64610a3b32202c39,0x7225203436732e64,0x7225202c3137316c\n"
".quad 0x6c7225202c33386c,0x6f6c2e0a3b303731,0x3333383220322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x3137316c72255b20,0x3232346625202c5d,0x36732e6464610a3b\n"
".quad 0x3237316c72252034,0x202c396c7225202c,0x2e0a3b3034343136,0x3732203220636f6c\n"
".quad 0x64616d0a31203639,0x203436732e6f6c2e,0x202c3337316c7225,0x202c3237316c7225\n"
".quad 0x202c3331336c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3437316c\n"
".quad 0x3233202c3337316c,0x36732e7268730a3b,0x3537316c72252034,0x3437316c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x393732203220636f,0x2e6c68730a312036,0x316c722520343662\n"
".quad 0x316c7225202c3637,0x610a3b32202c3537,0x25203436732e6464,0x25202c3737316c72\n"
".quad 0x7225202c33386c72,0x6c2e0a3b3637316c,0x333832203220636f,0x672e74730a312034\n"
".quad 0x33662e6c61626f6c,0x37316c72255b2032,0x33346625202c5d37,0x732e6464610a3b32\n"
".quad 0x37316c7225203436,0x2c396c7225202c38,0x0a3b363335353620,0x32203220636f6c2e\n"
".quad 0x616d0a3120373937,0x3436732e6f6c2e64,0x2c3937316c722520,0x2c3837316c722520\n"
".quad 0x2c3331336c722520,0x730a3b356c722520,0x25203436622e6c68,0x25202c3038316c72\n"
".quad 0x33202c3937316c72,0x732e7268730a3b32,0x38316c7225203436,0x38316c7225202c31\n"
".quad 0x2e0a3b3233202c30,0x3732203220636f6c,0x6c68730a31203739,0x6c7225203436622e\n"
".quad 0x6c7225202c323831,0x0a3b32202c313831,0x203436732e646461,0x202c3338316c7225\n"
".quad 0x25202c33386c7225,0x2e0a3b3238316c72,0x3832203220636f6c,0x2e74730a31203533\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x346625202c5d3338,0x2e6464610a3b3933\n"
".quad 0x316c722520343673,0x396c7225202c3438,0x3b3233363936202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312038393732,0x36732e6f6c2e6461,0x3538316c72252034,0x3438316c7225202c\n"
".quad 0x3331336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3638316c7225\n"
".quad 0x202c3538316c7225,0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3738\n"
".quad 0x0a3b3233202c3638,0x32203220636f6c2e,0x68730a3120383937,0x7225203436622e6c\n"
".quad 0x7225202c3838316c,0x3b32202c3738316c,0x3436732e6464610a,0x2c3938316c722520\n"
".quad 0x202c33386c722520,0x0a3b3838316c7225,0x32203220636f6c2e,0x74730a3120363338\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d393831,0x6464610a3b383434\n"
".quad 0x6c7225203436732e,0x6c7225202c303931,0x3832373337202c39,0x3220636f6c2e0a3b\n"
".quad 0x0a31203939373220,0x732e6f6c2e64616d,0x39316c7225203436,0x39316c7225202c31\n"
".quad 0x31336c7225202c30,0x3b356c7225202c33,0x3436622e6c68730a,0x2c3239316c722520\n"
".quad 0x2c3139316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c333931\n"
".quad 0x3b3233202c323931,0x203220636f6c2e0a,0x730a312039393732,0x25203436622e6c68\n"
".quad 0x25202c3439316c72,0x32202c3339316c72,0x36732e6464610a3b,0x3539316c72252034\n"
".quad 0x2c33386c7225202c,0x3b3439316c722520,0x203220636f6c2e0a,0x730a312037333832\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3539316c,0x6c2e0a3b35353466\n"
".quad 0x343832203220636f,0x3b7465720a322030,0x355f343242420a0a,0x36732e6464610a3a\n"
".quad 0x3839316c72252034,0x202c366c7225202c,0x64610a3b376c7225,0x7225203436732e64\n"
".quad 0x7225202c3939316c,0x3034202c3839316c,0x702e646c0a3b3639,0x3436752e6d617261\n"
".quad 0x2c3231336c722520,0x524c32315a5f5b20,0x41426279685f645f,0x6d665f5366504344\n"
".quad 0x5f6d617261705f66,0x636f6c2e0a3b5d33,0x2032383732203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c313032,0x6c7225202c393931,0x6c7225202c323133\n"
".quad 0x61702e646c0a3b35,0x203436752e6d6172,0x202c3031336c7225,0x5f524c32315a5f5b\n"
".quad 0x4441426279685f64,0x666d665f53665043,0x315f6d617261705f,0x2e617476630a3b5d\n"
".quad 0x61626f6c672e6f74,0x7225203436752e6c,0x7225202c3230326c,0x68730a3b3031336c\n"
".quad 0x7225203436622e6c,0x7225202c3330326c,0x3233202c3130326c,0x36732e7268730a3b\n"
".quad 0x3430326c72252034,0x3330326c7225202c,0x6c2e0a3b3233202c,0x383732203220636f\n"
".quad 0x2e6c68730a312032,0x326c722520343662,0x326c7225202c3530,0x610a3b32202c3430\n"
".quad 0x25203436732e6464,0x25202c3630326c72,0x25202c3230326c72,0x730a3b3530326c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3630326c,0x6464610a3b313466\n"
".quad 0x6c7225203436732e,0x6c7225202c373032,0x393138202c383931,0x20636f6c2e0a3b32\n"
".quad 0x3120333837322032,0x2e6f6c2e64616d0a,0x326c722520343673,0x326c7225202c3830\n"
".quad 0x336c7225202c3730,0x356c7225202c3231,0x36622e6c68730a3b,0x3930326c72252034\n"
".quad 0x3830326c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3031326c\n"
".quad 0x3233202c3930326c,0x3220636f6c2e0a3b,0x0a31203338373220,0x203436622e6c6873\n"
".quad 0x202c3131326c7225,0x202c3031326c7225,0x732e6464610a3b32,0x31326c7225203436\n"
".quad 0x30326c7225202c32,0x31326c7225202c32,0x6c672e74730a3b31,0x3233662e6c61626f\n"
".quad 0x3231326c72255b20,0x0a3b356625202c5d,0x203436732e646461,0x202c3331326c7225\n"
".quad 0x202c3839316c7225,0x2e0a3b3838323231,0x3732203220636f6c,0x64616d0a31203438\n"
".quad 0x203436732e6f6c2e,0x202c3431326c7225,0x202c3331326c7225,0x202c3231336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3531326c,0x3233202c3431326c\n"
".quad 0x36732e7268730a3b,0x3631326c72252034,0x3531326c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x383732203220636f,0x2e6c68730a312034,0x326c722520343662,0x326c7225202c3731\n"
".quad 0x610a3b32202c3631,0x25203436732e6464,0x25202c3831326c72,0x25202c3230326c72\n"
".quad 0x730a3b3731326c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3831326c\n"
".quad 0x6464610a3b353366,0x6c7225203436732e,0x6c7225202c393132,0x333631202c383931\n"
".quad 0x636f6c2e0a3b3438,0x2035383732203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c303232,0x6c7225202c393132,0x6c7225202c323133,0x622e6c68730a3b35\n"
".quad 0x32326c7225203436,0x32326c7225202c31,0x730a3b3233202c30,0x25203436732e7268\n"
".quad 0x25202c3232326c72,0x33202c3132326c72,0x20636f6c2e0a3b32,0x3120353837322032\n"
".quad 0x3436622e6c68730a,0x2c3332326c722520,0x2c3232326c722520,0x2e6464610a3b3220\n"
".quad 0x326c722520343673,0x326c7225202c3432,0x326c7225202c3230,0x672e74730a3b3332\n"
".quad 0x33662e6c61626f6c,0x32326c72255b2032,0x3b346625202c5d34,0x3436732e6464610a\n"
".quad 0x2c3532326c722520,0x2c3839316c722520,0x0a3b303834303220,0x32203220636f6c2e\n"
".quad 0x616d0a3120363837,0x3436732e6f6c2e64,0x2c3632326c722520,0x2c3532326c722520\n"
".quad 0x2c3231336c722520,0x730a3b356c722520,0x25203436622e6c68,0x25202c3732326c72\n"
".quad 0x33202c3632326c72,0x732e7268730a3b32,0x32326c7225203436,0x32326c7225202c38\n"
".quad 0x2e0a3b3233202c37,0x3732203220636f6c,0x6c68730a31203638,0x6c7225203436622e\n"
".quad 0x6c7225202c393232,0x0a3b32202c383232,0x203436732e646461,0x202c3033326c7225\n"
".quad 0x202c3230326c7225,0x0a3b3932326c7225,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3033326c72,0x64610a3b39356625,0x7225203436732e64,0x7225202c3133326c\n"
".quad 0x3432202c3839316c,0x6f6c2e0a3b363735,0x3738373220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3233326c,0x7225202c3133326c,0x7225202c3231336c\n"
".quad 0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3333,0x0a3b3233202c3233\n"
".quad 0x203436732e726873,0x202c3433326c7225,0x202c3333326c7225,0x636f6c2e0a3b3233\n"
".quad 0x2037383732203220,0x36622e6c68730a31,0x3533326c72252034,0x3433326c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c363332,0x6c7225202c323032\n"
".quad 0x2e74730a3b353332,0x662e6c61626f6c67,0x326c72255b203233,0x366625202c5d3633\n"
".quad 0x732e6464610a3b35,0x33326c7225203436,0x39316c7225202c37,0x3237363832202c38\n"
".quad 0x3220636f6c2e0a3b,0x0a31203838373220,0x732e6f6c2e64616d,0x33326c7225203436\n"
".quad 0x33326c7225202c38,0x31336c7225202c37,0x3b356c7225202c32,0x3436622e6c68730a\n"
".quad 0x2c3933326c722520,0x2c3833326c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c303432,0x3b3233202c393332,0x203220636f6c2e0a,0x730a312038383732\n"
".quad 0x25203436622e6c68,0x25202c3134326c72,0x32202c3034326c72,0x36732e6464610a3b\n"
".quad 0x3234326c72252034,0x3230326c7225202c,0x3134326c7225202c,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x5d3234326c72255b,0x0a3b37346625202c,0x203436732e646461\n"
".quad 0x202c3334326c7225,0x202c3839316c7225,0x2e0a3b3836373233,0x3732203220636f6c\n"
".quad 0x64616d0a31203938,0x203436732e6f6c2e,0x202c3434326c7225,0x202c3334326c7225\n"
".quad 0x202c3231336c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3534326c\n"
".quad 0x3233202c3434326c,0x36732e7268730a3b,0x3634326c72252034,0x3534326c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x383732203220636f,0x2e6c68730a312039,0x326c722520343662\n"
".quad 0x326c7225202c3734,0x610a3b32202c3634,0x25203436732e6464,0x25202c3834326c72\n"
".quad 0x25202c3230326c72,0x730a3b3734326c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3834326c,0x6464610a3b333566,0x6c7225203436732e,0x6c7225202c393432\n"
".quad 0x383633202c383931,0x636f6c2e0a3b3436,0x2030393732203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c303532,0x6c7225202c393432,0x6c7225202c323133\n"
".quad 0x622e6c68730a3b35,0x35326c7225203436,0x35326c7225202c31,0x730a3b3233202c30\n"
".quad 0x25203436732e7268,0x25202c3235326c72,0x33202c3135326c72,0x20636f6c2e0a3b32\n"
".quad 0x3120303937322032,0x3436622e6c68730a,0x2c3335326c722520,0x2c3235326c722520\n"
".quad 0x2e6464610a3b3220,0x326c722520343673,0x326c7225202c3435,0x326c7225202c3230\n"
".quad 0x672e74730a3b3335,0x33662e6c61626f6c,0x35326c72255b2032,0x3b396625202c5d34\n"
".quad 0x3436732e6464610a,0x2c3535326c722520,0x2c3839316c722520,0x0a3b303639303420\n"
".quad 0x32203220636f6c2e,0x616d0a3120313937,0x3436732e6f6c2e64,0x2c3635326c722520\n"
".quad 0x2c3535326c722520,0x2c3231336c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3735326c72,0x33202c3635326c72,0x732e7268730a3b32,0x35326c7225203436\n"
".quad 0x35326c7225202c38,0x2e0a3b3233202c37,0x3732203220636f6c,0x6c68730a31203139\n"
".quad 0x6c7225203436622e,0x6c7225202c393532,0x0a3b32202c383532,0x203436732e646461\n"
".quad 0x202c3036326c7225,0x202c3230326c7225,0x0a3b3935326c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3036326c72,0x64610a3b37376625,0x7225203436732e64\n"
".quad 0x7225202c3136326c,0x3534202c3839316c,0x6f6c2e0a3b363530,0x3239373220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3236326c,0x7225202c3136326c\n"
".quad 0x7225202c3231336c,0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3336\n"
".quad 0x0a3b3233202c3236,0x203436732e726873,0x202c3436326c7225,0x202c3336326c7225\n"
".quad 0x636f6c2e0a3b3233,0x2032393732203220,0x36622e6c68730a31,0x3536326c72252034\n"
".quad 0x3436326c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c363632\n"
".quad 0x6c7225202c323032,0x2e74730a3b353632,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x346625202c5d3636,0x2e6464610a3b3735,0x326c722520343673,0x316c7225202c3736\n"
".quad 0x35313934202c3839,0x20636f6c2e0a3b32,0x3120333937322032,0x2e6f6c2e64616d0a\n"
".quad 0x326c722520343673,0x326c7225202c3836,0x336c7225202c3736,0x356c7225202c3231\n"
".quad 0x36622e6c68730a3b,0x3936326c72252034,0x3836326c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3037326c,0x3233202c3936326c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203339373220,0x203436622e6c6873,0x202c3137326c7225,0x202c3037326c7225\n"
".quad 0x732e6464610a3b32,0x37326c7225203436,0x30326c7225202c32,0x37326c7225202c32\n"
".quad 0x6c672e74730a3b31,0x3233662e6c61626f,0x3237326c72255b20,0x3b31376625202c5d\n"
".quad 0x3436732e6464610a,0x2c3337326c722520,0x2c3839316c722520,0x0a3b383432333520\n"
".quad 0x32203220636f6c2e,0x616d0a3120343937,0x3436732e6f6c2e64,0x2c3437326c722520\n"
".quad 0x2c3337326c722520,0x2c3231336c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3537326c72,0x33202c3437326c72,0x732e7268730a3b32,0x37326c7225203436\n"
".quad 0x37326c7225202c36,0x2e0a3b3233202c35,0x3732203220636f6c,0x6c68730a31203439\n"
".quad 0x6c7225203436622e,0x6c7225202c373732,0x0a3b32202c363732,0x203436732e646461\n"
".quad 0x202c3837326c7225,0x202c3230326c7225,0x0a3b3737326c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3837326c72,0x64610a3b30316625,0x7225203436732e64\n"
".quad 0x7225202c3937326c,0x3735202c3839316c,0x6f6c2e0a3b343433,0x3539373220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3038326c,0x7225202c3937326c\n"
".quad 0x7225202c3231336c,0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3138\n"
".quad 0x0a3b3233202c3038,0x203436732e726873,0x202c3238326c7225,0x202c3138326c7225\n"
".quad 0x636f6c2e0a3b3233,0x2035393732203220,0x36622e6c68730a31,0x3338326c72252034\n"
".quad 0x3238326c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c343832\n"
".quad 0x6c7225202c323032,0x2e74730a3b333832,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x366625202c5d3438,0x36732e6464610a3b,0x3538326c72252034,0x3839316c7225202c\n"
".quad 0x3b3034343136202c,0x203220636f6c2e0a,0x6d0a312036393732,0x36732e6f6c2e6461\n"
".quad 0x3638326c72252034,0x3538326c7225202c,0x3231336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3738326c7225,0x202c3638326c7225,0x2e7268730a3b3233\n"
".quad 0x326c722520343673,0x326c7225202c3838,0x0a3b3233202c3738,0x32203220636f6c2e\n"
".quad 0x68730a3120363937,0x7225203436622e6c,0x7225202c3938326c,0x3b32202c3838326c\n"
".quad 0x3436732e6464610a,0x2c3039326c722520,0x2c3230326c722520,0x3b3938326c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3039326c7225,0x610a3b3938662520\n"
".quad 0x25203436732e6464,0x25202c3139326c72,0x36202c3839316c72,0x6c2e0a3b36333535\n"
".quad 0x393732203220636f,0x2e64616d0a312037,0x25203436732e6f6c,0x25202c3239326c72\n"
".quad 0x25202c3139326c72,0x25202c3231336c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c333932,0x3b3233202c323932,0x3436732e7268730a,0x2c3439326c722520\n"
".quad 0x2c3339326c722520,0x6f6c2e0a3b323320,0x3739373220322063,0x622e6c68730a3120\n"
".quad 0x39326c7225203436,0x39326c7225202c35,0x64610a3b32202c34,0x7225203436732e64\n"
".quad 0x7225202c3639326c,0x7225202c3230326c,0x74730a3b3539326c,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d363932,0x732e6464610a3b38,0x39326c7225203436\n"
".quad 0x39316c7225202c37,0x3233363936202c38,0x3220636f6c2e0a3b,0x0a31203839373220\n"
".quad 0x732e6f6c2e64616d,0x39326c7225203436,0x39326c7225202c38,0x31336c7225202c37\n"
".quad 0x3b356c7225202c32,0x3436622e6c68730a,0x2c3939326c722520,0x2c3839326c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c303033,0x3b3233202c393932\n"
".quad 0x203220636f6c2e0a,0x730a312038393732,0x25203436622e6c68,0x25202c3130336c72\n"
".quad 0x32202c3030336c72,0x36732e6464610a3b,0x3230336c72252034,0x3230326c7225202c\n"
".quad 0x3130336c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3230336c72255b\n"
".quad 0x0a3b33386625202c,0x203436732e646461,0x202c3330336c7225,0x202c3839316c7225\n"
".quad 0x2e0a3b3832373337,0x3732203220636f6c,0x64616d0a31203939,0x203436732e6f6c2e\n"
".quad 0x202c3430336c7225,0x202c3330336c7225,0x202c3231336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3530336c,0x3233202c3430336c,0x36732e7268730a3b\n"
".quad 0x3630336c72252034,0x3530336c7225202c,0x6c2e0a3b3233202c,0x393732203220636f\n"
".quad 0x2e6c68730a312039,0x336c722520343662,0x336c7225202c3730,0x610a3b32202c3630\n"
".quad 0x25203436732e6464,0x25202c3830336c72,0x25202c3230326c72,0x730a3b3730336c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3830336c,0x3242420a0a3b3766\n"
".quad 0x6f6c2e0a3a365f34,0x3034383220322063,0x0a3b7465720a3220,0x72746e652e0a0a7d\n"
".quad 0x524c33315a5f2079,0x41426279685f645f,0x665f536650324344,0x61702e0a2869666d\n"
".quad 0x3436752e206d6172,0x5f524c33315a5f20,0x4441426279685f64,0x6d665f5366503243\n"
".quad 0x6d617261705f6966,0x7261702e0a2c305f,0x203436752e206d61,0x645f524c33315a5f\n"
".quad 0x434441426279685f,0x666d665f53665032,0x5f6d617261705f69,0x617261702e0a2c31\n"
".quad 0x5f203233662e206d,0x5f645f524c33315a,0x3243444142627968,0x69666d665f536650\n"
".quad 0x325f6d617261705f,0x6d617261702e0a2c,0x5a5f203436752e20,0x685f645f524c3331\n"
".quad 0x5032434441426279,0x5f69666d665f5366,0x2c335f6d61726170,0x206d617261702e0a\n"
".quad 0x315a5f203233662e,0x79685f645f524c33,0x6650324344414262,0x705f69666d665f53\n"
".quad 0x0a2c345f6d617261,0x2e206d617261702e,0x33315a5f20323375,0x6279685f645f524c\n"
".quad 0x5366503243444142,0x61705f69666d665f,0x0a290a355f6d6172,0x2e206765722e0a7b\n"
".quad 0x343c662520323366,0x65722e0a3b3e3835,0x20646572702e2067,0x0a3b3e34313c7025\n"
".quad 0x33732e206765722e,0x3932313c72252032,0x206765722e0a3b3e,0x6c7225203436732e\n"
".quad 0x0a0a3b3e3631333c,0x617261702e646c0a,0x7225203436752e6d,0x315a5f5b202c316c\n"
".quad 0x79685f645f524c33,0x6650324344414262,0x705f69666d665f53,0x3b5d305f6d617261\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x315a5f5b202c336c,0x79685f645f524c33\n"
".quad 0x6650324344414262,0x705f69666d665f53,0x3b5d335f6d617261,0x617261702e646c0a\n"
".quad 0x7225203233752e6d,0x33315a5f5b202c36,0x6279685f645f524c,0x5366503243444142\n"
".quad 0x61705f69666d665f,0x0a3b5d355f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67\n"
".quad 0x2c346c7225203436,0x2e0a3b316c722520,0x3832203220636f6c,0x766f6d0a31203434\n"
".quad 0x377225203233752e,0x2e6469746e25202c,0x752e766f6d0a3b78,0x202c387225203233\n"
".quad 0x782e646961746325,0x33752e766f6d0a3b,0x25202c3272252032,0x6d0a3b782e646974\n"
".quad 0x33732e6f6c2e6461,0x25202c3972252032,0x2c387225202c3772,0x6c2e0a3b32722520\n"
".quad 0x343832203220636f,0x2e766f6d0a312035,0x3031722520323375,0x2e6469746e25202c\n"
".quad 0x752e766f6d0a3b79,0x2c31317225203233,0x2e64696174632520,0x752e766f6d0a3b79\n"
".quad 0x2c32317225203233,0x3b792e6469742520,0x2e6f6c2e64616d0a,0x2c33722520323373\n"
".quad 0x25202c3031722520,0x317225202c313172,0x20636f6c2e0a3b32,0x3120363438322032\n"
".quad 0x3233752e766f6d0a,0x25202c3331722520,0x0a3b7a2e6469746e,0x203233752e766f6d\n"
".quad 0x6325202c34317225,0x0a3b7a2e64696174,0x203233752e766f6d,0x7425202c35317225\n"
".quad 0x616d0a3b7a2e6469,0x3233732e6f6c2e64,0x7225202c34722520,0x34317225202c3331\n"
".quad 0x0a3b35317225202c,0x32203220636f6c2e,0x76630a3120373438,0x3233662e6e722e74\n"
".quad 0x326625203233732e,0x0a3b397225202c33,0x662e6e722e616d66,0x2c34326625203233\n"
".quad 0x30202c3332662520,0x3030303030463366,0x3731346630202c30,0x2e0a3b3030303043\n"
".quad 0x3832203220636f6c,0x7476630a31203834,0x2e3233662e6e722e,0x2c32662520323373\n"
".quad 0x6d660a3b33722520,0x3233662e6e722e61,0x25202c3532662520,0x46336630202c3266\n"
".quad 0x202c303030303030,0x3030433731346630,0x636f6c2e0a3b3030,0x2039343832203220\n"
".quad 0x6e722e7476630a31,0x3233732e3233662e,0x25202c3632662520,0x2e616d660a3b3472\n"
".quad 0x25203233662e6e72,0x326625202c373266,0x3046336630202c36,0x30202c3030303030\n"
".quad 0x3030304337313466,0x752e7476630a3b30,0x25203233752e3436,0x397225202c356c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203235383220,0x2e3436732e747663,0x366c722520323373\n"
".quad 0x730a3b337225202c,0x25203233622e6c68,0x2c347225202c3572,0x636f6c2e0a3b3620\n"
".quad 0x2032353832203220,0x36732e7476630a31,0x7225203233732e34,0x3b357225202c376c\n"
".quad 0x3436732e6464610a,0x25202c396c722520,0x6c7225202c376c72,0x20636f6c2e0a3b36\n"
".quad 0x3120323538322032,0x2e6f6c2e64616d0a,0x386c722520343673,0x202c396c7225202c\n"
".quad 0x7225202c336c7225,0x2e6464610a3b356c,0x3832662520323366,0x202c34326625202c\n"
".quad 0x3030453732436630,0x2e6464610a3b3030,0x3932662520323366,0x202c35326625202c\n"
".quad 0x3030434631436630,0x636f6c2e0a3b3030,0x0a31203037203220,0x203233662e6c756d\n"
".quad 0x6625202c30336625,0x39326625202c3932,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x2c38326625202c31,0x25202c3832662520,0x6464610a3b303366,0x336625203233662e\n"
".quad 0x2c37326625202c32,0x3043463143663020,0x6f6c2e0a3b303030,0x3120303720322063\n"
".quad 0x2e6e722e616d660a,0x3333662520323366,0x202c32336625202c,0x6625202c32336625\n"
".quad 0x707465730a3b3133,0x203233662e746c2e,0x336625202c317025,0x3831346630202c33\n"
".quad 0x2e0a3b3030303030,0x3832203220636f6c,0x7465730a31203535,0x3233732e746c2e70\n"
".quad 0x7225202c32702520,0x0a3b367225202c39,0x203233752e766f6d,0x3336202c36317225\n"
".quad 0x3220636f6c2e0a3b,0x0a31203535383220,0x203233732e627573,0x7225202c37317225\n"
".quad 0x3b367225202c3631,0x74672e707465730a,0x337025203233732e,0x25202c397225202c\n"
".quad 0x2e726f0a3b373172,0x3470252064657270,0x25202c327025202c,0x636f6c2e0a3b3370\n"
".quad 0x2035353832203220,0x6c2e707465730a31,0x7025203233732e74,0x202c337225202c35\n"
".quad 0x2e726f0a3b367225,0x3670252064657270,0x25202c347025202c,0x636f6c2e0a3b3570\n"
".quad 0x2035353832203220,0x672e707465730a31,0x7025203233732e74,0x202c337225202c37\n"
".quad 0x726f0a3b37317225,0x702520646572702e,0x202c367025202c38,0x6f6c2e0a3b377025\n"
".quad 0x3535383220322063,0x2e707465730a3120,0x25203233732e746c,0x2c347225202c3970\n"
".quad 0x726f0a3b36722520,0x702520646572702e,0x2c387025202c3031,0x6c2e0a3b39702520\n"
".quad 0x353832203220636f,0x707465730a312035,0x203233732e74672e,0x7225202c31317025\n"
".quad 0x3b37317225202c34,0x646572702e726f0a,0x25202c3231702520,0x317025202c303170\n"
".quad 0x20636f6c2e0a3b31,0x3120353538322032,0x622032317025400a,0x5f35324242206172\n"
".quad 0x2e6c68730a0a3b36,0x316c722520343662,0x2c386c7225202c30,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x316c7225202c3131,0x2e0a3b3233202c30,0x3832203220636f6c\n"
".quad 0x6c68730a31203036,0x6c7225203436622e,0x316c7225202c3231,0x64610a3b32202c31\n"
".quad 0x7225203436732e64,0x6c7225202c33316c,0x32316c7225202c34,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c336625,0x64610a3b5d33316c,0x7225203233732e64\n"
".quad 0x2c337225202c3931,0x6f6c2e0a3b312d20,0x3136383220322063,0x732e7476630a3120\n"
".quad 0x25203233732e3436,0x7225202c34316c72,0x2e6464610a3b3931,0x316c722520343673\n"
".quad 0x34316c7225202c35,0x0a3b376c7225202c,0x203436732e646461,0x25202c36316c7225\n"
".quad 0x3138202c35316c72,0x702e646c0a3b3239,0x3436752e6d617261,0x2c3531336c722520\n"
".quad 0x524c33315a5f5b20,0x41426279685f645f,0x665f536650324344,0x617261705f69666d\n"
".quad 0x6c2e0a3b5d335f6d,0x363832203220636f,0x2e64616d0a312031,0x25203436732e6f6c\n"
".quad 0x7225202c37316c72,0x6c7225202c36316c,0x6c7225202c353133,0x622e6c68730a3b35\n"
".quad 0x38316c7225203436,0x2c37316c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x316c7225202c3931,0x2e0a3b3233202c38,0x3832203220636f6c,0x6c68730a31203136\n"
".quad 0x6c7225203436622e,0x316c7225202c3032,0x64610a3b32202c39,0x7225203436732e64\n"
".quad 0x6c7225202c31326c,0x30326c7225202c34,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x72255b202c346625,0x6c2e0a3b5d31326c,0x363832203220636f,0x2e6464610a312032\n"
".quad 0x3132722520323373,0x31202c337225202c,0x36732e7476630a3b,0x7225203233732e34\n"
".quad 0x327225202c32326c,0x732e6464610a3b31,0x33326c7225203436,0x2c32326c7225202c\n"
".quad 0x610a3b376c722520,0x25203436732e6464,0x7225202c34326c72,0x333631202c33326c\n"
".quad 0x636f6c2e0a3b3438,0x2032363832203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x326c7225202c3532,0x31336c7225202c34,0x3b356c7225202c35,0x3436622e6c68730a\n"
".quad 0x202c36326c722520,0x33202c35326c7225,0x732e7268730a3b32,0x37326c7225203436\n"
".quad 0x2c36326c7225202c,0x6f6c2e0a3b323320,0x3236383220322063,0x622e6c68730a3120\n"
".quad 0x38326c7225203436,0x2c37326c7225202c,0x2e6464610a3b3220,0x326c722520343673\n"
".quad 0x2c346c7225202c39,0x0a3b38326c722520,0x61626f6c672e646c,0x6625203233662e6c\n"
".quad 0x326c72255b202c35,0x2e6464610a3b5d39,0x3332722520323373,0x2d202c357225202c\n"
".quad 0x636f6c2e0a3b3436,0x2033363832203220,0x36732e7476630a31,0x7225203233732e34\n"
".quad 0x327225202c30336c,0x732e6464610a3b33,0x31336c7225203436,0x202c366c7225202c\n"
".quad 0x610a3b30336c7225,0x25203436732e6464,0x7225202c32336c72,0x383633202c31336c\n"
".quad 0x636f6c2e0a3b3436,0x2033363832203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x336c7225202c3333,0x31336c7225202c32,0x3b356c7225202c35,0x3436622e6c68730a\n"
".quad 0x202c34336c722520,0x33202c33336c7225,0x732e7268730a3b32,0x35336c7225203436\n"
".quad 0x2c34336c7225202c,0x6f6c2e0a3b323320,0x3336383220322063,0x622e6c68730a3120\n"
".quad 0x36336c7225203436,0x2c35336c7225202c,0x2e6464610a3b3220,0x336c722520343673\n"
".quad 0x2c346c7225202c37,0x0a3b36336c722520,0x61626f6c672e646c,0x6625203233662e6c\n"
".quad 0x336c72255b202c36,0x2e6464610a3b5d37,0x336c722520343673,0x34316c7225202c38\n"
".quad 0x3b30336c7225202c,0x3436732e6464610a,0x202c39336c722520,0x34202c38336c7225\n"
".quad 0x6c2e0a3b36353035,0x363832203220636f,0x2e64616d0a312034,0x25203436732e6f6c\n"
".quad 0x7225202c30346c72,0x6c7225202c39336c,0x6c7225202c353133,0x622e6c68730a3b35\n"
".quad 0x31346c7225203436,0x2c30346c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x346c7225202c3234,0x2e0a3b3233202c31,0x3832203220636f6c,0x6c68730a31203436\n"
".quad 0x6c7225203436622e,0x346c7225202c3334,0x64610a3b32202c32,0x7225203436732e64\n"
".quad 0x6c7225202c34346c,0x33346c7225202c34,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x72255b202c376625,0x64610a3b5d34346c,0x7225203436732e64,0x6c7225202c35346c\n"
".quad 0x336c7225202c3232,0x732e6464610a3b30,0x36346c7225203436,0x2c35346c7225202c\n"
".quad 0x0a3b383432333520,0x32203220636f6c2e,0x616d0a3120353638,0x3436732e6f6c2e64\n"
".quad 0x202c37346c722520,0x25202c36346c7225,0x25202c3531336c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x346c7225202c3834,0x730a3b3233202c37,0x25203436732e7268\n"
".quad 0x7225202c39346c72,0x3b3233202c38346c,0x203220636f6c2e0a,0x730a312035363832\n"
".quad 0x25203436622e6c68,0x7225202c30356c72,0x0a3b32202c39346c,0x203436732e646461\n"
".quad 0x25202c31356c7225,0x6c7225202c346c72,0x672e646c0a3b3035,0x33662e6c61626f6c\n"
".quad 0x5b202c3866252032,0x0a3b5d31356c7225,0x203233732e646461,0x7225202c37327225\n"
".quad 0x2e0a3b3436202c35,0x3832203220636f6c,0x7476630a31203636,0x3233732e3436732e\n"
".quad 0x202c32356c722520,0x64610a3b37327225,0x7225203436732e64,0x6c7225202c33356c\n"
".quad 0x32356c7225202c36,0x36732e6464610a3b,0x2c34356c72252034,0x202c33356c722520\n"
".quad 0x2e0a3b3434333735,0x3832203220636f6c,0x64616d0a31203636,0x203436732e6f6c2e\n"
".quad 0x25202c35356c7225,0x7225202c34356c72,0x7225202c3531336c,0x2e6c68730a3b356c\n"
".quad 0x356c722520343662,0x35356c7225202c36,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c37356c,0x0a3b3233202c3635,0x32203220636f6c2e,0x68730a3120363638\n"
".quad 0x7225203436622e6c,0x6c7225202c38356c,0x610a3b32202c3735,0x25203436732e6464\n"
".quad 0x7225202c39356c72,0x356c7225202c346c,0x6c672e646c0a3b38,0x3233662e6c61626f\n"
".quad 0x255b202c39662520,0x610a3b5d39356c72,0x25203436732e6464,0x7225202c30366c72\n"
".quad 0x6c7225202c34316c,0x2e6464610a3b3235,0x366c722520343673,0x30366c7225202c31\n"
".quad 0x3b3633353536202c,0x203220636f6c2e0a,0x6d0a312037363832,0x36732e6f6c2e6461\n"
".quad 0x2c32366c72252034,0x202c31366c722520,0x202c3531336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x6c7225202c33366c,0x0a3b3233202c3236,0x203436732e726873\n"
".quad 0x25202c34366c7225,0x3233202c33366c72,0x3220636f6c2e0a3b,0x0a31203736383220\n"
".quad 0x203436622e6c6873,0x25202c35366c7225,0x3b32202c34366c72,0x3436732e6464610a\n"
".quad 0x202c36366c722520,0x7225202c346c7225,0x2e646c0a3b35366c,0x662e6c61626f6c67\n"
".quad 0x2c30316625203233,0x5d36366c72255b20,0x3220636f6c2e0a3b,0x0a31203836383220\n"
".quad 0x2e71652e70746573,0x3331702520323373,0x36202c347225202c,0x33317025400a3b33\n"
".quad 0x3242422061726220,0x6c2e0a0a3b335f35,0x363832203220636f,0x2e7476630a312032\n"
".quad 0x203233752e343675,0x25202c37366c7225,0x6f6c2e0a3b313272,0x3636383220322063\n"
".quad 0x752e7476630a3120,0x25203233752e3436,0x7225202c38366c72,0x2e6464610a3b3732\n"
".quad 0x366c722520343673,0x37366c7225202c39,0x3b38366c7225202c,0x3436732e6464610a\n"
".quad 0x202c30376c722520,0x37202c39366c7225,0x76630a3b38323733,0x33752e3436752e74\n"
".quad 0x2c31376c72252032,0x646c0a3b39722520,0x752e6d617261702e,0x31336c7225203436\n"
".quad 0x33315a5f5b202c34,0x6279685f645f524c,0x5366503243444142,0x61705f69666d665f\n"
".quad 0x0a3b5d335f6d6172,0x32203220636f6c2e,0x616d0a3120393638,0x3436732e6f6c2e64\n"
".quad 0x202c32376c722520,0x25202c30376c7225,0x25202c3431336c72,0x646c0a3b31376c72\n"
".quad 0x752e6d617261702e,0x30336c7225203436,0x33315a5f5b202c39,0x6279685f645f524c\n"
".quad 0x5366503243444142,0x61705f69666d665f,0x0a3b5d305f6d6172,0x2e6f742e61747663\n"
".quad 0x752e6c61626f6c67,0x33376c7225203436,0x3930336c7225202c,0x36622e6c68730a3b\n"
".quad 0x2c34376c72252034,0x202c32376c722520,0x2e7268730a3b3233,0x376c722520343673\n"
".quad 0x34376c7225202c35,0x6c2e0a3b3233202c,0x363832203220636f,0x2e6c68730a312039\n"
".quad 0x376c722520343662,0x35376c7225202c36,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x376c7225202c3737,0x36376c7225202c33,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x5b202c3735346625,0x0a3b5d37376c7225,0x3a335f353242420a,0x3233732e6464610a\n"
".quad 0x25202c3035722520,0x0a3b312d202c3972,0x32203220636f6c2e,0x76630a3120313738\n"
".quad 0x3233662e6e722e74,0x396625203233732e,0x3b30357225202c35,0x3233662e6464610a\n"
".quad 0x25202c3738662520,0x336630202c353966,0x3b30303030303046,0x2e6e722e7476630a\n"
".quad 0x203233732e323366,0x7225202c36396625,0x662e6464610a3b35,0x2c37396625203233\n"
".quad 0x6630202c32662520,0x3030303030304633,0x33662e6464610a3b,0x202c363466252032\n"
".quad 0x6625202c37396625,0x2e766f6d0a3b3639,0x3635722520323375,0x74090a0a3b30202c\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x202c353366257b20,0x6625202c36336625\n"
".quad 0x38336625202c3733,0x527865745b202c7d,0x202c4431665f6665,0x25202c373866257b\n"
".quad 0x0a0a3b5d7d363466,0x203220636f6c2e09,0x610a312032373832,0x25203233732e6464\n"
".quad 0x397225202c373572,0x7476630a3b31202c,0x2e3233662e6e722e,0x3839662520323373\n"
".quad 0x0a3b37357225202c,0x203233662e646461,0x6625202c33396625,0x46336630202c3839\n"
".quad 0x0a3b303030303030,0x64322e786574090a,0x2e3233662e34762e,0x3466257b20323366\n"
".quad 0x2c32346625202c31,0x25202c3334662520,0x745b202c7d343466,0x33665f6665527865\n"
".quad 0x333966257b202c44,0x5d7d36346625202c,0x636f6c2e090a0a3b,0x2033373832203220\n"
".quad 0x6e722e7476630a31,0x3233732e3233662e,0x25202c3939662520,0x6464610a3b393172\n"
".quad 0x316625203233662e,0x39396625202c3030,0x303046336630202c,0x64610a3b30303030\n"
".quad 0x6625203233662e64,0x30316625202c3835,0x3b36396625202c30,0x322e786574090a0a\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x38346625202c3734,0x202c39346625202c\n"
".quad 0x5b202c7d30356625,0x665f666552786574,0x3866257b202c4435,0x7d38356625202c37\n"
".quad 0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e,0x202c333566257b20\n"
".quad 0x6625202c34356625,0x36356625202c3535,0x527865745b202c7d,0x202c4436665f6665\n"
".quad 0x25202c333966257b,0x0a0a3b5d7d383566,0x203220636f6c2e09,0x630a312035373832\n"
".quad 0x33662e6e722e7476,0x6625203233732e32,0x327225202c313031,0x662e6464610a3b31\n"
".quad 0x3230316625203233,0x2c3130316625202c,0x3030304633663020,0x6464610a3b303030\n"
".quad 0x376625203233662e,0x3230316625202c30,0x0a3b36396625202c,0x64322e786574090a\n"
".quad 0x2e3233662e34762e,0x3566257b20323366,0x2c30366625202c39,0x25202c3136662520\n"
".quad 0x745b202c7d323666,0x37665f6665527865,0x333966257b202c44,0x5d7d30376625202c\n"
".quad 0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366,0x25202c353666257b\n"
".quad 0x366625202c363666,0x7d38366625202c37,0x65527865745b202c,0x7b202c4438665f66\n"
".quad 0x6625202c37386625,0x090a0a3b5d7d3037,0x32203220636f6c2e,0x76630a3120373738\n"
".quad 0x3233662e6e722e74,0x316625203233732e,0x37327225202c3330,0x33662e6464610a3b\n"
".quad 0x202c323866252032,0x6625202c37396625,0x74090a0a3b333031,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x202c313766257b20,0x6625202c32376625,0x34376625202c3337\n"
".quad 0x527865745b202c7d,0x2c443531665f6665,0x202c373866257b20,0x0a3b5d7d32386625\n"
".quad 0x2e786574090a090a,0x33662e34762e6432,0x257b203233662e32,0x376625202c373766\n"
".quad 0x2c39376625202c38,0x202c7d3038662520,0x5f6665527865745b,0x257b202c44373166\n"
".quad 0x386625202c333966,0x2e090a0a3b5d7d32,0x3832203220636f6c,0x7476630a31203937\n"
".quad 0x2e3233662e6e722e,0x3031662520323373,0x3b33327225202c34,0x3233662e6464610a\n"
".quad 0x25202c3439662520,0x316625202c373966,0x6574090a0a3b3430,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x25202c333866257b,0x386625202c343866,0x7d36386625202c35\n"
".quad 0x65527865745b202c,0x202c443031665f66,0x25202c373866257b,0x0a0a3b5d7d343966\n"
".quad 0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e,0x30396625202c3938\n"
".quad 0x202c31396625202c,0x5b202c7d32396625,0x665f666552786574,0x66257b202c443231\n"
".quad 0x34396625202c3339,0x6c2e090a0a3b5d7d,0x383832203220636f,0x317025400a312033\n"
".quad 0x3242422061726220,0x6c2e0a0a3b355f35,0x313932203220636f,0x2e6275730a312037\n"
".quad 0x3031662520323366,0x2c35336625202c35,0x610a3b3134662520,0x25203233662e6464\n"
".quad 0x6625202c36303166,0x346625202c353031,0x662e6275730a3b37,0x3730316625203233\n"
".quad 0x2c3630316625202c,0x730a3b3335662520,0x25203233662e6275,0x6625202c38303166\n"
".quad 0x356625202c373031,0x662e6464610a3b39,0x3930316625203233,0x2c3830316625202c\n"
".quad 0x610a3b3536662520,0x25203233662e6464,0x6625202c30313166,0x386625202c393031\n"
".quad 0x662e6275730a3b33,0x3131316625203233,0x2c3031316625202c,0x610a3b3938662520\n"
".quad 0x25203233662e6464,0x6625202c32313166,0x376625202c313131,0x662e6275730a3b31\n"
".quad 0x3331316625203233,0x2c3231316625202c,0x730a3b3737662520,0x25203233662e6275\n"
".quad 0x6625202c34313166,0x0a3b356625202c34,0x203233662e646461,0x25202c3531316625\n"
".quad 0x6625202c34313166,0x2e6464610a3b3734,0x3131662520323366,0x3531316625202c36\n"
".quad 0x0a3b33356625202c,0x203233662e627573,0x25202c3731316625,0x6625202c36313166\n"
".quad 0x2e6275730a3b3935,0x3131662520323366,0x3731316625202c38,0x0a3b35366625202c\n"
".quad 0x203233662e646461,0x25202c3931316625,0x6625202c38313166,0x662e6275730a3b37\n"
".quad 0x3032316625203233,0x2c3931316625202c,0x64610a3b38662520,0x6625203233662e64\n"
".quad 0x316625202c313231,0x30316625202c3032,0x33662e6275730a3b,0x2c32323166252032\n"
".quad 0x202c313231662520,0x610a3b3735346625,0x25203233662e6464,0x6625202c33323166\n"
".quad 0x3b33386625202c36,0x3233662e6464610a,0x202c343231662520,0x25202c3332316625\n"
".quad 0x2e6464610a3b3766,0x3231662520323366,0x3432316625202c35,0x0a3b39386625202c\n"
".quad 0x203233662e646461,0x25202c3632316625,0x6625202c35323166,0x662e6275730a3b38\n"
".quad 0x3732316625203233,0x2c3632316625202c,0x75730a3b39662520,0x6625203233662e62\n"
".quad 0x316625202c383231,0x31376625202c3732,0x33662e6275730a3b,0x2c39323166252032\n"
".quad 0x202c383231662520,0x75730a3b30316625,0x6625203233662e62,0x316625202c303331\n"
".quad 0x37376625202c3932,0x33662e6275730a3b,0x2c31333166252032,0x202c303331662520\n"
".quad 0x730a3b3735346625,0x25203233662e6275,0x6625202c32333166,0x3b336625202c3734\n"
".quad 0x203220636f6c2e0a,0x610a312037313932,0x25203233662e6464,0x6625202c33333166\n"
".quad 0x356625202c323331,0x662e6464610a3b33,0x3433316625203233,0x2c3333316625202c\n"
".quad 0x610a3b3935662520,0x25203233662e6464,0x6625202c35333166,0x366625202c343331\n"
".quad 0x662e6464610a3b35,0x3633316625203233,0x2c3533316625202c,0x610a3b3338662520\n"
".quad 0x25203233662e6464,0x6625202c37333166,0x376625202c363331,0x33662e6464610a3b\n"
".quad 0x2c38333166252032,0x202c373331662520,0x64610a3b39386625,0x6625203233662e64\n"
".quad 0x316625202c393331,0x3b386625202c3833,0x3233662e6464610a,0x202c303431662520\n"
".quad 0x25202c3933316625,0x6464610a3b313766,0x316625203233662e,0x34316625202c3134\n"
".quad 0x3b30316625202c30,0x3233662e6464610a,0x202c323431662520,0x25202c3134316625\n"
".quad 0x6464610a3b373766,0x316625203233662e,0x34316625202c3334,0x3735346625202c32\n"
".quad 0x33662e6c756d0a3b,0x2c34343166252032,0x202c323231662520,0x660a3b3232316625\n"
".quad 0x33662e6e722e616d,0x2c35343166252032,0x202c333131662520,0x25202c3331316625\n"
".quad 0x756d0a3b34343166,0x6625203233662e6c,0x316625202c363431,0x33316625202c3133\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x316625202c373431,0x33316625202c3133\n"
".quad 0x3534316625202c31,0x33662e6275730a3b,0x2c38343166252032,0x202c333431662520\n"
".quad 0x6d0a3b3734316625,0x25203233662e6c75,0x6625202c39343166,0x30436630202c3533\n"
".quad 0x0a3b303030303038,0x662e6e722e616d66,0x3035316625203233,0x30202c336625202c\n"
".quad 0x3030303034313466,0x3934316625202c30,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x2c346625202c3135,0x3030383043663020,0x316625202c303030,0x2e616d660a3b3035\n"
".quad 0x25203233662e6e72,0x6625202c32353166,0x30436630202c3134,0x202c303030303038\n"
".quad 0x660a3b3135316625,0x33662e6e722e616d,0x2c33353166252032,0x6630202c35662520\n"
".quad 0x3030303030383043,0x3b3235316625202c,0x3233662e6464610a,0x202c343531662520\n"
".quad 0x25202c3335316625,0x6464610a3b373466,0x316625203233662e,0x35316625202c3535\n"
".quad 0x3b33356625202c34,0x3233662e6464610a,0x202c363531662520,0x25202c3535316625\n"
".quad 0x6464610a3b393566,0x316625203233662e,0x35316625202c3735,0x3b35366625202c36\n"
".quad 0x2e6e722e616d660a,0x3531662520323366,0x202c366625202c38,0x3030303830436630\n"
".quad 0x35316625202c3030,0x662e6464610a3b37,0x3935316625203233,0x2c3835316625202c\n"
".quad 0x610a3b3338662520,0x25203233662e6464,0x6625202c30363166,0x376625202c393531\n"
".quad 0x33662e6464610a3b,0x2c31363166252032,0x202c303631662520,0x64610a3b39386625\n"
".quad 0x6625203233662e64,0x316625202c323631,0x3b386625202c3136,0x2e6e722e616d660a\n"
".quad 0x3631662520323366,0x202c396625202c33,0x3030303830436630,0x36316625202c3030\n"
".quad 0x662e6464610a3b32,0x3436316625203233,0x2c3336316625202c,0x610a3b3137662520\n"
".quad 0x25203233662e6464,0x6625202c35363166,0x316625202c343631,0x662e6464610a3b30\n"
".quad 0x3636316625203233,0x2c3536316625202c,0x610a3b3737662520,0x25203233662e6464\n"
".quad 0x6625202c37363166,0x346625202c363631,0x2e616d660a3b3735,0x25203233662e6e72\n"
".quad 0x6625202c38363166,0x346630202c373431,0x2c34313534314630,0x0a3b373631662520\n"
".quad 0x203233662e6c756d,0x25202c3936316625,0x346630202c313466,0x3b30303030304130\n"
".quad 0x2e6e722e616d660a,0x3731662520323366,0x2c35336625202c30,0x3030413043663020\n"
".quad 0x316625202c303030,0x2e616d660a3b3936,0x25203233662e6e72,0x6625202c31373166\n"
".quad 0x336630202c333131,0x2c35353535354446,0x0a3b303731662520,0x203233662e6c756d\n"
".quad 0x25202c3237316625,0x30346630202c3566,0x0a3b303030303041,0x662e6e722e616d66\n"
".quad 0x3337316625203233,0x30202c346625202c,0x3030303041304366,0x3237316625202c30\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x32316625202c3437,0x4446336630202c32\n"
".quad 0x25202c3535353535,0x756d0a3b33373166,0x6625203233662e6c,0x396625202c353731\n"
".quad 0x304130346630202c,0x6d660a3b30303030,0x3233662e6e722e61,0x202c363731662520\n"
".quad 0x436630202c366625,0x2c30303030304130,0x0a3b353731662520,0x662e6e722e616d66\n"
".quad 0x3737316625203233,0x2c3133316625202c,0x3535444633663020,0x316625202c353535\n"
".quad 0x2e6464610a3b3637,0x3731662520323366,0x2c35336625202c38,0x730a3b3533662520\n"
".quad 0x25203233662e6275,0x6625202c39373166,0x346625202c383731,0x3220636f6c2e0a3b\n"
".quad 0x0a31203731393220,0x203233662e646461,0x25202c3038316625,0x346625202c313466\n"
".quad 0x662e6464610a3b31,0x3138316625203233,0x2c3937316625202c,0x0a3b303831662520\n"
".quad 0x203233662e627573,0x25202c3238316625,0x6625202c31383166,0x20636f6c2e0a3b35\n"
".quad 0x3120373139322032,0x3233662e6464610a,0x202c333831662520,0x25202c3238316625\n"
".quad 0x6464610a3b373466,0x316625203233662e,0x38316625202c3438,0x3b33356625202c33\n"
".quad 0x3233662e6464610a,0x202c353831662520,0x25202c3438316625,0x6464610a3b393566\n"
".quad 0x316625203233662e,0x38316625202c3638,0x3b35366625202c35,0x3233662e6275730a\n"
".quad 0x202c373831662520,0x25202c3638316625,0x636f6c2e0a3b3666,0x2037313932203220\n"
".quad 0x33662e6464610a31,0x2c38383166252032,0x202c373831662520,0x6f6d0a3b33386625\n"
".quad 0x6625203233662e76,0x436630202c393831,0x3b30303030303030,0x203220636f6c2e0a\n"
".quad 0x660a312037313932,0x33662e6e722e616d,0x2c30393166252032,0x6630202c37662520\n"
".quad 0x3030303030303043,0x3b3838316625202c,0x3233662e6464610a,0x202c313931662520\n"
".quad 0x25202c3039316625,0x616d660a3b393866,0x203233662e6e722e,0x25202c3239316625\n"
".quad 0x30436630202c3866,0x202c303030303030,0x730a3b3139316625,0x25203233662e6275\n"
".quad 0x6625202c33393166,0x396625202c323931,0x3220636f6c2e0a3b,0x0a31203731393220\n"
".quad 0x203233662e646461,0x25202c3439316625,0x6625202c33393166,0x2e616d660a3b3137\n"
".quad 0x25203233662e6e72,0x6625202c35393166,0x30436630202c3031,0x202c303030303030\n"
".quad 0x610a3b3439316625,0x25203233662e6464,0x6625202c36393166,0x376625202c353931\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x346625202c373931,0x30436630202c3735\n"
".quad 0x202c303030303030,0x610a3b3639316625,0x25203233662e6464,0x6625202c38393166\n"
".quad 0x316625202c333131,0x2e616d660a3b3331,0x25203233662e6e72,0x6625202c39393166\n"
".quad 0x316625202c323231,0x34316625202c3232,0x662e67656e0a3b36,0x3030326625203233\n"
".quad 0x3b3939316625202c,0x2e6e722e616d660a,0x3032662520323366,0x3839316625202c31\n"
".quad 0x2c3331316625202c,0x0a3b303032662520,0x203233662e627573,0x25202c3230326625\n"
".quad 0x6625202c37393166,0x6464610a3b313032,0x326625203233662e,0x2c346625202c3330\n"
".quad 0x6d660a3b34662520,0x3233662e6e722e61,0x202c343032662520,0x6630202c35336625\n"
".quad 0x3030303030383043,0x3b3330326625202c,0x2e6e722e616d660a,0x3032662520323366\n"
".quad 0x2c31346625202c35,0x3030383043663020,0x326625202c303030,0x2e6464610a3b3430\n"
".quad 0x3032662520323366,0x202c356625202c36,0x6464610a3b356625,0x326625203233662e\n"
".quad 0x30326625202c3730,0x3630326625202c35,0x33662e6464610a3b,0x2c38303266252032\n"
".quad 0x202c373032662520,0x64610a3b37346625,0x6625203233662e64,0x326625202c393032\n"
".quad 0x33356625202c3830,0x33662e6464610a3b,0x2c30313266252032,0x202c393032662520\n"
".quad 0x64610a3b39356625,0x6625203233662e64,0x326625202c313132,0x35366625202c3031\n"
".quad 0x33662e6464610a3b,0x2c32313266252032,0x6625202c36662520,0x662e6464610a3b36\n"
".quad 0x3331326625203233,0x2c3131326625202c,0x0a3b323132662520,0x203233662e646461\n"
".quad 0x25202c3431326625,0x6625202c33313266,0x2e616d660a3b3338,0x25203233662e6e72\n"
".quad 0x6625202c35313266,0x3030436630202c37,0x25202c3030303030,0x64610a3b34313266\n"
".quad 0x6625203233662e64,0x326625202c363132,0x39386625202c3531,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x2c386625202c3731,0x3030303043663020,0x326625202c303030\n"
".quad 0x2e6464610a3b3631,0x3132662520323366,0x202c396625202c38,0x6464610a3b396625\n"
".quad 0x326625203233662e,0x31326625202c3931,0x3831326625202c37,0x33662e6464610a3b\n"
".quad 0x2c30323266252032,0x202c393132662520,0x6d660a3b31376625,0x3233662e6e722e61\n"
".quad 0x202c313232662520,0x6630202c30316625,0x3030303030303043,0x3b3032326625202c\n"
".quad 0x3233662e6464610a,0x202c323232662520,0x25202c3132326625,0x616d660a3b373766\n"
".quad 0x203233662e6e722e,0x25202c3332326625,0x6630202c37353466,0x3030303030303043\n"
".quad 0x3b3232326625202c,0x3233662e6464610a,0x202c343232662520,0x356625202c346625\n"
".quad 0x33662e6464610a3b,0x2c35323266252032,0x202c343232662520,0x64610a3b37346625\n"
".quad 0x6625203233662e64,0x326625202c363232,0x33356625202c3532,0x33662e6464610a3b\n"
".quad 0x2c37323266252032,0x202c363232662520,0x64610a3b39356625,0x6625203233662e64\n"
".quad 0x326625202c383232,0x35366625202c3732,0x33662e6275730a3b,0x2c39323266252032\n"
".quad 0x202c383232662520,0x6275730a3b366625,0x326625203233662e,0x32326625202c3033\n"
".quad 0x3b33386625202c39,0x3233662e6275730a,0x202c313332662520,0x25202c3033326625\n"
".quad 0x6275730a3b393866,0x326625203233662e,0x33326625202c3233,0x0a3b396625202c31\n"
".quad 0x203233662e627573,0x25202c3333326625,0x6625202c32333266,0x2e6275730a3b3137\n"
".quad 0x3332662520323366,0x3333326625202c34,0x0a3b37376625202c,0x32203220636f6c2e\n"
".quad 0x656e0a3120373139,0x6625203233662e67,0x316625202c353332,0x2e616d660a3b3133\n"
".quad 0x25203233662e6e72,0x6625202c36333266,0x316625202c353332,0x34316625202c3133\n"
".quad 0x662e6275730a3b34,0x3733326625203233,0x2c3433326625202c,0x0a3b363332662520\n"
".quad 0x203233662e67656e,0x25202c3833326625,0x6d660a3b36303266,0x3233662e6e722e61\n"
".quad 0x202c393332662520,0x316625202c346625,0x33326625202c3938,0x662e6464610a3b38\n"
".quad 0x3034326625203233,0x2c3933326625202c,0x610a3b3734662520,0x25203233662e6464\n"
".quad 0x6625202c31343266,0x356625202c303432,0x662e6464610a3b33,0x3234326625203233\n"
".quad 0x2c3134326625202c,0x610a3b3935662520,0x25203233662e6464,0x6625202c33343266\n"
".quad 0x366625202c323432,0x662e6464610a3b35,0x3434326625203233,0x2c3334326625202c\n"
".quad 0x0a3b323132662520,0x203233662e627573,0x25202c3534326625,0x6625202c34343266\n"
".quad 0x2e6275730a3b3338,0x3432662520323366,0x3534326625202c36,0x0a3b39386625202c\n"
".quad 0x32203220636f6c2e,0x64610a3120373139,0x6625203233662e64,0x326625202c373432\n"
".quad 0x31326625202c3634,0x662e6275730a3b38,0x3834326625203233,0x2c3734326625202c\n"
".quad 0x730a3b3137662520,0x25203233662e6275,0x6625202c39343266,0x376625202c383432\n"
".quad 0x662e6275730a3b37,0x3035326625203233,0x202c37346625202c,0x6c2e0a3b33356625\n"
".quad 0x313932203220636f,0x2e6464610a312037,0x3532662520323366,0x3035326625202c31\n"
".quad 0x0a3b39356625202c,0x203233662e627573,0x25202c3235326625,0x6625202c31353266\n"
".quad 0x636f6c2e0a3b3536,0x2037313932203220,0x33662e67656e0a31,0x2c33353266252032\n"
".quad 0x0a3b333131662520,0x662e6e722e616d66,0x3435326625203233,0x2c3335326625202c\n"
".quad 0x202c323231662520,0x730a3b3235326625,0x25203233662e6275,0x6625202c35353266\n"
".quad 0x0a3b386625202c37,0x203233662e627573,0x25202c3635326625,0x6625202c35353266\n"
".quad 0x636f6c2e0a3b3031,0x2037313932203220,0x33662e6464610a31,0x2c37353266252032\n"
".quad 0x202c363532662520,0x6e0a3b3735346625,0x25203233662e6765,0x6625202c38353266\n"
".quad 0x616d660a3b323231,0x203233662e6e722e,0x25202c3935326625,0x6625202c38353266\n"
".quad 0x326625202c313331,0x2e6275730a3b3735,0x3632662520323366,0x2c33386625202c30\n"
".quad 0x730a3b3938662520,0x25203233662e6275,0x6625202c31363266,0x376625202c303632\n"
".quad 0x20636f6c2e0a3b31,0x3120373139322032,0x3233662e6464610a,0x202c323632662520\n"
".quad 0x25202c3136326625,0x616d660a3b373766,0x203233662e6e722e,0x25202c3336326625\n"
".quad 0x6625202c33353266,0x326625202c313331,0x2e6275730a3b3236,0x3632662520323366\n"
".quad 0x3035326625202c34,0x0a3b39356625202c,0x32203220636f6c2e,0x64610a3120373139\n"
".quad 0x6625203233662e64,0x326625202c353632,0x35366625202c3436,0x33662e6275730a3b\n"
".quad 0x2c36363266252032,0x202c353632662520,0x64610a3b33386625,0x6625203233662e64\n"
".quad 0x326625202c373632,0x39386625202c3636,0x33662e6275730a3b,0x2c38363266252032\n"
".quad 0x202c373632662520,0x6c2e0a3b31376625,0x313932203220636f,0x2e6464610a312037\n"
".quad 0x3632662520323366,0x3836326625202c39,0x0a3b37376625202c,0x203233662e67656e\n"
".quad 0x25202c3037326625,0x6275730a3b333566,0x326625203233662e,0x37326625202c3137\n"
".quad 0x3b37346625202c30,0x203220636f6c2e0a,0x610a312037313932,0x25203233662e6464\n"
".quad 0x6625202c32373266,0x356625202c313732,0x662e6464610a3b39,0x3337326625203233\n"
".quad 0x2c3237326625202c,0x610a3b3536662520,0x25203233662e6464,0x6625202c34373266\n"
".quad 0x376625202c333732,0x33662e6275730a3b,0x2c35373266252032,0x202c343732662520\n"
".quad 0x6f6c2e0a3b386625,0x3731393220322063,0x662e6464610a3120,0x3637326625203233\n"
".quad 0x2c3537326625202c,0x730a3b3031662520,0x25203233662e6275,0x6625202c37373266\n"
".quad 0x346625202c363732,0x2e6275730a3b3735,0x3732662520323366,0x2c33386625202c38\n"
".quad 0x6c2e0a3b37662520,0x313932203220636f,0x2e6464610a312037,0x3732662520323366\n"
".quad 0x3837326625202c39,0x0a3b39386625202c,0x203233662e627573,0x25202c3038326625\n"
".quad 0x6625202c39373266,0x662e6275730a3b38,0x3138326625203233,0x2c3038326625202c\n"
".quad 0x2e0a3b3137662520,0x3932203220636f6c,0x6464610a31203731,0x326625203233662e\n"
".quad 0x38326625202c3238,0x3b30316625202c31,0x3233662e6275730a,0x202c333832662520\n"
".quad 0x25202c3238326625,0x6f6c2e0a3b373766,0x3731393220322063,0x662e6464610a3120\n"
".quad 0x3438326625203233,0x2c3338326625202c,0x0a3b373534662520,0x203233662e766f6d\n"
".quad 0x30202c3538326625,0x3030303038453366,0x61702e646c0a3b30,0x203233662e6d6172\n"
".quad 0x5b202c3635346625,0x645f524c33315a5f,0x434441426279685f,0x666d665f53665032\n"
".quad 0x5f6d617261705f69,0x636f6c2e0a3b5d32,0x2037313932203220,0x33662e6c756d0a31\n"
".quad 0x2c36383266252032,0x202c363534662520,0x3030303845336630,0x2e766f6d0a3b3030\n"
".quad 0x3832662520323366,0x3045336630202c37,0x2e0a3b3030303030,0x3932203220636f6c\n"
".quad 0x6c756d0a31203731,0x326625203233662e,0x34326625202c3838,0x3244336630202c39\n"
".quad 0x6d0a3b4241414141,0x25203233662e766f,0x6630202c39383266,0x4241414141324433\n"
".quad 0x3220636f6c2e0a3b,0x0a31203731393220,0x203233662e6c756d,0x25202c3039326625\n"
".quad 0x6630202c36353466,0x4241414141414433,0x33662e6c756d0a3b,0x2c31393266252032\n"
".quad 0x202c333232662520,0x4538333643336630,0x2e6c756d0a3b3933,0x3932662520323366\n"
".quad 0x3635346625202c32,0x334543336630202c,0x756d0a3b39334538,0x6625203233662e6c\n"
".quad 0x326625202c333932,0x39326625202c3230,0x662e6c756d0a3b32,0x3439326625203233\n"
".quad 0x2c3137316625202c,0x4343434333663020,0x766f6d0a3b444343,0x326625203233662e\n"
".quad 0x43336630202c3539,0x0a3b444343434343,0x32203220636f6c2e,0x756d0a3120373139\n"
".quad 0x6625203233662e6c,0x316625202c363932,0x43336630202c3437,0x0a3b444343434343\n"
".quad 0x203233662e6c756d,0x25202c3739326625,0x6630202c37373166,0x4443434343434333\n"
".quad 0x33662e6c756d0a3b,0x2c38393266252032,0x202c383631662520,0x3830323842336630\n"
".quad 0x2e6c756d0a3b3132,0x3932662520323366,0x3839326625202c39,0x303431346630202c\n"
".quad 0x6d660a3b30303030,0x3233662e6e722e61,0x202c303033662520,0x30202c3834316625\n"
".quad 0x3346433337454266,0x3939326625202c44,0x33662e6275730a3b,0x2c31303366252032\n"
".quad 0x6625202c33662520,0x6c756d0a3b303033,0x336625203233662e,0x39326625202c3230\n"
".quad 0x3830436630202c38,0x660a3b3030303030,0x33662e6e722e616d,0x2c33303366252032\n"
".quad 0x202c383431662520,0x4243324244426630,0x30336625202c4432,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x326625202c343033,0x30436630202c3439,0x202c303030303038\n"
".quad 0x660a3b3330336625,0x33662e6e722e616d,0x2c35303366252032,0x202c323032662520\n"
".quad 0x25202c3239326625,0x64610a3b33393266,0x6625203233662e64,0x336625202c363033\n"
".quad 0x30336625202c3430,0x722e616d660a3b35,0x6625203233662e6e,0x326625202c373033\n"
".quad 0x30436630202c3139,0x202c303030303038,0x730a3b3630336625,0x25203233662e6275\n"
".quad 0x6625202c38303366,0x30336625202c3533,0x722e616d660a3b37,0x6625203233662e6e\n"
".quad 0x326625202c393033,0x30436630202c3639,0x202c303030303038,0x6e0a3b3330336625\n"
".quad 0x25203233662e6765,0x6625202c30313366,0x616d660a3b323032,0x203233662e6e722e\n"
".quad 0x25202c3131336625,0x6625202c30313366,0x336625202c323932,0x636f6c2e0a3b3930\n"
".quad 0x2037313932203220,0x6e722e616d660a31,0x336625203233662e,0x32326625202c3231\n"
".quad 0x3643336630202c33,0x25202c3933453833,0x64610a3b31393266,0x6625203233662e64\n"
".quad 0x336625202c333133,0x31336625202c3131,0x722e616d660a3b32,0x6625203233662e6e\n"
".quad 0x326625202c343133,0x39326625202c3733,0x3331336625202c30,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x38326625202c3531,0x3030436630202c38,0x25202c3030303030\n"
".quad 0x75730a3b34313366,0x6625203233662e62,0x346625202c363133,0x3b3531336625202c\n"
".quad 0x2e6e722e616d660a,0x3133662520323366,0x3439326625202c37,0x303830346630202c\n"
".quad 0x6625202c30303030,0x6464610a3b333033,0x336625203233662e,0x31336625202c3831\n"
".quad 0x3530336625202c37,0x6e722e616d660a3b,0x336625203233662e,0x39326625202c3931\n"
".quad 0x3830436630202c31,0x25202c3030303030,0x75730a3b38313366,0x6625203233662e62\n"
".quad 0x346625202c303233,0x3931336625202c31,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x39326625202c3132,0x3830346630202c36,0x25202c3030303030,0x6d660a3b33303366\n"
".quad 0x3233662e6e722e61,0x202c323233662520,0x25202c3031336625,0x6625202c32393266\n"
".quad 0x6f6c2e0a3b313233,0x3731393220322063,0x662e6464610a3120,0x3332336625203233\n"
".quad 0x2c3232336625202c,0x0a3b323133662520,0x662e6e722e616d66,0x3432336625203233\n"
".quad 0x2c3733326625202c,0x202c303932662520,0x660a3b3332336625,0x33662e6e722e616d\n"
".quad 0x2c35323366252032,0x202c383832662520,0x3030303030436630,0x32336625202c3030\n"
".quad 0x662e6275730a3b34,0x3632336625203233,0x25202c356625202c,0x6d660a3b35323366\n"
".quad 0x3233662e6e722e61,0x202c373233662520,0x30202c3834316625,0x3238303238443366\n"
".quad 0x3839326625202c30,0x6e722e616d660a3b,0x336625203233662e,0x37316625202c3832\n"
".quad 0x4343336630202c31,0x25202c4443434343,0x6d660a3b37323366,0x3233662e6e722e61\n"
".quad 0x202c393233662520,0x30202c3437316625,0x4343434343433366,0x3832336625202c44\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x30326625202c3033,0x3239326625202c32\n"
".quad 0x3b3932336625202c,0x2e6e722e616d660a,0x3333662520323366,0x3332326625202c31\n"
".quad 0x333643336630202c,0x6625202c39334538,0x616d660a3b303333,0x203233662e6e722e\n"
".quad 0x25202c3233336625,0x6625202c37333266,0x336625202c303932,0x2e616d660a3b3133\n"
".quad 0x25203233662e6e72,0x6625202c33333366,0x336630202c393432,0x2c42414141413244\n"
".quad 0x0a3b323333662520,0x662e6e722e616d66,0x3433336625203233,0x2c3435326625202c\n"
".quad 0x3030384533663020,0x336625202c303030,0x2e616d660a3b3333,0x25203233662e6e72\n"
".quad 0x6625202c35333366,0x336630202c393632,0x2c30303030303045,0x0a3b343333662520\n"
".quad 0x203233662e67656e,0x25202c3633336625,0x6d660a3b37373266,0x3233662e6e722e61\n"
".quad 0x202c373333662520,0x25202c3633336625,0x6625202c37383266,0x6f6c2e0a3b353333\n"
".quad 0x3731393220322063,0x662e6275730a3120,0x3833336625203233,0x202c37346625202c\n"
".quad 0x6e0a3b3733336625,0x25203233662e6765,0x6625202c39333366,0x616d660a3b313731\n"
".quad 0x203233662e6e722e,0x25202c3034336625,0x6625202c39333366,0x336625202c353932\n"
".quad 0x636f6c2e0a3b3732,0x2037313932203220,0x6e722e616d660a31,0x336625203233662e\n"
".quad 0x37316625202c3134,0x4343336630202c34,0x25202c4443434343,0x6d660a3b30343366\n"
".quad 0x3233662e6e722e61,0x202c323433662520,0x25202c3230326625,0x6625202c32393266\n"
".quad 0x616d660a3b313433,0x203233662e6e722e,0x25202c3334336625,0x6630202c33323266\n"
".quad 0x3933453833364333,0x3b3234336625202c,0x2e6e722e616d660a,0x3433662520323366\n"
".quad 0x3733326625202c34,0x2c3039326625202c,0x0a3b333433662520,0x662e6e722e616d66\n"
".quad 0x3534336625203233,0x2c3934326625202c,0x4141324433663020,0x336625202c424141\n"
".quad 0x2e67656e0a3b3434,0x3433662520323366,0x3435326625202c36,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x34336625202c3734,0x3538326625202c36,0x3b3534336625202c\n"
".quad 0x3233662e67656e0a,0x202c383433662520,0x660a3b3936326625,0x33662e6e722e616d\n"
".quad 0x2c39343366252032,0x202c383433662520,0x25202c3738326625,0x6d660a3b37343366\n"
".quad 0x3233662e6e722e61,0x202c303533662520,0x25202c3633336625,0x6625202c37383266\n"
".quad 0x6f6c2e0a3b393433,0x3731393220322063,0x662e6275730a3120,0x3135336625203233\n"
".quad 0x202c33356625202c,0x6e0a3b3035336625,0x25203233662e6765,0x6625202c32353366\n"
".quad 0x616d660a3b343731,0x203233662e6e722e,0x25202c3335336625,0x6625202c32353366\n"
".quad 0x336625202c353932,0x636f6c2e0a3b3034,0x2037313932203220,0x6e722e616d660a31\n"
".quad 0x336625203233662e,0x30326625202c3435,0x3239326625202c32,0x3b3335336625202c\n"
".quad 0x2e6e722e616d660a,0x3533662520323366,0x3332326625202c35,0x333643336630202c\n"
".quad 0x6625202c39334538,0x616d660a3b343533,0x203233662e6e722e,0x25202c3635336625\n"
".quad 0x6625202c37333266,0x336625202c303932,0x2e616d660a3b3535,0x25203233662e6e72\n"
".quad 0x6625202c37353366,0x336630202c393432,0x2c42414141413244,0x0a3b363533662520\n"
".quad 0x662e6e722e616d66,0x3835336625203233,0x2c3435326625202c,0x3030384533663020\n"
".quad 0x336625202c303030,0x2e616d660a3b3735,0x25203233662e6e72,0x6625202c39353366\n"
".quad 0x326625202c383433,0x35336625202c3738,0x20636f6c2e0a3b38,0x3120373139322032\n"
".quad 0x2e6e722e616d660a,0x3633662520323366,0x3737326625202c30,0x303045336630202c\n"
".quad 0x6625202c30303030,0x6275730a3b393533,0x336625203233662e,0x39356625202c3136\n"
".quad 0x3b3036336625202c,0x2e6e722e616d660a,0x3633662520323366,0x3235336625202c32\n"
".quad 0x2c3539326625202c,0x0a3b383233662520,0x32203220636f6c2e,0x6d660a3120373139\n"
".quad 0x3233662e6e722e61,0x202c333633662520,0x25202c3230326625,0x6625202c32393266\n"
".quad 0x616d660a3b323633,0x203233662e6e722e,0x25202c3436336625,0x6630202c33323266\n"
".quad 0x3933453833364333,0x3b3336336625202c,0x2e6e722e616d660a,0x3633662520323366\n"
".quad 0x3733326625202c35,0x2c3039326625202c,0x0a3b343633662520,0x662e6e722e616d66\n"
".quad 0x3636336625203233,0x2c3934326625202c,0x4141324433663020,0x336625202c424141\n"
".quad 0x2e616d660a3b3536,0x25203233662e6e72,0x6625202c37363366,0x326625202c363433\n"
".quad 0x36336625202c3538,0x20636f6c2e0a3b36,0x3120373139322032,0x2e6e722e616d660a\n"
".quad 0x3633662520323366,0x3936326625202c38,0x303045336630202c,0x6625202c30303030\n"
".quad 0x616d660a3b373633,0x203233662e6e722e,0x25202c3936336625,0x6630202c37373266\n"
".quad 0x3030303030304533,0x3b3836336625202c,0x3233662e6275730a,0x202c303733662520\n"
".quad 0x6625202c35366625,0x616d660a3b393633,0x203233662e6e722e,0x25202c3137336625\n"
".quad 0x6630202c37393266,0x3030303030383043,0x3b3330336625202c,0x2e6e722e616d660a\n"
".quad 0x3733662520323366,0x3031336625202c32,0x2c3239326625202c,0x0a3b313733662520\n"
".quad 0x32203220636f6c2e,0x64610a3120373139,0x6625203233662e64,0x336625202c333733\n"
".quad 0x31336625202c3237,0x662e67656e0a3b32,0x3437336625203233,0x3b3733326625202c\n"
".quad 0x2e6e722e616d660a,0x3733662520323366,0x3437336625202c35,0x2c3039326625202c\n"
".quad 0x0a3b333733662520,0x32203220636f6c2e,0x6d660a3120373139,0x3233662e6e722e61\n"
".quad 0x202c363733662520,0x30202c3934326625,0x4141414132443366,0x3838326625202c42\n"
".quad 0x33662e6464610a3b,0x2c37373366252032,0x202c353733662520,0x730a3b3637336625\n"
".quad 0x25203233662e6275,0x6625202c38373366,0x3737336625202c36,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x37316625202c3937,0x4343336630202c37,0x25202c4443434343\n"
".quad 0x6d660a3b38323366,0x3233662e6e722e61,0x202c303833662520,0x25202c3230326625\n"
".quad 0x6625202c32393266,0x616d660a3b393733,0x203233662e6e722e,0x25202c3138336625\n"
".quad 0x6630202c33323266,0x3933453833364333,0x3b3038336625202c,0x2e6e722e616d660a\n"
".quad 0x3833662520323366,0x3437336625202c32,0x2c3039326625202c,0x0a3b313833662520\n"
".quad 0x203233662e67656e,0x25202c3338336625,0x6d660a3b39343266,0x3233662e6e722e61\n"
".quad 0x202c343833662520,0x25202c3338336625,0x6625202c39383266,0x6f6c2e0a3b323833\n"
".quad 0x3731393220322063,0x722e616d660a3120,0x6625203233662e6e,0x326625202c353833\n"
".quad 0x38326625202c3336,0x3438336625202c36,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x34336625202c3638,0x3738326625202c38,0x3b3538336625202c,0x203220636f6c2e0a\n"
".quad 0x660a312037313932,0x33662e6e722e616d,0x2c37383366252032,0x202c343832662520\n"
".quad 0x3030303045336630,0x38336625202c3030,0x662e6275730a3b36,0x3838336625203233\n"
".quad 0x202c33386625202c,0x660a3b3738336625,0x33662e6e722e616d,0x2c39383366252032\n"
".quad 0x202c343731662520,0x4343434343336630,0x32336625202c4443,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x316625202c303933,0x43336630202c3737,0x202c444343434343\n"
".quad 0x660a3b3938336625,0x33662e6e722e616d,0x2c31393366252032,0x202c333932662520\n"
".quad 0x3030303030436630,0x39336625202c3030,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x326625202c323933,0x30436630202c3139,0x202c303030303030,0x660a3b3139336625\n"
".quad 0x33662e6e722e616d,0x2c33393366252032,0x202c393532662520,0x3030303845336630\n"
".quad 0x39336625202c3030,0x722e616d660a3b32,0x6625203233662e6e,0x326625202c343933\n"
".quad 0x45336630202c3737,0x202c303030303030,0x6e0a3b3339336625,0x25203233662e6765\n"
".quad 0x6625202c35393366,0x616d660a3b343832,0x203233662e6e722e,0x25202c3639336625\n"
".quad 0x6625202c35393366,0x336625202c373832,0x636f6c2e0a3b3439,0x2037313932203220\n"
".quad 0x33662e6275730a31,0x2c37393366252032,0x6625202c37662520,0x616d660a3b363933\n"
".quad 0x203233662e6e722e,0x25202c3839336625,0x6630202c37373166,0x4443434343434333\n"
".quad 0x3b3034336625202c,0x2e6e722e616d660a,0x3933662520323366,0x3230326625202c39\n"
".quad 0x2c3239326625202c,0x0a3b383933662520,0x662e6e722e616d66,0x3030346625203233\n"
".quad 0x2c3332326625202c,0x3833364333663020,0x336625202c393345,0x2e616d660a3b3939\n"
".quad 0x25203233662e6e72,0x6625202c31303466,0x326625202c343733,0x30346625202c3039\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x336625202c323034,0x38326625202c3338\n"
".quad 0x3130346625202c39,0x33662e67656e0a3b,0x2c33303466252032,0x0a3b333632662520\n"
".quad 0x662e6e722e616d66,0x3430346625203233,0x2c3330346625202c,0x202c363832662520\n"
".quad 0x2e0a3b3230346625,0x3932203220636f6c,0x616d660a31203731,0x203233662e6e722e\n"
".quad 0x25202c3530346625,0x6630202c39363266,0x3030303030304533,0x3b3430346625202c\n"
".quad 0x2e6e722e616d660a,0x3034662520323366,0x3438326625202c36,0x303045336630202c\n"
".quad 0x6625202c30303030,0x6275730a3b353034,0x346625203233662e,0x39386625202c3730\n"
".quad 0x3b3630346625202c,0x2e6e722e616d660a,0x3034662520323366,0x3235336625202c38\n"
".quad 0x2c3539326625202c,0x0a3b373233662520,0x32203220636f6c2e,0x6d660a3120373139\n"
".quad 0x3233662e6e722e61,0x202c393034662520,0x30202c3737316625,0x4343434343433366\n"
".quad 0x3830346625202c44,0x6e722e616d660a3b,0x346625203233662e,0x39326625202c3031\n"
".quad 0x3030436630202c33,0x25202c3030303030,0x6d660a3b39303466,0x3233662e6e722e61\n"
".quad 0x202c313134662520,0x30202c3139326625,0x3030303030304366,0x3031346625202c30\n"
".quad 0x33662e67656e0a3b,0x2c32313466252032,0x0a3b393532662520,0x662e6e722e616d66\n"
".quad 0x3331346625203233,0x2c3231346625202c,0x202c353832662520,0x660a3b3131346625\n"
".quad 0x33662e6e722e616d,0x2c34313466252032,0x202c363333662520,0x25202c3738326625\n"
".quad 0x6d660a3b33313466,0x3233662e6e722e61,0x202c353134662520,0x25202c3539336625\n"
".quad 0x6625202c37383266,0x6f6c2e0a3b343134,0x3731393220322063,0x662e6275730a3120\n"
".quad 0x3631346625203233,0x25202c386625202c,0x6d660a3b35313466,0x3233662e6e722e61\n"
".quad 0x202c373134662520,0x30202c3739326625,0x3030303038303466,0x3330336625202c30\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x31336625202c3831,0x3239326625202c30\n"
".quad 0x3b3731346625202c,0x203220636f6c2e0a,0x610a312037313932,0x25203233662e6464\n"
".quad 0x6625202c39313466,0x336625202c383134,0x2e616d660a3b3231,0x25203233662e6e72\n"
".quad 0x6625202c30323466,0x326625202c343733,0x31346625202c3039,0x20636f6c2e0a3b39\n"
".quad 0x3120373139322032,0x3233662e6464610a,0x202c313234662520,0x25202c3032346625\n"
".quad 0x75730a3b36373366,0x6625203233662e62,0x396625202c323234,0x3b3132346625202c\n"
".quad 0x3233662e67656e0a,0x202c333234662520,0x660a3b3737316625,0x33662e6e722e616d\n"
".quad 0x2c34323466252032,0x202c333234662520,0x25202c3539326625,0x6c2e0a3b38323366\n"
".quad 0x313932203220636f,0x2e616d660a312037,0x25203233662e6e72,0x6625202c35323466\n"
".quad 0x326625202c323032,0x32346625202c3239,0x722e616d660a3b34,0x6625203233662e6e\n"
".quad 0x326625202c363234,0x43336630202c3332,0x202c393345383336,0x660a3b3532346625\n"
".quad 0x33662e6e722e616d,0x2c37323466252032,0x202c343733662520,0x25202c3039326625\n"
".quad 0x6d660a3b36323466,0x3233662e6e722e61,0x202c383234662520,0x25202c3338336625\n"
".quad 0x6625202c39383266,0x616d660a3b373234,0x203233662e6e722e,0x25202c3932346625\n"
".quad 0x6625202c33303466,0x346625202c363832,0x2e616d660a3b3832,0x25203233662e6e72\n"
".quad 0x6625202c30333466,0x326625202c383433,0x32346625202c3738,0x722e616d660a3b39\n"
".quad 0x6625203233662e6e,0x336625202c313334,0x38326625202c3539,0x3033346625202c37\n"
".quad 0x3220636f6c2e0a3b,0x0a31203731393220,0x203233662e627573,0x25202c3233346625\n"
".quad 0x346625202c313766,0x2e616d660a3b3133,0x25203233662e6e72,0x6625202c33333466\n"
".quad 0x326625202c333234,0x38336625202c3539,0x20636f6c2e0a3b39,0x3120373139322032\n"
".quad 0x2e6e722e616d660a,0x3334662520323366,0x3339326625202c34,0x303030436630202c\n"
".quad 0x6625202c30303030,0x616d660a3b333334,0x203233662e6e722e,0x25202c3533346625\n"
".quad 0x6630202c31393266,0x3030303030303043,0x3b3433346625202c,0x2e6e722e616d660a\n"
".quad 0x3334662520323366,0x3231346625202c36,0x2c3538326625202c,0x0a3b353334662520\n"
".quad 0x32203220636f6c2e,0x6d660a3120373139,0x3233662e6e722e61,0x202c373334662520\n"
".quad 0x30202c3737326625,0x3030303030453366,0x3633346625202c30,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x38326625202c3833,0x3045336630202c34,0x25202c3030303030\n"
".quad 0x75730a3b37333466,0x6625203233662e62,0x316625202c393334,0x3833346625202c30\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x32346625202c3034,0x3539326625202c33\n"
".quad 0x3b3034336625202c,0x203220636f6c2e0a,0x660a312037313932,0x33662e6e722e616d\n"
".quad 0x2c31343466252032,0x202c323032662520,0x25202c3239326625,0x6d660a3b30343466\n"
".quad 0x3233662e6e722e61,0x202c323434662520,0x30202c3332326625,0x3345383336433366\n"
".quad 0x3134346625202c39,0x6e722e616d660a3b,0x346625203233662e,0x37336625202c3334\n"
".quad 0x3039326625202c34,0x3b3234346625202c,0x2e6e722e616d660a,0x3434662520323366\n"
".quad 0x3338336625202c34,0x2c3938326625202c,0x0a3b333434662520,0x32203220636f6c2e\n"
".quad 0x6d660a3120373139,0x3233662e6e722e61,0x202c353434662520,0x25202c3336326625\n"
".quad 0x6625202c36383266,0x616d660a3b343434,0x203233662e6e722e,0x25202c3634346625\n"
".quad 0x6630202c39363266,0x3030303030304533,0x3b3534346625202c,0x2e6e722e616d660a\n"
".quad 0x3434662520323366,0x3539336625202c37,0x2c3738326625202c,0x0a3b363434662520\n"
".quad 0x32203220636f6c2e,0x75730a3120373139,0x6625203233662e62,0x376625202c383434\n"
".quad 0x3734346625202c37,0x6e722e616d660a3b,0x346625203233662e,0x32346625202c3934\n"
".quad 0x3539326625202c33,0x3b3830346625202c,0x203220636f6c2e0a,0x660a312037313932\n"
".quad 0x33662e6e722e616d,0x2c30353466252032,0x202c333932662520,0x3030303030436630\n"
".quad 0x34346625202c3030,0x722e616d660a3b39,0x6625203233662e6e,0x326625202c313534\n"
".quad 0x30436630202c3139,0x202c303030303030,0x660a3b3035346625,0x33662e6e722e616d\n"
".quad 0x2c32353466252032,0x202c393532662520,0x3030303845336630,0x35346625202c3030\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x336625202c333534,0x38326625202c3633\n"
".quad 0x3235346625202c37,0x3220636f6c2e0a3b,0x0a31203731393220,0x662e6e722e616d66\n"
".quad 0x3435346625203233,0x2c3438326625202c,0x3030304533663020,0x346625202c303030\n"
".quad 0x2e6275730a3b3335,0x3534662520323366,0x3735346625202c35,0x3b3435346625202c\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3331336c,0x5f645f524c33315a\n"
".quad 0x3243444142627968,0x69666d665f536650,0x335f6d617261705f,0x20636f6c2e0a3b5d\n"
".quad 0x3120323538322032,0x2e6f6c2e64616d0a,0x386c722520343673,0x2c396c7225202c32\n"
".quad 0x2c3331336c722520,0x6c0a3b356c722520,0x2e6d617261702e64,0x336c722520343675\n"
".quad 0x315a5f5b202c3131,0x79685f645f524c33,0x6650324344414262,0x705f69666d665f53\n"
".quad 0x3b5d315f6d617261,0x6f742e617476630a,0x2e6c61626f6c672e,0x386c722520343675\n"
".quad 0x31336c7225202c33,0x622e6c68730a3b31,0x34386c7225203436,0x2c32386c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x386c7225202c3538,0x2e0a3b3233202c34\n"
".quad 0x3932203220636f6c,0x6c68730a31203132,0x6c7225203436622e,0x386c7225202c3638\n"
".quad 0x64610a3b32202c35,0x7225203436732e64,0x6c7225202c37386c,0x386c7225202c3338\n"
".quad 0x6c672e74730a3b36,0x3233662e6c61626f,0x5d37386c72255b20,0x3b3130336625202c\n"
".quad 0x3436732e6464610a,0x202c38386c722520,0x3034202c396c7225,0x636f6c2e0a3b3639\n"
".quad 0x2034383832203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x386c7225202c3938\n"
".quad 0x31336c7225202c38,0x3b356c7225202c33,0x3436622e6c68730a,0x202c30396c722520\n"
".quad 0x33202c39386c7225,0x732e7268730a3b32,0x31396c7225203436,0x2c30396c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x3438383220322063,0x622e6c68730a3120,0x32396c7225203436\n"
".quad 0x2c31396c7225202c,0x2e6464610a3b3220,0x396c722520343673,0x33386c7225202c33\n"
".quad 0x3b32396c7225202c,0x203220636f6c2e0a,0x730a312032323932,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x6625202c5d33396c,0x6464610a3b383033,0x6c7225203436732e\n"
".quad 0x396c7225202c3439,0x0a3b32393138202c,0x32203220636f6c2e,0x616d0a3120353838\n"
".quad 0x3436732e6f6c2e64,0x202c35396c722520,0x25202c34396c7225,0x25202c3331336c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x396c7225202c3639,0x730a3b3233202c35\n"
".quad 0x25203436732e7268,0x7225202c37396c72,0x3b3233202c36396c,0x203220636f6c2e0a\n"
".quad 0x730a312035383832,0x25203436622e6c68,0x7225202c38396c72,0x0a3b32202c37396c\n"
".quad 0x203436732e646461,0x25202c39396c7225,0x7225202c33386c72,0x6f6c2e0a3b38396c\n"
".quad 0x3332393220322063,0x6c672e74730a3120,0x3233662e6c61626f,0x5d39396c72255b20\n"
".quad 0x3b3631336625202c,0x3436732e6464610a,0x2c3030316c722520,0x31202c396c722520\n"
".quad 0x6c2e0a3b38383232,0x383832203220636f,0x2e64616d0a312036,0x25203436732e6f6c\n"
".quad 0x25202c3130316c72,0x25202c3030316c72,0x25202c3331336c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c323031,0x3b3233202c313031,0x3436732e7268730a\n"
".quad 0x2c3330316c722520,0x2c3230316c722520,0x6f6c2e0a3b323320,0x3638383220322063\n"
".quad 0x622e6c68730a3120,0x30316c7225203436,0x30316c7225202c34,0x64610a3b32202c33\n"
".quad 0x7225203436732e64,0x7225202c3530316c,0x6c7225202c33386c,0x6f6c2e0a3b343031\n"
".quad 0x3432393220322063,0x6c672e74730a3120,0x3233662e6c61626f,0x3530316c72255b20\n"
".quad 0x3032336625202c5d,0x36732e6464610a3b,0x3630316c72252034,0x202c396c7225202c\n"
".quad 0x2e0a3b3438333631,0x3832203220636f6c,0x64616d0a31203738,0x203436732e6f6c2e\n"
".quad 0x202c3730316c7225,0x202c3630316c7225,0x202c3331336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3830316c,0x3233202c3730316c,0x36732e7268730a3b\n"
".quad 0x3930316c72252034,0x3830316c7225202c,0x6c2e0a3b3233202c,0x383832203220636f\n"
".quad 0x2e6c68730a312037,0x316c722520343662,0x316c7225202c3031,0x610a3b32202c3930\n"
".quad 0x25203436732e6464,0x25202c3131316c72,0x7225202c33386c72,0x6c2e0a3b3031316c\n"
".quad 0x323932203220636f,0x672e74730a312035,0x33662e6c61626f6c,0x31316c72255b2032\n"
".quad 0x32336625202c5d31,0x732e6464610a3b36,0x31316c7225203436,0x2c396c7225202c32\n"
".quad 0x0a3b303834303220,0x32203220636f6c2e,0x616d0a3120383838,0x3436732e6f6c2e64\n"
".quad 0x2c3331316c722520,0x2c3231316c722520,0x2c3331336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3431316c72,0x33202c3331316c72,0x732e7268730a3b32\n"
".quad 0x31316c7225203436,0x31316c7225202c35,0x2e0a3b3233202c34,0x3832203220636f6c\n"
".quad 0x6c68730a31203838,0x6c7225203436622e,0x6c7225202c363131,0x0a3b32202c353131\n"
".quad 0x203436732e646461,0x202c3731316c7225,0x25202c33386c7225,0x2e0a3b3631316c72\n"
".quad 0x3932203220636f6c,0x2e74730a31203632,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x336625202c5d3731,0x2e6464610a3b3833,0x316c722520343673,0x396c7225202c3831\n"
".quad 0x3b3637353432202c,0x203220636f6c2e0a,0x6d0a312039383832,0x36732e6f6c2e6461\n"
".quad 0x3931316c72252034,0x3831316c7225202c,0x3331336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3032316c7225,0x202c3931316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3132,0x0a3b3233202c3032,0x32203220636f6c2e\n"
".quad 0x68730a3120393838,0x7225203436622e6c,0x7225202c3232316c,0x3b32202c3132316c\n"
".quad 0x3436732e6464610a,0x2c3332316c722520,0x202c33386c722520,0x0a3b3232316c7225\n"
".quad 0x32203220636f6c2e,0x74730a3120373239,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d333231,0x6464610a3b313533,0x6c7225203436732e,0x6c7225202c343231\n"
".quad 0x3237363832202c39,0x3220636f6c2e0a3b,0x0a31203039383220,0x732e6f6c2e64616d\n"
".quad 0x32316c7225203436,0x32316c7225202c35,0x31336c7225202c34,0x3b356c7225202c33\n"
".quad 0x3436622e6c68730a,0x2c3632316c722520,0x2c3532316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c373231,0x3b3233202c363231,0x203220636f6c2e0a\n"
".quad 0x730a312030393832,0x25203436622e6c68,0x25202c3832316c72,0x32202c3732316c72\n"
".quad 0x36732e6464610a3b,0x3932316c72252034,0x2c33386c7225202c,0x3b3832316c722520\n"
".quad 0x203220636f6c2e0a,0x730a312038323932,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3932316c,0x64610a3b31363366,0x7225203436732e64,0x7225202c3033316c\n"
".quad 0x36373233202c396c,0x20636f6c2e0a3b38,0x3120313938322032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3133,0x336c7225202c3033,0x356c7225202c3331\n"
".quad 0x36622e6c68730a3b,0x3233316c72252034,0x3133316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3333316c,0x3233202c3233316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203139383220,0x203436622e6c6873,0x202c3433316c7225,0x202c3333316c7225\n"
".quad 0x732e6464610a3b32,0x33316c7225203436,0x33386c7225202c35,0x3433316c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203932393220,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3533316c72,0x610a3b3037336625,0x25203436732e6464,0x25202c3633316c72\n"
".quad 0x383633202c396c72,0x636f6c2e0a3b3436,0x2032393832203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c373331,0x6c7225202c363331,0x6c7225202c333133\n"
".quad 0x622e6c68730a3b35,0x33316c7225203436,0x33316c7225202c38,0x730a3b3233202c37\n"
".quad 0x25203436732e7268,0x25202c3933316c72,0x33202c3833316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120323938322032,0x3436622e6c68730a,0x2c3034316c722520,0x2c3933316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x386c7225202c3134,0x34316c7225202c33\n"
".quad 0x20636f6c2e0a3b30,0x3120303339322032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3134316c7225,0x0a3b383733662520,0x203436732e646461,0x202c3234316c7225\n"
".quad 0x3034202c396c7225,0x6f6c2e0a3b303639,0x3339383220322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3334316c,0x7225202c3234316c,0x7225202c3331336c\n"
".quad 0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3434,0x0a3b3233202c3334\n"
".quad 0x203436732e726873,0x202c3534316c7225,0x202c3434316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2033393832203220,0x36622e6c68730a31,0x3634316c72252034,0x3534316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c373431,0x316c7225202c3338\n"
".quad 0x636f6c2e0a3b3634,0x2031333932203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x5d3734316c72255b,0x3b3838336625202c,0x3436732e6464610a,0x2c3834316c722520\n"
".quad 0x34202c396c722520,0x6c2e0a3b36353035,0x393832203220636f,0x2e64616d0a312034\n"
".quad 0x25203436732e6f6c,0x25202c3934316c72,0x25202c3834316c72,0x25202c3331336c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c303531,0x3b3233202c393431\n"
".quad 0x3436732e7268730a,0x2c3135316c722520,0x2c3035316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3439383220322063,0x622e6c68730a3120,0x35316c7225203436,0x35316c7225202c32\n"
".quad 0x64610a3b32202c31,0x7225203436732e64,0x7225202c3335316c,0x6c7225202c33386c\n"
".quad 0x6f6c2e0a3b323531,0x3233393220322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3335316c72255b20,0x3739336625202c5d,0x36732e6464610a3b,0x3435316c72252034\n"
".quad 0x202c396c7225202c,0x2e0a3b3235313934,0x3832203220636f6c,0x64616d0a31203539\n"
".quad 0x203436732e6f6c2e,0x202c3535316c7225,0x202c3435316c7225,0x202c3331336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3635316c,0x3233202c3535316c\n"
".quad 0x36732e7268730a3b,0x3735316c72252034,0x3635316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x393832203220636f,0x2e6c68730a312035,0x316c722520343662,0x316c7225202c3835\n"
".quad 0x610a3b32202c3735,0x25203436732e6464,0x25202c3935316c72,0x7225202c33386c72\n"
".quad 0x6c2e0a3b3835316c,0x333932203220636f,0x672e74730a312033,0x33662e6c61626f6c\n"
".quad 0x35316c72255b2032,0x30346625202c5d39,0x732e6464610a3b37,0x36316c7225203436\n"
".quad 0x2c396c7225202c30,0x0a3b383432333520,0x32203220636f6c2e,0x616d0a3120363938\n"
".quad 0x3436732e6f6c2e64,0x2c3136316c722520,0x2c3036316c722520,0x2c3331336c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3236316c72,0x33202c3136316c72\n"
".quad 0x732e7268730a3b32,0x36316c7225203436,0x36316c7225202c33,0x2e0a3b3233202c32\n"
".quad 0x3832203220636f6c,0x6c68730a31203639,0x6c7225203436622e,0x6c7225202c343631\n"
".quad 0x0a3b32202c333631,0x203436732e646461,0x202c3536316c7225,0x25202c33386c7225\n"
".quad 0x2e0a3b3436316c72,0x3932203220636f6c,0x2e74730a31203433,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x346625202c5d3536,0x2e6464610a3b3631,0x316c722520343673\n"
".quad 0x396c7225202c3636,0x3b3434333735202c,0x203220636f6c2e0a,0x6d0a312037393832\n"
".quad 0x36732e6f6c2e6461,0x3736316c72252034,0x3636316c7225202c,0x3331336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3836316c7225,0x202c3736316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3936,0x0a3b3233202c3836\n"
".quad 0x32203220636f6c2e,0x68730a3120373938,0x7225203436622e6c,0x7225202c3037316c\n"
".quad 0x3b32202c3936316c,0x3436732e6464610a,0x2c3137316c722520,0x202c33386c722520\n"
".quad 0x0a3b3037316c7225,0x32203220636f6c2e,0x74730a3120353339,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d313731,0x6464610a3b323234,0x6c7225203436732e\n"
".quad 0x6c7225202c323731,0x3034343136202c39,0x3220636f6c2e0a3b,0x0a31203839383220\n"
".quad 0x732e6f6c2e64616d,0x37316c7225203436,0x37316c7225202c33,0x31336c7225202c32\n"
".quad 0x3b356c7225202c33,0x3436622e6c68730a,0x2c3437316c722520,0x2c3337316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c353731,0x3b3233202c343731\n"
".quad 0x203220636f6c2e0a,0x730a312038393832,0x25203436622e6c68,0x25202c3637316c72\n"
".quad 0x32202c3537316c72,0x36732e6464610a3b,0x3737316c72252034,0x2c33386c7225202c\n"
".quad 0x3b3637316c722520,0x203220636f6c2e0a,0x730a312036333932,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3737316c,0x64610a3b32333466,0x7225203436732e64\n"
".quad 0x7225202c3837316c,0x33353536202c396c,0x20636f6c2e0a3b36,0x3120393938322032\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3937,0x336c7225202c3837\n"
".quad 0x356c7225202c3331,0x36622e6c68730a3b,0x3038316c72252034,0x3937316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3138316c,0x3233202c3038316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203939383220,0x203436622e6c6873,0x202c3238316c7225\n"
".quad 0x202c3138316c7225,0x732e6464610a3b32,0x38316c7225203436,0x33386c7225202c33\n"
".quad 0x3238316c7225202c,0x3220636f6c2e0a3b,0x0a31203733393220,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3338316c72,0x610a3b3933346625,0x25203436732e6464\n"
".quad 0x25202c3438316c72,0x363936202c396c72,0x636f6c2e0a3b3233,0x2030303932203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c353831,0x6c7225202c343831\n"
".quad 0x6c7225202c333133,0x622e6c68730a3b35,0x38316c7225203436,0x38316c7225202c36\n"
".quad 0x730a3b3233202c35,0x25203436732e7268,0x25202c3738316c72,0x33202c3638316c72\n"
".quad 0x20636f6c2e0a3b32,0x3120303039322032,0x3436622e6c68730a,0x2c3838316c722520\n"
".quad 0x2c3738316c722520,0x2e6464610a3b3220,0x316c722520343673,0x386c7225202c3938\n"
".quad 0x38316c7225202c33,0x20636f6c2e0a3b38,0x3120383339322032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3938316c7225,0x0a3b383434662520,0x203436732e646461\n"
".quad 0x202c3039316c7225,0x3337202c396c7225,0x6f6c2e0a3b383237,0x3130393220322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3139316c,0x7225202c3039316c\n"
".quad 0x7225202c3331336c,0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3239\n"
".quad 0x0a3b3233202c3139,0x203436732e726873,0x202c3339316c7225,0x202c3239316c7225\n"
".quad 0x636f6c2e0a3b3233,0x2031303932203220,0x36622e6c68730a31,0x3439316c72252034\n"
".quad 0x3339316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c353931\n"
".quad 0x316c7225202c3338,0x636f6c2e0a3b3439,0x2039333932203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x5d3539316c72255b,0x3b3535346625202c,0x203220636f6c2e0a\n"
".quad 0x720a322032343932,0x3242420a0a3b7465,0x6464610a3a355f35,0x6c7225203436732e\n"
".quad 0x6c7225202c383931,0x3b376c7225202c36,0x3436732e6464610a,0x2c3939316c722520\n"
".quad 0x2c3839316c722520,0x6c0a3b3639303420,0x2e6d617261702e64,0x336c722520343675\n"
".quad 0x315a5f5b202c3231,0x79685f645f524c33,0x6650324344414262,0x705f69666d665f53\n"
".quad 0x3b5d335f6d617261,0x203220636f6c2e0a,0x6d0a312034383832,0x36732e6f6c2e6461\n"
".quad 0x3130326c72252034,0x3939316c7225202c,0x3231336c7225202c,0x0a3b356c7225202c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c303133,0x685f645f524c3331\n"
".quad 0x5032434441426279,0x5f69666d665f5366,0x5d315f6d61726170,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x6c7225202c323032,0x6c68730a3b303133\n"
".quad 0x6c7225203436622e,0x6c7225202c333032,0x3b3233202c313032,0x3436732e7268730a\n"
".quad 0x2c3430326c722520,0x2c3330326c722520,0x6f6c2e0a3b323320,0x3438383220322063\n"
".quad 0x622e6c68730a3120,0x30326c7225203436,0x30326c7225202c35,0x64610a3b32202c34\n"
".quad 0x7225203436732e64,0x7225202c3630326c,0x7225202c3230326c,0x74730a3b3530326c\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d363032,0x2e6464610a3b3134\n"
".quad 0x326c722520343673,0x316c7225202c3730,0x32393138202c3839,0x3220636f6c2e0a3b\n"
".quad 0x0a31203538383220,0x732e6f6c2e64616d,0x30326c7225203436,0x30326c7225202c38\n"
".quad 0x31336c7225202c37,0x3b356c7225202c32,0x3436622e6c68730a,0x2c3930326c722520\n"
".quad 0x2c3830326c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c303132\n"
".quad 0x3b3233202c393032,0x203220636f6c2e0a,0x730a312035383832,0x25203436622e6c68\n"
".quad 0x25202c3131326c72,0x32202c3031326c72,0x36732e6464610a3b,0x3231326c72252034\n"
".quad 0x3230326c7225202c,0x3131326c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x5d3231326c72255b,0x610a3b356625202c,0x25203436732e6464,0x25202c3331326c72\n"
".quad 0x31202c3839316c72,0x6c2e0a3b38383232,0x383832203220636f,0x2e64616d0a312036\n"
".quad 0x25203436732e6f6c,0x25202c3431326c72,0x25202c3331326c72,0x25202c3231336c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c353132,0x3b3233202c343132\n"
".quad 0x3436732e7268730a,0x2c3631326c722520,0x2c3531326c722520,0x6f6c2e0a3b323320\n"
".quad 0x3638383220322063,0x622e6c68730a3120,0x31326c7225203436,0x31326c7225202c37\n"
".quad 0x64610a3b32202c36,0x7225203436732e64,0x7225202c3831326c,0x7225202c3230326c\n"
".quad 0x74730a3b3731326c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d383132\n"
".quad 0x2e6464610a3b3533,0x326c722520343673,0x316c7225202c3931,0x38333631202c3839\n"
".quad 0x20636f6c2e0a3b34,0x3120373838322032,0x2e6f6c2e64616d0a,0x326c722520343673\n"
".quad 0x326c7225202c3032,0x336c7225202c3931,0x356c7225202c3231,0x36622e6c68730a3b\n"
".quad 0x3132326c72252034,0x3032326c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3232326c,0x3233202c3132326c,0x3220636f6c2e0a3b,0x0a31203738383220\n"
".quad 0x203436622e6c6873,0x202c3332326c7225,0x202c3232326c7225,0x732e6464610a3b32\n"
".quad 0x32326c7225203436,0x30326c7225202c34,0x32326c7225202c32,0x6c672e74730a3b33\n"
".quad 0x3233662e6c61626f,0x3432326c72255b20,0x0a3b346625202c5d,0x203436732e646461\n"
".quad 0x202c3532326c7225,0x202c3839316c7225,0x2e0a3b3038343032,0x3832203220636f6c\n"
".quad 0x64616d0a31203838,0x203436732e6f6c2e,0x202c3632326c7225,0x202c3532326c7225\n"
".quad 0x202c3231336c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3732326c\n"
".quad 0x3233202c3632326c,0x36732e7268730a3b,0x3832326c72252034,0x3732326c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x383832203220636f,0x2e6c68730a312038,0x326c722520343662\n"
".quad 0x326c7225202c3932,0x610a3b32202c3832,0x25203436732e6464,0x25202c3033326c72\n"
".quad 0x25202c3230326c72,0x730a3b3932326c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3033326c,0x6464610a3b393566,0x6c7225203436732e,0x6c7225202c313332\n"
".quad 0x353432202c383931,0x636f6c2e0a3b3637,0x2039383832203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c323332,0x6c7225202c313332,0x6c7225202c323133\n"
".quad 0x622e6c68730a3b35,0x33326c7225203436,0x33326c7225202c33,0x730a3b3233202c32\n"
".quad 0x25203436732e7268,0x25202c3433326c72,0x33202c3333326c72,0x20636f6c2e0a3b32\n"
".quad 0x3120393838322032,0x3436622e6c68730a,0x2c3533326c722520,0x2c3433326c722520\n"
".quad 0x2e6464610a3b3220,0x326c722520343673,0x326c7225202c3633,0x326c7225202c3230\n"
".quad 0x672e74730a3b3533,0x33662e6c61626f6c,0x33326c72255b2032,0x35366625202c5d36\n"
".quad 0x36732e6464610a3b,0x3733326c72252034,0x3839316c7225202c,0x3b3237363832202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312030393832,0x36732e6f6c2e6461,0x3833326c72252034\n"
".quad 0x3733326c7225202c,0x3231336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3933326c7225,0x202c3833326c7225,0x2e7268730a3b3233,0x326c722520343673\n"
".quad 0x326c7225202c3034,0x0a3b3233202c3933,0x32203220636f6c2e,0x68730a3120303938\n"
".quad 0x7225203436622e6c,0x7225202c3134326c,0x3b32202c3034326c,0x3436732e6464610a\n"
".quad 0x2c3234326c722520,0x2c3230326c722520,0x3b3134326c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3234326c7225,0x610a3b3734662520,0x25203436732e6464\n"
".quad 0x25202c3334326c72,0x33202c3839316c72,0x6c2e0a3b38363732,0x393832203220636f\n"
".quad 0x2e64616d0a312031,0x25203436732e6f6c,0x25202c3434326c72,0x25202c3334326c72\n"
".quad 0x25202c3231336c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c353432\n"
".quad 0x3b3233202c343432,0x3436732e7268730a,0x2c3634326c722520,0x2c3534326c722520\n"
".quad 0x6f6c2e0a3b323320,0x3139383220322063,0x622e6c68730a3120,0x34326c7225203436\n"
".quad 0x34326c7225202c37,0x64610a3b32202c36,0x7225203436732e64,0x7225202c3834326c\n"
".quad 0x7225202c3230326c,0x74730a3b3734326c,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d383432,0x2e6464610a3b3335,0x326c722520343673,0x316c7225202c3934\n"
".quad 0x36383633202c3839,0x20636f6c2e0a3b34,0x3120323938322032,0x2e6f6c2e64616d0a\n"
".quad 0x326c722520343673,0x326c7225202c3035,0x336c7225202c3934,0x356c7225202c3231\n"
".quad 0x36622e6c68730a3b,0x3135326c72252034,0x3035326c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3235326c,0x3233202c3135326c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203239383220,0x203436622e6c6873,0x202c3335326c7225,0x202c3235326c7225\n"
".quad 0x732e6464610a3b32,0x35326c7225203436,0x30326c7225202c34,0x35326c7225202c32\n"
".quad 0x6c672e74730a3b33,0x3233662e6c61626f,0x3435326c72255b20,0x0a3b396625202c5d\n"
".quad 0x203436732e646461,0x202c3535326c7225,0x202c3839316c7225,0x2e0a3b3036393034\n"
".quad 0x3832203220636f6c,0x64616d0a31203339,0x203436732e6f6c2e,0x202c3635326c7225\n"
".quad 0x202c3535326c7225,0x202c3231336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3735326c,0x3233202c3635326c,0x36732e7268730a3b,0x3835326c72252034\n"
".quad 0x3735326c7225202c,0x6c2e0a3b3233202c,0x393832203220636f,0x2e6c68730a312033\n"
".quad 0x326c722520343662,0x326c7225202c3935,0x610a3b32202c3835,0x25203436732e6464\n"
".quad 0x25202c3036326c72,0x25202c3230326c72,0x730a3b3935326c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3036326c,0x6464610a3b373766,0x6c7225203436732e\n"
".quad 0x6c7225202c313632,0x303534202c383931,0x636f6c2e0a3b3635,0x2034393832203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c323632,0x6c7225202c313632\n"
".quad 0x6c7225202c323133,0x622e6c68730a3b35,0x36326c7225203436,0x36326c7225202c33\n"
".quad 0x730a3b3233202c32,0x25203436732e7268,0x25202c3436326c72,0x33202c3336326c72\n"
".quad 0x20636f6c2e0a3b32,0x3120343938322032,0x3436622e6c68730a,0x2c3536326c722520\n"
".quad 0x2c3436326c722520,0x2e6464610a3b3220,0x326c722520343673,0x326c7225202c3636\n"
".quad 0x326c7225202c3230,0x672e74730a3b3536,0x33662e6c61626f6c,0x36326c72255b2032\n"
".quad 0x35346625202c5d36,0x732e6464610a3b37,0x36326c7225203436,0x39316c7225202c37\n"
".quad 0x3235313934202c38,0x3220636f6c2e0a3b,0x0a31203539383220,0x732e6f6c2e64616d\n"
".quad 0x36326c7225203436,0x36326c7225202c38,0x31336c7225202c37,0x3b356c7225202c32\n"
".quad 0x3436622e6c68730a,0x2c3936326c722520,0x2c3836326c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c303732,0x3b3233202c393632,0x203220636f6c2e0a\n"
".quad 0x730a312035393832,0x25203436622e6c68,0x25202c3137326c72,0x32202c3037326c72\n"
".quad 0x36732e6464610a3b,0x3237326c72252034,0x3230326c7225202c,0x3137326c7225202c\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3237326c72255b,0x0a3b31376625202c\n"
".quad 0x203436732e646461,0x202c3337326c7225,0x202c3839316c7225,0x2e0a3b3834323335\n"
".quad 0x3832203220636f6c,0x64616d0a31203639,0x203436732e6f6c2e,0x202c3437326c7225\n"
".quad 0x202c3337326c7225,0x202c3231336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3537326c,0x3233202c3437326c,0x36732e7268730a3b,0x3637326c72252034\n"
".quad 0x3537326c7225202c,0x6c2e0a3b3233202c,0x393832203220636f,0x2e6c68730a312036\n"
".quad 0x326c722520343662,0x326c7225202c3737,0x610a3b32202c3637,0x25203436732e6464\n"
".quad 0x25202c3837326c72,0x25202c3230326c72,0x730a3b3737326c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3837326c,0x6464610a3b303166,0x6c7225203436732e\n"
".quad 0x6c7225202c393732,0x333735202c383931,0x636f6c2e0a3b3434,0x2037393832203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c303832,0x6c7225202c393732\n"
".quad 0x6c7225202c323133,0x622e6c68730a3b35,0x38326c7225203436,0x38326c7225202c31\n"
".quad 0x730a3b3233202c30,0x25203436732e7268,0x25202c3238326c72,0x33202c3138326c72\n"
".quad 0x20636f6c2e0a3b32,0x3120373938322032,0x3436622e6c68730a,0x2c3338326c722520\n"
".quad 0x2c3238326c722520,0x2e6464610a3b3220,0x326c722520343673,0x326c7225202c3438\n"
".quad 0x326c7225202c3230,0x672e74730a3b3338,0x33662e6c61626f6c,0x38326c72255b2032\n"
".quad 0x3b366625202c5d34,0x3436732e6464610a,0x2c3538326c722520,0x2c3839316c722520\n"
".quad 0x0a3b303434313620,0x32203220636f6c2e,0x616d0a3120383938,0x3436732e6f6c2e64\n"
".quad 0x2c3638326c722520,0x2c3538326c722520,0x2c3231336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3738326c72,0x33202c3638326c72,0x732e7268730a3b32\n"
".quad 0x38326c7225203436,0x38326c7225202c38,0x2e0a3b3233202c37,0x3832203220636f6c\n"
".quad 0x6c68730a31203839,0x6c7225203436622e,0x6c7225202c393832,0x0a3b32202c383832\n"
".quad 0x203436732e646461,0x202c3039326c7225,0x202c3230326c7225,0x0a3b3938326c7225\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3039326c72,0x64610a3b39386625\n"
".quad 0x7225203436732e64,0x7225202c3139326c,0x3536202c3839316c,0x6f6c2e0a3b363335\n"
".quad 0x3939383220322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3239326c\n"
".quad 0x7225202c3139326c,0x7225202c3231336c,0x2e6c68730a3b356c,0x326c722520343662\n"
".quad 0x326c7225202c3339,0x0a3b3233202c3239,0x203436732e726873,0x202c3439326c7225\n"
".quad 0x202c3339326c7225,0x636f6c2e0a3b3233,0x2039393832203220,0x36622e6c68730a31\n"
".quad 0x3539326c72252034,0x3439326c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c363932,0x6c7225202c323032,0x2e74730a3b353932,0x662e6c61626f6c67\n"
".quad 0x326c72255b203233,0x386625202c5d3639,0x36732e6464610a3b,0x3739326c72252034\n"
".quad 0x3839316c7225202c,0x3b3233363936202c,0x203220636f6c2e0a,0x6d0a312030303932\n"
".quad 0x36732e6f6c2e6461,0x3839326c72252034,0x3739326c7225202c,0x3231336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3939326c7225,0x202c3839326c7225\n"
".quad 0x2e7268730a3b3233,0x336c722520343673,0x326c7225202c3030,0x0a3b3233202c3939\n"
".quad 0x32203220636f6c2e,0x68730a3120303039,0x7225203436622e6c,0x7225202c3130336c\n"
".quad 0x3b32202c3030336c,0x3436732e6464610a,0x2c3230336c722520,0x2c3230326c722520\n"
".quad 0x3b3130336c722520,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3230336c7225\n"
".quad 0x610a3b3338662520,0x25203436732e6464,0x25202c3330336c72,0x37202c3839316c72\n"
".quad 0x6c2e0a3b38323733,0x303932203220636f,0x2e64616d0a312031,0x25203436732e6f6c\n"
".quad 0x25202c3430336c72,0x25202c3330336c72,0x25202c3231336c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c353033,0x3b3233202c343033,0x3436732e7268730a\n"
".quad 0x2c3630336c722520,0x2c3530336c722520,0x6f6c2e0a3b323320,0x3130393220322063\n"
".quad 0x622e6c68730a3120,0x30336c7225203436,0x30336c7225202c37,0x64610a3b32202c36\n"
".quad 0x7225203436732e64,0x7225202c3830336c,0x7225202c3230326c,0x74730a3b3730336c\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d383033,0x353242420a0a3b37\n"
".quad 0x636f6c2e0a3a365f,0x2032343932203220,0x7d0a3b7465720a32,0x7972746e652e0a0a\n"
".quad 0x5f524c39315a5f20,0x4441426279685f64,0x707265746e495f43,0x28666d665f536650\n"
".quad 0x206d617261702e0a,0x315a5f203436752e,0x79685f645f524c39,0x6e495f4344414262\n"
".quad 0x5f53665070726574,0x617261705f666d66,0x61702e0a2c305f6d,0x3436752e206d6172\n"
".quad 0x5f524c39315a5f20,0x4441426279685f64,0x707265746e495f43,0x5f666d665f536650\n"
".quad 0x2c315f6d61726170,0x206d617261702e0a,0x315a5f203233662e,0x79685f645f524c39\n"
".quad 0x6e495f4344414262,0x5f53665070726574,0x617261705f666d66,0x61702e0a2c325f6d\n"
".quad 0x3436752e206d6172,0x5f524c39315a5f20,0x4441426279685f64,0x707265746e495f43\n"
".quad 0x5f666d665f536650,0x2c335f6d61726170,0x206d617261702e0a,0x315a5f203233662e\n"
".quad 0x79685f645f524c39,0x6e495f4344414262,0x5f53665070726574,0x617261705f666d66\n"
".quad 0x0a7b0a290a345f6d,0x33662e206765722e,0x3739383c66252032,0x206765722e0a3b3e\n"
".quad 0x702520646572702e,0x722e0a3b3e32313c,0x203233732e206765,0x3b3e3336313c7225\n"
".quad 0x732e206765722e0a,0x343c6c7225203436,0x6c0a0a0a3b3e3733,0x2e6d617261702e64\n"
".quad 0x316c722520343675,0x4c39315a5f5b202c,0x426279685f645f52,0x65746e495f434441\n"
".quad 0x6d665f5366507072,0x5f6d617261705f66,0x702e646c0a3b5d30,0x3436752e6d617261\n"
".quad 0x5b202c326c722520,0x645f524c39315a5f,0x434441426279685f,0x50707265746e495f\n"
".quad 0x705f666d665f5366,0x3b5d315f6d617261,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x315a5f5b202c336c,0x79685f645f524c39,0x6e495f4344414262,0x5f53665070726574\n"
".quad 0x617261705f666d66,0x76630a3b5d335f6d,0x6c672e6f742e6174,0x3436752e6c61626f\n"
".quad 0x25202c346c722520,0x6f6c2e0a3b316c72,0x3634393220322063,0x752e766f6d0a3120\n"
".quad 0x202c357225203233,0x3b782e6469746e25,0x3233752e766f6d0a,0x6325202c36722520\n"
".quad 0x0a3b782e64696174,0x203233752e766f6d,0x697425202c377225,0x64616d0a3b782e64\n"
".quad 0x203233732e6f6c2e,0x357225202c387225,0x25202c367225202c,0x636f6c2e0a3b3772\n"
".quad 0x2037343932203220,0x33752e766f6d0a31,0x25202c3972252032,0x0a3b792e6469746e\n"
".quad 0x203233752e766f6d,0x6325202c30317225,0x0a3b792e64696174,0x203233752e766f6d\n"
".quad 0x7425202c31317225,0x616d0a3b792e6469,0x3233732e6f6c2e64,0x7225202c31722520\n"
".quad 0x2c30317225202c39,0x2e0a3b3131722520,0x3932203220636f6c,0x766f6d0a31203834\n"
".quad 0x317225203233752e,0x6469746e25202c32,0x2e766f6d0a3b7a2e,0x3331722520323375\n"
".quad 0x646961746325202c,0x2e766f6d0a3b7a2e,0x3431722520323375,0x7a2e64697425202c\n"
".quad 0x6f6c2e64616d0a3b,0x327225203233732e,0x202c32317225202c,0x7225202c33317225\n"
".quad 0x636f6c2e0a3b3431,0x2039343932203220,0x6e722e7476630a31,0x3233732e3233662e\n"
".quad 0x25202c3732662520,0x2e616d660a3b3872,0x25203233662e6e72,0x37326625202c3366\n"
".quad 0x303046336630202c,0x6630202c30303030,0x3030303043373134,0x3220636f6c2e0a3b\n"
".quad 0x0a31203035393220,0x662e6e722e747663,0x25203233732e3233,0x3b317225202c3466\n"
".quad 0x2e6e722e616d660a,0x2c35662520323366,0x6630202c34662520,0x3030303030304633\n"
".quad 0x433731346630202c,0x6c2e0a3b30303030,0x353932203220636f,0x2e7476630a312031\n"
".quad 0x732e3233662e6e72,0x2c38326625203233,0x6d660a3b32722520,0x3233662e6e722e61\n"
".quad 0x6625202c36662520,0x46336630202c3832,0x202c303030303030,0x3030433731346630\n"
".quad 0x636f6c2e0a3b3030,0x2033343331203320,0x7a722e7476630a35,0x33662e3233732e69\n"
".quad 0x25202c3372252032,0x2e7476630a3b3666,0x203233752e343675,0x7225202c356c7225\n"
".quad 0x20636f6c2e0a3b38,0x3120343539322032,0x3436732e7476630a,0x6c7225203233732e\n"
".quad 0x0a3b317225202c36,0x203233622e6c6873,0x327225202c347225,0x6f6c2e0a3b36202c\n"
".quad 0x3435393220322063,0x732e7476630a3120,0x25203233732e3436,0x347225202c376c72\n"
".quad 0x36732e6464610a3b,0x2c35316c72252034,0x25202c376c722520,0x6f6c2e0a3b366c72\n"
".quad 0x3435393220322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x316c7225202c386c\n"
".quad 0x2c336c7225202c35,0x610a3b356c722520,0x25203233662e6464,0x336625202c393266\n"
".quad 0x453732436630202c,0x64610a3b30303030,0x6625203233662e64,0x2c356625202c3033\n"
".quad 0x3043463143663020,0x6f6c2e0a3b303030,0x3120303720322063,0x3233662e6c756d0a\n"
".quad 0x25202c3133662520,0x336625202c303366,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x39326625202c3233,0x202c39326625202c,0x64610a3b31336625,0x6625203233662e64\n"
".quad 0x2c366625202c3333,0x3043463143663020,0x6f6c2e0a3b303030,0x3120303720322063\n"
".quad 0x2e6e722e616d660a,0x3433662520323366,0x202c33336625202c,0x6625202c33336625\n"
".quad 0x707465730a3b3233,0x203233662e746c2e,0x336625202c317025,0x3831346630202c34\n"
".quad 0x610a3b3030303030,0x25203233732e6464,0x387225202c353172,0x65730a3b322d202c\n"
".quad 0x33752e74672e7074,0x25202c3270252032,0x3b3935202c353172,0x203220636f6c2e0a\n"
".quad 0x730a312037353932,0x732e746c2e707465,0x202c337025203233,0x0a3b32202c317225\n"
".quad 0x20646572702e726f,0x327025202c347025,0x2e0a3b337025202c,0x3932203220636f6c\n"
".quad 0x7465730a31203735,0x3233732e74672e70,0x7225202c35702520,0x6f0a3b3136202c31\n"
".quad 0x2520646572702e72,0x2c347025202c3670,0x6c2e0a3b35702520,0x353932203220636f\n"
".quad 0x707465730a312037,0x203233732e746c2e,0x327225202c377025,0x2e726f0a3b32202c\n"
".quad 0x3870252064657270,0x25202c367025202c,0x636f6c2e0a3b3770,0x2037353932203220\n"
".quad 0x672e707465730a31,0x7025203233732e74,0x202c327225202c39,0x702e726f0a3b3136\n"
".quad 0x3031702520646572,0x25202c387025202c,0x2e6464610a3b3970,0x316c722520343673\n"
".quad 0x35316c7225202c36,0x3b3834323335202c,0x203220636f6c2e0a,0x6d0a312036353133\n"
".quad 0x36732e6f6c2e6461,0x2c37316c72252034,0x202c36316c722520,0x7225202c336c7225\n"
".quad 0x617476630a3b356c,0x626f6c672e6f742e,0x25203436752e6c61,0x7225202c38316c72\n"
".quad 0x2e6c68730a3b326c,0x316c722520343662,0x37316c7225202c39,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c30326c,0x0a3b3233202c3931,0x33203220636f6c2e\n"
".quad 0x68730a3120363531,0x7225203436622e6c,0x6c7225202c31326c,0x610a3b32202c3032\n"
".quad 0x25203436732e6464,0x6c7225202c396c72,0x326c7225202c3831,0x732e6464610a3b31\n"
".quad 0x32326c7225203436,0x2c35316c7225202c,0x0a3b343433373520,0x33203220636f6c2e\n"
".quad 0x616d0a3120373531,0x3436732e6f6c2e64,0x202c33326c722520,0x25202c32326c7225\n"
".quad 0x6c7225202c336c72,0x622e6c68730a3b35,0x34326c7225203436,0x2c33326c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x326c7225202c3532,0x2e0a3b3233202c34\n"
".quad 0x3133203220636f6c,0x6c68730a31203735,0x6c7225203436622e,0x326c7225202c3632\n"
".quad 0x64610a3b32202c35,0x7225203436732e64,0x6c7225202c30316c,0x326c7225202c3831\n"
".quad 0x732e6464610a3b36,0x37326c7225203436,0x2c35316c7225202c,0x0a3b303434313620\n"
".quad 0x33203220636f6c2e,0x616d0a3120383531,0x3436732e6f6c2e64,0x202c38326c722520\n"
".quad 0x25202c37326c7225,0x6c7225202c336c72,0x622e6c68730a3b35,0x39326c7225203436\n"
".quad 0x2c38326c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x326c7225202c3033\n"
".quad 0x2e0a3b3233202c39,0x3133203220636f6c,0x6c68730a31203835,0x6c7225203436622e\n"
".quad 0x336c7225202c3133,0x64610a3b32202c30,0x7225203436732e64,0x6c7225202c31316c\n"
".quad 0x336c7225202c3831,0x732e6464610a3b31,0x32336c7225203436,0x2c35316c7225202c\n"
".quad 0x0a3b363335353620,0x33203220636f6c2e,0x616d0a3120393531,0x3436732e6f6c2e64\n"
".quad 0x202c33336c722520,0x25202c32336c7225,0x6c7225202c336c72,0x622e6c68730a3b35\n"
".quad 0x34336c7225203436,0x2c33336c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x336c7225202c3533,0x2e0a3b3233202c34,0x3133203220636f6c,0x6c68730a31203935\n"
".quad 0x6c7225203436622e,0x336c7225202c3633,0x64610a3b32202c35,0x7225203436732e64\n"
".quad 0x6c7225202c32316c,0x336c7225202c3831,0x732e6464610a3b36,0x37336c7225203436\n"
".quad 0x2c35316c7225202c,0x0a3b323336393620,0x33203220636f6c2e,0x616d0a3120303631\n"
".quad 0x3436732e6f6c2e64,0x202c38336c722520,0x25202c37336c7225,0x6c7225202c336c72\n"
".quad 0x622e6c68730a3b35,0x39336c7225203436,0x2c38336c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x336c7225202c3034,0x2e0a3b3233202c39,0x3133203220636f6c\n"
".quad 0x6c68730a31203036,0x6c7225203436622e,0x346c7225202c3134,0x64610a3b32202c30\n"
".quad 0x7225203436732e64,0x6c7225202c33316c,0x346c7225202c3831,0x732e6464610a3b31\n"
".quad 0x32346c7225203436,0x2c35316c7225202c,0x0a3b383237333720,0x33203220636f6c2e\n"
".quad 0x616d0a3120313631,0x3436732e6f6c2e64,0x202c33346c722520,0x25202c32346c7225\n"
".quad 0x6c7225202c336c72,0x622e6c68730a3b35,0x34346c7225203436,0x2c33346c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x346c7225202c3534,0x2e0a3b3233202c34\n"
".quad 0x3133203220636f6c,0x6c68730a31203136,0x6c7225203436622e,0x346c7225202c3634\n"
".quad 0x64610a3b32202c35,0x7225203436732e64,0x6c7225202c34316c,0x346c7225202c3831\n"
".quad 0x20636f6c2e0a3b36,0x3120373539322032,0x622030317025400a,0x5f36324242206172\n"
".quad 0x2e6c68730a0a3b36,0x346c722520343662,0x2c386c7225202c37,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x346c7225202c3834,0x2e0a3b3233202c37,0x3133203220636f6c\n"
".quad 0x6c68730a31203436,0x6c7225203436622e,0x346c7225202c3934,0x64610a3b32202c38\n"
".quad 0x7225203436732e64,0x6c7225202c30356c,0x39346c7225202c34,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c376625,0x64610a3b5d30356c,0x7225203233732e64\n"
".quad 0x2c317225202c3731,0x6f6c2e0a3b312d20,0x3536313320322063,0x732e7476630a3120\n"
".quad 0x25203233732e3436,0x7225202c31356c72,0x2e6464610a3b3731,0x356c722520343673\n"
".quad 0x31356c7225202c32,0x0a3b376c7225202c,0x203436732e646461,0x25202c33356c7225\n"
".quad 0x3138202c32356c72,0x702e646c0a3b3239,0x3436752e6d617261,0x2c3633346c722520\n"
".quad 0x524c39315a5f5b20,0x41426279685f645f,0x7265746e495f4344,0x666d665f53665070\n"
".quad 0x335f6d617261705f,0x20636f6c2e0a3b5d,0x3120353631332032,0x2e6f6c2e64616d0a\n"
".quad 0x356c722520343673,0x33356c7225202c34,0x3633346c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x25202c35356c7225,0x3233202c34356c72,0x36732e7268730a3b\n"
".quad 0x2c36356c72252034,0x202c35356c722520,0x636f6c2e0a3b3233,0x2035363133203220\n"
".quad 0x36622e6c68730a31,0x2c37356c72252034,0x202c36356c722520,0x732e6464610a3b32\n"
".quad 0x38356c7225203436,0x202c346c7225202c,0x6c0a3b37356c7225,0x6c61626f6c672e64\n"
".quad 0x386625203233662e,0x38356c72255b202c,0x20636f6c2e0a3b5d,0x3120363631332032\n"
".quad 0x3233732e6464610a,0x25202c3931722520,0x630a3b31202c3172,0x732e3436732e7476\n"
".quad 0x39356c7225203233,0x0a3b39317225202c,0x203436732e646461,0x25202c30366c7225\n"
".quad 0x7225202c39356c72,0x2e6464610a3b376c,0x366c722520343673,0x30366c7225202c31\n"
".quad 0x3b3438333631202c,0x203220636f6c2e0a,0x6d0a312036363133,0x36732e6f6c2e6461\n"
".quad 0x2c32366c72252034,0x202c31366c722520,0x202c3633346c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x6c7225202c33366c,0x0a3b3233202c3236,0x203436732e726873\n"
".quad 0x25202c34366c7225,0x3233202c33366c72,0x3220636f6c2e0a3b,0x0a31203636313320\n"
".quad 0x203436622e6c6873,0x25202c35366c7225,0x3b32202c34366c72,0x3436732e6464610a\n"
".quad 0x202c36366c722520,0x7225202c346c7225,0x2e646c0a3b35366c,0x662e6c61626f6c67\n"
".quad 0x202c396625203233,0x3b5d36366c72255b,0x3233732e6464610a,0x25202c3132722520\n"
".quad 0x3b34362d202c3472,0x203220636f6c2e0a,0x630a312037363133,0x732e3436732e7476\n"
".quad 0x37366c7225203233,0x0a3b31327225202c,0x203436732e646461,0x25202c38366c7225\n"
".quad 0x6c7225202c366c72,0x2e6464610a3b3736,0x366c722520343673,0x38366c7225202c39\n"
".quad 0x3b3436383633202c,0x203220636f6c2e0a,0x6d0a312037363133,0x36732e6f6c2e6461\n"
".quad 0x2c30376c72252034,0x202c39366c722520,0x202c3633346c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x6c7225202c31376c,0x0a3b3233202c3037,0x203436732e726873\n"
".quad 0x25202c32376c7225,0x3233202c31376c72,0x3220636f6c2e0a3b,0x0a31203736313320\n"
".quad 0x203436622e6c6873,0x25202c33376c7225,0x3b32202c32376c72,0x3436732e6464610a\n"
".quad 0x202c34376c722520,0x7225202c346c7225,0x2e646c0a3b33376c,0x662e6c61626f6c67\n"
".quad 0x2c30316625203233,0x5d34376c72255b20,0x36732e6464610a3b,0x2c35376c72252034\n"
".quad 0x202c31356c722520,0x610a3b37366c7225,0x25203436732e6464,0x7225202c36376c72\n"
".quad 0x303534202c35376c,0x636f6c2e0a3b3635,0x2038363133203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x376c7225202c3737,0x33346c7225202c36,0x3b356c7225202c36\n"
".quad 0x3436622e6c68730a,0x202c38376c722520,0x33202c37376c7225,0x732e7268730a3b32\n"
".quad 0x39376c7225203436,0x2c38376c7225202c,0x6f6c2e0a3b323320,0x3836313320322063\n"
".quad 0x622e6c68730a3120,0x30386c7225203436,0x2c39376c7225202c,0x2e6464610a3b3220\n"
".quad 0x386c722520343673,0x2c346c7225202c31,0x0a3b30386c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x6c72255b202c3131,0x6464610a3b5d3138,0x6c7225203436732e\n"
".quad 0x356c7225202c3238,0x37366c7225202c39,0x36732e6464610a3b,0x2c33386c72252034\n"
".quad 0x202c32386c722520,0x2e0a3b3834323335,0x3133203220636f6c,0x64616d0a31203936\n"
".quad 0x203436732e6f6c2e,0x25202c34386c7225,0x7225202c33386c72,0x7225202c3633346c\n"
".quad 0x2e6c68730a3b356c,0x386c722520343662,0x34386c7225202c35,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c36386c,0x0a3b3233202c3538,0x33203220636f6c2e\n"
".quad 0x68730a3120393631,0x7225203436622e6c,0x6c7225202c37386c,0x610a3b32202c3638\n"
".quad 0x25203436732e6464,0x7225202c38386c72,0x386c7225202c346c,0x6c672e646c0a3b37\n"
".quad 0x3233662e6c61626f,0x5b202c3231662520,0x0a3b5d38386c7225,0x203233732e646461\n"
".quad 0x7225202c35327225,0x2e0a3b3436202c34,0x3133203220636f6c,0x7476630a31203037\n"
".quad 0x3233732e3436732e,0x202c39386c722520,0x64610a3b35327225,0x7225203436732e64\n"
".quad 0x6c7225202c30396c,0x39386c7225202c36,0x36732e6464610a3b,0x2c31396c72252034\n"
".quad 0x202c30396c722520,0x2e0a3b3434333735,0x3133203220636f6c,0x64616d0a31203037\n"
".quad 0x203436732e6f6c2e,0x25202c32396c7225,0x7225202c31396c72,0x7225202c3633346c\n"
".quad 0x2e6c68730a3b356c,0x396c722520343662,0x32396c7225202c33,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c34396c,0x0a3b3233202c3339,0x33203220636f6c2e\n"
".quad 0x68730a3120303731,0x7225203436622e6c,0x6c7225202c35396c,0x610a3b32202c3439\n"
".quad 0x25203436732e6464,0x7225202c36396c72,0x396c7225202c346c,0x6c672e646c0a3b35\n"
".quad 0x3233662e6c61626f,0x5b202c3331662520,0x0a3b5d36396c7225,0x203436732e646461\n"
".quad 0x25202c37396c7225,0x7225202c31356c72,0x6464610a3b39386c,0x6c7225203436732e\n"
".quad 0x396c7225202c3839,0x3633353536202c37,0x3220636f6c2e0a3b,0x0a31203137313320\n"
".quad 0x732e6f6c2e64616d,0x39396c7225203436,0x2c38396c7225202c,0x2c3633346c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3030316c72,0x3233202c39396c72\n"
".quad 0x36732e7268730a3b,0x3130316c72252034,0x3030316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x373133203220636f,0x2e6c68730a312031,0x316c722520343662,0x316c7225202c3230\n"
".quad 0x610a3b32202c3130,0x25203436732e6464,0x25202c3330316c72,0x6c7225202c346c72\n"
".quad 0x2e646c0a3b323031,0x662e6c61626f6c67,0x2c34316625203233,0x3330316c72255b20\n"
".quad 0x20636f6c2e0a3b5d,0x3120323731332032,0x71652e707465730a,0x317025203233732e\n"
".quad 0x202c327225202c31,0x317025400a3b3336,0x4242206172622031,0x2e0a0a3b335f3632\n"
".quad 0x3133203220636f6c,0x7476630a31203636,0x3233752e3436752e,0x2c3430316c722520\n"
".quad 0x2e0a3b3931722520,0x3133203220636f6c,0x7476630a31203037,0x3233752e3436752e\n"
".quad 0x2c3530316c722520,0x610a3b3532722520,0x25203436732e6464,0x25202c3630316c72\n"
".quad 0x25202c3430316c72,0x610a3b3530316c72,0x25203436732e6464,0x25202c3730316c72\n"
".quad 0x37202c3630316c72,0x76630a3b38323733,0x33752e3436752e74,0x3830316c72252032\n"
".quad 0x6c0a3b387225202c,0x2e6d617261702e64,0x346c722520343675,0x315a5f5b202c3533\n"
".quad 0x79685f645f524c39,0x6e495f4344414262,0x5f53665070726574,0x617261705f666d66\n"
".quad 0x6c2e0a3b5d335f6d,0x373133203220636f,0x2e64616d0a312033,0x25203436732e6f6c\n"
".quad 0x25202c3930316c72,0x25202c3730316c72,0x25202c3533346c72,0x6c0a3b3830316c72\n"
".quad 0x2e6d617261702e64,0x346c722520343675,0x315a5f5b202c3832,0x79685f645f524c39\n"
".quad 0x6e495f4344414262,0x5f53665070726574,0x617261705f666d66,0x76630a3b5d305f6d\n"
".quad 0x6c672e6f742e6174,0x3436752e6c61626f,0x2c3031316c722520,0x3b3832346c722520\n"
".quad 0x3436622e6c68730a,0x2c3131316c722520,0x2c3930316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c323131,0x3b3233202c313131,0x203220636f6c2e0a\n"
".quad 0x730a312033373133,0x25203436622e6c68,0x25202c3331316c72,0x32202c3231316c72\n"
".quad 0x36732e6464610a3b,0x3431316c72252034,0x3031316c7225202c,0x3331316c7225202c\n"
".quad 0x6f6c672e646c0a3b,0x203233662e6c6162,0x5b202c3639386625,0x3b5d3431316c7225\n"
".quad 0x335f363242420a0a,0x33732e6464610a3a,0x202c383472252032,0x3b312d202c387225\n"
".quad 0x203220636f6c2e0a,0x630a312035373133,0x33662e6e722e7476,0x6625203233732e32\n"
".quad 0x38347225202c3639,0x33662e6464610a3b,0x202c383866252032,0x6630202c36396625\n"
".quad 0x3030303030304633,0x6e722e7476630a3b,0x3233732e3233662e,0x25202c3739662520\n"
".quad 0x2e6464610a3b3472,0x3839662520323366,0x30202c346625202c,0x3030303030463366\n"
".quad 0x662e6464610a3b30,0x2c37346625203233,0x25202c3839662520,0x766f6d0a3b373966\n"
".quad 0x357225203233752e,0x090a0a3b30202c34,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x2c363366257b2032,0x25202c3733662520,0x336625202c383366,0x7865745b202c7d39\n"
".quad 0x2c4431665f666552,0x202c383866257b20,0x0a3b5d7d37346625,0x3220636f6c2e090a\n"
".quad 0x0a31203637313320,0x203233732e646461,0x7225202c35357225,0x76630a3b31202c38\n"
".quad 0x3233662e6e722e74,0x396625203233732e,0x3b35357225202c39,0x3233662e6464610a\n"
".quad 0x25202c3439662520,0x336630202c393966,0x3b30303030303046,0x322e786574090a0a\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x33346625202c3234,0x202c34346625202c\n"
".quad 0x5b202c7d35346625,0x665f666552786574,0x3966257b202c4433,0x7d37346625202c34\n"
".quad 0x6f6c2e090a0a3b5d,0x3737313320322063,0x722e7476630a3120,0x33732e3233662e6e\n"
".quad 0x2c30303166252032,0x610a3b3731722520,0x25203233662e6464,0x6625202c31303166\n"
".quad 0x336630202c303031,0x3b30303030303046,0x3233662e6464610a,0x25202c3935662520\n"
".quad 0x6625202c31303166,0x6574090a0a3b3739,0x2e34762e64322e78,0x203233662e323366\n"
".quad 0x25202c383466257b,0x356625202c393466,0x7d31356625202c30,0x65527865745b202c\n"
".quad 0x7b202c4435665f66,0x6625202c38386625,0x090a0a3b5d7d3935,0x64322e786574090a\n"
".quad 0x2e3233662e34762e,0x3566257b20323366,0x2c35356625202c34,0x25202c3635662520\n"
".quad 0x745b202c7d373566,0x36665f6665527865,0x343966257b202c44,0x5d7d39356625202c\n"
".quad 0x636f6c2e090a0a3b,0x2039373133203220,0x6e722e7476630a31,0x3233732e3233662e\n"
".quad 0x202c323031662520,0x64610a3b39317225,0x6625203233662e64,0x316625202c333031\n"
".quad 0x46336630202c3230,0x0a3b303030303030,0x203233662e646461,0x6625202c31376625\n"
".quad 0x396625202c333031,0x786574090a0a3b37,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x6625202c30366625,0x32366625202c3136,0x2c7d33366625202c,0x6665527865745b20\n"
".quad 0x257b202c4437665f,0x376625202c343966,0x0a090a0a3b5d7d31,0x2e64322e78657409\n"
".quad 0x662e3233662e3476,0x363666257b203233,0x202c37366625202c,0x6625202c38366625\n"
".quad 0x65745b202c7d3936,0x4438665f66655278,0x2c383866257b202c,0x3b5d7d3137662520\n"
".quad 0x20636f6c2e090a0a,0x3120313831332032,0x2e6e722e7476630a,0x203233732e323366\n"
".quad 0x25202c3430316625,0x6464610a3b353272,0x386625203233662e,0x2c38396625202c33\n"
".quad 0x0a3b343031662520,0x64322e786574090a,0x2e3233662e34762e,0x3766257b20323366\n"
".quad 0x2c33376625202c32,0x25202c3437662520,0x745b202c7d353766,0x31665f6665527865\n"
".quad 0x3866257b202c4435,0x7d33386625202c38,0x74090a090a0a3b5d,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x202c383766257b20,0x6625202c39376625,0x31386625202c3038\n"
".quad 0x527865745b202c7d,0x2c443731665f6665,0x202c343966257b20,0x0a3b5d7d33386625\n"
".quad 0x3220636f6c2e090a,0x0a31203338313320,0x662e6e722e747663,0x25203233732e3233\n"
".quad 0x7225202c35303166,0x2e6464610a3b3132,0x3539662520323366,0x202c38396625202c\n"
".quad 0x0a0a3b3530316625,0x2e64322e78657409,0x662e3233662e3476,0x343866257b203233\n"
".quad 0x202c35386625202c,0x6625202c36386625,0x65745b202c7d3738,0x3031665f66655278\n"
".quad 0x383866257b202c44,0x5d7d35396625202c,0x6574090a090a0a3b,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x25202c303966257b,0x396625202c313966,0x7d33396625202c32\n"
".quad 0x65527865745b202c,0x202c443231665f66,0x25202c343966257b,0x0a0a3b5d7d353966\n"
".quad 0x203220636f6c2e09,0x400a312037383133,0x2061726220317025,0x0a3b355f36324242\n"
".quad 0x203220636f6c2e0a,0x730a312031323233,0x25203233662e6275,0x6625202c36303166\n"
".quad 0x32346625202c3633,0x33662e6464610a3b,0x2c37303166252032,0x202c363031662520\n"
".quad 0x75730a3b38346625,0x6625203233662e62,0x316625202c383031,0x34356625202c3730\n"
".quad 0x33662e6275730a3b,0x2c39303166252032,0x202c383031662520,0x64610a3b30366625\n"
".quad 0x6625203233662e64,0x316625202c303131,0x36366625202c3930,0x33662e6464610a3b\n"
".quad 0x2c31313166252032,0x202c303131662520,0x75730a3b34386625,0x6625203233662e62\n"
".quad 0x316625202c323131,0x30396625202c3131,0x33662e6464610a3b,0x2c33313166252032\n"
".quad 0x202c323131662520,0x75730a3b32376625,0x6625203233662e62,0x316625202c343131\n"
".quad 0x38376625202c3331,0x33662e6275730a3b,0x2c35313166252032,0x6625202c38662520\n"
".quad 0x662e6464610a3b39,0x3631316625203233,0x2c3531316625202c,0x610a3b3834662520\n"
".quad 0x25203233662e6464,0x6625202c37313166,0x356625202c363131,0x662e6275730a3b34\n"
".quad 0x3831316625203233,0x2c3731316625202c,0x730a3b3036662520,0x25203233662e6275\n"
".quad 0x6625202c39313166,0x366625202c383131,0x662e6464610a3b36,0x3032316625203233\n"
".quad 0x2c3931316625202c,0x730a3b3131662520,0x25203233662e6275,0x6625202c31323166\n"
".quad 0x316625202c303231,0x662e6464610a3b32,0x3232316625203233,0x2c3132316625202c\n"
".quad 0x730a3b3431662520,0x25203233662e6275,0x6625202c33323166,0x386625202c323231\n"
".quad 0x2e6464610a3b3639,0x3231662520323366,0x2c30316625202c34,0x610a3b3438662520\n"
".quad 0x25203233662e6464,0x6625202c35323166,0x316625202c343231,0x662e6464610a3b31\n"
".quad 0x3632316625203233,0x2c3532316625202c,0x610a3b3039662520,0x25203233662e6464\n"
".quad 0x6625202c37323166,0x316625202c363231,0x662e6275730a3b32,0x3832316625203233\n"
".quad 0x2c3732316625202c,0x730a3b3331662520,0x25203233662e6275,0x6625202c39323166\n"
".quad 0x376625202c383231,0x662e6275730a3b32,0x3033316625203233,0x2c3932316625202c\n"
".quad 0x730a3b3431662520,0x25203233662e6275,0x6625202c31333166,0x376625202c303331\n"
".quad 0x662e6275730a3b38,0x3233316625203233,0x2c3133316625202c,0x0a3b363938662520\n"
".quad 0x203233662e627573,0x25202c3333316625,0x376625202c383466,0x3220636f6c2e0a3b\n"
".quad 0x0a31203132323320,0x203233662e646461,0x25202c3433316625,0x6625202c33333166\n"
".quad 0x2e6464610a3b3435,0x3331662520323366,0x3433316625202c35,0x0a3b30366625202c\n"
".quad 0x203233662e646461,0x25202c3633316625,0x6625202c35333166,0x2e6464610a3b3636\n"
".quad 0x3331662520323366,0x3633316625202c37,0x0a3b34386625202c,0x203233662e646461\n"
".quad 0x25202c3833316625,0x6625202c37333166,0x2e6464610a3b3131,0x3331662520323366\n"
".quad 0x3833316625202c39,0x0a3b30396625202c,0x203233662e646461,0x25202c3034316625\n"
".quad 0x6625202c39333166,0x2e6464610a3b3231,0x3431662520323366,0x3034316625202c31\n"
".quad 0x0a3b32376625202c,0x203233662e646461,0x25202c3234316625,0x6625202c31343166\n"
".quad 0x2e6464610a3b3431,0x3431662520323366,0x3234316625202c33,0x0a3b38376625202c\n"
".quad 0x203233662e646461,0x25202c3434316625,0x6625202c33343166,0x6c756d0a3b363938\n"
".quad 0x316625203233662e,0x32316625202c3534,0x3332316625202c33,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x31316625202c3634,0x3431316625202c34,0x3b3534316625202c\n"
".quad 0x3233662e6c756d0a,0x202c373431662520,0x25202c3233316625,0x6d660a3b32333166\n"
".quad 0x3233662e6e722e61,0x202c383431662520,0x25202c3233316625,0x6625202c32333166\n"
".quad 0x6275730a3b363431,0x316625203233662e,0x34316625202c3934,0x3834316625202c34\n"
".quad 0x33662e6c756d0a3b,0x2c30353166252032,0x30202c3633662520,0x3030303038304366\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x376625202c313531,0x303431346630202c\n"
".quad 0x6625202c30303030,0x616d660a3b303531,0x203233662e6e722e,0x25202c3235316625\n"
".quad 0x30436630202c3866,0x202c303030303038,0x660a3b3135316625,0x33662e6e722e616d\n"
".quad 0x2c33353166252032,0x30202c3234662520,0x3030303038304366,0x3235316625202c30\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x2c396625202c3435,0x3030383043663020\n"
".quad 0x316625202c303030,0x2e6464610a3b3335,0x3531662520323366,0x3435316625202c35\n"
".quad 0x0a3b38346625202c,0x203233662e646461,0x25202c3635316625,0x6625202c35353166\n"
".quad 0x2e6464610a3b3435,0x3531662520323366,0x3635316625202c37,0x0a3b30366625202c\n"
".quad 0x203233662e646461,0x25202c3835316625,0x6625202c37353166,0x2e616d660a3b3636\n"
".quad 0x25203233662e6e72,0x6625202c39353166,0x30436630202c3031,0x202c303030303038\n"
".quad 0x610a3b3835316625,0x25203233662e6464,0x6625202c30363166,0x386625202c393531\n"
".quad 0x662e6464610a3b34,0x3136316625203233,0x2c3036316625202c,0x610a3b3131662520\n"
".quad 0x25203233662e6464,0x6625202c32363166,0x396625202c313631,0x662e6464610a3b30\n"
".quad 0x3336316625203233,0x2c3236316625202c,0x660a3b3231662520,0x33662e6e722e616d\n"
".quad 0x2c34363166252032,0x30202c3331662520,0x3030303038304366,0x3336316625202c30\n"
".quad 0x33662e6464610a3b,0x2c35363166252032,0x202c343631662520,0x64610a3b32376625\n"
".quad 0x6625203233662e64,0x316625202c363631,0x34316625202c3536,0x33662e6464610a3b\n"
".quad 0x2c37363166252032,0x202c363631662520,0x64610a3b38376625,0x6625203233662e64\n"
".quad 0x316625202c383631,0x39386625202c3736,0x722e616d660a3b36,0x6625203233662e6e\n"
".quad 0x316625202c393631,0x30346630202c3834,0x202c343135343146,0x6d0a3b3836316625\n"
".quad 0x25203233662e6c75,0x6625202c30373166,0x30346630202c3234,0x0a3b303030303041\n"
".quad 0x662e6e722e616d66,0x3137316625203233,0x202c36336625202c,0x3030304130436630\n"
".quad 0x37316625202c3030,0x722e616d660a3b30,0x6625203233662e6e,0x316625202c323731\n"
".quad 0x46336630202c3431,0x202c353535353544,0x6d0a3b3137316625,0x25203233662e6c75\n"
".quad 0x6625202c33373166,0x4130346630202c39,0x660a3b3030303030,0x33662e6e722e616d\n"
".quad 0x2c34373166252032,0x6630202c38662520,0x3030303030413043,0x3b3337316625202c\n"
".quad 0x2e6e722e616d660a,0x3731662520323366,0x3332316625202c35,0x354446336630202c\n"
".quad 0x6625202c35353535,0x6c756d0a3b343731,0x316625203233662e,0x33316625202c3637\n"
".quad 0x304130346630202c,0x6d660a3b30303030,0x3233662e6e722e61,0x202c373731662520\n"
".quad 0x6630202c30316625,0x3030303030413043,0x3b3637316625202c,0x2e6e722e616d660a\n"
".quad 0x3731662520323366,0x3233316625202c38,0x354446336630202c,0x6625202c35353535\n"
".quad 0x6464610a3b373731,0x316625203233662e,0x36336625202c3937,0x0a3b36336625202c\n"
".quad 0x203233662e627573,0x25202c3038316625,0x6625202c39373166,0x20636f6c2e0a3b38\n"
".quad 0x3120313232332032,0x3233662e6464610a,0x202c313831662520,0x6625202c32346625\n"
".quad 0x2e6464610a3b3234,0x3831662520323366,0x3038316625202c32,0x3b3138316625202c\n"
".quad 0x3233662e6275730a,0x202c333831662520,0x25202c3238316625,0x636f6c2e0a3b3966\n"
".quad 0x2031323233203220,0x33662e6464610a31,0x2c34383166252032,0x202c333831662520\n"
".quad 0x64610a3b38346625,0x6625203233662e64,0x316625202c353831,0x34356625202c3438\n"
".quad 0x33662e6464610a3b,0x2c36383166252032,0x202c353831662520,0x64610a3b30366625\n"
".quad 0x6625203233662e64,0x316625202c373831,0x36366625202c3638,0x33662e6275730a3b\n"
".quad 0x2c38383166252032,0x202c373831662520,0x6c2e0a3b30316625,0x323233203220636f\n"
".quad 0x2e6464610a312031,0x3831662520323366,0x3838316625202c39,0x0a3b34386625202c\n"
".quad 0x203233662e766f6d,0x30202c3039316625,0x3030303030304366,0x20636f6c2e0a3b30\n"
".quad 0x3120313232332032,0x2e6e722e616d660a,0x3931662520323366,0x2c31316625202c31\n"
".quad 0x3030303043663020,0x316625202c303030,0x2e6464610a3b3938,0x3931662520323366\n"
".quad 0x3139316625202c32,0x0a3b30396625202c,0x662e6e722e616d66,0x3339316625203233\n"
".quad 0x202c32316625202c,0x3030303030436630,0x39316625202c3030,0x662e6275730a3b32\n"
".quad 0x3439316625203233,0x2c3339316625202c,0x2e0a3b3331662520,0x3233203220636f6c\n"
".quad 0x6464610a31203132,0x316625203233662e,0x39316625202c3539,0x3b32376625202c34\n"
".quad 0x2e6e722e616d660a,0x3931662520323366,0x2c34316625202c36,0x3030303043663020\n"
".quad 0x316625202c303030,0x2e6464610a3b3539,0x3931662520323366,0x3639316625202c37\n"
".quad 0x0a3b38376625202c,0x662e6e722e616d66,0x3839316625203233,0x2c3639386625202c\n"
".quad 0x3030303043663020,0x316625202c303030,0x2e6464610a3b3739,0x3931662520323366\n"
".quad 0x3431316625202c39,0x3b3431316625202c,0x2e6e722e616d660a,0x3032662520323366\n"
".quad 0x3332316625202c30,0x2c3332316625202c,0x0a3b373431662520,0x203233662e67656e\n"
".quad 0x25202c3130326625,0x6d660a3b30303266,0x3233662e6e722e61,0x202c323032662520\n"
".quad 0x25202c3939316625,0x6625202c34313166,0x6275730a3b313032,0x326625203233662e\n"
".quad 0x39316625202c3330,0x3230326625202c38,0x33662e6464610a3b,0x2c34303266252032\n"
".quad 0x6625202c38662520,0x722e616d660a3b38,0x6625203233662e6e,0x336625202c353032\n"
".quad 0x3830436630202c36,0x25202c3030303030,0x6d660a3b34303266,0x3233662e6e722e61\n"
".quad 0x202c363032662520,0x6630202c32346625,0x3030303030383043,0x3b3530326625202c\n"
".quad 0x3233662e6464610a,0x202c373032662520,0x396625202c396625,0x33662e6464610a3b\n"
".quad 0x2c38303266252032,0x202c363032662520,0x610a3b3730326625,0x25203233662e6464\n"
".quad 0x6625202c39303266,0x346625202c383032,0x662e6464610a3b38,0x3031326625203233\n"
".quad 0x2c3930326625202c,0x610a3b3435662520,0x25203233662e6464,0x6625202c31313266\n"
".quad 0x366625202c303132,0x662e6464610a3b30,0x3231326625203233,0x2c3131326625202c\n"
".quad 0x610a3b3636662520,0x25203233662e6464,0x6625202c33313266,0x30316625202c3031\n"
".quad 0x33662e6464610a3b,0x2c34313266252032,0x202c323132662520,0x610a3b3331326625\n"
".quad 0x25203233662e6464,0x6625202c35313266,0x386625202c343132,0x722e616d660a3b34\n"
".quad 0x6625203233662e6e,0x316625202c363132,0x3030436630202c31,0x25202c3030303030\n"
".quad 0x64610a3b35313266,0x6625203233662e64,0x326625202c373132,0x30396625202c3631\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x32316625202c3831,0x303030436630202c\n"
".quad 0x6625202c30303030,0x6464610a3b373132,0x326625203233662e,0x33316625202c3931\n"
".quad 0x0a3b33316625202c,0x203233662e646461,0x25202c3032326625,0x6625202c38313266\n"
".quad 0x6464610a3b393132,0x326625203233662e,0x32326625202c3132,0x3b32376625202c30\n"
".quad 0x2e6e722e616d660a,0x3232662520323366,0x2c34316625202c32,0x3030303043663020\n"
".quad 0x326625202c303030,0x2e6464610a3b3132,0x3232662520323366,0x3232326625202c33\n"
".quad 0x0a3b38376625202c,0x662e6e722e616d66,0x3432326625203233,0x2c3639386625202c\n"
".quad 0x3030303043663020,0x326625202c303030,0x2e6464610a3b3332,0x3232662520323366\n"
".quad 0x202c386625202c35,0x6464610a3b396625,0x326625203233662e,0x32326625202c3632\n"
".quad 0x3b38346625202c35,0x3233662e6464610a,0x202c373232662520,0x25202c3632326625\n"
".quad 0x6464610a3b343566,0x326625203233662e,0x32326625202c3832,0x3b30366625202c37\n"
".quad 0x3233662e6464610a,0x202c393232662520,0x25202c3832326625,0x6275730a3b363666\n"
".quad 0x326625203233662e,0x32326625202c3033,0x3b30316625202c39,0x3233662e6275730a\n"
".quad 0x202c313332662520,0x25202c3033326625,0x6275730a3b343866,0x326625203233662e\n"
".quad 0x33326625202c3233,0x3b30396625202c31,0x3233662e6275730a,0x202c333332662520\n"
".quad 0x25202c3233326625,0x6275730a3b333166,0x326625203233662e,0x33326625202c3433\n"
".quad 0x3b32376625202c33,0x3233662e6275730a,0x202c353332662520,0x25202c3433326625\n"
".quad 0x6f6c2e0a3b383766,0x3132323320322063,0x662e67656e0a3120,0x3633326625203233\n"
".quad 0x3b3233316625202c,0x2e6e722e616d660a,0x3332662520323366,0x3633326625202c37\n"
".quad 0x2c3233316625202c,0x0a3b353431662520,0x203233662e627573,0x25202c3833326625\n"
".quad 0x6625202c35333266,0x67656e0a3b373332,0x326625203233662e,0x30326625202c3933\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x386625202c303432,0x2c3039316625202c\n"
".quad 0x0a3b393332662520,0x203233662e646461,0x25202c3134326625,0x6625202c30343266\n"
".quad 0x2e6464610a3b3834,0x3432662520323366,0x3134326625202c32,0x0a3b34356625202c\n"
".quad 0x203233662e646461,0x25202c3334326625,0x6625202c32343266,0x2e6464610a3b3036\n"
".quad 0x3432662520323366,0x3334326625202c34,0x0a3b36366625202c,0x203233662e646461\n"
".quad 0x25202c3534326625,0x6625202c34343266,0x6275730a3b333132,0x326625203233662e\n"
".quad 0x34326625202c3634,0x3b34386625202c35,0x3233662e6275730a,0x202c373432662520\n"
".quad 0x25202c3634326625,0x6f6c2e0a3b303966,0x3132323320322063,0x662e6464610a3120\n"
".quad 0x3834326625203233,0x2c3734326625202c,0x0a3b393132662520,0x203233662e627573\n"
".quad 0x25202c3934326625,0x6625202c38343266,0x2e6275730a3b3237,0x3532662520323366\n"
".quad 0x3934326625202c30,0x0a3b38376625202c,0x203233662e627573,0x25202c3135326625\n"
".quad 0x356625202c383466,0x20636f6c2e0a3b34,0x3120313232332032,0x3233662e6464610a\n"
".quad 0x202c323532662520,0x25202c3135326625,0x6275730a3b303666,0x326625203233662e\n"
".quad 0x35326625202c3335,0x3b36366625202c32,0x203220636f6c2e0a,0x6e0a312031323233\n"
".quad 0x25203233662e6765,0x6625202c34353266,0x616d660a3b343131,0x203233662e6e722e\n"
".quad 0x25202c3535326625,0x6625202c34353266,0x326625202c333231,0x2e6275730a3b3335\n"
".quad 0x3532662520323366,0x2c31316625202c36,0x730a3b3231662520,0x25203233662e6275\n"
".quad 0x6625202c37353266,0x316625202c363532,0x20636f6c2e0a3b34,0x3120313232332032\n"
".quad 0x3233662e6464610a,0x202c383532662520,0x25202c3735326625,0x656e0a3b36393866\n"
".quad 0x6625203233662e67,0x316625202c393532,0x2e616d660a3b3332,0x25203233662e6e72\n"
".quad 0x6625202c30363266,0x316625202c393532,0x35326625202c3233,0x662e6275730a3b38\n"
".quad 0x3136326625203233,0x202c34386625202c,0x75730a3b30396625,0x6625203233662e62\n"
".quad 0x326625202c323632,0x32376625202c3136,0x3220636f6c2e0a3b,0x0a31203132323320\n"
".quad 0x203233662e646461,0x25202c3336326625,0x6625202c32363266,0x2e616d660a3b3837\n"
".quad 0x25203233662e6e72,0x6625202c34363266,0x316625202c343532,0x36326625202c3233\n"
".quad 0x662e6275730a3b33,0x3536326625203233,0x2c3135326625202c,0x2e0a3b3036662520\n"
".quad 0x3233203220636f6c,0x6464610a31203132,0x326625203233662e,0x36326625202c3636\n"
".quad 0x3b36366625202c35,0x3233662e6275730a,0x202c373632662520,0x25202c3636326625\n"
".quad 0x6464610a3b343866,0x326625203233662e,0x36326625202c3836,0x3b30396625202c37\n"
".quad 0x3233662e6275730a,0x202c393632662520,0x25202c3836326625,0x6f6c2e0a3b323766\n"
".quad 0x3132323320322063,0x662e6464610a3120,0x3037326625203233,0x2c3936326625202c\n"
".quad 0x6e0a3b3837662520,0x25203233662e6765,0x6625202c31373266,0x2e6275730a3b3435\n"
".quad 0x3732662520323366,0x3137326625202c32,0x0a3b38346625202c,0x33203220636f6c2e\n"
".quad 0x64610a3120313232,0x6625203233662e64,0x326625202c333732,0x30366625202c3237\n"
".quad 0x33662e6464610a3b,0x2c34373266252032,0x202c333732662520,0x64610a3b36366625\n"
".quad 0x6625203233662e64,0x326625202c353732,0x31316625202c3437,0x33662e6275730a3b\n"
".quad 0x2c36373266252032,0x202c353732662520,0x6c2e0a3b32316625,0x323233203220636f\n"
".quad 0x2e6464610a312031,0x3732662520323366,0x3637326625202c37,0x0a3b34316625202c\n"
".quad 0x203233662e627573,0x25202c3837326625,0x6625202c37373266,0x6275730a3b363938\n"
".quad 0x326625203233662e,0x34386625202c3937,0x0a3b31316625202c,0x33203220636f6c2e\n"
".quad 0x64610a3120313232,0x6625203233662e64,0x326625202c303832,0x30396625202c3937\n"
".quad 0x33662e6275730a3b,0x2c31383266252032,0x202c303832662520,0x75730a3b32316625\n"
".quad 0x6625203233662e62,0x326625202c323832,0x32376625202c3138,0x3220636f6c2e0a3b\n"
".quad 0x0a31203132323320,0x203233662e646461,0x25202c3338326625,0x6625202c32383266\n"
".quad 0x2e6275730a3b3431,0x3832662520323366,0x3338326625202c34,0x0a3b38376625202c\n"
".quad 0x33203220636f6c2e,0x64610a3120313232,0x6625203233662e64,0x326625202c353832\n"
".quad 0x39386625202c3438,0x662e766f6d0a3b36,0x3638326625203233,0x303845336630202c\n"
".quad 0x646c0a3b30303030,0x662e6d617261702e,0x3439386625203233,0x4c39315a5f5b202c\n"
".quad 0x426279685f645f52,0x65746e495f434441,0x6d665f5366507072,0x5f6d617261705f66\n"
".quad 0x636f6c2e0a3b5d32,0x2031323233203220,0x33662e6c756d0a31,0x2c37383266252032\n"
".quad 0x202c343938662520,0x3030303845336630,0x2e766f6d0a3b3030,0x3832662520323366\n"
".quad 0x3045336630202c38,0x2e0a3b3030303030,0x3233203220636f6c,0x6c756d0a31203132\n"
".quad 0x326625203233662e,0x35326625202c3938,0x3244336630202c30,0x6d0a3b4241414141\n"
".quad 0x25203233662e766f,0x6630202c30393266,0x4241414141324433,0x3220636f6c2e0a3b\n"
".quad 0x0a31203132323320,0x203233662e6c756d,0x25202c3139326625,0x6630202c34393866\n"
".quad 0x4241414141414433,0x33662e6c756d0a3b,0x2c32393266252032,0x202c343232662520\n"
".quad 0x4538333643336630,0x2e6c756d0a3b3933,0x3932662520323366,0x3439386625202c33\n"
".quad 0x334543336630202c,0x756d0a3b39334538,0x6625203233662e6c,0x326625202c343932\n"
".quad 0x39326625202c3330,0x662e6c756d0a3b33,0x3539326625203233,0x2c3237316625202c\n"
".quad 0x4343434333663020,0x766f6d0a3b444343,0x326625203233662e,0x43336630202c3639\n"
".quad 0x0a3b444343434343,0x33203220636f6c2e,0x756d0a3120313232,0x6625203233662e6c\n"
".quad 0x316625202c373932,0x43336630202c3537,0x0a3b444343434343,0x203233662e6c756d\n"
".quad 0x25202c3839326625,0x6630202c38373166,0x4443434343434333,0x33662e6c756d0a3b\n"
".quad 0x2c39393266252032,0x202c393631662520,0x3830323842336630,0x2e6c756d0a3b3132\n"
".quad 0x3033662520323366,0x3939326625202c30,0x303431346630202c,0x6d660a3b30303030\n"
".quad 0x3233662e6e722e61,0x202c313033662520,0x30202c3934316625,0x3346433337454266\n"
".quad 0x3030336625202c44,0x33662e6275730a3b,0x2c32303366252032,0x6625202c37662520\n"
".quad 0x6c756d0a3b313033,0x336625203233662e,0x39326625202c3330,0x3830436630202c39\n"
".quad 0x660a3b3030303030,0x33662e6e722e616d,0x2c34303366252032,0x202c393431662520\n"
".quad 0x4243324244426630,0x30336625202c4432,0x722e616d660a3b33,0x6625203233662e6e\n"
".quad 0x326625202c353033,0x30436630202c3539,0x202c303030303038,0x660a3b3430336625\n"
".quad 0x33662e6e722e616d,0x2c36303366252032,0x202c333032662520,0x25202c3339326625\n"
".quad 0x64610a3b34393266,0x6625203233662e64,0x336625202c373033,0x30336625202c3530\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x326625202c383033,0x30436630202c3239\n"
".quad 0x202c303030303038,0x730a3b3730336625,0x25203233662e6275,0x6625202c39303366\n"
".quad 0x30336625202c3633,0x722e616d660a3b38,0x6625203233662e6e,0x326625202c303133\n"
".quad 0x30436630202c3739,0x202c303030303038,0x6e0a3b3430336625,0x25203233662e6765\n"
".quad 0x6625202c31313366,0x616d660a3b333032,0x203233662e6e722e,0x25202c3231336625\n"
".quad 0x6625202c31313366,0x336625202c333932,0x636f6c2e0a3b3031,0x2031323233203220\n"
".quad 0x6e722e616d660a31,0x336625203233662e,0x32326625202c3331,0x3643336630202c34\n"
".quad 0x25202c3933453833,0x64610a3b32393266,0x6625203233662e64,0x336625202c343133\n"
".quad 0x31336625202c3231,0x722e616d660a3b33,0x6625203233662e6e,0x326625202c353133\n"
".quad 0x39326625202c3833,0x3431336625202c31,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x38326625202c3631,0x3030436630202c39,0x25202c3030303030,0x75730a3b35313366\n"
".quad 0x6625203233662e62,0x386625202c373133,0x3b3631336625202c,0x2e6e722e616d660a\n"
".quad 0x3133662520323366,0x3539326625202c38,0x303830346630202c,0x6625202c30303030\n"
".quad 0x6464610a3b343033,0x336625203233662e,0x31336625202c3931,0x3630336625202c38\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x39326625202c3032,0x3830436630202c32\n"
".quad 0x25202c3030303030,0x75730a3b39313366,0x6625203233662e62,0x346625202c313233\n"
".quad 0x3032336625202c32,0x6e722e616d660a3b,0x336625203233662e,0x39326625202c3232\n"
".quad 0x3830346630202c37,0x25202c3030303030,0x6d660a3b34303366,0x3233662e6e722e61\n"
".quad 0x202c333233662520,0x25202c3131336625,0x6625202c33393266,0x6f6c2e0a3b323233\n"
".quad 0x3132323320322063,0x662e6464610a3120,0x3432336625203233,0x2c3332336625202c\n"
".quad 0x0a3b333133662520,0x662e6e722e616d66,0x3532336625203233,0x2c3833326625202c\n"
".quad 0x202c313932662520,0x660a3b3432336625,0x33662e6e722e616d,0x2c36323366252032\n"
".quad 0x202c393832662520,0x3030303030436630,0x32336625202c3030,0x662e6275730a3b35\n"
".quad 0x3732336625203233,0x25202c396625202c,0x6d660a3b36323366,0x3233662e6e722e61\n"
".quad 0x202c383233662520,0x30202c3934316625,0x3238303238443366,0x3939326625202c30\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x37316625202c3932,0x4343336630202c32\n"
".quad 0x25202c4443434343,0x6d660a3b38323366,0x3233662e6e722e61,0x202c303333662520\n"
".quad 0x30202c3537316625,0x4343434343433366,0x3932336625202c44,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x30326625202c3133,0x3339326625202c33,0x3b3033336625202c\n"
".quad 0x2e6e722e616d660a,0x3333662520323366,0x3432326625202c32,0x333643336630202c\n"
".quad 0x6625202c39334538,0x616d660a3b313333,0x203233662e6e722e,0x25202c3333336625\n"
".quad 0x6625202c38333266,0x336625202c313932,0x2e616d660a3b3233,0x25203233662e6e72\n"
".quad 0x6625202c34333366,0x336630202c303532,0x2c42414141413244,0x0a3b333333662520\n"
".quad 0x662e6e722e616d66,0x3533336625203233,0x2c3535326625202c,0x3030384533663020\n"
".quad 0x336625202c303030,0x2e616d660a3b3433,0x25203233662e6e72,0x6625202c36333366\n"
".quad 0x336630202c303732,0x2c30303030303045,0x0a3b353333662520,0x203233662e67656e\n"
".quad 0x25202c3733336625,0x6d660a3b38373266,0x3233662e6e722e61,0x202c383333662520\n"
".quad 0x25202c3733336625,0x6625202c38383266,0x6f6c2e0a3b363333,0x3132323320322063\n"
".quad 0x662e6275730a3120,0x3933336625203233,0x202c38346625202c,0x6e0a3b3833336625\n"
".quad 0x25203233662e6765,0x6625202c30343366,0x616d660a3b323731,0x203233662e6e722e\n"
".quad 0x25202c3134336625,0x6625202c30343366,0x336625202c363932,0x636f6c2e0a3b3832\n"
".quad 0x2031323233203220,0x6e722e616d660a31,0x336625203233662e,0x37316625202c3234\n"
".quad 0x4343336630202c35,0x25202c4443434343,0x6d660a3b31343366,0x3233662e6e722e61\n"
".quad 0x202c333433662520,0x25202c3330326625,0x6625202c33393266,0x616d660a3b323433\n"
".quad 0x203233662e6e722e,0x25202c3434336625,0x6630202c34323266,0x3933453833364333\n"
".quad 0x3b3334336625202c,0x2e6e722e616d660a,0x3433662520323366,0x3833326625202c35\n"
".quad 0x2c3139326625202c,0x0a3b343433662520,0x662e6e722e616d66,0x3634336625203233\n"
".quad 0x2c3035326625202c,0x4141324433663020,0x336625202c424141,0x2e67656e0a3b3534\n"
".quad 0x3433662520323366,0x3535326625202c37,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x34336625202c3834,0x3638326625202c37,0x3b3634336625202c,0x3233662e67656e0a\n"
".quad 0x202c393433662520,0x660a3b3037326625,0x33662e6e722e616d,0x2c30353366252032\n"
".quad 0x202c393433662520,0x25202c3838326625,0x6d660a3b38343366,0x3233662e6e722e61\n"
".quad 0x202c313533662520,0x25202c3733336625,0x6625202c38383266,0x6f6c2e0a3b303533\n"
".quad 0x3132323320322063,0x662e6275730a3120,0x3235336625203233,0x202c34356625202c\n"
".quad 0x6e0a3b3135336625,0x25203233662e6765,0x6625202c33353366,0x616d660a3b353731\n"
".quad 0x203233662e6e722e,0x25202c3435336625,0x6625202c33353366,0x336625202c363932\n"
".quad 0x636f6c2e0a3b3134,0x2031323233203220,0x6e722e616d660a31,0x336625203233662e\n"
".quad 0x30326625202c3535,0x3339326625202c33,0x3b3435336625202c,0x2e6e722e616d660a\n"
".quad 0x3533662520323366,0x3432326625202c36,0x333643336630202c,0x6625202c39334538\n"
".quad 0x616d660a3b353533,0x203233662e6e722e,0x25202c3735336625,0x6625202c38333266\n"
".quad 0x336625202c313932,0x2e616d660a3b3635,0x25203233662e6e72,0x6625202c38353366\n"
".quad 0x336630202c303532,0x2c42414141413244,0x0a3b373533662520,0x662e6e722e616d66\n"
".quad 0x3935336625203233,0x2c3535326625202c,0x3030384533663020,0x336625202c303030\n"
".quad 0x2e616d660a3b3835,0x25203233662e6e72,0x6625202c30363366,0x326625202c393433\n"
".quad 0x35336625202c3838,0x20636f6c2e0a3b39,0x3120313232332032,0x2e6e722e616d660a\n"
".quad 0x3633662520323366,0x3837326625202c31,0x303045336630202c,0x6625202c30303030\n"
".quad 0x6275730a3b303633,0x336625203233662e,0x30366625202c3236,0x3b3136336625202c\n"
".quad 0x2e6e722e616d660a,0x3633662520323366,0x3335336625202c33,0x2c3639326625202c\n"
".quad 0x0a3b393233662520,0x33203220636f6c2e,0x6d660a3120313232,0x3233662e6e722e61\n"
".quad 0x202c343633662520,0x25202c3330326625,0x6625202c33393266,0x616d660a3b333633\n"
".quad 0x203233662e6e722e,0x25202c3536336625,0x6630202c34323266,0x3933453833364333\n"
".quad 0x3b3436336625202c,0x2e6e722e616d660a,0x3633662520323366,0x3833326625202c36\n"
".quad 0x2c3139326625202c,0x0a3b353633662520,0x662e6e722e616d66,0x3736336625203233\n"
".quad 0x2c3035326625202c,0x4141324433663020,0x336625202c424141,0x2e616d660a3b3636\n"
".quad 0x25203233662e6e72,0x6625202c38363366,0x326625202c373433,0x36336625202c3638\n"
".quad 0x20636f6c2e0a3b37,0x3120313232332032,0x2e6e722e616d660a,0x3633662520323366\n"
".quad 0x3037326625202c39,0x303045336630202c,0x6625202c30303030,0x616d660a3b383633\n"
".quad 0x203233662e6e722e,0x25202c3037336625,0x6630202c38373266,0x3030303030304533\n"
".quad 0x3b3936336625202c,0x3233662e6275730a,0x202c313733662520,0x6625202c36366625\n"
".quad 0x616d660a3b303733,0x203233662e6e722e,0x25202c3237336625,0x6630202c38393266\n"
".quad 0x3030303030383043,0x3b3430336625202c,0x2e6e722e616d660a,0x3733662520323366\n"
".quad 0x3131336625202c33,0x2c3339326625202c,0x0a3b323733662520,0x33203220636f6c2e\n"
".quad 0x64610a3120313232,0x6625203233662e64,0x336625202c343733,0x31336625202c3337\n"
".quad 0x662e67656e0a3b33,0x3537336625203233,0x3b3833326625202c,0x2e6e722e616d660a\n"
".quad 0x3733662520323366,0x3537336625202c36,0x2c3139326625202c,0x0a3b343733662520\n"
".quad 0x33203220636f6c2e,0x6d660a3120313232,0x3233662e6e722e61,0x202c373733662520\n"
".quad 0x30202c3035326625,0x4141414132443366,0x3938326625202c42,0x33662e6464610a3b\n"
".quad 0x2c38373366252032,0x202c363733662520,0x730a3b3737336625,0x25203233662e6275\n"
".quad 0x6625202c39373366,0x37336625202c3031,0x722e616d660a3b38,0x6625203233662e6e\n"
".quad 0x316625202c303833,0x43336630202c3837,0x202c444343434343,0x660a3b3932336625\n"
".quad 0x33662e6e722e616d,0x2c31383366252032,0x202c333032662520,0x25202c3339326625\n"
".quad 0x6d660a3b30383366,0x3233662e6e722e61,0x202c323833662520,0x30202c3432326625\n"
".quad 0x3345383336433366,0x3138336625202c39,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x37336625202c3338,0x3139326625202c35,0x3b3238336625202c,0x3233662e67656e0a\n"
".quad 0x202c343833662520,0x660a3b3035326625,0x33662e6e722e616d,0x2c35383366252032\n"
".quad 0x202c343833662520,0x25202c3039326625,0x6c2e0a3b33383366,0x323233203220636f\n"
".quad 0x2e616d660a312031,0x25203233662e6e72,0x6625202c36383366,0x326625202c343632\n"
".quad 0x38336625202c3738,0x722e616d660a3b35,0x6625203233662e6e,0x336625202c373833\n"
".quad 0x38326625202c3934,0x3638336625202c38,0x3220636f6c2e0a3b,0x0a31203132323320\n"
".quad 0x662e6e722e616d66,0x3838336625203233,0x2c3538326625202c,0x3030304533663020\n"
".quad 0x336625202c303030,0x2e6275730a3b3738,0x3833662520323366,0x2c34386625202c39\n"
".quad 0x0a3b383833662520,0x662e6e722e616d66,0x3039336625203233,0x2c3537316625202c\n"
".quad 0x4343434333663020,0x336625202c444343,0x2e616d660a3b3832,0x25203233662e6e72\n"
".quad 0x6625202c31393366,0x336630202c383731,0x2c44434343434343,0x0a3b303933662520\n"
".quad 0x662e6e722e616d66,0x3239336625203233,0x2c3439326625202c,0x3030303043663020\n"
".quad 0x336625202c303030,0x2e616d660a3b3139,0x25203233662e6e72,0x6625202c33393366\n"
".quad 0x436630202c323932,0x2c30303030303030,0x0a3b323933662520,0x662e6e722e616d66\n"
".quad 0x3439336625203233,0x2c3036326625202c,0x3030384533663020,0x336625202c303030\n"
".quad 0x2e616d660a3b3339,0x25203233662e6e72,0x6625202c35393366,0x336630202c383732\n"
".quad 0x2c30303030303045,0x0a3b343933662520,0x203233662e67656e,0x25202c3639336625\n"
".quad 0x6d660a3b35383266,0x3233662e6e722e61,0x202c373933662520,0x25202c3639336625\n"
".quad 0x6625202c38383266,0x6f6c2e0a3b353933,0x3132323320322063,0x662e6275730a3120\n"
".quad 0x3839336625203233,0x202c31316625202c,0x660a3b3739336625,0x33662e6e722e616d\n"
".quad 0x2c39393366252032,0x202c383731662520,0x4343434343336630,0x34336625202c4443\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x326625202c303034,0x39326625202c3330\n"
".quad 0x3939336625202c33,0x6e722e616d660a3b,0x346625203233662e,0x32326625202c3130\n"
".quad 0x3643336630202c34,0x25202c3933453833,0x6d660a3b30303466,0x3233662e6e722e61\n"
".quad 0x202c323034662520,0x25202c3537336625,0x6625202c31393266,0x616d660a3b313034\n"
".quad 0x203233662e6e722e,0x25202c3330346625,0x6625202c34383366,0x346625202c303932\n"
".quad 0x2e67656e0a3b3230,0x3034662520323366,0x3436326625202c34,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x30346625202c3530,0x3738326625202c34,0x3b3330346625202c\n"
".quad 0x203220636f6c2e0a,0x660a312031323233,0x33662e6e722e616d,0x2c36303466252032\n"
".quad 0x202c303732662520,0x3030303045336630,0x30346625202c3030,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x326625202c373034,0x45336630202c3538,0x202c303030303030\n"
".quad 0x730a3b3630346625,0x25203233662e6275,0x6625202c38303466,0x30346625202c3039\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x336625202c393034,0x39326625202c3335\n"
".quad 0x3832336625202c36,0x3220636f6c2e0a3b,0x0a31203132323320,0x662e6e722e616d66\n"
".quad 0x3031346625203233,0x2c3837316625202c,0x4343434333663020,0x346625202c444343\n"
".quad 0x2e616d660a3b3930,0x25203233662e6e72,0x6625202c31313466,0x436630202c343932\n"
".quad 0x2c30303030303030,0x0a3b303134662520,0x662e6e722e616d66,0x3231346625203233\n"
".quad 0x2c3239326625202c,0x3030303043663020,0x346625202c303030,0x2e67656e0a3b3131\n"
".quad 0x3134662520323366,0x3036326625202c33,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x31346625202c3431,0x3638326625202c33,0x3b3231346625202c,0x2e6e722e616d660a\n"
".quad 0x3134662520323366,0x3733336625202c35,0x2c3838326625202c,0x0a3b343134662520\n"
".quad 0x662e6e722e616d66,0x3631346625203233,0x2c3639336625202c,0x202c383832662520\n"
".quad 0x2e0a3b3531346625,0x3233203220636f6c,0x6275730a31203132,0x346625203233662e\n"
".quad 0x32316625202c3731,0x3b3631346625202c,0x2e6e722e616d660a,0x3134662520323366\n"
".quad 0x3839326625202c38,0x303830346630202c,0x6625202c30303030,0x616d660a3b343033\n"
".quad 0x203233662e6e722e,0x25202c3931346625,0x6625202c31313366,0x346625202c333932\n"
".quad 0x636f6c2e0a3b3831,0x2031323233203220,0x33662e6464610a31,0x2c30323466252032\n"
".quad 0x202c393134662520,0x660a3b3331336625,0x33662e6e722e616d,0x2c31323466252032\n"
".quad 0x202c353733662520,0x25202c3139326625,0x6c2e0a3b30323466,0x323233203220636f\n"
".quad 0x2e6464610a312031,0x3234662520323366,0x3132346625202c32,0x3b3737336625202c\n"
".quad 0x3233662e6275730a,0x202c333234662520,0x6625202c33316625,0x67656e0a3b323234\n"
".quad 0x346625203233662e,0x37316625202c3432,0x722e616d660a3b38,0x6625203233662e6e\n"
".quad 0x346625202c353234,0x39326625202c3432,0x3932336625202c36,0x3220636f6c2e0a3b\n"
".quad 0x0a31203132323320,0x662e6e722e616d66,0x3632346625203233,0x2c3330326625202c\n"
".quad 0x202c333932662520,0x660a3b3532346625,0x33662e6e722e616d,0x2c37323466252032\n"
".quad 0x202c343232662520,0x4538333643336630,0x32346625202c3933,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x336625202c383234,0x39326625202c3537,0x3732346625202c31\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x38336625202c3932,0x3039326625202c34\n"
".quad 0x3b3832346625202c,0x2e6e722e616d660a,0x3334662520323366,0x3430346625202c30\n"
".quad 0x2c3738326625202c,0x0a3b393234662520,0x662e6e722e616d66,0x3133346625203233\n"
".quad 0x2c3934336625202c,0x202c383832662520,0x660a3b3033346625,0x33662e6e722e616d\n"
".quad 0x2c32333466252032,0x202c363933662520,0x25202c3838326625,0x6c2e0a3b31333466\n"
".quad 0x323233203220636f,0x2e6275730a312031,0x3334662520323366,0x2c32376625202c33\n"
".quad 0x0a3b323334662520,0x662e6e722e616d66,0x3433346625203233,0x2c3432346625202c\n"
".quad 0x202c363932662520,0x2e0a3b3039336625,0x3233203220636f6c,0x616d660a31203132\n"
".quad 0x203233662e6e722e,0x25202c3533346625,0x6630202c34393266,0x3030303030303043\n"
".quad 0x3b3433346625202c,0x2e6e722e616d660a,0x3334662520323366,0x3239326625202c36\n"
".quad 0x303030436630202c,0x6625202c30303030,0x616d660a3b353334,0x203233662e6e722e\n"
".quad 0x25202c3733346625,0x6625202c33313466,0x346625202c363832,0x636f6c2e0a3b3633\n"
".quad 0x2031323233203220,0x6e722e616d660a31,0x346625203233662e,0x37326625202c3833\n"
".quad 0x3045336630202c38,0x25202c3030303030,0x6d660a3b37333466,0x3233662e6e722e61\n"
".quad 0x202c393334662520,0x30202c3538326625,0x3030303030453366,0x3833346625202c30\n"
".quad 0x33662e6275730a3b,0x2c30343466252032,0x25202c3431662520,0x6d660a3b39333466\n"
".quad 0x3233662e6e722e61,0x202c313434662520,0x25202c3432346625,0x6625202c36393266\n"
".quad 0x6f6c2e0a3b313433,0x3132323320322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x326625202c323434,0x39326625202c3330,0x3134346625202c33,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x32326625202c3334,0x3643336630202c34,0x25202c3933453833\n"
".quad 0x6d660a3b32343466,0x3233662e6e722e61,0x202c343434662520,0x25202c3537336625\n"
".quad 0x6625202c31393266,0x616d660a3b333434,0x203233662e6e722e,0x25202c3534346625\n"
".quad 0x6625202c34383366,0x346625202c303932,0x636f6c2e0a3b3434,0x2031323233203220\n"
".quad 0x6e722e616d660a31,0x346625203233662e,0x36326625202c3634,0x3738326625202c34\n"
".quad 0x3b3534346625202c,0x2e6e722e616d660a,0x3434662520323366,0x3037326625202c37\n"
".quad 0x303045336630202c,0x6625202c30303030,0x616d660a3b363434,0x203233662e6e722e\n"
".quad 0x25202c3834346625,0x6625202c36393366,0x346625202c383832,0x636f6c2e0a3b3734\n"
".quad 0x2031323233203220,0x33662e6275730a31,0x2c39343466252032,0x25202c3837662520\n"
".quad 0x6d660a3b38343466,0x3233662e6e722e61,0x202c303534662520,0x25202c3432346625\n"
".quad 0x6625202c36393266,0x6f6c2e0a3b393034,0x3132323320322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x326625202c313534,0x30436630202c3439,0x202c303030303030\n"
".quad 0x660a3b3035346625,0x33662e6e722e616d,0x2c32353466252032,0x202c323932662520\n"
".quad 0x3030303030436630,0x35346625202c3030,0x722e616d660a3b31,0x6625203233662e6e\n"
".quad 0x326625202c333534,0x45336630202c3036,0x202c303030303038,0x660a3b3235346625\n"
".quad 0x33662e6e722e616d,0x2c34353466252032,0x202c373333662520,0x25202c3838326625\n"
".quad 0x6c2e0a3b33353466,0x323233203220636f,0x2e616d660a312031,0x25203233662e6e72\n"
".quad 0x6625202c35353466,0x336630202c353832,0x2c30303030303045,0x0a3b343534662520\n"
".quad 0x203233662e627573,0x25202c3635346625,0x6625202c36393866,0x2e646c0a3b353534\n"
".quad 0x36752e6d61726170,0x3433346c72252034,0x4c39315a5f5b202c,0x426279685f645f52\n"
".quad 0x65746e495f434441,0x6d665f5366507072,0x5f6d617261705f66,0x636f6c2e0a3b5d33\n"
".quad 0x2034353932203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c393131\n"
".quad 0x346c7225202c3531,0x356c7225202c3433,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3133346c72,0x645f524c39315a5f,0x434441426279685f,0x50707265746e495f\n"
".quad 0x705f666d665f5366,0x3b5d315f6d617261,0x6f742e617476630a,0x2e6c61626f6c672e\n"
".quad 0x316c722520343675,0x346c7225202c3032,0x2e6c68730a3b3133,0x316c722520343662\n"
".quad 0x316c7225202c3132,0x0a3b3233202c3931,0x203436732e726873,0x202c3232316c7225\n"
".quad 0x202c3132316c7225,0x636f6c2e0a3b3233,0x2033343133203220,0x36622e6c68730a31\n"
".quad 0x3332316c72252034,0x3232316c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c343231,0x6c7225202c303231,0x6f6c2e0a3b333231,0x3532323320322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3432316c72255b20,0x3230336625202c5d\n"
".quad 0x36732e6464610a3b,0x3532316c72252034,0x2c35316c7225202c,0x2e0a3b3639303420\n"
".quad 0x3133203220636f6c,0x64616d0a31203434,0x203436732e6f6c2e,0x202c3632316c7225\n"
".quad 0x202c3532316c7225,0x202c3433346c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3732316c,0x3233202c3632316c,0x36732e7268730a3b,0x3832316c72252034\n"
".quad 0x3732316c7225202c,0x6c2e0a3b3233202c,0x343133203220636f,0x2e6c68730a312034\n"
".quad 0x316c722520343662,0x316c7225202c3932,0x610a3b32202c3832,0x25203436732e6464\n"
".quad 0x25202c3033316c72,0x25202c3032316c72,0x2e0a3b3932316c72,0x3233203220636f6c\n"
".quad 0x2e74730a31203632,0x662e6c61626f6c67,0x316c72255b203233,0x336625202c5d3033\n"
".quad 0x2e6464610a3b3930,0x316c722520343673,0x316c7225202c3133,0x3b32393138202c35\n"
".quad 0x203220636f6c2e0a,0x6d0a312035343133,0x36732e6f6c2e6461,0x3233316c72252034\n"
".quad 0x3133316c7225202c,0x3433346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3333316c7225,0x202c3233316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3433,0x0a3b3233202c3333,0x33203220636f6c2e,0x68730a3120353431\n"
".quad 0x7225203436622e6c,0x7225202c3533316c,0x3b32202c3433316c,0x3436732e6464610a\n"
".quad 0x2c3633316c722520,0x2c3032316c722520,0x3b3533316c722520,0x203220636f6c2e0a\n"
".quad 0x730a312037323233,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3633316c\n"
".quad 0x64610a3b37313366,0x7225203436732e64,0x7225202c3733316c,0x323231202c35316c\n"
".quad 0x636f6c2e0a3b3838,0x2036343133203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c383331,0x6c7225202c373331,0x6c7225202c343334,0x622e6c68730a3b35\n"
".quad 0x33316c7225203436,0x33316c7225202c39,0x730a3b3233202c38,0x25203436732e7268\n"
".quad 0x25202c3034316c72,0x33202c3933316c72,0x20636f6c2e0a3b32,0x3120363431332032\n"
".quad 0x3436622e6c68730a,0x2c3134316c722520,0x2c3034316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x316c7225202c3234,0x316c7225202c3032,0x636f6c2e0a3b3134\n"
".quad 0x2038323233203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3234316c72255b\n"
".quad 0x3b3132336625202c,0x3436732e6464610a,0x2c3334316c722520,0x202c35316c722520\n"
".quad 0x2e0a3b3438333631,0x3133203220636f6c,0x64616d0a31203734,0x203436732e6f6c2e\n"
".quad 0x202c3434316c7225,0x202c3334316c7225,0x202c3433346c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3534316c,0x3233202c3434316c,0x36732e7268730a3b\n"
".quad 0x3634316c72252034,0x3534316c7225202c,0x6c2e0a3b3233202c,0x343133203220636f\n"
".quad 0x2e6c68730a312037,0x316c722520343662,0x316c7225202c3734,0x610a3b32202c3634\n"
".quad 0x25203436732e6464,0x25202c3834316c72,0x25202c3032316c72,0x2e0a3b3734316c72\n"
".quad 0x3233203220636f6c,0x2e74730a31203932,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x336625202c5d3834,0x2e6464610a3b3732,0x316c722520343673,0x316c7225202c3934\n"
".quad 0x3038343032202c35,0x3220636f6c2e0a3b,0x0a31203834313320,0x732e6f6c2e64616d\n"
".quad 0x35316c7225203436,0x34316c7225202c30,0x33346c7225202c39,0x3b356c7225202c34\n"
".quad 0x3436622e6c68730a,0x2c3135316c722520,0x2c3035316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c323531,0x3b3233202c313531,0x203220636f6c2e0a\n"
".quad 0x730a312038343133,0x25203436622e6c68,0x25202c3335316c72,0x32202c3235316c72\n"
".quad 0x36732e6464610a3b,0x3435316c72252034,0x3032316c7225202c,0x3335316c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203033323320,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3435316c72,0x610a3b3933336625,0x25203436732e6464,0x25202c3535316c72\n"
".quad 0x3432202c35316c72,0x6f6c2e0a3b363735,0x3934313320322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3635316c,0x7225202c3535316c,0x7225202c3433346c\n"
".quad 0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3735,0x0a3b3233202c3635\n"
".quad 0x203436732e726873,0x202c3835316c7225,0x202c3735316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2039343133203220,0x36622e6c68730a31,0x3935316c72252034,0x3835316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c303631,0x6c7225202c303231\n"
".quad 0x6f6c2e0a3b393531,0x3133323320322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3036316c72255b20,0x3235336625202c5d,0x36732e6464610a3b,0x3136316c72252034\n"
".quad 0x2c35316c7225202c,0x0a3b323736383220,0x33203220636f6c2e,0x616d0a3120303531\n"
".quad 0x3436732e6f6c2e64,0x2c3236316c722520,0x2c3136316c722520,0x2c3433346c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3336316c72,0x33202c3236316c72\n"
".quad 0x732e7268730a3b32,0x36316c7225203436,0x36316c7225202c34,0x2e0a3b3233202c33\n"
".quad 0x3133203220636f6c,0x6c68730a31203035,0x6c7225203436622e,0x6c7225202c353631\n"
".quad 0x0a3b32202c343631,0x203436732e646461,0x202c3636316c7225,0x202c3032316c7225\n"
".quad 0x0a3b3536316c7225,0x33203220636f6c2e,0x74730a3120323332,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d363631,0x6464610a3b323633,0x6c7225203436732e\n"
".quad 0x6c7225202c373631,0x36373233202c3531,0x20636f6c2e0a3b38,0x3120313531332032\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3836,0x346c7225202c3736\n"
".quad 0x356c7225202c3433,0x36622e6c68730a3b,0x3936316c72252034,0x3836316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3037316c,0x3233202c3936316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203135313320,0x203436622e6c6873,0x202c3137316c7225\n"
".quad 0x202c3037316c7225,0x732e6464610a3b32,0x37316c7225203436,0x32316c7225202c32\n"
".quad 0x37316c7225202c30,0x20636f6c2e0a3b31,0x3120333332332032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3237316c7225,0x0a3b313733662520,0x203436732e646461\n"
".quad 0x202c3337316c7225,0x33202c35316c7225,0x6c2e0a3b34363836,0x353133203220636f\n"
".quad 0x2e64616d0a312032,0x25203436732e6f6c,0x25202c3437316c72,0x25202c3337316c72\n"
".quad 0x25202c3433346c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c353731\n"
".quad 0x3b3233202c343731,0x3436732e7268730a,0x2c3637316c722520,0x2c3537316c722520\n"
".quad 0x6f6c2e0a3b323320,0x3235313320322063,0x622e6c68730a3120,0x37316c7225203436\n"
".quad 0x37316c7225202c37,0x64610a3b32202c36,0x7225203436732e64,0x7225202c3837316c\n"
".quad 0x7225202c3032316c,0x6c2e0a3b3737316c,0x333233203220636f,0x672e74730a312034\n"
".quad 0x33662e6c61626f6c,0x37316c72255b2032,0x37336625202c5d38,0x732e6464610a3b39\n"
".quad 0x37316c7225203436,0x35316c7225202c39,0x3b3036393034202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312033353133,0x36732e6f6c2e6461,0x3038316c72252034,0x3937316c7225202c\n"
".quad 0x3433346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3138316c7225\n"
".quad 0x202c3038316c7225,0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3238\n"
".quad 0x0a3b3233202c3138,0x33203220636f6c2e,0x68730a3120333531,0x7225203436622e6c\n"
".quad 0x7225202c3338316c,0x3b32202c3238316c,0x3436732e6464610a,0x2c3438316c722520\n"
".quad 0x2c3032316c722520,0x3b3338316c722520,0x203220636f6c2e0a,0x730a312035333233\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3438316c,0x64610a3b39383366\n"
".quad 0x7225203436732e64,0x7225202c3538316c,0x303534202c35316c,0x636f6c2e0a3b3635\n"
".quad 0x2034353133203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c363831\n"
".quad 0x6c7225202c353831,0x6c7225202c343334,0x622e6c68730a3b35,0x38316c7225203436\n"
".quad 0x38316c7225202c37,0x730a3b3233202c36,0x25203436732e7268,0x25202c3838316c72\n"
".quad 0x33202c3738316c72,0x20636f6c2e0a3b32,0x3120343531332032,0x3436622e6c68730a\n"
".quad 0x2c3938316c722520,0x2c3838316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x316c7225202c3039,0x316c7225202c3032,0x636f6c2e0a3b3938,0x2036333233203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3039316c72255b,0x3b3839336625202c\n"
".quad 0x3436732e6464610a,0x2c3139316c722520,0x202c35316c722520,0x2e0a3b3235313934\n"
".quad 0x3133203220636f6c,0x64616d0a31203535,0x203436732e6f6c2e,0x202c3239316c7225\n"
".quad 0x202c3139316c7225,0x202c3433346c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3339316c,0x3233202c3239316c,0x36732e7268730a3b,0x3439316c72252034\n"
".quad 0x3339316c7225202c,0x6c2e0a3b3233202c,0x353133203220636f,0x2e6c68730a312035\n"
".quad 0x316c722520343662,0x316c7225202c3539,0x610a3b32202c3439,0x25203436732e6464\n"
".quad 0x25202c3639316c72,0x25202c3032316c72,0x2e0a3b3539316c72,0x3233203220636f6c\n"
".quad 0x2e74730a31203733,0x662e6c61626f6c67,0x316c72255b203233,0x346625202c5d3639\n"
".quad 0x636f6c2e0a3b3830,0x2036353133203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c383931,0x346c7225202c3631,0x356c7225202c3433,0x36622e6c68730a3b\n"
".quad 0x3939316c72252034,0x3839316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3030326c,0x3233202c3939316c,0x3220636f6c2e0a3b,0x0a31203635313320\n"
".quad 0x203436622e6c6873,0x202c3130326c7225,0x202c3030326c7225,0x732e6464610a3b32\n"
".quad 0x30326c7225203436,0x32316c7225202c32,0x30326c7225202c30,0x20636f6c2e0a3b31\n"
".quad 0x3120383332332032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3230326c7225\n"
".quad 0x0a3b373134662520,0x33203220636f6c2e,0x616d0a3120373531,0x3436732e6f6c2e64\n"
".quad 0x2c3430326c722520,0x202c32326c722520,0x202c3433346c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3530326c,0x3233202c3430326c,0x36732e7268730a3b\n"
".quad 0x3630326c72252034,0x3530326c7225202c,0x6c2e0a3b3233202c,0x353133203220636f\n"
".quad 0x2e6c68730a312037,0x326c722520343662,0x326c7225202c3730,0x610a3b32202c3630\n"
".quad 0x25203436732e6464,0x25202c3830326c72,0x25202c3032316c72,0x2e0a3b3730326c72\n"
".quad 0x3233203220636f6c,0x2e74730a31203933,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x346625202c5d3830,0x636f6c2e0a3b3332,0x2038353133203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c303132,0x346c7225202c3732,0x356c7225202c3433\n"
".quad 0x36622e6c68730a3b,0x3131326c72252034,0x3031326c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3231326c,0x3233202c3131326c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203835313320,0x203436622e6c6873,0x202c3331326c7225,0x202c3231326c7225\n"
".quad 0x732e6464610a3b32,0x31326c7225203436,0x32316c7225202c34,0x31326c7225202c30\n"
".quad 0x20636f6c2e0a3b33,0x3120303432332032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3431326c7225,0x0a3b333334662520,0x33203220636f6c2e,0x616d0a3120393531\n"
".quad 0x3436732e6f6c2e64,0x2c3631326c722520,0x202c32336c722520,0x202c3433346c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3731326c,0x3233202c3631326c\n"
".quad 0x36732e7268730a3b,0x3831326c72252034,0x3731326c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x353133203220636f,0x2e6c68730a312039,0x326c722520343662,0x326c7225202c3931\n"
".quad 0x610a3b32202c3831,0x25203436732e6464,0x25202c3032326c72,0x25202c3032316c72\n"
".quad 0x2e0a3b3931326c72,0x3233203220636f6c,0x2e74730a31203134,0x662e6c61626f6c67\n"
".quad 0x326c72255b203233,0x346625202c5d3032,0x636f6c2e0a3b3034,0x2030363133203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c323232,0x346c7225202c3733\n"
".quad 0x356c7225202c3433,0x36622e6c68730a3b,0x3332326c72252034,0x3232326c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3432326c,0x3233202c3332326c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203036313320,0x203436622e6c6873,0x202c3532326c7225\n"
".quad 0x202c3432326c7225,0x732e6464610a3b32,0x32326c7225203436,0x32316c7225202c36\n"
".quad 0x32326c7225202c30,0x20636f6c2e0a3b35,0x3120323432332032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3632326c7225,0x0a3b393434662520,0x33203220636f6c2e\n"
".quad 0x616d0a3120313631,0x3436732e6f6c2e64,0x2c3832326c722520,0x202c32346c722520\n"
".quad 0x202c3433346c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3932326c\n"
".quad 0x3233202c3832326c,0x36732e7268730a3b,0x3033326c72252034,0x3932326c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x363133203220636f,0x2e6c68730a312031,0x326c722520343662\n"
".quad 0x326c7225202c3133,0x610a3b32202c3033,0x25203436732e6464,0x25202c3233326c72\n"
".quad 0x25202c3032316c72,0x2e0a3b3133326c72,0x3233203220636f6c,0x2e74730a31203334\n"
".quad 0x662e6c61626f6c67,0x326c72255b203233,0x346625202c5d3233,0x636f6c2e0a3b3635\n"
".quad 0x2036343233203220,0x0a0a3b7465720a32,0x0a3a355f36324242,0x203436732e646461\n"
".quad 0x202c3533326c7225,0x7225202c366c7225,0x2e6464610a3b376c,0x326c722520343673\n"
".quad 0x326c7225202c3633,0x36393034202c3533,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3333346c72,0x645f524c39315a5f,0x434441426279685f,0x50707265746e495f\n"
".quad 0x705f666d665f5366,0x3b5d335f6d617261,0x203220636f6c2e0a,0x6d0a312034343133\n"
".quad 0x36732e6f6c2e6461,0x3833326c72252034,0x3633326c7225202c,0x3333346c7225202c\n"
".quad 0x0a3b356c7225202c,0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c303334\n"
".quad 0x685f645f524c3931,0x495f434441426279,0x536650707265746e,0x7261705f666d665f\n"
".quad 0x630a3b5d315f6d61,0x672e6f742e617476,0x36752e6c61626f6c,0x3933326c72252034\n"
".quad 0x3033346c7225202c,0x36622e6c68730a3b,0x3034326c72252034,0x3833326c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3134326c,0x3233202c3034326c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203434313320,0x203436622e6c6873,0x202c3234326c7225\n"
".quad 0x202c3134326c7225,0x732e6464610a3b32,0x34326c7225203436,0x33326c7225202c33\n"
".quad 0x34326c7225202c39,0x20636f6c2e0a3b32,0x3120383831332032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3334326c7225,0x610a3b3234662520,0x25203436732e6464\n"
".quad 0x25202c3434326c72,0x38202c3533326c72,0x6f6c2e0a3b323931,0x3534313320322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3534326c,0x7225202c3434326c\n"
".quad 0x7225202c3333346c,0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3634\n"
".quad 0x0a3b3233202c3534,0x203436732e726873,0x202c3734326c7225,0x202c3634326c7225\n"
".quad 0x636f6c2e0a3b3233,0x2035343133203220,0x36622e6c68730a31,0x3834326c72252034\n"
".quad 0x3734326c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c393432\n"
".quad 0x6c7225202c393332,0x6f6c2e0a3b383432,0x3938313320322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x3934326c72255b20,0x0a3b396625202c5d,0x203436732e646461\n"
".quad 0x202c3035326c7225,0x202c3533326c7225,0x2e0a3b3838323231,0x3133203220636f6c\n"
".quad 0x64616d0a31203634,0x203436732e6f6c2e,0x202c3135326c7225,0x202c3035326c7225\n"
".quad 0x202c3333346c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3235326c\n"
".quad 0x3233202c3135326c,0x36732e7268730a3b,0x3335326c72252034,0x3235326c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x343133203220636f,0x2e6c68730a312036,0x326c722520343662\n"
".quad 0x326c7225202c3435,0x610a3b32202c3335,0x25203436732e6464,0x25202c3535326c72\n"
".quad 0x25202c3933326c72,0x2e0a3b3435326c72,0x3133203220636f6c,0x2e74730a31203039\n"
".quad 0x662e6c61626f6c67,0x326c72255b203233,0x336625202c5d3535,0x732e6464610a3b36\n"
".quad 0x35326c7225203436,0x33326c7225202c36,0x3438333631202c35,0x3220636f6c2e0a3b\n"
".quad 0x0a31203734313320,0x732e6f6c2e64616d,0x35326c7225203436,0x35326c7225202c37\n"
".quad 0x33346c7225202c36,0x3b356c7225202c33,0x3436622e6c68730a,0x2c3835326c722520\n"
".quad 0x2c3735326c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c393532\n"
".quad 0x3b3233202c383532,0x203220636f6c2e0a,0x730a312037343133,0x25203436622e6c68\n"
".quad 0x25202c3036326c72,0x32202c3935326c72,0x36732e6464610a3b,0x3136326c72252034\n"
".quad 0x3933326c7225202c,0x3036326c7225202c,0x3220636f6c2e0a3b,0x0a31203139313320\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3136326c72,0x6464610a3b386625\n"
".quad 0x6c7225203436732e,0x6c7225202c323632,0x343032202c353332,0x636f6c2e0a3b3038\n"
".quad 0x2038343133203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c333632\n"
".quad 0x6c7225202c323632,0x6c7225202c333334,0x622e6c68730a3b35,0x36326c7225203436\n"
".quad 0x36326c7225202c34,0x730a3b3233202c33,0x25203436732e7268,0x25202c3536326c72\n"
".quad 0x33202c3436326c72,0x20636f6c2e0a3b32,0x3120383431332032,0x3436622e6c68730a\n"
".quad 0x2c3636326c722520,0x2c3536326c722520,0x2e6464610a3b3220,0x326c722520343673\n"
".quad 0x326c7225202c3736,0x326c7225202c3933,0x636f6c2e0a3b3636,0x2032393133203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3736326c72255b,0x0a3b30366625202c\n"
".quad 0x203436732e646461,0x202c3836326c7225,0x202c3533326c7225,0x2e0a3b3637353432\n"
".quad 0x3133203220636f6c,0x64616d0a31203934,0x203436732e6f6c2e,0x202c3936326c7225\n"
".quad 0x202c3836326c7225,0x202c3333346c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3037326c,0x3233202c3936326c,0x36732e7268730a3b,0x3137326c72252034\n"
".quad 0x3037326c7225202c,0x6c2e0a3b3233202c,0x343133203220636f,0x2e6c68730a312039\n"
".quad 0x326c722520343662,0x326c7225202c3237,0x610a3b32202c3137,0x25203436732e6464\n"
".quad 0x25202c3337326c72,0x25202c3933326c72,0x2e0a3b3237326c72,0x3133203220636f6c\n"
".quad 0x2e74730a31203339,0x662e6c61626f6c67,0x326c72255b203233,0x366625202c5d3337\n"
".quad 0x732e6464610a3b36,0x37326c7225203436,0x33326c7225202c34,0x3237363832202c35\n"
".quad 0x3220636f6c2e0a3b,0x0a31203035313320,0x732e6f6c2e64616d,0x37326c7225203436\n"
".quad 0x37326c7225202c35,0x33346c7225202c34,0x3b356c7225202c33,0x3436622e6c68730a\n"
".quad 0x2c3637326c722520,0x2c3537326c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c373732,0x3b3233202c363732,0x203220636f6c2e0a,0x730a312030353133\n"
".quad 0x25203436622e6c68,0x25202c3837326c72,0x32202c3737326c72,0x36732e6464610a3b\n"
".quad 0x3937326c72252034,0x3933326c7225202c,0x3837326c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203439313320,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3937326c72\n"
".quad 0x64610a3b38346625,0x7225203436732e64,0x7225202c3038326c,0x3233202c3533326c\n"
".quad 0x6f6c2e0a3b383637,0x3135313320322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3138326c,0x7225202c3038326c,0x7225202c3333346c,0x2e6c68730a3b356c\n"
".quad 0x326c722520343662,0x326c7225202c3238,0x0a3b3233202c3138,0x203436732e726873\n"
".quad 0x202c3338326c7225,0x202c3238326c7225,0x636f6c2e0a3b3233,0x2031353133203220\n"
".quad 0x36622e6c68730a31,0x3438326c72252034,0x3338326c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c353832,0x6c7225202c393332,0x6f6c2e0a3b343832\n"
".quad 0x3539313320322063,0x6c672e74730a3120,0x3233662e6c61626f,0x3538326c72255b20\n"
".quad 0x3b34356625202c5d,0x3436732e6464610a,0x2c3638326c722520,0x2c3533326c722520\n"
".quad 0x0a3b343638363320,0x33203220636f6c2e,0x616d0a3120323531,0x3436732e6f6c2e64\n"
".quad 0x2c3738326c722520,0x2c3638326c722520,0x2c3333346c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3838326c72,0x33202c3738326c72,0x732e7268730a3b32\n"
".quad 0x38326c7225203436,0x38326c7225202c39,0x2e0a3b3233202c38,0x3133203220636f6c\n"
".quad 0x6c68730a31203235,0x6c7225203436622e,0x6c7225202c303932,0x0a3b32202c393832\n"
".quad 0x203436732e646461,0x202c3139326c7225,0x202c3933326c7225,0x0a3b3039326c7225\n"
".quad 0x33203220636f6c2e,0x74730a3120363931,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d313932,0x2e6464610a3b3331,0x326c722520343673,0x326c7225202c3239\n"
".quad 0x36393034202c3533,0x20636f6c2e0a3b30,0x3120333531332032,0x2e6f6c2e64616d0a\n"
".quad 0x326c722520343673,0x326c7225202c3339,0x346c7225202c3239,0x356c7225202c3333\n"
".quad 0x36622e6c68730a3b,0x3439326c72252034,0x3339326c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3539326c,0x3233202c3439326c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203335313320,0x203436622e6c6873,0x202c3639326c7225,0x202c3539326c7225\n"
".quad 0x732e6464610a3b32,0x39326c7225203436,0x33326c7225202c37,0x39326c7225202c39\n"
".quad 0x20636f6c2e0a3b36,0x3120373931332032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3739326c7225,0x610a3b3837662520,0x25203436732e6464,0x25202c3839326c72\n"
".quad 0x34202c3533326c72,0x6c2e0a3b36353035,0x353133203220636f,0x2e64616d0a312034\n"
".quad 0x25203436732e6f6c,0x25202c3939326c72,0x25202c3839326c72,0x25202c3333346c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c303033,0x3b3233202c393932\n"
".quad 0x3436732e7268730a,0x2c3130336c722520,0x2c3030336c722520,0x6f6c2e0a3b323320\n"
".quad 0x3435313320322063,0x622e6c68730a3120,0x30336c7225203436,0x30336c7225202c32\n"
".quad 0x64610a3b32202c31,0x7225203436732e64,0x7225202c3330336c,0x7225202c3933326c\n"
".quad 0x6c2e0a3b3230336c,0x393133203220636f,0x672e74730a312038,0x33662e6c61626f6c\n"
".quad 0x30336c72255b2032,0x39386625202c5d33,0x732e6464610a3b36,0x30336c7225203436\n"
".quad 0x33326c7225202c34,0x3235313934202c35,0x3220636f6c2e0a3b,0x0a31203535313320\n"
".quad 0x732e6f6c2e64616d,0x30336c7225203436,0x30336c7225202c35,0x33346c7225202c34\n"
".quad 0x3b356c7225202c33,0x3436622e6c68730a,0x2c3630336c722520,0x2c3530336c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c373033,0x3b3233202c363033\n"
".quad 0x203220636f6c2e0a,0x730a312035353133,0x25203436622e6c68,0x25202c3830336c72\n"
".quad 0x32202c3730336c72,0x36732e6464610a3b,0x3930336c72252034,0x3933326c7225202c\n"
".quad 0x3830336c7225202c,0x3220636f6c2e0a3b,0x0a31203939313320,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3930336c72,0x64610a3b32376625,0x7225203436732e64\n"
".quad 0x7225202c3031336c,0x3335202c3533326c,0x6f6c2e0a3b383432,0x3635313320322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3131336c,0x7225202c3031336c\n"
".quad 0x7225202c3333346c,0x2e6c68730a3b356c,0x336c722520343662,0x336c7225202c3231\n"
".quad 0x0a3b3233202c3131,0x203436732e726873,0x202c3331336c7225,0x202c3231336c7225\n"
".quad 0x636f6c2e0a3b3233,0x2036353133203220,0x36622e6c68730a31,0x3431336c72252034\n"
".quad 0x3331336c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c353133\n"
".quad 0x6c7225202c393332,0x6f6c2e0a3b343133,0x3030323320322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x3531336c72255b20,0x3b34316625202c5d,0x3436732e6464610a\n"
".quad 0x2c3631336c722520,0x2c3533326c722520,0x0a3b343433373520,0x33203220636f6c2e\n"
".quad 0x616d0a3120373531,0x3436732e6f6c2e64,0x2c3731336c722520,0x2c3631336c722520\n"
".quad 0x2c3333346c722520,0x730a3b356c722520,0x25203436622e6c68,0x25202c3831336c72\n"
".quad 0x33202c3731336c72,0x732e7268730a3b32,0x31336c7225203436,0x31336c7225202c39\n"
".quad 0x2e0a3b3233202c38,0x3133203220636f6c,0x6c68730a31203735,0x6c7225203436622e\n"
".quad 0x6c7225202c303233,0x0a3b32202c393133,0x203436732e646461,0x202c3132336c7225\n"
".quad 0x202c3933326c7225,0x0a3b3032336c7225,0x33203220636f6c2e,0x74730a3120313032\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d313233,0x2e6464610a3b3031\n"
".quad 0x336c722520343673,0x326c7225202c3232,0x34343136202c3533,0x20636f6c2e0a3b30\n"
".quad 0x3120383531332032,0x2e6f6c2e64616d0a,0x336c722520343673,0x336c7225202c3332\n"
".quad 0x346c7225202c3232,0x356c7225202c3333,0x36622e6c68730a3b,0x3432336c72252034\n"
".quad 0x3332336c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3532336c\n"
".quad 0x3233202c3432336c,0x3220636f6c2e0a3b,0x0a31203835313320,0x203436622e6c6873\n"
".quad 0x202c3632336c7225,0x202c3532336c7225,0x732e6464610a3b32,0x32336c7225203436\n"
".quad 0x33326c7225202c37,0x32336c7225202c39,0x20636f6c2e0a3b36,0x3120323032332032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3732336c7225,0x610a3b3039662520\n"
".quad 0x25203436732e6464,0x25202c3832336c72,0x36202c3533326c72,0x6c2e0a3b36333535\n"
".quad 0x353133203220636f,0x2e64616d0a312039,0x25203436732e6f6c,0x25202c3932336c72\n"
".quad 0x25202c3832336c72,0x25202c3333346c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c303333,0x3b3233202c393233,0x3436732e7268730a,0x2c3133336c722520\n"
".quad 0x2c3033336c722520,0x6f6c2e0a3b323320,0x3935313320322063,0x622e6c68730a3120\n"
".quad 0x33336c7225203436,0x33336c7225202c32,0x64610a3b32202c31,0x7225203436732e64\n"
".quad 0x7225202c3333336c,0x7225202c3933326c,0x6c2e0a3b3233336c,0x303233203220636f\n"
".quad 0x672e74730a312033,0x33662e6c61626f6c,0x33336c72255b2032,0x32316625202c5d33\n"
".quad 0x36732e6464610a3b,0x3433336c72252034,0x3533326c7225202c,0x3b3233363936202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312030363133,0x36732e6f6c2e6461,0x3533336c72252034\n"
".quad 0x3433336c7225202c,0x3333346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3633336c7225,0x202c3533336c7225,0x2e7268730a3b3233,0x336c722520343673\n"
".quad 0x336c7225202c3733,0x0a3b3233202c3633,0x33203220636f6c2e,0x68730a3120303631\n"
".quad 0x7225203436622e6c,0x7225202c3833336c,0x3b32202c3733336c,0x3436732e6464610a\n"
".quad 0x2c3933336c722520,0x2c3933326c722520,0x3b3833336c722520,0x203220636f6c2e0a\n"
".quad 0x730a312034303233,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3933336c\n"
".quad 0x6464610a3b343866,0x6c7225203436732e,0x6c7225202c303433,0x373337202c353332\n"
".quad 0x636f6c2e0a3b3832,0x2031363133203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c313433,0x6c7225202c303433,0x6c7225202c333334,0x622e6c68730a3b35\n"
".quad 0x34336c7225203436,0x34336c7225202c32,0x730a3b3233202c31,0x25203436732e7268\n"
".quad 0x25202c3334336c72,0x33202c3234336c72,0x20636f6c2e0a3b32,0x3120313631332032\n"
".quad 0x3436622e6c68730a,0x2c3434336c722520,0x2c3334336c722520,0x2e6464610a3b3220\n"
".quad 0x336c722520343673,0x326c7225202c3534,0x336c7225202c3933,0x636f6c2e0a3b3434\n"
".quad 0x2035303233203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3534336c72255b\n"
".quad 0x0a3b31316625202c,0x33203220636f6c2e,0x65720a3220363432,0x363242420a0a3b74\n"
".quad 0x636f6c2e0a3a365f,0x2033353932203220,0x33732e6464610a31,0x2c37323172252032\n"
".quad 0x3b31202c33722520,0x203220636f6c2e0a,0x630a312030363932,0x33662e6e722e7476\n"
".quad 0x6625203233732e32,0x317225202c353836,0x2e6275730a3b3732,0x3836662520323366\n"
".quad 0x3538366625202c36,0x730a3b366625202c,0x25203233622e6c68,0x7225202c38323172\n"
".quad 0x6c2e0a3b36202c33,0x363932203220636f,0x2e7476630a312030,0x732e3233662e6e72\n"
".quad 0x3738366625203233,0x3b3832317225202c,0x3233662e6464610a,0x202c383836662520\n"
".quad 0x336630202c356625,0x3b30303030303046,0x3233662e6464610a,0x202c383736662520\n"
".quad 0x25202c3838366625,0x64610a3b37383666,0x6625203233662e64,0x336625202c333836\n"
".quad 0x303046336630202c,0x6f6d0a3b30303030,0x7225203233752e76,0x0a3b30202c393231\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3466257b20323366,0x35346625202c3735\n"
".quad 0x3935346625202c38,0x7d3036346625202c,0x65527865745b202c,0x7b202c4130665f66\n"
".quad 0x25202c3338366625,0x0a3b5d7d38373666,0x3220636f6c2e090a,0x0a31203036393220\n"
".quad 0x662e6e722e747663,0x25203233732e3233,0x7225202c39383666,0x662e6275730a3b33\n"
".quad 0x3039366625203233,0x25202c366625202c,0x68730a3b39383666,0x7225203233622e6c\n"
".quad 0x317225202c303331,0x2e0a3b36202c3732,0x3932203220636f6c,0x7476630a31203036\n"
".quad 0x2e3233662e6e722e,0x3936662520323373,0x3033317225202c31,0x33662e6464610a3b\n"
".quad 0x2c34383666252032,0x202c383836662520,0x0a0a3b3139366625,0x2e64322e78657409\n"
".quad 0x662e3233662e3476,0x363466257b203233,0x3436346625202c33,0x2c3536346625202c\n"
".quad 0x2c7d363634662520,0x6665527865745b20,0x257b202c4130665f,0x6625202c33383666\n"
".quad 0x0a0a3b5d7d343836,0x3233662e6c756d09,0x202c323936662520,0x25202c3039366625\n"
".quad 0x6d660a3b33363466,0x3233662e6e722e61,0x202c333936662520,0x25202c3638366625\n"
".quad 0x6625202c37353466,0x74090a0a3b323936,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x2c39363466257b20,0x202c303734662520,0x25202c3137346625,0x5b202c7d32373466\n"
".quad 0x665f666552786574,0x3666257b202c4132,0x37366625202c3338,0x0a090a0a3b5d7d38\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x373466257b203233,0x3637346625202c35\n"
".quad 0x2c3737346625202c,0x2c7d383734662520,0x6665527865745b20,0x257b202c4132665f\n"
".quad 0x6625202c33383666,0x0a0a3b5d7d343836,0x203220636f6c2e09,0x6d0a312031363932\n"
".quad 0x25203233662e6c75,0x6625202c34393666,0x346625202c303936,0x2e616d660a3b3537\n"
".quad 0x25203233662e6e72,0x6625202c35393666,0x346625202c363836,0x39366625202c3936\n"
".quad 0x786574090a0a3b34,0x662e34762e64322e,0x7b203233662e3233,0x25202c3138346625\n"
".quad 0x6625202c32383466,0x346625202c333834,0x65745b202c7d3438,0x4134665f66655278\n"
".quad 0x33383666257b202c,0x7d3837366625202c,0x74090a090a0a3b5d,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x2c37383466257b20,0x202c383834662520,0x25202c3938346625\n"
".quad 0x5b202c7d30393466,0x665f666552786574,0x3666257b202c4134,0x38366625202c3338\n"
".quad 0x2e090a0a3b5d7d34,0x3932203220636f6c,0x6c756d0a31203236,0x366625203233662e\n"
".quad 0x39366625202c3639,0x3738346625202c30,0x6e722e616d660a3b,0x366625203233662e\n"
".quad 0x38366625202c3739,0x3138346625202c36,0x3b3639366625202c,0x322e786574090a0a\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x346625202c333934,0x39346625202c3439\n"
".quad 0x3639346625202c35,0x527865745b202c7d,0x202c4139665f6665,0x202c33383666257b\n"
".quad 0x3b5d7d3837366625,0x786574090a090a0a,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x25202c3939346625,0x6625202c30303566,0x356625202c313035,0x65745b202c7d3230\n"
".quad 0x4139665f66655278,0x33383666257b202c,0x7d3438366625202c,0x6f6c2e090a0a3b5d\n"
".quad 0x3336393220322063,0x662e6c756d0a3120,0x3839366625203233,0x2c3039366625202c\n"
".quad 0x0a3b393934662520,0x662e6e722e616d66,0x3939366625203233,0x2c3638366625202c\n"
".quad 0x202c333934662520,0x0a0a3b3839366625,0x2e64322e78657409,0x662e3233662e3476\n"
".quad 0x303566257b203233,0x3630356625202c35,0x2c3730356625202c,0x2c7d383035662520\n"
".quad 0x6665527865745b20,0x7b202c413131665f,0x25202c3338366625,0x0a3b5d7d38373666\n"
".quad 0x2e786574090a090a,0x33662e34762e6432,0x257b203233662e32,0x6625202c31313566\n"
".quad 0x356625202c323135,0x31356625202c3331,0x7865745b202c7d34,0x413131665f666552\n"
".quad 0x33383666257b202c,0x7d3438366625202c,0x6f6c2e090a0a3b5d,0x3436393220322063\n"
".quad 0x662e6c756d0a3120,0x3030376625203233,0x2c3039366625202c,0x0a3b313135662520\n"
".quad 0x662e6e722e616d66,0x3130376625203233,0x2c3638366625202c,0x202c353035662520\n"
".quad 0x0a0a3b3030376625,0x2e64322e78657409,0x662e3233662e3476,0x313566257b203233\n"
".quad 0x3831356625202c37,0x2c3931356625202c,0x2c7d303235662520,0x6665527865745b20\n"
".quad 0x7b202c413331665f,0x25202c3338366625,0x0a3b5d7d38373666,0x2e786574090a090a\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x6625202c33323566,0x356625202c343235\n"
".quad 0x32356625202c3532,0x7865745b202c7d36,0x413331665f666552,0x33383666257b202c\n"
".quad 0x7d3438366625202c,0x6f6c2e090a0a3b5d,0x3536393220322063,0x662e6c756d0a3120\n"
".quad 0x3230376625203233,0x2c3039366625202c,0x0a3b333235662520,0x662e6e722e616d66\n"
".quad 0x3330376625203233,0x2c3638366625202c,0x202c373135662520,0x0a0a3b3230376625\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x323566257b203233,0x3033356625202c39\n"
".quad 0x2c3133356625202c,0x2c7d323335662520,0x6665527865745b20,0x7b202c413431665f\n"
".quad 0x25202c3338366625,0x0a3b5d7d38373666,0x2e786574090a090a,0x33662e34762e6432\n"
".quad 0x257b203233662e32,0x6625202c35333566,0x356625202c363335,0x33356625202c3733\n"
".quad 0x7865745b202c7d38,0x413431665f666552,0x33383666257b202c,0x7d3438366625202c\n"
".quad 0x6f6c2e090a0a3b5d,0x3636393220322063,0x662e6c756d0a3120,0x3430376625203233\n"
".quad 0x2c3039366625202c,0x0a3b353335662520,0x662e6e722e616d66,0x3530376625203233\n"
".quad 0x2c3638366625202c,0x202c393235662520,0x0a0a3b3430376625,0x2e64322e78657409\n"
".quad 0x662e3233662e3476,0x343566257b203233,0x3234356625202c31,0x2c3334356625202c\n"
".quad 0x2c7d343435662520,0x6665527865745b20,0x7b202c413631665f,0x25202c3338366625\n"
".quad 0x0a3b5d7d38373666,0x2e786574090a090a,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x6625202c37343566,0x356625202c383435,0x35356625202c3934,0x7865745b202c7d30\n"
".quad 0x413631665f666552,0x33383666257b202c,0x7d3438366625202c,0x6f6c2e090a0a3b5d\n"
".quad 0x3736393220322063,0x662e6c756d0a3120,0x3630376625203233,0x2c3039366625202c\n"
".quad 0x0a3b373435662520,0x662e6e722e616d66,0x3730376625203233,0x2c3638366625202c\n"
".quad 0x202c313435662520,0x0a0a3b3630376625,0x2e64322e78657409,0x662e3233662e3476\n"
".quad 0x353566257b203233,0x3435356625202c33,0x2c3535356625202c,0x2c7d363535662520\n"
".quad 0x6665527865745b20,0x7b202c413831665f,0x25202c3338366625,0x0a3b5d7d38373666\n"
".quad 0x2e786574090a090a,0x33662e34762e6432,0x257b203233662e32,0x6625202c39353566\n"
".quad 0x356625202c303635,0x36356625202c3136,0x7865745b202c7d32,0x413831665f666552\n"
".quad 0x33383666257b202c,0x7d3438366625202c,0x6f6c2e090a0a3b5d,0x3836393220322063\n"
".quad 0x662e6c756d0a3120,0x3830376625203233,0x2c3039366625202c,0x0a3b393535662520\n"
".quad 0x662e6e722e616d66,0x3930376625203233,0x2c3638366625202c,0x202c333535662520\n"
".quad 0x0a0a3b3830376625,0x2e64322e78657409,0x662e3233662e3476,0x363566257b203233\n"
".quad 0x3636356625202c35,0x2c3736356625202c,0x2c7d383635662520,0x6665527865745b20\n"
".quad 0x257b202c4131665f,0x6625202c33383666,0x0a0a3b5d7d383736,0x322e786574090a09\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x356625202c313735,0x37356625202c3237\n"
".quad 0x3437356625202c33,0x527865745b202c7d,0x202c4131665f6665,0x202c33383666257b\n"
".quad 0x3b5d7d3438366625,0x20636f6c2e090a0a,0x3120393639322032,0x3233662e6c756d0a\n"
".quad 0x202c303137662520,0x25202c3039366625,0x6d660a3b31373566,0x3233662e6e722e61\n"
".quad 0x202c313137662520,0x25202c3638366625,0x6625202c35363566,0x74090a0a3b303137\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x2c37373566257b20,0x202c383735662520\n"
".quad 0x25202c3937356625,0x5b202c7d30383566,0x665f666552786574,0x3666257b202c4133\n"
".quad 0x37366625202c3338,0x0a090a0a3b5d7d38,0x2e64322e78657409,0x662e3233662e3476\n"
".quad 0x383566257b203233,0x3438356625202c33,0x2c3538356625202c,0x2c7d363835662520\n"
".quad 0x6665527865745b20,0x257b202c4133665f,0x6625202c33383666,0x0a0a3b5d7d343836\n"
".quad 0x203220636f6c2e09,0x6d0a312030373932,0x25203233662e6c75,0x6625202c32313766\n"
".quad 0x356625202c303936,0x2e616d660a3b3338,0x25203233662e6e72,0x6625202c33313766\n"
".quad 0x356625202c363836,0x31376625202c3737,0x786574090a0a3b32,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x25202c3938356625,0x6625202c30393566,0x356625202c313935\n"
".quad 0x65745b202c7d3239,0x4135665f66655278,0x33383666257b202c,0x7d3837366625202c\n"
".quad 0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e,0x2c35393566257b20\n"
".quad 0x202c363935662520,0x25202c3739356625,0x5b202c7d38393566,0x665f666552786574\n"
".quad 0x3666257b202c4135,0x38366625202c3338,0x2e090a0a3b5d7d34,0x3932203220636f6c\n"
".quad 0x6c756d0a31203137,0x376625203233662e,0x39366625202c3431,0x3539356625202c30\n"
".quad 0x6e722e616d660a3b,0x376625203233662e,0x38366625202c3531,0x3938356625202c36\n"
".quad 0x3b3431376625202c,0x322e786574090a0a,0x3233662e34762e64,0x66257b203233662e\n"
".quad 0x366625202c313036,0x30366625202c3230,0x3430366625202c33,0x527865745b202c7d\n"
".quad 0x202c4136665f6665,0x202c33383666257b,0x3b5d7d3837366625,0x786574090a090a0a\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x25202c3730366625,0x6625202c38303666\n"
".quad 0x366625202c393036,0x65745b202c7d3031,0x4136665f66655278,0x33383666257b202c\n"
".quad 0x7d3438366625202c,0x6f6c2e090a0a3b5d,0x3237393220322063,0x662e6c756d0a3120\n"
".quad 0x3631376625203233,0x2c3039366625202c,0x0a3b373036662520,0x662e6e722e616d66\n"
".quad 0x3731376625203233,0x2c3638366625202c,0x202c313036662520,0x0a0a3b3631376625\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x313666257b203233,0x3431366625202c33\n"
".quad 0x2c3531366625202c,0x2c7d363136662520,0x6665527865745b20,0x257b202c4137665f\n"
".quad 0x6625202c33383666,0x0a0a3b5d7d383736,0x322e786574090a09,0x3233662e34762e64\n"
".quad 0x66257b203233662e,0x366625202c393136,0x32366625202c3032,0x3232366625202c31\n"
".quad 0x527865745b202c7d,0x202c4137665f6665,0x202c33383666257b,0x3b5d7d3438366625\n"
".quad 0x20636f6c2e090a0a,0x3120333739322032,0x3233662e6c756d0a,0x202c383137662520\n"
".quad 0x25202c3039366625,0x6d660a3b39313666,0x3233662e6e722e61,0x202c393137662520\n"
".quad 0x25202c3638366625,0x6625202c33313666,0x74090a0a3b383137,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x2c35323666257b20,0x202c363236662520,0x25202c3732366625\n"
".quad 0x5b202c7d38323666,0x665f666552786574,0x3666257b202c4138,0x37366625202c3338\n"
".quad 0x0a090a0a3b5d7d38,0x2e64322e78657409,0x662e3233662e3476,0x333666257b203233\n"
".quad 0x3233366625202c31,0x2c3333366625202c,0x2c7d343336662520,0x6665527865745b20\n"
".quad 0x257b202c4138665f,0x6625202c33383666,0x0a0a3b5d7d343836,0x203220636f6c2e09\n"
".quad 0x6d0a312034373932,0x25203233662e6c75,0x6625202c30323766,0x366625202c303936\n"
".quad 0x2e616d660a3b3133,0x25203233662e6e72,0x6625202c31323766,0x366625202c363836\n"
".quad 0x32376625202c3532,0x786574090a0a3b30,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x25202c3733366625,0x6625202c38333666,0x366625202c393336,0x65745b202c7d3034\n"
".quad 0x3531665f66655278,0x383666257b202c41,0x3837366625202c33,0x090a090a0a3b5d7d\n"
".quad 0x762e64322e786574,0x33662e3233662e34,0x33343666257b2032,0x2c3434366625202c\n"
".quad 0x202c353436662520,0x202c7d3634366625,0x5f6665527865745b,0x257b202c41353166\n"
".quad 0x6625202c33383666,0x0a0a3b5d7d343836,0x203220636f6c2e09,0x6d0a312035373932\n"
".quad 0x25203233662e6c75,0x6625202c32323766,0x366625202c303936,0x2e616d660a3b3334\n"
".quad 0x25203233662e6e72,0x6625202c33323766,0x366625202c363836,0x32376625202c3733\n"
".quad 0x786574090a0a3b32,0x662e34762e64322e,0x7b203233662e3233,0x25202c3934366625\n"
".quad 0x6625202c30353666,0x366625202c313536,0x65745b202c7d3235,0x3731665f66655278\n"
".quad 0x383666257b202c41,0x3837366625202c33,0x090a090a0a3b5d7d,0x762e64322e786574\n"
".quad 0x33662e3233662e34,0x35353666257b2032,0x2c3635366625202c,0x202c373536662520\n"
".quad 0x202c7d3835366625,0x5f6665527865745b,0x257b202c41373166,0x6625202c33383666\n"
".quad 0x0a0a3b5d7d343836,0x203220636f6c2e09,0x6d0a312036373932,0x25203233662e6c75\n"
".quad 0x6625202c34323766,0x366625202c303936,0x2e616d660a3b3535,0x25203233662e6e72\n"
".quad 0x6625202c35323766,0x366625202c363836,0x32376625202c3934,0x786574090a0a3b34\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x25202c3136366625,0x6625202c32363666\n"
".quad 0x366625202c333636,0x65745b202c7d3436,0x3031665f66655278,0x383666257b202c41\n"
".quad 0x3837366625202c33,0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x37363666257b2032,0x2c3836366625202c,0x202c393636662520,0x202c7d3037366625\n"
".quad 0x5f6665527865745b,0x257b202c41303166,0x6625202c33383666,0x0a0a3b5d7d343836\n"
".quad 0x203220636f6c2e09,0x6d0a312037373932,0x25203233662e6c75,0x6625202c36323766\n"
".quad 0x366625202c303936,0x2e616d660a3b3736,0x25203233662e6e72,0x6625202c37323766\n"
".quad 0x366625202c363836,0x32376625202c3136,0x786574090a0a3b36,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x25202c3337366625,0x6625202c34373666,0x366625202c353736\n"
".quad 0x65745b202c7d3637,0x3231665f66655278,0x383666257b202c41,0x3837366625202c33\n"
".quad 0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34,0x39373666257b2032\n"
".quad 0x2c3038366625202c,0x202c313836662520,0x202c7d3238366625,0x5f6665527865745b\n"
".quad 0x257b202c41323166,0x6625202c33383666,0x0a0a3b5d7d343836,0x203220636f6c2e09\n"
".quad 0x6d0a312038373932,0x25203233662e6c75,0x6625202c38323766,0x366625202c303936\n"
".quad 0x2e616d660a3b3937,0x25203233662e6e72,0x6625202c39323766,0x366625202c363836\n"
".quad 0x32376625202c3337,0x20636f6c2e0a3b38,0x3120313839322032,0x3233662e6464610a\n"
".quad 0x202c303337662520,0x25202c3339366625,0x64610a3b31313766,0x6625203233662e64\n"
".quad 0x376625202c313337,0x39366625202c3033,0x662e6464610a3b35,0x3233376625203233\n"
".quad 0x2c3133376625202c,0x0a3b333137662520,0x203233662e646461,0x25202c3333376625\n"
".quad 0x6625202c32333766,0x6464610a3b373936,0x376625203233662e,0x33376625202c3433\n"
".quad 0x3531376625202c33,0x33662e6464610a3b,0x2c35333766252032,0x202c343337662520\n"
".quad 0x610a3b3731376625,0x25203233662e6464,0x6625202c36333766,0x376625202c353337\n"
".quad 0x2e6464610a3b3931,0x3337662520323366,0x3633376625202c37,0x3b3132376625202c\n"
".quad 0x3233662e6464610a,0x202c383337662520,0x25202c3733376625,0x64610a3b39393666\n"
".quad 0x6625203233662e64,0x376625202c393337,0x32376625202c3833,0x662e6464610a3b37\n"
".quad 0x3034376625203233,0x2c3933376625202c,0x0a3b313037662520,0x203233662e646461\n"
".quad 0x25202c3134376625,0x6625202c30343766,0x6464610a3b393237,0x376625203233662e\n"
".quad 0x34376625202c3234,0x3330376625202c31,0x33662e6464610a3b,0x2c33343766252032\n"
".quad 0x202c323437662520,0x610a3b3530376625,0x25203233662e6464,0x6625202c34343766\n"
".quad 0x376625202c333437,0x2e6464610a3b3332,0x3437662520323366,0x3434376625202c35\n"
".quad 0x3b3730376625202c,0x3233662e6464610a,0x202c363437662520,0x25202c3534376625\n"
".quad 0x64610a3b35323766,0x6625203233662e64,0x376625202c373437,0x30376625202c3634\n"
".quad 0x662e6275730a3b39,0x3834376625203233,0x2c3131376625202c,0x0a3b333137662520\n"
".quad 0x203233662e646461,0x25202c3934376625,0x6625202c38343766,0x6275730a3b353137\n"
".quad 0x376625203233662e,0x34376625202c3035,0x3731376625202c39,0x33662e6275730a3b\n"
".quad 0x2c31353766252032,0x202c303537662520,0x610a3b3931376625,0x25203233662e6464\n"
".quad 0x6625202c32353766,0x376625202c313537,0x2e6464610a3b3132,0x3537662520323366\n"
".quad 0x3235376625202c33,0x3b3732376625202c,0x3233662e6275730a,0x202c343537662520\n"
".quad 0x25202c3335376625,0x64610a3b39323766,0x6625203233662e64,0x376625202c353537\n"
".quad 0x32376625202c3435,0x662e6275730a3b33,0x3635376625203233,0x2c3535376625202c\n"
".quad 0x0a3b353237662520,0x203233662e627573,0x25202c3735376625,0x6625202c35393666\n"
".quad 0x6464610a3b373936,0x376625203233662e,0x35376625202c3835,0x3531376625202c37\n"
".quad 0x33662e6464610a3b,0x2c39353766252032,0x202c383537662520,0x730a3b3731376625\n"
".quad 0x25203233662e6275,0x6625202c30363766,0x376625202c393537,0x2e6275730a3b3931\n"
".quad 0x3637662520323366,0x3036376625202c31,0x3b3132376625202c,0x3233662e6464610a\n"
".quad 0x202c323637662520,0x25202c3136376625,0x75730a3b31303766,0x6625203233662e62\n"
".quad 0x376625202c333637,0x30376625202c3236,0x662e6464610a3b33,0x3436376625203233\n"
".quad 0x2c3336376625202c,0x0a3b373037662520,0x203233662e627573,0x25202c3536376625\n"
".quad 0x6625202c34363766,0x6464610a3b393037,0x376625203233662e,0x39366625202c3636\n"
".quad 0x3732376625202c39,0x33662e6464610a3b,0x2c37363766252032,0x202c363637662520\n"
".quad 0x610a3b3130376625,0x25203233662e6464,0x6625202c38363766,0x376625202c373637\n"
".quad 0x2e6464610a3b3932,0x3637662520323366,0x3836376625202c39,0x3b3330376625202c\n"
".quad 0x3233662e6275730a,0x202c303737662520,0x25202c3936376625,0x75730a3b35303766\n"
".quad 0x6625203233662e62,0x376625202c313737,0x32376625202c3037,0x662e6275730a3b33\n"
".quad 0x3237376625203233,0x2c3137376625202c,0x0a3b373037662520,0x203233662e627573\n"
".quad 0x25202c3337376625,0x6625202c32373766,0x6275730a3b353237,0x376625203233662e\n"
".quad 0x37376625202c3437,0x3930376625202c33,0x33662e6c756d0a3b,0x2c35373766252032\n"
".quad 0x202c353637662520,0x660a3b3536376625,0x33662e6e722e616d,0x2c36373766252032\n"
".quad 0x202c363537662520,0x25202c3635376625,0x756d0a3b35373766,0x6625203233662e6c\n"
".quad 0x376625202c373737,0x37376625202c3437,0x722e616d660a3b34,0x6625203233662e6e\n"
".quad 0x376625202c383737,0x37376625202c3437,0x3637376625202c34,0x33662e6c756d0a3b\n"
".quad 0x2c39373766252032,0x202c383737662520,0x4444383146426630,0x2e616d660a3b4435\n"
".quad 0x25203233662e6e72,0x6625202c30383766,0x336630202c373437,0x2c30334330333445\n"
".quad 0x0a3b393737662520,0x203233662e6c756d,0x25202c3138376625,0x6630202c38373766\n"
".quad 0x4339433934304433,0x6e722e616d660a3b,0x376625203233662e,0x34376625202c3238\n"
".quad 0x4444336630202c37,0x25202c3533443433,0x6d660a3b31383766,0x3233662e6e722e61\n"
".quad 0x202c333837662520,0x30202c3635376625,0x4141414132453366,0x3238376625202c42\n"
".quad 0x6e722e616d660a3b,0x376625203233662e,0x36376625202c3438,0x3245336630202c35\n"
".quad 0x25202c4241414141,0x6d660a3b32383766,0x3233662e6e722e61,0x202c353837662520\n"
".quad 0x30202c3635376625,0x4141414132454266,0x3238376625202c42,0x6e722e616d660a3b\n"
".quad 0x376625203233662e,0x36376625202c3638,0x3245426630202c35,0x25202c4241414141\n"
".quad 0x756d0a3b32383766,0x6625203233662e6c,0x376625202c373837,0x44336630202c3837\n"
".quad 0x0a3b343833383930,0x662e6e722e616d66,0x3838376625203233,0x2c3734376625202c\n"
".quad 0x3032384333663020,0x376625202c303238,0x2e6464610a3b3738,0x3837662520323366\n"
".quad 0x3635376625202c39,0x3b3536376625202c,0x2e6e722e616d660a,0x3937662520323366\n"
".quad 0x3938376625202c30,0x414144336630202c,0x6625202c42414141,0x6275730a3b383837\n"
".quad 0x376625203233662e,0x35376625202c3139,0x3536376625202c36,0x6e722e616d660a3b\n"
".quad 0x376625203233662e,0x39376625202c3239,0x4144426630202c31,0x25202c4241414141\n"
".quad 0x6d660a3b38383766,0x3233662e6e722e61,0x202c333937662520,0x30202c3938376625\n"
".quad 0x4141414141444266,0x3838376625202c42,0x6e722e616d660a3b,0x376625203233662e\n"
".quad 0x39376625202c3439,0x4144336630202c31,0x25202c4241414141,0x6d660a3b38383766\n"
".quad 0x3233662e6e722e61,0x202c353937662520,0x30202c3437376625,0x4141414132453366\n"
".quad 0x3238376625202c42,0x33662e6464610a3b,0x2c36393766252032,0x202c363537662520\n"
".quad 0x660a3b3437376625,0x33662e6e722e616d,0x2c37393766252032,0x202c363937662520\n"
".quad 0x4141414144336630,0x38376625202c4241,0x662e6464610a3b38,0x3839376625203233\n"
".quad 0x2c3536376625202c,0x0a3b343737662520,0x662e6e722e616d66,0x3939376625203233\n"
".quad 0x2c3839376625202c,0x4141414433663020,0x376625202c424141,0x2e6275730a3b3838\n"
".quad 0x3038662520323366,0x3635376625202c30,0x3b3437376625202c,0x2e6e722e616d660a\n"
".quad 0x3038662520323366,0x3030386625202c31,0x414144426630202c,0x6625202c42414141\n"
".quad 0x6275730a3b383837,0x386625203233662e,0x36376625202c3230,0x3437376625202c35\n"
".quad 0x6e722e616d660a3b,0x386625203233662e,0x30386625202c3330,0x4144426630202c32\n"
".quad 0x25202c4241414141,0x6d660a3b38383766,0x3233662e6e722e61,0x202c343038662520\n"
".quad 0x30202c3437376625,0x4141414132454266,0x3238376625202c42,0x6e722e616d660a3b\n"
".quad 0x386625203233662e,0x30386625202c3530,0x4144336630202c30,0x25202c4241414141\n"
".quad 0x6d660a3b38383766,0x3233662e6e722e61,0x202c363038662520,0x30202c3230386625\n"
".quad 0x4141414141443366,0x3838376625202c42,0x6e722e616d660a3b,0x386625203233662e\n"
".quad 0x39376625202c3730,0x4144426630202c36,0x25202c4241414141,0x6d660a3b38383766\n"
".quad 0x3233662e6e722e61,0x202c383038662520,0x30202c3839376625,0x4141414141444266\n"
".quad 0x3838376625202c42,0x33662e6464610a3b,0x2c39303866252032,0x202c363537662520\n"
".quad 0x660a3b3635376625,0x33662e6e722e616d,0x2c30313866252032,0x202c353637662520\n"
".quad 0x25202c3536376625,0x656e0a3b37373766,0x6625203233662e67,0x386625202c313138\n"
".quad 0x2e616d660a3b3031,0x25203233662e6e72,0x6625202c32313866,0x376625202c393038\n"
".quad 0x31386625202c3635,0x722e616d660a3b31,0x6625203233662e6e,0x386625202c333138\n"
".quad 0x44336630202c3231,0x202c393345383336,0x6e0a3b3338376625,0x25203233662e6765\n"
".quad 0x6625202c34313866,0x616d660a3b343737,0x203233662e6e722e,0x25202c3531386625\n"
".quad 0x6625202c34313866,0x376625202c343737,0x2e6c756d0a3b3537,0x3138662520323366\n"
".quad 0x3531386625202c36,0x414144336630202c,0x6d660a3b42414141,0x3233662e6e722e61\n"
".quad 0x202c373138662520,0x30202c3231386625,0x3345383345434266,0x3631386625202c39\n"
".quad 0x33662e6464610a3b,0x2c38313866252032,0x202c343837662520,0x660a3b3731386625\n"
".quad 0x33662e6e722e616d,0x2c39313866252032,0x202c323138662520,0x4538333644336630\n"
".quad 0x38376625202c3933,0x662e6464610a3b35,0x3032386625203233,0x2c3638376625202c\n"
".quad 0x0a3b373138662520,0x662e6e722e616d66,0x3132386625203233,0x2c3231386625202c\n"
".quad 0x3833454333663020,0x386625202c393345,0x2e6c756d0a3b3631,0x3238662520323366\n"
".quad 0x3635376625202c32,0x303845336630202c,0x6d660a3b30303030,0x3233662e6e722e61\n"
".quad 0x202c333238662520,0x25202c3232386625,0x6625202c35363766,0x6464610a3b313238\n"
".quad 0x386625203233662e,0x39376625202c3432,0x3332386625202c30,0x33662e6c756d0a3b\n"
".quad 0x2c35323866252032,0x202c363537662520,0x3030303845426630,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x6625202c36323866,0x376625202c353238,0x32386625202c3536\n"
".quad 0x662e6464610a3b31,0x3732386625203233,0x2c3239376625202c,0x0a3b363238662520\n"
".quad 0x203233662e646461,0x25202c3832386625,0x6625202c33393766,0x6464610a3b333238\n"
".quad 0x386625203233662e,0x39376625202c3932,0x3632386625202c34,0x33662e6c756d0a3b\n"
".quad 0x2c30333866252032,0x202c353138662520,0x4141414144426630,0x2e616d660a3b4241\n"
".quad 0x25203233662e6e72,0x6625202c31333866,0x426630202c323138,0x2c39334538334543\n"
".quad 0x0a3b303338662520,0x203233662e646461,0x25202c3233386625,0x6625202c35393766\n"
".quad 0x616d660a3b313338,0x203233662e6e722e,0x25202c3333386625,0x6630202c32313866\n"
".quad 0x3933453833454333,0x3b3033386625202c,0x2e6e722e616d660a,0x3338662520323366\n"
".quad 0x3232386625202c34,0x2c3437376625202c,0x0a3b333338662520,0x203233662e646461\n"
".quad 0x25202c3533386625,0x6625202c37393766,0x6c756d0a3b343338,0x386625203233662e\n"
".quad 0x31386625202c3633,0x3644426630202c32,0x6d0a3b3933453833,0x25203233662e6c75\n"
".quad 0x6625202c37333866,0x336630202c353637,0x3b30303030303845,0x3233662e6c756d0a\n"
".quad 0x202c383338662520,0x25202c3733386625,0x6d660a3b34373766,0x3233662e6e722e61\n"
".quad 0x202c393338662520,0x30202c3231386625,0x3345383336444266,0x3833386625202c39\n"
".quad 0x33662e6464610a3b,0x2c30343866252032,0x202c393937662520,0x660a3b3933386625\n"
".quad 0x33662e6e722e616d,0x2c31343866252032,0x202c353238662520,0x25202c3437376625\n"
".quad 0x64610a3b33333866,0x6625203233662e64,0x386625202c323438,0x34386625202c3130\n"
".quad 0x662e67656e0a3b31,0x3334386625203233,0x3b3733386625202c,0x2e6e722e616d660a\n"
".quad 0x3438662520323366,0x3334386625202c34,0x2c3437376625202c,0x0a3b363338662520\n"
".quad 0x203233662e646461,0x25202c3534386625,0x6625202c33303866,0x6464610a3b343438\n"
".quad 0x386625203233662e,0x30386625202c3634,0x3133386625202c34,0x33662e6464610a3b\n"
".quad 0x2c37343866252032,0x202c353038662520,0x6d0a3b3134386625,0x25203233662e6c75\n"
".quad 0x6625202c38343866,0x426630202c353637,0x3b30303030303845,0x3233662e6c756d0a\n"
".quad 0x202c393438662520,0x25202c3834386625,0x6d660a3b34373766,0x3233662e6e722e61\n"
".quad 0x202c303538662520,0x30202c3231386625,0x3345383336444266,0x3934386625202c39\n"
".quad 0x33662e6464610a3b,0x2c31353866252032,0x202c363038662520,0x610a3b3035386625\n"
".quad 0x25203233662e6464,0x6625202c32353866,0x386625202c373038,0x2e6464610a3b3433\n"
".quad 0x3538662520323366,0x3830386625202c33,0x3b3933386625202c,0x3233662e766f6d0a\n"
".quad 0x202c343538662520,0x3030303846336630,0x702e646c0a3b3030,0x3233662e6d617261\n"
".quad 0x202c353938662520,0x5f524c39315a5f5b,0x4441426279685f64,0x707265746e495f43\n"
".quad 0x5f666d665f536650,0x5d345f6d61726170,0x3220636f6c2e0a3b,0x0a31203138393220\n"
".quad 0x203233662e627573,0x25202c3535386625,0x6625202c34353866,0x6c756d0a3b353938\n"
".quad 0x386625203233662e,0x35386625202c3635,0x3038376625202c35,0x6e722e616d660a3b\n"
".quad 0x386625203233662e,0x39366625202c3735,0x3539386625202c33,0x3b3635386625202c\n"
".quad 0x3233662e6c756d0a,0x202c383538662520,0x25202c3535386625,0x6d660a3b33313866\n"
".quad 0x3233662e6e722e61,0x202c393538662520,0x25202c3131376625,0x6625202c35393866\n"
".quad 0x6c756d0a3b383538,0x386625203233662e,0x35386625202c3036,0x3831386625202c35\n"
".quad 0x6e722e616d660a3b,0x386625203233662e,0x39366625202c3136,0x3539386625202c35\n"
".quad 0x3b3036386625202c,0x3233662e6c756d0a,0x202c323638662520,0x25202c3535386625\n"
".quad 0x6d660a3b39313866,0x3233662e6e722e61,0x202c333638662520,0x25202c3331376625\n"
".quad 0x6625202c35393866,0x6c756d0a3b323638,0x386625203233662e,0x35386625202c3436\n"
".quad 0x3032386625202c35,0x6e722e616d660a3b,0x386625203233662e,0x39366625202c3536\n"
".quad 0x3539386625202c37,0x3b3436386625202c,0x3233662e6c756d0a,0x202c363638662520\n"
".quad 0x25202c3535386625,0x6d660a3b34323866,0x3233662e6e722e61,0x202c373638662520\n"
".quad 0x25202c3531376625,0x6625202c35393866,0x6c756d0a3b363638,0x386625203233662e\n"
".quad 0x35386625202c3836,0x3732386625202c35,0x6e722e616d660a3b,0x386625203233662e\n"
".quad 0x31376625202c3936,0x3539386625202c37,0x3b3836386625202c,0x3233662e6c756d0a\n"
".quad 0x202c303738662520,0x25202c3535386625,0x6d660a3b38323866,0x3233662e6e722e61\n"
".quad 0x202c313738662520,0x25202c3931376625,0x6625202c35393866,0x6c756d0a3b303738\n"
".quad 0x386625203233662e,0x35386625202c3237,0x3932386625202c35,0x6e722e616d660a3b\n"
".quad 0x386625203233662e,0x32376625202c3337,0x3539386625202c31,0x3b3237386625202c\n"
".quad 0x3233662e6c756d0a,0x202c343738662520,0x25202c3535386625,0x6d660a3b32333866\n"
".quad 0x3233662e6e722e61,0x202c353738662520,0x25202c3939366625,0x6625202c35393866\n"
".quad 0x6c756d0a3b343738,0x386625203233662e,0x35386625202c3637,0x3533386625202c35\n"
".quad 0x6e722e616d660a3b,0x386625203233662e,0x32376625202c3737,0x3539386625202c37\n"
".quad 0x3b3637386625202c,0x3233662e6c756d0a,0x202c383738662520,0x25202c3535386625\n"
".quad 0x6d660a3b30343866,0x3233662e6e722e61,0x202c393738662520,0x25202c3130376625\n"
".quad 0x6625202c35393866,0x6c756d0a3b383738,0x386625203233662e,0x35386625202c3038\n"
".quad 0x3234386625202c35,0x6e722e616d660a3b,0x386625203233662e,0x32376625202c3138\n"
".quad 0x3539386625202c39,0x3b3038386625202c,0x3233662e6c756d0a,0x202c323838662520\n"
".quad 0x25202c3535386625,0x6d660a3b35343866,0x3233662e6e722e61,0x202c333838662520\n"
".quad 0x25202c3330376625,0x6625202c35393866,0x6c756d0a3b323838,0x386625203233662e\n"
".quad 0x35386625202c3438,0x3634386625202c35,0x6e722e616d660a3b,0x386625203233662e\n"
".quad 0x30376625202c3538,0x3539386625202c35,0x3b3438386625202c,0x3233662e6c756d0a\n"
".quad 0x202c363838662520,0x25202c3535386625,0x6d660a3b37343866,0x3233662e6e722e61\n"
".quad 0x202c373838662520,0x25202c3332376625,0x6625202c35393866,0x6c756d0a3b363838\n"
".quad 0x386625203233662e,0x35386625202c3838,0x3135386625202c35,0x6e722e616d660a3b\n"
".quad 0x386625203233662e,0x30376625202c3938,0x3539386625202c37,0x3b3838386625202c\n"
".quad 0x3233662e6c756d0a,0x202c303938662520,0x25202c3535386625,0x6d660a3b32353866\n"
".quad 0x3233662e6e722e61,0x202c313938662520,0x25202c3532376625,0x6625202c35393866\n"
".quad 0x6c756d0a3b303938,0x386625203233662e,0x35386625202c3239,0x3335386625202c35\n"
".quad 0x6e722e616d660a3b,0x386625203233662e,0x30376625202c3339,0x3539386625202c39\n"
".quad 0x3b3239386625202c,0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3233346c\n"
".quad 0x5f645f524c39315a,0x5f43444142627968,0x6650707265746e49,0x61705f666d665f53\n"
".quad 0x0a3b5d335f6d6172,0x32203220636f6c2e,0x616d0a3120343539,0x3436732e6f6c2e64\n"
".quad 0x2c3035336c722520,0x202c35316c722520,0x202c3233346c7225,0x646c0a3b356c7225\n"
".quad 0x752e6d617261702e,0x32346c7225203436,0x39315a5f5b202c39,0x6279685f645f524c\n"
".quad 0x746e495f43444142,0x665f536650707265,0x6d617261705f666d,0x7476630a3b5d315f\n"
".quad 0x6f6c672e6f742e61,0x203436752e6c6162,0x202c3135336c7225,0x0a3b3932346c7225\n"
".quad 0x203436622e6c6873,0x202c3235336c7225,0x202c3035336c7225,0x2e7268730a3b3233\n"
".quad 0x336c722520343673,0x336c7225202c3335,0x0a3b3233202c3235,0x33203220636f6c2e\n"
".quad 0x68730a3120333431,0x7225203436622e6c,0x7225202c3435336c,0x3b32202c3335336c\n"
".quad 0x3436732e6464610a,0x2c3535336c722520,0x2c3135336c722520,0x3b3435336c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3535336c7225,0x0a3b373538662520\n"
".quad 0x203436732e646461,0x202c3635336c7225,0x34202c35316c7225,0x6f6c2e0a3b363930\n"
".quad 0x3434313320322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3735336c\n"
".quad 0x7225202c3635336c,0x7225202c3233346c,0x2e6c68730a3b356c,0x336c722520343662\n"
".quad 0x336c7225202c3835,0x0a3b3233202c3735,0x203436732e726873,0x202c3935336c7225\n"
".quad 0x202c3835336c7225,0x636f6c2e0a3b3233,0x2034343133203220,0x36622e6c68730a31\n"
".quad 0x3036336c72252034,0x3935336c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c313633,0x6c7225202c313533,0x2e74730a3b303633,0x662e6c61626f6c67\n"
".quad 0x336c72255b203233,0x386625202c5d3136,0x2e6464610a3b3935,0x336c722520343673\n"
".quad 0x316c7225202c3236,0x3b32393138202c35,0x203220636f6c2e0a,0x6d0a312035343133\n"
".quad 0x36732e6f6c2e6461,0x3336336c72252034,0x3236336c7225202c,0x3233346c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3436336c7225,0x202c3336336c7225\n"
".quad 0x2e7268730a3b3233,0x336c722520343673,0x336c7225202c3536,0x0a3b3233202c3436\n"
".quad 0x33203220636f6c2e,0x68730a3120353431,0x7225203436622e6c,0x7225202c3636336c\n"
".quad 0x3b32202c3536336c,0x3436732e6464610a,0x2c3736336c722520,0x2c3135336c722520\n"
".quad 0x3b3636336c722520,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3736336c7225\n"
".quad 0x0a3b313638662520,0x203436732e646461,0x202c3836336c7225,0x31202c35316c7225\n"
".quad 0x6c2e0a3b38383232,0x343133203220636f,0x2e64616d0a312036,0x25203436732e6f6c\n"
".quad 0x25202c3936336c72,0x25202c3836336c72,0x25202c3233346c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c303733,0x3b3233202c393633,0x3436732e7268730a\n"
".quad 0x2c3137336c722520,0x2c3037336c722520,0x6f6c2e0a3b323320,0x3634313320322063\n"
".quad 0x622e6c68730a3120,0x37336c7225203436,0x37336c7225202c32,0x64610a3b32202c31\n"
".quad 0x7225203436732e64,0x7225202c3337336c,0x7225202c3135336c,0x74730a3b3237336c\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d333733,0x6464610a3b333638\n"
".quad 0x6c7225203436732e,0x6c7225202c343733,0x38333631202c3531,0x20636f6c2e0a3b34\n"
".quad 0x3120373431332032,0x2e6f6c2e64616d0a,0x336c722520343673,0x336c7225202c3537\n"
".quad 0x346c7225202c3437,0x356c7225202c3233,0x36622e6c68730a3b,0x3637336c72252034\n"
".quad 0x3537336c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3737336c\n"
".quad 0x3233202c3637336c,0x3220636f6c2e0a3b,0x0a31203734313320,0x203436622e6c6873\n"
".quad 0x202c3837336c7225,0x202c3737336c7225,0x732e6464610a3b32,0x37336c7225203436\n"
".quad 0x35336c7225202c39,0x37336c7225202c31,0x6c672e74730a3b38,0x3233662e6c61626f\n"
".quad 0x3937336c72255b20,0x3536386625202c5d,0x36732e6464610a3b,0x3038336c72252034\n"
".quad 0x2c35316c7225202c,0x0a3b303834303220,0x33203220636f6c2e,0x616d0a3120383431\n"
".quad 0x3436732e6f6c2e64,0x2c3138336c722520,0x2c3038336c722520,0x2c3233346c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3238336c72,0x33202c3138336c72\n"
".quad 0x732e7268730a3b32,0x38336c7225203436,0x38336c7225202c33,0x2e0a3b3233202c32\n"
".quad 0x3133203220636f6c,0x6c68730a31203834,0x6c7225203436622e,0x6c7225202c343833\n"
".quad 0x0a3b32202c333833,0x203436732e646461,0x202c3538336c7225,0x202c3135336c7225\n"
".quad 0x0a3b3438336c7225,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3538336c72\n"
".quad 0x610a3b3736386625,0x25203436732e6464,0x25202c3638336c72,0x3432202c35316c72\n"
".quad 0x6f6c2e0a3b363735,0x3934313320322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3738336c,0x7225202c3638336c,0x7225202c3233346c,0x2e6c68730a3b356c\n"
".quad 0x336c722520343662,0x336c7225202c3838,0x0a3b3233202c3738,0x203436732e726873\n"
".quad 0x202c3938336c7225,0x202c3838336c7225,0x636f6c2e0a3b3233,0x2039343133203220\n"
".quad 0x36622e6c68730a31,0x3039336c72252034,0x3938336c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c313933,0x6c7225202c313533,0x2e74730a3b303933\n"
".quad 0x662e6c61626f6c67,0x336c72255b203233,0x386625202c5d3139,0x2e6464610a3b3936\n"
".quad 0x336c722520343673,0x316c7225202c3239,0x3237363832202c35,0x3220636f6c2e0a3b\n"
".quad 0x0a31203035313320,0x732e6f6c2e64616d,0x39336c7225203436,0x39336c7225202c33\n"
".quad 0x33346c7225202c32,0x3b356c7225202c32,0x3436622e6c68730a,0x2c3439336c722520\n"
".quad 0x2c3339336c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c353933\n"
".quad 0x3b3233202c343933,0x203220636f6c2e0a,0x730a312030353133,0x25203436622e6c68\n"
".quad 0x25202c3639336c72,0x32202c3539336c72,0x36732e6464610a3b,0x3739336c72252034\n"
".quad 0x3135336c7225202c,0x3639336c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x5d3739336c72255b,0x3b3137386625202c,0x3436732e6464610a,0x2c3839336c722520\n"
".quad 0x202c35316c722520,0x2e0a3b3836373233,0x3133203220636f6c,0x64616d0a31203135\n"
".quad 0x203436732e6f6c2e,0x202c3939336c7225,0x202c3839336c7225,0x202c3233346c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3030346c,0x3233202c3939336c\n"
".quad 0x36732e7268730a3b,0x3130346c72252034,0x3030346c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x353133203220636f,0x2e6c68730a312031,0x346c722520343662,0x346c7225202c3230\n"
".quad 0x610a3b32202c3130,0x25203436732e6464,0x25202c3330346c72,0x25202c3135336c72\n"
".quad 0x730a3b3230346c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3330346c\n"
".quad 0x64610a3b33373866,0x7225203436732e64,0x7225202c3430346c,0x383633202c35316c\n"
".quad 0x636f6c2e0a3b3436,0x2032353133203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c353034,0x6c7225202c343034,0x6c7225202c323334,0x622e6c68730a3b35\n"
".quad 0x30346c7225203436,0x30346c7225202c36,0x730a3b3233202c35,0x25203436732e7268\n"
".quad 0x25202c3730346c72,0x33202c3630346c72,0x20636f6c2e0a3b32,0x3120323531332032\n"
".quad 0x3436622e6c68730a,0x2c3830346c722520,0x2c3730346c722520,0x2e6464610a3b3220\n"
".quad 0x346c722520343673,0x336c7225202c3930,0x346c7225202c3135,0x672e74730a3b3830\n"
".quad 0x33662e6c61626f6c,0x30346c72255b2032,0x37386625202c5d39,0x732e6464610a3b35\n"
".quad 0x31346c7225203436,0x35316c7225202c30,0x3b3036393034202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312033353133,0x36732e6f6c2e6461,0x3131346c72252034,0x3031346c7225202c\n"
".quad 0x3233346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3231346c7225\n"
".quad 0x202c3131346c7225,0x2e7268730a3b3233,0x346c722520343673,0x346c7225202c3331\n"
".quad 0x0a3b3233202c3231,0x33203220636f6c2e,0x68730a3120333531,0x7225203436622e6c\n"
".quad 0x7225202c3431346c,0x3b32202c3331346c,0x3436732e6464610a,0x2c3531346c722520\n"
".quad 0x2c3135336c722520,0x3b3431346c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3531346c7225,0x0a3b373738662520,0x203436732e646461,0x202c3631346c7225\n"
".quad 0x34202c35316c7225,0x6c2e0a3b36353035,0x353133203220636f,0x2e64616d0a312034\n"
".quad 0x25203436732e6f6c,0x25202c3731346c72,0x25202c3631346c72,0x25202c3233346c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c383134,0x3b3233202c373134\n"
".quad 0x3436732e7268730a,0x2c3931346c722520,0x2c3831346c722520,0x6f6c2e0a3b323320\n"
".quad 0x3435313320322063,0x622e6c68730a3120,0x32346c7225203436,0x31346c7225202c30\n"
".quad 0x64610a3b32202c39,0x7225203436732e64,0x7225202c3132346c,0x7225202c3135336c\n"
".quad 0x74730a3b3032346c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d313234\n"
".quad 0x6464610a3b393738,0x6c7225203436732e,0x6c7225202c323234,0x35313934202c3531\n"
".quad 0x20636f6c2e0a3b32,0x3120353531332032,0x2e6f6c2e64616d0a,0x346c722520343673\n"
".quad 0x346c7225202c3332,0x346c7225202c3232,0x356c7225202c3233,0x36622e6c68730a3b\n"
".quad 0x3432346c72252034,0x3332346c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3532346c,0x3233202c3432346c,0x3220636f6c2e0a3b,0x0a31203535313320\n"
".quad 0x203436622e6c6873,0x202c3632346c7225,0x202c3532346c7225,0x732e6464610a3b32\n"
".quad 0x32346c7225203436,0x35336c7225202c37,0x32346c7225202c31,0x6c672e74730a3b36\n"
".quad 0x3233662e6c61626f,0x3732346c72255b20,0x3138386625202c5d,0x3220636f6c2e0a3b\n"
".quad 0x0a31203635313320,0x61626f6c672e7473,0x255b203233662e6c,0x6625202c5d396c72\n"
".quad 0x6f6c2e0a3b333838,0x3735313320322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x5d30316c72255b20,0x3b3538386625202c,0x203220636f6c2e0a,0x730a312038353133\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d31316c,0x6f6c2e0a3b373838\n"
".quad 0x3935313320322063,0x6c672e74730a3120,0x3233662e6c61626f,0x5d32316c72255b20\n"
".quad 0x3b3938386625202c,0x203220636f6c2e0a,0x730a312030363133,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x6625202c5d33316c,0x6f6c2e0a3b313938,0x3136313320322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x5d34316c72255b20,0x3b3339386625202c\n"
".quad 0x203220636f6c2e0a,0x720a322036343233,0x2e0a0a7d0a3b7465,0x5a5f207972746e65\n"
".quad 0x42415f645f524c39,0x6d665f5366504443,0x6d617261702e0a28,0x5a5f203436752e20\n"
".quad 0x42415f645f524c39,0x6d665f5366504443,0x305f6d617261705f,0x6d617261702e0a2c\n"
".quad 0x5a5f203436752e20,0x42415f645f524c39,0x6d665f5366504443,0x315f6d617261705f\n"
".quad 0x6d617261702e0a2c,0x5a5f203233662e20,0x42415f645f524c39,0x6d665f5366504443\n"
".quad 0x325f6d617261705f,0x6d617261702e0a2c,0x5a5f203436752e20,0x42415f645f524c39\n"
".quad 0x6d665f5366504443,0x335f6d617261705f,0x65722e0a7b0a290a,0x25203233662e2067\n"
".quad 0x0a3b3e3538333c66,0x72702e206765722e,0x33313c7025206465,0x206765722e0a3b3e\n"
".quad 0x3c7225203233732e,0x722e0a3b3e383131,0x203436732e206765,0x3e3338333c6c7225\n"
".quad 0x702e646c0a0a0a3b,0x3436752e6d617261,0x5b202c316c722520,0x5f645f524c395a5f\n"
".quad 0x5f53665044434241,0x6d617261705f6d66,0x2e646c0a3b5d305f,0x36752e6d61726170\n"
".quad 0x202c336c72252034,0x645f524c395a5f5b,0x536650444342415f,0x617261705f6d665f\n"
".quad 0x76630a3b5d335f6d,0x6c672e6f742e6174,0x3436752e6c61626f,0x25202c346c722520\n"
".quad 0x6f6c2e0a3b316c72,0x3135323320322063,0x752e766f6d0a3120,0x202c367225203233\n"
".quad 0x3b782e6469746e25,0x3233752e766f6d0a,0x6325202c37722520,0x0a3b782e64696174\n"
".quad 0x203233752e766f6d,0x697425202c387225,0x64616d0a3b782e64,0x203233732e6f6c2e\n"
".quad 0x367225202c317225,0x25202c377225202c,0x636f6c2e0a3b3872,0x2032353233203220\n"
".quad 0x33752e766f6d0a31,0x25202c3972252032,0x0a3b792e6469746e,0x203233752e766f6d\n"
".quad 0x6325202c30317225,0x0a3b792e64696174,0x203233752e766f6d,0x7425202c31317225\n"
".quad 0x616d0a3b792e6469,0x3233732e6f6c2e64,0x7225202c32722520,0x2c30317225202c39\n"
".quad 0x2e0a3b3131722520,0x3233203220636f6c,0x766f6d0a31203335,0x317225203233752e\n"
".quad 0x6469746e25202c32,0x2e766f6d0a3b7a2e,0x3331722520323375,0x646961746325202c\n"
".quad 0x2e766f6d0a3b7a2e,0x3431722520323375,0x7a2e64697425202c,0x6f6c2e64616d0a3b\n"
".quad 0x337225203233732e,0x202c32317225202c,0x7225202c33317225,0x636f6c2e0a3b3431\n"
".quad 0x2034353233203220,0x6e722e7476630a31,0x3233732e3233662e,0x25202c3132662520\n"
".quad 0x2e616d660a3b3172,0x25203233662e6e72,0x326625202c323266,0x3046336630202c31\n"
".quad 0x30202c3030303030,0x3030304337313466,0x20636f6c2e0a3b30,0x3120353532332032\n"
".quad 0x2e6e722e7476630a,0x203233732e323366,0x7225202c33326625,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x33326625202c3432,0x303046336630202c,0x6630202c30303030\n"
".quad 0x3030303043373134,0x3220636f6c2e0a3b,0x0a31203635323320,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x337225202c353266,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x2c35326625202c36,0x3030304633663020,0x346630202c303030,0x3b30303030433731\n"
".quad 0x3436752e7476630a,0x6c7225203233752e,0x0a3b317225202c35,0x33203220636f6c2e\n"
".quad 0x76630a3120373532,0x33732e3436732e74,0x202c366c72252032,0x6c68730a3b327225\n"
".quad 0x347225203233622e,0x36202c337225202c,0x3220636f6c2e0a3b,0x0a31203735323320\n"
".quad 0x2e3436732e747663,0x376c722520323373,0x610a3b347225202c,0x25203436732e6464\n"
".quad 0x7225202c31316c72,0x366c7225202c376c,0x3220636f6c2e0a3b,0x0a31203735323320\n"
".quad 0x732e6f6c2e64616d,0x2c386c7225203436,0x202c31316c722520,0x7225202c336c7225\n"
".quad 0x2e6464610a3b356c,0x3732662520323366,0x202c32326625202c,0x3030453732436630\n"
".quad 0x2e6464610a3b3030,0x3832662520323366,0x202c34326625202c,0x3030434631436630\n"
".quad 0x636f6c2e0a3b3030,0x0a31203037203220,0x203233662e6c756d,0x6625202c39326625\n"
".quad 0x38326625202c3832,0x6e722e616d660a3b,0x336625203233662e,0x2c37326625202c30\n"
".quad 0x25202c3732662520,0x6464610a3b393266,0x336625203233662e,0x2c36326625202c31\n"
".quad 0x3043463143663020,0x6f6c2e0a3b303030,0x3120303720322063,0x2e6e722e616d660a\n"
".quad 0x3233662520323366,0x202c31336625202c,0x6625202c31336625,0x707465730a3b3033\n"
".quad 0x203233662e746c2e,0x336625202c317025,0x3831346630202c32,0x610a3b3030303030\n"
".quad 0x25203233732e6464,0x2c317225202c3572,0x7465730a3b312d20,0x3233752e74672e70\n"
".quad 0x7225202c32702520,0x2e0a3b3136202c35,0x3233203220636f6c,0x7465730a31203736\n"
".quad 0x3233732e746c2e70,0x7225202c33702520,0x726f0a3b31202c32,0x702520646572702e\n"
".quad 0x202c327025202c34,0x6f6c2e0a3b337025,0x3736323320322063,0x2e707465730a3120\n"
".quad 0x25203233732e7467,0x2c327225202c3570,0x2e726f0a3b323620,0x3670252064657270\n"
".quad 0x25202c347025202c,0x636f6c2e0a3b3570,0x2037363233203220,0x6c2e707465730a31\n"
".quad 0x7025203233732e74,0x202c337225202c37,0x72702e726f0a3b31,0x202c387025206465\n"
".quad 0x377025202c367025,0x3220636f6c2e0a3b,0x0a31203736323320,0x2e74672e70746573\n"
".quad 0x2c39702520323373,0x3236202c33722520,0x6572702e726f0a3b,0x202c303170252064\n"
".quad 0x397025202c387025,0x3220636f6c2e0a3b,0x0a31203736323320,0x7262203031702540\n"
".quad 0x375f373242422061,0x622e6c68730a0a3b,0x32316c7225203436,0x202c386c7225202c\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x32316c7225202c33,0x6c2e0a3b3233202c\n"
".quad 0x373233203220636f,0x2e6c68730a312032,0x316c722520343662,0x33316c7225202c34\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x346c7225202c3531,0x3b34316c7225202c\n"
".quad 0x626f6c672e646c0a,0x25203233662e6c61,0x6c72255b202c3266,0x6464610a3b5d3531\n"
".quad 0x6c7225203436732e,0x366c7225202c3631,0x0a3b376c7225202c,0x203436732e646461\n"
".quad 0x25202c37316c7225,0x3034202c36316c72,0x2e7476630a3b3639,0x203233752e343675\n"
".quad 0x25202c38316c7225,0x702e646c0a3b3572,0x3436752e6d617261,0x2c3138336c722520\n"
".quad 0x5f524c395a5f5b20,0x6650444342415f64,0x7261705f6d665f53,0x2e0a3b5d335f6d61\n"
".quad 0x3233203220636f6c,0x64616d0a31203337,0x203436732e6f6c2e,0x25202c39316c7225\n"
".quad 0x7225202c37316c72,0x7225202c3138336c,0x6c68730a3b38316c,0x6c7225203436622e\n"
".quad 0x316c7225202c3032,0x730a3b3233202c39,0x25203436732e7268,0x7225202c31326c72\n"
".quad 0x3b3233202c30326c,0x203220636f6c2e0a,0x730a312033373233,0x25203436622e6c68\n"
".quad 0x7225202c32326c72,0x0a3b32202c31326c,0x203436732e646461,0x25202c33326c7225\n"
".quad 0x6c7225202c346c72,0x672e646c0a3b3232,0x33662e6c61626f6c,0x5b202c3366252032\n"
".quad 0x0a3b5d33326c7225,0x33203220636f6c2e,0x64610a3120343732,0x7225203233732e64\n"
".quad 0x2c317225202c3731,0x2e7476630a3b3120,0x203233752e343675,0x25202c34326c7225\n"
".quad 0x6464610a3b373172,0x6c7225203436732e,0x316c7225202c3532,0x3838323231202c36\n"
".quad 0x3220636f6c2e0a3b,0x0a31203437323320,0x732e6f6c2e64616d,0x36326c7225203436\n"
".quad 0x2c35326c7225202c,0x2c3138336c722520,0x0a3b34326c722520,0x203436622e6c6873\n"
".quad 0x25202c37326c7225,0x3233202c36326c72,0x36732e7268730a3b,0x2c38326c72252034\n"
".quad 0x202c37326c722520,0x636f6c2e0a3b3233,0x2034373233203220,0x36622e6c68730a31\n"
".quad 0x2c39326c72252034,0x202c38326c722520,0x732e6464610a3b32,0x30336c7225203436\n"
".quad 0x202c346c7225202c,0x6c0a3b39326c7225,0x6c61626f6c672e64,0x346625203233662e\n"
".quad 0x30336c72255b202c,0x732e6464610a3b5d,0x2c39317225203233,0x312d202c32722520\n"
".quad 0x3220636f6c2e0a3b,0x0a31203537323320,0x2e3436732e747663,0x336c722520323373\n"
".quad 0x3b39317225202c31,0x3436732e6464610a,0x202c32336c722520,0x25202c31336c7225\n"
".quad 0x6464610a3b376c72,0x6c7225203436732e,0x336c7225202c3333,0x3b32393138202c32\n"
".quad 0x203220636f6c2e0a,0x6d0a312035373233,0x36732e6f6c2e6461,0x2c34336c72252034\n"
".quad 0x202c33336c722520,0x202c3138336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x6c7225202c35336c,0x0a3b3233202c3433,0x203436732e726873,0x25202c36336c7225\n"
".quad 0x3233202c35336c72,0x3220636f6c2e0a3b,0x0a31203537323320,0x203436622e6c6873\n"
".quad 0x25202c37336c7225,0x3b32202c36336c72,0x3436732e6464610a,0x202c38336c722520\n"
".quad 0x7225202c346c7225,0x2e646c0a3b37336c,0x662e6c61626f6c67,0x202c356625203233\n"
".quad 0x3b5d38336c72255b,0x3436732e6464610a,0x202c39336c722520,0x32202c32336c7225\n"
".quad 0x6c2e0a3b30383430,0x373233203220636f,0x2e64616d0a312036,0x25203436732e6f6c\n"
".quad 0x7225202c30346c72,0x6c7225202c39336c,0x6c7225202c313833,0x2e6c68730a3b3831\n"
".quad 0x346c722520343662,0x30346c7225202c31,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c32346c,0x0a3b3233202c3134,0x33203220636f6c2e,0x68730a3120363732\n"
".quad 0x7225203436622e6c,0x6c7225202c33346c,0x610a3b32202c3234,0x25203436732e6464\n"
".quad 0x7225202c34346c72,0x346c7225202c346c,0x6c672e646c0a3b33,0x3233662e6c61626f\n"
".quad 0x255b202c36662520,0x610a3b5d34346c72,0x25203436732e6464,0x7225202c35346c72\n"
".quad 0x353432202c32336c,0x636f6c2e0a3b3637,0x2037373233203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x346c7225202c3634,0x38336c7225202c35,0x34326c7225202c31\n"
".quad 0x36622e6c68730a3b,0x2c37346c72252034,0x202c36346c722520,0x2e7268730a3b3233\n"
".quad 0x346c722520343673,0x37346c7225202c38,0x6c2e0a3b3233202c,0x373233203220636f\n"
".quad 0x2e6c68730a312037,0x346c722520343662,0x38346c7225202c39,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x346c7225202c3035,0x3b39346c7225202c,0x626f6c672e646c0a\n"
".quad 0x25203233662e6c61,0x6c72255b202c3766,0x6f6c2e0a3b5d3035,0x3837323320322063\n"
".quad 0x732e6464610a3120,0x2c33327225203233,0x3b31202c32722520,0x3436732e7476630a\n"
".quad 0x6c7225203233732e,0x33327225202c3135,0x36732e6464610a3b,0x2c32356c72252034\n"
".quad 0x202c31356c722520,0x64610a3b376c7225,0x7225203436732e64,0x6c7225202c33356c\n"
".quad 0x38333631202c3235,0x20636f6c2e0a3b34,0x3120383732332032,0x2e6f6c2e64616d0a\n"
".quad 0x356c722520343673,0x33356c7225202c34,0x3138336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x25202c35356c7225,0x3233202c34356c72,0x36732e7268730a3b\n"
".quad 0x2c36356c72252034,0x202c35356c722520,0x636f6c2e0a3b3233,0x2038373233203220\n"
".quad 0x36622e6c68730a31,0x2c37356c72252034,0x202c36356c722520,0x732e6464610a3b32\n"
".quad 0x38356c7225203436,0x202c346c7225202c,0x6c0a3b37356c7225,0x6c61626f6c672e64\n"
".quad 0x386625203233662e,0x38356c72255b202c,0x732e6464610a3b5d,0x39356c7225203436\n"
".quad 0x2c32356c7225202c,0x0a3b323736383220,0x33203220636f6c2e,0x616d0a3120393732\n"
".quad 0x3436732e6f6c2e64,0x202c30366c722520,0x25202c39356c7225,0x25202c3138336c72\n"
".quad 0x68730a3b34326c72,0x7225203436622e6c,0x6c7225202c31366c,0x0a3b3233202c3036\n"
".quad 0x203436732e726873,0x25202c32366c7225,0x3233202c31366c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203937323320,0x203436622e6c6873,0x25202c33366c7225,0x3b32202c32366c72\n"
".quad 0x3436732e6464610a,0x202c34366c722520,0x7225202c346c7225,0x2e646c0a3b33366c\n"
".quad 0x662e6c61626f6c67,0x202c396625203233,0x3b5d34366c72255b,0x3436732e6464610a\n"
".quad 0x202c35366c722520,0x33202c32356c7225,0x6c2e0a3b38363732,0x383233203220636f\n"
".quad 0x2e64616d0a312030,0x25203436732e6f6c,0x7225202c36366c72,0x6c7225202c35366c\n"
".quad 0x6c7225202c313833,0x2e6c68730a3b3831,0x366c722520343662,0x36366c7225202c37\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c38366c,0x0a3b3233202c3736\n"
".quad 0x33203220636f6c2e,0x68730a3120303832,0x7225203436622e6c,0x6c7225202c39366c\n"
".quad 0x610a3b32202c3836,0x25203436732e6464,0x7225202c30376c72,0x366c7225202c346c\n"
".quad 0x6c672e646c0a3b39,0x3233662e6c61626f,0x5b202c3031662520,0x0a3b5d30376c7225\n"
".quad 0x203233732e646461,0x7225202c37327225,0x0a3b34362d202c34,0x33203220636f6c2e\n"
".quad 0x76630a3120313832,0x33732e3436732e74,0x2c31376c72252032,0x610a3b3732722520\n"
".quad 0x25203436732e6464,0x7225202c32376c72,0x376c7225202c366c,0x732e6464610a3b31\n"
".quad 0x33376c7225203436,0x2c32376c7225202c,0x0a3b343638363320,0x33203220636f6c2e\n"
".quad 0x616d0a3120313832,0x3436732e6f6c2e64,0x202c34376c722520,0x25202c33376c7225\n"
".quad 0x25202c3138336c72,0x6c68730a3b356c72,0x6c7225203436622e,0x376c7225202c3537\n"
".quad 0x730a3b3233202c34,0x25203436732e7268,0x7225202c36376c72,0x3b3233202c35376c\n"
".quad 0x203220636f6c2e0a,0x730a312031383233,0x25203436622e6c68,0x7225202c37376c72\n"
".quad 0x0a3b32202c36376c,0x203436732e646461,0x25202c38376c7225,0x6c7225202c346c72\n"
".quad 0x672e646c0a3b3737,0x33662e6c61626f6c,0x202c313166252032,0x3b5d38376c72255b\n"
".quad 0x3436732e6464610a,0x202c39376c722520,0x34202c32376c7225,0x6c2e0a3b30363930\n"
".quad 0x383233203220636f,0x2e64616d0a312032,0x25203436732e6f6c,0x7225202c30386c72\n"
".quad 0x6c7225202c39376c,0x6c7225202c313833,0x2e6c68730a3b3831,0x386c722520343662\n"
".quad 0x30386c7225202c31,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c32386c\n"
".quad 0x0a3b3233202c3138,0x33203220636f6c2e,0x68730a3120323832,0x7225203436622e6c\n"
".quad 0x6c7225202c33386c,0x610a3b32202c3238,0x25203436732e6464,0x7225202c34386c72\n"
".quad 0x386c7225202c346c,0x6c672e646c0a3b33,0x3233662e6c61626f,0x5b202c3231662520\n"
".quad 0x0a3b5d34386c7225,0x203436732e646461,0x25202c35386c7225,0x7225202c31336c72\n"
".quad 0x6464610a3b31376c,0x6c7225203436732e,0x386c7225202c3638,0x3635303534202c35\n"
".quad 0x3220636f6c2e0a3b,0x0a31203338323320,0x732e6f6c2e64616d,0x37386c7225203436\n"
".quad 0x2c36386c7225202c,0x2c3138336c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x7225202c38386c72,0x3b3233202c37386c,0x3436732e7268730a,0x202c39386c722520\n"
".quad 0x33202c38386c7225,0x20636f6c2e0a3b32,0x3120333832332032,0x3436622e6c68730a\n"
".quad 0x202c30396c722520,0x32202c39386c7225,0x36732e6464610a3b,0x2c31396c72252034\n"
".quad 0x25202c346c722520,0x646c0a3b30396c72,0x2e6c61626f6c672e,0x3331662520323366\n"
".quad 0x31396c72255b202c,0x732e6464610a3b5d,0x32396c7225203436,0x2c32376c7225202c\n"
".quad 0x0a3b323531393420,0x33203220636f6c2e,0x616d0a3120343832,0x3436732e6f6c2e64\n"
".quad 0x202c33396c722520,0x25202c32396c7225,0x25202c3138336c72,0x68730a3b34326c72\n"
".quad 0x7225203436622e6c,0x6c7225202c34396c,0x0a3b3233202c3339,0x203436732e726873\n"
".quad 0x25202c35396c7225,0x3233202c34396c72,0x3220636f6c2e0a3b,0x0a31203438323320\n"
".quad 0x203436622e6c6873,0x25202c36396c7225,0x3b32202c35396c72,0x3436732e6464610a\n"
".quad 0x202c37396c722520,0x7225202c346c7225,0x2e646c0a3b36396c,0x662e6c61626f6c67\n"
".quad 0x2c34316625203233,0x5d37396c72255b20,0x36732e6464610a3b,0x2c38396c72252034\n"
".quad 0x202c31356c722520,0x610a3b31376c7225,0x25203436732e6464,0x7225202c39396c72\n"
".quad 0x323335202c38396c,0x636f6c2e0a3b3834,0x2035383233203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c303031,0x336c7225202c3939,0x356c7225202c3138\n"
".quad 0x36622e6c68730a3b,0x3130316c72252034,0x3030316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3230316c,0x3233202c3130316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203538323320,0x203436622e6c6873,0x202c3330316c7225,0x202c3230316c7225\n"
".quad 0x732e6464610a3b32,0x30316c7225203436,0x2c346c7225202c34,0x3b3330316c722520\n"
".quad 0x626f6c672e646c0a,0x25203233662e6c61,0x72255b202c353166,0x610a3b5d3430316c\n"
".quad 0x25203233732e6464,0x347225202c333372,0x6c2e0a3b3436202c,0x383233203220636f\n"
".quad 0x2e7476630a312036,0x203233732e343673,0x202c3530316c7225,0x64610a3b33337225\n"
".quad 0x7225203436732e64,0x7225202c3630316c,0x316c7225202c366c,0x2e6464610a3b3530\n"
".quad 0x316c722520343673,0x316c7225202c3730,0x34333735202c3630,0x20636f6c2e0a3b34\n"
".quad 0x3120363832332032,0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3830\n"
".quad 0x336c7225202c3730,0x356c7225202c3138,0x36622e6c68730a3b,0x3930316c72252034\n"
".quad 0x3830316c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3031316c\n"
".quad 0x3233202c3930316c,0x3220636f6c2e0a3b,0x0a31203638323320,0x203436622e6c6873\n"
".quad 0x202c3131316c7225,0x202c3031316c7225,0x732e6464610a3b32,0x31316c7225203436\n"
".quad 0x2c346c7225202c32,0x3b3131316c722520,0x626f6c672e646c0a,0x25203233662e6c61\n"
".quad 0x72255b202c363166,0x610a3b5d3231316c,0x25203436732e6464,0x25202c3331316c72\n"
".quad 0x36202c3630316c72,0x6c2e0a3b30343431,0x383233203220636f,0x2e64616d0a312037\n"
".quad 0x25203436732e6f6c,0x25202c3431316c72,0x25202c3331316c72,0x25202c3138336c72\n"
".quad 0x68730a3b38316c72,0x7225203436622e6c,0x7225202c3531316c,0x3233202c3431316c\n"
".quad 0x36732e7268730a3b,0x3631316c72252034,0x3531316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x383233203220636f,0x2e6c68730a312037,0x316c722520343662,0x316c7225202c3731\n"
".quad 0x610a3b32202c3631,0x25203436732e6464,0x25202c3831316c72,0x6c7225202c346c72\n"
".quad 0x2e646c0a3b373131,0x662e6c61626f6c67,0x2c37316625203233,0x3831316c72255b20\n"
".quad 0x732e6464610a3b5d,0x31316c7225203436,0x31336c7225202c39,0x3530316c7225202c\n"
".quad 0x36732e6464610a3b,0x3032316c72252034,0x3931316c7225202c,0x3b3633353536202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312038383233,0x36732e6f6c2e6461,0x3132316c72252034\n"
".quad 0x3032316c7225202c,0x3138336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3232316c7225,0x202c3132316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3332,0x0a3b3233202c3232,0x33203220636f6c2e,0x68730a3120383832\n"
".quad 0x7225203436622e6c,0x7225202c3432316c,0x3b32202c3332316c,0x3436732e6464610a\n"
".quad 0x2c3532316c722520,0x25202c346c722520,0x6c0a3b3432316c72,0x6c61626f6c672e64\n"
".quad 0x316625203233662e,0x316c72255b202c38,0x6464610a3b5d3532,0x6c7225203436732e\n"
".quad 0x6c7225202c363231,0x363936202c363031,0x636f6c2e0a3b3233,0x2039383233203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c373231,0x6c7225202c363231\n"
".quad 0x6c7225202c313833,0x2e6c68730a3b3432,0x316c722520343662,0x316c7225202c3832\n"
".quad 0x0a3b3233202c3732,0x203436732e726873,0x202c3932316c7225,0x202c3832316c7225\n"
".quad 0x636f6c2e0a3b3233,0x2039383233203220,0x36622e6c68730a31,0x3033316c72252034\n"
".quad 0x3932316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c313331\n"
".quad 0x33316c7225202c34,0x6c672e646c0a3b30,0x3233662e6c61626f,0x5b202c3931662520\n"
".quad 0x3b5d3133316c7225,0x203220636f6c2e0a,0x610a312030393233,0x25203233732e6464\n"
".quad 0x337225202c383372,0x6f6c2e0a3b31202c,0x3032343120322063,0x2e707465730a3120\n"
".quad 0x25203233732e746c,0x337225202c313170,0x400a3b3436202c38,0x6172622031317025\n"
".quad 0x3b335f3732424220,0x36752e766f6d0a0a,0x3238336c72252034,0x0a3b32333034202c\n"
".quad 0x20696e752e617262,0x0a3b345f37324242,0x3a335f373242420a,0x3233622e6c68730a\n"
".quad 0x25202c3434722520,0x0a3b36202c383372,0x2e3436732e747663,0x336c722520323373\n"
".quad 0x34347225202c3238,0x5f373242420a0a3b,0x20636f6c2e0a3a34,0x3120303234312032\n"
".quad 0x746c2e707465730a,0x317025203233732e,0x2c33327225202c32,0x6464610a3b343620\n"
".quad 0x6c7225203436732e,0x6c7225202c343331,0x32373337202c3135,0x2e706c65730a3b38\n"
".quad 0x316c722520343662,0x316c7225202c3533,0x39373337202c3433,0x3b32317025202c31\n"
".quad 0x3436732e6464610a,0x2c3633316c722520,0x2c3533316c722520,0x3b3238336c722520\n"
".quad 0x3436752e7476630a,0x6c7225203233752e,0x317225202c373331,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3038336c72,0x5f645f524c395a5f,0x5f53665044434241\n"
".quad 0x6d617261705f6d66,0x6f6c2e0a3b5d335f,0x3039323320322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3833316c,0x7225202c3633316c,0x7225202c3038336c\n"
".quad 0x646c0a3b3733316c,0x752e6d617261702e,0x37336c7225203436,0x4c395a5f5b202c35\n"
".quad 0x444342415f645f52,0x705f6d665f536650,0x3b5d305f6d617261,0x6f742e617476630a\n"
".quad 0x2e6c61626f6c672e,0x316c722520343675,0x336c7225202c3933,0x2e6c68730a3b3537\n"
".quad 0x316c722520343662,0x316c7225202c3034,0x0a3b3233202c3833,0x203436732e726873\n"
".quad 0x202c3134316c7225,0x202c3034316c7225,0x636f6c2e0a3b3233,0x2030393233203220\n"
".quad 0x36622e6c68730a31,0x3234316c72252034,0x3134316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c333431,0x6c7225202c393331,0x2e646c0a3b323431\n"
".quad 0x662e6c61626f6c67,0x2c30326625203233,0x3334316c72255b20,0x20636f6c2e0a3b5d\n"
".quad 0x3120313932332032,0x726220317025400a,0x365f373242422061,0x20636f6c2e0a0a3b\n"
".quad 0x3120333133332032,0x3233662e6275730a,0x25202c3333662520,0x3b346625202c3366\n"
".quad 0x3233662e6464610a,0x25202c3433662520,0x366625202c333366,0x33662e6275730a3b\n"
".quad 0x202c353366252032,0x6625202c34336625,0x662e6275730a3b37,0x2c36336625203233\n"
".quad 0x25202c3533662520,0x2e6464610a3b3966,0x3733662520323366,0x202c36336625202c\n"
".quad 0x64610a3b30316625,0x6625203233662e64,0x37336625202c3833,0x0a3b32316625202c\n"
".quad 0x203233662e627573,0x6625202c39336625,0x34316625202c3833,0x33662e6464610a3b\n"
".quad 0x202c303466252032,0x6625202c39336625,0x2e6275730a3b3731,0x3134662520323366\n"
".quad 0x202c30346625202c,0x75730a3b39316625,0x6625203233662e62,0x2c356625202c3234\n"
".quad 0x64610a3b38662520,0x6625203233662e64,0x32346625202c3334,0x610a3b366625202c\n"
".quad 0x25203233662e6464,0x346625202c343466,0x0a3b376625202c33,0x203233662e627573\n"
".quad 0x6625202c35346625,0x3b396625202c3434,0x3233662e6275730a,0x25202c3634662520\n"
".quad 0x316625202c353466,0x662e6464610a3b30,0x2c37346625203233,0x25202c3634662520\n"
".quad 0x6275730a3b333166,0x346625203233662e,0x2c37346625202c38,0x610a3b3531662520\n"
".quad 0x25203233662e6464,0x346625202c393466,0x3b38316625202c38,0x3233662e6275730a\n"
".quad 0x25202c3035662520,0x326625202c393466,0x662e6464610a3b30,0x2c31356625203233\n"
".quad 0x25202c3131662520,0x6464610a3b323166,0x356625203233662e,0x2c31356625202c32\n"
".quad 0x610a3b3331662520,0x25203233662e6464,0x356625202c333566,0x3b34316625202c32\n"
".quad 0x3233662e6464610a,0x25202c3435662520,0x316625202c333566,0x662e6275730a3b35\n"
".quad 0x2c35356625203233,0x25202c3435662520,0x6275730a3b363166,0x356625203233662e\n"
".quad 0x2c35356625202c36,0x730a3b3731662520,0x25203233662e6275,0x356625202c373566\n"
".quad 0x3b38316625202c36,0x3233662e6275730a,0x25202c3835662520,0x316625202c373566\n"
".quad 0x662e6275730a3b39,0x2c39356625203233,0x25202c3835662520,0x6275730a3b303266\n"
".quad 0x366625203233662e,0x202c366625202c30,0x6f6c2e0a3b326625,0x3331333320322063\n"
".quad 0x662e6464610a3120,0x2c31366625203233,0x25202c3036662520,0x2e6464610a3b3766\n"
".quad 0x3236662520323366,0x202c31366625202c,0x6464610a3b396625,0x366625203233662e\n"
".quad 0x2c32366625202c33,0x610a3b3031662520,0x25203233662e6464,0x366625202c343666\n"
".quad 0x3b32316625202c33,0x3233662e6464610a,0x25202c3536662520,0x316625202c343666\n"
".quad 0x662e6464610a3b33,0x2c36366625203233,0x25202c3536662520,0x6464610a3b343166\n"
".quad 0x366625203233662e,0x2c36366625202c37,0x610a3b3531662520,0x25203233662e6464\n"
".quad 0x366625202c383666,0x3b37316625202c37,0x3233662e6464610a,0x25202c3936662520\n"
".quad 0x316625202c383666,0x662e6464610a3b38,0x2c30376625203233,0x25202c3936662520\n"
".quad 0x6464610a3b393166,0x376625203233662e,0x2c30376625202c31,0x6d0a3b3032662520\n"
".quad 0x25203233662e6c75,0x356625202c323766,0x3b30356625202c30,0x2e6e722e616d660a\n"
".quad 0x3337662520323366,0x202c31346625202c,0x6625202c31346625,0x2e6c756d0a3b3237\n"
".quad 0x3437662520323366,0x202c39356625202c,0x6d660a3b39356625,0x3233662e6e722e61\n"
".quad 0x25202c3537662520,0x356625202c393566,0x3b33376625202c39,0x3233662e6275730a\n"
".quad 0x25202c3637662520,0x376625202c313766,0x662e6c756d0a3b35,0x2c37376625203233\n"
".quad 0x6630202c33662520,0x3030303030383043,0x6e722e616d660a3b,0x376625203233662e\n"
".quad 0x202c326625202c38,0x3030303431346630,0x37376625202c3030,0x6e722e616d660a3b\n"
".quad 0x376625203233662e,0x202c356625202c39,0x3030303830436630,0x38376625202c3030\n"
".quad 0x6e722e616d660a3b,0x386625203233662e,0x202c346625202c30,0x3030303830436630\n"
".quad 0x39376625202c3030,0x6e722e616d660a3b,0x386625203233662e,0x202c386625202c31\n"
".quad 0x3030303830436630,0x30386625202c3030,0x33662e6464610a3b,0x202c323866252032\n"
".quad 0x6625202c31386625,0x662e6464610a3b36,0x2c33386625203233,0x25202c3238662520\n"
".quad 0x2e6464610a3b3766,0x3438662520323366,0x202c33386625202c,0x6464610a3b396625\n"
".quad 0x386625203233662e,0x2c34386625202c35,0x660a3b3031662520,0x33662e6e722e616d\n"
".quad 0x202c363866252032,0x6630202c31316625,0x3030303030383043,0x0a3b35386625202c\n"
".quad 0x203233662e646461,0x6625202c37386625,0x32316625202c3638,0x33662e6464610a3b\n"
".quad 0x202c383866252032,0x6625202c37386625,0x2e6464610a3b3331,0x3938662520323366\n"
".quad 0x202c38386625202c,0x64610a3b34316625,0x6625203233662e64,0x39386625202c3039\n"
".quad 0x0a3b35316625202c,0x662e6e722e616d66,0x2c31396625203233,0x30202c3631662520\n"
".quad 0x3030303038304366,0x3b30396625202c30,0x3233662e6464610a,0x25202c3239662520\n"
".quad 0x316625202c313966,0x662e6464610a3b37,0x2c33396625203233,0x25202c3239662520\n"
".quad 0x6464610a3b383166,0x396625203233662e,0x2c33396625202c34,0x610a3b3931662520\n"
".quad 0x25203233662e6464,0x396625202c353966,0x3b30326625202c34,0x2e6e722e616d660a\n"
".quad 0x3639662520323366,0x202c35376625202c,0x3534314630346630,0x35396625202c3431\n"
".quad 0x33662e6c756d0a3b,0x202c373966252032,0x346630202c346625,0x3b30303030304130\n"
".quad 0x2e6e722e616d660a,0x3839662520323366,0x30202c336625202c,0x3030303041304366\n"
".quad 0x3b37396625202c30,0x2e6e722e616d660a,0x3939662520323366,0x202c31346625202c\n"
".quad 0x3535354446336630,0x38396625202c3535,0x33662e6c756d0a3b,0x2c30303166252032\n"
".quad 0x6630202c38662520,0x3030303030413034,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x2c356625202c3130,0x3030413043663020,0x316625202c303030,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x6625202c32303166,0x46336630202c3035,0x202c353535353544\n"
".quad 0x6d0a3b3130316625,0x25203233662e6c75,0x6625202c33303166,0x30346630202c3631\n"
".quad 0x0a3b303030303041,0x662e6e722e616d66,0x3430316625203233,0x202c31316625202c\n"
".quad 0x3030304130436630,0x30316625202c3030,0x722e616d660a3b33,0x6625203233662e6e\n"
".quad 0x356625202c353031,0x4446336630202c39,0x25202c3535353535,0x64610a3b34303166\n"
".quad 0x6625203233662e64,0x336625202c363031,0x730a3b336625202c,0x25203233662e6275\n"
".quad 0x6625202c37303166,0x356625202c363031,0x3220636f6c2e0a3b,0x0a31203331333320\n"
".quad 0x203233662e646461,0x25202c3830316625,0x3b346625202c3466,0x3233662e6464610a\n"
".quad 0x202c393031662520,0x25202c3730316625,0x75730a3b38303166,0x6625203233662e62\n"
".quad 0x316625202c303131,0x3b386625202c3930,0x203220636f6c2e0a,0x610a312033313333\n"
".quad 0x25203233662e6464,0x6625202c31313166,0x366625202c303131,0x33662e6464610a3b\n"
".quad 0x2c32313166252032,0x202c313131662520,0x6464610a3b376625,0x316625203233662e\n"
".quad 0x31316625202c3331,0x0a3b396625202c32,0x203233662e646461,0x25202c3431316625\n"
".quad 0x6625202c33313166,0x2e6275730a3b3031,0x3131662520323366,0x3431316625202c35\n"
".quad 0x0a3b31316625202c,0x33203220636f6c2e,0x64610a3120333133,0x6625203233662e64\n"
".quad 0x316625202c363131,0x32316625202c3531,0x33662e766f6d0a3b,0x2c37313166252032\n"
".quad 0x3030303043663020,0x6f6c2e0a3b303030,0x3331333320322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x316625202c383131,0x3030436630202c33,0x25202c3030303030\n"
".quad 0x64610a3b36313166,0x6625203233662e64,0x316625202c393131,0x34316625202c3831\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x35316625202c3032,0x303030436630202c\n"
".quad 0x6625202c30303030,0x6275730a3b393131,0x316625203233662e,0x32316625202c3132\n"
".quad 0x3b36316625202c30,0x203220636f6c2e0a,0x610a312033313333,0x25203233662e6464\n"
".quad 0x6625202c32323166,0x316625202c313231,0x722e616d660a3b37,0x6625203233662e6e\n"
".quad 0x316625202c333231,0x3030436630202c38,0x25202c3030303030,0x64610a3b32323166\n"
".quad 0x6625203233662e64,0x316625202c343231,0x39316625202c3332,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x30326625202c3532,0x303030436630202c,0x6625202c30303030\n"
".quad 0x6464610a3b343231,0x316625203233662e,0x31346625202c3632,0x0a3b31346625202c\n"
".quad 0x662e6e722e616d66,0x3732316625203233,0x202c30356625202c,0x6625202c30356625\n"
".quad 0x2e67656e0a3b3437,0x3231662520323366,0x3732316625202c38,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x32316625202c3932,0x2c31346625202c36,0x0a3b383231662520\n"
".quad 0x203233662e627573,0x25202c3033316625,0x6625202c35323166,0x6464610a3b393231\n"
".quad 0x316625203233662e,0x2c356625202c3133,0x6d660a3b35662520,0x3233662e6e722e61\n"
".quad 0x202c323331662520,0x436630202c336625,0x2c30303030303830,0x0a3b313331662520\n"
".quad 0x662e6e722e616d66,0x3333316625203233,0x30202c346625202c,0x3030303038304366\n"
".quad 0x3233316625202c30,0x33662e6464610a3b,0x2c34333166252032,0x6625202c38662520\n"
".quad 0x662e6464610a3b38,0x3533316625203233,0x2c3333316625202c,0x0a3b343331662520\n"
".quad 0x203233662e646461,0x25202c3633316625,0x6625202c35333166,0x662e6464610a3b36\n"
".quad 0x3733316625203233,0x2c3633316625202c,0x64610a3b37662520,0x6625203233662e64\n"
".quad 0x316625202c383331,0x3b396625202c3733,0x3233662e6464610a,0x202c393331662520\n"
".quad 0x25202c3833316625,0x6464610a3b303166,0x316625203233662e,0x31316625202c3034\n"
".quad 0x0a3b31316625202c,0x203233662e646461,0x25202c3134316625,0x6625202c39333166\n"
".quad 0x6464610a3b303431,0x316625203233662e,0x34316625202c3234,0x3b32316625202c31\n"
".quad 0x2e6e722e616d660a,0x3431662520323366,0x2c33316625202c33,0x3030303043663020\n"
".quad 0x316625202c303030,0x2e6464610a3b3234,0x3431662520323366,0x3334316625202c34\n"
".quad 0x0a3b34316625202c,0x662e6e722e616d66,0x3534316625203233,0x202c35316625202c\n"
".quad 0x3030303030436630,0x34316625202c3030,0x662e6464610a3b34,0x3634316625203233\n"
".quad 0x202c36316625202c,0x64610a3b36316625,0x6625203233662e64,0x316625202c373431\n"
".quad 0x34316625202c3534,0x662e6464610a3b36,0x3834316625203233,0x2c3734316625202c\n"
".quad 0x660a3b3731662520,0x33662e6e722e616d,0x2c39343166252032,0x30202c3831662520\n"
".quad 0x3030303030304366,0x3834316625202c30,0x33662e6464610a3b,0x2c30353166252032\n"
".quad 0x202c393431662520,0x6d660a3b39316625,0x3233662e6e722e61,0x202c313531662520\n"
".quad 0x6630202c30326625,0x3030303030303043,0x3b3035316625202c,0x3233662e6464610a\n"
".quad 0x202c323531662520,0x386625202c356625,0x33662e6464610a3b,0x2c33353166252032\n"
".quad 0x202c323531662520,0x6464610a3b366625,0x316625203233662e,0x35316625202c3435\n"
".quad 0x0a3b376625202c33,0x203233662e646461,0x25202c3535316625,0x6625202c34353166\n"
".quad 0x662e6464610a3b39,0x3635316625203233,0x2c3535316625202c,0x730a3b3031662520\n"
".quad 0x25203233662e6275,0x6625202c37353166,0x316625202c363531,0x662e6275730a3b31\n"
".quad 0x3835316625203233,0x2c3735316625202c,0x730a3b3231662520,0x25203233662e6275\n"
".quad 0x6625202c39353166,0x316625202c383531,0x662e6275730a3b34,0x3036316625203233\n"
".quad 0x2c3935316625202c,0x730a3b3631662520,0x25203233662e6275,0x6625202c31363166\n"
".quad 0x316625202c303631,0x662e6275730a3b37,0x3236316625203233,0x2c3136316625202c\n"
".quad 0x2e0a3b3931662520,0x3333203220636f6c,0x67656e0a31203331,0x316625203233662e\n"
".quad 0x39356625202c3336,0x6e722e616d660a3b,0x316625203233662e,0x36316625202c3436\n"
".quad 0x2c39356625202c33,0x730a3b3237662520,0x25203233662e6275,0x6625202c35363166\n"
".quad 0x316625202c323631,0x2e67656e0a3b3436,0x3631662520323366,0x3433316625202c36\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x2c356625202c3736,0x202c373131662520\n"
".quad 0x610a3b3636316625,0x25203233662e6464,0x6625202c38363166,0x366625202c373631\n"
".quad 0x33662e6464610a3b,0x2c39363166252032,0x202c383631662520,0x6464610a3b376625\n"
".quad 0x316625203233662e,0x36316625202c3037,0x0a3b396625202c39,0x203233662e646461\n"
".quad 0x25202c3137316625,0x6625202c30373166,0x2e6464610a3b3031,0x3731662520323366\n"
".quad 0x3137316625202c32,0x3b3034316625202c,0x3233662e6275730a,0x202c333731662520\n"
".quad 0x25202c3237316625,0x6275730a3b323166,0x316625203233662e,0x37316625202c3437\n"
".quad 0x3b34316625202c33,0x203220636f6c2e0a,0x610a312033313333,0x25203233662e6464\n"
".quad 0x6625202c35373166,0x316625202c343731,0x2e6275730a3b3634,0x3731662520323366\n"
".quad 0x3537316625202c36,0x0a3b37316625202c,0x203233662e627573,0x25202c3737316625\n"
".quad 0x6625202c36373166,0x2e6275730a3b3931,0x3731662520323366,0x202c366625202c38\n"
".quad 0x6f6c2e0a3b376625,0x3331333320322063,0x662e6464610a3120,0x3937316625203233\n"
".quad 0x2c3837316625202c,0x75730a3b39662520,0x6625203233662e62,0x316625202c303831\n"
".quad 0x30316625202c3937,0x3220636f6c2e0a3b,0x0a31203331333320,0x203233662e67656e\n"
".quad 0x25202c3138316625,0x616d660a3b313466,0x203233662e6e722e,0x25202c3238316625\n"
".quad 0x6625202c31383166,0x38316625202c3035,0x662e6275730a3b30,0x3338316625203233\n"
".quad 0x202c33316625202c,0x75730a3b35316625,0x6625203233662e62,0x316625202c343831\n"
".quad 0x38316625202c3338,0x3220636f6c2e0a3b,0x0a31203331333320,0x203233662e646461\n"
".quad 0x25202c3538316625,0x6625202c34383166,0x2e67656e0a3b3032,0x3831662520323366\n"
".quad 0x3b30356625202c36,0x2e6e722e616d660a,0x3831662520323366,0x3638316625202c37\n"
".quad 0x202c39356625202c,0x730a3b3538316625,0x25203233662e6275,0x6625202c38383166\n"
".quad 0x34316625202c3231,0x33662e6275730a3b,0x2c39383166252032,0x202c383831662520\n"
".quad 0x6c2e0a3b37316625,0x313333203220636f,0x2e6464610a312033,0x3931662520323366\n"
".quad 0x3938316625202c30,0x0a3b39316625202c,0x662e6e722e616d66,0x3139316625203233\n"
".quad 0x2c3138316625202c,0x25202c3935662520,0x75730a3b30393166,0x6625203233662e62\n"
".quad 0x316625202c323931,0x3b396625202c3837,0x203220636f6c2e0a,0x610a312033313333\n"
".quad 0x25203233662e6464,0x6625202c33393166,0x316625202c323931,0x662e6275730a3b30\n"
".quad 0x3439316625203233,0x2c3339316625202c,0x610a3b3231662520,0x25203233662e6464\n"
".quad 0x6625202c35393166,0x316625202c343931,0x662e6275730a3b34,0x3639316625203233\n"
".quad 0x2c3539316625202c,0x2e0a3b3731662520,0x3333203220636f6c,0x6464610a31203331\n"
".quad 0x316625203233662e,0x39316625202c3739,0x3b39316625202c36,0x3233662e67656e0a\n"
".quad 0x202c383931662520,0x6275730a3b376625,0x316625203233662e,0x39316625202c3939\n"
".quad 0x0a3b366625202c38,0x33203220636f6c2e,0x64610a3120333133,0x6625203233662e64\n"
".quad 0x316625202c303032,0x3b396625202c3939,0x3233662e6464610a,0x202c313032662520\n"
".quad 0x25202c3030326625,0x6464610a3b303166,0x326625203233662e,0x30326625202c3230\n"
".quad 0x3b33316625202c31,0x3233662e6275730a,0x202c333032662520,0x25202c3230326625\n"
".quad 0x6f6c2e0a3b353166,0x3331333320322063,0x662e6464610a3120,0x3430326625203233\n"
".quad 0x2c3330326625202c,0x730a3b3831662520,0x25203233662e6275,0x6625202c35303266\n"
".quad 0x326625202c343032,0x662e6275730a3b30,0x3630326625203233,0x202c32316625202c\n"
".quad 0x6c2e0a3b33316625,0x313333203220636f,0x2e6464610a312033,0x3032662520323366\n"
".quad 0x3630326625202c37,0x0a3b34316625202c,0x203233662e627573,0x25202c3830326625\n"
".quad 0x6625202c37303266,0x2e6275730a3b3531,0x3032662520323366,0x3830326625202c39\n"
".quad 0x0a3b37316625202c,0x33203220636f6c2e,0x64610a3120333133,0x6625203233662e64\n"
".quad 0x326625202c303132,0x38316625202c3930,0x33662e6275730a3b,0x2c31313266252032\n"
".quad 0x202c303132662520,0x6c2e0a3b39316625,0x313333203220636f,0x2e6464610a312033\n"
".quad 0x3132662520323366,0x3131326625202c32,0x0a3b30326625202c,0x203233662e766f6d\n"
".quad 0x30202c3331326625,0x3030303038453366,0x61702e646c0a3b30,0x203233662e6d6172\n"
".quad 0x5b202c3438336625,0x5f645f524c395a5f,0x5f53665044434241,0x6d617261705f6d66\n"
".quad 0x6f6c2e0a3b5d325f,0x3331333320322063,0x662e6c756d0a3120,0x3431326625203233\n"
".quad 0x2c3438336625202c,0x3030384533663020,0x766f6d0a3b303030,0x326625203233662e\n"
".quad 0x45336630202c3531,0x0a3b303030303030,0x33203220636f6c2e,0x756d0a3120333133\n"
".quad 0x6625203233662e6c,0x316625202c363132,0x44336630202c3737,0x0a3b424141414132\n"
".quad 0x203233662e766f6d,0x30202c3731326625,0x4141414132443366,0x20636f6c2e0a3b42\n"
".quad 0x3120333133332032,0x3233662e6c756d0a,0x202c383132662520,0x30202c3438336625\n"
".quad 0x4141414141443366,0x662e6c756d0a3b42,0x3931326625203233,0x2c3135316625202c\n"
".quad 0x3833364333663020,0x6c756d0a3b393345,0x326625203233662e,0x38336625202c3032\n"
".quad 0x4543336630202c34,0x6d0a3b3933453833,0x25203233662e6c75,0x6625202c31323266\n"
".quad 0x326625202c303331,0x2e6c756d0a3b3032,0x3232662520323366,0x2c39396625202c32\n"
".quad 0x4343434333663020,0x766f6d0a3b444343,0x326625203233662e,0x43336630202c3332\n"
".quad 0x0a3b444343434343,0x33203220636f6c2e,0x756d0a3120333133,0x6625203233662e6c\n"
".quad 0x316625202c343232,0x43336630202c3230,0x0a3b444343434343,0x203233662e6c756d\n"
".quad 0x25202c3532326625,0x6630202c35303166,0x4443434343434333,0x33662e6c756d0a3b\n"
".quad 0x2c36323266252032,0x30202c3639662520,0x3238303238423366,0x662e6c756d0a3b31\n"
".quad 0x3732326625203233,0x2c3632326625202c,0x3030343134663020,0x616d660a3b303030\n"
".quad 0x203233662e6e722e,0x25202c3832326625,0x426630202c363766,0x2c44334643333745\n"
".quad 0x0a3b373232662520,0x203233662e627573,0x25202c3932326625,0x32326625202c3266\n"
".quad 0x662e6c756d0a3b38,0x3033326625203233,0x2c3632326625202c,0x3030383043663020\n"
".quad 0x616d660a3b303030,0x203233662e6e722e,0x25202c3133326625,0x426630202c363766\n"
".quad 0x2c44324243324244,0x0a3b303332662520,0x662e6e722e616d66,0x3233326625203233\n"
".quad 0x2c3232326625202c,0x3030383043663020,0x326625202c303030,0x2e616d660a3b3133\n"
".quad 0x25203233662e6e72,0x6625202c33333266,0x326625202c303331,0x32326625202c3032\n"
".quad 0x662e6464610a3b31,0x3433326625203233,0x2c3233326625202c,0x0a3b333332662520\n"
".quad 0x662e6e722e616d66,0x3533326625203233,0x2c3931326625202c,0x3030383043663020\n"
".quad 0x326625202c303030,0x2e6275730a3b3433,0x3332662520323366,0x202c336625202c36\n"
".quad 0x660a3b3533326625,0x33662e6e722e616d,0x2c37333266252032,0x202c343232662520\n"
".quad 0x3030303830436630,0x33326625202c3030,0x662e67656e0a3b31,0x3833326625203233\n"
".quad 0x3b3033316625202c,0x2e6e722e616d660a,0x3332662520323366,0x3833326625202c39\n"
".quad 0x2c3032326625202c,0x0a3b373332662520,0x33203220636f6c2e,0x6d660a3120333133\n"
".quad 0x3233662e6e722e61,0x202c303432662520,0x30202c3135316625,0x3345383336433366\n"
".quad 0x3931326625202c39,0x33662e6464610a3b,0x2c31343266252032,0x202c393332662520\n"
".quad 0x660a3b3034326625,0x33662e6e722e616d,0x2c32343266252032,0x202c353631662520\n"
".quad 0x25202c3831326625,0x6d660a3b31343266,0x3233662e6e722e61,0x202c333432662520\n"
".quad 0x30202c3631326625,0x3030303030304366,0x3234326625202c30,0x33662e6275730a3b\n"
".quad 0x2c34343266252032,0x6625202c35662520,0x616d660a3b333432,0x203233662e6e722e\n"
".quad 0x25202c3534326625,0x6630202c32323266,0x3030303030383034,0x3b3133326625202c\n"
".quad 0x3233662e6464610a,0x202c363432662520,0x25202c3534326625,0x6d660a3b33333266\n"
".quad 0x3233662e6e722e61,0x202c373432662520,0x30202c3931326625,0x3030303038304366\n"
".quad 0x3634326625202c30,0x33662e6275730a3b,0x2c38343266252032,0x6625202c34662520\n"
".quad 0x616d660a3b373432,0x203233662e6e722e,0x25202c3934326625,0x6630202c34323266\n"
".quad 0x3030303030383034,0x3b3133326625202c,0x2e6e722e616d660a,0x3532662520323366\n"
".quad 0x3833326625202c30,0x2c3032326625202c,0x0a3b393432662520,0x33203220636f6c2e\n"
".quad 0x64610a3120333133,0x6625203233662e64,0x326625202c313532,0x34326625202c3035\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x316625202c323532,0x31326625202c3536\n"
".quad 0x3135326625202c38,0x6e722e616d660a3b,0x326625203233662e,0x31326625202c3335\n"
".quad 0x3030436630202c36,0x25202c3030303030,0x75730a3b32353266,0x6625203233662e62\n"
".quad 0x386625202c343532,0x3b3335326625202c,0x2e6e722e616d660a,0x3532662520323366\n"
".quad 0x2c36376625202c35,0x3032384433663020,0x326625202c303238,0x2e616d660a3b3632\n"
".quad 0x25203233662e6e72,0x6625202c36353266,0x43336630202c3939,0x202c444343434343\n"
".quad 0x660a3b3535326625,0x33662e6e722e616d,0x2c37353266252032,0x202c323031662520\n"
".quad 0x4343434343336630,0x35326625202c4443,0x722e616d660a3b36,0x6625203233662e6e\n"
".quad 0x316625202c383532,0x32326625202c3033,0x3735326625202c30,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x35316625202c3935,0x3643336630202c31,0x25202c3933453833\n"
".quad 0x6d660a3b38353266,0x3233662e6e722e61,0x202c303632662520,0x25202c3536316625\n"
".quad 0x6625202c38313266,0x616d660a3b393532,0x203233662e6e722e,0x25202c3136326625\n"
".quad 0x6630202c37373166,0x4241414141324433,0x3b3036326625202c,0x2e6e722e616d660a\n"
".quad 0x3632662520323366,0x3238316625202c32,0x303845336630202c,0x6625202c30303030\n"
".quad 0x616d660a3b313632,0x203233662e6e722e,0x25202c3336326625,0x6630202c37393166\n"
".quad 0x3030303030304533,0x3b3236326625202c,0x3233662e67656e0a,0x202c343632662520\n"
".quad 0x660a3b3530326625,0x33662e6e722e616d,0x2c35363266252032,0x202c343632662520\n"
".quad 0x25202c3531326625,0x6c2e0a3b33363266,0x313333203220636f,0x2e6275730a312033\n"
".quad 0x3632662520323366,0x202c366625202c36,0x6e0a3b3536326625,0x25203233662e6765\n"
".quad 0x6625202c37363266,0x2e616d660a3b3939,0x25203233662e6e72,0x6625202c38363266\n"
".quad 0x326625202c373632,0x35326625202c3332,0x20636f6c2e0a3b35,0x3120333133332032\n"
".quad 0x2e6e722e616d660a,0x3632662520323366,0x3230316625202c39,0x434343336630202c\n"
".quad 0x6625202c44434343,0x616d660a3b383632,0x203233662e6e722e,0x25202c3037326625\n"
".quad 0x6625202c30333166,0x326625202c303232,0x2e616d660a3b3936,0x25203233662e6e72\n"
".quad 0x6625202c31373266,0x336630202c313531,0x2c39334538333643,0x0a3b303732662520\n"
".quad 0x662e6e722e616d66,0x3237326625203233,0x2c3536316625202c,0x202c383132662520\n"
".quad 0x660a3b3137326625,0x33662e6e722e616d,0x2c33373266252032,0x202c373731662520\n"
".quad 0x4141413244336630,0x37326625202c4241,0x662e67656e0a3b32,0x3437326625203233\n"
".quad 0x3b3238316625202c,0x2e6e722e616d660a,0x3732662520323366,0x3437326625202c35\n"
".quad 0x2c3331326625202c,0x0a3b333732662520,0x203233662e67656e,0x25202c3637326625\n"
".quad 0x6d660a3b37393166,0x3233662e6e722e61,0x202c373732662520,0x25202c3637326625\n"
".quad 0x6625202c35313266,0x616d660a3b353732,0x203233662e6e722e,0x25202c3837326625\n"
".quad 0x6625202c34363266,0x326625202c353132,0x636f6c2e0a3b3737,0x2033313333203220\n"
".quad 0x33662e6275730a31,0x2c39373266252032,0x6625202c37662520,0x67656e0a3b383732\n"
".quad 0x326625203233662e,0x30316625202c3038,0x722e616d660a3b32,0x6625203233662e6e\n"
".quad 0x326625202c313832,0x32326625202c3038,0x3836326625202c33,0x3220636f6c2e0a3b\n"
".quad 0x0a31203331333320,0x662e6e722e616d66,0x3238326625203233,0x2c3033316625202c\n"
".quad 0x202c303232662520,0x660a3b3138326625,0x33662e6e722e616d,0x2c33383266252032\n"
".quad 0x202c313531662520,0x4538333643336630,0x38326625202c3933,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x316625202c343832,0x31326625202c3536,0x3338326625202c38\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x37316625202c3538,0x3244336630202c37\n"
".quad 0x25202c4241414141,0x6d660a3b34383266,0x3233662e6e722e61,0x202c363832662520\n"
".quad 0x30202c3238316625,0x3030303038453366,0x3538326625202c30,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x37326625202c3738,0x3531326625202c36,0x3b3638326625202c\n"
".quad 0x203220636f6c2e0a,0x660a312033313333,0x33662e6e722e616d,0x2c38383266252032\n"
".quad 0x202c353032662520,0x3030303045336630,0x38326625202c3030,0x662e6275730a3b37\n"
".quad 0x3938326625203233,0x25202c396625202c,0x6d660a3b38383266,0x3233662e6e722e61\n"
".quad 0x202c303932662520,0x25202c3038326625,0x6625202c33323266,0x6f6c2e0a3b363532\n"
".quad 0x3331333320322063,0x722e616d660a3120,0x6625203233662e6e,0x316625202c313932\n"
".quad 0x32326625202c3033,0x3039326625202c30,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x35316625202c3239,0x3643336630202c31,0x25202c3933453833,0x6d660a3b31393266\n"
".quad 0x3233662e6e722e61,0x202c333932662520,0x25202c3536316625,0x6625202c38313266\n"
".quad 0x616d660a3b323932,0x203233662e6e722e,0x25202c3439326625,0x6630202c37373166\n"
".quad 0x4241414141324433,0x3b3339326625202c,0x2e6e722e616d660a,0x3932662520323366\n"
".quad 0x3437326625202c35,0x2c3331326625202c,0x0a3b343932662520,0x33203220636f6c2e\n"
".quad 0x6d660a3120333133,0x3233662e6e722e61,0x202c363932662520,0x30202c3739316625\n"
".quad 0x3030303030453366,0x3539326625202c30,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x30326625202c3739,0x3045336630202c35,0x25202c3030303030,0x75730a3b36393266\n"
".quad 0x6625203233662e62,0x316625202c383932,0x3739326625202c30,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x32326625202c3939,0x3830436630202c35,0x25202c3030303030\n"
".quad 0x6d660a3b31333266,0x3233662e6e722e61,0x202c303033662520,0x25202c3833326625\n"
".quad 0x6625202c30323266,0x6f6c2e0a3b393932,0x3331333320322063,0x662e6464610a3120\n"
".quad 0x3130336625203233,0x2c3030336625202c,0x0a3b303432662520,0x203233662e67656e\n"
".quad 0x25202c3230336625,0x6d660a3b35363166,0x3233662e6e722e61,0x202c333033662520\n"
".quad 0x25202c3230336625,0x6625202c38313266,0x6f6c2e0a3b313033,0x3331333320322063\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x316625202c343033,0x44336630202c3737\n"
".quad 0x202c424141414132,0x610a3b3631326625,0x25203233662e6464,0x6625202c35303366\n"
".quad 0x336625202c333033,0x2e6275730a3b3430,0x3033662520323366,0x2c31316625202c36\n"
".quad 0x0a3b353033662520,0x662e6e722e616d66,0x3730336625203233,0x2c3530316625202c\n"
".quad 0x4343434333663020,0x326625202c444343,0x2e616d660a3b3635,0x25203233662e6e72\n"
".quad 0x6625202c38303366,0x326625202c303331,0x30336625202c3032,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x316625202c393033,0x43336630202c3135,0x202c393345383336\n"
".quad 0x660a3b3830336625,0x33662e6e722e616d,0x2c30313366252032,0x202c323033662520\n"
".quad 0x25202c3831326625,0x656e0a3b39303366,0x6625203233662e67,0x316625202c313133\n"
".quad 0x2e616d660a3b3737,0x25203233662e6e72,0x6625202c32313366,0x326625202c313133\n"
".quad 0x31336625202c3731,0x20636f6c2e0a3b30,0x3120333133332032,0x2e6e722e616d660a\n"
".quad 0x3133662520323366,0x3139316625202c33,0x2c3431326625202c,0x0a3b323133662520\n"
".quad 0x662e6e722e616d66,0x3431336625203233,0x2c3637326625202c,0x202c353132662520\n"
".quad 0x2e0a3b3331336625,0x3333203220636f6c,0x616d660a31203331,0x203233662e6e722e\n"
".quad 0x25202c3531336625,0x6630202c32313266,0x3030303030304533,0x3b3431336625202c\n"
".quad 0x3233662e6275730a,0x202c363133662520,0x6625202c32316625,0x616d660a3b353133\n"
".quad 0x203233662e6e722e,0x25202c3731336625,0x6630202c32303166,0x4443434343434333\n"
".quad 0x3b3535326625202c,0x2e6e722e616d660a,0x3133662520323366,0x3530316625202c38\n"
".quad 0x434343336630202c,0x6625202c44434343,0x616d660a3b373133,0x203233662e6e722e\n"
".quad 0x25202c3931336625,0x6630202c31323266,0x3030303030303043,0x3b3831336625202c\n"
".quad 0x2e6e722e616d660a,0x3233662520323366,0x3931326625202c30,0x303030436630202c\n"
".quad 0x6625202c30303030,0x616d660a3b393133,0x203233662e6e722e,0x25202c3132336625\n"
".quad 0x6630202c37383166,0x3030303030384533,0x3b3032336625202c,0x2e6e722e616d660a\n"
".quad 0x3233662520323366,0x3530326625202c32,0x303045336630202c,0x6625202c30303030\n"
".quad 0x67656e0a3b313233,0x336625203233662e,0x31326625202c3332,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x336625202c343233,0x31326625202c3332,0x3232336625202c35\n"
".quad 0x3220636f6c2e0a3b,0x0a31203331333320,0x203233662e627573,0x25202c3532336625\n"
".quad 0x336625202c333166,0x2e616d660a3b3432,0x25203233662e6e72,0x6625202c36323366\n"
".quad 0x336630202c353031,0x2c44434343434343,0x0a3b383632662520,0x662e6e722e616d66\n"
".quad 0x3732336625203233,0x2c3033316625202c,0x202c303232662520,0x660a3b3632336625\n"
".quad 0x33662e6e722e616d,0x2c38323366252032,0x202c313531662520,0x4538333643336630\n"
".quad 0x32336625202c3933,0x722e616d660a3b37,0x6625203233662e6e,0x336625202c393233\n"
".quad 0x31326625202c3230,0x3832336625202c38,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x31336625202c3033,0x3731326625202c31,0x3b3932336625202c,0x3233662e67656e0a\n"
".quad 0x202c313333662520,0x660a3b3139316625,0x33662e6e722e616d,0x2c32333366252032\n"
".quad 0x202c313333662520,0x25202c3431326625,0x6c2e0a3b30333366,0x313333203220636f\n"
".quad 0x2e616d660a312033,0x25203233662e6e72,0x6625202c33333366,0x336630202c373931\n"
".quad 0x2c30303030303045,0x0a3b323333662520,0x662e6e722e616d66,0x3433336625203233\n"
".quad 0x2c3231326625202c,0x3030304533663020,0x336625202c303030,0x2e6275730a3b3333\n"
".quad 0x3333662520323366,0x2c34316625202c35,0x0a3b343333662520,0x662e6e722e616d66\n"
".quad 0x3633336625203233,0x2c3038326625202c,0x202c333232662520,0x2e0a3b3535326625\n"
".quad 0x3333203220636f6c,0x616d660a31203331,0x203233662e6e722e,0x25202c3733336625\n"
".quad 0x6630202c35303166,0x4443434343434333,0x3b3633336625202c,0x2e6e722e616d660a\n"
".quad 0x3333662520323366,0x3132326625202c38,0x303030436630202c,0x6625202c30303030\n"
".quad 0x616d660a3b373333,0x203233662e6e722e,0x25202c3933336625,0x6630202c39313266\n"
".quad 0x3030303030303043,0x3b3833336625202c,0x3233662e67656e0a,0x202c303433662520\n"
".quad 0x660a3b3738316625,0x33662e6e722e616d,0x2c31343366252032,0x202c303433662520\n"
".quad 0x25202c3331326625,0x6d660a3b39333366,0x3233662e6e722e61,0x202c323433662520\n"
".quad 0x25202c3436326625,0x6625202c35313266,0x616d660a3b313433,0x203233662e6e722e\n"
".quad 0x25202c3334336625,0x6625202c33323366,0x336625202c353132,0x636f6c2e0a3b3234\n"
".quad 0x2033313333203220,0x33662e6275730a31,0x2c34343366252032,0x25202c3531662520\n"
".quad 0x6d660a3b33343366,0x3233662e6e722e61,0x202c353433662520,0x30202c3532326625\n"
".quad 0x3030303038303466,0x3133326625202c30,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x33326625202c3634,0x3032326625202c38,0x3b3534336625202c,0x203220636f6c2e0a\n"
".quad 0x610a312033313333,0x25203233662e6464,0x6625202c37343366,0x326625202c363433\n"
".quad 0x2e616d660a3b3034,0x25203233662e6e72,0x6625202c38343366,0x326625202c323033\n"
".quad 0x34336625202c3831,0x20636f6c2e0a3b37,0x3120333133332032,0x3233662e6464610a\n"
".quad 0x202c393433662520,0x25202c3834336625,0x75730a3b34303366,0x6625203233662e62\n"
".quad 0x316625202c303533,0x3934336625202c36,0x33662e67656e0a3b,0x2c31353366252032\n"
".quad 0x0a3b353031662520,0x662e6e722e616d66,0x3235336625203233,0x2c3135336625202c\n"
".quad 0x202c333232662520,0x2e0a3b3635326625,0x3333203220636f6c,0x616d660a31203331\n"
".quad 0x203233662e6e722e,0x25202c3335336625,0x6625202c30333166,0x336625202c303232\n"
".quad 0x2e616d660a3b3235,0x25203233662e6e72,0x6625202c34353366,0x336630202c313531\n"
".quad 0x2c39334538333643,0x0a3b333533662520,0x662e6e722e616d66,0x3535336625203233\n"
".quad 0x2c3230336625202c,0x202c383132662520,0x660a3b3435336625,0x33662e6e722e616d\n"
".quad 0x2c36353366252032,0x202c313133662520,0x25202c3731326625,0x6d660a3b35353366\n"
".quad 0x3233662e6e722e61,0x202c373533662520,0x25202c3133336625,0x6625202c34313266\n"
".quad 0x616d660a3b363533,0x203233662e6e722e,0x25202c3835336625,0x6625202c36373266\n"
".quad 0x336625202c353132,0x2e616d660a3b3735,0x25203233662e6e72,0x6625202c39353366\n"
".quad 0x326625202c333233,0x35336625202c3531,0x20636f6c2e0a3b38,0x3120333133332032\n"
".quad 0x3233662e6275730a,0x202c303633662520,0x6625202c37316625,0x616d660a3b393533\n"
".quad 0x203233662e6e722e,0x25202c3136336625,0x6625202c31353366,0x336625202c333232\n"
".quad 0x636f6c2e0a3b3731,0x2033313333203220,0x6e722e616d660a31,0x336625203233662e\n"
".quad 0x32326625202c3236,0x3030436630202c31,0x25202c3030303030,0x6d660a3b31363366\n"
".quad 0x3233662e6e722e61,0x202c333633662520,0x30202c3931326625,0x3030303030304366\n"
".quad 0x3236336625202c30,0x6e722e616d660a3b,0x336625203233662e,0x34336625202c3436\n"
".quad 0x3331326625202c30,0x3b3336336625202c,0x203220636f6c2e0a,0x660a312033313333\n"
".quad 0x33662e6e722e616d,0x2c35363366252032,0x202c353032662520,0x3030303045336630\n"
".quad 0x36336625202c3030,0x722e616d660a3b34,0x6625203233662e6e,0x326625202c363633\n"
".quad 0x45336630202c3231,0x202c303030303030,0x730a3b3536336625,0x25203233662e6275\n"
".quad 0x6625202c37363366,0x36336625202c3831,0x722e616d660a3b36,0x6625203233662e6e\n"
".quad 0x336625202c383633,0x32326625202c3135,0x3836326625202c33,0x3220636f6c2e0a3b\n"
".quad 0x0a31203331333320,0x662e6e722e616d66,0x3936336625203233,0x2c3033316625202c\n"
".quad 0x202c303232662520,0x660a3b3836336625,0x33662e6e722e616d,0x2c30373366252032\n"
".quad 0x202c313531662520,0x4538333643336630,0x36336625202c3933,0x722e616d660a3b39\n"
".quad 0x6625203233662e6e,0x336625202c313733,0x31326625202c3230,0x3037336625202c38\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x31336625202c3237,0x3731326625202c31\n"
".quad 0x3b3137336625202c,0x203220636f6c2e0a,0x660a312033313333,0x33662e6e722e616d\n"
".quad 0x2c33373366252032,0x202c313931662520,0x25202c3431326625,0x6d660a3b32373366\n"
".quad 0x3233662e6e722e61,0x202c343733662520,0x30202c3739316625,0x3030303030453366\n"
".quad 0x3337336625202c30,0x6e722e616d660a3b,0x336625203233662e,0x32336625202c3537\n"
".quad 0x3531326625202c33,0x3b3437336625202c,0x203220636f6c2e0a,0x730a312033313333\n"
".quad 0x25203233662e6275,0x6625202c36373366,0x37336625202c3931,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x336625202c373733,0x32326625202c3135,0x3633336625202c33\n"
".quad 0x3220636f6c2e0a3b,0x0a31203331333320,0x662e6e722e616d66,0x3837336625203233\n"
".quad 0x2c3132326625202c,0x3030303043663020,0x336625202c303030,0x2e616d660a3b3737\n"
".quad 0x25203233662e6e72,0x6625202c39373366,0x436630202c393132,0x2c30303030303030\n"
".quad 0x0a3b383733662520,0x662e6e722e616d66,0x3038336625203233,0x2c3738316625202c\n"
".quad 0x3030384533663020,0x336625202c303030,0x2e616d660a3b3937,0x25203233662e6e72\n"
".quad 0x6625202c31383366,0x326625202c343632,0x38336625202c3531,0x20636f6c2e0a3b30\n"
".quad 0x3120333133332032,0x2e6e722e616d660a,0x3833662520323366,0x3231326625202c32\n"
".quad 0x303045336630202c,0x6625202c30303030,0x6275730a3b313833,0x336625203233662e\n"
".quad 0x30326625202c3338,0x3b3238336625202c,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x5f5b202c3937336c,0x415f645f524c395a,0x665f536650444342,0x5f6d617261705f6d\n"
".quad 0x636f6c2e0a3b5d33,0x2037353233203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c383431,0x336c7225202c3131,0x356c7225202c3937,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3737336c72,0x5f645f524c395a5f,0x5f53665044434241\n"
".quad 0x6d617261705f6d66,0x7476630a3b5d315f,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x202c3934316c7225,0x0a3b3737336c7225,0x203436622e6c6873,0x202c3035316c7225\n"
".quad 0x202c3834316c7225,0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3135\n"
".quad 0x0a3b3233202c3035,0x33203220636f6c2e,0x68730a3120373133,0x7225203436622e6c\n"
".quad 0x7225202c3235316c,0x3b32202c3135316c,0x3436732e6464610a,0x2c3335316c722520\n"
".quad 0x2c3934316c722520,0x3b3235316c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3335316c7225,0x0a3b393232662520,0x203436732e646461,0x202c3435316c7225\n"
".quad 0x34202c31316c7225,0x6f6c2e0a3b363930,0x3239323320322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3535316c,0x7225202c3435316c,0x7225202c3937336c\n"
".quad 0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3635,0x0a3b3233202c3535\n"
".quad 0x203436732e726873,0x202c3735316c7225,0x202c3635316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2032393233203220,0x36622e6c68730a31,0x3835316c72252034,0x3735316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c393531,0x6c7225202c393431\n"
".quad 0x6f6c2e0a3b383531,0x3831333320322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3935316c72255b20,0x3633326625202c5d,0x36732e6464610a3b,0x3036316c72252034\n"
".quad 0x2c31316c7225202c,0x2e0a3b3239313820,0x3233203220636f6c,0x64616d0a31203339\n"
".quad 0x203436732e6f6c2e,0x202c3136316c7225,0x202c3036316c7225,0x202c3937336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3236316c,0x3233202c3136316c\n"
".quad 0x36732e7268730a3b,0x3336316c72252034,0x3236316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x393233203220636f,0x2e6c68730a312033,0x316c722520343662,0x316c7225202c3436\n"
".quad 0x610a3b32202c3336,0x25203436732e6464,0x25202c3536316c72,0x25202c3934316c72\n"
".quad 0x2e0a3b3436316c72,0x3333203220636f6c,0x2e74730a31203931,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x326625202c5d3536,0x2e6464610a3b3434,0x316c722520343673\n"
".quad 0x316c7225202c3636,0x3838323231202c31,0x3220636f6c2e0a3b,0x0a31203439323320\n"
".quad 0x732e6f6c2e64616d,0x36316c7225203436,0x36316c7225202c37,0x37336c7225202c36\n"
".quad 0x3b356c7225202c39,0x3436622e6c68730a,0x2c3836316c722520,0x2c3736316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c393631,0x3b3233202c383631\n"
".quad 0x203220636f6c2e0a,0x730a312034393233,0x25203436622e6c68,0x25202c3037316c72\n"
".quad 0x32202c3936316c72,0x36732e6464610a3b,0x3137316c72252034,0x3934316c7225202c\n"
".quad 0x3037316c7225202c,0x3220636f6c2e0a3b,0x0a31203032333320,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3137316c72,0x610a3b3834326625,0x25203436732e6464\n"
".quad 0x25202c3237316c72,0x3631202c31316c72,0x6f6c2e0a3b343833,0x3539323320322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3337316c,0x7225202c3237316c\n"
".quad 0x7225202c3937336c,0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3437\n"
".quad 0x0a3b3233202c3337,0x203436732e726873,0x202c3537316c7225,0x202c3437316c7225\n"
".quad 0x636f6c2e0a3b3233,0x2035393233203220,0x36622e6c68730a31,0x3637316c72252034\n"
".quad 0x3537316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c373731\n"
".quad 0x6c7225202c393431,0x6f6c2e0a3b363731,0x3132333320322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x3737316c72255b20,0x3435326625202c5d,0x36732e6464610a3b\n"
".quad 0x3837316c72252034,0x2c31316c7225202c,0x0a3b303834303220,0x33203220636f6c2e\n"
".quad 0x616d0a3120363932,0x3436732e6f6c2e64,0x2c3937316c722520,0x2c3837316c722520\n"
".quad 0x2c3937336c722520,0x730a3b356c722520,0x25203436622e6c68,0x25202c3038316c72\n"
".quad 0x33202c3937316c72,0x732e7268730a3b32,0x38316c7225203436,0x38316c7225202c31\n"
".quad 0x2e0a3b3233202c30,0x3233203220636f6c,0x6c68730a31203639,0x6c7225203436622e\n"
".quad 0x6c7225202c323831,0x0a3b32202c313831,0x203436732e646461,0x202c3338316c7225\n"
".quad 0x202c3934316c7225,0x0a3b3238316c7225,0x33203220636f6c2e,0x74730a3120323233\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d333831,0x6464610a3b363632\n"
".quad 0x6c7225203436732e,0x6c7225202c343831,0x37353432202c3131,0x20636f6c2e0a3b36\n"
".quad 0x3120373932332032,0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3538\n"
".quad 0x336c7225202c3438,0x356c7225202c3937,0x36622e6c68730a3b,0x3638316c72252034\n"
".quad 0x3538316c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3738316c\n"
".quad 0x3233202c3638316c,0x3220636f6c2e0a3b,0x0a31203739323320,0x203436622e6c6873\n"
".quad 0x202c3838316c7225,0x202c3738316c7225,0x732e6464610a3b32,0x38316c7225203436\n"
".quad 0x34316c7225202c39,0x38316c7225202c39,0x20636f6c2e0a3b38,0x3120333233332032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3938316c7225,0x0a3b393732662520\n"
".quad 0x203436732e646461,0x202c3039316c7225,0x32202c31316c7225,0x6c2e0a3b32373638\n"
".quad 0x393233203220636f,0x2e64616d0a312038,0x25203436732e6f6c,0x25202c3139316c72\n"
".quad 0x25202c3039316c72,0x25202c3937336c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c323931,0x3b3233202c313931,0x3436732e7268730a,0x2c3339316c722520\n"
".quad 0x2c3239316c722520,0x6f6c2e0a3b323320,0x3839323320322063,0x622e6c68730a3120\n"
".quad 0x39316c7225203436,0x39316c7225202c34,0x64610a3b32202c33,0x7225203436732e64\n"
".quad 0x7225202c3539316c,0x7225202c3934316c,0x6c2e0a3b3439316c,0x323333203220636f\n"
".quad 0x672e74730a312034,0x33662e6c61626f6c,0x39316c72255b2032,0x38326625202c5d35\n"
".quad 0x732e6464610a3b39,0x39316c7225203436,0x31316c7225202c36,0x3b3836373233202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312039393233,0x36732e6f6c2e6461,0x3739316c72252034\n"
".quad 0x3639316c7225202c,0x3937336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3839316c7225,0x202c3739316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3939,0x0a3b3233202c3839,0x33203220636f6c2e,0x68730a3120393932\n"
".quad 0x7225203436622e6c,0x7225202c3030326c,0x3b32202c3939316c,0x3436732e6464610a\n"
".quad 0x2c3130326c722520,0x2c3934316c722520,0x3b3030326c722520,0x203220636f6c2e0a\n"
".quad 0x730a312035323333,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3130326c\n"
".quad 0x64610a3b38393266,0x7225203436732e64,0x7225202c3230326c,0x383633202c31316c\n"
".quad 0x636f6c2e0a3b3436,0x2030303333203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c333032,0x6c7225202c323032,0x6c7225202c393733,0x622e6c68730a3b35\n"
".quad 0x30326c7225203436,0x30326c7225202c34,0x730a3b3233202c33,0x25203436732e7268\n"
".quad 0x25202c3530326c72,0x33202c3430326c72,0x20636f6c2e0a3b32,0x3120303033332032\n"
".quad 0x3436622e6c68730a,0x2c3630326c722520,0x2c3530326c722520,0x2e6464610a3b3220\n"
".quad 0x326c722520343673,0x316c7225202c3730,0x326c7225202c3934,0x636f6c2e0a3b3630\n"
".quad 0x2036323333203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3730326c72255b\n"
".quad 0x3b3630336625202c,0x3436732e6464610a,0x2c3830326c722520,0x202c31316c722520\n"
".quad 0x2e0a3b3036393034,0x3333203220636f6c,0x64616d0a31203130,0x203436732e6f6c2e\n"
".quad 0x202c3930326c7225,0x202c3830326c7225,0x202c3937336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3031326c,0x3233202c3930326c,0x36732e7268730a3b\n"
".quad 0x3131326c72252034,0x3031326c7225202c,0x6c2e0a3b3233202c,0x303333203220636f\n"
".quad 0x2e6c68730a312031,0x326c722520343662,0x326c7225202c3231,0x610a3b32202c3131\n"
".quad 0x25203436732e6464,0x25202c3331326c72,0x25202c3934316c72,0x2e0a3b3231326c72\n"
".quad 0x3333203220636f6c,0x2e74730a31203732,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x336625202c5d3331,0x2e6464610a3b3631,0x326c722520343673,0x316c7225202c3431\n"
".quad 0x3635303534202c31,0x3220636f6c2e0a3b,0x0a31203230333320,0x732e6f6c2e64616d\n"
".quad 0x31326c7225203436,0x31326c7225202c35,0x37336c7225202c34,0x3b356c7225202c39\n"
".quad 0x3436622e6c68730a,0x2c3631326c722520,0x2c3531326c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c373132,0x3b3233202c363132,0x203220636f6c2e0a\n"
".quad 0x730a312032303333,0x25203436622e6c68,0x25202c3831326c72,0x32202c3731326c72\n"
".quad 0x36732e6464610a3b,0x3931326c72252034,0x3934316c7225202c,0x3831326c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203832333320,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3931326c72,0x610a3b3532336625,0x25203436732e6464,0x25202c3032326c72\n"
".quad 0x3934202c31316c72,0x6f6c2e0a3b323531,0x3330333320322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3132326c,0x7225202c3032326c,0x7225202c3937336c\n"
".quad 0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3232,0x0a3b3233202c3132\n"
".quad 0x203436732e726873,0x202c3332326c7225,0x202c3232326c7225,0x636f6c2e0a3b3233\n"
".quad 0x2033303333203220,0x36622e6c68730a31,0x3432326c72252034,0x3332326c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c353232,0x6c7225202c393431\n"
".quad 0x6f6c2e0a3b343232,0x3932333320322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3532326c72255b20,0x3533336625202c5d,0x36732e6464610a3b,0x3632326c72252034\n"
".quad 0x2c31316c7225202c,0x0a3b383432333520,0x33203220636f6c2e,0x616d0a3120343033\n"
".quad 0x3436732e6f6c2e64,0x2c3732326c722520,0x2c3632326c722520,0x2c3937336c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3832326c72,0x33202c3732326c72\n"
".quad 0x732e7268730a3b32,0x32326c7225203436,0x32326c7225202c39,0x2e0a3b3233202c38\n"
".quad 0x3333203220636f6c,0x6c68730a31203430,0x6c7225203436622e,0x6c7225202c303332\n"
".quad 0x0a3b32202c393232,0x203436732e646461,0x202c3133326c7225,0x202c3934316c7225\n"
".quad 0x0a3b3033326c7225,0x33203220636f6c2e,0x74730a3120303333,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d313332,0x6464610a3b343433,0x6c7225203436732e\n"
".quad 0x6c7225202c323332,0x34333735202c3131,0x20636f6c2e0a3b34,0x3120353033332032\n"
".quad 0x2e6f6c2e64616d0a,0x326c722520343673,0x326c7225202c3333,0x336c7225202c3233\n"
".quad 0x356c7225202c3937,0x36622e6c68730a3b,0x3433326c72252034,0x3333326c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3533326c,0x3233202c3433326c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203530333320,0x203436622e6c6873,0x202c3633326c7225\n"
".quad 0x202c3533326c7225,0x732e6464610a3b32,0x33326c7225203436,0x34316c7225202c37\n"
".quad 0x33326c7225202c39,0x20636f6c2e0a3b36,0x3120313333332032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3733326c7225,0x0a3b303533662520,0x203436732e646461\n"
".quad 0x202c3833326c7225,0x36202c31316c7225,0x6c2e0a3b30343431,0x303333203220636f\n"
".quad 0x2e64616d0a312036,0x25203436732e6f6c,0x25202c3933326c72,0x25202c3833326c72\n"
".quad 0x25202c3937336c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c303432\n"
".quad 0x3b3233202c393332,0x3436732e7268730a,0x2c3134326c722520,0x2c3034326c722520\n"
".quad 0x6f6c2e0a3b323320,0x3630333320322063,0x622e6c68730a3120,0x34326c7225203436\n"
".quad 0x34326c7225202c32,0x64610a3b32202c31,0x7225203436732e64,0x7225202c3334326c\n"
".quad 0x7225202c3934316c,0x6c2e0a3b3234326c,0x333333203220636f,0x672e74730a312032\n"
".quad 0x33662e6c61626f6c,0x34326c72255b2032,0x36336625202c5d33,0x732e6464610a3b30\n"
".quad 0x34326c7225203436,0x31316c7225202c34,0x3b3633353536202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312037303333,0x36732e6f6c2e6461,0x3534326c72252034,0x3434326c7225202c\n"
".quad 0x3937336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3634326c7225\n"
".quad 0x202c3534326c7225,0x2e7268730a3b3233,0x326c722520343673,0x326c7225202c3734\n"
".quad 0x0a3b3233202c3634,0x33203220636f6c2e,0x68730a3120373033,0x7225203436622e6c\n"
".quad 0x7225202c3834326c,0x3b32202c3734326c,0x3436732e6464610a,0x2c3934326c722520\n"
".quad 0x2c3934316c722520,0x3b3834326c722520,0x203220636f6c2e0a,0x730a312033333333\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3934326c,0x64610a3b37363366\n"
".quad 0x7225203436732e64,0x7225202c3035326c,0x363936202c31316c,0x636f6c2e0a3b3233\n"
".quad 0x2038303333203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c313532\n"
".quad 0x6c7225202c303532,0x6c7225202c393733,0x622e6c68730a3b35,0x35326c7225203436\n"
".quad 0x35326c7225202c32,0x730a3b3233202c31,0x25203436732e7268,0x25202c3335326c72\n"
".quad 0x33202c3235326c72,0x20636f6c2e0a3b32,0x3120383033332032,0x3436622e6c68730a\n"
".quad 0x2c3435326c722520,0x2c3335326c722520,0x2e6464610a3b3220,0x326c722520343673\n"
".quad 0x316c7225202c3535,0x326c7225202c3934,0x636f6c2e0a3b3435,0x2034333333203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3535326c72255b,0x3b3637336625202c\n"
".quad 0x3436732e6464610a,0x2c3635326c722520,0x202c31316c722520,0x2e0a3b3832373337\n"
".quad 0x3333203220636f6c,0x64616d0a31203930,0x203436732e6f6c2e,0x202c3735326c7225\n"
".quad 0x202c3635326c7225,0x202c3937336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3835326c,0x3233202c3735326c,0x36732e7268730a3b,0x3935326c72252034\n"
".quad 0x3835326c7225202c,0x6c2e0a3b3233202c,0x303333203220636f,0x2e6c68730a312039\n"
".quad 0x326c722520343662,0x326c7225202c3036,0x610a3b32202c3935,0x25203436732e6464\n"
".quad 0x25202c3136326c72,0x25202c3934316c72,0x2e0a3b3036326c72,0x3333203220636f6c\n"
".quad 0x2e74730a31203533,0x662e6c61626f6c67,0x326c72255b203233,0x336625202c5d3136\n"
".quad 0x636f6c2e0a3b3338,0x2038333333203220,0x0a0a3b7465720a32,0x0a3a365f37324242\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x5a5f5b202c383733,0x42415f645f524c39\n"
".quad 0x6d665f5366504443,0x335f6d617261705f,0x20636f6c2e0a3b5d,0x3120323932332032\n"
".quad 0x2e6f6c2e64616d0a,0x326c722520343673,0x316c7225202c3736,0x37336c7225202c37\n"
".quad 0x3b356c7225202c38,0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3637336c\n"
".quad 0x415f645f524c395a,0x665f536650444342,0x5f6d617261705f6d,0x617476630a3b5d31\n"
".quad 0x626f6c672e6f742e,0x25203436752e6c61,0x25202c3836326c72,0x730a3b3637336c72\n"
".quad 0x25203436622e6c68,0x25202c3936326c72,0x33202c3736326c72,0x732e7268730a3b32\n"
".quad 0x37326c7225203436,0x36326c7225202c30,0x2e0a3b3233202c39,0x3233203220636f6c\n"
".quad 0x6c68730a31203239,0x6c7225203436622e,0x6c7225202c313732,0x0a3b32202c303732\n"
".quad 0x203436732e646461,0x202c3237326c7225,0x202c3836326c7225,0x0a3b3137326c7225\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3237326c72,0x6464610a3b346625\n"
".quad 0x6c7225203436732e,0x6c7225202c333732,0x32393138202c3631,0x3220636f6c2e0a3b\n"
".quad 0x0a31203339323320,0x732e6f6c2e64616d,0x37326c7225203436,0x37326c7225202c34\n"
".quad 0x37336c7225202c33,0x3b356c7225202c38,0x3436622e6c68730a,0x2c3537326c722520\n"
".quad 0x2c3437326c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c363732\n"
".quad 0x3b3233202c353732,0x203220636f6c2e0a,0x730a312033393233,0x25203436622e6c68\n"
".quad 0x25202c3737326c72,0x32202c3637326c72,0x36732e6464610a3b,0x3837326c72252034\n"
".quad 0x3836326c7225202c,0x3737326c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x5d3837326c72255b,0x2e0a3b386625202c,0x3233203220636f6c,0x64616d0a31203439\n"
".quad 0x203436732e6f6c2e,0x202c3038326c7225,0x25202c35326c7225,0x25202c3837336c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c313832,0x3b3233202c303832\n"
".quad 0x3436732e7268730a,0x2c3238326c722520,0x2c3138326c722520,0x6f6c2e0a3b323320\n"
".quad 0x3439323320322063,0x622e6c68730a3120,0x38326c7225203436,0x38326c7225202c33\n"
".quad 0x64610a3b32202c32,0x7225203436732e64,0x7225202c3438326c,0x7225202c3836326c\n"
".quad 0x74730a3b3338326c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d343832\n"
".quad 0x732e6464610a3b33,0x38326c7225203436,0x36316c7225202c35,0x3b3438333631202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312035393233,0x36732e6f6c2e6461,0x3638326c72252034\n"
".quad 0x3538326c7225202c,0x3837336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3738326c7225,0x202c3638326c7225,0x2e7268730a3b3233,0x326c722520343673\n"
".quad 0x326c7225202c3838,0x0a3b3233202c3738,0x33203220636f6c2e,0x68730a3120353932\n"
".quad 0x7225203436622e6c,0x7225202c3938326c,0x3b32202c3838326c,0x3436732e6464610a\n"
".quad 0x2c3039326c722520,0x2c3836326c722520,0x3b3938326c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3039326c7225,0x64610a3b35662520,0x7225203436732e64\n"
".quad 0x7225202c3139326c,0x343032202c36316c,0x636f6c2e0a3b3038,0x2036393233203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c323932,0x6c7225202c313932\n"
".quad 0x6c7225202c383733,0x622e6c68730a3b35,0x39326c7225203436,0x39326c7225202c33\n"
".quad 0x730a3b3233202c32,0x25203436732e7268,0x25202c3439326c72,0x33202c3339326c72\n"
".quad 0x20636f6c2e0a3b32,0x3120363932332032,0x3436622e6c68730a,0x2c3539326c722520\n"
".quad 0x2c3439326c722520,0x2e6464610a3b3220,0x326c722520343673,0x326c7225202c3639\n"
".quad 0x326c7225202c3836,0x672e74730a3b3539,0x33662e6c61626f6c,0x39326c72255b2032\n"
".quad 0x3b396625202c5d36,0x3436732e6464610a,0x2c3739326c722520,0x202c36316c722520\n"
".quad 0x2e0a3b3637353432,0x3233203220636f6c,0x64616d0a31203739,0x203436732e6f6c2e\n"
".quad 0x202c3839326c7225,0x202c3739326c7225,0x202c3837336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3939326c,0x3233202c3839326c,0x36732e7268730a3b\n"
".quad 0x3030336c72252034,0x3939326c7225202c,0x6c2e0a3b3233202c,0x393233203220636f\n"
".quad 0x2e6c68730a312037,0x336c722520343662,0x336c7225202c3130,0x610a3b32202c3030\n"
".quad 0x25203436732e6464,0x25202c3230336c72,0x25202c3836326c72,0x730a3b3130336c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3230336c,0x6464610a3b303166\n"
".quad 0x6c7225203436732e,0x6c7225202c333033,0x37363832202c3631,0x20636f6c2e0a3b32\n"
".quad 0x3120383932332032,0x2e6f6c2e64616d0a,0x336c722520343673,0x336c7225202c3430\n"
".quad 0x336c7225202c3330,0x356c7225202c3837,0x36622e6c68730a3b,0x3530336c72252034\n"
".quad 0x3430336c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3630336c\n"
".quad 0x3233202c3530336c,0x3220636f6c2e0a3b,0x0a31203839323320,0x203436622e6c6873\n"
".quad 0x202c3730336c7225,0x202c3630336c7225,0x732e6464610a3b32,0x30336c7225203436\n"
".quad 0x36326c7225202c38,0x30336c7225202c38,0x6c672e74730a3b37,0x3233662e6c61626f\n"
".quad 0x3830336c72255b20,0x0a3b366625202c5d,0x203436732e646461,0x202c3930336c7225\n"
".quad 0x33202c36316c7225,0x6c2e0a3b38363732,0x393233203220636f,0x2e64616d0a312039\n"
".quad 0x25203436732e6f6c,0x25202c3031336c72,0x25202c3930336c72,0x25202c3837336c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c313133,0x3b3233202c303133\n"
".quad 0x3436732e7268730a,0x2c3231336c722520,0x2c3131336c722520,0x6f6c2e0a3b323320\n"
".quad 0x3939323320322063,0x622e6c68730a3120,0x31336c7225203436,0x31336c7225202c33\n"
".quad 0x64610a3b32202c32,0x7225203436732e64,0x7225202c3431336c,0x7225202c3836326c\n"
".quad 0x74730a3b3331336c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d343133\n"
".quad 0x732e6464610a3b37,0x31336c7225203436,0x36316c7225202c35,0x3b3436383633202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312030303333,0x36732e6f6c2e6461,0x3631336c72252034\n"
".quad 0x3531336c7225202c,0x3837336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3731336c7225,0x202c3631336c7225,0x2e7268730a3b3233,0x336c722520343673\n"
".quad 0x336c7225202c3831,0x0a3b3233202c3731,0x33203220636f6c2e,0x68730a3120303033\n"
".quad 0x7225203436622e6c,0x7225202c3931336c,0x3b32202c3831336c,0x3436732e6464610a\n"
".quad 0x2c3032336c722520,0x2c3836326c722520,0x3b3931336c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3032336c7225,0x610a3b3631662520,0x25203436732e6464\n"
".quad 0x25202c3132336c72,0x3034202c36316c72,0x6f6c2e0a3b303639,0x3130333320322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3232336c,0x7225202c3132336c\n"
".quad 0x7225202c3837336c,0x2e6c68730a3b356c,0x336c722520343662,0x336c7225202c3332\n"
".quad 0x0a3b3233202c3232,0x203436732e726873,0x202c3432336c7225,0x202c3332336c7225\n"
".quad 0x636f6c2e0a3b3233,0x2031303333203220,0x36622e6c68730a31,0x3532336c72252034\n"
".quad 0x3432336c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c363233\n"
".quad 0x6c7225202c383632,0x2e74730a3b353233,0x662e6c61626f6c67,0x336c72255b203233\n"
".quad 0x316625202c5d3632,0x732e6464610a3b39,0x32336c7225203436,0x36316c7225202c37\n"
".quad 0x3b3635303534202c,0x203220636f6c2e0a,0x6d0a312032303333,0x36732e6f6c2e6461\n"
".quad 0x3832336c72252034,0x3732336c7225202c,0x3837336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3932336c7225,0x202c3832336c7225,0x2e7268730a3b3233\n"
".quad 0x336c722520343673,0x336c7225202c3033,0x0a3b3233202c3932,0x33203220636f6c2e\n"
".quad 0x68730a3120323033,0x7225203436622e6c,0x7225202c3133336c,0x3b32202c3033336c\n"
".quad 0x3436732e6464610a,0x2c3233336c722520,0x2c3836326c722520,0x3b3133336c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3233336c7225,0x610a3b3032662520\n"
".quad 0x25203436732e6464,0x25202c3333336c72,0x3934202c36316c72,0x6f6c2e0a3b323531\n"
".quad 0x3330333320322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3433336c\n"
".quad 0x7225202c3333336c,0x7225202c3837336c,0x2e6c68730a3b356c,0x336c722520343662\n"
".quad 0x336c7225202c3533,0x0a3b3233202c3433,0x203436732e726873,0x202c3633336c7225\n"
".quad 0x202c3533336c7225,0x636f6c2e0a3b3233,0x2033303333203220,0x36622e6c68730a31\n"
".quad 0x3733336c72252034,0x3633336c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c383333,0x6c7225202c383632,0x2e74730a3b373333,0x662e6c61626f6c67\n"
".quad 0x336c72255b203233,0x316625202c5d3833,0x732e6464610a3b37,0x33336c7225203436\n"
".quad 0x36316c7225202c39,0x3b3834323335202c,0x203220636f6c2e0a,0x6d0a312034303333\n"
".quad 0x36732e6f6c2e6461,0x3034336c72252034,0x3933336c7225202c,0x3837336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3134336c7225,0x202c3034336c7225\n"
".quad 0x2e7268730a3b3233,0x336c722520343673,0x336c7225202c3234,0x0a3b3233202c3134\n"
".quad 0x33203220636f6c2e,0x68730a3120343033,0x7225203436622e6c,0x7225202c3334336c\n"
".quad 0x3b32202c3234336c,0x3436732e6464610a,0x2c3434336c722520,0x2c3836326c722520\n"
".quad 0x3b3334336c722520,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3434336c7225\n"
".quad 0x610a3b3831662520,0x25203436732e6464,0x25202c3534336c72,0x3735202c36316c72\n"
".quad 0x6f6c2e0a3b343433,0x3530333320322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3634336c,0x7225202c3534336c,0x7225202c3837336c,0x2e6c68730a3b356c\n"
".quad 0x336c722520343662,0x336c7225202c3734,0x0a3b3233202c3634,0x203436732e726873\n"
".quad 0x202c3834336c7225,0x202c3734336c7225,0x636f6c2e0a3b3233,0x2035303333203220\n"
".quad 0x36622e6c68730a31,0x3934336c72252034,0x3834336c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c303533,0x6c7225202c383632,0x2e74730a3b393433\n"
".quad 0x662e6c61626f6c67,0x336c72255b203233,0x316625202c5d3035,0x732e6464610a3b31\n"
".quad 0x35336c7225203436,0x36316c7225202c31,0x3b3034343136202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312036303333,0x36732e6f6c2e6461,0x3235336c72252034,0x3135336c7225202c\n"
".quad 0x3837336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3335336c7225\n"
".quad 0x202c3235336c7225,0x2e7268730a3b3233,0x336c722520343673,0x336c7225202c3435\n"
".quad 0x0a3b3233202c3335,0x33203220636f6c2e,0x68730a3120363033,0x7225203436622e6c\n"
".quad 0x7225202c3535336c,0x3b32202c3435336c,0x3436732e6464610a,0x2c3635336c722520\n"
".quad 0x2c3836326c722520,0x3b3535336c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3635336c7225,0x610a3b3431662520,0x25203436732e6464,0x25202c3735336c72\n"
".quad 0x3536202c36316c72,0x6f6c2e0a3b363335,0x3730333320322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3835336c,0x7225202c3735336c,0x7225202c3837336c\n"
".quad 0x2e6c68730a3b356c,0x336c722520343662,0x336c7225202c3935,0x0a3b3233202c3835\n"
".quad 0x203436732e726873,0x202c3036336c7225,0x202c3935336c7225,0x636f6c2e0a3b3233\n"
".quad 0x2037303333203220,0x36622e6c68730a31,0x3136336c72252034,0x3036336c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c323633,0x6c7225202c383632\n"
".quad 0x2e74730a3b313633,0x662e6c61626f6c67,0x336c72255b203233,0x316625202c5d3236\n"
".quad 0x732e6464610a3b35,0x36336c7225203436,0x36316c7225202c33,0x3b3233363936202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312038303333,0x36732e6f6c2e6461,0x3436336c72252034\n"
".quad 0x3336336c7225202c,0x3837336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3536336c7225,0x202c3436336c7225,0x2e7268730a3b3233,0x336c722520343673\n"
".quad 0x336c7225202c3636,0x0a3b3233202c3536,0x33203220636f6c2e,0x68730a3120383033\n"
".quad 0x7225203436622e6c,0x7225202c3736336c,0x3b32202c3636336c,0x3436732e6464610a\n"
".quad 0x2c3836336c722520,0x2c3836326c722520,0x3b3736336c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3836336c7225,0x610a3b3231662520,0x25203436732e6464\n"
".quad 0x25202c3936336c72,0x3337202c36316c72,0x6f6c2e0a3b383237,0x3930333320322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3037336c,0x7225202c3936336c\n"
".quad 0x7225202c3837336c,0x2e6c68730a3b356c,0x336c722520343662,0x336c7225202c3137\n"
".quad 0x0a3b3233202c3037,0x203436732e726873,0x202c3237336c7225,0x202c3137336c7225\n"
".quad 0x636f6c2e0a3b3233,0x2039303333203220,0x36622e6c68730a31,0x3337336c72252034\n"
".quad 0x3237336c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c343733\n"
".quad 0x6c7225202c383632,0x2e74730a3b333733,0x662e6c61626f6c67,0x336c72255b203233\n"
".quad 0x316625202c5d3437,0x373242420a0a3b33,0x636f6c2e0a3a375f,0x2038333333203220\n"
".quad 0x7d0a3b7465720a32,0x7972746e652e0a0a,0x645f524c395a5f20,0x536650434442415f\n"
".quad 0x702e0a28666d665f,0x36752e206d617261,0x5f524c395a5f2034,0x6650434442415f64\n"
".quad 0x61705f666d665f53,0x2e0a2c305f6d6172,0x752e206d61726170,0x524c395a5f203436\n"
".quad 0x50434442415f645f,0x705f666d665f5366,0x0a2c315f6d617261,0x2e206d617261702e\n"
".quad 0x4c395a5f20323366,0x434442415f645f52,0x5f666d665f536650,0x2c325f6d61726170\n"
".quad 0x206d617261702e0a,0x395a5f203436752e,0x4442415f645f524c,0x666d665f53665043\n"
".quad 0x335f6d617261705f,0x6d617261702e0a2c,0x5a5f203233662e20,0x42415f645f524c39\n"
".quad 0x6d665f5366504344,0x5f6d617261705f66,0x722e0a7b0a290a34,0x203233662e206765\n"
".quad 0x3b3e3432383c6625,0x702e206765722e0a,0x313c702520646572,0x6765722e0a3b3e33\n"
".quad 0x7225203233732e20,0x2e0a3b3e3635313c,0x3436732e20676572,0x3430353c6c722520\n"
".quad 0x2e646c0a0a0a3b3e,0x36752e6d61726170,0x202c316c72252034,0x645f524c395a5f5b\n"
".quad 0x536650434442415f,0x7261705f666d665f,0x6c0a3b5d305f6d61,0x2e6d617261702e64\n"
".quad 0x326c722520343675,0x524c395a5f5b202c,0x50434442415f645f,0x705f666d665f5366\n"
".quad 0x3b5d315f6d617261,0x617261702e646c0a,0x7225203436752e6d,0x395a5f5b202c336c\n"
".quad 0x4442415f645f524c,0x666d665f53665043,0x335f6d617261705f,0x2e617476630a3b5d\n"
".quad 0x61626f6c672e6f74,0x7225203436752e6c,0x316c7225202c346c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203334333320,0x203233752e766f6d,0x746e25202c367225,0x6f6d0a3b782e6469\n"
".quad 0x7225203233752e76,0x6961746325202c37,0x766f6d0a3b782e64,0x387225203233752e\n"
".quad 0x782e64697425202c,0x6f6c2e64616d0a3b,0x317225203233732e,0x25202c367225202c\n"
".quad 0x3b387225202c3772,0x203220636f6c2e0a,0x6d0a312034343333,0x25203233752e766f\n"
".quad 0x69746e25202c3972,0x766f6d0a3b792e64,0x317225203233752e,0x6961746325202c30\n"
".quad 0x766f6d0a3b792e64,0x317225203233752e,0x2e64697425202c31,0x6c2e64616d0a3b79\n"
".quad 0x7225203233732e6f,0x202c397225202c32,0x7225202c30317225,0x636f6c2e0a3b3131\n"
".quad 0x2035343333203220,0x33752e766f6d0a31,0x202c323172252032,0x3b7a2e6469746e25\n"
".quad 0x3233752e766f6d0a,0x25202c3331722520,0x3b7a2e6469617463,0x3233752e766f6d0a\n"
".quad 0x25202c3431722520,0x6d0a3b7a2e646974,0x33732e6f6c2e6461,0x25202c3372252032\n"
".quad 0x317225202c323172,0x3b34317225202c33,0x203220636f6c2e0a,0x630a312036343333\n"
".quad 0x33662e6e722e7476,0x6625203233732e32,0x3b317225202c3532,0x2e6e722e616d660a\n"
".quad 0x2c33662520323366,0x30202c3532662520,0x3030303030463366,0x3731346630202c30\n"
".quad 0x2e0a3b3030303043,0x3333203220636f6c,0x7476630a31203734,0x2e3233662e6e722e\n"
".quad 0x3632662520323373,0x660a3b327225202c,0x33662e6e722e616d,0x25202c3466252032\n"
".quad 0x336630202c363266,0x2c30303030303046,0x3043373134663020,0x6f6c2e0a3b303030\n"
".quad 0x3834333320322063,0x722e7476630a3120,0x33732e3233662e6e,0x202c373266252032\n"
".quad 0x616d660a3b337225,0x203233662e6e722e,0x326625202c356625,0x3046336630202c37\n"
".quad 0x30202c3030303030,0x3030304337313466,0x20636f6c2e0a3b30,0x3520333433312033\n"
".quad 0x697a722e7476630a,0x3233662e3233732e,0x6625202c34722520,0x752e7476630a3b35\n"
".quad 0x25203233752e3436,0x317225202c356c72,0x3220636f6c2e0a3b,0x0a31203135333320\n"
".quad 0x2e3436732e747663,0x366c722520323373,0x730a3b327225202c,0x25203233622e6c68\n"
".quad 0x2c337225202c3572,0x636f6c2e0a3b3620,0x2031353333203220,0x36732e7476630a31\n"
".quad 0x7225203233732e34,0x3b357225202c376c,0x3436732e6464610a,0x202c37316c722520\n"
".quad 0x7225202c376c7225,0x636f6c2e0a3b366c,0x2031353333203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x37316c7225202c38,0x202c336c7225202c,0x64610a3b356c7225\n"
".quad 0x6625203233662e64,0x2c336625202c3832,0x3045373243663020,0x6464610a3b303030\n"
".quad 0x326625203233662e,0x202c346625202c39,0x3030434631436630,0x636f6c2e0a3b3030\n"
".quad 0x0a31203037203220,0x203233662e6c756d,0x6625202c30336625,0x39326625202c3932\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x2c38326625202c31,0x25202c3832662520\n"
".quad 0x6464610a3b303366,0x336625203233662e,0x202c356625202c32,0x3030434631436630\n"
".quad 0x636f6c2e0a3b3030,0x0a31203037203220,0x662e6e722e616d66,0x2c33336625203233\n"
".quad 0x25202c3233662520,0x336625202c323366,0x2e707465730a3b31,0x25203233662e746c\n"
".quad 0x33336625202c3170,0x303831346630202c,0x64610a3b30303030,0x7225203233732e64\n"
".quad 0x2c317225202c3531,0x7465730a3b322d20,0x3233752e74672e70,0x7225202c32702520\n"
".quad 0x0a3b3935202c3531,0x33203220636f6c2e,0x65730a3120313633,0x33732e746c2e7074\n"
".quad 0x25202c3370252032,0x6f0a3b32202c3272,0x2520646572702e72,0x2c327025202c3470\n"
".quad 0x6c2e0a3b33702520,0x363333203220636f,0x707465730a312031,0x203233732e74672e\n"
".quad 0x327225202c357025,0x726f0a3b3136202c,0x702520646572702e,0x202c347025202c36\n"
".quad 0x6f6c2e0a3b357025,0x3136333320322063,0x2e707465730a3120,0x25203233732e746c\n"
".quad 0x2c337225202c3770,0x702e726f0a3b3220,0x2c38702520646572,0x7025202c36702520\n"
".quad 0x20636f6c2e0a3b37,0x3120313633332032,0x74672e707465730a,0x397025203233732e\n"
".quad 0x36202c337225202c,0x72702e726f0a3b31,0x2c30317025206465,0x7025202c38702520\n"
".quad 0x732e6464610a3b39,0x38316c7225203436,0x2c37316c7225202c,0x0a3b383432333520\n"
".quad 0x33203220636f6c2e,0x616d0a3120363534,0x3436732e6f6c2e64,0x202c39316c722520\n"
".quad 0x25202c38316c7225,0x6c7225202c336c72,0x2e617476630a3b35,0x61626f6c672e6f74\n"
".quad 0x7225203436752e6c,0x6c7225202c30326c,0x622e6c68730a3b32,0x31326c7225203436\n"
".quad 0x2c39316c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x326c7225202c3232\n"
".quad 0x2e0a3b3233202c31,0x3433203220636f6c,0x6c68730a31203635,0x6c7225203436622e\n"
".quad 0x326c7225202c3332,0x64610a3b32202c32,0x7225203436732e64,0x326c7225202c396c\n"
".quad 0x33326c7225202c30,0x36732e6464610a3b,0x2c34326c72252034,0x202c37316c722520\n"
".quad 0x2e0a3b3434333735,0x3433203220636f6c,0x64616d0a31203735,0x203436732e6f6c2e\n"
".quad 0x25202c35326c7225,0x7225202c34326c72,0x356c7225202c336c,0x36622e6c68730a3b\n"
".quad 0x2c36326c72252034,0x202c35326c722520,0x2e7268730a3b3233,0x326c722520343673\n"
".quad 0x36326c7225202c37,0x6c2e0a3b3233202c,0x353433203220636f,0x2e6c68730a312037\n"
".quad 0x326c722520343662,0x37326c7225202c38,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x326c7225202c3031,0x38326c7225202c30,0x36732e6464610a3b,0x2c39326c72252034\n"
".quad 0x202c37316c722520,0x2e0a3b3034343136,0x3433203220636f6c,0x64616d0a31203835\n"
".quad 0x203436732e6f6c2e,0x25202c30336c7225,0x7225202c39326c72,0x356c7225202c336c\n"
".quad 0x36622e6c68730a3b,0x2c31336c72252034,0x202c30336c722520,0x2e7268730a3b3233\n"
".quad 0x336c722520343673,0x31336c7225202c32,0x6c2e0a3b3233202c,0x353433203220636f\n"
".quad 0x2e6c68730a312038,0x336c722520343662,0x32336c7225202c33,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x326c7225202c3131,0x33336c7225202c30,0x36732e6464610a3b\n"
".quad 0x2c34336c72252034,0x202c37316c722520,0x2e0a3b3633353536,0x3433203220636f6c\n"
".quad 0x64616d0a31203935,0x203436732e6f6c2e,0x25202c35336c7225,0x7225202c34336c72\n"
".quad 0x356c7225202c336c,0x36622e6c68730a3b,0x2c36336c72252034,0x202c35336c722520\n"
".quad 0x2e7268730a3b3233,0x336c722520343673,0x36336c7225202c37,0x6c2e0a3b3233202c\n"
".quad 0x353433203220636f,0x2e6c68730a312039,0x336c722520343662,0x37336c7225202c38\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x326c7225202c3231,0x38336c7225202c30\n"
".quad 0x36732e6464610a3b,0x2c39336c72252034,0x202c37316c722520,0x2e0a3b3233363936\n"
".quad 0x3433203220636f6c,0x64616d0a31203036,0x203436732e6f6c2e,0x25202c30346c7225\n"
".quad 0x7225202c39336c72,0x356c7225202c336c,0x36622e6c68730a3b,0x2c31346c72252034\n"
".quad 0x202c30346c722520,0x2e7268730a3b3233,0x346c722520343673,0x31346c7225202c32\n"
".quad 0x6c2e0a3b3233202c,0x363433203220636f,0x2e6c68730a312030,0x346c722520343662\n"
".quad 0x32346c7225202c33,0x6464610a3b32202c,0x6c7225203436732e,0x326c7225202c3331\n"
".quad 0x33346c7225202c30,0x36732e6464610a3b,0x2c34346c72252034,0x202c37316c722520\n"
".quad 0x2e0a3b3832373337,0x3433203220636f6c,0x64616d0a31203136,0x203436732e6f6c2e\n"
".quad 0x25202c35346c7225,0x7225202c34346c72,0x356c7225202c336c,0x36622e6c68730a3b\n"
".quad 0x2c36346c72252034,0x202c35346c722520,0x2e7268730a3b3233,0x346c722520343673\n"
".quad 0x36346c7225202c37,0x6c2e0a3b3233202c,0x363433203220636f,0x2e6c68730a312031\n"
".quad 0x346c722520343662,0x37346c7225202c38,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x326c7225202c3431,0x38346c7225202c30,0x3220636f6c2e0a3b,0x0a31203136333320\n"
".quad 0x7262203031702540,0x375f383242422061,0x622e6c68730a0a3b,0x39346c7225203436\n"
".quad 0x202c386c7225202c,0x2e7268730a3b3233,0x356c722520343673,0x39346c7225202c30\n"
".quad 0x6c2e0a3b3233202c,0x363433203220636f,0x2e6c68730a312034,0x356c722520343662\n"
".quad 0x30356c7225202c31,0x6464610a3b32202c,0x6c7225203436732e,0x346c7225202c3235\n"
".quad 0x3b31356c7225202c,0x626f6c672e646c0a,0x25203233662e6c61,0x6c72255b202c3666\n"
".quad 0x6464610a3b5d3235,0x317225203233732e,0x202c317225202c37,0x2e7476630a3b312d\n"
".quad 0x203233752e343675,0x25202c33356c7225,0x6464610a3b373172,0x6c7225203436732e\n"
".quad 0x366c7225202c3435,0x0a3b376c7225202c,0x203436732e646461,0x25202c35356c7225\n"
".quad 0x3034202c34356c72,0x702e646c0a3b3639,0x3436752e6d617261,0x2c3230356c722520\n"
".quad 0x5f524c395a5f5b20,0x6650434442415f64,0x61705f666d665f53,0x0a3b5d335f6d6172\n"
".quad 0x33203220636f6c2e,0x616d0a3120353634,0x3436732e6f6c2e64,0x202c36356c722520\n"
".quad 0x25202c35356c7225,0x25202c3230356c72,0x68730a3b33356c72,0x7225203436622e6c\n"
".quad 0x6c7225202c37356c,0x0a3b3233202c3635,0x203436732e726873,0x25202c38356c7225\n"
".quad 0x3233202c37356c72,0x3220636f6c2e0a3b,0x0a31203536343320,0x203436622e6c6873\n"
".quad 0x25202c39356c7225,0x3b32202c38356c72,0x3436732e6464610a,0x202c30366c722520\n"
".quad 0x7225202c346c7225,0x2e646c0a3b39356c,0x662e6c61626f6c67,0x202c376625203233\n"
".quad 0x3b5d30366c72255b,0x203220636f6c2e0a,0x610a312036363433,0x25203233732e6464\n"
".quad 0x317225202c393172,0x7476630a3b31202c,0x3233752e3436752e,0x202c31366c722520\n"
".quad 0x64610a3b39317225,0x7225203436732e64,0x6c7225202c32366c,0x38323231202c3435\n"
".quad 0x20636f6c2e0a3b38,0x3120363634332032,0x2e6f6c2e64616d0a,0x366c722520343673\n"
".quad 0x32366c7225202c33,0x3230356c7225202c,0x3b31366c7225202c,0x3436622e6c68730a\n"
".quad 0x202c34366c722520,0x33202c33366c7225,0x732e7268730a3b32,0x35366c7225203436\n"
".quad 0x2c34366c7225202c,0x6f6c2e0a3b323320,0x3636343320322063,0x622e6c68730a3120\n"
".quad 0x36366c7225203436,0x2c35366c7225202c,0x2e6464610a3b3220,0x366c722520343673\n"
".quad 0x2c346c7225202c37,0x0a3b36366c722520,0x61626f6c672e646c,0x6625203233662e6c\n"
".quad 0x366c72255b202c38,0x2e6464610a3b5d37,0x3132722520323373,0x2d202c327225202c\n"
".quad 0x20636f6c2e0a3b31,0x3120373634332032,0x3436732e7476630a,0x6c7225203233732e\n"
".quad 0x31327225202c3836,0x36732e6464610a3b,0x2c39366c72252034,0x202c38366c722520\n"
".quad 0x64610a3b376c7225,0x7225203436732e64,0x6c7225202c30376c,0x32393138202c3936\n"
".quad 0x3220636f6c2e0a3b,0x0a31203736343320,0x732e6f6c2e64616d,0x31376c7225203436\n"
".quad 0x2c30376c7225202c,0x2c3230356c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x7225202c32376c72,0x3b3233202c31376c,0x3436732e7268730a,0x202c33376c722520\n"
".quad 0x33202c32376c7225,0x20636f6c2e0a3b32,0x3120373634332032,0x3436622e6c68730a\n"
".quad 0x202c34376c722520,0x32202c33376c7225,0x36732e6464610a3b,0x2c35376c72252034\n"
".quad 0x25202c346c722520,0x646c0a3b34376c72,0x2e6c61626f6c672e,0x2c39662520323366\n"
".quad 0x5d35376c72255b20,0x36732e6464610a3b,0x2c36376c72252034,0x202c39366c722520\n"
".quad 0x2e0a3b3038343032,0x3433203220636f6c,0x64616d0a31203836,0x203436732e6f6c2e\n"
".quad 0x25202c37376c7225,0x7225202c36376c72,0x7225202c3230356c,0x6c68730a3b33356c\n"
".quad 0x6c7225203436622e,0x376c7225202c3837,0x730a3b3233202c37,0x25203436732e7268\n"
".quad 0x7225202c39376c72,0x3b3233202c38376c,0x203220636f6c2e0a,0x730a312038363433\n"
".quad 0x25203436622e6c68,0x7225202c30386c72,0x0a3b32202c39376c,0x203436732e646461\n"
".quad 0x25202c31386c7225,0x6c7225202c346c72,0x672e646c0a3b3038,0x33662e6c61626f6c\n"
".quad 0x202c303166252032,0x3b5d31386c72255b,0x3436732e6464610a,0x202c32386c722520\n"
".quad 0x32202c39366c7225,0x6c2e0a3b36373534,0x363433203220636f,0x2e64616d0a312039\n"
".quad 0x25203436732e6f6c,0x7225202c33386c72,0x6c7225202c32386c,0x6c7225202c323035\n"
".quad 0x2e6c68730a3b3136,0x386c722520343662,0x33386c7225202c34,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c35386c,0x0a3b3233202c3438,0x33203220636f6c2e\n"
".quad 0x68730a3120393634,0x7225203436622e6c,0x6c7225202c36386c,0x610a3b32202c3538\n"
".quad 0x25203436732e6464,0x7225202c37386c72,0x386c7225202c346c,0x6c672e646c0a3b36\n"
".quad 0x3233662e6c61626f,0x5b202c3131662520,0x0a3b5d37386c7225,0x33203220636f6c2e\n"
".quad 0x64610a3120303734,0x7225203233732e64,0x2c327225202c3532,0x2e7476630a3b3120\n"
".quad 0x203233732e343673,0x25202c38386c7225,0x6464610a3b353272,0x6c7225203436732e\n"
".quad 0x386c7225202c3938,0x3b376c7225202c38,0x3436732e6464610a,0x202c30396c722520\n"
".quad 0x31202c39386c7225,0x6c2e0a3b34383336,0x373433203220636f,0x2e64616d0a312030\n"
".quad 0x25203436732e6f6c,0x7225202c31396c72,0x6c7225202c30396c,0x6c7225202c323035\n"
".quad 0x622e6c68730a3b35,0x32396c7225203436,0x2c31396c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x396c7225202c3339,0x2e0a3b3233202c32,0x3433203220636f6c\n"
".quad 0x6c68730a31203037,0x6c7225203436622e,0x396c7225202c3439,0x64610a3b32202c33\n"
".quad 0x7225203436732e64,0x6c7225202c35396c,0x34396c7225202c34,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x255b202c32316625,0x610a3b5d35396c72,0x25203436732e6464\n"
".quad 0x7225202c36396c72,0x363832202c39386c,0x636f6c2e0a3b3237,0x2031373433203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x396c7225202c3739,0x30356c7225202c36\n"
".quad 0x31366c7225202c32,0x36622e6c68730a3b,0x2c38396c72252034,0x202c37396c722520\n"
".quad 0x2e7268730a3b3233,0x396c722520343673,0x38396c7225202c39,0x6c2e0a3b3233202c\n"
".quad 0x373433203220636f,0x2e6c68730a312031,0x316c722520343662,0x396c7225202c3030\n"
".quad 0x64610a3b32202c39,0x7225203436732e64,0x7225202c3130316c,0x316c7225202c346c\n"
".quad 0x672e646c0a3b3030,0x33662e6c61626f6c,0x202c333166252032,0x5d3130316c72255b\n"
".quad 0x36732e6464610a3b,0x3230316c72252034,0x2c39386c7225202c,0x0a3b383637323320\n"
".quad 0x33203220636f6c2e,0x616d0a3120323734,0x3436732e6f6c2e64,0x2c3330316c722520\n"
".quad 0x2c3230316c722520,0x2c3230356c722520,0x0a3b33356c722520,0x203436622e6c6873\n"
".quad 0x202c3430316c7225,0x202c3330316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3530,0x0a3b3233202c3430,0x33203220636f6c2e,0x68730a3120323734\n"
".quad 0x7225203436622e6c,0x7225202c3630316c,0x3b32202c3530316c,0x3436732e6464610a\n"
".quad 0x2c3730316c722520,0x25202c346c722520,0x6c0a3b3630316c72,0x6c61626f6c672e64\n"
".quad 0x316625203233662e,0x316c72255b202c34,0x6464610a3b5d3730,0x327225203233732e\n"
".quad 0x202c357225202c39,0x6f6c2e0a3b34362d,0x3337343320322063,0x732e7476630a3120\n"
".quad 0x25203233732e3436,0x25202c3830316c72,0x6464610a3b393272,0x6c7225203436732e\n"
".quad 0x6c7225202c393031,0x30316c7225202c36,0x732e6464610a3b38,0x31316c7225203436\n"
".quad 0x30316c7225202c30,0x3436383633202c39,0x3220636f6c2e0a3b,0x0a31203337343320\n"
".quad 0x732e6f6c2e64616d,0x31316c7225203436,0x31316c7225202c31,0x30356c7225202c30\n"
".quad 0x3b356c7225202c32,0x3436622e6c68730a,0x2c3231316c722520,0x2c3131316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c333131,0x3b3233202c323131\n"
".quad 0x203220636f6c2e0a,0x730a312033373433,0x25203436622e6c68,0x25202c3431316c72\n"
".quad 0x32202c3331316c72,0x36732e6464610a3b,0x3531316c72252034,0x202c346c7225202c\n"
".quad 0x0a3b3431316c7225,0x61626f6c672e646c,0x6625203233662e6c,0x6c72255b202c3531\n"
".quad 0x64610a3b5d353131,0x7225203436732e64,0x7225202c3631316c,0x3034202c3930316c\n"
".quad 0x6f6c2e0a3b303639,0x3437343320322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3731316c,0x7225202c3631316c,0x7225202c3230356c,0x6c68730a3b33356c\n"
".quad 0x6c7225203436622e,0x6c7225202c383131,0x3b3233202c373131,0x3436732e7268730a\n"
".quad 0x2c3931316c722520,0x2c3831316c722520,0x6f6c2e0a3b323320,0x3437343320322063\n"
".quad 0x622e6c68730a3120,0x32316c7225203436,0x31316c7225202c30,0x64610a3b32202c39\n"
".quad 0x7225203436732e64,0x7225202c3132316c,0x316c7225202c346c,0x672e646c0a3b3032\n"
".quad 0x33662e6c61626f6c,0x202c363166252032,0x5d3132316c72255b,0x36732e6464610a3b\n"
".quad 0x3232316c72252034,0x2c38366c7225202c,0x3b3830316c722520,0x3436732e6464610a\n"
".quad 0x2c3332316c722520,0x2c3232316c722520,0x0a3b363530353420,0x33203220636f6c2e\n"
".quad 0x616d0a3120353734,0x3436732e6f6c2e64,0x2c3432316c722520,0x2c3332316c722520\n"
".quad 0x2c3230356c722520,0x730a3b356c722520,0x25203436622e6c68,0x25202c3532316c72\n"
".quad 0x33202c3432316c72,0x732e7268730a3b32,0x32316c7225203436,0x32316c7225202c36\n"
".quad 0x2e0a3b3233202c35,0x3433203220636f6c,0x6c68730a31203537,0x6c7225203436622e\n"
".quad 0x6c7225202c373231,0x0a3b32202c363231,0x203436732e646461,0x202c3832316c7225\n"
".quad 0x7225202c346c7225,0x646c0a3b3732316c,0x2e6c61626f6c672e,0x3731662520323366\n"
".quad 0x32316c72255b202c,0x2e6464610a3b5d38,0x316c722520343673,0x316c7225202c3932\n"
".quad 0x35313934202c3930,0x20636f6c2e0a3b32,0x3120363734332032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3033,0x356c7225202c3932,0x366c7225202c3230\n"
".quad 0x622e6c68730a3b31,0x33316c7225203436,0x33316c7225202c31,0x730a3b3233202c30\n"
".quad 0x25203436732e7268,0x25202c3233316c72,0x33202c3133316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120363734332032,0x3436622e6c68730a,0x2c3333316c722520,0x2c3233316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x346c7225202c3433,0x3333316c7225202c\n"
".quad 0x6f6c672e646c0a3b,0x203233662e6c6162,0x255b202c38316625,0x0a3b5d3433316c72\n"
".quad 0x203436732e646461,0x202c3533316c7225,0x25202c38386c7225,0x610a3b3830316c72\n"
".quad 0x25203436732e6464,0x25202c3633316c72,0x35202c3533316c72,0x6c2e0a3b38343233\n"
".quad 0x373433203220636f,0x2e64616d0a312037,0x25203436732e6f6c,0x25202c3733316c72\n"
".quad 0x25202c3633316c72,0x25202c3230356c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c383331,0x3b3233202c373331,0x3436732e7268730a,0x2c3933316c722520\n"
".quad 0x2c3833316c722520,0x6f6c2e0a3b323320,0x3737343320322063,0x622e6c68730a3120\n"
".quad 0x34316c7225203436,0x33316c7225202c30,0x64610a3b32202c39,0x7225203436732e64\n"
".quad 0x7225202c3134316c,0x316c7225202c346c,0x672e646c0a3b3034,0x33662e6c61626f6c\n"
".quad 0x202c393166252032,0x5d3134316c72255b,0x33732e6464610a3b,0x202c353372252032\n"
".quad 0x3b3436202c357225,0x203220636f6c2e0a,0x630a312038373433,0x732e3436732e7476\n"
".quad 0x34316c7225203233,0x3b35337225202c32,0x3436732e6464610a,0x2c3334316c722520\n"
".quad 0x25202c366c722520,0x610a3b3234316c72,0x25203436732e6464,0x25202c3434316c72\n"
".quad 0x35202c3334316c72,0x6c2e0a3b34343337,0x373433203220636f,0x2e64616d0a312038\n"
".quad 0x25203436732e6f6c,0x25202c3534316c72,0x25202c3434316c72,0x25202c3230356c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c363431,0x3b3233202c353431\n"
".quad 0x3436732e7268730a,0x2c3734316c722520,0x2c3634316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3837343320322063,0x622e6c68730a3120,0x34316c7225203436,0x34316c7225202c38\n"
".quad 0x64610a3b32202c37,0x7225203436732e64,0x7225202c3934316c,0x316c7225202c346c\n"
".quad 0x672e646c0a3b3834,0x33662e6c61626f6c,0x202c303266252032,0x5d3934316c72255b\n"
".quad 0x36732e6464610a3b,0x3035316c72252034,0x3334316c7225202c,0x3b3034343136202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312039373433,0x36732e6f6c2e6461,0x3135316c72252034\n"
".quad 0x3035316c7225202c,0x3230356c7225202c,0x3b33356c7225202c,0x3436622e6c68730a\n"
".quad 0x2c3235316c722520,0x2c3135316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c333531,0x3b3233202c323531,0x203220636f6c2e0a,0x730a312039373433\n"
".quad 0x25203436622e6c68,0x25202c3435316c72,0x32202c3335316c72,0x36732e6464610a3b\n"
".quad 0x3535316c72252034,0x202c346c7225202c,0x0a3b3435316c7225,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x6c72255b202c3132,0x64610a3b5d353531,0x7225203436732e64\n"
".quad 0x7225202c3635316c,0x6c7225202c38366c,0x6464610a3b323431,0x6c7225203436732e\n"
".quad 0x6c7225202c373531,0x353536202c363531,0x636f6c2e0a3b3633,0x2030383433203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c383531,0x6c7225202c373531\n"
".quad 0x6c7225202c323035,0x622e6c68730a3b35,0x35316c7225203436,0x35316c7225202c39\n"
".quad 0x730a3b3233202c38,0x25203436732e7268,0x25202c3036316c72,0x33202c3935316c72\n"
".quad 0x20636f6c2e0a3b32,0x3120303834332032,0x3436622e6c68730a,0x2c3136316c722520\n"
".quad 0x2c3036316c722520,0x2e6464610a3b3220,0x316c722520343673,0x346c7225202c3236\n"
".quad 0x3136316c7225202c,0x6f6c672e646c0a3b,0x203233662e6c6162,0x255b202c32326625\n"
".quad 0x0a3b5d3236316c72,0x203436732e646461,0x202c3336316c7225,0x202c3334316c7225\n"
".quad 0x2e0a3b3233363936,0x3433203220636f6c,0x64616d0a31203138,0x203436732e6f6c2e\n"
".quad 0x202c3436316c7225,0x202c3336316c7225,0x202c3230356c7225,0x730a3b31366c7225\n"
".quad 0x25203436622e6c68,0x25202c3536316c72,0x33202c3436316c72,0x732e7268730a3b32\n"
".quad 0x36316c7225203436,0x36316c7225202c36,0x2e0a3b3233202c35,0x3433203220636f6c\n"
".quad 0x6c68730a31203138,0x6c7225203436622e,0x6c7225202c373631,0x0a3b32202c363631\n"
".quad 0x203436732e646461,0x202c3836316c7225,0x7225202c346c7225,0x646c0a3b3736316c\n"
".quad 0x2e6c61626f6c672e,0x3332662520323366,0x36316c72255b202c,0x636f6c2e0a3b5d38\n"
".quad 0x2033383433203220,0x33732e6464610a31,0x202c303472252032,0x0a3b31202c337225\n"
".quad 0x31203220636f6c2e,0x65730a3120303234,0x33732e746c2e7074,0x202c313170252032\n"
".quad 0x3436202c30347225,0x2031317025400a3b,0x3832424220617262,0x766f6d0a0a3b335f\n"
".quad 0x6c7225203436752e,0x333034202c333035,0x752e6172620a3b32,0x5f3832424220696e\n"
".quad 0x383242420a0a3b34,0x2e6c68730a3a335f,0x3634722520323362,0x202c30347225202c\n"
".quad 0x732e7476630a3b36,0x25203233732e3436,0x25202c3330356c72,0x42420a0a3b363472\n"
".quad 0x6c2e0a3a345f3832,0x323431203220636f,0x707465730a312030,0x203233732e746c2e\n"
".quad 0x7225202c32317025,0x0a3b3436202c3532,0x203436732e646461,0x202c3137316c7225\n"
".quad 0x37202c38386c7225,0x65730a3b38323733,0x25203436622e706c,0x25202c3237316c72\n"
".quad 0x37202c3137316c72,0x7025202c31393733,0x2e6464610a3b3231,0x316c722520343673\n"
".quad 0x316c7225202c3337,0x356c7225202c3237,0x2e7476630a3b3330,0x203233752e343675\n"
".quad 0x202c3437316c7225,0x2e646c0a3b317225,0x36752e6d61726170,0x3130356c72252034\n"
".quad 0x524c395a5f5b202c,0x50434442415f645f,0x705f666d665f5366,0x3b5d335f6d617261\n"
".quad 0x203220636f6c2e0a,0x6d0a312033383433,0x36732e6f6c2e6461,0x3537316c72252034\n"
".quad 0x3337316c7225202c,0x3130356c7225202c,0x3437316c7225202c,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3439346c72,0x5f645f524c395a5f,0x5f53665043444241\n"
".quad 0x617261705f666d66,0x76630a3b5d305f6d,0x6c672e6f742e6174,0x3436752e6c61626f\n"
".quad 0x2c3637316c722520,0x3b3439346c722520,0x3436622e6c68730a,0x2c3737316c722520\n"
".quad 0x2c3537316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c383731\n"
".quad 0x3b3233202c373731,0x203220636f6c2e0a,0x730a312033383433,0x25203436622e6c68\n"
".quad 0x25202c3937316c72,0x32202c3837316c72,0x36732e6464610a3b,0x3038316c72252034\n"
".quad 0x3637316c7225202c,0x3937316c7225202c,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x255b202c34326625,0x0a3b5d3038316c72,0x33203220636f6c2e,0x25400a3120363834\n"
".quad 0x4220617262203170,0x0a0a3b365f383242,0x33203220636f6c2e,0x75730a3120383035\n"
".quad 0x6625203233662e62,0x2c376625202c3433,0x64610a3b38662520,0x6625203233662e64\n"
".quad 0x34336625202c3533,0x0a3b30316625202c,0x203233662e627573,0x6625202c36336625\n"
".quad 0x31316625202c3533,0x33662e6275730a3b,0x202c373366252032,0x6625202c36336625\n"
".quad 0x2e6464610a3b3331,0x3833662520323366,0x202c37336625202c,0x64610a3b34316625\n"
".quad 0x6625203233662e64,0x38336625202c3933,0x0a3b36316625202c,0x203233662e627573\n"
".quad 0x6625202c30346625,0x38316625202c3933,0x33662e6464610a3b,0x202c313466252032\n"
".quad 0x6625202c30346625,0x2e6275730a3b3132,0x3234662520323366,0x202c31346625202c\n"
".quad 0x75730a3b33326625,0x6625203233662e62,0x2c396625202c3334,0x610a3b3231662520\n"
".quad 0x25203233662e6464,0x346625202c343466,0x3b30316625202c33,0x3233662e6464610a\n"
".quad 0x25202c3534662520,0x316625202c343466,0x662e6275730a3b31,0x2c36346625203233\n"
".quad 0x25202c3534662520,0x6275730a3b333166,0x346625203233662e,0x2c36346625202c37\n"
".quad 0x610a3b3431662520,0x25203233662e6464,0x346625202c383466,0x3b37316625202c37\n"
".quad 0x3233662e6275730a,0x25202c3934662520,0x316625202c383466,0x662e6464610a3b39\n"
".quad 0x2c30356625203233,0x25202c3934662520,0x6275730a3b323266,0x356625203233662e\n"
".quad 0x2c30356625202c31,0x610a3b3432662520,0x25203233662e6464,0x316625202c323566\n"
".quad 0x3b36316625202c35,0x3233662e6464610a,0x25202c3335662520,0x316625202c323566\n"
".quad 0x662e6464610a3b37,0x2c34356625203233,0x25202c3335662520,0x6464610a3b383166\n"
".quad 0x356625203233662e,0x2c34356625202c35,0x730a3b3931662520,0x25203233662e6275\n"
".quad 0x356625202c363566,0x3b30326625202c35,0x3233662e6275730a,0x25202c3735662520\n"
".quad 0x326625202c363566,0x662e6275730a3b31,0x2c38356625203233,0x25202c3735662520\n"
".quad 0x6275730a3b323266,0x356625203233662e,0x2c38356625202c39,0x730a3b3332662520\n"
".quad 0x25203233662e6275,0x356625202c303666,0x3b34326625202c39,0x3233662e6275730a\n"
".quad 0x25202c3136662520,0x366625202c303166,0x3220636f6c2e0a3b,0x0a31203830353320\n"
".quad 0x203233662e646461,0x6625202c32366625,0x31316625202c3136,0x33662e6464610a3b\n"
".quad 0x202c333666252032,0x6625202c32366625,0x2e6464610a3b3331,0x3436662520323366\n"
".quad 0x202c33366625202c,0x64610a3b34316625,0x6625203233662e64,0x34366625202c3536\n"
".quad 0x0a3b36316625202c,0x203233662e646461,0x6625202c36366625,0x37316625202c3536\n"
".quad 0x33662e6464610a3b,0x202c373666252032,0x6625202c36366625,0x2e6464610a3b3831\n"
".quad 0x3836662520323366,0x202c37366625202c,0x64610a3b39316625,0x6625203233662e64\n"
".quad 0x38366625202c3936,0x0a3b31326625202c,0x203233662e646461,0x6625202c30376625\n"
".quad 0x32326625202c3936,0x33662e6464610a3b,0x202c313766252032,0x6625202c30376625\n"
".quad 0x2e6464610a3b3332,0x3237662520323366,0x202c31376625202c,0x756d0a3b34326625\n"
".quad 0x6625203233662e6c,0x31356625202c3337,0x0a3b31356625202c,0x662e6e722e616d66\n"
".quad 0x2c34376625203233,0x25202c3234662520,0x376625202c323466,0x662e6c756d0a3b33\n"
".quad 0x2c35376625203233,0x25202c3036662520,0x616d660a3b303666,0x203233662e6e722e\n"
".quad 0x6625202c36376625,0x30366625202c3036,0x0a3b34376625202c,0x203233662e627573\n"
".quad 0x6625202c37376625,0x36376625202c3237,0x33662e6c756d0a3b,0x202c383766252032\n"
".quad 0x436630202c376625,0x3b30303030303830,0x2e6e722e616d660a,0x3937662520323366\n"
".quad 0x30202c366625202c,0x3030303034313466,0x3b38376625202c30,0x2e6e722e616d660a\n"
".quad 0x3038662520323366,0x30202c396625202c,0x3030303038304366,0x3b39376625202c30\n"
".quad 0x2e6e722e616d660a,0x3138662520323366,0x30202c386625202c,0x3030303038304366\n"
".quad 0x3b30386625202c30,0x2e6e722e616d660a,0x3238662520323366,0x202c32316625202c\n"
".quad 0x3030303830436630,0x31386625202c3030,0x33662e6464610a3b,0x202c333866252032\n"
".quad 0x6625202c32386625,0x2e6464610a3b3031,0x3438662520323366,0x202c33386625202c\n"
".quad 0x64610a3b31316625,0x6625203233662e64,0x34386625202c3538,0x0a3b33316625202c\n"
".quad 0x203233662e646461,0x6625202c36386625,0x34316625202c3538,0x6e722e616d660a3b\n"
".quad 0x386625203233662e,0x2c35316625202c37,0x3030383043663020,0x386625202c303030\n"
".quad 0x662e6464610a3b36,0x2c38386625203233,0x25202c3738662520,0x6464610a3b363166\n"
".quad 0x386625203233662e,0x2c38386625202c39,0x610a3b3731662520,0x25203233662e6464\n"
".quad 0x386625202c303966,0x3b38316625202c39,0x3233662e6464610a,0x25202c3139662520\n"
".quad 0x316625202c303966,0x722e616d660a3b39,0x6625203233662e6e,0x30326625202c3239\n"
".quad 0x303830436630202c,0x6625202c30303030,0x2e6464610a3b3139,0x3339662520323366\n"
".quad 0x202c32396625202c,0x64610a3b31326625,0x6625203233662e64,0x33396625202c3439\n"
".quad 0x0a3b32326625202c,0x203233662e646461,0x6625202c35396625,0x33326625202c3439\n"
".quad 0x33662e6464610a3b,0x202c363966252032,0x6625202c35396625,0x2e616d660a3b3432\n"
".quad 0x25203233662e6e72,0x376625202c373966,0x4630346630202c36,0x25202c3431353431\n"
".quad 0x6c756d0a3b363966,0x396625203233662e,0x202c386625202c38,0x3030304130346630\n"
".quad 0x2e616d660a3b3030,0x25203233662e6e72,0x376625202c393966,0x304130436630202c\n"
".quad 0x6625202c30303030,0x2e616d660a3b3839,0x25203233662e6e72,0x6625202c30303166\n"
".quad 0x46336630202c3234,0x202c353535353544,0x756d0a3b39396625,0x6625203233662e6c\n"
".quad 0x316625202c313031,0x4130346630202c32,0x660a3b3030303030,0x33662e6e722e616d\n"
".quad 0x2c32303166252032,0x6630202c39662520,0x3030303030413043,0x3b3130316625202c\n"
".quad 0x2e6e722e616d660a,0x3031662520323366,0x2c31356625202c33,0x3535444633663020\n"
".quad 0x316625202c353535,0x2e6c756d0a3b3230,0x3031662520323366,0x2c30326625202c34\n"
".quad 0x3030413034663020,0x616d660a3b303030,0x203233662e6e722e,0x25202c3530316625\n"
".quad 0x436630202c353166,0x2c30303030304130,0x0a3b343031662520,0x662e6e722e616d66\n"
".quad 0x3630316625203233,0x202c30366625202c,0x3535354446336630,0x30316625202c3535\n"
".quad 0x662e6464610a3b35,0x3730316625203233,0x25202c376625202c,0x2e6275730a3b3766\n"
".quad 0x3031662520323366,0x3730316625202c38,0x2e0a3b396625202c,0x3533203220636f6c\n"
".quad 0x6464610a31203830,0x316625203233662e,0x2c386625202c3930,0x64610a3b38662520\n"
".quad 0x6625203233662e64,0x316625202c303131,0x30316625202c3830,0x662e6275730a3b39\n"
".quad 0x3131316625203233,0x2c3031316625202c,0x2e0a3b3231662520,0x3533203220636f6c\n"
".quad 0x6464610a31203830,0x316625203233662e,0x31316625202c3231,0x3b30316625202c31\n"
".quad 0x3233662e6464610a,0x202c333131662520,0x25202c3231316625,0x6464610a3b313166\n"
".quad 0x316625203233662e,0x31316625202c3431,0x3b33316625202c33,0x3233662e6464610a\n"
".quad 0x202c353131662520,0x25202c3431316625,0x6275730a3b343166,0x316625203233662e\n"
".quad 0x31316625202c3631,0x3b35316625202c35,0x203220636f6c2e0a,0x610a312038303533\n"
".quad 0x25203233662e6464,0x6625202c37313166,0x316625202c363131,0x662e766f6d0a3b36\n"
".quad 0x3831316625203233,0x303030436630202c,0x6c2e0a3b30303030,0x303533203220636f\n"
".quad 0x2e616d660a312038,0x25203233662e6e72,0x6625202c39313166,0x30436630202c3731\n"
".quad 0x202c303030303030,0x610a3b3731316625,0x25203233662e6464,0x6625202c30323166\n"
".quad 0x316625202c393131,0x722e616d660a3b38,0x6625203233662e6e,0x316625202c313231\n"
".quad 0x3030436630202c39,0x25202c3030303030,0x75730a3b30323166,0x6625203233662e62\n"
".quad 0x316625202c323231,0x30326625202c3132,0x3220636f6c2e0a3b,0x0a31203830353320\n"
".quad 0x203233662e646461,0x25202c3332316625,0x6625202c32323166,0x2e616d660a3b3132\n"
".quad 0x25203233662e6e72,0x6625202c34323166,0x30436630202c3232,0x202c303030303030\n"
".quad 0x610a3b3332316625,0x25203233662e6464,0x6625202c35323166,0x326625202c343231\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x326625202c363231,0x3030436630202c34\n"
".quad 0x25202c3030303030,0x64610a3b35323166,0x6625203233662e64,0x346625202c373231\n"
".quad 0x3b32346625202c32,0x2e6e722e616d660a,0x3231662520323366,0x2c31356625202c38\n"
".quad 0x25202c3135662520,0x67656e0a3b353766,0x316625203233662e,0x32316625202c3932\n"
".quad 0x722e616d660a3b38,0x6625203233662e6e,0x316625202c303331,0x32346625202c3732\n"
".quad 0x3b3932316625202c,0x3233662e6275730a,0x202c313331662520,0x25202c3632316625\n"
".quad 0x64610a3b30333166,0x6625203233662e64,0x396625202c323331,0x660a3b396625202c\n"
".quad 0x33662e6e722e616d,0x2c33333166252032,0x6630202c37662520,0x3030303030383043\n"
".quad 0x3b3233316625202c,0x2e6e722e616d660a,0x3331662520323366,0x202c386625202c34\n"
".quad 0x3030303830436630,0x33316625202c3030,0x662e6464610a3b33,0x3533316625203233\n"
".quad 0x202c32316625202c,0x64610a3b32316625,0x6625203233662e64,0x316625202c363331\n"
".quad 0x33316625202c3433,0x662e6464610a3b35,0x3733316625203233,0x2c3633316625202c\n"
".quad 0x610a3b3031662520,0x25203233662e6464,0x6625202c38333166,0x316625202c373331\n"
".quad 0x662e6464610a3b31,0x3933316625203233,0x2c3833316625202c,0x610a3b3331662520\n"
".quad 0x25203233662e6464,0x6625202c30343166,0x316625202c393331,0x662e6464610a3b34\n"
".quad 0x3134316625203233,0x202c35316625202c,0x64610a3b35316625,0x6625203233662e64\n"
".quad 0x316625202c323431,0x34316625202c3034,0x662e6464610a3b31,0x3334316625203233\n"
".quad 0x2c3234316625202c,0x660a3b3631662520,0x33662e6e722e616d,0x2c34343166252032\n"
".quad 0x30202c3731662520,0x3030303030304366,0x3334316625202c30,0x33662e6464610a3b\n"
".quad 0x2c35343166252032,0x202c343431662520,0x6d660a3b38316625,0x3233662e6e722e61\n"
".quad 0x202c363431662520,0x6630202c39316625,0x3030303030303043,0x3b3534316625202c\n"
".quad 0x3233662e6464610a,0x202c373431662520,0x6625202c30326625,0x2e6464610a3b3032\n"
".quad 0x3431662520323366,0x3634316625202c38,0x3b3734316625202c,0x3233662e6464610a\n"
".quad 0x202c393431662520,0x25202c3834316625,0x616d660a3b313266,0x203233662e6e722e\n"
".quad 0x25202c3035316625,0x436630202c323266,0x2c30303030303030,0x0a3b393431662520\n"
".quad 0x203233662e646461,0x25202c3135316625,0x6625202c30353166,0x2e616d660a3b3332\n"
".quad 0x25203233662e6e72,0x6625202c32353166,0x30436630202c3432,0x202c303030303030\n"
".quad 0x610a3b3135316625,0x25203233662e6464,0x6625202c33353166,0x3b32316625202c39\n"
".quad 0x3233662e6464610a,0x202c343531662520,0x25202c3335316625,0x6464610a3b303166\n"
".quad 0x316625203233662e,0x35316625202c3535,0x3b31316625202c34,0x3233662e6464610a\n"
".quad 0x202c363531662520,0x25202c3535316625,0x6464610a3b333166,0x316625203233662e\n"
".quad 0x35316625202c3735,0x3b34316625202c36,0x3233662e6275730a,0x202c383531662520\n"
".quad 0x25202c3735316625,0x6275730a3b353166,0x316625203233662e,0x35316625202c3935\n"
".quad 0x3b36316625202c38,0x3233662e6275730a,0x202c303631662520,0x25202c3935316625\n"
".quad 0x6275730a3b383166,0x316625203233662e,0x36316625202c3136,0x3b30326625202c30\n"
".quad 0x3233662e6275730a,0x202c323631662520,0x25202c3136316625,0x6275730a3b313266\n"
".quad 0x316625203233662e,0x36316625202c3336,0x3b33326625202c32,0x203220636f6c2e0a\n"
".quad 0x6e0a312038303533,0x25203233662e6765,0x6625202c34363166,0x2e616d660a3b3036\n"
".quad 0x25203233662e6e72,0x6625202c35363166,0x366625202c343631,0x3b33376625202c30\n"
".quad 0x3233662e6275730a,0x202c363631662520,0x25202c3336316625,0x656e0a3b35363166\n"
".quad 0x6625203233662e67,0x316625202c373631,0x2e616d660a3b3533,0x25203233662e6e72\n"
".quad 0x6625202c38363166,0x3831316625202c39,0x3b3736316625202c,0x3233662e6464610a\n"
".quad 0x202c393631662520,0x25202c3836316625,0x6464610a3b303166,0x316625203233662e\n"
".quad 0x36316625202c3037,0x3b31316625202c39,0x3233662e6464610a,0x202c313731662520\n"
".quad 0x25202c3037316625,0x6464610a3b333166,0x316625203233662e,0x37316625202c3237\n"
".quad 0x3b34316625202c31,0x3233662e6464610a,0x202c333731662520,0x25202c3237316625\n"
".quad 0x75730a3b31343166,0x6625203233662e62,0x316625202c343731,0x36316625202c3337\n"
".quad 0x33662e6275730a3b,0x2c35373166252032,0x202c343731662520,0x6c2e0a3b38316625\n"
".quad 0x303533203220636f,0x2e6464610a312038,0x3731662520323366,0x3537316625202c36\n"
".quad 0x3b3734316625202c,0x3233662e6275730a,0x202c373731662520,0x25202c3637316625\n"
".quad 0x6275730a3b313266,0x316625203233662e,0x37316625202c3837,0x3b33326625202c37\n"
".quad 0x3233662e6275730a,0x202c393731662520,0x6625202c30316625,0x636f6c2e0a3b3131\n"
".quad 0x2038303533203220,0x33662e6464610a31,0x2c30383166252032,0x202c393731662520\n"
".quad 0x75730a3b33316625,0x6625203233662e62,0x316625202c313831,0x34316625202c3038\n"
".quad 0x3220636f6c2e0a3b,0x0a31203830353320,0x203233662e67656e,0x25202c3238316625\n"
".quad 0x616d660a3b323466,0x203233662e6e722e,0x25202c3338316625,0x6625202c32383166\n"
".quad 0x38316625202c3135,0x662e6275730a3b31,0x3438316625203233,0x202c37316625202c\n"
".quad 0x75730a3b39316625,0x6625203233662e62,0x316625202c353831,0x32326625202c3438\n"
".quad 0x3220636f6c2e0a3b,0x0a31203830353320,0x203233662e646461,0x25202c3638316625\n"
".quad 0x6625202c35383166,0x2e67656e0a3b3432,0x3831662520323366,0x3b31356625202c37\n"
".quad 0x2e6e722e616d660a,0x3831662520323366,0x3738316625202c38,0x202c30366625202c\n"
".quad 0x730a3b3638316625,0x25203233662e6275,0x6625202c39383166,0x38316625202c3631\n"
".quad 0x33662e6275730a3b,0x2c30393166252032,0x202c393831662520,0x6c2e0a3b31326625\n"
".quad 0x303533203220636f,0x2e6464610a312038,0x3931662520323366,0x3039316625202c31\n"
".quad 0x0a3b33326625202c,0x662e6e722e616d66,0x3239316625203233,0x2c3238316625202c\n"
".quad 0x25202c3036662520,0x75730a3b31393166,0x6625203233662e62,0x316625202c333931\n"
".quad 0x33316625202c3937,0x3220636f6c2e0a3b,0x0a31203830353320,0x203233662e646461\n"
".quad 0x25202c3439316625,0x6625202c33393166,0x2e6275730a3b3431,0x3931662520323366\n"
".quad 0x3439316625202c35,0x0a3b36316625202c,0x203233662e646461,0x25202c3639316625\n"
".quad 0x6625202c35393166,0x2e6275730a3b3831,0x3931662520323366,0x3639316625202c37\n"
".quad 0x0a3b31326625202c,0x33203220636f6c2e,0x64610a3120383035,0x6625203233662e64\n"
".quad 0x316625202c383931,0x33326625202c3739,0x33662e67656e0a3b,0x2c39393166252032\n"
".quad 0x730a3b3131662520,0x25203233662e6275,0x6625202c30303266,0x316625202c393931\n"
".quad 0x20636f6c2e0a3b30,0x3120383035332032,0x3233662e6464610a,0x202c313032662520\n"
".quad 0x25202c3030326625,0x6464610a3b333166,0x326625203233662e,0x30326625202c3230\n"
".quad 0x3b34316625202c31,0x3233662e6464610a,0x202c333032662520,0x25202c3230326625\n"
".quad 0x6275730a3b373166,0x326625203233662e,0x30326625202c3430,0x3b39316625202c33\n"
".quad 0x203220636f6c2e0a,0x610a312038303533,0x25203233662e6464,0x6625202c35303266\n"
".quad 0x326625202c343032,0x662e6275730a3b32,0x3630326625203233,0x2c3530326625202c\n"
".quad 0x730a3b3432662520,0x25203233662e6275,0x6625202c37303266,0x37316625202c3631\n"
".quad 0x3220636f6c2e0a3b,0x0a31203830353320,0x203233662e646461,0x25202c3830326625\n"
".quad 0x6625202c37303266,0x2e6275730a3b3831,0x3032662520323366,0x3830326625202c39\n"
".quad 0x0a3b39316625202c,0x203233662e627573,0x25202c3031326625,0x6625202c39303266\n"
".quad 0x636f6c2e0a3b3132,0x2038303533203220,0x33662e6464610a31,0x2c31313266252032\n"
".quad 0x202c303132662520,0x75730a3b32326625,0x6625203233662e62,0x326625202c323132\n"
".quad 0x33326625202c3131,0x3220636f6c2e0a3b,0x0a31203830353320,0x203233662e646461\n"
".quad 0x25202c3331326625,0x6625202c32313266,0x2e766f6d0a3b3432,0x3132662520323366\n"
".quad 0x3845336630202c34,0x6c0a3b3030303030,0x2e6d617261702e64,0x3238662520323366\n"
".quad 0x4c395a5f5b202c32,0x434442415f645f52,0x5f666d665f536650,0x5d325f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x0a31203830353320,0x203233662e6c756d,0x25202c3531326625\n"
".quad 0x6630202c32323866,0x3030303030384533,0x33662e766f6d0a3b,0x2c36313266252032\n"
".quad 0x3030304533663020,0x6f6c2e0a3b303030,0x3830353320322063,0x662e6c756d0a3120\n"
".quad 0x3731326625203233,0x2c3837316625202c,0x4141324433663020,0x766f6d0a3b424141\n"
".quad 0x326625203233662e,0x44336630202c3831,0x0a3b424141414132,0x33203220636f6c2e\n"
".quad 0x756d0a3120383035,0x6625203233662e6c,0x386625202c393132,0x44336630202c3232\n"
".quad 0x0a3b424141414141,0x203233662e6c756d,0x25202c3032326625,0x6630202c32353166\n"
".quad 0x3933453833364333,0x33662e6c756d0a3b,0x2c31323266252032,0x202c323238662520\n"
".quad 0x4538334543336630,0x2e6c756d0a3b3933,0x3232662520323366,0x3133316625202c32\n"
".quad 0x3b3132326625202c,0x3233662e6c756d0a,0x202c333232662520,0x30202c3030316625\n"
".quad 0x4343434343433366,0x662e766f6d0a3b44,0x3432326625203233,0x434343336630202c\n"
".quad 0x6c2e0a3b44434343,0x303533203220636f,0x2e6c756d0a312038,0x3232662520323366\n"
".quad 0x3330316625202c35,0x434343336630202c,0x756d0a3b44434343,0x6625203233662e6c\n"
".quad 0x316625202c363232,0x43336630202c3630,0x0a3b444343434343,0x203233662e6c756d\n"
".quad 0x25202c3732326625,0x336630202c373966,0x3b31323830323842,0x3233662e6c756d0a\n"
".quad 0x202c383232662520,0x30202c3732326625,0x3030303034313466,0x722e616d660a3b30\n"
".quad 0x6625203233662e6e,0x376625202c393232,0x3745426630202c37,0x25202c4433464333\n"
".quad 0x75730a3b38323266,0x6625203233662e62,0x366625202c303332,0x3b3932326625202c\n"
".quad 0x3233662e6c756d0a,0x202c313332662520,0x30202c3732326625,0x3030303038304366\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x376625202c323332,0x4244426630202c37\n"
".quad 0x25202c4432424332,0x6d660a3b31333266,0x3233662e6e722e61,0x202c333332662520\n"
".quad 0x30202c3332326625,0x3030303038304366,0x3233326625202c30,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x33316625202c3433,0x3132326625202c31,0x3b3232326625202c\n"
".quad 0x3233662e6464610a,0x202c353332662520,0x25202c3333326625,0x6d660a3b34333266\n"
".quad 0x3233662e6e722e61,0x202c363332662520,0x30202c3032326625,0x3030303038304366\n"
".quad 0x3533326625202c30,0x33662e6275730a3b,0x2c37333266252032,0x6625202c37662520\n"
".quad 0x616d660a3b363332,0x203233662e6e722e,0x25202c3833326625,0x6630202c35323266\n"
".quad 0x3030303030383043,0x3b3233326625202c,0x3233662e67656e0a,0x202c393332662520\n"
".quad 0x660a3b3133316625,0x33662e6e722e616d,0x2c30343266252032,0x202c393332662520\n"
".quad 0x25202c3132326625,0x6c2e0a3b38333266,0x303533203220636f,0x2e616d660a312038\n"
".quad 0x25203233662e6e72,0x6625202c31343266,0x336630202c323531,0x2c39334538333643\n"
".quad 0x0a3b303232662520,0x203233662e646461,0x25202c3234326625,0x6625202c30343266\n"
".quad 0x616d660a3b313432,0x203233662e6e722e,0x25202c3334326625,0x6625202c36363166\n"
".quad 0x326625202c393132,0x2e616d660a3b3234,0x25203233662e6e72,0x6625202c34343266\n"
".quad 0x436630202c373132,0x2c30303030303030,0x0a3b333432662520,0x203233662e627573\n"
".quad 0x25202c3534326625,0x34326625202c3966,0x722e616d660a3b34,0x6625203233662e6e\n"
".quad 0x326625202c363432,0x30346630202c3332,0x202c303030303038,0x610a3b3233326625\n"
".quad 0x25203233662e6464,0x6625202c37343266,0x326625202c363432,0x2e616d660a3b3433\n"
".quad 0x25203233662e6e72,0x6625202c38343266,0x436630202c303232,0x2c30303030303830\n"
".quad 0x0a3b373432662520,0x203233662e627573,0x25202c3934326625,0x34326625202c3866\n"
".quad 0x722e616d660a3b38,0x6625203233662e6e,0x326625202c303532,0x30346630202c3532\n"
".quad 0x202c303030303038,0x660a3b3233326625,0x33662e6e722e616d,0x2c31353266252032\n"
".quad 0x202c393332662520,0x25202c3132326625,0x6c2e0a3b30353266,0x303533203220636f\n"
".quad 0x2e6464610a312038,0x3532662520323366,0x3135326625202c32,0x3b3134326625202c\n"
".quad 0x2e6e722e616d660a,0x3532662520323366,0x3636316625202c33,0x2c3931326625202c\n"
".quad 0x0a3b323532662520,0x662e6e722e616d66,0x3435326625203233,0x2c3731326625202c\n"
".quad 0x3030303043663020,0x326625202c303030,0x2e6275730a3b3335,0x3532662520323366\n"
".quad 0x2c32316625202c35,0x0a3b343532662520,0x662e6e722e616d66,0x3635326625203233\n"
".quad 0x202c37376625202c,0x3830323844336630,0x32326625202c3032,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x316625202c373532,0x43336630202c3030,0x202c444343434343\n"
".quad 0x660a3b3635326625,0x33662e6e722e616d,0x2c38353266252032,0x202c333031662520\n"
".quad 0x4343434343336630,0x35326625202c4443,0x722e616d660a3b37,0x6625203233662e6e\n"
".quad 0x316625202c393532,0x32326625202c3133,0x3835326625202c31,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x35316625202c3036,0x3643336630202c32,0x25202c3933453833\n"
".quad 0x6d660a3b39353266,0x3233662e6e722e61,0x202c313632662520,0x25202c3636316625\n"
".quad 0x6625202c39313266,0x616d660a3b303632,0x203233662e6e722e,0x25202c3236326625\n"
".quad 0x6630202c38373166,0x4241414141324433,0x3b3136326625202c,0x2e6e722e616d660a\n"
".quad 0x3632662520323366,0x3338316625202c33,0x303845336630202c,0x6625202c30303030\n"
".quad 0x616d660a3b323632,0x203233662e6e722e,0x25202c3436326625,0x6630202c38393166\n"
".quad 0x3030303030304533,0x3b3336326625202c,0x3233662e67656e0a,0x202c353632662520\n"
".quad 0x660a3b3630326625,0x33662e6e722e616d,0x2c36363266252032,0x202c353632662520\n"
".quad 0x25202c3631326625,0x6c2e0a3b34363266,0x303533203220636f,0x2e6275730a312038\n"
".quad 0x3632662520323366,0x2c30316625202c37,0x0a3b363632662520,0x203233662e67656e\n"
".quad 0x25202c3836326625,0x6d660a3b30303166,0x3233662e6e722e61,0x202c393632662520\n"
".quad 0x25202c3836326625,0x6625202c34323266,0x6f6c2e0a3b363532,0x3830353320322063\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x316625202c303732,0x43336630202c3330\n"
".quad 0x202c444343434343,0x660a3b3936326625,0x33662e6e722e616d,0x2c31373266252032\n"
".quad 0x202c313331662520,0x25202c3132326625,0x6d660a3b30373266,0x3233662e6e722e61\n"
".quad 0x202c323732662520,0x30202c3235316625,0x3345383336433366,0x3137326625202c39\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x36316625202c3337,0x3931326625202c36\n"
".quad 0x3b3237326625202c,0x2e6e722e616d660a,0x3732662520323366,0x3837316625202c34\n"
".quad 0x413244336630202c,0x6625202c42414141,0x67656e0a3b333732,0x326625203233662e\n"
".quad 0x38316625202c3537,0x722e616d660a3b33,0x6625203233662e6e,0x326625202c363732\n"
".quad 0x31326625202c3537,0x3437326625202c34,0x33662e67656e0a3b,0x2c37373266252032\n"
".quad 0x0a3b383931662520,0x662e6e722e616d66,0x3837326625203233,0x2c3737326625202c\n"
".quad 0x202c363132662520,0x660a3b3637326625,0x33662e6e722e616d,0x2c39373266252032\n"
".quad 0x202c353632662520,0x25202c3631326625,0x6c2e0a3b38373266,0x303533203220636f\n"
".quad 0x2e6275730a312038,0x3832662520323366,0x2c31316625202c30,0x0a3b393732662520\n"
".quad 0x203233662e67656e,0x25202c3138326625,0x6d660a3b33303166,0x3233662e6e722e61\n"
".quad 0x202c323832662520,0x25202c3138326625,0x6625202c34323266,0x6f6c2e0a3b393632\n"
".quad 0x3830353320322063,0x722e616d660a3120,0x6625203233662e6e,0x316625202c333832\n"
".quad 0x32326625202c3133,0x3238326625202c31,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x35316625202c3438,0x3643336630202c32,0x25202c3933453833,0x6d660a3b33383266\n"
".quad 0x3233662e6e722e61,0x202c353832662520,0x25202c3636316625,0x6625202c39313266\n"
".quad 0x616d660a3b343832,0x203233662e6e722e,0x25202c3638326625,0x6630202c38373166\n"
".quad 0x4241414141324433,0x3b3538326625202c,0x2e6e722e616d660a,0x3832662520323366\n"
".quad 0x3338316625202c37,0x303845336630202c,0x6625202c30303030,0x616d660a3b363832\n"
".quad 0x203233662e6e722e,0x25202c3838326625,0x6625202c37373266,0x326625202c363132\n"
".quad 0x636f6c2e0a3b3738,0x2038303533203220,0x6e722e616d660a31,0x326625203233662e\n"
".quad 0x30326625202c3938,0x3045336630202c36,0x25202c3030303030,0x75730a3b38383266\n"
".quad 0x6625203233662e62,0x316625202c303932,0x3938326625202c33,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x38326625202c3139,0x3432326625202c31,0x3b3735326625202c\n"
".quad 0x203220636f6c2e0a,0x660a312038303533,0x33662e6e722e616d,0x2c32393266252032\n"
".quad 0x202c313331662520,0x25202c3132326625,0x6d660a3b31393266,0x3233662e6e722e61\n"
".quad 0x202c333932662520,0x30202c3235316625,0x3345383336433366,0x3239326625202c39\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x36316625202c3439,0x3931326625202c36\n"
".quad 0x3b3339326625202c,0x2e6e722e616d660a,0x3932662520323366,0x3837316625202c35\n"
".quad 0x413244336630202c,0x6625202c42414141,0x616d660a3b343932,0x203233662e6e722e\n"
".quad 0x25202c3639326625,0x6625202c35373266,0x326625202c343132,0x636f6c2e0a3b3539\n"
".quad 0x2038303533203220,0x6e722e616d660a31,0x326625203233662e,0x39316625202c3739\n"
".quad 0x3045336630202c38,0x25202c3030303030,0x6d660a3b36393266,0x3233662e6e722e61\n"
".quad 0x202c383932662520,0x30202c3630326625,0x3030303030453366,0x3739326625202c30\n"
".quad 0x33662e6275730a3b,0x2c39393266252032,0x25202c3431662520,0x6d660a3b38393266\n"
".quad 0x3233662e6e722e61,0x202c303033662520,0x30202c3632326625,0x3030303038304366\n"
".quad 0x3233326625202c30,0x6e722e616d660a3b,0x336625203233662e,0x33326625202c3130\n"
".quad 0x3132326625202c39,0x3b3030336625202c,0x203220636f6c2e0a,0x610a312038303533\n"
".quad 0x25203233662e6464,0x6625202c32303366,0x326625202c313033,0x2e67656e0a3b3134\n"
".quad 0x3033662520323366,0x3636316625202c33,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x30336625202c3430,0x3931326625202c33,0x3b3230336625202c,0x203220636f6c2e0a\n"
".quad 0x660a312038303533,0x33662e6e722e616d,0x2c35303366252032,0x202c383731662520\n"
".quad 0x4141413244336630,0x31326625202c4241,0x662e6464610a3b37,0x3630336625203233\n"
".quad 0x2c3430336625202c,0x0a3b353033662520,0x203233662e627573,0x25202c3730336625\n"
".quad 0x336625202c353166,0x2e616d660a3b3630,0x25203233662e6e72,0x6625202c38303366\n"
".quad 0x336630202c363031,0x2c44434343434343,0x0a3b373532662520,0x662e6e722e616d66\n"
".quad 0x3930336625203233,0x2c3133316625202c,0x202c313232662520,0x660a3b3830336625\n"
".quad 0x33662e6e722e616d,0x2c30313366252032,0x202c323531662520,0x4538333643336630\n"
".quad 0x30336625202c3933,0x722e616d660a3b39,0x6625203233662e6e,0x336625202c313133\n"
".quad 0x31326625202c3330,0x3031336625202c39,0x33662e67656e0a3b,0x2c32313366252032\n"
".quad 0x0a3b383731662520,0x662e6e722e616d66,0x3331336625203233,0x2c3231336625202c\n"
".quad 0x202c383132662520,0x2e0a3b3131336625,0x3533203220636f6c,0x616d660a31203830\n"
".quad 0x203233662e6e722e,0x25202c3431336625,0x6625202c32393166,0x336625202c353132\n"
".quad 0x2e616d660a3b3331,0x25203233662e6e72,0x6625202c35313366,0x326625202c373732\n"
".quad 0x31336625202c3631,0x20636f6c2e0a3b34,0x3120383035332032,0x2e6e722e616d660a\n"
".quad 0x3133662520323366,0x3331326625202c36,0x303045336630202c,0x6625202c30303030\n"
".quad 0x6275730a3b353133,0x336625203233662e,0x36316625202c3731,0x3b3631336625202c\n"
".quad 0x2e6e722e616d660a,0x3133662520323366,0x3330316625202c38,0x434343336630202c\n"
".quad 0x6625202c44434343,0x616d660a3b363532,0x203233662e6e722e,0x25202c3931336625\n"
".quad 0x6630202c36303166,0x4443434343434333,0x3b3831336625202c,0x2e6e722e616d660a\n"
".quad 0x3233662520323366,0x3232326625202c30,0x303030436630202c,0x6625202c30303030\n"
".quad 0x616d660a3b393133,0x203233662e6e722e,0x25202c3132336625,0x6630202c30323266\n"
".quad 0x3030303030303043,0x3b3032336625202c,0x2e6e722e616d660a,0x3233662520323366\n"
".quad 0x3838316625202c32,0x303845336630202c,0x6625202c30303030,0x616d660a3b313233\n"
".quad 0x203233662e6e722e,0x25202c3332336625,0x6630202c36303266,0x3030303030304533\n"
".quad 0x3b3232336625202c,0x3233662e67656e0a,0x202c343233662520,0x660a3b3331326625\n"
".quad 0x33662e6e722e616d,0x2c35323366252032,0x202c343233662520,0x25202c3631326625\n"
".quad 0x6c2e0a3b33323366,0x303533203220636f,0x2e6275730a312038,0x3233662520323366\n"
".quad 0x2c37316625202c36,0x0a3b353233662520,0x662e6e722e616d66,0x3732336625203233\n"
".quad 0x2c3630316625202c,0x4343434333663020,0x326625202c444343,0x2e616d660a3b3936\n"
".quad 0x25203233662e6e72,0x6625202c38323366,0x326625202c313331,0x32336625202c3132\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x316625202c393233,0x43336630202c3235\n"
".quad 0x202c393345383336,0x660a3b3832336625,0x33662e6e722e616d,0x2c30333366252032\n"
".quad 0x202c333033662520,0x25202c3931326625,0x6d660a3b39323366,0x3233662e6e722e61\n"
".quad 0x202c313333662520,0x25202c3231336625,0x6625202c38313266,0x67656e0a3b303333\n"
".quad 0x336625203233662e,0x39316625202c3233,0x722e616d660a3b32,0x6625203233662e6e\n"
".quad 0x336625202c333333,0x31326625202c3233,0x3133336625202c35,0x3220636f6c2e0a3b\n"
".quad 0x0a31203830353320,0x662e6e722e616d66,0x3433336625203233,0x2c3839316625202c\n"
".quad 0x3030304533663020,0x336625202c303030,0x2e616d660a3b3333,0x25203233662e6e72\n"
".quad 0x6625202c35333366,0x336630202c333132,0x2c30303030303045,0x0a3b343333662520\n"
".quad 0x203233662e627573,0x25202c3633336625,0x336625202c383166,0x2e616d660a3b3533\n"
".quad 0x25203233662e6e72,0x6625202c37333366,0x326625202c313832,0x35326625202c3432\n"
".quad 0x20636f6c2e0a3b36,0x3120383035332032,0x2e6e722e616d660a,0x3333662520323366\n"
".quad 0x3630316625202c38,0x434343336630202c,0x6625202c44434343,0x616d660a3b373333\n"
".quad 0x203233662e6e722e,0x25202c3933336625,0x6630202c32323266,0x3030303030303043\n"
".quad 0x3b3833336625202c,0x2e6e722e616d660a,0x3433662520323366,0x3032326625202c30\n"
".quad 0x303030436630202c,0x6625202c30303030,0x67656e0a3b393333,0x336625203233662e\n"
".quad 0x38316625202c3134,0x722e616d660a3b38,0x6625203233662e6e,0x336625202c323433\n"
".quad 0x31326625202c3134,0x3034336625202c34,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x36326625202c3334,0x3631326625202c35,0x3b3234336625202c,0x2e6e722e616d660a\n"
".quad 0x3433662520323366,0x3432336625202c34,0x2c3631326625202c,0x0a3b333433662520\n"
".quad 0x33203220636f6c2e,0x75730a3120383035,0x6625203233662e62,0x316625202c353433\n"
".quad 0x3434336625202c39,0x6e722e616d660a3b,0x336625203233662e,0x32326625202c3634\n"
".quad 0x3830346630202c36,0x25202c3030303030,0x6d660a3b32333266,0x3233662e6e722e61\n"
".quad 0x202c373433662520,0x25202c3933326625,0x6625202c31323266,0x6f6c2e0a3b363433\n"
".quad 0x3830353320322063,0x662e6464610a3120,0x3834336625203233,0x2c3734336625202c\n"
".quad 0x0a3b313432662520,0x662e6e722e616d66,0x3934336625203233,0x2c3330336625202c\n"
".quad 0x202c393132662520,0x2e0a3b3834336625,0x3533203220636f6c,0x6464610a31203830\n"
".quad 0x336625203233662e,0x34336625202c3035,0x3530336625202c39,0x33662e6275730a3b\n"
".quad 0x2c31353366252032,0x25202c3032662520,0x656e0a3b30353366,0x6625203233662e67\n"
".quad 0x316625202c323533,0x2e616d660a3b3630,0x25203233662e6e72,0x6625202c33353366\n"
".quad 0x326625202c323533,0x35326625202c3432,0x20636f6c2e0a3b37,0x3120383035332032\n"
".quad 0x2e6e722e616d660a,0x3533662520323366,0x3133316625202c34,0x2c3132326625202c\n"
".quad 0x0a3b333533662520,0x662e6e722e616d66,0x3535336625203233,0x2c3235316625202c\n"
".quad 0x3833364333663020,0x336625202c393345,0x2e616d660a3b3435,0x25203233662e6e72\n"
".quad 0x6625202c36353366,0x326625202c333033,0x35336625202c3931,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x336625202c373533,0x31326625202c3231,0x3635336625202c38\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x33336625202c3835,0x3531326625202c32\n"
".quad 0x3b3735336625202c,0x2e6e722e616d660a,0x3533662520323366,0x3737326625202c39\n"
".quad 0x2c3631326625202c,0x0a3b383533662520,0x662e6e722e616d66,0x3036336625203233\n"
".quad 0x2c3432336625202c,0x202c363132662520,0x2e0a3b3935336625,0x3533203220636f6c\n"
".quad 0x6275730a31203830,0x336625203233662e,0x31326625202c3136,0x3b3036336625202c\n"
".quad 0x2e6e722e616d660a,0x3633662520323366,0x3235336625202c32,0x2c3432326625202c\n"
".quad 0x0a3b383133662520,0x33203220636f6c2e,0x6d660a3120383035,0x3233662e6e722e61\n"
".quad 0x202c333633662520,0x30202c3232326625,0x3030303030304366,0x3236336625202c30\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x32326625202c3436,0x3030436630202c30\n"
".quad 0x25202c3030303030,0x6d660a3b33363366,0x3233662e6e722e61,0x202c353633662520\n"
".quad 0x25202c3134336625,0x6625202c34313266,0x6f6c2e0a3b343633,0x3830353320322063\n"
".quad 0x722e616d660a3120,0x6625203233662e6e,0x326625202c363633,0x45336630202c3630\n"
".quad 0x202c303030303030,0x660a3b3536336625,0x33662e6e722e616d,0x2c37363366252032\n"
".quad 0x202c333132662520,0x3030303045336630,0x36336625202c3030,0x662e6275730a3b36\n"
".quad 0x3836336625203233,0x202c32326625202c,0x660a3b3736336625,0x33662e6e722e616d\n"
".quad 0x2c39363366252032,0x202c323533662520,0x25202c3432326625,0x6c2e0a3b39363266\n"
".quad 0x303533203220636f,0x2e616d660a312038,0x25203233662e6e72,0x6625202c30373366\n"
".quad 0x326625202c313331,0x36336625202c3132,0x722e616d660a3b39,0x6625203233662e6e\n"
".quad 0x316625202c313733,0x43336630202c3235,0x202c393345383336,0x660a3b3037336625\n"
".quad 0x33662e6e722e616d,0x2c32373366252032,0x202c333033662520,0x25202c3931326625\n"
".quad 0x6d660a3b31373366,0x3233662e6e722e61,0x202c333733662520,0x25202c3231336625\n"
".quad 0x6625202c38313266,0x6f6c2e0a3b323733,0x3830353320322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x316625202c343733,0x31326625202c3239,0x3337336625202c35\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x39316625202c3537,0x3045336630202c38\n"
".quad 0x25202c3030303030,0x6d660a3b34373366,0x3233662e6e722e61,0x202c363733662520\n"
".quad 0x25202c3432336625,0x6625202c36313266,0x6f6c2e0a3b353733,0x3830353320322063\n"
".quad 0x662e6275730a3120,0x3737336625203233,0x202c33326625202c,0x660a3b3637336625\n"
".quad 0x33662e6e722e616d,0x2c38373366252032,0x202c323533662520,0x25202c3432326625\n"
".quad 0x6c2e0a3b37333366,0x303533203220636f,0x2e616d660a312038,0x25203233662e6e72\n"
".quad 0x6625202c39373366,0x436630202c323232,0x2c30303030303030,0x0a3b383733662520\n"
".quad 0x662e6e722e616d66,0x3038336625203233,0x2c3032326625202c,0x3030303043663020\n"
".quad 0x336625202c303030,0x2e616d660a3b3937,0x25203233662e6e72,0x6625202c31383366\n"
".quad 0x336630202c383831,0x2c30303030303845,0x0a3b303833662520,0x662e6e722e616d66\n"
".quad 0x3238336625203233,0x2c3536326625202c,0x202c363132662520,0x2e0a3b3138336625\n"
".quad 0x3533203220636f6c,0x616d660a31203830,0x203233662e6e722e,0x25202c3338336625\n"
".quad 0x6630202c33313266,0x3030303030304533,0x3b3238336625202c,0x3233662e6275730a\n"
".quad 0x202c343833662520,0x6625202c34326625,0x2e646c0a3b333833,0x36752e6d61726170\n"
".quad 0x3030356c72252034,0x524c395a5f5b202c,0x50434442415f645f,0x705f666d665f5366\n"
".quad 0x3b5d335f6d617261,0x203220636f6c2e0a,0x6d0a312031353333,0x36732e6f6c2e6461\n"
".quad 0x3538316c72252034,0x2c37316c7225202c,0x2c3030356c722520,0x6c0a3b356c722520\n"
".quad 0x2e6d617261702e64,0x346c722520343675,0x395a5f5b202c3739,0x4442415f645f524c\n"
".quad 0x666d665f53665043,0x315f6d617261705f,0x2e617476630a3b5d,0x61626f6c672e6f74\n"
".quad 0x7225203436752e6c,0x7225202c3638316c,0x68730a3b3739346c,0x7225203436622e6c\n"
".quad 0x7225202c3738316c,0x3233202c3538316c,0x36732e7268730a3b,0x3838316c72252034\n"
".quad 0x3738316c7225202c,0x6c2e0a3b3233202c,0x343433203220636f,0x2e6c68730a312033\n"
".quad 0x316c722520343662,0x316c7225202c3938,0x610a3b32202c3838,0x25203436732e6464\n"
".quad 0x25202c3039316c72,0x25202c3638316c72,0x2e0a3b3938316c72,0x3533203220636f6c\n"
".quad 0x2e74730a31203231,0x662e6c61626f6c67,0x316c72255b203233,0x326625202c5d3039\n"
".quad 0x2e6464610a3b3033,0x316c722520343673,0x316c7225202c3139,0x3b36393034202c37\n"
".quad 0x203220636f6c2e0a,0x6d0a312034343433,0x36732e6f6c2e6461,0x3239316c72252034\n"
".quad 0x3139316c7225202c,0x3030356c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3339316c7225,0x202c3239316c7225,0x2e7268730a3b3233,0x316c722520343673\n"
".quad 0x316c7225202c3439,0x0a3b3233202c3339,0x33203220636f6c2e,0x68730a3120343434\n"
".quad 0x7225203436622e6c,0x7225202c3539316c,0x3b32202c3439316c,0x3436732e6464610a\n"
".quad 0x2c3639316c722520,0x2c3638316c722520,0x3b3539316c722520,0x203220636f6c2e0a\n"
".quad 0x730a312033313533,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3639316c\n"
".quad 0x64610a3b37333266,0x7225203436732e64,0x7225202c3739316c,0x393138202c37316c\n"
".quad 0x20636f6c2e0a3b32,0x3120353434332032,0x2e6f6c2e64616d0a,0x316c722520343673\n"
".quad 0x316c7225202c3839,0x356c7225202c3739,0x356c7225202c3030,0x36622e6c68730a3b\n"
".quad 0x3939316c72252034,0x3839316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3030326c,0x3233202c3939316c,0x3220636f6c2e0a3b,0x0a31203534343320\n"
".quad 0x203436622e6c6873,0x202c3130326c7225,0x202c3030326c7225,0x732e6464610a3b32\n"
".quad 0x30326c7225203436,0x38316c7225202c32,0x30326c7225202c36,0x20636f6c2e0a3b31\n"
".quad 0x3120343135332032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3230326c7225\n"
".quad 0x0a3b353432662520,0x203436732e646461,0x202c3330326c7225,0x31202c37316c7225\n"
".quad 0x6c2e0a3b38383232,0x343433203220636f,0x2e64616d0a312036,0x25203436732e6f6c\n"
".quad 0x25202c3430326c72,0x25202c3330326c72,0x25202c3030356c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c353032,0x3b3233202c343032,0x3436732e7268730a\n"
".quad 0x2c3630326c722520,0x2c3530326c722520,0x6f6c2e0a3b323320,0x3634343320322063\n"
".quad 0x622e6c68730a3120,0x30326c7225203436,0x30326c7225202c37,0x64610a3b32202c36\n"
".quad 0x7225203436732e64,0x7225202c3830326c,0x7225202c3638316c,0x6c2e0a3b3730326c\n"
".quad 0x313533203220636f,0x672e74730a312035,0x33662e6c61626f6c,0x30326c72255b2032\n"
".quad 0x34326625202c5d38,0x732e6464610a3b39,0x30326c7225203436,0x37316c7225202c39\n"
".quad 0x3b3438333631202c,0x203220636f6c2e0a,0x6d0a312037343433,0x36732e6f6c2e6461\n"
".quad 0x3031326c72252034,0x3930326c7225202c,0x3030356c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3131326c7225,0x202c3031326c7225,0x2e7268730a3b3233\n"
".quad 0x326c722520343673,0x326c7225202c3231,0x0a3b3233202c3131,0x33203220636f6c2e\n"
".quad 0x68730a3120373434,0x7225203436622e6c,0x7225202c3331326c,0x3b32202c3231326c\n"
".quad 0x3436732e6464610a,0x2c3431326c722520,0x2c3638316c722520,0x3b3331326c722520\n"
".quad 0x203220636f6c2e0a,0x730a312036313533,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3431326c,0x64610a3b35353266,0x7225203436732e64,0x7225202c3531326c\n"
".quad 0x343032202c37316c,0x636f6c2e0a3b3038,0x2038343433203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c363132,0x6c7225202c353132,0x6c7225202c303035\n"
".quad 0x622e6c68730a3b35,0x31326c7225203436,0x31326c7225202c37,0x730a3b3233202c36\n"
".quad 0x25203436732e7268,0x25202c3831326c72,0x33202c3731326c72,0x20636f6c2e0a3b32\n"
".quad 0x3120383434332032,0x3436622e6c68730a,0x2c3931326c722520,0x2c3831326c722520\n"
".quad 0x2e6464610a3b3220,0x326c722520343673,0x316c7225202c3032,0x326c7225202c3638\n"
".quad 0x636f6c2e0a3b3931,0x2037313533203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x5d3032326c72255b,0x3b3736326625202c,0x3436732e6464610a,0x2c3132326c722520\n"
".quad 0x202c37316c722520,0x2e0a3b3637353432,0x3433203220636f6c,0x64616d0a31203934\n"
".quad 0x203436732e6f6c2e,0x202c3232326c7225,0x202c3132326c7225,0x202c3030356c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3332326c,0x3233202c3232326c\n"
".quad 0x36732e7268730a3b,0x3432326c72252034,0x3332326c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x343433203220636f,0x2e6c68730a312039,0x326c722520343662,0x326c7225202c3532\n"
".quad 0x610a3b32202c3432,0x25203436732e6464,0x25202c3632326c72,0x25202c3638316c72\n"
".quad 0x2e0a3b3532326c72,0x3533203220636f6c,0x2e74730a31203831,0x662e6c61626f6c67\n"
".quad 0x326c72255b203233,0x326625202c5d3632,0x2e6464610a3b3038,0x326c722520343673\n"
".quad 0x316c7225202c3732,0x3237363832202c37,0x3220636f6c2e0a3b,0x0a31203035343320\n"
".quad 0x732e6f6c2e64616d,0x32326c7225203436,0x32326c7225202c38,0x30356c7225202c37\n"
".quad 0x3b356c7225202c30,0x3436622e6c68730a,0x2c3932326c722520,0x2c3832326c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c303332,0x3b3233202c393232\n"
".quad 0x203220636f6c2e0a,0x730a312030353433,0x25203436622e6c68,0x25202c3133326c72\n"
".quad 0x32202c3033326c72,0x36732e6464610a3b,0x3233326c72252034,0x3638316c7225202c\n"
".quad 0x3133326c7225202c,0x3220636f6c2e0a3b,0x0a31203931353320,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3233326c72,0x610a3b3039326625,0x25203436732e6464\n"
".quad 0x25202c3333326c72,0x3233202c37316c72,0x6f6c2e0a3b383637,0x3135343320322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3433326c,0x7225202c3333326c\n"
".quad 0x7225202c3030356c,0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3533\n"
".quad 0x0a3b3233202c3433,0x203436732e726873,0x202c3633326c7225,0x202c3533326c7225\n"
".quad 0x636f6c2e0a3b3233,0x2031353433203220,0x36622e6c68730a31,0x3733326c72252034\n"
".quad 0x3633326c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c383332\n"
".quad 0x6c7225202c363831,0x6f6c2e0a3b373332,0x3032353320322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x3833326c72255b20,0x3939326625202c5d,0x36732e6464610a3b\n"
".quad 0x3933326c72252034,0x2c37316c7225202c,0x0a3b343638363320,0x33203220636f6c2e\n"
".quad 0x616d0a3120323534,0x3436732e6f6c2e64,0x2c3034326c722520,0x2c3933326c722520\n"
".quad 0x2c3030356c722520,0x730a3b356c722520,0x25203436622e6c68,0x25202c3134326c72\n"
".quad 0x33202c3034326c72,0x732e7268730a3b32,0x34326c7225203436,0x34326c7225202c32\n"
".quad 0x2e0a3b3233202c31,0x3433203220636f6c,0x6c68730a31203235,0x6c7225203436622e\n"
".quad 0x6c7225202c333432,0x0a3b32202c323432,0x203436732e646461,0x202c3434326c7225\n"
".quad 0x202c3638316c7225,0x0a3b3334326c7225,0x33203220636f6c2e,0x74730a3120313235\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d343432,0x6464610a3b373033\n"
".quad 0x6c7225203436732e,0x6c7225202c353432,0x36393034202c3731,0x20636f6c2e0a3b30\n"
".quad 0x3120333534332032,0x2e6f6c2e64616d0a,0x326c722520343673,0x326c7225202c3634\n"
".quad 0x356c7225202c3534,0x356c7225202c3030,0x36622e6c68730a3b,0x3734326c72252034\n"
".quad 0x3634326c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3834326c\n"
".quad 0x3233202c3734326c,0x3220636f6c2e0a3b,0x0a31203335343320,0x203436622e6c6873\n"
".quad 0x202c3934326c7225,0x202c3834326c7225,0x732e6464610a3b32,0x35326c7225203436\n"
".quad 0x38316c7225202c30,0x34326c7225202c36,0x20636f6c2e0a3b39,0x3120323235332032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3035326c7225,0x0a3b373133662520\n"
".quad 0x203436732e646461,0x202c3135326c7225,0x34202c37316c7225,0x6c2e0a3b36353035\n"
".quad 0x353433203220636f,0x2e64616d0a312034,0x25203436732e6f6c,0x25202c3235326c72\n"
".quad 0x25202c3135326c72,0x25202c3030356c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c333532,0x3b3233202c323532,0x3436732e7268730a,0x2c3435326c722520\n"
".quad 0x2c3335326c722520,0x6f6c2e0a3b323320,0x3435343320322063,0x622e6c68730a3120\n"
".quad 0x35326c7225203436,0x35326c7225202c35,0x64610a3b32202c34,0x7225203436732e64\n"
".quad 0x7225202c3635326c,0x7225202c3638316c,0x6c2e0a3b3535326c,0x323533203220636f\n"
".quad 0x672e74730a312033,0x33662e6c61626f6c,0x35326c72255b2032,0x32336625202c5d36\n"
".quad 0x732e6464610a3b36,0x35326c7225203436,0x37316c7225202c37,0x3b3235313934202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312035353433,0x36732e6f6c2e6461,0x3835326c72252034\n"
".quad 0x3735326c7225202c,0x3030356c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3935326c7225,0x202c3835326c7225,0x2e7268730a3b3233,0x326c722520343673\n"
".quad 0x326c7225202c3036,0x0a3b3233202c3935,0x33203220636f6c2e,0x68730a3120353534\n"
".quad 0x7225203436622e6c,0x7225202c3136326c,0x3b32202c3036326c,0x3436732e6464610a\n"
".quad 0x2c3236326c722520,0x2c3638316c722520,0x3b3136326c722520,0x203220636f6c2e0a\n"
".quad 0x730a312034323533,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3236326c\n"
".quad 0x6c2e0a3b36333366,0x353433203220636f,0x2e64616d0a312036,0x25203436732e6f6c\n"
".quad 0x25202c3436326c72,0x7225202c38316c72,0x7225202c3030356c,0x2e6c68730a3b356c\n"
".quad 0x326c722520343662,0x326c7225202c3536,0x0a3b3233202c3436,0x203436732e726873\n"
".quad 0x202c3636326c7225,0x202c3536326c7225,0x636f6c2e0a3b3233,0x2036353433203220\n"
".quad 0x36622e6c68730a31,0x3736326c72252034,0x3636326c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c383632,0x6c7225202c363831,0x6f6c2e0a3b373632\n"
".quad 0x3532353320322063,0x6c672e74730a3120,0x3233662e6c61626f,0x3836326c72255b20\n"
".quad 0x3534336625202c5d,0x3220636f6c2e0a3b,0x0a31203735343320,0x732e6f6c2e64616d\n"
".quad 0x37326c7225203436,0x34326c7225202c30,0x3030356c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3137326c7225,0x202c3037326c7225,0x2e7268730a3b3233\n"
".quad 0x326c722520343673,0x326c7225202c3237,0x0a3b3233202c3137,0x33203220636f6c2e\n"
".quad 0x68730a3120373534,0x7225203436622e6c,0x7225202c3337326c,0x3b32202c3237326c\n"
".quad 0x3436732e6464610a,0x2c3437326c722520,0x2c3638316c722520,0x3b3337326c722520\n"
".quad 0x203220636f6c2e0a,0x730a312036323533,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3437326c,0x6c2e0a3b31353366,0x353433203220636f,0x2e64616d0a312038\n"
".quad 0x25203436732e6f6c,0x25202c3637326c72,0x7225202c39326c72,0x7225202c3030356c\n"
".quad 0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3737,0x0a3b3233202c3637\n"
".quad 0x203436732e726873,0x202c3837326c7225,0x202c3737326c7225,0x636f6c2e0a3b3233\n"
".quad 0x2038353433203220,0x36622e6c68730a31,0x3937326c72252034,0x3837326c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c303832,0x6c7225202c363831\n"
".quad 0x6f6c2e0a3b393732,0x3732353320322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3038326c72255b20,0x3136336625202c5d,0x3220636f6c2e0a3b,0x0a31203935343320\n"
".quad 0x732e6f6c2e64616d,0x38326c7225203436,0x34336c7225202c32,0x3030356c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3338326c7225,0x202c3238326c7225\n"
".quad 0x2e7268730a3b3233,0x326c722520343673,0x326c7225202c3438,0x0a3b3233202c3338\n"
".quad 0x33203220636f6c2e,0x68730a3120393534,0x7225203436622e6c,0x7225202c3538326c\n"
".quad 0x3b32202c3438326c,0x3436732e6464610a,0x2c3638326c722520,0x2c3638316c722520\n"
".quad 0x3b3538326c722520,0x203220636f6c2e0a,0x730a312038323533,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3638326c,0x6c2e0a3b38363366,0x363433203220636f\n"
".quad 0x2e64616d0a312030,0x25203436732e6f6c,0x25202c3838326c72,0x7225202c39336c72\n"
".quad 0x7225202c3030356c,0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3938\n"
".quad 0x0a3b3233202c3838,0x203436732e726873,0x202c3039326c7225,0x202c3938326c7225\n"
".quad 0x636f6c2e0a3b3233,0x2030363433203220,0x36622e6c68730a31,0x3139326c72252034\n"
".quad 0x3039326c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c323932\n"
".quad 0x6c7225202c363831,0x6f6c2e0a3b313932,0x3932353320322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x3239326c72255b20,0x3737336625202c5d,0x3220636f6c2e0a3b\n"
".quad 0x0a31203136343320,0x732e6f6c2e64616d,0x39326c7225203436,0x34346c7225202c34\n"
".quad 0x3030356c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3539326c7225\n"
".quad 0x202c3439326c7225,0x2e7268730a3b3233,0x326c722520343673,0x326c7225202c3639\n"
".quad 0x0a3b3233202c3539,0x33203220636f6c2e,0x68730a3120313634,0x7225203436622e6c\n"
".quad 0x7225202c3739326c,0x3b32202c3639326c,0x3436732e6464610a,0x2c3839326c722520\n"
".quad 0x2c3638316c722520,0x3b3739326c722520,0x203220636f6c2e0a,0x730a312030333533\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3839326c,0x6c2e0a3b34383366\n"
".quad 0x333533203220636f,0x3b7465720a322033,0x365f383242420a0a,0x7261702e646c0a3a\n"
".quad 0x25203436752e6d61,0x5b202c3939346c72,0x5f645f524c395a5f,0x5f53665043444241\n"
".quad 0x617261705f666d66,0x6c2e0a3b5d335f6d,0x343433203220636f,0x2e64616d0a312034\n"
".quad 0x25203436732e6f6c,0x25202c3430336c72,0x7225202c35356c72,0x7225202c3939346c\n"
".quad 0x702e646c0a3b356c,0x3436752e6d617261,0x2c3639346c722520,0x5f524c395a5f5b20\n"
".quad 0x6650434442415f64,0x61705f666d665f53,0x0a3b5d315f6d6172,0x2e6f742e61747663\n"
".quad 0x752e6c61626f6c67,0x30336c7225203436,0x39346c7225202c35,0x622e6c68730a3b36\n"
".quad 0x30336c7225203436,0x30336c7225202c36,0x730a3b3233202c34,0x25203436732e7268\n"
".quad 0x25202c3730336c72,0x33202c3630336c72,0x20636f6c2e0a3b32,0x3120343434332032\n"
".quad 0x3436622e6c68730a,0x2c3830336c722520,0x2c3730336c722520,0x2e6464610a3b3220\n"
".quad 0x336c722520343673,0x336c7225202c3930,0x336c7225202c3530,0x636f6c2e0a3b3830\n"
".quad 0x2037383433203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3930336c72255b\n"
".quad 0x610a3b386625202c,0x25203436732e6464,0x25202c3031336c72,0x3138202c34356c72\n"
".quad 0x636f6c2e0a3b3239,0x2035343433203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c313133,0x6c7225202c303133,0x6c7225202c393934,0x622e6c68730a3b35\n"
".quad 0x31336c7225203436,0x31336c7225202c32,0x730a3b3233202c31,0x25203436732e7268\n"
".quad 0x25202c3331336c72,0x33202c3231336c72,0x20636f6c2e0a3b32,0x3120353434332032\n"
".quad 0x3436622e6c68730a,0x2c3431336c722520,0x2c3331336c722520,0x2e6464610a3b3220\n"
".quad 0x336c722520343673,0x336c7225202c3531,0x336c7225202c3530,0x636f6c2e0a3b3431\n"
".quad 0x2038383433203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3531336c72255b\n"
".quad 0x0a3b32316625202c,0x33203220636f6c2e,0x616d0a3120363434,0x3436732e6f6c2e64\n"
".quad 0x2c3731336c722520,0x202c32366c722520,0x202c3939346c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3831336c,0x3233202c3731336c,0x36732e7268730a3b\n"
".quad 0x3931336c72252034,0x3831336c7225202c,0x6c2e0a3b3233202c,0x343433203220636f\n"
".quad 0x2e6c68730a312036,0x336c722520343662,0x336c7225202c3032,0x610a3b32202c3931\n"
".quad 0x25203436732e6464,0x25202c3132336c72,0x25202c3530336c72,0x2e0a3b3032336c72\n"
".quad 0x3433203220636f6c,0x2e74730a31203938,0x662e6c61626f6c67,0x336c72255b203233\n"
".quad 0x376625202c5d3132,0x36732e6464610a3b,0x3232336c72252034,0x2c34356c7225202c\n"
".quad 0x0a3b343833363120,0x33203220636f6c2e,0x616d0a3120373434,0x3436732e6f6c2e64\n"
".quad 0x2c3332336c722520,0x2c3232336c722520,0x2c3939346c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3432336c72,0x33202c3332336c72,0x732e7268730a3b32\n"
".quad 0x32336c7225203436,0x32336c7225202c35,0x2e0a3b3233202c34,0x3433203220636f6c\n"
".quad 0x6c68730a31203734,0x6c7225203436622e,0x6c7225202c363233,0x0a3b32202c353233\n"
".quad 0x203436732e646461,0x202c3732336c7225,0x202c3530336c7225,0x0a3b3632336c7225\n"
".quad 0x33203220636f6c2e,0x74730a3120303934,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d373233,0x732e6464610a3b39,0x32336c7225203436,0x34356c7225202c38\n"
".quad 0x3b3038343032202c,0x203220636f6c2e0a,0x6d0a312038343433,0x36732e6f6c2e6461\n"
".quad 0x3932336c72252034,0x3832336c7225202c,0x3939346c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3033336c7225,0x202c3932336c7225,0x2e7268730a3b3233\n"
".quad 0x336c722520343673,0x336c7225202c3133,0x0a3b3233202c3033,0x33203220636f6c2e\n"
".quad 0x68730a3120383434,0x7225203436622e6c,0x7225202c3233336c,0x3b32202c3133336c\n"
".quad 0x3436732e6464610a,0x2c3333336c722520,0x2c3530336c722520,0x3b3233336c722520\n"
".quad 0x203220636f6c2e0a,0x730a312031393433,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3333336c,0x6464610a3b333166,0x6c7225203436732e,0x6c7225202c343333\n"
".quad 0x37353432202c3435,0x20636f6c2e0a3b36,0x3120393434332032,0x2e6f6c2e64616d0a\n"
".quad 0x336c722520343673,0x336c7225202c3533,0x346c7225202c3433,0x356c7225202c3939\n"
".quad 0x36622e6c68730a3b,0x3633336c72252034,0x3533336c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3733336c,0x3233202c3633336c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203934343320,0x203436622e6c6873,0x202c3833336c7225,0x202c3733336c7225\n"
".quad 0x732e6464610a3b32,0x33336c7225203436,0x30336c7225202c39,0x33336c7225202c35\n"
".quad 0x20636f6c2e0a3b38,0x3120323934332032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3933336c7225,0x610a3b3431662520,0x25203436732e6464,0x25202c3034336c72\n"
".quad 0x3832202c34356c72,0x6f6c2e0a3b323736,0x3035343320322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3134336c,0x7225202c3034336c,0x7225202c3939346c\n"
".quad 0x2e6c68730a3b356c,0x336c722520343662,0x336c7225202c3234,0x0a3b3233202c3134\n"
".quad 0x203436732e726873,0x202c3334336c7225,0x202c3234336c7225,0x636f6c2e0a3b3233\n"
".quad 0x2030353433203220,0x36622e6c68730a31,0x3434336c72252034,0x3334336c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c353433,0x6c7225202c353033\n"
".quad 0x6f6c2e0a3b343433,0x3339343320322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3534336c72255b20,0x3b30316625202c5d,0x3436732e6464610a,0x2c3634336c722520\n"
".quad 0x202c34356c722520,0x2e0a3b3836373233,0x3433203220636f6c,0x64616d0a31203135\n"
".quad 0x203436732e6f6c2e,0x202c3734336c7225,0x202c3634336c7225,0x202c3939346c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3834336c,0x3233202c3734336c\n"
".quad 0x36732e7268730a3b,0x3934336c72252034,0x3834336c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x353433203220636f,0x2e6c68730a312031,0x336c722520343662,0x336c7225202c3035\n"
".quad 0x610a3b32202c3934,0x25203436732e6464,0x25202c3135336c72,0x25202c3530336c72\n"
".quad 0x2e0a3b3035336c72,0x3433203220636f6c,0x2e74730a31203439,0x662e6c61626f6c67\n"
".quad 0x336c72255b203233,0x316625202c5d3135,0x732e6464610a3b31,0x35336c7225203436\n"
".quad 0x34356c7225202c32,0x3b3436383633202c,0x203220636f6c2e0a,0x6d0a312032353433\n"
".quad 0x36732e6f6c2e6461,0x3335336c72252034,0x3235336c7225202c,0x3939346c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3435336c7225,0x202c3335336c7225\n"
".quad 0x2e7268730a3b3233,0x336c722520343673,0x336c7225202c3535,0x0a3b3233202c3435\n"
".quad 0x33203220636f6c2e,0x68730a3120323534,0x7225203436622e6c,0x7225202c3635336c\n"
".quad 0x3b32202c3535336c,0x3436732e6464610a,0x2c3735336c722520,0x2c3530336c722520\n"
".quad 0x3b3635336c722520,0x203220636f6c2e0a,0x730a312035393433,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3735336c,0x6464610a3b303266,0x6c7225203436732e\n"
".quad 0x6c7225202c383533,0x36393034202c3435,0x20636f6c2e0a3b30,0x3120333534332032\n"
".quad 0x2e6f6c2e64616d0a,0x336c722520343673,0x336c7225202c3935,0x346c7225202c3835\n"
".quad 0x356c7225202c3939,0x36622e6c68730a3b,0x3036336c72252034,0x3935336c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3136336c,0x3233202c3036336c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203335343320,0x203436622e6c6873,0x202c3236336c7225\n"
".quad 0x202c3136336c7225,0x732e6464610a3b32,0x36336c7225203436,0x30336c7225202c33\n"
".quad 0x36336c7225202c35,0x20636f6c2e0a3b32,0x3120363934332032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3336336c7225,0x610a3b3332662520,0x25203436732e6464\n"
".quad 0x25202c3436336c72,0x3534202c34356c72,0x6f6c2e0a3b363530,0x3435343320322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3536336c,0x7225202c3436336c\n"
".quad 0x7225202c3939346c,0x2e6c68730a3b356c,0x336c722520343662,0x336c7225202c3636\n"
".quad 0x0a3b3233202c3536,0x203436732e726873,0x202c3736336c7225,0x202c3636336c7225\n"
".quad 0x636f6c2e0a3b3233,0x2034353433203220,0x36622e6c68730a31,0x3836336c72252034\n"
".quad 0x3736336c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c393633\n"
".quad 0x6c7225202c353033,0x6f6c2e0a3b383633,0x3739343320322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x3936336c72255b20,0x3b34326625202c5d,0x3436732e6464610a\n"
".quad 0x2c3037336c722520,0x202c34356c722520,0x2e0a3b3235313934,0x3433203220636f6c\n"
".quad 0x64616d0a31203535,0x203436732e6f6c2e,0x202c3137336c7225,0x202c3037336c7225\n"
".quad 0x202c3939346c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3237336c\n"
".quad 0x3233202c3137336c,0x36732e7268730a3b,0x3337336c72252034,0x3237336c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x353433203220636f,0x2e6c68730a312035,0x336c722520343662\n"
".quad 0x336c7225202c3437,0x610a3b32202c3337,0x25203436732e6464,0x25202c3537336c72\n"
".quad 0x25202c3530336c72,0x2e0a3b3437336c72,0x3433203220636f6c,0x2e74730a31203839\n"
".quad 0x662e6c61626f6c67,0x336c72255b203233,0x326625202c5d3537,0x732e6464610a3b31\n"
".quad 0x37336c7225203436,0x34356c7225202c36,0x3b3834323335202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312036353433,0x36732e6f6c2e6461,0x3737336c72252034,0x3637336c7225202c\n"
".quad 0x3939346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3837336c7225\n"
".quad 0x202c3737336c7225,0x2e7268730a3b3233,0x336c722520343673,0x336c7225202c3937\n"
".quad 0x0a3b3233202c3837,0x33203220636f6c2e,0x68730a3120363534,0x7225203436622e6c\n"
".quad 0x7225202c3038336c,0x3b32202c3937336c,0x3436732e6464610a,0x2c3138336c722520\n"
".quad 0x2c3530336c722520,0x3b3038336c722520,0x203220636f6c2e0a,0x730a312039393433\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3138336c,0x6464610a3b323266\n"
".quad 0x6c7225203436732e,0x6c7225202c323833,0x34333735202c3435,0x20636f6c2e0a3b34\n"
".quad 0x3120373534332032,0x2e6f6c2e64616d0a,0x336c722520343673,0x336c7225202c3338\n"
".quad 0x346c7225202c3238,0x356c7225202c3939,0x36622e6c68730a3b,0x3438336c72252034\n"
".quad 0x3338336c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3538336c\n"
".quad 0x3233202c3438336c,0x3220636f6c2e0a3b,0x0a31203735343320,0x203436622e6c6873\n"
".quad 0x202c3638336c7225,0x202c3538336c7225,0x732e6464610a3b32,0x38336c7225203436\n"
".quad 0x30336c7225202c37,0x38336c7225202c35,0x20636f6c2e0a3b36,0x3120303035332032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3738336c7225,0x610a3b3531662520\n"
".quad 0x25203436732e6464,0x25202c3838336c72,0x3136202c34356c72,0x6f6c2e0a3b303434\n"
".quad 0x3835343320322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3938336c\n"
".quad 0x7225202c3838336c,0x7225202c3939346c,0x2e6c68730a3b356c,0x336c722520343662\n"
".quad 0x336c7225202c3039,0x0a3b3233202c3938,0x203436732e726873,0x202c3139336c7225\n"
".quad 0x202c3039336c7225,0x636f6c2e0a3b3233,0x2038353433203220,0x36622e6c68730a31\n"
".quad 0x3239336c72252034,0x3139336c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c333933,0x6c7225202c353033,0x6f6c2e0a3b323933,0x3130353320322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3339336c72255b20,0x3b38316625202c5d\n"
".quad 0x3436732e6464610a,0x2c3439336c722520,0x202c34356c722520,0x2e0a3b3633353536\n"
".quad 0x3433203220636f6c,0x64616d0a31203935,0x203436732e6f6c2e,0x202c3539336c7225\n"
".quad 0x202c3439336c7225,0x202c3939346c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3639336c,0x3233202c3539336c,0x36732e7268730a3b,0x3739336c72252034\n"
".quad 0x3639336c7225202c,0x6c2e0a3b3233202c,0x353433203220636f,0x2e6c68730a312039\n"
".quad 0x336c722520343662,0x336c7225202c3839,0x610a3b32202c3739,0x25203436732e6464\n"
".quad 0x25202c3939336c72,0x25202c3530336c72,0x2e0a3b3839336c72,0x3533203220636f6c\n"
".quad 0x2e74730a31203230,0x662e6c61626f6c67,0x336c72255b203233,0x316625202c5d3939\n"
".quad 0x732e6464610a3b39,0x30346c7225203436,0x34356c7225202c30,0x3b3233363936202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312030363433,0x36732e6f6c2e6461,0x3130346c72252034\n"
".quad 0x3030346c7225202c,0x3939346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3230346c7225,0x202c3130346c7225,0x2e7268730a3b3233,0x346c722520343673\n"
".quad 0x346c7225202c3330,0x0a3b3233202c3230,0x33203220636f6c2e,0x68730a3120303634\n"
".quad 0x7225203436622e6c,0x7225202c3430346c,0x3b32202c3330346c,0x3436732e6464610a\n"
".quad 0x2c3530346c722520,0x2c3530336c722520,0x3b3430346c722520,0x203220636f6c2e0a\n"
".quad 0x730a312033303533,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3530346c\n"
".quad 0x6464610a3b363166,0x6c7225203436732e,0x6c7225202c363034,0x32373337202c3435\n"
".quad 0x20636f6c2e0a3b38,0x3120313634332032,0x2e6f6c2e64616d0a,0x346c722520343673\n"
".quad 0x346c7225202c3730,0x346c7225202c3630,0x356c7225202c3939,0x36622e6c68730a3b\n"
".quad 0x3830346c72252034,0x3730346c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3930346c,0x3233202c3830346c,0x3220636f6c2e0a3b,0x0a31203136343320\n"
".quad 0x203436622e6c6873,0x202c3031346c7225,0x202c3930346c7225,0x732e6464610a3b32\n"
".quad 0x31346c7225203436,0x30336c7225202c31,0x31346c7225202c35,0x20636f6c2e0a3b30\n"
".quad 0x3120343035332032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3131346c7225\n"
".quad 0x2e0a3b3731662520,0x3533203220636f6c,0x7465720a32203333,0x5f383242420a0a3b\n"
".quad 0x20636f6c2e0a3a37,0x3120303533332032,0x3233732e6464610a,0x202c303231722520\n"
".quad 0x0a3b31202c347225,0x33203220636f6c2e,0x76630a3120343633,0x3233662e6e722e74\n"
".quad 0x366625203233732e,0x32317225202c3331,0x662e6275730a3b30,0x3431366625203233\n"
".quad 0x2c3331366625202c,0x68730a3b35662520,0x7225203233622e6c,0x347225202c313231\n"
".quad 0x6f6c2e0a3b36202c,0x3436333320322063,0x722e7476630a3120,0x33732e3233662e6e\n"
".quad 0x2c35313666252032,0x0a3b313231722520,0x203233662e646461,0x25202c3631366625\n"
".quad 0x46336630202c3466,0x0a3b303030303030,0x203233662e646461,0x25202c3630366625\n"
".quad 0x6625202c36313666,0x6464610a3b353136,0x366625203233662e,0x2c336625202c3131\n"
".quad 0x3030304633663020,0x766f6d0a3b303030,0x317225203233752e,0x0a0a3b30202c3232\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x383366257b203233,0x3638336625202c35\n"
".quad 0x2c3738336625202c,0x2c7d383833662520,0x6665527865745b20,0x257b202c4230665f\n"
".quad 0x6625202c31313666,0x0a0a3b5d7d363036,0x203220636f6c2e09,0x630a312034363333\n"
".quad 0x33662e6e722e7476,0x6625203233732e32,0x347225202c373136,0x33662e6275730a3b\n"
".quad 0x2c38313666252032,0x6625202c35662520,0x6c68730a3b373136,0x317225203233622e\n"
".quad 0x32317225202c3332,0x6c2e0a3b36202c30,0x363333203220636f,0x2e7476630a312034\n"
".quad 0x732e3233662e6e72,0x3931366625203233,0x3b3332317225202c,0x3233662e6464610a\n"
".quad 0x202c323136662520,0x25202c3631366625,0x090a0a3b39313666,0x762e64322e786574\n"
".quad 0x33662e3233662e34,0x31393366257b2032,0x2c3239336625202c,0x202c333933662520\n"
".quad 0x202c7d3439336625,0x5f6665527865745b,0x66257b202c423066,0x366625202c313136\n"
".quad 0x090a0a3b5d7d3231,0x203233662e6c756d,0x25202c3032366625,0x6625202c38313666\n"
".quad 0x616d660a3b313933,0x203233662e6e722e,0x25202c3132366625,0x6625202c34313666\n"
".quad 0x366625202c353833,0x6574090a0a3b3032,0x2e34762e64322e78,0x203233662e323366\n"
".quad 0x202c37393366257b,0x25202c3839336625,0x6625202c39393366,0x745b202c7d303034\n"
".quad 0x32665f6665527865,0x313666257b202c42,0x3630366625202c31,0x090a090a0a3b5d7d\n"
".quad 0x762e64322e786574,0x33662e3233662e34,0x33303466257b2032,0x2c3430346625202c\n"
".quad 0x202c353034662520,0x202c7d3630346625,0x5f6665527865745b,0x66257b202c423266\n"
".quad 0x366625202c313136,0x090a0a3b5d7d3231,0x33203220636f6c2e,0x756d0a3120353633\n"
".quad 0x6625203233662e6c,0x366625202c323236,0x30346625202c3831,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x366625202c333236,0x39336625202c3431,0x3232366625202c37\n"
".quad 0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32,0x6625202c39303466\n"
".quad 0x346625202c303134,0x31346625202c3131,0x7865745b202c7d32,0x2c4234665f666552\n"
".quad 0x2c31313666257b20,0x5d7d363036662520,0x6574090a090a0a3b,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x202c35313466257b,0x25202c3631346625,0x6625202c37313466\n"
".quad 0x745b202c7d383134,0x34665f6665527865,0x313666257b202c42,0x3231366625202c31\n"
".quad 0x6c2e090a0a3b5d7d,0x363333203220636f,0x2e6c756d0a312036,0x3236662520323366\n"
".quad 0x3831366625202c34,0x3b3531346625202c,0x2e6e722e616d660a,0x3236662520323366\n"
".quad 0x3431366625202c35,0x2c3930346625202c,0x0a3b343236662520,0x64322e786574090a\n"
".quad 0x2e3233662e34762e,0x3466257b20323366,0x32346625202c3132,0x3332346625202c32\n"
".quad 0x7d3432346625202c,0x65527865745b202c,0x7b202c4239665f66,0x25202c3131366625\n"
".quad 0x0a3b5d7d36303666,0x2e786574090a090a,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x6625202c37323466,0x346625202c383234,0x33346625202c3932,0x7865745b202c7d30\n"
".quad 0x2c4239665f666552,0x2c31313666257b20,0x5d7d323136662520,0x636f6c2e090a0a3b\n"
".quad 0x2037363333203220,0x33662e6c756d0a31,0x2c36323666252032,0x202c383136662520\n"
".quad 0x660a3b3732346625,0x33662e6e722e616d,0x2c37323666252032,0x202c343136662520\n"
".quad 0x25202c3132346625,0x090a0a3b36323666,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x33333466257b2032,0x2c3433346625202c,0x202c353334662520,0x202c7d3633346625\n"
".quad 0x5f6665527865745b,0x257b202c42313166,0x6625202c31313666,0x0a0a3b5d7d363036\n"
".quad 0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e,0x346625202c393334\n"
".quad 0x34346625202c3034,0x3234346625202c31,0x527865745b202c7d,0x2c423131665f6665\n"
".quad 0x2c31313666257b20,0x5d7d323136662520,0x636f6c2e090a0a3b,0x2038363333203220\n"
".quad 0x33662e6c756d0a31,0x2c38323666252032,0x202c383136662520,0x660a3b3933346625\n"
".quad 0x33662e6e722e616d,0x2c39323666252032,0x202c343136662520,0x25202c3333346625\n"
".quad 0x090a0a3b38323666,0x762e64322e786574,0x33662e3233662e34,0x35343466257b2032\n"
".quad 0x2c3634346625202c,0x202c373434662520,0x202c7d3834346625,0x5f6665527865745b\n"
".quad 0x257b202c42333166,0x6625202c31313666,0x0a0a3b5d7d363036,0x322e786574090a09\n"
".quad 0x3233662e34762e64,0x66257b203233662e,0x346625202c313534,0x35346625202c3235\n"
".quad 0x3435346625202c33,0x527865745b202c7d,0x2c423331665f6665,0x2c31313666257b20\n"
".quad 0x5d7d323136662520,0x636f6c2e090a0a3b,0x2039363333203220,0x33662e6c756d0a31\n"
".quad 0x2c30333666252032,0x202c383136662520,0x660a3b3135346625,0x33662e6e722e616d\n"
".quad 0x2c31333666252032,0x202c343136662520,0x25202c3534346625,0x090a0a3b30333666\n"
".quad 0x762e64322e786574,0x33662e3233662e34,0x37353466257b2032,0x2c3835346625202c\n"
".quad 0x202c393534662520,0x202c7d3036346625,0x5f6665527865745b,0x257b202c42343166\n"
".quad 0x6625202c31313666,0x0a0a3b5d7d363036,0x322e786574090a09,0x3233662e34762e64\n"
".quad 0x66257b203233662e,0x346625202c333634,0x36346625202c3436,0x3636346625202c35\n"
".quad 0x527865745b202c7d,0x2c423431665f6665,0x2c31313666257b20,0x5d7d323136662520\n"
".quad 0x636f6c2e090a0a3b,0x2030373333203220,0x33662e6c756d0a31,0x2c32333666252032\n"
".quad 0x202c383136662520,0x660a3b3336346625,0x33662e6e722e616d,0x2c33333666252032\n"
".quad 0x202c343136662520,0x25202c3735346625,0x090a0a3b32333666,0x762e64322e786574\n"
".quad 0x33662e3233662e34,0x39363466257b2032,0x2c3037346625202c,0x202c313734662520\n"
".quad 0x202c7d3237346625,0x5f6665527865745b,0x257b202c42363166,0x6625202c31313666\n"
".quad 0x0a0a3b5d7d363036,0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e\n"
".quad 0x346625202c353734,0x37346625202c3637,0x3837346625202c37,0x527865745b202c7d\n"
".quad 0x2c423631665f6665,0x2c31313666257b20,0x5d7d323136662520,0x636f6c2e090a0a3b\n"
".quad 0x2031373333203220,0x33662e6c756d0a31,0x2c34333666252032,0x202c383136662520\n"
".quad 0x660a3b3537346625,0x33662e6e722e616d,0x2c35333666252032,0x202c343136662520\n"
".quad 0x25202c3936346625,0x090a0a3b34333666,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x31383466257b2032,0x2c3238346625202c,0x202c333834662520,0x202c7d3438346625\n"
".quad 0x5f6665527865745b,0x257b202c42383166,0x6625202c31313666,0x0a0a3b5d7d363036\n"
".quad 0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e,0x346625202c373834\n"
".quad 0x38346625202c3838,0x3039346625202c39,0x527865745b202c7d,0x2c423831665f6665\n"
".quad 0x2c31313666257b20,0x5d7d323136662520,0x636f6c2e090a0a3b,0x2032373333203220\n"
".quad 0x33662e6c756d0a31,0x2c36333666252032,0x202c383136662520,0x660a3b3738346625\n"
".quad 0x33662e6e722e616d,0x2c37333666252032,0x202c343136662520,0x25202c3138346625\n"
".quad 0x090a0a3b36333666,0x762e64322e786574,0x33662e3233662e34,0x33393466257b2032\n"
".quad 0x2c3439346625202c,0x202c353934662520,0x202c7d3639346625,0x5f6665527865745b\n"
".quad 0x66257b202c423166,0x366625202c313136,0x090a0a3b5d7d3630,0x64322e786574090a\n"
".quad 0x2e3233662e34762e,0x3466257b20323366,0x30356625202c3939,0x3130356625202c30\n"
".quad 0x7d3230356625202c,0x65527865745b202c,0x7b202c4231665f66,0x25202c3131366625\n"
".quad 0x0a3b5d7d32313666,0x3220636f6c2e090a,0x0a31203337333320,0x203233662e6c756d\n"
".quad 0x25202c3833366625,0x6625202c38313666,0x616d660a3b393934,0x203233662e6e722e\n"
".quad 0x25202c3933366625,0x6625202c34313666,0x366625202c333934,0x6574090a0a3b3833\n"
".quad 0x2e34762e64322e78,0x203233662e323366,0x202c35303566257b,0x25202c3630356625\n"
".quad 0x6625202c37303566,0x745b202c7d383035,0x33665f6665527865,0x313666257b202c42\n"
".quad 0x3630366625202c31,0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x31313566257b2032,0x2c3231356625202c,0x202c333135662520,0x202c7d3431356625\n"
".quad 0x5f6665527865745b,0x66257b202c423366,0x366625202c313136,0x090a0a3b5d7d3231\n"
".quad 0x33203220636f6c2e,0x756d0a3120343733,0x6625203233662e6c,0x366625202c303436\n"
".quad 0x31356625202c3831,0x722e616d660a3b31,0x6625203233662e6e,0x366625202c313436\n"
".quad 0x30356625202c3431,0x3034366625202c35,0x2e786574090a0a3b,0x33662e34762e6432\n"
".quad 0x257b203233662e32,0x6625202c37313566,0x356625202c383135,0x32356625202c3931\n"
".quad 0x7865745b202c7d30,0x2c4235665f666552,0x2c31313666257b20,0x5d7d363036662520\n"
".quad 0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366,0x202c33323566257b\n"
".quad 0x25202c3432356625,0x6625202c35323566,0x745b202c7d363235,0x35665f6665527865\n"
".quad 0x313666257b202c42,0x3231366625202c31,0x6c2e090a0a3b5d7d,0x373333203220636f\n"
".quad 0x2e6c756d0a312035,0x3436662520323366,0x3831366625202c32,0x3b3332356625202c\n"
".quad 0x2e6e722e616d660a,0x3436662520323366,0x3431366625202c33,0x2c3731356625202c\n"
".quad 0x0a3b323436662520,0x64322e786574090a,0x2e3233662e34762e,0x3566257b20323366\n"
".quad 0x33356625202c3932,0x3133356625202c30,0x7d3233356625202c,0x65527865745b202c\n"
".quad 0x7b202c4236665f66,0x25202c3131366625,0x0a3b5d7d36303666,0x2e786574090a090a\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x6625202c35333566,0x356625202c363335\n"
".quad 0x33356625202c3733,0x7865745b202c7d38,0x2c4236665f666552,0x2c31313666257b20\n"
".quad 0x5d7d323136662520,0x636f6c2e090a0a3b,0x2036373333203220,0x33662e6c756d0a31\n"
".quad 0x2c34343666252032,0x202c383136662520,0x660a3b3533356625,0x33662e6e722e616d\n"
".quad 0x2c35343666252032,0x202c343136662520,0x25202c3932356625,0x090a0a3b34343666\n"
".quad 0x762e64322e786574,0x33662e3233662e34,0x31343566257b2032,0x2c3234356625202c\n"
".quad 0x202c333435662520,0x202c7d3434356625,0x5f6665527865745b,0x66257b202c423766\n"
".quad 0x366625202c313136,0x090a0a3b5d7d3630,0x64322e786574090a,0x2e3233662e34762e\n"
".quad 0x3566257b20323366,0x34356625202c3734,0x3934356625202c38,0x7d3035356625202c\n"
".quad 0x65527865745b202c,0x7b202c4237665f66,0x25202c3131366625,0x0a3b5d7d32313666\n"
".quad 0x3220636f6c2e090a,0x0a31203737333320,0x203233662e6c756d,0x25202c3634366625\n"
".quad 0x6625202c38313666,0x616d660a3b373435,0x203233662e6e722e,0x25202c3734366625\n"
".quad 0x6625202c34313666,0x366625202c313435,0x6574090a0a3b3634,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x202c33353566257b,0x25202c3435356625,0x6625202c35353566\n"
".quad 0x745b202c7d363535,0x38665f6665527865,0x313666257b202c42,0x3630366625202c31\n"
".quad 0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34,0x39353566257b2032\n"
".quad 0x2c3036356625202c,0x202c313635662520,0x202c7d3236356625,0x5f6665527865745b\n"
".quad 0x66257b202c423866,0x366625202c313136,0x090a0a3b5d7d3231,0x33203220636f6c2e\n"
".quad 0x756d0a3120383733,0x6625203233662e6c,0x366625202c383436,0x35356625202c3831\n"
".quad 0x722e616d660a3b39,0x6625203233662e6e,0x366625202c393436,0x35356625202c3431\n"
".quad 0x3834366625202c33,0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x6625202c35363566,0x356625202c363635,0x36356625202c3736,0x7865745b202c7d38\n"
".quad 0x423531665f666552,0x31313666257b202c,0x7d3630366625202c,0x74090a090a0a3b5d\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x2c31373566257b20,0x202c323735662520\n"
".quad 0x25202c3337356625,0x5b202c7d34373566,0x665f666552786574,0x66257b202c423531\n"
".quad 0x366625202c313136,0x090a0a3b5d7d3231,0x33203220636f6c2e,0x756d0a3120393733\n"
".quad 0x6625203233662e6c,0x366625202c303536,0x37356625202c3831,0x722e616d660a3b31\n"
".quad 0x6625203233662e6e,0x366625202c313536,0x36356625202c3431,0x3035366625202c35\n"
".quad 0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32,0x6625202c37373566\n"
".quad 0x356625202c383735,0x38356625202c3937,0x7865745b202c7d30,0x423731665f666552\n"
".quad 0x31313666257b202c,0x7d3630366625202c,0x74090a090a0a3b5d,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x2c33383566257b20,0x202c343835662520,0x25202c3538356625\n"
".quad 0x5b202c7d36383566,0x665f666552786574,0x66257b202c423731,0x366625202c313136\n"
".quad 0x090a0a3b5d7d3231,0x33203220636f6c2e,0x756d0a3120303833,0x6625203233662e6c\n"
".quad 0x366625202c323536,0x38356625202c3831,0x722e616d660a3b33,0x6625203233662e6e\n"
".quad 0x366625202c333536,0x37356625202c3431,0x3235366625202c37,0x2e786574090a0a3b\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x6625202c39383566,0x356625202c303935\n"
".quad 0x39356625202c3139,0x7865745b202c7d32,0x423031665f666552,0x31313666257b202c\n"
".quad 0x7d3630366625202c,0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x2c35393566257b20,0x202c363935662520,0x25202c3739356625,0x5b202c7d38393566\n"
".quad 0x665f666552786574,0x66257b202c423031,0x366625202c313136,0x090a0a3b5d7d3231\n"
".quad 0x33203220636f6c2e,0x756d0a3120313833,0x6625203233662e6c,0x366625202c343536\n"
".quad 0x39356625202c3831,0x722e616d660a3b35,0x6625203233662e6e,0x366625202c353536\n"
".quad 0x38356625202c3431,0x3435366625202c39,0x2e786574090a0a3b,0x33662e34762e6432\n"
".quad 0x257b203233662e32,0x6625202c31303666,0x366625202c323036,0x30366625202c3330\n"
".quad 0x7865745b202c7d34,0x423231665f666552,0x31313666257b202c,0x7d3630366625202c\n"
".quad 0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e,0x2c37303666257b20\n"
".quad 0x202c383036662520,0x25202c3930366625,0x5b202c7d30313666,0x665f666552786574\n"
".quad 0x66257b202c423231,0x366625202c313136,0x090a0a3b5d7d3231,0x33203220636f6c2e\n"
".quad 0x756d0a3120323833,0x6625203233662e6c,0x366625202c363536,0x30366625202c3831\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x366625202c373536,0x30366625202c3431\n"
".quad 0x3635366625202c31,0x3220636f6c2e0a3b,0x0a31203438333320,0x203233662e646461\n"
".quad 0x25202c3835366625,0x6625202c31323666,0x6464610a3b393336,0x366625203233662e\n"
".quad 0x35366625202c3935,0x3332366625202c38,0x33662e6464610a3b,0x2c30363666252032\n"
".quad 0x202c393536662520,0x610a3b3134366625,0x25203233662e6464,0x6625202c31363666\n"
".quad 0x366625202c303636,0x2e6464610a3b3532,0x3636662520323366,0x3136366625202c32\n"
".quad 0x3b3334366625202c,0x3233662e6464610a,0x202c333636662520,0x25202c3236366625\n"
".quad 0x64610a3b35343666,0x6625203233662e64,0x366625202c343636,0x34366625202c3336\n"
".quad 0x662e6464610a3b37,0x3536366625203233,0x2c3436366625202c,0x0a3b393436662520\n"
".quad 0x203233662e646461,0x25202c3636366625,0x6625202c35363666,0x6464610a3b373236\n"
".quad 0x366625203233662e,0x36366625202c3736,0x3535366625202c36,0x33662e6464610a3b\n"
".quad 0x2c38363666252032,0x202c373636662520,0x610a3b3932366625,0x25203233662e6464\n"
".quad 0x6625202c39363666,0x366625202c383636,0x2e6464610a3b3735,0x3736662520323366\n"
".quad 0x3936366625202c30,0x3b3133366625202c,0x3233662e6464610a,0x202c313736662520\n"
".quad 0x25202c3037366625,0x64610a3b33333666,0x6625203233662e64,0x366625202c323736\n"
".quad 0x35366625202c3137,0x662e6464610a3b31,0x3337366625203233,0x2c3237366625202c\n"
".quad 0x0a3b353336662520,0x203233662e646461,0x25202c3437366625,0x6625202c33373666\n"
".quad 0x6464610a3b333536,0x366625203233662e,0x37366625202c3537,0x3733366625202c34\n"
".quad 0x33662e6275730a3b,0x2c36373666252032,0x202c393336662520,0x610a3b3134366625\n"
".quad 0x25203233662e6464,0x6625202c37373666,0x366625202c363736,0x2e6275730a3b3334\n"
".quad 0x3736662520323366,0x3737366625202c38,0x3b3534366625202c,0x3233662e6275730a\n"
".quad 0x202c393736662520,0x25202c3837366625,0x64610a3b37343666,0x6625203233662e64\n"
".quad 0x366625202c303836,0x34366625202c3937,0x662e6464610a3b39,0x3138366625203233\n"
".quad 0x2c3038366625202c,0x0a3b353536662520,0x203233662e627573,0x25202c3238366625\n"
".quad 0x6625202c31383666,0x6464610a3b373536,0x366625203233662e,0x38366625202c3338\n"
".quad 0x3135366625202c32,0x33662e6275730a3b,0x2c34383666252032,0x202c333836662520\n"
".quad 0x730a3b3335366625,0x25203233662e6275,0x6625202c35383666,0x366625202c333236\n"
".quad 0x2e6464610a3b3532,0x3836662520323366,0x3538366625202c36,0x3b3334366625202c\n"
".quad 0x3233662e6464610a,0x202c373836662520,0x25202c3638366625,0x75730a3b35343666\n"
".quad 0x6625203233662e62,0x366625202c383836,0x34366625202c3738,0x662e6275730a3b37\n"
".quad 0x3938366625203233,0x2c3838366625202c,0x0a3b393436662520,0x203233662e646461\n"
".quad 0x25202c3039366625,0x6625202c39383666,0x6275730a3b393236,0x366625203233662e\n"
".quad 0x39366625202c3139,0x3133366625202c30,0x33662e6464610a3b,0x2c32393666252032\n"
".quad 0x202c313936662520,0x730a3b3533366625,0x25203233662e6275,0x6625202c33393666\n"
".quad 0x366625202c323936,0x2e6464610a3b3733,0x3936662520323366,0x3732366625202c34\n"
".quad 0x3b3535366625202c,0x3233662e6464610a,0x202c353936662520,0x25202c3439366625\n"
".quad 0x64610a3b39323666,0x6625203233662e64,0x366625202c363936,0x35366625202c3539\n"
".quad 0x662e6464610a3b37,0x3739366625203233,0x2c3639366625202c,0x0a3b313336662520\n"
".quad 0x203233662e627573,0x25202c3839366625,0x6625202c37393666,0x6275730a3b333336\n"
".quad 0x366625203233662e,0x39366625202c3939,0x3135366625202c38,0x33662e6275730a3b\n"
".quad 0x2c30303766252032,0x202c393936662520,0x730a3b3533366625,0x25203233662e6275\n"
".quad 0x6625202c31303766,0x366625202c303037,0x2e6275730a3b3335,0x3037662520323366\n"
".quad 0x3130376625202c32,0x3b3733366625202c,0x3233662e6c756d0a,0x202c333037662520\n"
".quad 0x25202c3339366625,0x6d660a3b33393666,0x3233662e6e722e61,0x202c343037662520\n"
".quad 0x25202c3438366625,0x6625202c34383666,0x6c756d0a3b333037,0x376625203233662e\n"
".quad 0x30376625202c3530,0x3230376625202c32,0x6e722e616d660a3b,0x376625203233662e\n"
".quad 0x30376625202c3630,0x3230376625202c32,0x3b3430376625202c,0x3233662e6c756d0a\n"
".quad 0x202c373037662520,0x30202c3630376625,0x3544443831464266,0x722e616d660a3b44\n"
".quad 0x6625203233662e6e,0x366625202c383037,0x45336630202c3537,0x202c303343303334\n"
".quad 0x6d0a3b3730376625,0x25203233662e6c75,0x6625202c39303766,0x336630202c363037\n"
".quad 0x3b43394339343044,0x2e6e722e616d660a,0x3137662520323366,0x3537366625202c30\n"
".quad 0x334444336630202c,0x6625202c35334434,0x616d660a3b393037,0x203233662e6e722e\n"
".quad 0x25202c3131376625,0x6630202c34383666,0x4241414141324533,0x3b3031376625202c\n"
".quad 0x2e6e722e616d660a,0x3137662520323366,0x3339366625202c32,0x413245336630202c\n"
".quad 0x6625202c42414141,0x616d660a3b303137,0x203233662e6e722e,0x25202c3331376625\n"
".quad 0x6630202c34383666,0x4241414141324542,0x3b3031376625202c,0x2e6e722e616d660a\n"
".quad 0x3137662520323366,0x3339366625202c34,0x413245426630202c,0x6625202c42414141\n"
".quad 0x6c756d0a3b303137,0x376625203233662e,0x30376625202c3531,0x3044336630202c36\n"
".quad 0x660a3b3438333839,0x33662e6e722e616d,0x2c36313766252032,0x202c353736662520\n"
".quad 0x3830323843336630,0x31376625202c3032,0x662e6464610a3b35,0x3731376625203233\n"
".quad 0x2c3438366625202c,0x0a3b333936662520,0x662e6e722e616d66,0x3831376625203233\n"
".quad 0x2c3731376625202c,0x4141414433663020,0x376625202c424141,0x2e6275730a3b3631\n"
".quad 0x3137662520323366,0x3438366625202c39,0x3b3339366625202c,0x2e6e722e616d660a\n"
".quad 0x3237662520323366,0x3931376625202c30,0x414144426630202c,0x6625202c42414141\n"
".quad 0x616d660a3b363137,0x203233662e6e722e,0x25202c3132376625,0x6630202c37313766\n"
".quad 0x4241414141414442,0x3b3631376625202c,0x2e6e722e616d660a,0x3237662520323366\n"
".quad 0x3931376625202c32,0x414144336630202c,0x6625202c42414141,0x616d660a3b363137\n"
".quad 0x203233662e6e722e,0x25202c3332376625,0x6630202c32303766,0x4241414141324533\n"
".quad 0x3b3031376625202c,0x3233662e6464610a,0x202c343237662520,0x25202c3438366625\n"
".quad 0x6d660a3b32303766,0x3233662e6e722e61,0x202c353237662520,0x30202c3432376625\n"
".quad 0x4141414141443366,0x3631376625202c42,0x33662e6464610a3b,0x2c36323766252032\n"
".quad 0x202c333936662520,0x660a3b3230376625,0x33662e6e722e616d,0x2c37323766252032\n"
".quad 0x202c363237662520,0x4141414144336630,0x31376625202c4241,0x662e6275730a3b36\n"
".quad 0x3832376625203233,0x2c3438366625202c,0x0a3b323037662520,0x662e6e722e616d66\n"
".quad 0x3932376625203233,0x2c3832376625202c,0x4141414442663020,0x376625202c424141\n"
".quad 0x2e6275730a3b3631,0x3337662520323366,0x3339366625202c30,0x3b3230376625202c\n"
".quad 0x2e6e722e616d660a,0x3337662520323366,0x3033376625202c31,0x414144426630202c\n"
".quad 0x6625202c42414141,0x616d660a3b363137,0x203233662e6e722e,0x25202c3233376625\n"
".quad 0x6630202c32303766,0x4241414141324542,0x3b3031376625202c,0x2e6e722e616d660a\n"
".quad 0x3337662520323366,0x3832376625202c33,0x414144336630202c,0x6625202c42414141\n"
".quad 0x616d660a3b363137,0x203233662e6e722e,0x25202c3433376625,0x6630202c30333766\n"
".quad 0x4241414141414433,0x3b3631376625202c,0x2e6e722e616d660a,0x3337662520323366\n"
".quad 0x3432376625202c35,0x414144426630202c,0x6625202c42414141,0x616d660a3b363137\n"
".quad 0x203233662e6e722e,0x25202c3633376625,0x6630202c36323766,0x4241414141414442\n"
".quad 0x3b3631376625202c,0x3233662e6464610a,0x202c373337662520,0x25202c3438366625\n"
".quad 0x6d660a3b34383666,0x3233662e6e722e61,0x202c383337662520,0x25202c3339366625\n"
".quad 0x6625202c33393666,0x67656e0a3b353037,0x376625203233662e,0x33376625202c3933\n"
".quad 0x722e616d660a3b38,0x6625203233662e6e,0x376625202c303437,0x38366625202c3733\n"
".quad 0x3933376625202c34,0x6e722e616d660a3b,0x376625203233662e,0x34376625202c3134\n"
".quad 0x3644336630202c30,0x25202c3933453833,0x656e0a3b31313766,0x6625203233662e67\n"
".quad 0x376625202c323437,0x2e616d660a3b3230,0x25203233662e6e72,0x6625202c33343766\n"
".quad 0x376625202c323437,0x30376625202c3230,0x662e6c756d0a3b33,0x3434376625203233\n"
".quad 0x2c3334376625202c,0x4141414433663020,0x616d660a3b424141,0x203233662e6e722e\n"
".quad 0x25202c3534376625,0x6630202c30343766,0x3933453833454342,0x3b3434376625202c\n"
".quad 0x3233662e6464610a,0x202c363437662520,0x25202c3231376625,0x6d660a3b35343766\n"
".quad 0x3233662e6e722e61,0x202c373437662520,0x30202c3034376625,0x3345383336443366\n"
".quad 0x3331376625202c39,0x33662e6464610a3b,0x2c38343766252032,0x202c343137662520\n"
".quad 0x660a3b3534376625,0x33662e6e722e616d,0x2c39343766252032,0x202c303437662520\n"
".quad 0x4538334543336630,0x34376625202c3933,0x662e6c756d0a3b34,0x3035376625203233\n"
".quad 0x2c3438366625202c,0x3030384533663020,0x616d660a3b303030,0x203233662e6e722e\n"
".quad 0x25202c3135376625,0x6625202c30353766,0x376625202c333936,0x2e6464610a3b3934\n"
".quad 0x3537662520323366,0x3831376625202c32,0x3b3135376625202c,0x3233662e6c756d0a\n"
".quad 0x202c333537662520,0x30202c3438366625,0x3030303038454266,0x722e616d660a3b30\n"
".quad 0x6625203233662e6e,0x376625202c343537,0x39366625202c3335,0x3934376625202c33\n"
".quad 0x33662e6464610a3b,0x2c35353766252032,0x202c303237662520,0x610a3b3435376625\n"
".quad 0x25203233662e6464,0x6625202c36353766,0x376625202c313237,0x2e6464610a3b3135\n"
".quad 0x3537662520323366,0x3232376625202c37,0x3b3435376625202c,0x3233662e6c756d0a\n"
".quad 0x202c383537662520,0x30202c3334376625,0x4141414141444266,0x722e616d660a3b42\n"
".quad 0x6625203233662e6e,0x376625202c393537,0x43426630202c3034,0x202c393345383345\n"
".quad 0x610a3b3835376625,0x25203233662e6464,0x6625202c30363766,0x376625202c333237\n"
".quad 0x2e616d660a3b3935,0x25203233662e6e72,0x6625202c31363766,0x336630202c303437\n"
".quad 0x2c39334538334543,0x0a3b383537662520,0x662e6e722e616d66,0x3236376625203233\n"
".quad 0x2c3035376625202c,0x202c323037662520,0x610a3b3136376625,0x25203233662e6464\n"
".quad 0x6625202c33363766,0x376625202c353237,0x2e6c756d0a3b3236,0x3637662520323366\n"
".quad 0x3034376625202c34,0x333644426630202c,0x756d0a3b39334538,0x6625203233662e6c\n"
".quad 0x366625202c353637,0x45336630202c3339,0x0a3b303030303038,0x203233662e6c756d\n"
".quad 0x25202c3636376625,0x6625202c35363766,0x616d660a3b323037,0x203233662e6e722e\n"
".quad 0x25202c3736376625,0x6630202c30343766,0x3933453833364442,0x3b3636376625202c\n"
".quad 0x3233662e6464610a,0x202c383637662520,0x25202c3732376625,0x6d660a3b37363766\n"
".quad 0x3233662e6e722e61,0x202c393637662520,0x25202c3335376625,0x6625202c32303766\n"
".quad 0x6464610a3b313637,0x376625203233662e,0x32376625202c3037,0x3936376625202c39\n"
".quad 0x33662e67656e0a3b,0x2c31373766252032,0x0a3b353637662520,0x662e6e722e616d66\n"
".quad 0x3237376625203233,0x2c3137376625202c,0x202c323037662520,0x610a3b3436376625\n"
".quad 0x25203233662e6464,0x6625202c33373766,0x376625202c313337,0x2e6464610a3b3237\n"
".quad 0x3737662520323366,0x3233376625202c34,0x3b3935376625202c,0x3233662e6464610a\n"
".quad 0x202c353737662520,0x25202c3333376625,0x756d0a3b39363766,0x6625203233662e6c\n"
".quad 0x366625202c363737,0x45426630202c3339,0x0a3b303030303038,0x203233662e6c756d\n"
".quad 0x25202c3737376625,0x6625202c36373766,0x616d660a3b323037,0x203233662e6e722e\n"
".quad 0x25202c3837376625,0x6630202c30343766,0x3933453833364442,0x3b3737376625202c\n"
".quad 0x3233662e6464610a,0x202c393737662520,0x25202c3433376625,0x64610a3b38373766\n"
".quad 0x6625203233662e64,0x376625202c303837,0x36376625202c3533,0x662e6464610a3b32\n"
".quad 0x3138376625203233,0x2c3633376625202c,0x0a3b373637662520,0x203233662e766f6d\n"
".quad 0x30202c3238376625,0x3030303038463366,0x61702e646c0a3b30,0x203233662e6d6172\n"
".quad 0x5b202c3332386625,0x5f645f524c395a5f,0x5f53665043444241,0x617261705f666d66\n"
".quad 0x6c2e0a3b5d345f6d,0x383333203220636f,0x2e6275730a312034,0x3837662520323366\n"
".quad 0x3238376625202c33,0x3b3332386625202c,0x3233662e6c756d0a,0x202c343837662520\n"
".quad 0x25202c3338376625,0x6d660a3b38303766,0x3233662e6e722e61,0x202c353837662520\n"
".quad 0x25202c3132366625,0x6625202c33323866,0x6c756d0a3b343837,0x376625203233662e\n"
".quad 0x38376625202c3638,0x3134376625202c33,0x6e722e616d660a3b,0x376625203233662e\n"
".quad 0x33366625202c3738,0x3332386625202c39,0x3b3638376625202c,0x3233662e6c756d0a\n"
".quad 0x202c383837662520,0x25202c3338376625,0x6d660a3b36343766,0x3233662e6e722e61\n"
".quad 0x202c393837662520,0x25202c3332366625,0x6625202c33323866,0x6c756d0a3b383837\n"
".quad 0x376625203233662e,0x38376625202c3039,0x3734376625202c33,0x6e722e616d660a3b\n"
".quad 0x376625203233662e,0x34366625202c3139,0x3332386625202c31,0x3b3039376625202c\n"
".quad 0x3233662e6c756d0a,0x202c323937662520,0x25202c3338376625,0x6d660a3b38343766\n"
".quad 0x3233662e6e722e61,0x202c333937662520,0x25202c3532366625,0x6625202c33323866\n"
".quad 0x6c756d0a3b323937,0x376625203233662e,0x38376625202c3439,0x3235376625202c33\n"
".quad 0x6e722e616d660a3b,0x376625203233662e,0x34366625202c3539,0x3332386625202c33\n"
".quad 0x3b3439376625202c,0x3233662e6c756d0a,0x202c363937662520,0x25202c3338376625\n"
".quad 0x6d660a3b35353766,0x3233662e6e722e61,0x202c373937662520,0x25202c3534366625\n"
".quad 0x6625202c33323866,0x6c756d0a3b363937,0x376625203233662e,0x38376625202c3839\n"
".quad 0x3635376625202c33,0x6e722e616d660a3b,0x376625203233662e,0x34366625202c3939\n"
".quad 0x3332386625202c37,0x3b3839376625202c,0x3233662e6c756d0a,0x202c303038662520\n"
".quad 0x25202c3338376625,0x6d660a3b37353766,0x3233662e6e722e61,0x202c313038662520\n"
".quad 0x25202c3934366625,0x6625202c33323866,0x6c756d0a3b303038,0x386625203233662e\n"
".quad 0x38376625202c3230,0x3036376625202c33,0x6e722e616d660a3b,0x386625203233662e\n"
".quad 0x32366625202c3330,0x3332386625202c37,0x3b3230386625202c,0x3233662e6c756d0a\n"
".quad 0x202c343038662520,0x25202c3338376625,0x6d660a3b33363766,0x3233662e6e722e61\n"
".quad 0x202c353038662520,0x25202c3535366625,0x6625202c33323866,0x6c756d0a3b343038\n"
".quad 0x386625203233662e,0x38376625202c3630,0x3836376625202c33,0x6e722e616d660a3b\n"
".quad 0x386625203233662e,0x32366625202c3730,0x3332386625202c39,0x3b3630386625202c\n"
".quad 0x3233662e6c756d0a,0x202c383038662520,0x25202c3338376625,0x6d660a3b30373766\n"
".quad 0x3233662e6e722e61,0x202c393038662520,0x25202c3735366625,0x6625202c33323866\n"
".quad 0x6c756d0a3b383038,0x386625203233662e,0x38376625202c3031,0x3337376625202c33\n"
".quad 0x6e722e616d660a3b,0x386625203233662e,0x33366625202c3131,0x3332386625202c31\n"
".quad 0x3b3031386625202c,0x3233662e6c756d0a,0x202c323138662520,0x25202c3338376625\n"
".quad 0x6d660a3b34373766,0x3233662e6e722e61,0x202c333138662520,0x25202c3333366625\n"
".quad 0x6625202c33323866,0x6c756d0a3b323138,0x386625203233662e,0x38376625202c3431\n"
".quad 0x3537376625202c33,0x6e722e616d660a3b,0x386625203233662e,0x35366625202c3531\n"
".quad 0x3332386625202c31,0x3b3431386625202c,0x3233662e6c756d0a,0x202c363138662520\n"
".quad 0x25202c3338376625,0x6d660a3b39373766,0x3233662e6e722e61,0x202c373138662520\n"
".quad 0x25202c3533366625,0x6625202c33323866,0x6c756d0a3b363138,0x386625203233662e\n"
".quad 0x38376625202c3831,0x3038376625202c33,0x6e722e616d660a3b,0x386625203233662e\n"
".quad 0x35366625202c3931,0x3332386625202c33,0x3b3831386625202c,0x3233662e6c756d0a\n"
".quad 0x202c303238662520,0x25202c3338376625,0x6d660a3b31383766,0x3233662e6e722e61\n"
".quad 0x202c313238662520,0x25202c3733366625,0x6625202c33323866,0x2e646c0a3b303238\n"
".quad 0x36752e6d61726170,0x3839346c72252034,0x524c395a5f5b202c,0x50434442415f645f\n"
".quad 0x705f666d665f5366,0x3b5d335f6d617261,0x203220636f6c2e0a,0x6d0a312031353333\n"
".quad 0x36732e6f6c2e6461,0x3631346c72252034,0x2c37316c7225202c,0x2c3839346c722520\n"
".quad 0x6c0a3b356c722520,0x2e6d617261702e64,0x346c722520343675,0x395a5f5b202c3539\n"
".quad 0x4442415f645f524c,0x666d665f53665043,0x315f6d617261705f,0x2e617476630a3b5d\n"
".quad 0x61626f6c672e6f74,0x7225203436752e6c,0x7225202c3731346c,0x68730a3b3539346c\n"
".quad 0x7225203436622e6c,0x7225202c3831346c,0x3233202c3631346c,0x36732e7268730a3b\n"
".quad 0x3931346c72252034,0x3831346c7225202c,0x6c2e0a3b3233202c,0x343433203220636f\n"
".quad 0x2e6c68730a312033,0x346c722520343662,0x346c7225202c3032,0x610a3b32202c3931\n"
".quad 0x25203436732e6464,0x25202c3132346c72,0x25202c3731346c72,0x730a3b3032346c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3132346c,0x64610a3b35383766\n"
".quad 0x7225203436732e64,0x7225202c3232346c,0x393034202c37316c,0x20636f6c2e0a3b36\n"
".quad 0x3120343434332032,0x2e6f6c2e64616d0a,0x346c722520343673,0x346c7225202c3332\n"
".quad 0x346c7225202c3232,0x356c7225202c3839,0x36622e6c68730a3b,0x3432346c72252034\n"
".quad 0x3332346c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3532346c\n"
".quad 0x3233202c3432346c,0x3220636f6c2e0a3b,0x0a31203434343320,0x203436622e6c6873\n"
".quad 0x202c3632346c7225,0x202c3532346c7225,0x732e6464610a3b32,0x32346c7225203436\n"
".quad 0x31346c7225202c37,0x32346c7225202c37,0x6c672e74730a3b36,0x3233662e6c61626f\n"
".quad 0x3732346c72255b20,0x3738376625202c5d,0x36732e6464610a3b,0x3832346c72252034\n"
".quad 0x2c37316c7225202c,0x2e0a3b3239313820,0x3433203220636f6c,0x64616d0a31203534\n"
".quad 0x203436732e6f6c2e,0x202c3932346c7225,0x202c3832346c7225,0x202c3839346c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3033346c,0x3233202c3932346c\n"
".quad 0x36732e7268730a3b,0x3133346c72252034,0x3033346c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x343433203220636f,0x2e6c68730a312035,0x346c722520343662,0x346c7225202c3233\n"
".quad 0x610a3b32202c3133,0x25203436732e6464,0x25202c3333346c72,0x25202c3731346c72\n"
".quad 0x730a3b3233346c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3333346c\n"
".quad 0x64610a3b39383766,0x7225203436732e64,0x7225202c3433346c,0x323231202c37316c\n"
".quad 0x636f6c2e0a3b3838,0x2036343433203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c353334,0x6c7225202c343334,0x6c7225202c383934,0x622e6c68730a3b35\n"
".quad 0x33346c7225203436,0x33346c7225202c36,0x730a3b3233202c35,0x25203436732e7268\n"
".quad 0x25202c3733346c72,0x33202c3633346c72,0x20636f6c2e0a3b32,0x3120363434332032\n"
".quad 0x3436622e6c68730a,0x2c3833346c722520,0x2c3733346c722520,0x2e6464610a3b3220\n"
".quad 0x346c722520343673,0x346c7225202c3933,0x346c7225202c3731,0x672e74730a3b3833\n"
".quad 0x33662e6c61626f6c,0x33346c72255b2032,0x39376625202c5d39,0x732e6464610a3b31\n"
".quad 0x34346c7225203436,0x37316c7225202c30,0x3b3438333631202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312037343433,0x36732e6f6c2e6461,0x3134346c72252034,0x3034346c7225202c\n"
".quad 0x3839346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3234346c7225\n"
".quad 0x202c3134346c7225,0x2e7268730a3b3233,0x346c722520343673,0x346c7225202c3334\n"
".quad 0x0a3b3233202c3234,0x33203220636f6c2e,0x68730a3120373434,0x7225203436622e6c\n"
".quad 0x7225202c3434346c,0x3b32202c3334346c,0x3436732e6464610a,0x2c3534346c722520\n"
".quad 0x2c3731346c722520,0x3b3434346c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3534346c7225,0x0a3b333937662520,0x203436732e646461,0x202c3634346c7225\n"
".quad 0x32202c37316c7225,0x6c2e0a3b30383430,0x343433203220636f,0x2e64616d0a312038\n"
".quad 0x25203436732e6f6c,0x25202c3734346c72,0x25202c3634346c72,0x25202c3839346c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c383434,0x3b3233202c373434\n"
".quad 0x3436732e7268730a,0x2c3934346c722520,0x2c3834346c722520,0x6f6c2e0a3b323320\n"
".quad 0x3834343320322063,0x622e6c68730a3120,0x35346c7225203436,0x34346c7225202c30\n"
".quad 0x64610a3b32202c39,0x7225203436732e64,0x7225202c3135346c,0x7225202c3731346c\n"
".quad 0x74730a3b3035346c,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d313534\n"
".quad 0x6464610a3b353937,0x6c7225203436732e,0x6c7225202c323534,0x37353432202c3731\n"
".quad 0x20636f6c2e0a3b36,0x3120393434332032,0x2e6f6c2e64616d0a,0x346c722520343673\n"
".quad 0x346c7225202c3335,0x346c7225202c3235,0x356c7225202c3839,0x36622e6c68730a3b\n"
".quad 0x3435346c72252034,0x3335346c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3535346c,0x3233202c3435346c,0x3220636f6c2e0a3b,0x0a31203934343320\n"
".quad 0x203436622e6c6873,0x202c3635346c7225,0x202c3535346c7225,0x732e6464610a3b32\n"
".quad 0x35346c7225203436,0x31346c7225202c37,0x35346c7225202c37,0x6c672e74730a3b36\n"
".quad 0x3233662e6c61626f,0x3735346c72255b20,0x3739376625202c5d,0x36732e6464610a3b\n"
".quad 0x3835346c72252034,0x2c37316c7225202c,0x0a3b323736383220,0x33203220636f6c2e\n"
".quad 0x616d0a3120303534,0x3436732e6f6c2e64,0x2c3935346c722520,0x2c3835346c722520\n"
".quad 0x2c3839346c722520,0x730a3b356c722520,0x25203436622e6c68,0x25202c3036346c72\n"
".quad 0x33202c3935346c72,0x732e7268730a3b32,0x36346c7225203436,0x36346c7225202c31\n"
".quad 0x2e0a3b3233202c30,0x3433203220636f6c,0x6c68730a31203035,0x6c7225203436622e\n"
".quad 0x6c7225202c323634,0x0a3b32202c313634,0x203436732e646461,0x202c3336346c7225\n"
".quad 0x202c3731346c7225,0x0a3b3236346c7225,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3336346c72,0x610a3b3939376625,0x25203436732e6464,0x25202c3436346c72\n"
".quad 0x3233202c37316c72,0x6f6c2e0a3b383637,0x3135343320322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3536346c,0x7225202c3436346c,0x7225202c3839346c\n"
".quad 0x2e6c68730a3b356c,0x346c722520343662,0x346c7225202c3636,0x0a3b3233202c3536\n"
".quad 0x203436732e726873,0x202c3736346c7225,0x202c3636346c7225,0x636f6c2e0a3b3233\n"
".quad 0x2031353433203220,0x36622e6c68730a31,0x3836346c72252034,0x3736346c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c393634,0x6c7225202c373134\n"
".quad 0x2e74730a3b383634,0x662e6c61626f6c67,0x346c72255b203233,0x386625202c5d3936\n"
".quad 0x2e6464610a3b3130,0x346c722520343673,0x316c7225202c3037,0x3436383633202c37\n"
".quad 0x3220636f6c2e0a3b,0x0a31203235343320,0x732e6f6c2e64616d,0x37346c7225203436\n"
".quad 0x37346c7225202c31,0x39346c7225202c30,0x3b356c7225202c38,0x3436622e6c68730a\n"
".quad 0x2c3237346c722520,0x2c3137346c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c333734,0x3b3233202c323734,0x203220636f6c2e0a,0x730a312032353433\n"
".quad 0x25203436622e6c68,0x25202c3437346c72,0x32202c3337346c72,0x36732e6464610a3b\n"
".quad 0x3537346c72252034,0x3731346c7225202c,0x3437346c7225202c,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x5d3537346c72255b,0x3b3330386625202c,0x3436732e6464610a\n"
".quad 0x2c3637346c722520,0x202c37316c722520,0x2e0a3b3036393034,0x3433203220636f6c\n"
".quad 0x64616d0a31203335,0x203436732e6f6c2e,0x202c3737346c7225,0x202c3637346c7225\n"
".quad 0x202c3839346c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3837346c\n"
".quad 0x3233202c3737346c,0x36732e7268730a3b,0x3937346c72252034,0x3837346c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x353433203220636f,0x2e6c68730a312033,0x346c722520343662\n"
".quad 0x346c7225202c3038,0x610a3b32202c3937,0x25203436732e6464,0x25202c3138346c72\n"
".quad 0x25202c3731346c72,0x730a3b3038346c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3138346c,0x64610a3b35303866,0x7225203436732e64,0x7225202c3238346c\n"
".quad 0x303534202c37316c,0x636f6c2e0a3b3635,0x2034353433203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c333834,0x6c7225202c323834,0x6c7225202c383934\n"
".quad 0x622e6c68730a3b35,0x38346c7225203436,0x38346c7225202c34,0x730a3b3233202c33\n"
".quad 0x25203436732e7268,0x25202c3538346c72,0x33202c3438346c72,0x20636f6c2e0a3b32\n"
".quad 0x3120343534332032,0x3436622e6c68730a,0x2c3638346c722520,0x2c3538346c722520\n"
".quad 0x2e6464610a3b3220,0x346c722520343673,0x346c7225202c3738,0x346c7225202c3731\n"
".quad 0x672e74730a3b3638,0x33662e6c61626f6c,0x38346c72255b2032,0x30386625202c5d37\n"
".quad 0x732e6464610a3b37,0x38346c7225203436,0x37316c7225202c38,0x3b3235313934202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312035353433,0x36732e6f6c2e6461,0x3938346c72252034\n"
".quad 0x3838346c7225202c,0x3839346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3039346c7225,0x202c3938346c7225,0x2e7268730a3b3233,0x346c722520343673\n"
".quad 0x346c7225202c3139,0x0a3b3233202c3039,0x33203220636f6c2e,0x68730a3120353534\n"
".quad 0x7225203436622e6c,0x7225202c3239346c,0x3b32202c3139346c,0x3436732e6464610a\n"
".quad 0x2c3339346c722520,0x2c3731346c722520,0x3b3239346c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3339346c7225,0x0a3b393038662520,0x33203220636f6c2e\n"
".quad 0x74730a3120363534,0x2e6c61626f6c672e,0x6c72255b20323366,0x31386625202c5d39\n"
".quad 0x20636f6c2e0a3b31,0x3120373534332032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d30316c7225,0x2e0a3b3331386625,0x3433203220636f6c,0x2e74730a31203835\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x31386625202c5d31,0x20636f6c2e0a3b35\n"
".quad 0x3120393534332032,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d32316c7225\n"
".quad 0x2e0a3b3731386625,0x3433203220636f6c,0x2e74730a31203036,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x31386625202c5d33,0x20636f6c2e0a3b39,0x3120313634332032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d34316c7225,0x2e0a3b3132386625\n"
".quad 0x3533203220636f6c,0x7465720a32203333,0x6e652e0a0a7d0a3b,0x4c395a5f20797274\n"
".quad 0x444341425f645f52,0x0a286d665f536650,0x2e206d617261702e,0x4c395a5f20343675\n"
".quad 0x444341425f645f52,0x705f6d665f536650,0x0a2c305f6d617261,0x2e206d617261702e\n"
".quad 0x4c395a5f20343675,0x444341425f645f52,0x705f6d665f536650,0x0a2c315f6d617261\n"
".quad 0x2e206d617261702e,0x4c395a5f20323366,0x444341425f645f52,0x705f6d665f536650\n"
".quad 0x0a2c325f6d617261,0x2e206d617261702e,0x4c395a5f20343675,0x444341425f645f52\n"
".quad 0x705f6d665f536650,0x290a335f6d617261,0x206765722e0a7b0a,0x3c6625203233662e\n"
".quad 0x722e0a3b3e353833,0x646572702e206765,0x3b3e33313c702520,0x732e206765722e0a\n"
".quad 0x31313c7225203233,0x6765722e0a3b3e38,0x7225203436732e20,0x0a3b3e3338333c6c\n"
".quad 0x7261702e646c0a0a,0x25203436752e6d61,0x5a5f5b202c316c72,0x41425f645f524c39\n"
".quad 0x6d665f5366504443,0x305f6d617261705f,0x61702e646c0a3b5d,0x203436752e6d6172\n"
".quad 0x5f5b202c336c7225,0x425f645f524c395a,0x665f536650444341,0x5f6d617261705f6d\n"
".quad 0x617476630a3b5d33,0x626f6c672e6f742e,0x25203436752e6c61,0x6c7225202c346c72\n"
".quad 0x20636f6c2e0a3b31,0x3120383335332032,0x3233752e766f6d0a,0x6e25202c36722520\n"
".quad 0x6d0a3b782e646974,0x25203233752e766f,0x61746325202c3772,0x6f6d0a3b782e6469\n"
".quad 0x7225203233752e76,0x2e64697425202c38,0x6c2e64616d0a3b78,0x7225203233732e6f\n"
".quad 0x202c367225202c31,0x387225202c377225,0x3220636f6c2e0a3b,0x0a31203933353320\n"
".quad 0x203233752e766f6d,0x746e25202c397225,0x6f6d0a3b792e6469,0x7225203233752e76\n"
".quad 0x61746325202c3031,0x6f6d0a3b792e6469,0x7225203233752e76,0x64697425202c3131\n"
".quad 0x2e64616d0a3b792e,0x25203233732e6f6c,0x2c397225202c3272,0x25202c3031722520\n"
".quad 0x6f6c2e0a3b313172,0x3034353320322063,0x752e766f6d0a3120,0x2c32317225203233\n"
".quad 0x7a2e6469746e2520,0x33752e766f6d0a3b,0x202c333172252032,0x7a2e646961746325\n"
".quad 0x33752e766f6d0a3b,0x202c343172252032,0x0a3b7a2e64697425,0x732e6f6c2e64616d\n"
".quad 0x202c337225203233,0x7225202c32317225,0x34317225202c3331,0x3220636f6c2e0a3b\n"
".quad 0x0a31203134353320,0x662e6e722e747663,0x25203233732e3233,0x317225202c313266\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x2c31326625202c32,0x3030304633663020\n"
".quad 0x346630202c303030,0x3b30303030433731,0x203220636f6c2e0a,0x630a312032343533\n"
".quad 0x33662e6e722e7476,0x6625203233732e32,0x3b327225202c3332,0x2e6e722e616d660a\n"
".quad 0x3432662520323366,0x202c33326625202c,0x3030303046336630,0x31346630202c3030\n"
".quad 0x0a3b303030304337,0x33203220636f6c2e,0x76630a3120333435,0x3233662e6e722e74\n"
".quad 0x326625203233732e,0x0a3b337225202c35,0x662e6e722e616d66,0x2c36326625203233\n"
".quad 0x30202c3532662520,0x3030303030463366,0x3731346630202c30,0x630a3b3030303043\n"
".quad 0x752e3436752e7476,0x2c356c7225203233,0x6c2e0a3b31722520,0x343533203220636f\n"
".quad 0x2e7476630a312034,0x203233732e343673,0x7225202c366c7225,0x622e6c68730a3b32\n"
".quad 0x202c347225203233,0x0a3b36202c337225,0x33203220636f6c2e,0x76630a3120343435\n"
".quad 0x33732e3436732e74,0x202c376c72252032,0x6464610a3b347225,0x6c7225203436732e\n"
".quad 0x376c7225202c3131,0x0a3b366c7225202c,0x33203220636f6c2e,0x616d0a3120343435\n"
".quad 0x3436732e6f6c2e64,0x25202c386c722520,0x7225202c31316c72,0x356c7225202c336c\n"
".quad 0x33662e6464610a3b,0x202c373266252032,0x6630202c32326625,0x3030303045373243\n"
".quad 0x33662e6464610a3b,0x202c383266252032,0x6630202c34326625,0x3030303043463143\n"
".quad 0x3220636f6c2e0a3b,0x756d0a3120303720,0x6625203233662e6c,0x38326625202c3932\n"
".quad 0x0a3b38326625202c,0x662e6e722e616d66,0x2c30336625203233,0x25202c3732662520\n"
".quad 0x326625202c373266,0x662e6464610a3b39,0x2c31336625203233,0x30202c3632662520\n"
".quad 0x3030304346314366,0x20636f6c2e0a3b30,0x660a312030372032,0x33662e6e722e616d\n"
".quad 0x202c323366252032,0x6625202c31336625,0x30336625202c3133,0x6c2e707465730a3b\n"
".quad 0x7025203233662e74,0x2c32336625202c31,0x3030383134663020,0x6464610a3b303030\n"
".quad 0x357225203233732e,0x2d202c317225202c,0x2e707465730a3b31,0x25203233752e7467\n"
".quad 0x2c357225202c3270,0x6f6c2e0a3b313620,0x3435353320322063,0x2e707465730a3120\n"
".quad 0x25203233732e746c,0x2c327225202c3370,0x702e726f0a3b3120,0x2c34702520646572\n"
".quad 0x7025202c32702520,0x20636f6c2e0a3b33,0x3120343535332032,0x74672e707465730a\n"
".quad 0x357025203233732e,0x36202c327225202c,0x72702e726f0a3b32,0x202c367025206465\n"
".quad 0x357025202c347025,0x3220636f6c2e0a3b,0x0a31203435353320,0x2e746c2e70746573\n"
".quad 0x2c37702520323373,0x3b31202c33722520,0x646572702e726f0a,0x7025202c38702520\n"
".quad 0x0a3b377025202c36,0x33203220636f6c2e,0x65730a3120343535,0x33732e74672e7074\n"
".quad 0x25202c3970252032,0x0a3b3236202c3372,0x20646572702e726f,0x7025202c30317025\n"
".quad 0x0a3b397025202c38,0x33203220636f6c2e,0x25400a3120343535,0x2061726220303170\n"
".quad 0x0a3b375f39324242,0x3436622e6c68730a,0x202c32316c722520,0x3233202c386c7225\n"
".quad 0x36732e7268730a3b,0x2c33316c72252034,0x202c32316c722520,0x636f6c2e0a3b3233\n"
".quad 0x2039353533203220,0x36622e6c68730a31,0x2c34316c72252034,0x202c33316c722520\n"
".quad 0x732e6464610a3b32,0x35316c7225203436,0x202c346c7225202c,0x6c0a3b34316c7225\n"
".quad 0x6c61626f6c672e64,0x326625203233662e,0x35316c72255b202c,0x732e6464610a3b5d\n"
".quad 0x36316c7225203436,0x202c366c7225202c,0x64610a3b376c7225,0x7225203436732e64\n"
".quad 0x6c7225202c37316c,0x36393034202c3631,0x36752e7476630a3b,0x7225203233752e34\n"
".quad 0x357225202c38316c,0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3138336c72\n"
".quad 0x5f645f524c395a5f,0x5f53665044434142,0x6d617261705f6d66,0x6f6c2e0a3b5d335f\n"
".quad 0x3036353320322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c39316c\n"
".quad 0x336c7225202c3731,0x316c7225202c3138,0x622e6c68730a3b38,0x30326c7225203436\n"
".quad 0x2c39316c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x326c7225202c3132\n"
".quad 0x2e0a3b3233202c30,0x3533203220636f6c,0x6c68730a31203036,0x6c7225203436622e\n"
".quad 0x326c7225202c3232,0x64610a3b32202c31,0x7225203436732e64,0x6c7225202c33326c\n"
".quad 0x32326c7225202c34,0x6f6c672e646c0a3b,0x203233662e6c6162,0x72255b202c336625\n"
".quad 0x6c2e0a3b5d33326c,0x363533203220636f,0x2e6464610a312031,0x3731722520323373\n"
".quad 0x31202c317225202c,0x36752e7476630a3b,0x7225203233752e34,0x317225202c34326c\n"
".quad 0x732e6464610a3b37,0x35326c7225203436,0x2c36316c7225202c,0x0a3b383832323120\n"
".quad 0x33203220636f6c2e,0x616d0a3120313635,0x3436732e6f6c2e64,0x202c36326c722520\n"
".quad 0x25202c35326c7225,0x25202c3138336c72,0x68730a3b34326c72,0x7225203436622e6c\n"
".quad 0x6c7225202c37326c,0x0a3b3233202c3632,0x203436732e726873,0x25202c38326c7225\n"
".quad 0x3233202c37326c72,0x3220636f6c2e0a3b,0x0a31203136353320,0x203436622e6c6873\n"
".quad 0x25202c39326c7225,0x3b32202c38326c72,0x3436732e6464610a,0x202c30336c722520\n"
".quad 0x7225202c346c7225,0x2e646c0a3b39326c,0x662e6c61626f6c67,0x202c346625203233\n"
".quad 0x3b5d30336c72255b,0x3233732e6464610a,0x25202c3931722520,0x0a3b312d202c3272\n"
".quad 0x33203220636f6c2e,0x76630a3120323635,0x33732e3436732e74,0x2c31336c72252032\n"
".quad 0x610a3b3931722520,0x25203436732e6464,0x7225202c32336c72,0x6c7225202c31336c\n"
".quad 0x732e6464610a3b37,0x33336c7225203436,0x2c32336c7225202c,0x2e0a3b3239313820\n"
".quad 0x3533203220636f6c,0x64616d0a31203236,0x203436732e6f6c2e,0x25202c34336c7225\n"
".quad 0x7225202c33336c72,0x7225202c3138336c,0x2e6c68730a3b356c,0x336c722520343662\n"
".quad 0x34336c7225202c35,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c36336c\n"
".quad 0x0a3b3233202c3533,0x33203220636f6c2e,0x68730a3120323635,0x7225203436622e6c\n"
".quad 0x6c7225202c37336c,0x610a3b32202c3633,0x25203436732e6464,0x7225202c38336c72\n"
".quad 0x336c7225202c346c,0x6c672e646c0a3b37,0x3233662e6c61626f,0x255b202c35662520\n"
".quad 0x610a3b5d38336c72,0x25203436732e6464,0x7225202c39336c72,0x343032202c32336c\n"
".quad 0x636f6c2e0a3b3038,0x2033363533203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x336c7225202c3034,0x38336c7225202c39,0x38316c7225202c31,0x36622e6c68730a3b\n"
".quad 0x2c31346c72252034,0x202c30346c722520,0x2e7268730a3b3233,0x346c722520343673\n"
".quad 0x31346c7225202c32,0x6c2e0a3b3233202c,0x363533203220636f,0x2e6c68730a312033\n"
".quad 0x346c722520343662,0x32346c7225202c33,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x346c7225202c3434,0x3b33346c7225202c,0x626f6c672e646c0a,0x25203233662e6c61\n"
".quad 0x6c72255b202c3666,0x6464610a3b5d3434,0x6c7225203436732e,0x336c7225202c3534\n"
".quad 0x3637353432202c32,0x3220636f6c2e0a3b,0x0a31203436353320,0x732e6f6c2e64616d\n"
".quad 0x36346c7225203436,0x2c35346c7225202c,0x2c3138336c722520,0x0a3b34326c722520\n"
".quad 0x203436622e6c6873,0x25202c37346c7225,0x3233202c36346c72,0x36732e7268730a3b\n"
".quad 0x2c38346c72252034,0x202c37346c722520,0x636f6c2e0a3b3233,0x2034363533203220\n"
".quad 0x36622e6c68730a31,0x2c39346c72252034,0x202c38346c722520,0x732e6464610a3b32\n"
".quad 0x30356c7225203436,0x202c346c7225202c,0x6c0a3b39346c7225,0x6c61626f6c672e64\n"
".quad 0x376625203233662e,0x30356c72255b202c,0x20636f6c2e0a3b5d,0x3120353635332032\n"
".quad 0x3233732e6464610a,0x25202c3332722520,0x630a3b31202c3272,0x732e3436732e7476\n"
".quad 0x31356c7225203233,0x0a3b33327225202c,0x203436732e646461,0x25202c32356c7225\n"
".quad 0x7225202c31356c72,0x2e6464610a3b376c,0x356c722520343673,0x32356c7225202c33\n"
".quad 0x3b3438333631202c,0x203220636f6c2e0a,0x6d0a312035363533,0x36732e6f6c2e6461\n"
".quad 0x2c34356c72252034,0x202c33356c722520,0x202c3138336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x6c7225202c35356c,0x0a3b3233202c3435,0x203436732e726873\n"
".quad 0x25202c36356c7225,0x3233202c35356c72,0x3220636f6c2e0a3b,0x0a31203536353320\n"
".quad 0x203436622e6c6873,0x25202c37356c7225,0x3b32202c36356c72,0x3436732e6464610a\n"
".quad 0x202c38356c722520,0x7225202c346c7225,0x2e646c0a3b37356c,0x662e6c61626f6c67\n"
".quad 0x202c386625203233,0x3b5d38356c72255b,0x3436732e6464610a,0x202c39356c722520\n"
".quad 0x32202c32356c7225,0x6c2e0a3b32373638,0x363533203220636f,0x2e64616d0a312036\n"
".quad 0x25203436732e6f6c,0x7225202c30366c72,0x6c7225202c39356c,0x6c7225202c313833\n"
".quad 0x2e6c68730a3b3432,0x366c722520343662,0x30366c7225202c31,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c32366c,0x0a3b3233202c3136,0x33203220636f6c2e\n"
".quad 0x68730a3120363635,0x7225203436622e6c,0x6c7225202c33366c,0x610a3b32202c3236\n"
".quad 0x25203436732e6464,0x7225202c34366c72,0x366c7225202c346c,0x6c672e646c0a3b33\n"
".quad 0x3233662e6c61626f,0x255b202c39662520,0x610a3b5d34366c72,0x25203436732e6464\n"
".quad 0x7225202c35366c72,0x373233202c32356c,0x636f6c2e0a3b3836,0x2037363533203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x366c7225202c3636,0x38336c7225202c35\n"
".quad 0x38316c7225202c31,0x36622e6c68730a3b,0x2c37366c72252034,0x202c36366c722520\n"
".quad 0x2e7268730a3b3233,0x366c722520343673,0x37366c7225202c38,0x6c2e0a3b3233202c\n"
".quad 0x363533203220636f,0x2e6c68730a312037,0x366c722520343662,0x38366c7225202c39\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x346c7225202c3037,0x3b39366c7225202c\n"
".quad 0x626f6c672e646c0a,0x25203233662e6c61,0x72255b202c303166,0x64610a3b5d30376c\n"
".quad 0x7225203233732e64,0x2c347225202c3732,0x6c2e0a3b34362d20,0x363533203220636f\n"
".quad 0x2e7476630a312038,0x203233732e343673,0x25202c31376c7225,0x6464610a3b373272\n"
".quad 0x6c7225203436732e,0x366c7225202c3237,0x3b31376c7225202c,0x3436732e6464610a\n"
".quad 0x202c33376c722520,0x33202c32376c7225,0x6c2e0a3b34363836,0x363533203220636f\n"
".quad 0x2e64616d0a312038,0x25203436732e6f6c,0x7225202c34376c72,0x6c7225202c33376c\n"
".quad 0x6c7225202c313833,0x622e6c68730a3b35,0x35376c7225203436,0x2c34376c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x376c7225202c3637,0x2e0a3b3233202c35\n"
".quad 0x3533203220636f6c,0x6c68730a31203836,0x6c7225203436622e,0x376c7225202c3737\n"
".quad 0x64610a3b32202c36,0x7225203436732e64,0x6c7225202c38376c,0x37376c7225202c34\n"
".quad 0x6f6c672e646c0a3b,0x203233662e6c6162,0x255b202c31316625,0x610a3b5d38376c72\n"
".quad 0x25203436732e6464,0x7225202c39376c72,0x393034202c32376c,0x636f6c2e0a3b3036\n"
".quad 0x2039363533203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x376c7225202c3038\n"
".quad 0x38336c7225202c39,0x38316c7225202c31,0x36622e6c68730a3b,0x2c31386c72252034\n"
".quad 0x202c30386c722520,0x2e7268730a3b3233,0x386c722520343673,0x31386c7225202c32\n"
".quad 0x6c2e0a3b3233202c,0x363533203220636f,0x2e6c68730a312039,0x386c722520343662\n"
".quad 0x32386c7225202c33,0x6464610a3b32202c,0x6c7225203436732e,0x346c7225202c3438\n"
".quad 0x3b33386c7225202c,0x626f6c672e646c0a,0x25203233662e6c61,0x72255b202c323166\n"
".quad 0x64610a3b5d34386c,0x7225203436732e64,0x6c7225202c35386c,0x376c7225202c3133\n"
".quad 0x732e6464610a3b31,0x36386c7225203436,0x2c35386c7225202c,0x0a3b363530353420\n"
".quad 0x33203220636f6c2e,0x616d0a3120303735,0x3436732e6f6c2e64,0x202c37386c722520\n"
".quad 0x25202c36386c7225,0x25202c3138336c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x386c7225202c3838,0x730a3b3233202c37,0x25203436732e7268,0x7225202c39386c72\n"
".quad 0x3b3233202c38386c,0x203220636f6c2e0a,0x730a312030373533,0x25203436622e6c68\n"
".quad 0x7225202c30396c72,0x0a3b32202c39386c,0x203436732e646461,0x25202c31396c7225\n"
".quad 0x6c7225202c346c72,0x672e646c0a3b3039,0x33662e6c61626f6c,0x202c333166252032\n"
".quad 0x3b5d31396c72255b,0x3436732e6464610a,0x202c32396c722520,0x34202c32376c7225\n"
".quad 0x6c2e0a3b32353139,0x373533203220636f,0x2e64616d0a312031,0x25203436732e6f6c\n"
".quad 0x7225202c33396c72,0x6c7225202c32396c,0x6c7225202c313833,0x2e6c68730a3b3432\n"
".quad 0x396c722520343662,0x33396c7225202c34,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c35396c,0x0a3b3233202c3439,0x33203220636f6c2e,0x68730a3120313735\n"
".quad 0x7225203436622e6c,0x6c7225202c36396c,0x610a3b32202c3539,0x25203436732e6464\n"
".quad 0x7225202c37396c72,0x396c7225202c346c,0x6c672e646c0a3b36,0x3233662e6c61626f\n"
".quad 0x5b202c3431662520,0x0a3b5d37396c7225,0x203436732e646461,0x25202c38396c7225\n"
".quad 0x7225202c31356c72,0x6464610a3b31376c,0x6c7225203436732e,0x396c7225202c3939\n"
".quad 0x3834323335202c38,0x3220636f6c2e0a3b,0x0a31203237353320,0x732e6f6c2e64616d\n"
".quad 0x30316c7225203436,0x39396c7225202c30,0x3138336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3130316c7225,0x202c3030316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3230,0x0a3b3233202c3130,0x33203220636f6c2e\n"
".quad 0x68730a3120323735,0x7225203436622e6c,0x7225202c3330316c,0x3b32202c3230316c\n"
".quad 0x3436732e6464610a,0x2c3430316c722520,0x25202c346c722520,0x6c0a3b3330316c72\n"
".quad 0x6c61626f6c672e64,0x316625203233662e,0x316c72255b202c35,0x6464610a3b5d3430\n"
".quad 0x337225203233732e,0x202c347225202c33,0x636f6c2e0a3b3436,0x2033373533203220\n"
".quad 0x36732e7476630a31,0x7225203233732e34,0x7225202c3530316c,0x2e6464610a3b3333\n"
".quad 0x316c722520343673,0x366c7225202c3630,0x3530316c7225202c,0x36732e6464610a3b\n"
".quad 0x3730316c72252034,0x3630316c7225202c,0x3b3434333735202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312033373533,0x36732e6f6c2e6461,0x3830316c72252034,0x3730316c7225202c\n"
".quad 0x3138336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3930316c7225\n"
".quad 0x202c3830316c7225,0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3031\n"
".quad 0x0a3b3233202c3930,0x33203220636f6c2e,0x68730a3120333735,0x7225203436622e6c\n"
".quad 0x7225202c3131316c,0x3b32202c3031316c,0x3436732e6464610a,0x2c3231316c722520\n"
".quad 0x25202c346c722520,0x6c0a3b3131316c72,0x6c61626f6c672e64,0x316625203233662e\n"
".quad 0x316c72255b202c36,0x6464610a3b5d3231,0x6c7225203436732e,0x6c7225202c333131\n"
".quad 0x343136202c363031,0x636f6c2e0a3b3034,0x2034373533203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c343131,0x6c7225202c333131,0x6c7225202c313833\n"
".quad 0x2e6c68730a3b3831,0x316c722520343662,0x316c7225202c3531,0x0a3b3233202c3431\n"
".quad 0x203436732e726873,0x202c3631316c7225,0x202c3531316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2034373533203220,0x36622e6c68730a31,0x3731316c72252034,0x3631316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c383131,0x31316c7225202c34\n"
".quad 0x6c672e646c0a3b37,0x3233662e6c61626f,0x5b202c3731662520,0x3b5d3831316c7225\n"
".quad 0x3436732e6464610a,0x2c3931316c722520,0x202c31336c722520,0x0a3b3530316c7225\n"
".quad 0x203436732e646461,0x202c3032316c7225,0x202c3931316c7225,0x2e0a3b3633353536\n"
".quad 0x3533203220636f6c,0x64616d0a31203537,0x203436732e6f6c2e,0x202c3132316c7225\n"
".quad 0x202c3032316c7225,0x202c3138336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3232316c,0x3233202c3132316c,0x36732e7268730a3b,0x3332316c72252034\n"
".quad 0x3232316c7225202c,0x6c2e0a3b3233202c,0x373533203220636f,0x2e6c68730a312035\n"
".quad 0x316c722520343662,0x316c7225202c3432,0x610a3b32202c3332,0x25203436732e6464\n"
".quad 0x25202c3532316c72,0x6c7225202c346c72,0x2e646c0a3b343231,0x662e6c61626f6c67\n"
".quad 0x2c38316625203233,0x3532316c72255b20,0x732e6464610a3b5d,0x32316c7225203436\n"
".quad 0x30316c7225202c36,0x3233363936202c36,0x3220636f6c2e0a3b,0x0a31203637353320\n"
".quad 0x732e6f6c2e64616d,0x32316c7225203436,0x32316c7225202c37,0x38336c7225202c36\n"
".quad 0x34326c7225202c31,0x36622e6c68730a3b,0x3832316c72252034,0x3732316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3932316c,0x3233202c3832316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203637353320,0x203436622e6c6873,0x202c3033316c7225\n"
".quad 0x202c3932316c7225,0x732e6464610a3b32,0x33316c7225203436,0x2c346c7225202c31\n"
".quad 0x3b3033316c722520,0x626f6c672e646c0a,0x25203233662e6c61,0x72255b202c393166\n"
".quad 0x2e0a3b5d3133316c,0x3533203220636f6c,0x6464610a31203737,0x337225203233732e\n"
".quad 0x202c337225202c38,0x20636f6c2e0a3b31,0x3120303234312032,0x746c2e707465730a\n"
".quad 0x317025203233732e,0x2c38337225202c31,0x7025400a3b343620,0x4220617262203131\n"
".quad 0x0a0a3b335f393242,0x203436752e766f6d,0x202c3238336c7225,0x72620a3b32333034\n"
".quad 0x424220696e752e61,0x420a0a3b345f3932,0x730a3a335f393242,0x25203233622e6c68\n"
".quad 0x337225202c343472,0x76630a3b36202c38,0x33732e3436732e74,0x3238336c72252032\n"
".quad 0x0a3b34347225202c,0x3a345f393242420a,0x203220636f6c2e0a,0x730a312030323431\n"
".quad 0x732e746c2e707465,0x2c32317025203233,0x36202c3332722520,0x732e6464610a3b34\n"
".quad 0x33316c7225203436,0x31356c7225202c34,0x3b3832373337202c,0x36622e706c65730a\n"
".quad 0x3533316c72252034,0x3433316c7225202c,0x2c3139373337202c,0x610a3b3231702520\n"
".quad 0x25203436732e6464,0x25202c3633316c72,0x25202c3533316c72,0x630a3b3238336c72\n"
".quad 0x752e3436752e7476,0x33316c7225203233,0x0a3b317225202c37,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c303833,0x41425f645f524c39,0x6d665f5366504443\n"
".quad 0x335f6d617261705f,0x20636f6c2e0a3b5d,0x3120373735332032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3833,0x336c7225202c3633,0x316c7225202c3038\n"
".quad 0x702e646c0a3b3733,0x3436752e6d617261,0x2c3537336c722520,0x5f524c395a5f5b20\n"
".quad 0x6650444341425f64,0x7261705f6d665f53,0x630a3b5d305f6d61,0x672e6f742e617476\n"
".quad 0x36752e6c61626f6c,0x3933316c72252034,0x3537336c7225202c,0x36622e6c68730a3b\n"
".quad 0x3034316c72252034,0x3833316c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3134316c,0x3233202c3034316c,0x3220636f6c2e0a3b,0x0a31203737353320\n"
".quad 0x203436622e6c6873,0x202c3234316c7225,0x202c3134316c7225,0x732e6464610a3b32\n"
".quad 0x34316c7225203436,0x33316c7225202c33,0x34316c7225202c39,0x6c672e646c0a3b32\n"
".quad 0x3233662e6c61626f,0x5b202c3032662520,0x3b5d3334316c7225,0x203220636f6c2e0a\n"
".quad 0x400a312038373533,0x2061726220317025,0x0a3b365f39324242,0x203220636f6c2e0a\n"
".quad 0x730a312030303633,0x25203233662e6275,0x336625202c333366,0x610a3b346625202c\n"
".quad 0x25203233662e6464,0x336625202c343366,0x0a3b366625202c33,0x203233662e627573\n"
".quad 0x6625202c35336625,0x3b376625202c3433,0x3233662e6275730a,0x25202c3633662520\n"
".quad 0x396625202c353366,0x33662e6464610a3b,0x202c373366252032,0x6625202c36336625\n"
".quad 0x2e6464610a3b3031,0x3833662520323366,0x202c37336625202c,0x75730a3b32316625\n"
".quad 0x6625203233662e62,0x38336625202c3933,0x0a3b34316625202c,0x203233662e646461\n"
".quad 0x6625202c30346625,0x37316625202c3933,0x33662e6275730a3b,0x202c313466252032\n"
".quad 0x6625202c30346625,0x2e6275730a3b3931,0x3234662520323366,0x25202c356625202c\n"
".quad 0x2e6464610a3b3866,0x3334662520323366,0x202c32346625202c,0x6464610a3b366625\n"
".quad 0x346625203233662e,0x2c33346625202c34,0x75730a3b37662520,0x6625203233662e62\n"
".quad 0x34346625202c3534,0x730a3b396625202c,0x25203233662e6275,0x346625202c363466\n"
".quad 0x3b30316625202c35,0x3233662e6464610a,0x25202c3734662520,0x316625202c363466\n"
".quad 0x662e6275730a3b33,0x2c38346625203233,0x25202c3734662520,0x6464610a3b353166\n"
".quad 0x346625203233662e,0x2c38346625202c39,0x730a3b3831662520,0x25203233662e6275\n"
".quad 0x346625202c303566,0x3b30326625202c39,0x3233662e6464610a,0x25202c3135662520\n"
".quad 0x316625202c313166,0x662e6464610a3b32,0x2c32356625203233,0x25202c3135662520\n"
".quad 0x6464610a3b333166,0x356625203233662e,0x2c32356625202c33,0x610a3b3431662520\n"
".quad 0x25203233662e6464,0x356625202c343566,0x3b35316625202c33,0x3233662e6275730a\n"
".quad 0x25202c3535662520,0x316625202c343566,0x662e6275730a3b36,0x2c36356625203233\n"
".quad 0x25202c3535662520,0x6275730a3b373166,0x356625203233662e,0x2c36356625202c37\n"
".quad 0x730a3b3831662520,0x25203233662e6275,0x356625202c383566,0x3b39316625202c37\n"
".quad 0x3233662e6275730a,0x25202c3935662520,0x326625202c383566,0x662e6275730a3b30\n"
".quad 0x2c30366625203233,0x6625202c36662520,0x20636f6c2e0a3b32,0x3120303036332032\n"
".quad 0x3233662e6464610a,0x25202c3136662520,0x376625202c303666,0x33662e6464610a3b\n"
".quad 0x202c323666252032,0x6625202c31366625,0x662e6464610a3b39,0x2c33366625203233\n"
".quad 0x25202c3236662520,0x6464610a3b303166,0x366625203233662e,0x2c33366625202c34\n"
".quad 0x610a3b3231662520,0x25203233662e6464,0x366625202c353666,0x3b33316625202c34\n"
".quad 0x3233662e6464610a,0x25202c3636662520,0x316625202c353666,0x662e6464610a3b34\n"
".quad 0x2c37366625203233,0x25202c3636662520,0x6464610a3b353166,0x366625203233662e\n"
".quad 0x2c37366625202c38,0x610a3b3731662520,0x25203233662e6464,0x366625202c393666\n"
".quad 0x3b38316625202c38,0x3233662e6464610a,0x25202c3037662520,0x316625202c393666\n"
".quad 0x662e6464610a3b39,0x2c31376625203233,0x25202c3037662520,0x6c756d0a3b303266\n"
".quad 0x376625203233662e,0x2c30356625202c32,0x660a3b3035662520,0x33662e6e722e616d\n"
".quad 0x202c333766252032,0x6625202c31346625,0x32376625202c3134,0x33662e6c756d0a3b\n"
".quad 0x202c343766252032,0x6625202c39356625,0x2e616d660a3b3935,0x25203233662e6e72\n"
".quad 0x356625202c353766,0x2c39356625202c39,0x730a3b3337662520,0x25203233662e6275\n"
".quad 0x376625202c363766,0x3b35376625202c31,0x3233662e6c756d0a,0x25202c3737662520\n"
".quad 0x30436630202c3366,0x0a3b303030303038,0x662e6e722e616d66,0x2c38376625203233\n"
".quad 0x6630202c32662520,0x3030303030343134,0x0a3b37376625202c,0x662e6e722e616d66\n"
".quad 0x2c39376625203233,0x6630202c35662520,0x3030303030383043,0x0a3b38376625202c\n"
".quad 0x662e6e722e616d66,0x2c30386625203233,0x6630202c34662520,0x3030303030383043\n"
".quad 0x0a3b39376625202c,0x662e6e722e616d66,0x2c31386625203233,0x6630202c38662520\n"
".quad 0x3030303030383043,0x0a3b30386625202c,0x203233662e646461,0x6625202c32386625\n"
".quad 0x3b366625202c3138,0x3233662e6464610a,0x25202c3338662520,0x376625202c323866\n"
".quad 0x33662e6464610a3b,0x202c343866252032,0x6625202c33386625,0x662e6464610a3b39\n"
".quad 0x2c35386625203233,0x25202c3438662520,0x616d660a3b303166,0x203233662e6e722e\n"
".quad 0x6625202c36386625,0x30436630202c3131,0x202c303030303038,0x64610a3b35386625\n"
".quad 0x6625203233662e64,0x36386625202c3738,0x0a3b32316625202c,0x203233662e646461\n"
".quad 0x6625202c38386625,0x33316625202c3738,0x33662e6464610a3b,0x202c393866252032\n"
".quad 0x6625202c38386625,0x2e6464610a3b3431,0x3039662520323366,0x202c39386625202c\n"
".quad 0x6d660a3b35316625,0x3233662e6e722e61,0x25202c3139662520,0x436630202c363166\n"
".quad 0x2c30303030303830,0x610a3b3039662520,0x25203233662e6464,0x396625202c323966\n"
".quad 0x3b37316625202c31,0x3233662e6464610a,0x25202c3339662520,0x316625202c323966\n"
".quad 0x662e6464610a3b38,0x2c34396625203233,0x25202c3339662520,0x6464610a3b393166\n"
".quad 0x396625203233662e,0x2c34396625202c35,0x660a3b3032662520,0x33662e6e722e616d\n"
".quad 0x202c363966252032,0x6630202c35376625,0x3431353431463034,0x0a3b35396625202c\n"
".quad 0x203233662e6c756d,0x6625202c37396625,0x4130346630202c34,0x660a3b3030303030\n"
".quad 0x33662e6e722e616d,0x202c383966252032,0x436630202c336625,0x2c30303030304130\n"
".quad 0x660a3b3739662520,0x33662e6e722e616d,0x202c393966252032,0x6630202c31346625\n"
".quad 0x3535353535444633,0x0a3b38396625202c,0x203233662e6c756d,0x25202c3030316625\n"
".quad 0x30346630202c3866,0x0a3b303030303041,0x662e6e722e616d66,0x3130316625203233\n"
".quad 0x30202c356625202c,0x3030303041304366,0x3030316625202c30,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x30356625202c3230,0x354446336630202c,0x6625202c35353535\n"
".quad 0x6c756d0a3b313031,0x316625203233662e,0x36316625202c3330,0x304130346630202c\n"
".quad 0x6d660a3b30303030,0x3233662e6e722e61,0x202c343031662520,0x6630202c31316625\n"
".quad 0x3030303030413043,0x3b3330316625202c,0x2e6e722e616d660a,0x3031662520323366\n"
".quad 0x2c39356625202c35,0x3535444633663020,0x316625202c353535,0x2e6464610a3b3430\n"
".quad 0x3031662520323366,0x202c336625202c36,0x6275730a3b336625,0x316625203233662e\n"
".quad 0x30316625202c3730,0x0a3b356625202c36,0x33203220636f6c2e,0x64610a3120303036\n"
".quad 0x6625203233662e64,0x346625202c383031,0x610a3b346625202c,0x25203233662e6464\n"
".quad 0x6625202c39303166,0x316625202c373031,0x2e6275730a3b3830,0x3131662520323366\n"
".quad 0x3930316625202c30,0x2e0a3b386625202c,0x3633203220636f6c,0x6464610a31203030\n"
".quad 0x316625203233662e,0x31316625202c3131,0x0a3b366625202c30,0x203233662e646461\n"
".quad 0x25202c3231316625,0x6625202c31313166,0x662e6464610a3b37,0x3331316625203233\n"
".quad 0x2c3231316625202c,0x64610a3b39662520,0x6625203233662e64,0x316625202c343131\n"
".quad 0x30316625202c3331,0x33662e6275730a3b,0x2c35313166252032,0x202c343131662520\n"
".quad 0x6c2e0a3b31316625,0x303633203220636f,0x2e6464610a312030,0x3131662520323366\n"
".quad 0x3531316625202c36,0x0a3b32316625202c,0x203233662e766f6d,0x30202c3731316625\n"
".quad 0x3030303030304366,0x20636f6c2e0a3b30,0x3120303036332032,0x2e6e722e616d660a\n"
".quad 0x3131662520323366,0x2c33316625202c38,0x3030303043663020,0x316625202c303030\n"
".quad 0x2e6464610a3b3631,0x3131662520323366,0x3831316625202c39,0x0a3b34316625202c\n"
".quad 0x662e6e722e616d66,0x3032316625203233,0x202c35316625202c,0x3030303030436630\n"
".quad 0x31316625202c3030,0x662e6275730a3b39,0x3132316625203233,0x2c3032316625202c\n"
".quad 0x2e0a3b3631662520,0x3633203220636f6c,0x6464610a31203030,0x316625203233662e\n"
".quad 0x32316625202c3232,0x3b37316625202c31,0x2e6e722e616d660a,0x3231662520323366\n"
".quad 0x2c38316625202c33,0x3030303043663020,0x316625202c303030,0x2e6464610a3b3232\n"
".quad 0x3231662520323366,0x3332316625202c34,0x0a3b39316625202c,0x662e6e722e616d66\n"
".quad 0x3532316625203233,0x202c30326625202c,0x3030303030436630,0x32316625202c3030\n"
".quad 0x662e6464610a3b34,0x3632316625203233,0x202c31346625202c,0x6d660a3b31346625\n"
".quad 0x3233662e6e722e61,0x202c373231662520,0x6625202c30356625,0x34376625202c3035\n"
".quad 0x33662e67656e0a3b,0x2c38323166252032,0x0a3b373231662520,0x662e6e722e616d66\n"
".quad 0x3932316625203233,0x2c3632316625202c,0x25202c3134662520,0x75730a3b38323166\n"
".quad 0x6625203233662e62,0x316625202c303331,0x32316625202c3532,0x662e6464610a3b39\n"
".quad 0x3133316625203233,0x25202c356625202c,0x2e616d660a3b3566,0x25203233662e6e72\n"
".quad 0x6625202c32333166,0x3830436630202c33,0x25202c3030303030,0x6d660a3b31333166\n"
".quad 0x3233662e6e722e61,0x202c333331662520,0x436630202c346625,0x2c30303030303830\n"
".quad 0x0a3b323331662520,0x203233662e646461,0x25202c3433316625,0x3b386625202c3866\n"
".quad 0x3233662e6464610a,0x202c353331662520,0x25202c3333316625,0x64610a3b34333166\n"
".quad 0x6625203233662e64,0x316625202c363331,0x3b366625202c3533,0x3233662e6464610a\n"
".quad 0x202c373331662520,0x25202c3633316625,0x2e6464610a3b3766,0x3331662520323366\n"
".quad 0x3733316625202c38,0x610a3b396625202c,0x25203233662e6464,0x6625202c39333166\n"
".quad 0x316625202c383331,0x662e6464610a3b30,0x3034316625203233,0x202c31316625202c\n"
".quad 0x64610a3b31316625,0x6625203233662e64,0x316625202c313431,0x34316625202c3933\n"
".quad 0x662e6464610a3b30,0x3234316625203233,0x2c3134316625202c,0x660a3b3231662520\n"
".quad 0x33662e6e722e616d,0x2c33343166252032,0x30202c3331662520,0x3030303030304366\n"
".quad 0x3234316625202c30,0x33662e6464610a3b,0x2c34343166252032,0x202c333431662520\n"
".quad 0x6d660a3b34316625,0x3233662e6e722e61,0x202c353431662520,0x6630202c35316625\n"
".quad 0x3030303030303043,0x3b3434316625202c,0x3233662e6464610a,0x202c363431662520\n"
".quad 0x6625202c36316625,0x2e6464610a3b3631,0x3431662520323366,0x3534316625202c37\n"
".quad 0x3b3634316625202c,0x3233662e6464610a,0x202c383431662520,0x25202c3734316625\n"
".quad 0x616d660a3b373166,0x203233662e6e722e,0x25202c3934316625,0x436630202c383166\n"
".quad 0x2c30303030303030,0x0a3b383431662520,0x203233662e646461,0x25202c3035316625\n"
".quad 0x6625202c39343166,0x2e616d660a3b3931,0x25203233662e6e72,0x6625202c31353166\n"
".quad 0x30436630202c3032,0x202c303030303030,0x610a3b3035316625,0x25203233662e6464\n"
".quad 0x6625202c32353166,0x0a3b386625202c35,0x203233662e646461,0x25202c3335316625\n"
".quad 0x6625202c32353166,0x662e6464610a3b36,0x3435316625203233,0x2c3335316625202c\n"
".quad 0x64610a3b37662520,0x6625203233662e64,0x316625202c353531,0x3b396625202c3435\n"
".quad 0x3233662e6464610a,0x202c363531662520,0x25202c3535316625,0x6275730a3b303166\n"
".quad 0x316625203233662e,0x35316625202c3735,0x3b31316625202c36,0x3233662e6275730a\n"
".quad 0x202c383531662520,0x25202c3735316625,0x6275730a3b323166,0x316625203233662e\n"
".quad 0x35316625202c3935,0x3b34316625202c38,0x3233662e6275730a,0x202c303631662520\n"
".quad 0x25202c3935316625,0x6275730a3b363166,0x316625203233662e,0x36316625202c3136\n"
".quad 0x3b37316625202c30,0x3233662e6275730a,0x202c323631662520,0x25202c3136316625\n"
".quad 0x6f6c2e0a3b393166,0x3030363320322063,0x662e67656e0a3120,0x3336316625203233\n"
".quad 0x0a3b39356625202c,0x662e6e722e616d66,0x3436316625203233,0x2c3336316625202c\n"
".quad 0x25202c3935662520,0x6275730a3b323766,0x316625203233662e,0x36316625202c3536\n"
".quad 0x3436316625202c32,0x33662e67656e0a3b,0x2c36363166252032,0x0a3b343331662520\n"
".quad 0x662e6e722e616d66,0x3736316625203233,0x25202c356625202c,0x6625202c37313166\n"
".quad 0x6464610a3b363631,0x316625203233662e,0x36316625202c3836,0x0a3b366625202c37\n"
".quad 0x203233662e646461,0x25202c3936316625,0x6625202c38363166,0x662e6464610a3b37\n"
".quad 0x3037316625203233,0x2c3936316625202c,0x64610a3b39662520,0x6625203233662e64\n"
".quad 0x316625202c313731,0x30316625202c3037,0x33662e6464610a3b,0x2c32373166252032\n"
".quad 0x202c313731662520,0x730a3b3034316625,0x25203233662e6275,0x6625202c33373166\n"
".quad 0x316625202c323731,0x662e6275730a3b32,0x3437316625203233,0x2c3337316625202c\n"
".quad 0x2e0a3b3431662520,0x3633203220636f6c,0x6464610a31203030,0x316625203233662e\n"
".quad 0x37316625202c3537,0x3634316625202c34,0x33662e6275730a3b,0x2c36373166252032\n"
".quad 0x202c353731662520,0x75730a3b37316625,0x6625203233662e62,0x316625202c373731\n"
".quad 0x39316625202c3637,0x33662e6275730a3b,0x2c38373166252032,0x6625202c36662520\n"
".quad 0x20636f6c2e0a3b37,0x3120303036332032,0x3233662e6464610a,0x202c393731662520\n"
".quad 0x25202c3837316625,0x2e6275730a3b3966,0x3831662520323366,0x3937316625202c30\n"
".quad 0x0a3b30316625202c,0x33203220636f6c2e,0x656e0a3120303036,0x6625203233662e67\n"
".quad 0x346625202c313831,0x722e616d660a3b31,0x6625203233662e6e,0x316625202c323831\n"
".quad 0x30356625202c3138,0x3b3038316625202c,0x3233662e6275730a,0x202c333831662520\n"
".quad 0x6625202c33316625,0x2e6275730a3b3531,0x3831662520323366,0x3338316625202c34\n"
".quad 0x0a3b38316625202c,0x33203220636f6c2e,0x64610a3120303036,0x6625203233662e64\n"
".quad 0x316625202c353831,0x30326625202c3438,0x33662e67656e0a3b,0x2c36383166252032\n"
".quad 0x660a3b3035662520,0x33662e6e722e616d,0x2c37383166252032,0x202c363831662520\n"
".quad 0x6625202c39356625,0x6275730a3b353831,0x316625203233662e,0x32316625202c3838\n"
".quad 0x0a3b34316625202c,0x203233662e627573,0x25202c3938316625,0x6625202c38383166\n"
".quad 0x636f6c2e0a3b3731,0x2030303633203220,0x33662e6464610a31,0x2c30393166252032\n"
".quad 0x202c393831662520,0x6d660a3b39316625,0x3233662e6e722e61,0x202c313931662520\n"
".quad 0x25202c3138316625,0x316625202c393566,0x2e6275730a3b3039,0x3931662520323366\n"
".quad 0x3837316625202c32,0x2e0a3b396625202c,0x3633203220636f6c,0x6464610a31203030\n"
".quad 0x316625203233662e,0x39316625202c3339,0x3b30316625202c32,0x3233662e6275730a\n"
".quad 0x202c343931662520,0x25202c3339316625,0x6464610a3b323166,0x316625203233662e\n"
".quad 0x39316625202c3539,0x3b34316625202c34,0x3233662e6275730a,0x202c363931662520\n"
".quad 0x25202c3539316625,0x6f6c2e0a3b373166,0x3030363320322063,0x662e6464610a3120\n"
".quad 0x3739316625203233,0x2c3639316625202c,0x6e0a3b3931662520,0x25203233662e6765\n"
".quad 0x6625202c38393166,0x662e6275730a3b37,0x3939316625203233,0x2c3839316625202c\n"
".quad 0x6c2e0a3b36662520,0x303633203220636f,0x2e6464610a312030,0x3032662520323366\n"
".quad 0x3939316625202c30,0x610a3b396625202c,0x25203233662e6464,0x6625202c31303266\n"
".quad 0x316625202c303032,0x662e6464610a3b30,0x3230326625203233,0x2c3130326625202c\n"
".quad 0x730a3b3331662520,0x25203233662e6275,0x6625202c33303266,0x316625202c323032\n"
".quad 0x20636f6c2e0a3b35,0x3120303036332032,0x3233662e6464610a,0x202c343032662520\n"
".quad 0x25202c3330326625,0x6275730a3b383166,0x326625203233662e,0x30326625202c3530\n"
".quad 0x3b30326625202c34,0x3233662e6275730a,0x202c363032662520,0x6625202c32316625\n"
".quad 0x636f6c2e0a3b3331,0x2030303633203220,0x33662e6464610a31,0x2c37303266252032\n"
".quad 0x202c363032662520,0x75730a3b34316625,0x6625203233662e62,0x326625202c383032\n"
".quad 0x35316625202c3730,0x33662e6275730a3b,0x2c39303266252032,0x202c383032662520\n"
".quad 0x6c2e0a3b37316625,0x303633203220636f,0x2e6464610a312030,0x3132662520323366\n"
".quad 0x3930326625202c30,0x0a3b38316625202c,0x203233662e627573,0x25202c3131326625\n"
".quad 0x6625202c30313266,0x636f6c2e0a3b3931,0x2030303633203220,0x33662e6464610a31\n"
".quad 0x2c32313266252032,0x202c313132662520,0x6f6d0a3b30326625,0x6625203233662e76\n"
".quad 0x336630202c333132,0x3b30303030303845,0x617261702e646c0a,0x6625203233662e6d\n"
".quad 0x5a5f5b202c343833,0x41425f645f524c39,0x6d665f5366504443,0x325f6d617261705f\n"
".quad 0x20636f6c2e0a3b5d,0x3120303036332032,0x3233662e6c756d0a,0x202c343132662520\n"
".quad 0x30202c3438336625,0x3030303038453366,0x662e766f6d0a3b30,0x3531326625203233\n"
".quad 0x303045336630202c,0x6c2e0a3b30303030,0x303633203220636f,0x2e6c756d0a312030\n"
".quad 0x3132662520323366,0x3737316625202c36,0x413244336630202c,0x6f6d0a3b42414141\n"
".quad 0x6625203233662e76,0x336630202c373132,0x3b42414141413244,0x203220636f6c2e0a\n"
".quad 0x6d0a312030303633,0x25203233662e6c75,0x6625202c38313266,0x336630202c343833\n"
".quad 0x3b42414141414144,0x3233662e6c756d0a,0x202c393132662520,0x30202c3135316625\n"
".quad 0x3345383336433366,0x662e6c756d0a3b39,0x3032326625203233,0x2c3438336625202c\n"
".quad 0x3833454333663020,0x6c756d0a3b393345,0x326625203233662e,0x33316625202c3132\n"
".quad 0x3032326625202c30,0x33662e6c756d0a3b,0x2c32323266252032,0x30202c3939662520\n"
".quad 0x4343434343433366,0x662e766f6d0a3b44,0x3332326625203233,0x434343336630202c\n"
".quad 0x6c2e0a3b44434343,0x303633203220636f,0x2e6c756d0a312030,0x3232662520323366\n"
".quad 0x3230316625202c34,0x434343336630202c,0x756d0a3b44434343,0x6625203233662e6c\n"
".quad 0x316625202c353232,0x43336630202c3530,0x0a3b444343434343,0x203233662e6c756d\n"
".quad 0x25202c3632326625,0x336630202c363966,0x3b31323830323842,0x3233662e6c756d0a\n"
".quad 0x202c373232662520,0x30202c3632326625,0x3030303034313466,0x722e616d660a3b30\n"
".quad 0x6625203233662e6e,0x376625202c383232,0x3745426630202c36,0x25202c4433464333\n"
".quad 0x75730a3b37323266,0x6625203233662e62,0x326625202c393232,0x3b3832326625202c\n"
".quad 0x3233662e6c756d0a,0x202c303332662520,0x30202c3632326625,0x3030303038304366\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x376625202c313332,0x4244426630202c36\n"
".quad 0x25202c4432424332,0x6d660a3b30333266,0x3233662e6e722e61,0x202c323332662520\n"
".quad 0x30202c3232326625,0x3030303038304366,0x3133326625202c30,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x33316625202c3333,0x3032326625202c30,0x3b3132326625202c\n"
".quad 0x3233662e6464610a,0x202c343332662520,0x25202c3233326625,0x6d660a3b33333266\n"
".quad 0x3233662e6e722e61,0x202c353332662520,0x30202c3931326625,0x3030303038304366\n"
".quad 0x3433326625202c30,0x33662e6275730a3b,0x2c36333266252032,0x6625202c33662520\n"
".quad 0x616d660a3b353332,0x203233662e6e722e,0x25202c3733326625,0x6630202c34323266\n"
".quad 0x3030303030383043,0x3b3133326625202c,0x3233662e67656e0a,0x202c383332662520\n"
".quad 0x660a3b3033316625,0x33662e6e722e616d,0x2c39333266252032,0x202c383332662520\n"
".quad 0x25202c3032326625,0x6c2e0a3b37333266,0x303633203220636f,0x2e616d660a312030\n"
".quad 0x25203233662e6e72,0x6625202c30343266,0x336630202c313531,0x2c39334538333643\n"
".quad 0x0a3b393132662520,0x203233662e646461,0x25202c3134326625,0x6625202c39333266\n"
".quad 0x616d660a3b303432,0x203233662e6e722e,0x25202c3234326625,0x6625202c35363166\n"
".quad 0x326625202c383132,0x2e616d660a3b3134,0x25203233662e6e72,0x6625202c33343266\n"
".quad 0x436630202c363132,0x2c30303030303030,0x0a3b323432662520,0x203233662e627573\n"
".quad 0x25202c3434326625,0x34326625202c3566,0x722e616d660a3b33,0x6625203233662e6e\n"
".quad 0x326625202c353432,0x30346630202c3232,0x202c303030303038,0x610a3b3133326625\n"
".quad 0x25203233662e6464,0x6625202c36343266,0x326625202c353432,0x2e616d660a3b3333\n"
".quad 0x25203233662e6e72,0x6625202c37343266,0x436630202c393132,0x2c30303030303830\n"
".quad 0x0a3b363432662520,0x203233662e627573,0x25202c3834326625,0x34326625202c3466\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x326625202c393432,0x30346630202c3432\n"
".quad 0x202c303030303038,0x660a3b3133326625,0x33662e6e722e616d,0x2c30353266252032\n"
".quad 0x202c383332662520,0x25202c3032326625,0x6c2e0a3b39343266,0x303633203220636f\n"
".quad 0x2e6464610a312030,0x3532662520323366,0x3035326625202c31,0x3b3034326625202c\n"
".quad 0x2e6e722e616d660a,0x3532662520323366,0x3536316625202c32,0x2c3831326625202c\n"
".quad 0x0a3b313532662520,0x662e6e722e616d66,0x3335326625203233,0x2c3631326625202c\n"
".quad 0x3030303043663020,0x326625202c303030,0x2e6275730a3b3235,0x3532662520323366\n"
".quad 0x202c386625202c34,0x660a3b3335326625,0x33662e6e722e616d,0x2c35353266252032\n"
".quad 0x30202c3637662520,0x3238303238443366,0x3632326625202c30,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x39396625202c3635,0x434343336630202c,0x6625202c44434343\n"
".quad 0x616d660a3b353532,0x203233662e6e722e,0x25202c3735326625,0x6630202c32303166\n"
".quad 0x4443434343434333,0x3b3635326625202c,0x2e6e722e616d660a,0x3532662520323366\n"
".quad 0x3033316625202c38,0x2c3032326625202c,0x0a3b373532662520,0x662e6e722e616d66\n"
".quad 0x3935326625203233,0x2c3135316625202c,0x3833364333663020,0x326625202c393345\n"
".quad 0x2e616d660a3b3835,0x25203233662e6e72,0x6625202c30363266,0x326625202c353631\n"
".quad 0x35326625202c3831,0x722e616d660a3b39,0x6625203233662e6e,0x316625202c313632\n"
".quad 0x44336630202c3737,0x202c424141414132,0x660a3b3036326625,0x33662e6e722e616d\n"
".quad 0x2c32363266252032,0x202c323831662520,0x3030303845336630,0x36326625202c3030\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x316625202c333632,0x45336630202c3739\n"
".quad 0x202c303030303030,0x6e0a3b3236326625,0x25203233662e6765,0x6625202c34363266\n"
".quad 0x616d660a3b353032,0x203233662e6e722e,0x25202c3536326625,0x6625202c34363266\n"
".quad 0x326625202c353132,0x636f6c2e0a3b3336,0x2030303633203220,0x33662e6275730a31\n"
".quad 0x2c36363266252032,0x6625202c36662520,0x67656e0a3b353632,0x326625203233662e\n"
".quad 0x39396625202c3736,0x6e722e616d660a3b,0x326625203233662e,0x36326625202c3836\n"
".quad 0x3332326625202c37,0x3b3535326625202c,0x203220636f6c2e0a,0x660a312030303633\n"
".quad 0x33662e6e722e616d,0x2c39363266252032,0x202c323031662520,0x4343434343336630\n"
".quad 0x36326625202c4443,0x722e616d660a3b38,0x6625203233662e6e,0x316625202c303732\n"
".quad 0x32326625202c3033,0x3936326625202c30,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x35316625202c3137,0x3643336630202c31,0x25202c3933453833,0x6d660a3b30373266\n"
".quad 0x3233662e6e722e61,0x202c323732662520,0x25202c3536316625,0x6625202c38313266\n"
".quad 0x616d660a3b313732,0x203233662e6e722e,0x25202c3337326625,0x6630202c37373166\n"
".quad 0x4241414141324433,0x3b3237326625202c,0x3233662e67656e0a,0x202c343732662520\n"
".quad 0x660a3b3238316625,0x33662e6e722e616d,0x2c35373266252032,0x202c343732662520\n"
".quad 0x25202c3331326625,0x656e0a3b33373266,0x6625203233662e67,0x316625202c363732\n"
".quad 0x2e616d660a3b3739,0x25203233662e6e72,0x6625202c37373266,0x326625202c363732\n"
".quad 0x37326625202c3531,0x722e616d660a3b35,0x6625203233662e6e,0x326625202c383732\n"
".quad 0x31326625202c3436,0x3737326625202c35,0x3220636f6c2e0a3b,0x0a31203030363320\n"
".quad 0x203233662e627573,0x25202c3937326625,0x37326625202c3766,0x662e67656e0a3b38\n"
".quad 0x3038326625203233,0x3b3230316625202c,0x2e6e722e616d660a,0x3832662520323366\n"
".quad 0x3038326625202c31,0x2c3332326625202c,0x0a3b383632662520,0x33203220636f6c2e\n"
".quad 0x6d660a3120303036,0x3233662e6e722e61,0x202c323832662520,0x25202c3033316625\n"
".quad 0x6625202c30323266,0x616d660a3b313832,0x203233662e6e722e,0x25202c3338326625\n"
".quad 0x6630202c31353166,0x3933453833364333,0x3b3238326625202c,0x2e6e722e616d660a\n"
".quad 0x3832662520323366,0x3536316625202c34,0x2c3831326625202c,0x0a3b333832662520\n"
".quad 0x662e6e722e616d66,0x3538326625203233,0x2c3737316625202c,0x4141324433663020\n"
".quad 0x326625202c424141,0x2e616d660a3b3438,0x25203233662e6e72,0x6625202c36383266\n"
".quad 0x336630202c323831,0x2c30303030303845,0x0a3b353832662520,0x662e6e722e616d66\n"
".quad 0x3738326625203233,0x2c3637326625202c,0x202c353132662520,0x2e0a3b3638326625\n"
".quad 0x3633203220636f6c,0x616d660a31203030,0x203233662e6e722e,0x25202c3838326625\n"
".quad 0x6630202c35303266,0x3030303030304533,0x3b3738326625202c,0x3233662e6275730a\n"
".quad 0x202c393832662520,0x326625202c396625,0x2e616d660a3b3838,0x25203233662e6e72\n"
".quad 0x6625202c30393266,0x326625202c303832,0x35326625202c3332,0x20636f6c2e0a3b36\n"
".quad 0x3120303036332032,0x2e6e722e616d660a,0x3932662520323366,0x3033316625202c31\n"
".quad 0x2c3032326625202c,0x0a3b303932662520,0x662e6e722e616d66,0x3239326625203233\n"
".quad 0x2c3135316625202c,0x3833364333663020,0x326625202c393345,0x2e616d660a3b3139\n"
".quad 0x25203233662e6e72,0x6625202c33393266,0x326625202c353631,0x39326625202c3831\n"
".quad 0x722e616d660a3b32,0x6625203233662e6e,0x316625202c343932,0x44336630202c3737\n"
".quad 0x202c424141414132,0x660a3b3339326625,0x33662e6e722e616d,0x2c35393266252032\n"
".quad 0x202c343732662520,0x25202c3331326625,0x6c2e0a3b34393266,0x303633203220636f\n"
".quad 0x2e616d660a312030,0x25203233662e6e72,0x6625202c36393266,0x336630202c373931\n"
".quad 0x2c30303030303045,0x0a3b353932662520,0x662e6e722e616d66,0x3739326625203233\n"
".quad 0x2c3530326625202c,0x3030304533663020,0x326625202c303030,0x2e6275730a3b3639\n"
".quad 0x3932662520323366,0x2c30316625202c38,0x0a3b373932662520,0x662e6e722e616d66\n"
".quad 0x3939326625203233,0x2c3532326625202c,0x3030383043663020,0x326625202c303030\n"
".quad 0x2e616d660a3b3133,0x25203233662e6e72,0x6625202c30303366,0x326625202c383332\n"
".quad 0x39326625202c3032,0x20636f6c2e0a3b39,0x3120303036332032,0x3233662e6464610a\n"
".quad 0x202c313033662520,0x25202c3030336625,0x656e0a3b30343266,0x6625203233662e67\n"
".quad 0x316625202c323033,0x2e616d660a3b3536,0x25203233662e6e72,0x6625202c33303366\n"
".quad 0x326625202c323033,0x30336625202c3831,0x20636f6c2e0a3b31,0x3120303036332032\n"
".quad 0x2e6e722e616d660a,0x3033662520323366,0x3737316625202c34,0x413244336630202c\n"
".quad 0x6625202c42414141,0x6464610a3b363132,0x336625203233662e,0x30336625202c3530\n"
".quad 0x3430336625202c33,0x33662e6275730a3b,0x2c36303366252032,0x25202c3131662520\n"
".quad 0x6d660a3b35303366,0x3233662e6e722e61,0x202c373033662520,0x30202c3530316625\n"
".quad 0x4343434343433366,0x3635326625202c44,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x33316625202c3830,0x3032326625202c30,0x3b3730336625202c,0x2e6e722e616d660a\n"
".quad 0x3033662520323366,0x3135316625202c39,0x333643336630202c,0x6625202c39334538\n"
".quad 0x616d660a3b383033,0x203233662e6e722e,0x25202c3031336625,0x6625202c32303366\n"
".quad 0x336625202c383132,0x2e67656e0a3b3930,0x3133662520323366,0x3737316625202c31\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x31336625202c3231,0x3731326625202c31\n"
".quad 0x3b3031336625202c,0x203220636f6c2e0a,0x660a312030303633,0x33662e6e722e616d\n"
".quad 0x2c33313366252032,0x202c313931662520,0x25202c3431326625,0x6d660a3b32313366\n"
".quad 0x3233662e6e722e61,0x202c343133662520,0x25202c3637326625,0x6625202c35313266\n"
".quad 0x6f6c2e0a3b333133,0x3030363320322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x326625202c353133,0x45336630202c3231,0x202c303030303030,0x730a3b3431336625\n"
".quad 0x25203233662e6275,0x6625202c36313366,0x31336625202c3231,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x316625202c373133,0x43336630202c3230,0x202c444343434343\n"
".quad 0x660a3b3535326625,0x33662e6e722e616d,0x2c38313366252032,0x202c353031662520\n"
".quad 0x4343434343336630,0x31336625202c4443,0x722e616d660a3b37,0x6625203233662e6e\n"
".quad 0x326625202c393133,0x30436630202c3132,0x202c303030303030,0x660a3b3831336625\n"
".quad 0x33662e6e722e616d,0x2c30323366252032,0x202c393132662520,0x3030303030436630\n"
".quad 0x31336625202c3030,0x722e616d660a3b39,0x6625203233662e6e,0x316625202c313233\n"
".quad 0x45336630202c3738,0x202c303030303038,0x660a3b3032336625,0x33662e6e722e616d\n"
".quad 0x2c32323366252032,0x202c353032662520,0x3030303045336630,0x32336625202c3030\n"
".quad 0x662e67656e0a3b31,0x3332336625203233,0x3b3231326625202c,0x2e6e722e616d660a\n"
".quad 0x3233662520323366,0x3332336625202c34,0x2c3531326625202c,0x0a3b323233662520\n"
".quad 0x33203220636f6c2e,0x75730a3120303036,0x6625203233662e62,0x316625202c353233\n"
".quad 0x3432336625202c33,0x6e722e616d660a3b,0x336625203233662e,0x30316625202c3632\n"
".quad 0x4343336630202c35,0x25202c4443434343,0x6d660a3b38363266,0x3233662e6e722e61\n"
".quad 0x202c373233662520,0x25202c3033316625,0x6625202c30323266,0x616d660a3b363233\n"
".quad 0x203233662e6e722e,0x25202c3832336625,0x6630202c31353166,0x3933453833364333\n"
".quad 0x3b3732336625202c,0x2e6e722e616d660a,0x3233662520323366,0x3230336625202c39\n"
".quad 0x2c3831326625202c,0x0a3b383233662520,0x662e6e722e616d66,0x3033336625203233\n"
".quad 0x2c3131336625202c,0x202c373132662520,0x6e0a3b3932336625,0x25203233662e6765\n"
".quad 0x6625202c31333366,0x616d660a3b313931,0x203233662e6e722e,0x25202c3233336625\n"
".quad 0x6625202c31333366,0x336625202c343132,0x636f6c2e0a3b3033,0x2030303633203220\n"
".quad 0x6e722e616d660a31,0x336625203233662e,0x39316625202c3333,0x3045336630202c37\n"
".quad 0x25202c3030303030,0x6d660a3b32333366,0x3233662e6e722e61,0x202c343333662520\n"
".quad 0x30202c3231326625,0x3030303030453366,0x3333336625202c30,0x33662e6275730a3b\n"
".quad 0x2c35333366252032,0x25202c3431662520,0x6d660a3b34333366,0x3233662e6e722e61\n"
".quad 0x202c363333662520,0x25202c3038326625,0x6625202c33323266,0x6f6c2e0a3b353532\n"
".quad 0x3030363320322063,0x722e616d660a3120,0x6625203233662e6e,0x316625202c373333\n"
".quad 0x43336630202c3530,0x202c444343434343,0x660a3b3633336625,0x33662e6e722e616d\n"
".quad 0x2c38333366252032,0x202c313232662520,0x3030303030436630,0x33336625202c3030\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x326625202c393333,0x30436630202c3931\n"
".quad 0x202c303030303030,0x6e0a3b3833336625,0x25203233662e6765,0x6625202c30343366\n"
".quad 0x616d660a3b373831,0x203233662e6e722e,0x25202c3134336625,0x6625202c30343366\n"
".quad 0x336625202c333132,0x2e616d660a3b3933,0x25203233662e6e72,0x6625202c32343366\n"
".quad 0x326625202c343632,0x34336625202c3531,0x722e616d660a3b31,0x6625203233662e6e\n"
".quad 0x336625202c333433,0x31326625202c3332,0x3234336625202c35,0x3220636f6c2e0a3b\n"
".quad 0x0a31203030363320,0x203233662e627573,0x25202c3434336625,0x336625202c353166\n"
".quad 0x2e616d660a3b3334,0x25203233662e6e72,0x6625202c35343366,0x346630202c353232\n"
".quad 0x2c30303030303830,0x0a3b313332662520,0x662e6e722e616d66,0x3634336625203233\n"
".quad 0x2c3833326625202c,0x202c303232662520,0x2e0a3b3534336625,0x3633203220636f6c\n"
".quad 0x6464610a31203030,0x336625203233662e,0x34336625202c3734,0x3034326625202c36\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x30336625202c3834,0x3831326625202c32\n"
".quad 0x3b3734336625202c,0x203220636f6c2e0a,0x610a312030303633,0x25203233662e6464\n"
".quad 0x6625202c39343366,0x336625202c383433,0x2e6275730a3b3430,0x3533662520323366\n"
".quad 0x2c36316625202c30,0x0a3b393433662520,0x203233662e67656e,0x25202c3135336625\n"
".quad 0x6d660a3b35303166,0x3233662e6e722e61,0x202c323533662520,0x25202c3135336625\n"
".quad 0x6625202c33323266,0x6f6c2e0a3b363532,0x3030363320322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x316625202c333533,0x32326625202c3033,0x3235336625202c30\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x35316625202c3435,0x3643336630202c31\n"
".quad 0x25202c3933453833,0x6d660a3b33353366,0x3233662e6e722e61,0x202c353533662520\n"
".quad 0x25202c3230336625,0x6625202c38313266,0x616d660a3b343533,0x203233662e6e722e\n"
".quad 0x25202c3635336625,0x6625202c31313366,0x336625202c373132,0x2e616d660a3b3535\n"
".quad 0x25203233662e6e72,0x6625202c37353366,0x326625202c313333,0x35336625202c3431\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x326625202c383533,0x31326625202c3637\n"
".quad 0x3735336625202c35,0x6e722e616d660a3b,0x336625203233662e,0x32336625202c3935\n"
".quad 0x3531326625202c33,0x3b3835336625202c,0x203220636f6c2e0a,0x730a312030303633\n"
".quad 0x25203233662e6275,0x6625202c30363366,0x35336625202c3731,0x722e616d660a3b39\n"
".quad 0x6625203233662e6e,0x336625202c313633,0x32326625202c3135,0x3731336625202c33\n"
".quad 0x3220636f6c2e0a3b,0x0a31203030363320,0x662e6e722e616d66,0x3236336625203233\n"
".quad 0x2c3132326625202c,0x3030303043663020,0x336625202c303030,0x2e616d660a3b3136\n"
".quad 0x25203233662e6e72,0x6625202c33363366,0x436630202c393132,0x2c30303030303030\n"
".quad 0x0a3b323633662520,0x662e6e722e616d66,0x3436336625203233,0x2c3034336625202c\n"
".quad 0x202c333132662520,0x2e0a3b3336336625,0x3633203220636f6c,0x616d660a31203030\n"
".quad 0x203233662e6e722e,0x25202c3536336625,0x6630202c35303266,0x3030303030304533\n"
".quad 0x3b3436336625202c,0x2e6e722e616d660a,0x3633662520323366,0x3231326625202c36\n"
".quad 0x303045336630202c,0x6625202c30303030,0x6275730a3b353633,0x336625203233662e\n"
".quad 0x38316625202c3736,0x3b3636336625202c,0x2e6e722e616d660a,0x3633662520323366\n"
".quad 0x3135336625202c38,0x2c3332326625202c,0x0a3b383632662520,0x33203220636f6c2e\n"
".quad 0x6d660a3120303036,0x3233662e6e722e61,0x202c393633662520,0x25202c3033316625\n"
".quad 0x6625202c30323266,0x616d660a3b383633,0x203233662e6e722e,0x25202c3037336625\n"
".quad 0x6630202c31353166,0x3933453833364333,0x3b3936336625202c,0x2e6e722e616d660a\n"
".quad 0x3733662520323366,0x3230336625202c31,0x2c3831326625202c,0x0a3b303733662520\n"
".quad 0x662e6e722e616d66,0x3237336625203233,0x2c3131336625202c,0x202c373132662520\n"
".quad 0x2e0a3b3137336625,0x3633203220636f6c,0x616d660a31203030,0x203233662e6e722e\n"
".quad 0x25202c3337336625,0x6625202c31393166,0x336625202c343132,0x2e616d660a3b3237\n"
".quad 0x25203233662e6e72,0x6625202c34373366,0x336630202c373931,0x2c30303030303045\n"
".quad 0x0a3b333733662520,0x662e6e722e616d66,0x3537336625203233,0x2c3332336625202c\n"
".quad 0x202c353132662520,0x2e0a3b3437336625,0x3633203220636f6c,0x6275730a31203030\n"
".quad 0x336625203233662e,0x39316625202c3637,0x3b3537336625202c,0x2e6e722e616d660a\n"
".quad 0x3733662520323366,0x3135336625202c37,0x2c3332326625202c,0x0a3b363333662520\n"
".quad 0x33203220636f6c2e,0x6d660a3120303036,0x3233662e6e722e61,0x202c383733662520\n"
".quad 0x30202c3132326625,0x3030303030304366,0x3737336625202c30,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x31326625202c3937,0x3030436630202c39,0x25202c3030303030\n"
".quad 0x6d660a3b38373366,0x3233662e6e722e61,0x202c303833662520,0x30202c3738316625\n"
".quad 0x3030303038453366,0x3937336625202c30,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x36326625202c3138,0x3531326625202c34,0x3b3038336625202c,0x203220636f6c2e0a\n"
".quad 0x660a312030303633,0x33662e6e722e616d,0x2c32383366252032,0x202c323132662520\n"
".quad 0x3030303045336630,0x38336625202c3030,0x662e6275730a3b31,0x3338336625203233\n"
".quad 0x202c30326625202c,0x6c0a3b3238336625,0x2e6d617261702e64,0x336c722520343675\n"
".quad 0x395a5f5b202c3937,0x4341425f645f524c,0x5f6d665f53665044,0x5d335f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x0a31203434353320,0x732e6f6c2e64616d,0x34316c7225203436\n"
".quad 0x31316c7225202c38,0x3937336c7225202c,0x0a3b356c7225202c,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c373733,0x41425f645f524c39,0x6d665f5366504443\n"
".quad 0x315f6d617261705f,0x2e617476630a3b5d,0x61626f6c672e6f74,0x7225203436752e6c\n"
".quad 0x7225202c3934316c,0x68730a3b3737336c,0x7225203436622e6c,0x7225202c3035316c\n"
".quad 0x3233202c3834316c,0x36732e7268730a3b,0x3135316c72252034,0x3035316c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x303633203220636f,0x2e6c68730a312034,0x316c722520343662\n"
".quad 0x316c7225202c3235,0x610a3b32202c3135,0x25203436732e6464,0x25202c3335316c72\n"
".quad 0x25202c3934316c72,0x730a3b3235316c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3335316c,0x64610a3b39323266,0x7225203436732e64,0x7225202c3435316c\n"
".quad 0x393034202c31316c,0x20636f6c2e0a3b36,0x3120393735332032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3535,0x336c7225202c3435,0x356c7225202c3937\n"
".quad 0x36622e6c68730a3b,0x3635316c72252034,0x3535316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3735316c,0x3233202c3635316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203937353320,0x203436622e6c6873,0x202c3835316c7225,0x202c3735316c7225\n"
".quad 0x732e6464610a3b32,0x35316c7225203436,0x34316c7225202c39,0x35316c7225202c39\n"
".quad 0x20636f6c2e0a3b38,0x3120353036332032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3935316c7225,0x0a3b363332662520,0x203436732e646461,0x202c3036316c7225\n"
".quad 0x38202c31316c7225,0x6f6c2e0a3b323931,0x3038353320322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3136316c,0x7225202c3036316c,0x7225202c3937336c\n"
".quad 0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3236,0x0a3b3233202c3136\n"
".quad 0x203436732e726873,0x202c3336316c7225,0x202c3236316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2030383533203220,0x36622e6c68730a31,0x3436316c72252034,0x3336316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c353631,0x6c7225202c393431\n"
".quad 0x6f6c2e0a3b343631,0x3630363320322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3536316c72255b20,0x3434326625202c5d,0x36732e6464610a3b,0x3636316c72252034\n"
".quad 0x2c31316c7225202c,0x0a3b383832323120,0x33203220636f6c2e,0x616d0a3120313835\n"
".quad 0x3436732e6f6c2e64,0x2c3736316c722520,0x2c3636316c722520,0x2c3937336c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3836316c72,0x33202c3736316c72\n"
".quad 0x732e7268730a3b32,0x36316c7225203436,0x36316c7225202c39,0x2e0a3b3233202c38\n"
".quad 0x3533203220636f6c,0x6c68730a31203138,0x6c7225203436622e,0x6c7225202c303731\n"
".quad 0x0a3b32202c393631,0x203436732e646461,0x202c3137316c7225,0x202c3934316c7225\n"
".quad 0x0a3b3037316c7225,0x33203220636f6c2e,0x74730a3120373036,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d313731,0x6464610a3b383432,0x6c7225203436732e\n"
".quad 0x6c7225202c323731,0x38333631202c3131,0x20636f6c2e0a3b34,0x3120323835332032\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3337,0x336c7225202c3237\n"
".quad 0x356c7225202c3937,0x36622e6c68730a3b,0x3437316c72252034,0x3337316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3537316c,0x3233202c3437316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203238353320,0x203436622e6c6873,0x202c3637316c7225\n"
".quad 0x202c3537316c7225,0x732e6464610a3b32,0x37316c7225203436,0x34316c7225202c37\n"
".quad 0x37316c7225202c39,0x20636f6c2e0a3b36,0x3120383036332032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3737316c7225,0x0a3b343532662520,0x203436732e646461\n"
".quad 0x202c3837316c7225,0x32202c31316c7225,0x6c2e0a3b30383430,0x383533203220636f\n"
".quad 0x2e64616d0a312033,0x25203436732e6f6c,0x25202c3937316c72,0x25202c3837316c72\n"
".quad 0x25202c3937336c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c303831\n"
".quad 0x3b3233202c393731,0x3436732e7268730a,0x2c3138316c722520,0x2c3038316c722520\n"
".quad 0x6f6c2e0a3b323320,0x3338353320322063,0x622e6c68730a3120,0x38316c7225203436\n"
".quad 0x38316c7225202c32,0x64610a3b32202c31,0x7225203436732e64,0x7225202c3338316c\n"
".quad 0x7225202c3934316c,0x6c2e0a3b3238316c,0x303633203220636f,0x672e74730a312039\n"
".quad 0x33662e6c61626f6c,0x38316c72255b2032,0x36326625202c5d33,0x732e6464610a3b36\n"
".quad 0x38316c7225203436,0x31316c7225202c34,0x3b3637353432202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312034383533,0x36732e6f6c2e6461,0x3538316c72252034,0x3438316c7225202c\n"
".quad 0x3937336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3638316c7225\n"
".quad 0x202c3538316c7225,0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3738\n"
".quad 0x0a3b3233202c3638,0x33203220636f6c2e,0x68730a3120343835,0x7225203436622e6c\n"
".quad 0x7225202c3838316c,0x3b32202c3738316c,0x3436732e6464610a,0x2c3938316c722520\n"
".quad 0x2c3934316c722520,0x3b3838316c722520,0x203220636f6c2e0a,0x730a312030313633\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3938316c,0x64610a3b39373266\n"
".quad 0x7225203436732e64,0x7225202c3039316c,0x363832202c31316c,0x636f6c2e0a3b3237\n"
".quad 0x2035383533203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c313931\n"
".quad 0x6c7225202c303931,0x6c7225202c393733,0x622e6c68730a3b35,0x39316c7225203436\n"
".quad 0x39316c7225202c32,0x730a3b3233202c31,0x25203436732e7268,0x25202c3339316c72\n"
".quad 0x33202c3239316c72,0x20636f6c2e0a3b32,0x3120353835332032,0x3436622e6c68730a\n"
".quad 0x2c3439316c722520,0x2c3339316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x316c7225202c3539,0x316c7225202c3934,0x636f6c2e0a3b3439,0x2031313633203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3539316c72255b,0x3b3938326625202c\n"
".quad 0x3436732e6464610a,0x2c3639316c722520,0x202c31316c722520,0x2e0a3b3836373233\n"
".quad 0x3533203220636f6c,0x64616d0a31203638,0x203436732e6f6c2e,0x202c3739316c7225\n"
".quad 0x202c3639316c7225,0x202c3937336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3839316c,0x3233202c3739316c,0x36732e7268730a3b,0x3939316c72252034\n"
".quad 0x3839316c7225202c,0x6c2e0a3b3233202c,0x383533203220636f,0x2e6c68730a312036\n"
".quad 0x326c722520343662,0x316c7225202c3030,0x610a3b32202c3939,0x25203436732e6464\n"
".quad 0x25202c3130326c72,0x25202c3934316c72,0x2e0a3b3030326c72,0x3633203220636f6c\n"
".quad 0x2e74730a31203231,0x662e6c61626f6c67,0x326c72255b203233,0x326625202c5d3130\n"
".quad 0x2e6464610a3b3839,0x326c722520343673,0x316c7225202c3230,0x3436383633202c31\n"
".quad 0x3220636f6c2e0a3b,0x0a31203738353320,0x732e6f6c2e64616d,0x30326c7225203436\n"
".quad 0x30326c7225202c33,0x37336c7225202c32,0x3b356c7225202c39,0x3436622e6c68730a\n"
".quad 0x2c3430326c722520,0x2c3330326c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c353032,0x3b3233202c343032,0x203220636f6c2e0a,0x730a312037383533\n"
".quad 0x25203436622e6c68,0x25202c3630326c72,0x32202c3530326c72,0x36732e6464610a3b\n"
".quad 0x3730326c72252034,0x3934316c7225202c,0x3630326c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203331363320,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3730326c72\n"
".quad 0x610a3b3630336625,0x25203436732e6464,0x25202c3830326c72,0x3034202c31316c72\n"
".quad 0x6f6c2e0a3b303639,0x3838353320322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3930326c,0x7225202c3830326c,0x7225202c3937336c,0x2e6c68730a3b356c\n"
".quad 0x326c722520343662,0x326c7225202c3031,0x0a3b3233202c3930,0x203436732e726873\n"
".quad 0x202c3131326c7225,0x202c3031326c7225,0x636f6c2e0a3b3233,0x2038383533203220\n"
".quad 0x36622e6c68730a31,0x3231326c72252034,0x3131326c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c333132,0x6c7225202c393431,0x6f6c2e0a3b323132\n"
".quad 0x3431363320322063,0x6c672e74730a3120,0x3233662e6c61626f,0x3331326c72255b20\n"
".quad 0x3631336625202c5d,0x36732e6464610a3b,0x3431326c72252034,0x2c31316c7225202c\n"
".quad 0x0a3b363530353420,0x33203220636f6c2e,0x616d0a3120393835,0x3436732e6f6c2e64\n"
".quad 0x2c3531326c722520,0x2c3431326c722520,0x2c3937336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3631326c72,0x33202c3531326c72,0x732e7268730a3b32\n"
".quad 0x31326c7225203436,0x31326c7225202c37,0x2e0a3b3233202c36,0x3533203220636f6c\n"
".quad 0x6c68730a31203938,0x6c7225203436622e,0x6c7225202c383132,0x0a3b32202c373132\n"
".quad 0x203436732e646461,0x202c3931326c7225,0x202c3934316c7225,0x0a3b3831326c7225\n"
".quad 0x33203220636f6c2e,0x74730a3120353136,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d393132,0x6464610a3b353233,0x6c7225203436732e,0x6c7225202c303232\n"
".quad 0x35313934202c3131,0x20636f6c2e0a3b32,0x3120303935332032,0x2e6f6c2e64616d0a\n"
".quad 0x326c722520343673,0x326c7225202c3132,0x336c7225202c3032,0x356c7225202c3937\n"
".quad 0x36622e6c68730a3b,0x3232326c72252034,0x3132326c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3332326c,0x3233202c3232326c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203039353320,0x203436622e6c6873,0x202c3432326c7225,0x202c3332326c7225\n"
".quad 0x732e6464610a3b32,0x32326c7225203436,0x34316c7225202c35,0x32326c7225202c39\n"
".quad 0x20636f6c2e0a3b34,0x3120363136332032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3532326c7225,0x0a3b353333662520,0x203436732e646461,0x202c3632326c7225\n"
".quad 0x35202c31316c7225,0x6c2e0a3b38343233,0x393533203220636f,0x2e64616d0a312031\n"
".quad 0x25203436732e6f6c,0x25202c3732326c72,0x25202c3632326c72,0x25202c3937336c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c383232,0x3b3233202c373232\n"
".quad 0x3436732e7268730a,0x2c3932326c722520,0x2c3832326c722520,0x6f6c2e0a3b323320\n"
".quad 0x3139353320322063,0x622e6c68730a3120,0x33326c7225203436,0x32326c7225202c30\n"
".quad 0x64610a3b32202c39,0x7225203436732e64,0x7225202c3133326c,0x7225202c3934316c\n"
".quad 0x6c2e0a3b3033326c,0x313633203220636f,0x672e74730a312037,0x33662e6c61626f6c\n"
".quad 0x33326c72255b2032,0x34336625202c5d31,0x732e6464610a3b34,0x33326c7225203436\n"
".quad 0x31316c7225202c32,0x3b3434333735202c,0x203220636f6c2e0a,0x6d0a312032393533\n"
".quad 0x36732e6f6c2e6461,0x3333326c72252034,0x3233326c7225202c,0x3937336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3433326c7225,0x202c3333326c7225\n"
".quad 0x2e7268730a3b3233,0x326c722520343673,0x326c7225202c3533,0x0a3b3233202c3433\n"
".quad 0x33203220636f6c2e,0x68730a3120323935,0x7225203436622e6c,0x7225202c3633326c\n"
".quad 0x3b32202c3533326c,0x3436732e6464610a,0x2c3733326c722520,0x2c3934316c722520\n"
".quad 0x3b3633326c722520,0x203220636f6c2e0a,0x730a312038313633,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3733326c,0x64610a3b30353366,0x7225203436732e64\n"
".quad 0x7225202c3833326c,0x343136202c31316c,0x636f6c2e0a3b3034,0x2033393533203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c393332,0x6c7225202c383332\n"
".quad 0x6c7225202c393733,0x622e6c68730a3b35,0x34326c7225203436,0x33326c7225202c30\n"
".quad 0x730a3b3233202c39,0x25203436732e7268,0x25202c3134326c72,0x33202c3034326c72\n"
".quad 0x20636f6c2e0a3b32,0x3120333935332032,0x3436622e6c68730a,0x2c3234326c722520\n"
".quad 0x2c3134326c722520,0x2e6464610a3b3220,0x326c722520343673,0x316c7225202c3334\n"
".quad 0x326c7225202c3934,0x636f6c2e0a3b3234,0x2039313633203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x5d3334326c72255b,0x3b3036336625202c,0x3436732e6464610a\n"
".quad 0x2c3434326c722520,0x202c31316c722520,0x2e0a3b3633353536,0x3533203220636f6c\n"
".quad 0x64616d0a31203439,0x203436732e6f6c2e,0x202c3534326c7225,0x202c3434326c7225\n"
".quad 0x202c3937336c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3634326c\n"
".quad 0x3233202c3534326c,0x36732e7268730a3b,0x3734326c72252034,0x3634326c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x393533203220636f,0x2e6c68730a312034,0x326c722520343662\n"
".quad 0x326c7225202c3834,0x610a3b32202c3734,0x25203436732e6464,0x25202c3934326c72\n"
".quad 0x25202c3934316c72,0x2e0a3b3834326c72,0x3633203220636f6c,0x2e74730a31203032\n"
".quad 0x662e6c61626f6c67,0x326c72255b203233,0x336625202c5d3934,0x2e6464610a3b3736\n"
".quad 0x326c722520343673,0x316c7225202c3035,0x3233363936202c31,0x3220636f6c2e0a3b\n"
".quad 0x0a31203539353320,0x732e6f6c2e64616d,0x35326c7225203436,0x35326c7225202c31\n"
".quad 0x37336c7225202c30,0x3b356c7225202c39,0x3436622e6c68730a,0x2c3235326c722520\n"
".quad 0x2c3135326c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c333532\n"
".quad 0x3b3233202c323532,0x203220636f6c2e0a,0x730a312035393533,0x25203436622e6c68\n"
".quad 0x25202c3435326c72,0x32202c3335326c72,0x36732e6464610a3b,0x3535326c72252034\n"
".quad 0x3934316c7225202c,0x3435326c7225202c,0x3220636f6c2e0a3b,0x0a31203132363320\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3535326c72,0x610a3b3637336625\n"
".quad 0x25203436732e6464,0x25202c3635326c72,0x3337202c31316c72,0x6f6c2e0a3b383237\n"
".quad 0x3639353320322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3735326c\n"
".quad 0x7225202c3635326c,0x7225202c3937336c,0x2e6c68730a3b356c,0x326c722520343662\n"
".quad 0x326c7225202c3835,0x0a3b3233202c3735,0x203436732e726873,0x202c3935326c7225\n"
".quad 0x202c3835326c7225,0x636f6c2e0a3b3233,0x2036393533203220,0x36622e6c68730a31\n"
".quad 0x3036326c72252034,0x3935326c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c313632,0x6c7225202c393431,0x6f6c2e0a3b303632,0x3232363320322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3136326c72255b20,0x3338336625202c5d\n"
".quad 0x3220636f6c2e0a3b,0x0a32203532363320,0x42420a0a3b746572,0x646c0a3a365f3932\n"
".quad 0x752e6d617261702e,0x37336c7225203436,0x4c395a5f5b202c38,0x444341425f645f52\n"
".quad 0x705f6d665f536650,0x3b5d335f6d617261,0x203220636f6c2e0a,0x6d0a312039373533\n"
".quad 0x36732e6f6c2e6461,0x3736326c72252034,0x2c37316c7225202c,0x2c3837336c722520\n"
".quad 0x6c0a3b356c722520,0x2e6d617261702e64,0x336c722520343675,0x395a5f5b202c3637\n"
".quad 0x4341425f645f524c,0x5f6d665f53665044,0x5d315f6d61726170,0x742e617476630a3b\n"
".quad 0x6c61626f6c672e6f,0x6c7225203436752e,0x6c7225202c383632,0x6c68730a3b363733\n"
".quad 0x6c7225203436622e,0x6c7225202c393632,0x3b3233202c373632,0x3436732e7268730a\n"
".quad 0x2c3037326c722520,0x2c3936326c722520,0x6f6c2e0a3b323320,0x3937353320322063\n"
".quad 0x622e6c68730a3120,0x37326c7225203436,0x37326c7225202c31,0x64610a3b32202c30\n"
".quad 0x7225203436732e64,0x7225202c3237326c,0x7225202c3836326c,0x74730a3b3137326c\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d323732,0x732e6464610a3b34\n"
".quad 0x37326c7225203436,0x36316c7225202c33,0x0a3b32393138202c,0x33203220636f6c2e\n"
".quad 0x616d0a3120303835,0x3436732e6f6c2e64,0x2c3437326c722520,0x2c3337326c722520\n"
".quad 0x2c3837336c722520,0x730a3b356c722520,0x25203436622e6c68,0x25202c3537326c72\n"
".quad 0x33202c3437326c72,0x732e7268730a3b32,0x37326c7225203436,0x37326c7225202c36\n"
".quad 0x2e0a3b3233202c35,0x3533203220636f6c,0x6c68730a31203038,0x6c7225203436622e\n"
".quad 0x6c7225202c373732,0x0a3b32202c363732,0x203436732e646461,0x202c3837326c7225\n"
".quad 0x202c3836326c7225,0x0a3b3737326c7225,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3837326c72,0x6f6c2e0a3b386625,0x3138353320322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3038326c,0x6c7225202c35326c,0x6c7225202c383733\n"
".quad 0x622e6c68730a3b35,0x38326c7225203436,0x38326c7225202c31,0x730a3b3233202c30\n"
".quad 0x25203436732e7268,0x25202c3238326c72,0x33202c3138326c72,0x20636f6c2e0a3b32\n"
".quad 0x3120313835332032,0x3436622e6c68730a,0x2c3338326c722520,0x2c3238326c722520\n"
".quad 0x2e6464610a3b3220,0x326c722520343673,0x326c7225202c3438,0x326c7225202c3836\n"
".quad 0x672e74730a3b3338,0x33662e6c61626f6c,0x38326c72255b2032,0x3b336625202c5d34\n"
".quad 0x3436732e6464610a,0x2c3538326c722520,0x202c36316c722520,0x2e0a3b3438333631\n"
".quad 0x3533203220636f6c,0x64616d0a31203238,0x203436732e6f6c2e,0x202c3638326c7225\n"
".quad 0x202c3538326c7225,0x202c3837336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3738326c,0x3233202c3638326c,0x36732e7268730a3b,0x3838326c72252034\n"
".quad 0x3738326c7225202c,0x6c2e0a3b3233202c,0x383533203220636f,0x2e6c68730a312032\n"
".quad 0x326c722520343662,0x326c7225202c3938,0x610a3b32202c3838,0x25203436732e6464\n"
".quad 0x25202c3039326c72,0x25202c3836326c72,0x730a3b3938326c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3039326c,0x2e6464610a3b3566,0x326c722520343673\n"
".quad 0x316c7225202c3139,0x3038343032202c36,0x3220636f6c2e0a3b,0x0a31203338353320\n"
".quad 0x732e6f6c2e64616d,0x39326c7225203436,0x39326c7225202c32,0x37336c7225202c31\n"
".quad 0x3b356c7225202c38,0x3436622e6c68730a,0x2c3339326c722520,0x2c3239326c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c343932,0x3b3233202c333932\n"
".quad 0x203220636f6c2e0a,0x730a312033383533,0x25203436622e6c68,0x25202c3539326c72\n"
".quad 0x32202c3439326c72,0x36732e6464610a3b,0x3639326c72252034,0x3836326c7225202c\n"
".quad 0x3539326c7225202c,0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3639326c72255b\n"
".quad 0x610a3b396625202c,0x25203436732e6464,0x25202c3739326c72,0x3432202c36316c72\n"
".quad 0x6f6c2e0a3b363735,0x3438353320322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3839326c,0x7225202c3739326c,0x7225202c3837336c,0x2e6c68730a3b356c\n"
".quad 0x326c722520343662,0x326c7225202c3939,0x0a3b3233202c3839,0x203436732e726873\n"
".quad 0x202c3030336c7225,0x202c3939326c7225,0x636f6c2e0a3b3233,0x2034383533203220\n"
".quad 0x36622e6c68730a31,0x3130336c72252034,0x3030336c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c323033,0x6c7225202c383632,0x2e74730a3b313033\n"
".quad 0x662e6c61626f6c67,0x336c72255b203233,0x316625202c5d3230,0x732e6464610a3b30\n"
".quad 0x30336c7225203436,0x36316c7225202c33,0x3b3237363832202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312035383533,0x36732e6f6c2e6461,0x3430336c72252034,0x3330336c7225202c\n"
".quad 0x3837336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3530336c7225\n"
".quad 0x202c3430336c7225,0x2e7268730a3b3233,0x336c722520343673,0x336c7225202c3630\n"
".quad 0x0a3b3233202c3530,0x33203220636f6c2e,0x68730a3120353835,0x7225203436622e6c\n"
".quad 0x7225202c3730336c,0x3b32202c3630336c,0x3436732e6464610a,0x2c3830336c722520\n"
".quad 0x2c3836326c722520,0x3b3730336c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3830336c7225,0x64610a3b36662520,0x7225203436732e64,0x7225202c3930336c\n"
".quad 0x373233202c36316c,0x636f6c2e0a3b3836,0x2036383533203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c303133,0x6c7225202c393033,0x6c7225202c383733\n"
".quad 0x622e6c68730a3b35,0x31336c7225203436,0x31336c7225202c31,0x730a3b3233202c30\n"
".quad 0x25203436732e7268,0x25202c3231336c72,0x33202c3131336c72,0x20636f6c2e0a3b32\n"
".quad 0x3120363835332032,0x3436622e6c68730a,0x2c3331336c722520,0x2c3231336c722520\n"
".quad 0x2e6464610a3b3220,0x336c722520343673,0x326c7225202c3431,0x336c7225202c3836\n"
".quad 0x672e74730a3b3331,0x33662e6c61626f6c,0x31336c72255b2032,0x3b376625202c5d34\n"
".quad 0x3436732e6464610a,0x2c3531336c722520,0x202c36316c722520,0x2e0a3b3436383633\n"
".quad 0x3533203220636f6c,0x64616d0a31203738,0x203436732e6f6c2e,0x202c3631336c7225\n"
".quad 0x202c3531336c7225,0x202c3837336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3731336c,0x3233202c3631336c,0x36732e7268730a3b,0x3831336c72252034\n"
".quad 0x3731336c7225202c,0x6c2e0a3b3233202c,0x383533203220636f,0x2e6c68730a312037\n"
".quad 0x336c722520343662,0x336c7225202c3931,0x610a3b32202c3831,0x25203436732e6464\n"
".quad 0x25202c3032336c72,0x25202c3836326c72,0x730a3b3931336c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3032336c,0x6464610a3b363166,0x6c7225203436732e\n"
".quad 0x6c7225202c313233,0x36393034202c3631,0x20636f6c2e0a3b30,0x3120383835332032\n"
".quad 0x2e6f6c2e64616d0a,0x336c722520343673,0x336c7225202c3232,0x336c7225202c3132\n"
".quad 0x356c7225202c3837,0x36622e6c68730a3b,0x3332336c72252034,0x3232336c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3432336c,0x3233202c3332336c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203838353320,0x203436622e6c6873,0x202c3532336c7225\n"
".quad 0x202c3432336c7225,0x732e6464610a3b32,0x32336c7225203436,0x36326c7225202c36\n"
".quad 0x32336c7225202c38,0x6c672e74730a3b35,0x3233662e6c61626f,0x3632336c72255b20\n"
".quad 0x3b39316625202c5d,0x3436732e6464610a,0x2c3732336c722520,0x202c36316c722520\n"
".quad 0x2e0a3b3635303534,0x3533203220636f6c,0x64616d0a31203938,0x203436732e6f6c2e\n"
".quad 0x202c3832336c7225,0x202c3732336c7225,0x202c3837336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3932336c,0x3233202c3832336c,0x36732e7268730a3b\n"
".quad 0x3033336c72252034,0x3932336c7225202c,0x6c2e0a3b3233202c,0x383533203220636f\n"
".quad 0x2e6c68730a312039,0x336c722520343662,0x336c7225202c3133,0x610a3b32202c3033\n"
".quad 0x25203436732e6464,0x25202c3233336c72,0x25202c3836326c72,0x730a3b3133336c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3233336c,0x6464610a3b303266\n"
".quad 0x6c7225203436732e,0x6c7225202c333333,0x35313934202c3631,0x20636f6c2e0a3b32\n"
".quad 0x3120303935332032,0x2e6f6c2e64616d0a,0x336c722520343673,0x336c7225202c3433\n"
".quad 0x336c7225202c3333,0x356c7225202c3837,0x36622e6c68730a3b,0x3533336c72252034\n"
".quad 0x3433336c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3633336c\n"
".quad 0x3233202c3533336c,0x3220636f6c2e0a3b,0x0a31203039353320,0x203436622e6c6873\n"
".quad 0x202c3733336c7225,0x202c3633336c7225,0x732e6464610a3b32,0x33336c7225203436\n"
".quad 0x36326c7225202c38,0x33336c7225202c38,0x6c672e74730a3b37,0x3233662e6c61626f\n"
".quad 0x3833336c72255b20,0x3b37316625202c5d,0x3436732e6464610a,0x2c3933336c722520\n"
".quad 0x202c36316c722520,0x2e0a3b3834323335,0x3533203220636f6c,0x64616d0a31203139\n"
".quad 0x203436732e6f6c2e,0x202c3034336c7225,0x202c3933336c7225,0x202c3837336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3134336c,0x3233202c3034336c\n"
".quad 0x36732e7268730a3b,0x3234336c72252034,0x3134336c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x393533203220636f,0x2e6c68730a312031,0x336c722520343662,0x336c7225202c3334\n"
".quad 0x610a3b32202c3234,0x25203436732e6464,0x25202c3434336c72,0x25202c3836326c72\n"
".quad 0x730a3b3334336c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3434336c\n"
".quad 0x6464610a3b383166,0x6c7225203436732e,0x6c7225202c353433,0x34333735202c3631\n"
".quad 0x20636f6c2e0a3b34,0x3120323935332032,0x2e6f6c2e64616d0a,0x336c722520343673\n"
".quad 0x336c7225202c3634,0x336c7225202c3534,0x356c7225202c3837,0x36622e6c68730a3b\n"
".quad 0x3734336c72252034,0x3634336c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3834336c,0x3233202c3734336c,0x3220636f6c2e0a3b,0x0a31203239353320\n"
".quad 0x203436622e6c6873,0x202c3934336c7225,0x202c3834336c7225,0x732e6464610a3b32\n"
".quad 0x35336c7225203436,0x36326c7225202c30,0x34336c7225202c38,0x6c672e74730a3b39\n"
".quad 0x3233662e6c61626f,0x3035336c72255b20,0x3b31316625202c5d,0x3436732e6464610a\n"
".quad 0x2c3135336c722520,0x202c36316c722520,0x2e0a3b3034343136,0x3533203220636f6c\n"
".quad 0x64616d0a31203339,0x203436732e6f6c2e,0x202c3235336c7225,0x202c3135336c7225\n"
".quad 0x202c3837336c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3335336c\n"
".quad 0x3233202c3235336c,0x36732e7268730a3b,0x3435336c72252034,0x3335336c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x393533203220636f,0x2e6c68730a312033,0x336c722520343662\n"
".quad 0x336c7225202c3535,0x610a3b32202c3435,0x25203436732e6464,0x25202c3635336c72\n"
".quad 0x25202c3836326c72,0x730a3b3535336c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3635336c,0x6464610a3b343166,0x6c7225203436732e,0x6c7225202c373533\n"
".quad 0x33353536202c3631,0x20636f6c2e0a3b36,0x3120343935332032,0x2e6f6c2e64616d0a\n"
".quad 0x336c722520343673,0x336c7225202c3835,0x336c7225202c3735,0x356c7225202c3837\n"
".quad 0x36622e6c68730a3b,0x3935336c72252034,0x3835336c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3036336c,0x3233202c3935336c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203439353320,0x203436622e6c6873,0x202c3136336c7225,0x202c3036336c7225\n"
".quad 0x732e6464610a3b32,0x36336c7225203436,0x36326c7225202c32,0x36336c7225202c38\n"
".quad 0x6c672e74730a3b31,0x3233662e6c61626f,0x3236336c72255b20,0x3b35316625202c5d\n"
".quad 0x3436732e6464610a,0x2c3336336c722520,0x202c36316c722520,0x2e0a3b3233363936\n"
".quad 0x3533203220636f6c,0x64616d0a31203539,0x203436732e6f6c2e,0x202c3436336c7225\n"
".quad 0x202c3336336c7225,0x202c3837336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3536336c,0x3233202c3436336c,0x36732e7268730a3b,0x3636336c72252034\n"
".quad 0x3536336c7225202c,0x6c2e0a3b3233202c,0x393533203220636f,0x2e6c68730a312035\n"
".quad 0x336c722520343662,0x336c7225202c3736,0x610a3b32202c3636,0x25203436732e6464\n"
".quad 0x25202c3836336c72,0x25202c3836326c72,0x730a3b3736336c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3836336c,0x6464610a3b323166,0x6c7225203436732e\n"
".quad 0x6c7225202c393633,0x32373337202c3631,0x20636f6c2e0a3b38,0x3120363935332032\n"
".quad 0x2e6f6c2e64616d0a,0x336c722520343673,0x336c7225202c3037,0x336c7225202c3936\n"
".quad 0x356c7225202c3837,0x36622e6c68730a3b,0x3137336c72252034,0x3037336c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3237336c,0x3233202c3137336c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203639353320,0x203436622e6c6873,0x202c3337336c7225\n"
".quad 0x202c3237336c7225,0x732e6464610a3b32,0x37336c7225203436,0x36326c7225202c34\n"
".quad 0x37336c7225202c38,0x6c672e74730a3b33,0x3233662e6c61626f,0x3437336c72255b20\n"
".quad 0x3b33316625202c5d,0x375f393242420a0a,0x3220636f6c2e0a3a,0x0a32203532363320\n"
".quad 0x0a0a7d0a3b746572,0x5f207972746e652e,0x425f645f524c395a,0x665f536650434441\n"
".quad 0x7261702e0a28666d,0x203436752e206d61,0x5f645f524c395a5f,0x5f53665043444142\n"
".quad 0x617261705f666d66,0x61702e0a2c305f6d,0x3436752e206d6172,0x645f524c395a5f20\n"
".quad 0x536650434441425f,0x7261705f666d665f,0x702e0a2c315f6d61,0x33662e206d617261\n"
".quad 0x5f524c395a5f2032,0x6650434441425f64,0x61705f666d665f53,0x2e0a2c325f6d6172\n"
".quad 0x752e206d61726170,0x524c395a5f203436,0x50434441425f645f,0x705f666d665f5366\n"
".quad 0x0a2c335f6d617261,0x2e206d617261702e,0x4c395a5f20323366,0x434441425f645f52\n"
".quad 0x5f666d665f536650,0x0a345f6d61726170,0x6765722e0a7b0a29,0x6625203233662e20\n"
".quad 0x2e0a3b3e3432383c,0x6572702e20676572,0x3e33313c70252064,0x2e206765722e0a3b\n"
".quad 0x313c722520323373,0x65722e0a3b3e3635,0x25203436732e2067,0x3b3e3430353c6c72\n"
".quad 0x61702e646c0a0a0a,0x203436752e6d6172,0x5f5b202c316c7225,0x425f645f524c395a\n"
".quad 0x665f536650434441,0x6d617261705f666d,0x2e646c0a3b5d305f,0x36752e6d61726170\n"
".quad 0x202c326c72252034,0x645f524c395a5f5b,0x536650434441425f,0x7261705f666d665f\n"
".quad 0x6c0a3b5d315f6d61,0x2e6d617261702e64,0x336c722520343675,0x524c395a5f5b202c\n"
".quad 0x50434441425f645f,0x705f666d665f5366,0x3b5d335f6d617261,0x6f742e617476630a\n"
".quad 0x2e6c61626f6c672e,0x346c722520343675,0x0a3b316c7225202c,0x33203220636f6c2e\n"
".quad 0x6f6d0a3120303336,0x7225203233752e76,0x6469746e25202c36,0x2e766f6d0a3b782e\n"
".quad 0x2c37722520323375,0x2e64696174632520,0x752e766f6d0a3b78,0x202c387225203233\n"
".quad 0x0a3b782e64697425,0x732e6f6c2e64616d,0x202c317225203233,0x377225202c367225\n"
".quad 0x2e0a3b387225202c,0x3633203220636f6c,0x766f6d0a31203133,0x397225203233752e\n"
".quad 0x2e6469746e25202c,0x752e766f6d0a3b79,0x2c30317225203233,0x2e64696174632520\n"
".quad 0x752e766f6d0a3b79,0x2c31317225203233,0x3b792e6469742520,0x2e6f6c2e64616d0a\n"
".quad 0x2c32722520323373,0x7225202c39722520,0x31317225202c3031,0x3220636f6c2e0a3b\n"
".quad 0x0a31203233363320,0x203233752e766f6d,0x6e25202c32317225,0x6d0a3b7a2e646974\n"
".quad 0x25203233752e766f,0x746325202c333172,0x6d0a3b7a2e646961,0x25203233752e766f\n"
".quad 0x697425202c343172,0x64616d0a3b7a2e64,0x203233732e6f6c2e,0x317225202c337225\n"
".quad 0x2c33317225202c32,0x2e0a3b3431722520,0x3633203220636f6c,0x7476630a31203333\n"
".quad 0x2e3233662e6e722e,0x3532662520323373,0x660a3b317225202c,0x33662e6e722e616d\n"
".quad 0x25202c3366252032,0x336630202c353266,0x2c30303030303046,0x3043373134663020\n"
".quad 0x6f6c2e0a3b303030,0x3433363320322063,0x722e7476630a3120,0x33732e3233662e6e\n"
".quad 0x202c363266252032,0x616d660a3b327225,0x203233662e6e722e,0x326625202c346625\n"
".quad 0x3046336630202c36,0x30202c3030303030,0x3030304337313466,0x20636f6c2e0a3b30\n"
".quad 0x3120353336332032,0x2e6e722e7476630a,0x203233732e323366,0x7225202c37326625\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x2c37326625202c35,0x3030304633663020\n"
".quad 0x346630202c303030,0x3b30303030433731,0x203320636f6c2e0a,0x630a352033343331\n"
".quad 0x732e697a722e7476,0x25203233662e3233,0x3b356625202c3472,0x3436752e7476630a\n"
".quad 0x6c7225203233752e,0x0a3b317225202c35,0x33203220636f6c2e,0x76630a3120383336\n"
".quad 0x33732e3436732e74,0x202c366c72252032,0x6c68730a3b327225,0x357225203233622e\n"
".quad 0x36202c337225202c,0x3220636f6c2e0a3b,0x0a31203833363320,0x2e3436732e747663\n"
".quad 0x376c722520323373,0x610a3b357225202c,0x25203436732e6464,0x7225202c37316c72\n"
".quad 0x366c7225202c376c,0x3220636f6c2e0a3b,0x0a31203833363320,0x732e6f6c2e64616d\n"
".quad 0x2c386c7225203436,0x202c37316c722520,0x7225202c336c7225,0x2e6464610a3b356c\n"
".quad 0x3832662520323366,0x30202c336625202c,0x3030304537324366,0x662e6464610a3b30\n"
".quad 0x2c39326625203233,0x6630202c34662520,0x3030303043463143,0x3220636f6c2e0a3b\n"
".quad 0x756d0a3120303720,0x6625203233662e6c,0x39326625202c3033,0x0a3b39326625202c\n"
".quad 0x662e6e722e616d66,0x2c31336625203233,0x25202c3832662520,0x336625202c383266\n"
".quad 0x662e6464610a3b30,0x2c32336625203233,0x6630202c35662520,0x3030303043463143\n"
".quad 0x3220636f6c2e0a3b,0x6d660a3120303720,0x3233662e6e722e61,0x25202c3333662520\n"
".quad 0x336625202c323366,0x3b31336625202c32,0x746c2e707465730a,0x317025203233662e\n"
".quad 0x202c33336625202c,0x3030303831346630,0x2e6464610a3b3030,0x3531722520323373\n"
".quad 0x2d202c317225202c,0x2e707465730a3b32,0x25203233752e7467,0x35317225202c3270\n"
".quad 0x6c2e0a3b3935202c,0x343633203220636f,0x707465730a312038,0x203233732e746c2e\n"
".quad 0x327225202c337025,0x2e726f0a3b32202c,0x3470252064657270,0x25202c327025202c\n"
".quad 0x636f6c2e0a3b3370,0x2038343633203220,0x672e707465730a31,0x7025203233732e74\n"
".quad 0x202c327225202c35,0x702e726f0a3b3136,0x2c36702520646572,0x7025202c34702520\n"
".quad 0x20636f6c2e0a3b35,0x3120383436332032,0x746c2e707465730a,0x377025203233732e\n"
".quad 0x32202c337225202c,0x6572702e726f0a3b,0x25202c3870252064,0x3b377025202c3670\n"
".quad 0x203220636f6c2e0a,0x730a312038343633,0x732e74672e707465,0x202c397025203233\n"
".quad 0x3b3136202c337225,0x646572702e726f0a,0x25202c3031702520,0x3b397025202c3870\n"
".quad 0x3436732e6464610a,0x202c38316c722520,0x35202c37316c7225,0x6c2e0a3b38343233\n"
".quad 0x343733203220636f,0x2e64616d0a312033,0x25203436732e6f6c,0x7225202c39316c72\n"
".quad 0x6c7225202c38316c,0x3b356c7225202c33,0x6f742e617476630a,0x2e6c61626f6c672e\n"
".quad 0x326c722520343675,0x3b326c7225202c30,0x3436622e6c68730a,0x202c31326c722520\n"
".quad 0x33202c39316c7225,0x732e7268730a3b32,0x32326c7225203436,0x2c31326c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x3334373320322063,0x622e6c68730a3120,0x33326c7225203436\n"
".quad 0x2c32326c7225202c,0x2e6464610a3b3220,0x396c722520343673,0x2c30326c7225202c\n"
".quad 0x0a3b33326c722520,0x203436732e646461,0x25202c34326c7225,0x3735202c37316c72\n"
".quad 0x6f6c2e0a3b343433,0x3434373320322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c35326c,0x336c7225202c3432,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x25202c36326c7225,0x3233202c35326c72,0x36732e7268730a3b,0x2c37326c72252034\n"
".quad 0x202c36326c722520,0x636f6c2e0a3b3233,0x2034343733203220,0x36622e6c68730a31\n"
".quad 0x2c38326c72252034,0x202c37326c722520,0x732e6464610a3b32,0x30316c7225203436\n"
".quad 0x2c30326c7225202c,0x0a3b38326c722520,0x203436732e646461,0x25202c39326c7225\n"
".quad 0x3136202c37316c72,0x6f6c2e0a3b303434,0x3534373320322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x6c7225202c30336c,0x336c7225202c3932,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x25202c31336c7225,0x3233202c30336c72,0x36732e7268730a3b\n"
".quad 0x2c32336c72252034,0x202c31336c722520,0x636f6c2e0a3b3233,0x2035343733203220\n"
".quad 0x36622e6c68730a31,0x2c33336c72252034,0x202c32336c722520,0x732e6464610a3b32\n"
".quad 0x31316c7225203436,0x2c30326c7225202c,0x0a3b33336c722520,0x203436732e646461\n"
".quad 0x25202c34336c7225,0x3536202c37316c72,0x6f6c2e0a3b363335,0x3634373320322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c35336c,0x336c7225202c3433\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x25202c36336c7225,0x3233202c35336c72\n"
".quad 0x36732e7268730a3b,0x2c37336c72252034,0x202c36336c722520,0x636f6c2e0a3b3233\n"
".quad 0x2036343733203220,0x36622e6c68730a31,0x2c38336c72252034,0x202c37336c722520\n"
".quad 0x732e6464610a3b32,0x32316c7225203436,0x2c30326c7225202c,0x0a3b38336c722520\n"
".quad 0x203436732e646461,0x25202c39336c7225,0x3936202c37316c72,0x6f6c2e0a3b323336\n"
".quad 0x3734373320322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c30346c\n"
".quad 0x336c7225202c3933,0x0a3b356c7225202c,0x203436622e6c6873,0x25202c31346c7225\n"
".quad 0x3233202c30346c72,0x36732e7268730a3b,0x2c32346c72252034,0x202c31346c722520\n"
".quad 0x636f6c2e0a3b3233,0x2037343733203220,0x36622e6c68730a31,0x2c33346c72252034\n"
".quad 0x202c32346c722520,0x732e6464610a3b32,0x33316c7225203436,0x2c30326c7225202c\n"
".quad 0x0a3b33346c722520,0x203436732e646461,0x25202c34346c7225,0x3337202c37316c72\n"
".quad 0x6f6c2e0a3b383237,0x3834373320322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c35346c,0x336c7225202c3434,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x25202c36346c7225,0x3233202c35346c72,0x36732e7268730a3b,0x2c37346c72252034\n"
".quad 0x202c36346c722520,0x636f6c2e0a3b3233,0x2038343733203220,0x36622e6c68730a31\n"
".quad 0x2c38346c72252034,0x202c37346c722520,0x732e6464610a3b32,0x34316c7225203436\n"
".quad 0x2c30326c7225202c,0x0a3b38346c722520,0x33203220636f6c2e,0x25400a3120383436\n"
".quad 0x2061726220303170,0x0a3b375f30334242,0x3436622e6c68730a,0x202c39346c722520\n"
".quad 0x3233202c386c7225,0x36732e7268730a3b,0x2c30356c72252034,0x202c39346c722520\n"
".quad 0x636f6c2e0a3b3233,0x2031353733203220,0x36622e6c68730a31,0x2c31356c72252034\n"
".quad 0x202c30356c722520,0x732e6464610a3b32,0x32356c7225203436,0x202c346c7225202c\n"
".quad 0x6c0a3b31356c7225,0x6c61626f6c672e64,0x366625203233662e,0x32356c72255b202c\n"
".quad 0x732e6464610a3b5d,0x2c37317225203233,0x312d202c31722520,0x36752e7476630a3b\n"
".quad 0x7225203233752e34,0x317225202c33356c,0x732e6464610a3b37,0x34356c7225203436\n"
".quad 0x202c366c7225202c,0x64610a3b376c7225,0x7225203436732e64,0x6c7225202c35356c\n"
".quad 0x36393034202c3435,0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3230356c72\n"
".quad 0x5f645f524c395a5f,0x5f53665043444142,0x617261705f666d66,0x6c2e0a3b5d335f6d\n"
".quad 0x353733203220636f,0x2e64616d0a312032,0x25203436732e6f6c,0x7225202c36356c72\n"
".quad 0x6c7225202c35356c,0x6c7225202c323035,0x2e6c68730a3b3335,0x356c722520343662\n"
".quad 0x36356c7225202c37,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c38356c\n"
".quad 0x0a3b3233202c3735,0x33203220636f6c2e,0x68730a3120323537,0x7225203436622e6c\n"
".quad 0x6c7225202c39356c,0x610a3b32202c3835,0x25203436732e6464,0x7225202c30366c72\n"
".quad 0x356c7225202c346c,0x6c672e646c0a3b39,0x3233662e6c61626f,0x255b202c37662520\n"
".quad 0x2e0a3b5d30366c72,0x3733203220636f6c,0x6464610a31203335,0x317225203233732e\n"
".quad 0x202c317225202c39,0x752e7476630a3b31,0x25203233752e3436,0x7225202c31366c72\n"
".quad 0x2e6464610a3b3931,0x366c722520343673,0x34356c7225202c32,0x3b3838323231202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312033353733,0x36732e6f6c2e6461,0x2c33366c72252034\n"
".quad 0x202c32366c722520,0x202c3230356c7225,0x730a3b31366c7225,0x25203436622e6c68\n"
".quad 0x7225202c34366c72,0x3b3233202c33366c,0x3436732e7268730a,0x202c35366c722520\n"
".quad 0x33202c34366c7225,0x20636f6c2e0a3b32,0x3120333537332032,0x3436622e6c68730a\n"
".quad 0x202c36366c722520,0x32202c35366c7225,0x36732e6464610a3b,0x2c37366c72252034\n"
".quad 0x25202c346c722520,0x646c0a3b36366c72,0x2e6c61626f6c672e,0x2c38662520323366\n"
".quad 0x5d37366c72255b20,0x33732e6464610a3b,0x202c313272252032,0x3b312d202c327225\n"
".quad 0x203220636f6c2e0a,0x630a312034353733,0x732e3436732e7476,0x38366c7225203233\n"
".quad 0x0a3b31327225202c,0x203436732e646461,0x25202c39366c7225,0x7225202c38366c72\n"
".quad 0x2e6464610a3b376c,0x376c722520343673,0x39366c7225202c30,0x0a3b32393138202c\n"
".quad 0x33203220636f6c2e,0x616d0a3120343537,0x3436732e6f6c2e64,0x202c31376c722520\n"
".quad 0x25202c30376c7225,0x25202c3230356c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x376c7225202c3237,0x730a3b3233202c31,0x25203436732e7268,0x7225202c33376c72\n"
".quad 0x3b3233202c32376c,0x203220636f6c2e0a,0x730a312034353733,0x25203436622e6c68\n"
".quad 0x7225202c34376c72,0x0a3b32202c33376c,0x203436732e646461,0x25202c35376c7225\n"
".quad 0x6c7225202c346c72,0x672e646c0a3b3437,0x33662e6c61626f6c,0x5b202c3966252032\n"
".quad 0x0a3b5d35376c7225,0x203436732e646461,0x25202c36376c7225,0x3032202c39366c72\n"
".quad 0x6f6c2e0a3b303834,0x3535373320322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x6c7225202c37376c,0x356c7225202c3637,0x356c7225202c3230,0x622e6c68730a3b33\n"
".quad 0x38376c7225203436,0x2c37376c7225202c,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x376c7225202c3937,0x2e0a3b3233202c38,0x3733203220636f6c,0x6c68730a31203535\n"
".quad 0x6c7225203436622e,0x376c7225202c3038,0x64610a3b32202c39,0x7225203436732e64\n"
".quad 0x6c7225202c31386c,0x30386c7225202c34,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x255b202c30316625,0x610a3b5d31386c72,0x25203436732e6464,0x7225202c32386c72\n"
".quad 0x353432202c39366c,0x636f6c2e0a3b3637,0x2036353733203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x386c7225202c3338,0x30356c7225202c32,0x31366c7225202c32\n"
".quad 0x36622e6c68730a3b,0x2c34386c72252034,0x202c33386c722520,0x2e7268730a3b3233\n"
".quad 0x386c722520343673,0x34386c7225202c35,0x6c2e0a3b3233202c,0x353733203220636f\n"
".quad 0x2e6c68730a312036,0x386c722520343662,0x35386c7225202c36,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x346c7225202c3738,0x3b36386c7225202c,0x626f6c672e646c0a\n"
".quad 0x25203233662e6c61,0x72255b202c313166,0x6c2e0a3b5d37386c,0x353733203220636f\n"
".quad 0x2e6464610a312037,0x3532722520323373,0x31202c327225202c,0x36732e7476630a3b\n"
".quad 0x7225203233732e34,0x327225202c38386c,0x732e6464610a3b35,0x39386c7225203436\n"
".quad 0x2c38386c7225202c,0x610a3b376c722520,0x25203436732e6464,0x7225202c30396c72\n"
".quad 0x333631202c39386c,0x636f6c2e0a3b3438,0x2037353733203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x396c7225202c3139,0x30356c7225202c30,0x3b356c7225202c32\n"
".quad 0x3436622e6c68730a,0x202c32396c722520,0x33202c31396c7225,0x732e7268730a3b32\n"
".quad 0x33396c7225203436,0x2c32396c7225202c,0x6f6c2e0a3b323320,0x3735373320322063\n"
".quad 0x622e6c68730a3120,0x34396c7225203436,0x2c33396c7225202c,0x2e6464610a3b3220\n"
".quad 0x396c722520343673,0x2c346c7225202c35,0x0a3b34396c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x6c72255b202c3231,0x6464610a3b5d3539,0x6c7225203436732e\n"
".quad 0x386c7225202c3639,0x3237363832202c39,0x3220636f6c2e0a3b,0x0a31203835373320\n"
".quad 0x732e6f6c2e64616d,0x37396c7225203436,0x2c36396c7225202c,0x2c3230356c722520\n"
".quad 0x0a3b31366c722520,0x203436622e6c6873,0x25202c38396c7225,0x3233202c37396c72\n"
".quad 0x36732e7268730a3b,0x2c39396c72252034,0x202c38396c722520,0x636f6c2e0a3b3233\n"
".quad 0x2038353733203220,0x36622e6c68730a31,0x3030316c72252034,0x2c39396c7225202c\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x346c7225202c3130,0x3030316c7225202c\n"
".quad 0x6f6c672e646c0a3b,0x203233662e6c6162,0x255b202c33316625,0x0a3b5d3130316c72\n"
".quad 0x203436732e646461,0x202c3230316c7225,0x33202c39386c7225,0x6c2e0a3b38363732\n"
".quad 0x353733203220636f,0x2e64616d0a312039,0x25203436732e6f6c,0x25202c3330316c72\n"
".quad 0x25202c3230316c72,0x25202c3230356c72,0x68730a3b33356c72,0x7225203436622e6c\n"
".quad 0x7225202c3430316c,0x3233202c3330316c,0x36732e7268730a3b,0x3530316c72252034\n"
".quad 0x3430316c7225202c,0x6c2e0a3b3233202c,0x353733203220636f,0x2e6c68730a312039\n"
".quad 0x316c722520343662,0x316c7225202c3630,0x610a3b32202c3530,0x25203436732e6464\n"
".quad 0x25202c3730316c72,0x6c7225202c346c72,0x2e646c0a3b363031,0x662e6c61626f6c67\n"
".quad 0x2c34316625203233,0x3730316c72255b20,0x732e6464610a3b5d,0x2c39327225203233\n"
".quad 0x362d202c35722520,0x20636f6c2e0a3b34,0x3120303637332032,0x3436732e7476630a\n"
".quad 0x6c7225203233732e,0x327225202c383031,0x732e6464610a3b39,0x30316c7225203436\n"
".quad 0x2c366c7225202c39,0x3b3830316c722520,0x3436732e6464610a,0x2c3031316c722520\n"
".quad 0x2c3930316c722520,0x0a3b343638363320,0x33203220636f6c2e,0x616d0a3120303637\n"
".quad 0x3436732e6f6c2e64,0x2c3131316c722520,0x2c3031316c722520,0x2c3230356c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3231316c72,0x33202c3131316c72\n"
".quad 0x732e7268730a3b32,0x31316c7225203436,0x31316c7225202c33,0x2e0a3b3233202c32\n"
".quad 0x3733203220636f6c,0x6c68730a31203036,0x6c7225203436622e,0x6c7225202c343131\n"
".quad 0x0a3b32202c333131,0x203436732e646461,0x202c3531316c7225,0x7225202c346c7225\n"
".quad 0x646c0a3b3431316c,0x2e6c61626f6c672e,0x3531662520323366,0x31316c72255b202c\n"
".quad 0x2e6464610a3b5d35,0x316c722520343673,0x316c7225202c3631,0x36393034202c3930\n"
".quad 0x20636f6c2e0a3b30,0x3120313637332032,0x2e6f6c2e64616d0a,0x316c722520343673\n"
".quad 0x316c7225202c3731,0x356c7225202c3631,0x356c7225202c3230,0x622e6c68730a3b33\n"
".quad 0x31316c7225203436,0x31316c7225202c38,0x730a3b3233202c37,0x25203436732e7268\n"
".quad 0x25202c3931316c72,0x33202c3831316c72,0x20636f6c2e0a3b32,0x3120313637332032\n"
".quad 0x3436622e6c68730a,0x2c3032316c722520,0x2c3931316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x346c7225202c3132,0x3032316c7225202c,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x255b202c36316625,0x0a3b5d3132316c72,0x203436732e646461\n"
".quad 0x202c3232316c7225,0x25202c38366c7225,0x610a3b3830316c72,0x25203436732e6464\n"
".quad 0x25202c3332316c72,0x34202c3232316c72,0x6c2e0a3b36353035,0x363733203220636f\n"
".quad 0x2e64616d0a312032,0x25203436732e6f6c,0x25202c3432316c72,0x25202c3332316c72\n"
".quad 0x25202c3230356c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c353231\n"
".quad 0x3b3233202c343231,0x3436732e7268730a,0x2c3632316c722520,0x2c3532316c722520\n"
".quad 0x6f6c2e0a3b323320,0x3236373320322063,0x622e6c68730a3120,0x32316c7225203436\n"
".quad 0x32316c7225202c37,0x64610a3b32202c36,0x7225203436732e64,0x7225202c3832316c\n"
".quad 0x316c7225202c346c,0x672e646c0a3b3732,0x33662e6c61626f6c,0x202c373166252032\n"
".quad 0x5d3832316c72255b,0x36732e6464610a3b,0x3932316c72252034,0x3930316c7225202c\n"
".quad 0x3b3235313934202c,0x203220636f6c2e0a,0x6d0a312033363733,0x36732e6f6c2e6461\n"
".quad 0x3033316c72252034,0x3932316c7225202c,0x3230356c7225202c,0x3b31366c7225202c\n"
".quad 0x3436622e6c68730a,0x2c3133316c722520,0x2c3033316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c323331,0x3b3233202c313331,0x203220636f6c2e0a\n"
".quad 0x730a312033363733,0x25203436622e6c68,0x25202c3333316c72,0x32202c3233316c72\n"
".quad 0x36732e6464610a3b,0x3433316c72252034,0x202c346c7225202c,0x0a3b3333316c7225\n"
".quad 0x61626f6c672e646c,0x6625203233662e6c,0x6c72255b202c3831,0x64610a3b5d343331\n"
".quad 0x7225203436732e64,0x7225202c3533316c,0x6c7225202c38386c,0x6464610a3b383031\n"
".quad 0x6c7225203436732e,0x6c7225202c363331,0x323335202c353331,0x636f6c2e0a3b3834\n"
".quad 0x2034363733203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c373331\n"
".quad 0x6c7225202c363331,0x6c7225202c323035,0x622e6c68730a3b35,0x33316c7225203436\n"
".quad 0x33316c7225202c38,0x730a3b3233202c37,0x25203436732e7268,0x25202c3933316c72\n"
".quad 0x33202c3833316c72,0x20636f6c2e0a3b32,0x3120343637332032,0x3436622e6c68730a\n"
".quad 0x2c3034316c722520,0x2c3933316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x346c7225202c3134,0x3034316c7225202c,0x6f6c672e646c0a3b,0x203233662e6c6162\n"
".quad 0x255b202c39316625,0x0a3b5d3134316c72,0x203233732e646461,0x7225202c35337225\n"
".quad 0x2e0a3b3436202c35,0x3733203220636f6c,0x7476630a31203536,0x3233732e3436732e\n"
".quad 0x2c3234316c722520,0x610a3b3533722520,0x25203436732e6464,0x25202c3334316c72\n"
".quad 0x6c7225202c366c72,0x6464610a3b323431,0x6c7225203436732e,0x6c7225202c343431\n"
".quad 0x333735202c333431,0x636f6c2e0a3b3434,0x2035363733203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c353431,0x6c7225202c343431,0x6c7225202c323035\n"
".quad 0x622e6c68730a3b35,0x34316c7225203436,0x34316c7225202c36,0x730a3b3233202c35\n"
".quad 0x25203436732e7268,0x25202c3734316c72,0x33202c3634316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120353637332032,0x3436622e6c68730a,0x2c3834316c722520,0x2c3734316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x346c7225202c3934,0x3834316c7225202c\n"
".quad 0x6f6c672e646c0a3b,0x203233662e6c6162,0x255b202c30326625,0x0a3b5d3934316c72\n"
".quad 0x203436732e646461,0x202c3035316c7225,0x202c3334316c7225,0x2e0a3b3034343136\n"
".quad 0x3733203220636f6c,0x64616d0a31203636,0x203436732e6f6c2e,0x202c3135316c7225\n"
".quad 0x202c3035316c7225,0x202c3230356c7225,0x730a3b33356c7225,0x25203436622e6c68\n"
".quad 0x25202c3235316c72,0x33202c3135316c72,0x732e7268730a3b32,0x35316c7225203436\n"
".quad 0x35316c7225202c33,0x2e0a3b3233202c32,0x3733203220636f6c,0x6c68730a31203636\n"
".quad 0x6c7225203436622e,0x6c7225202c343531,0x0a3b32202c333531,0x203436732e646461\n"
".quad 0x202c3535316c7225,0x7225202c346c7225,0x646c0a3b3435316c,0x2e6c61626f6c672e\n"
".quad 0x3132662520323366,0x35316c72255b202c,0x2e6464610a3b5d35,0x316c722520343673\n"
".quad 0x366c7225202c3635,0x34316c7225202c38,0x732e6464610a3b32,0x35316c7225203436\n"
".quad 0x35316c7225202c37,0x3633353536202c36,0x3220636f6c2e0a3b,0x0a31203736373320\n"
".quad 0x732e6f6c2e64616d,0x35316c7225203436,0x35316c7225202c38,0x30356c7225202c37\n"
".quad 0x3b356c7225202c32,0x3436622e6c68730a,0x2c3935316c722520,0x2c3835316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c303631,0x3b3233202c393531\n"
".quad 0x203220636f6c2e0a,0x730a312037363733,0x25203436622e6c68,0x25202c3136316c72\n"
".quad 0x32202c3036316c72,0x36732e6464610a3b,0x3236316c72252034,0x202c346c7225202c\n"
".quad 0x0a3b3136316c7225,0x61626f6c672e646c,0x6625203233662e6c,0x6c72255b202c3232\n"
".quad 0x64610a3b5d323631,0x7225203436732e64,0x7225202c3336316c,0x3936202c3334316c\n"
".quad 0x6f6c2e0a3b323336,0x3836373320322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3436316c,0x7225202c3336316c,0x7225202c3230356c,0x6c68730a3b31366c\n"
".quad 0x6c7225203436622e,0x6c7225202c353631,0x3b3233202c343631,0x3436732e7268730a\n"
".quad 0x2c3636316c722520,0x2c3536316c722520,0x6f6c2e0a3b323320,0x3836373320322063\n"
".quad 0x622e6c68730a3120,0x36316c7225203436,0x36316c7225202c37,0x64610a3b32202c36\n"
".quad 0x7225203436732e64,0x7225202c3836316c,0x316c7225202c346c,0x672e646c0a3b3736\n"
".quad 0x33662e6c61626f6c,0x202c333266252032,0x5d3836316c72255b,0x3220636f6c2e0a3b\n"
".quad 0x0a31203037373320,0x203233732e646461,0x7225202c30347225,0x6c2e0a3b31202c33\n"
".quad 0x323431203220636f,0x707465730a312030,0x203233732e746c2e,0x7225202c31317025\n"
".quad 0x0a3b3436202c3034,0x7262203131702540,0x335f303342422061,0x752e766f6d0a0a3b\n"
".quad 0x30356c7225203436,0x3b32333034202c33,0x696e752e6172620a,0x3b345f3033424220\n"
".quad 0x335f303342420a0a,0x33622e6c68730a3a,0x202c363472252032,0x3b36202c30347225\n"
".quad 0x3436732e7476630a,0x6c7225203233732e,0x347225202c333035,0x303342420a0a3b36\n"
".quad 0x636f6c2e0a3a345f,0x2030323431203220,0x6c2e707465730a31,0x7025203233732e74\n"
".quad 0x35327225202c3231,0x64610a3b3436202c,0x7225203436732e64,0x7225202c3137316c\n"
".quad 0x373337202c38386c,0x706c65730a3b3832,0x6c7225203436622e,0x6c7225202c323731\n"
".quad 0x373337202c313731,0x32317025202c3139,0x36732e6464610a3b,0x3337316c72252034\n"
".quad 0x3237316c7225202c,0x3330356c7225202c,0x36752e7476630a3b,0x7225203233752e34\n"
".quad 0x7225202c3437316c,0x61702e646c0a3b31,0x203436752e6d6172,0x202c3130356c7225\n"
".quad 0x645f524c395a5f5b,0x536650434441425f,0x7261705f666d665f,0x2e0a3b5d335f6d61\n"
".quad 0x3733203220636f6c,0x64616d0a31203037,0x203436732e6f6c2e,0x202c3537316c7225\n"
".quad 0x202c3337316c7225,0x202c3130356c7225,0x0a3b3437316c7225,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c343934,0x41425f645f524c39,0x6d665f5366504344\n"
".quad 0x5f6d617261705f66,0x617476630a3b5d30,0x626f6c672e6f742e,0x25203436752e6c61\n"
".quad 0x25202c3637316c72,0x730a3b3439346c72,0x25203436622e6c68,0x25202c3737316c72\n"
".quad 0x33202c3537316c72,0x732e7268730a3b32,0x37316c7225203436,0x37316c7225202c38\n"
".quad 0x2e0a3b3233202c37,0x3733203220636f6c,0x6c68730a31203037,0x6c7225203436622e\n"
".quad 0x6c7225202c393731,0x0a3b32202c383731,0x203436732e646461,0x202c3038316c7225\n"
".quad 0x202c3637316c7225,0x0a3b3937316c7225,0x61626f6c672e646c,0x6625203233662e6c\n"
".quad 0x6c72255b202c3432,0x6c2e0a3b5d303831,0x373733203220636f,0x317025400a312033\n"
".quad 0x3342422061726220,0x6c2e0a0a3b365f30,0x393733203220636f,0x2e6275730a312035\n"
".quad 0x3433662520323366,0x25202c376625202c,0x2e6464610a3b3866,0x3533662520323366\n"
".quad 0x202c34336625202c,0x75730a3b30316625,0x6625203233662e62,0x35336625202c3633\n"
".quad 0x0a3b31316625202c,0x203233662e627573,0x6625202c37336625,0x33316625202c3633\n"
".quad 0x33662e6464610a3b,0x202c383366252032,0x6625202c37336625,0x2e6464610a3b3431\n"
".quad 0x3933662520323366,0x202c38336625202c,0x75730a3b36316625,0x6625203233662e62\n"
".quad 0x39336625202c3034,0x0a3b38316625202c,0x203233662e646461,0x6625202c31346625\n"
".quad 0x31326625202c3034,0x33662e6275730a3b,0x202c323466252032,0x6625202c31346625\n"
".quad 0x2e6275730a3b3332,0x3334662520323366,0x25202c396625202c,0x6464610a3b323166\n"
".quad 0x346625203233662e,0x2c33346625202c34,0x610a3b3031662520,0x25203233662e6464\n"
".quad 0x346625202c353466,0x3b31316625202c34,0x3233662e6275730a,0x25202c3634662520\n"
".quad 0x316625202c353466,0x662e6275730a3b33,0x2c37346625203233,0x25202c3634662520\n"
".quad 0x6464610a3b343166,0x346625203233662e,0x2c37346625202c38,0x730a3b3731662520\n"
".quad 0x25203233662e6275,0x346625202c393466,0x3b39316625202c38,0x3233662e6464610a\n"
".quad 0x25202c3035662520,0x326625202c393466,0x662e6275730a3b32,0x2c31356625203233\n"
".quad 0x25202c3035662520,0x6464610a3b343266,0x356625203233662e,0x2c35316625202c32\n"
".quad 0x610a3b3631662520,0x25203233662e6464,0x356625202c333566,0x3b37316625202c32\n"
".quad 0x3233662e6464610a,0x25202c3435662520,0x316625202c333566,0x662e6464610a3b38\n"
".quad 0x2c35356625203233,0x25202c3435662520,0x6275730a3b393166,0x356625203233662e\n"
".quad 0x2c35356625202c36,0x730a3b3032662520,0x25203233662e6275,0x356625202c373566\n"
".quad 0x3b31326625202c36,0x3233662e6275730a,0x25202c3835662520,0x326625202c373566\n"
".quad 0x662e6275730a3b32,0x2c39356625203233,0x25202c3835662520,0x6275730a3b333266\n"
".quad 0x366625203233662e,0x2c39356625202c30,0x730a3b3432662520,0x25203233662e6275\n"
".quad 0x316625202c313666,0x0a3b366625202c30,0x33203220636f6c2e,0x64610a3120353937\n"
".quad 0x6625203233662e64,0x31366625202c3236,0x0a3b31316625202c,0x203233662e646461\n"
".quad 0x6625202c33366625,0x33316625202c3236,0x33662e6464610a3b,0x202c343666252032\n"
".quad 0x6625202c33366625,0x2e6464610a3b3431,0x3536662520323366,0x202c34366625202c\n"
".quad 0x64610a3b36316625,0x6625203233662e64,0x35366625202c3636,0x0a3b37316625202c\n"
".quad 0x203233662e646461,0x6625202c37366625,0x38316625202c3636,0x33662e6464610a3b\n"
".quad 0x202c383666252032,0x6625202c37366625,0x2e6464610a3b3931,0x3936662520323366\n"
".quad 0x202c38366625202c,0x64610a3b31326625,0x6625203233662e64,0x39366625202c3037\n"
".quad 0x0a3b32326625202c,0x203233662e646461,0x6625202c31376625,0x33326625202c3037\n"
".quad 0x33662e6464610a3b,0x202c323766252032,0x6625202c31376625,0x2e6c756d0a3b3432\n"
".quad 0x3337662520323366,0x202c31356625202c,0x6d660a3b31356625,0x3233662e6e722e61\n"
".quad 0x25202c3437662520,0x346625202c323466,0x3b33376625202c32,0x3233662e6c756d0a\n"
".quad 0x25202c3537662520,0x366625202c303666,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x30366625202c3637,0x202c30366625202c,0x75730a3b34376625,0x6625203233662e62\n"
".quad 0x32376625202c3737,0x0a3b36376625202c,0x203233662e6c756d,0x6625202c38376625\n"
".quad 0x3830436630202c37,0x660a3b3030303030,0x33662e6e722e616d,0x202c393766252032\n"
".quad 0x346630202c366625,0x2c30303030303431,0x660a3b3837662520,0x33662e6e722e616d\n"
".quad 0x202c303866252032,0x436630202c396625,0x2c30303030303830,0x660a3b3937662520\n"
".quad 0x33662e6e722e616d,0x202c313866252032,0x436630202c386625,0x2c30303030303830\n"
".quad 0x660a3b3038662520,0x33662e6e722e616d,0x202c323866252032,0x6630202c32316625\n"
".quad 0x3030303030383043,0x0a3b31386625202c,0x203233662e646461,0x6625202c33386625\n"
".quad 0x30316625202c3238,0x33662e6464610a3b,0x202c343866252032,0x6625202c33386625\n"
".quad 0x2e6464610a3b3131,0x3538662520323366,0x202c34386625202c,0x64610a3b33316625\n"
".quad 0x6625203233662e64,0x35386625202c3638,0x0a3b34316625202c,0x662e6e722e616d66\n"
".quad 0x2c37386625203233,0x30202c3531662520,0x3030303038304366,0x3b36386625202c30\n"
".quad 0x3233662e6464610a,0x25202c3838662520,0x316625202c373866,0x662e6464610a3b36\n"
".quad 0x2c39386625203233,0x25202c3838662520,0x6464610a3b373166,0x396625203233662e\n"
".quad 0x2c39386625202c30,0x610a3b3831662520,0x25203233662e6464,0x396625202c313966\n"
".quad 0x3b39316625202c30,0x2e6e722e616d660a,0x3239662520323366,0x202c30326625202c\n"
".quad 0x3030303830436630,0x31396625202c3030,0x33662e6464610a3b,0x202c333966252032\n"
".quad 0x6625202c32396625,0x2e6464610a3b3132,0x3439662520323366,0x202c33396625202c\n"
".quad 0x64610a3b32326625,0x6625203233662e64,0x34396625202c3539,0x0a3b33326625202c\n"
".quad 0x203233662e646461,0x6625202c36396625,0x34326625202c3539,0x6e722e616d660a3b\n"
".quad 0x396625203233662e,0x2c36376625202c37,0x3431463034663020,0x396625202c343135\n"
".quad 0x662e6c756d0a3b36,0x2c38396625203233,0x6630202c38662520,0x3030303030413034\n"
".quad 0x6e722e616d660a3b,0x396625203233662e,0x202c376625202c39,0x3030304130436630\n"
".quad 0x38396625202c3030,0x6e722e616d660a3b,0x316625203233662e,0x32346625202c3030\n"
".quad 0x354446336630202c,0x6625202c35353535,0x2e6c756d0a3b3939,0x3031662520323366\n"
".quad 0x2c32316625202c31,0x3030413034663020,0x616d660a3b303030,0x203233662e6e722e\n"
".quad 0x25202c3230316625,0x30436630202c3966,0x202c303030303041,0x660a3b3130316625\n"
".quad 0x33662e6e722e616d,0x2c33303166252032,0x30202c3135662520,0x3535353544463366\n"
".quad 0x3230316625202c35,0x33662e6c756d0a3b,0x2c34303166252032,0x30202c3032662520\n"
".quad 0x3030303041303466,0x722e616d660a3b30,0x6625203233662e6e,0x316625202c353031\n"
".quad 0x4130436630202c35,0x25202c3030303030,0x6d660a3b34303166,0x3233662e6e722e61\n"
".quad 0x202c363031662520,0x6630202c30366625,0x3535353535444633,0x3b3530316625202c\n"
".quad 0x3233662e6464610a,0x202c373031662520,0x376625202c376625,0x33662e6275730a3b\n"
".quad 0x2c38303166252032,0x202c373031662520,0x6f6c2e0a3b396625,0x3539373320322063\n"
".quad 0x662e6464610a3120,0x3930316625203233,0x25202c386625202c,0x2e6464610a3b3866\n"
".quad 0x3131662520323366,0x3830316625202c30,0x3b3930316625202c,0x3233662e6275730a\n"
".quad 0x202c313131662520,0x25202c3031316625,0x6f6c2e0a3b323166,0x3539373320322063\n"
".quad 0x662e6464610a3120,0x3231316625203233,0x2c3131316625202c,0x610a3b3031662520\n"
".quad 0x25203233662e6464,0x6625202c33313166,0x316625202c323131,0x662e6464610a3b31\n"
".quad 0x3431316625203233,0x2c3331316625202c,0x610a3b3331662520,0x25203233662e6464\n"
".quad 0x6625202c35313166,0x316625202c343131,0x662e6275730a3b34,0x3631316625203233\n"
".quad 0x2c3531316625202c,0x2e0a3b3531662520,0x3733203220636f6c,0x6464610a31203539\n"
".quad 0x316625203233662e,0x31316625202c3731,0x3b36316625202c36,0x3233662e766f6d0a\n"
".quad 0x202c383131662520,0x3030303030436630,0x636f6c2e0a3b3030,0x2035393733203220\n"
".quad 0x6e722e616d660a31,0x316625203233662e,0x37316625202c3931,0x303030436630202c\n"
".quad 0x6625202c30303030,0x6464610a3b373131,0x316625203233662e,0x31316625202c3032\n"
".quad 0x3b38316625202c39,0x2e6e722e616d660a,0x3231662520323366,0x2c39316625202c31\n"
".quad 0x3030303043663020,0x316625202c303030,0x2e6275730a3b3032,0x3231662520323366\n"
".quad 0x3132316625202c32,0x0a3b30326625202c,0x33203220636f6c2e,0x64610a3120353937\n"
".quad 0x6625203233662e64,0x316625202c333231,0x31326625202c3232,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x32326625202c3432,0x303030436630202c,0x6625202c30303030\n"
".quad 0x6464610a3b333231,0x316625203233662e,0x32316625202c3532,0x3b33326625202c34\n"
".quad 0x2e6e722e616d660a,0x3231662520323366,0x2c34326625202c36,0x3030303043663020\n"
".quad 0x316625202c303030,0x2e6464610a3b3532,0x3231662520323366,0x2c32346625202c37\n"
".quad 0x660a3b3234662520,0x33662e6e722e616d,0x2c38323166252032,0x25202c3135662520\n"
".quad 0x376625202c313566,0x662e67656e0a3b35,0x3932316625203233,0x3b3832316625202c\n"
".quad 0x2e6e722e616d660a,0x3331662520323366,0x3732316625202c30,0x202c32346625202c\n"
".quad 0x730a3b3932316625,0x25203233662e6275,0x6625202c31333166,0x316625202c363231\n"
".quad 0x2e6464610a3b3033,0x3331662520323366,0x202c396625202c32,0x616d660a3b396625\n"
".quad 0x203233662e6e722e,0x25202c3333316625,0x30436630202c3766,0x202c303030303038\n"
".quad 0x660a3b3233316625,0x33662e6e722e616d,0x2c34333166252032,0x6630202c38662520\n"
".quad 0x3030303030383043,0x3b3333316625202c,0x3233662e6464610a,0x202c353331662520\n"
".quad 0x6625202c32316625,0x2e6464610a3b3231,0x3331662520323366,0x3433316625202c36\n"
".quad 0x3b3533316625202c,0x3233662e6464610a,0x202c373331662520,0x25202c3633316625\n"
".quad 0x6464610a3b303166,0x316625203233662e,0x33316625202c3833,0x3b31316625202c37\n"
".quad 0x3233662e6464610a,0x202c393331662520,0x25202c3833316625,0x6464610a3b333166\n"
".quad 0x316625203233662e,0x33316625202c3034,0x3b34316625202c39,0x3233662e6464610a\n"
".quad 0x202c313431662520,0x6625202c35316625,0x2e6464610a3b3531,0x3431662520323366\n"
".quad 0x3034316625202c32,0x3b3134316625202c,0x3233662e6464610a,0x202c333431662520\n"
".quad 0x25202c3234316625,0x616d660a3b363166,0x203233662e6e722e,0x25202c3434316625\n"
".quad 0x436630202c373166,0x2c30303030303030,0x0a3b333431662520,0x203233662e646461\n"
".quad 0x25202c3534316625,0x6625202c34343166,0x2e616d660a3b3831,0x25203233662e6e72\n"
".quad 0x6625202c36343166,0x30436630202c3931,0x202c303030303030,0x610a3b3534316625\n"
".quad 0x25203233662e6464,0x6625202c37343166,0x30326625202c3032,0x33662e6464610a3b\n"
".quad 0x2c38343166252032,0x202c363431662520,0x610a3b3734316625,0x25203233662e6464\n"
".quad 0x6625202c39343166,0x326625202c383431,0x722e616d660a3b31,0x6625203233662e6e\n"
".quad 0x326625202c303531,0x3030436630202c32,0x25202c3030303030,0x64610a3b39343166\n"
".quad 0x6625203233662e64,0x316625202c313531,0x33326625202c3035,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x34326625202c3235,0x303030436630202c,0x6625202c30303030\n"
".quad 0x6464610a3b313531,0x316625203233662e,0x2c396625202c3335,0x610a3b3231662520\n"
".quad 0x25203233662e6464,0x6625202c34353166,0x316625202c333531,0x662e6464610a3b30\n"
".quad 0x3535316625203233,0x2c3435316625202c,0x610a3b3131662520,0x25203233662e6464\n"
".quad 0x6625202c36353166,0x316625202c353531,0x662e6464610a3b33,0x3735316625203233\n"
".quad 0x2c3635316625202c,0x730a3b3431662520,0x25203233662e6275,0x6625202c38353166\n"
".quad 0x316625202c373531,0x662e6275730a3b35,0x3935316625203233,0x2c3835316625202c\n"
".quad 0x730a3b3631662520,0x25203233662e6275,0x6625202c30363166,0x316625202c393531\n"
".quad 0x662e6275730a3b38,0x3136316625203233,0x2c3036316625202c,0x730a3b3032662520\n"
".quad 0x25203233662e6275,0x6625202c32363166,0x326625202c313631,0x662e6275730a3b31\n"
".quad 0x3336316625203233,0x2c3236316625202c,0x2e0a3b3332662520,0x3733203220636f6c\n"
".quad 0x67656e0a31203539,0x316625203233662e,0x30366625202c3436,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x36316625202c3536,0x2c30366625202c34,0x730a3b3337662520\n"
".quad 0x25203233662e6275,0x6625202c36363166,0x316625202c333631,0x2e67656e0a3b3536\n"
".quad 0x3631662520323366,0x3533316625202c37,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x2c396625202c3836,0x202c383131662520,0x610a3b3736316625,0x25203233662e6464\n"
".quad 0x6625202c39363166,0x316625202c383631,0x662e6464610a3b30,0x3037316625203233\n"
".quad 0x2c3936316625202c,0x610a3b3131662520,0x25203233662e6464,0x6625202c31373166\n"
".quad 0x316625202c303731,0x662e6464610a3b33,0x3237316625203233,0x2c3137316625202c\n"
".quad 0x610a3b3431662520,0x25203233662e6464,0x6625202c33373166,0x316625202c323731\n"
".quad 0x2e6275730a3b3134,0x3731662520323366,0x3337316625202c34,0x0a3b36316625202c\n"
".quad 0x203233662e627573,0x25202c3537316625,0x6625202c34373166,0x636f6c2e0a3b3831\n"
".quad 0x2035393733203220,0x33662e6464610a31,0x2c36373166252032,0x202c353731662520\n"
".quad 0x730a3b3734316625,0x25203233662e6275,0x6625202c37373166,0x326625202c363731\n"
".quad 0x662e6275730a3b31,0x3837316625203233,0x2c3737316625202c,0x730a3b3332662520\n"
".quad 0x25203233662e6275,0x6625202c39373166,0x31316625202c3031,0x3220636f6c2e0a3b\n"
".quad 0x0a31203539373320,0x203233662e646461,0x25202c3038316625,0x6625202c39373166\n"
".quad 0x2e6275730a3b3331,0x3831662520323366,0x3038316625202c31,0x0a3b34316625202c\n"
".quad 0x33203220636f6c2e,0x656e0a3120353937,0x6625203233662e67,0x346625202c323831\n"
".quad 0x722e616d660a3b32,0x6625203233662e6e,0x316625202c333831,0x31356625202c3238\n"
".quad 0x3b3138316625202c,0x3233662e6275730a,0x202c343831662520,0x6625202c37316625\n"
".quad 0x2e6275730a3b3931,0x3831662520323366,0x3438316625202c35,0x0a3b32326625202c\n"
".quad 0x33203220636f6c2e,0x64610a3120353937,0x6625203233662e64,0x316625202c363831\n"
".quad 0x34326625202c3538,0x33662e67656e0a3b,0x2c37383166252032,0x660a3b3135662520\n"
".quad 0x33662e6e722e616d,0x2c38383166252032,0x202c373831662520,0x6625202c30366625\n"
".quad 0x6275730a3b363831,0x316625203233662e,0x36316625202c3938,0x0a3b38316625202c\n"
".quad 0x203233662e627573,0x25202c3039316625,0x6625202c39383166,0x636f6c2e0a3b3132\n"
".quad 0x2035393733203220,0x33662e6464610a31,0x2c31393166252032,0x202c303931662520\n"
".quad 0x6d660a3b33326625,0x3233662e6e722e61,0x202c323931662520,0x25202c3238316625\n"
".quad 0x316625202c303666,0x2e6275730a3b3139,0x3931662520323366,0x3937316625202c33\n"
".quad 0x0a3b33316625202c,0x33203220636f6c2e,0x64610a3120353937,0x6625203233662e64\n"
".quad 0x316625202c343931,0x34316625202c3339,0x33662e6275730a3b,0x2c35393166252032\n"
".quad 0x202c343931662520,0x64610a3b36316625,0x6625203233662e64,0x316625202c363931\n"
".quad 0x38316625202c3539,0x33662e6275730a3b,0x2c37393166252032,0x202c363931662520\n"
".quad 0x6c2e0a3b31326625,0x393733203220636f,0x2e6464610a312035,0x3931662520323366\n"
".quad 0x3739316625202c38,0x0a3b33326625202c,0x203233662e67656e,0x25202c3939316625\n"
".quad 0x6275730a3b313166,0x326625203233662e,0x39316625202c3030,0x3b30316625202c39\n"
".quad 0x203220636f6c2e0a,0x610a312035393733,0x25203233662e6464,0x6625202c31303266\n"
".quad 0x316625202c303032,0x662e6464610a3b33,0x3230326625203233,0x2c3130326625202c\n"
".quad 0x610a3b3431662520,0x25203233662e6464,0x6625202c33303266,0x316625202c323032\n"
".quad 0x662e6275730a3b37,0x3430326625203233,0x2c3330326625202c,0x2e0a3b3931662520\n"
".quad 0x3733203220636f6c,0x6464610a31203539,0x326625203233662e,0x30326625202c3530\n"
".quad 0x3b32326625202c34,0x3233662e6275730a,0x202c363032662520,0x25202c3530326625\n"
".quad 0x6275730a3b343266,0x326625203233662e,0x36316625202c3730,0x0a3b37316625202c\n"
".quad 0x33203220636f6c2e,0x64610a3120353937,0x6625203233662e64,0x326625202c383032\n"
".quad 0x38316625202c3730,0x33662e6275730a3b,0x2c39303266252032,0x202c383032662520\n"
".quad 0x75730a3b39316625,0x6625203233662e62,0x326625202c303132,0x31326625202c3930\n"
".quad 0x3220636f6c2e0a3b,0x0a31203539373320,0x203233662e646461,0x25202c3131326625\n"
".quad 0x6625202c30313266,0x2e6275730a3b3232,0x3132662520323366,0x3131326625202c32\n"
".quad 0x0a3b33326625202c,0x33203220636f6c2e,0x64610a3120353937,0x6625203233662e64\n"
".quad 0x326625202c333132,0x34326625202c3231,0x33662e766f6d0a3b,0x2c34313266252032\n"
".quad 0x3030384533663020,0x2e646c0a3b303030,0x33662e6d61726170,0x2c32323866252032\n"
".quad 0x5f524c395a5f5b20,0x6650434441425f64,0x61705f666d665f53,0x0a3b5d325f6d6172\n"
".quad 0x33203220636f6c2e,0x756d0a3120353937,0x6625203233662e6c,0x386625202c353132\n"
".quad 0x45336630202c3232,0x0a3b303030303038,0x203233662e766f6d,0x30202c3631326625\n"
".quad 0x3030303030453366,0x20636f6c2e0a3b30,0x3120353937332032,0x3233662e6c756d0a\n"
".quad 0x202c373132662520,0x30202c3837316625,0x4141414132443366,0x662e766f6d0a3b42\n"
".quad 0x3831326625203233,0x413244336630202c,0x6c2e0a3b42414141,0x393733203220636f\n"
".quad 0x2e6c756d0a312035,0x3132662520323366,0x3232386625202c39,0x414144336630202c\n"
".quad 0x756d0a3b42414141,0x6625203233662e6c,0x316625202c303232,0x43336630202c3235\n"
".quad 0x0a3b393345383336,0x203233662e6c756d,0x25202c3132326625,0x6630202c32323866\n"
".quad 0x3933453833454333,0x33662e6c756d0a3b,0x2c32323266252032,0x202c313331662520\n"
".quad 0x6d0a3b3132326625,0x25203233662e6c75,0x6625202c33323266,0x336630202c303031\n"
".quad 0x3b44434343434343,0x3233662e766f6d0a,0x202c343232662520,0x4343434343336630\n"
".quad 0x636f6c2e0a3b4443,0x2035393733203220,0x33662e6c756d0a31,0x2c35323266252032\n"
".quad 0x202c333031662520,0x4343434343336630,0x2e6c756d0a3b4443,0x3232662520323366\n"
".quad 0x3630316625202c36,0x434343336630202c,0x756d0a3b44434343,0x6625203233662e6c\n"
".quad 0x396625202c373232,0x3842336630202c37,0x6d0a3b3132383032,0x25203233662e6c75\n"
".quad 0x6625202c38323266,0x346630202c373232,0x3b30303030303431,0x2e6e722e616d660a\n"
".quad 0x3232662520323366,0x2c37376625202c39,0x4333374542663020,0x326625202c443346\n"
".quad 0x2e6275730a3b3832,0x3332662520323366,0x202c366625202c30,0x6d0a3b3932326625\n"
".quad 0x25203233662e6c75,0x6625202c31333266,0x436630202c373232,0x3b30303030303830\n"
".quad 0x2e6e722e616d660a,0x3332662520323366,0x2c37376625202c32,0x4332424442663020\n"
".quad 0x326625202c443242,0x2e616d660a3b3133,0x25203233662e6e72,0x6625202c33333266\n"
".quad 0x436630202c333232,0x2c30303030303830,0x0a3b323332662520,0x662e6e722e616d66\n"
".quad 0x3433326625203233,0x2c3133316625202c,0x202c313232662520,0x610a3b3232326625\n"
".quad 0x25203233662e6464,0x6625202c35333266,0x326625202c333332,0x2e616d660a3b3433\n"
".quad 0x25203233662e6e72,0x6625202c36333266,0x436630202c303232,0x2c30303030303830\n"
".quad 0x0a3b353332662520,0x203233662e627573,0x25202c3733326625,0x33326625202c3766\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x326625202c383332,0x30436630202c3532\n"
".quad 0x202c303030303038,0x6e0a3b3233326625,0x25203233662e6765,0x6625202c39333266\n"
".quad 0x616d660a3b313331,0x203233662e6e722e,0x25202c3034326625,0x6625202c39333266\n"
".quad 0x326625202c313232,0x636f6c2e0a3b3833,0x2035393733203220,0x6e722e616d660a31\n"
".quad 0x326625203233662e,0x35316625202c3134,0x3643336630202c32,0x25202c3933453833\n"
".quad 0x64610a3b30323266,0x6625203233662e64,0x326625202c323432,0x34326625202c3034\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x316625202c333432,0x31326625202c3636\n"
".quad 0x3234326625202c39,0x6e722e616d660a3b,0x326625203233662e,0x31326625202c3434\n"
".quad 0x3030436630202c37,0x25202c3030303030,0x75730a3b33343266,0x6625203233662e62\n"
".quad 0x396625202c353432,0x3b3434326625202c,0x2e6e722e616d660a,0x3432662520323366\n"
".quad 0x3332326625202c36,0x303830346630202c,0x6625202c30303030,0x6464610a3b323332\n"
".quad 0x326625203233662e,0x34326625202c3734,0x3433326625202c36,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x32326625202c3834,0x3830436630202c30,0x25202c3030303030\n"
".quad 0x75730a3b37343266,0x6625203233662e62,0x386625202c393432,0x3b3834326625202c\n"
".quad 0x2e6e722e616d660a,0x3532662520323366,0x3532326625202c30,0x303830346630202c\n"
".quad 0x6625202c30303030,0x616d660a3b323332,0x203233662e6e722e,0x25202c3135326625\n"
".quad 0x6625202c39333266,0x326625202c313232,0x636f6c2e0a3b3035,0x2035393733203220\n"
".quad 0x33662e6464610a31,0x2c32353266252032,0x202c313532662520,0x660a3b3134326625\n"
".quad 0x33662e6e722e616d,0x2c33353266252032,0x202c363631662520,0x25202c3931326625\n"
".quad 0x6d660a3b32353266,0x3233662e6e722e61,0x202c343532662520,0x30202c3731326625\n"
".quad 0x3030303030304366,0x3335326625202c30,0x33662e6275730a3b,0x2c35353266252032\n"
".quad 0x25202c3231662520,0x6d660a3b34353266,0x3233662e6e722e61,0x202c363532662520\n"
".quad 0x6630202c37376625,0x3032383032384433,0x3b3732326625202c,0x2e6e722e616d660a\n"
".quad 0x3532662520323366,0x3030316625202c37,0x434343336630202c,0x6625202c44434343\n"
".quad 0x616d660a3b363532,0x203233662e6e722e,0x25202c3835326625,0x6630202c33303166\n"
".quad 0x4443434343434333,0x3b3735326625202c,0x2e6e722e616d660a,0x3532662520323366\n"
".quad 0x3133316625202c39,0x2c3132326625202c,0x0a3b383532662520,0x662e6e722e616d66\n"
".quad 0x3036326625203233,0x2c3235316625202c,0x3833364333663020,0x326625202c393345\n"
".quad 0x2e616d660a3b3935,0x25203233662e6e72,0x6625202c31363266,0x326625202c363631\n"
".quad 0x36326625202c3931,0x722e616d660a3b30,0x6625203233662e6e,0x316625202c323632\n"
".quad 0x44336630202c3837,0x202c424141414132,0x660a3b3136326625,0x33662e6e722e616d\n"
".quad 0x2c33363266252032,0x202c333831662520,0x3030303845336630,0x36326625202c3030\n"
".quad 0x722e616d660a3b32,0x6625203233662e6e,0x316625202c343632,0x45336630202c3839\n"
".quad 0x202c303030303030,0x6e0a3b3336326625,0x25203233662e6765,0x6625202c35363266\n"
".quad 0x616d660a3b363032,0x203233662e6e722e,0x25202c3636326625,0x6625202c35363266\n"
".quad 0x326625202c363132,0x636f6c2e0a3b3436,0x2035393733203220,0x33662e6275730a31\n"
".quad 0x2c37363266252032,0x25202c3031662520,0x656e0a3b36363266,0x6625203233662e67\n"
".quad 0x316625202c383632,0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c39363266\n"
".quad 0x326625202c383632,0x35326625202c3432,0x20636f6c2e0a3b36,0x3120353937332032\n"
".quad 0x2e6e722e616d660a,0x3732662520323366,0x3330316625202c30,0x434343336630202c\n"
".quad 0x6625202c44434343,0x616d660a3b393632,0x203233662e6e722e,0x25202c3137326625\n"
".quad 0x6625202c31333166,0x326625202c313232,0x2e616d660a3b3037,0x25203233662e6e72\n"
".quad 0x6625202c32373266,0x336630202c323531,0x2c39334538333643,0x0a3b313732662520\n"
".quad 0x662e6e722e616d66,0x3337326625203233,0x2c3636316625202c,0x202c393132662520\n"
".quad 0x660a3b3237326625,0x33662e6e722e616d,0x2c34373266252032,0x202c383731662520\n"
".quad 0x4141413244336630,0x37326625202c4241,0x662e67656e0a3b33,0x3537326625203233\n"
".quad 0x3b3338316625202c,0x2e6e722e616d660a,0x3732662520323366,0x3537326625202c36\n"
".quad 0x2c3431326625202c,0x0a3b343732662520,0x203233662e67656e,0x25202c3737326625\n"
".quad 0x6d660a3b38393166,0x3233662e6e722e61,0x202c383732662520,0x25202c3737326625\n"
".quad 0x6625202c36313266,0x616d660a3b363732,0x203233662e6e722e,0x25202c3937326625\n"
".quad 0x6625202c35363266,0x326625202c363132,0x636f6c2e0a3b3837,0x2035393733203220\n"
".quad 0x33662e6275730a31,0x2c30383266252032,0x25202c3131662520,0x656e0a3b39373266\n"
".quad 0x6625203233662e67,0x316625202c313832,0x2e616d660a3b3330,0x25203233662e6e72\n"
".quad 0x6625202c32383266,0x326625202c313832,0x36326625202c3432,0x20636f6c2e0a3b39\n"
".quad 0x3120353937332032,0x2e6e722e616d660a,0x3832662520323366,0x3133316625202c33\n"
".quad 0x2c3132326625202c,0x0a3b323832662520,0x662e6e722e616d66,0x3438326625203233\n"
".quad 0x2c3235316625202c,0x3833364333663020,0x326625202c393345,0x2e616d660a3b3338\n"
".quad 0x25203233662e6e72,0x6625202c35383266,0x326625202c363631,0x38326625202c3931\n"
".quad 0x722e616d660a3b34,0x6625203233662e6e,0x316625202c363832,0x44336630202c3837\n"
".quad 0x202c424141414132,0x660a3b3538326625,0x33662e6e722e616d,0x2c37383266252032\n"
".quad 0x202c333831662520,0x3030303845336630,0x38326625202c3030,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x326625202c383832,0x31326625202c3737,0x3738326625202c36\n"
".quad 0x3220636f6c2e0a3b,0x0a31203539373320,0x662e6e722e616d66,0x3938326625203233\n"
".quad 0x2c3630326625202c,0x3030304533663020,0x326625202c303030,0x2e6275730a3b3838\n"
".quad 0x3932662520323366,0x2c33316625202c30,0x0a3b393832662520,0x662e6e722e616d66\n"
".quad 0x3139326625203233,0x2c3138326625202c,0x202c343232662520,0x2e0a3b3735326625\n"
".quad 0x3733203220636f6c,0x616d660a31203539,0x203233662e6e722e,0x25202c3239326625\n"
".quad 0x6625202c31333166,0x326625202c313232,0x2e616d660a3b3139,0x25203233662e6e72\n"
".quad 0x6625202c33393266,0x336630202c323531,0x2c39334538333643,0x0a3b323932662520\n"
".quad 0x662e6e722e616d66,0x3439326625203233,0x2c3636316625202c,0x202c393132662520\n"
".quad 0x660a3b3339326625,0x33662e6e722e616d,0x2c35393266252032,0x202c383731662520\n"
".quad 0x4141413244336630,0x39326625202c4241,0x722e616d660a3b34,0x6625203233662e6e\n"
".quad 0x326625202c363932,0x31326625202c3537,0x3539326625202c34,0x3220636f6c2e0a3b\n"
".quad 0x0a31203539373320,0x662e6e722e616d66,0x3739326625203233,0x2c3839316625202c\n"
".quad 0x3030304533663020,0x326625202c303030,0x2e616d660a3b3639,0x25203233662e6e72\n"
".quad 0x6625202c38393266,0x336630202c363032,0x2c30303030303045,0x0a3b373932662520\n"
".quad 0x203233662e627573,0x25202c3939326625,0x326625202c343166,0x2e616d660a3b3839\n"
".quad 0x25203233662e6e72,0x6625202c30303366,0x436630202c363232,0x2c30303030303830\n"
".quad 0x0a3b323332662520,0x662e6e722e616d66,0x3130336625203233,0x2c3933326625202c\n"
".quad 0x202c313232662520,0x2e0a3b3030336625,0x3733203220636f6c,0x6464610a31203539\n"
".quad 0x336625203233662e,0x30336625202c3230,0x3134326625202c31,0x33662e67656e0a3b\n"
".quad 0x2c33303366252032,0x0a3b363631662520,0x662e6e722e616d66,0x3430336625203233\n"
".quad 0x2c3330336625202c,0x202c393132662520,0x2e0a3b3230336625,0x3733203220636f6c\n"
".quad 0x616d660a31203539,0x203233662e6e722e,0x25202c3530336625,0x6630202c38373166\n"
".quad 0x4241414141324433,0x3b3731326625202c,0x3233662e6464610a,0x202c363033662520\n"
".quad 0x25202c3430336625,0x75730a3b35303366,0x6625203233662e62,0x316625202c373033\n"
".quad 0x3630336625202c35,0x6e722e616d660a3b,0x336625203233662e,0x30316625202c3830\n"
".quad 0x4343336630202c36,0x25202c4443434343,0x6d660a3b37353266,0x3233662e6e722e61\n"
".quad 0x202c393033662520,0x25202c3133316625,0x6625202c31323266,0x616d660a3b383033\n"
".quad 0x203233662e6e722e,0x25202c3031336625,0x6630202c32353166,0x3933453833364333\n"
".quad 0x3b3930336625202c,0x2e6e722e616d660a,0x3133662520323366,0x3330336625202c31\n"
".quad 0x2c3931326625202c,0x0a3b303133662520,0x203233662e67656e,0x25202c3231336625\n"
".quad 0x6d660a3b38373166,0x3233662e6e722e61,0x202c333133662520,0x25202c3231336625\n"
".quad 0x6625202c38313266,0x6f6c2e0a3b313133,0x3539373320322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x316625202c343133,0x31326625202c3239,0x3331336625202c35\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x37326625202c3531,0x3631326625202c37\n"
".quad 0x3b3431336625202c,0x203220636f6c2e0a,0x660a312035393733,0x33662e6e722e616d\n"
".quad 0x2c36313366252032,0x202c333132662520,0x3030303045336630,0x31336625202c3030\n"
".quad 0x662e6275730a3b35,0x3731336625203233,0x202c36316625202c,0x660a3b3631336625\n"
".quad 0x33662e6e722e616d,0x2c38313366252032,0x202c333031662520,0x4343434343336630\n"
".quad 0x35326625202c4443,0x722e616d660a3b36,0x6625203233662e6e,0x316625202c393133\n"
".quad 0x43336630202c3630,0x202c444343434343,0x660a3b3831336625,0x33662e6e722e616d\n"
".quad 0x2c30323366252032,0x202c323232662520,0x3030303030436630,0x31336625202c3030\n"
".quad 0x722e616d660a3b39,0x6625203233662e6e,0x326625202c313233,0x30436630202c3032\n"
".quad 0x202c303030303030,0x660a3b3032336625,0x33662e6e722e616d,0x2c32323366252032\n"
".quad 0x202c383831662520,0x3030303845336630,0x32336625202c3030,0x722e616d660a3b31\n"
".quad 0x6625203233662e6e,0x326625202c333233,0x45336630202c3630,0x202c303030303030\n"
".quad 0x6e0a3b3232336625,0x25203233662e6765,0x6625202c34323366,0x616d660a3b333132\n"
".quad 0x203233662e6e722e,0x25202c3532336625,0x6625202c34323366,0x336625202c363132\n"
".quad 0x636f6c2e0a3b3332,0x2035393733203220,0x33662e6275730a31,0x2c36323366252032\n"
".quad 0x25202c3731662520,0x6d660a3b35323366,0x3233662e6e722e61,0x202c373233662520\n"
".quad 0x30202c3630316625,0x4343434343433366,0x3936326625202c44,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x33316625202c3832,0x3132326625202c31,0x3b3732336625202c\n"
".quad 0x2e6e722e616d660a,0x3233662520323366,0x3235316625202c39,0x333643336630202c\n"
".quad 0x6625202c39334538,0x616d660a3b383233,0x203233662e6e722e,0x25202c3033336625\n"
".quad 0x6625202c33303366,0x336625202c393132,0x2e616d660a3b3932,0x25203233662e6e72\n"
".quad 0x6625202c31333366,0x326625202c323133,0x33336625202c3831,0x662e67656e0a3b30\n"
".quad 0x3233336625203233,0x3b3239316625202c,0x2e6e722e616d660a,0x3333662520323366\n"
".quad 0x3233336625202c33,0x2c3531326625202c,0x0a3b313333662520,0x33203220636f6c2e\n"
".quad 0x6d660a3120353937,0x3233662e6e722e61,0x202c343333662520,0x30202c3839316625\n"
".quad 0x3030303030453366,0x3333336625202c30,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x31326625202c3533,0x3045336630202c33,0x25202c3030303030,0x75730a3b34333366\n"
".quad 0x6625203233662e62,0x316625202c363333,0x3533336625202c38,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x38326625202c3733,0x3432326625202c31,0x3b3635326625202c\n"
".quad 0x203220636f6c2e0a,0x660a312035393733,0x33662e6e722e616d,0x2c38333366252032\n"
".quad 0x202c363031662520,0x4343434343336630,0x33336625202c4443,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x326625202c393333,0x30436630202c3232,0x202c303030303030\n"
".quad 0x660a3b3833336625,0x33662e6e722e616d,0x2c30343366252032,0x202c303232662520\n"
".quad 0x3030303030436630,0x33336625202c3030,0x662e67656e0a3b39,0x3134336625203233\n"
".quad 0x3b3838316625202c,0x2e6e722e616d660a,0x3433662520323366,0x3134336625202c32\n"
".quad 0x2c3431326625202c,0x0a3b303433662520,0x662e6e722e616d66,0x3334336625203233\n"
".quad 0x2c3536326625202c,0x202c363132662520,0x660a3b3234336625,0x33662e6e722e616d\n"
".quad 0x2c34343366252032,0x202c343233662520,0x25202c3631326625,0x6c2e0a3b33343366\n"
".quad 0x393733203220636f,0x2e6275730a312035,0x3433662520323366,0x2c39316625202c35\n"
".quad 0x0a3b343433662520,0x662e6e722e616d66,0x3634336625203233,0x2c3632326625202c\n"
".quad 0x3030383034663020,0x326625202c303030,0x2e616d660a3b3233,0x25203233662e6e72\n"
".quad 0x6625202c37343366,0x326625202c393332,0x34336625202c3132,0x20636f6c2e0a3b36\n"
".quad 0x3120353937332032,0x3233662e6464610a,0x202c383433662520,0x25202c3734336625\n"
".quad 0x6d660a3b31343266,0x3233662e6e722e61,0x202c393433662520,0x25202c3330336625\n"
".quad 0x6625202c39313266,0x6f6c2e0a3b383433,0x3539373320322063,0x662e6464610a3120\n"
".quad 0x3035336625203233,0x2c3934336625202c,0x0a3b353033662520,0x203233662e627573\n"
".quad 0x25202c3135336625,0x336625202c303266,0x2e67656e0a3b3035,0x3533662520323366\n"
".quad 0x3630316625202c32,0x6e722e616d660a3b,0x336625203233662e,0x35336625202c3335\n"
".quad 0x3432326625202c32,0x3b3735326625202c,0x203220636f6c2e0a,0x660a312035393733\n"
".quad 0x33662e6e722e616d,0x2c34353366252032,0x202c313331662520,0x25202c3132326625\n"
".quad 0x6d660a3b33353366,0x3233662e6e722e61,0x202c353533662520,0x30202c3235316625\n"
".quad 0x3345383336433366,0x3435336625202c39,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x30336625202c3635,0x3931326625202c33,0x3b3535336625202c,0x2e6e722e616d660a\n"
".quad 0x3533662520323366,0x3231336625202c37,0x2c3831326625202c,0x0a3b363533662520\n"
".quad 0x662e6e722e616d66,0x3835336625203233,0x2c3233336625202c,0x202c353132662520\n"
".quad 0x660a3b3735336625,0x33662e6e722e616d,0x2c39353366252032,0x202c373732662520\n"
".quad 0x25202c3631326625,0x6d660a3b38353366,0x3233662e6e722e61,0x202c303633662520\n"
".quad 0x25202c3432336625,0x6625202c36313266,0x6f6c2e0a3b393533,0x3539373320322063\n"
".quad 0x662e6275730a3120,0x3136336625203233,0x202c31326625202c,0x660a3b3036336625\n"
".quad 0x33662e6e722e616d,0x2c32363366252032,0x202c323533662520,0x25202c3432326625\n"
".quad 0x6c2e0a3b38313366,0x393733203220636f,0x2e616d660a312035,0x25203233662e6e72\n"
".quad 0x6625202c33363366,0x436630202c323232,0x2c30303030303030,0x0a3b323633662520\n"
".quad 0x662e6e722e616d66,0x3436336625203233,0x2c3032326625202c,0x3030303043663020\n"
".quad 0x336625202c303030,0x2e616d660a3b3336,0x25203233662e6e72,0x6625202c35363366\n"
".quad 0x326625202c313433,0x36336625202c3431,0x20636f6c2e0a3b34,0x3120353937332032\n"
".quad 0x2e6e722e616d660a,0x3633662520323366,0x3630326625202c36,0x303045336630202c\n"
".quad 0x6625202c30303030,0x616d660a3b353633,0x203233662e6e722e,0x25202c3736336625\n"
".quad 0x6630202c33313266,0x3030303030304533,0x3b3636336625202c,0x3233662e6275730a\n"
".quad 0x202c383633662520,0x6625202c32326625,0x616d660a3b373633,0x203233662e6e722e\n"
".quad 0x25202c3936336625,0x6625202c32353366,0x326625202c343232,0x636f6c2e0a3b3936\n"
".quad 0x2035393733203220,0x6e722e616d660a31,0x336625203233662e,0x33316625202c3037\n"
".quad 0x3132326625202c31,0x3b3936336625202c,0x2e6e722e616d660a,0x3733662520323366\n"
".quad 0x3235316625202c31,0x333643336630202c,0x6625202c39334538,0x616d660a3b303733\n"
".quad 0x203233662e6e722e,0x25202c3237336625,0x6625202c33303366,0x336625202c393132\n"
".quad 0x2e616d660a3b3137,0x25203233662e6e72,0x6625202c33373366,0x326625202c323133\n"
".quad 0x37336625202c3831,0x20636f6c2e0a3b32,0x3120353937332032,0x2e6e722e616d660a\n"
".quad 0x3733662520323366,0x3239316625202c34,0x2c3531326625202c,0x0a3b333733662520\n"
".quad 0x662e6e722e616d66,0x3537336625203233,0x2c3839316625202c,0x3030304533663020\n"
".quad 0x336625202c303030,0x2e616d660a3b3437,0x25203233662e6e72,0x6625202c36373366\n"
".quad 0x326625202c343233,0x37336625202c3631,0x20636f6c2e0a3b35,0x3120353937332032\n"
".quad 0x3233662e6275730a,0x202c373733662520,0x6625202c33326625,0x616d660a3b363733\n"
".quad 0x203233662e6e722e,0x25202c3837336625,0x6625202c32353366,0x336625202c343232\n"
".quad 0x636f6c2e0a3b3733,0x2035393733203220,0x6e722e616d660a31,0x336625203233662e\n"
".quad 0x32326625202c3937,0x3030436630202c32,0x25202c3030303030,0x6d660a3b38373366\n"
".quad 0x3233662e6e722e61,0x202c303833662520,0x30202c3032326625,0x3030303030304366\n"
".quad 0x3937336625202c30,0x6e722e616d660a3b,0x336625203233662e,0x38316625202c3138\n"
".quad 0x3845336630202c38,0x25202c3030303030,0x6d660a3b30383366,0x3233662e6e722e61\n"
".quad 0x202c323833662520,0x25202c3536326625,0x6625202c36313266,0x6f6c2e0a3b313833\n"
".quad 0x3539373320322063,0x722e616d660a3120,0x6625203233662e6e,0x326625202c333833\n"
".quad 0x45336630202c3331,0x202c303030303030,0x730a3b3238336625,0x25203233662e6275\n"
".quad 0x6625202c34383366,0x38336625202c3432,0x61702e646c0a3b33,0x203436752e6d6172\n"
".quad 0x202c3030356c7225,0x645f524c395a5f5b,0x536650434441425f,0x7261705f666d665f\n"
".quad 0x2e0a3b5d335f6d61,0x3633203220636f6c,0x64616d0a31203833,0x203436732e6f6c2e\n"
".quad 0x202c3538316c7225,0x25202c37316c7225,0x25202c3030356c72,0x2e646c0a3b356c72\n"
".quad 0x36752e6d61726170,0x3739346c72252034,0x524c395a5f5b202c,0x50434441425f645f\n"
".quad 0x705f666d665f5366,0x3b5d315f6d617261,0x6f742e617476630a,0x2e6c61626f6c672e\n"
".quad 0x316c722520343675,0x346c7225202c3638,0x2e6c68730a3b3739,0x316c722520343662\n"
".quad 0x316c7225202c3738,0x0a3b3233202c3538,0x203436732e726873,0x202c3838316c7225\n"
".quad 0x202c3738316c7225,0x636f6c2e0a3b3233,0x2030333733203220,0x36622e6c68730a31\n"
".quad 0x3938316c72252034,0x3838316c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c303931,0x6c7225202c363831,0x6f6c2e0a3b393831,0x3939373320322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3039316c72255b20,0x3033326625202c5d\n"
".quad 0x36732e6464610a3b,0x3139316c72252034,0x2c37316c7225202c,0x2e0a3b3639303420\n"
".quad 0x3733203220636f6c,0x64616d0a31203133,0x203436732e6f6c2e,0x202c3239316c7225\n"
".quad 0x202c3139316c7225,0x202c3030356c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3339316c,0x3233202c3239316c,0x36732e7268730a3b,0x3439316c72252034\n"
".quad 0x3339316c7225202c,0x6c2e0a3b3233202c,0x333733203220636f,0x2e6c68730a312031\n"
".quad 0x316c722520343662,0x316c7225202c3539,0x610a3b32202c3439,0x25203436732e6464\n"
".quad 0x25202c3639316c72,0x25202c3638316c72,0x2e0a3b3539316c72,0x3833203220636f6c\n"
".quad 0x2e74730a31203030,0x662e6c61626f6c67,0x316c72255b203233,0x326625202c5d3639\n"
".quad 0x2e6464610a3b3733,0x316c722520343673,0x316c7225202c3739,0x3b32393138202c37\n"
".quad 0x203220636f6c2e0a,0x6d0a312032333733,0x36732e6f6c2e6461,0x3839316c72252034\n"
".quad 0x3739316c7225202c,0x3030356c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3939316c7225,0x202c3839316c7225,0x2e7268730a3b3233,0x326c722520343673\n"
".quad 0x316c7225202c3030,0x0a3b3233202c3939,0x33203220636f6c2e,0x68730a3120323337\n"
".quad 0x7225203436622e6c,0x7225202c3130326c,0x3b32202c3030326c,0x3436732e6464610a\n"
".quad 0x2c3230326c722520,0x2c3638316c722520,0x3b3130326c722520,0x203220636f6c2e0a\n"
".quad 0x730a312031303833,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3230326c\n"
".quad 0x64610a3b35343266,0x7225203436732e64,0x7225202c3330326c,0x323231202c37316c\n"
".quad 0x636f6c2e0a3b3838,0x2033333733203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c343032,0x6c7225202c333032,0x6c7225202c303035,0x622e6c68730a3b35\n"
".quad 0x30326c7225203436,0x30326c7225202c35,0x730a3b3233202c34,0x25203436732e7268\n"
".quad 0x25202c3630326c72,0x33202c3530326c72,0x20636f6c2e0a3b32,0x3120333337332032\n"
".quad 0x3436622e6c68730a,0x2c3730326c722520,0x2c3630326c722520,0x2e6464610a3b3220\n"
".quad 0x326c722520343673,0x316c7225202c3830,0x326c7225202c3638,0x636f6c2e0a3b3730\n"
".quad 0x2032303833203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3830326c72255b\n"
".quad 0x3b3934326625202c,0x3436732e6464610a,0x2c3930326c722520,0x202c37316c722520\n"
".quad 0x2e0a3b3438333631,0x3733203220636f6c,0x64616d0a31203433,0x203436732e6f6c2e\n"
".quad 0x202c3031326c7225,0x202c3930326c7225,0x202c3030356c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3131326c,0x3233202c3031326c,0x36732e7268730a3b\n"
".quad 0x3231326c72252034,0x3131326c7225202c,0x6c2e0a3b3233202c,0x333733203220636f\n"
".quad 0x2e6c68730a312034,0x326c722520343662,0x326c7225202c3331,0x610a3b32202c3231\n"
".quad 0x25203436732e6464,0x25202c3431326c72,0x25202c3638316c72,0x2e0a3b3331326c72\n"
".quad 0x3833203220636f6c,0x2e74730a31203330,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x326625202c5d3431,0x2e6464610a3b3535,0x326c722520343673,0x316c7225202c3531\n"
".quad 0x3038343032202c37,0x3220636f6c2e0a3b,0x0a31203533373320,0x732e6f6c2e64616d\n"
".quad 0x31326c7225203436,0x31326c7225202c36,0x30356c7225202c35,0x3b356c7225202c30\n"
".quad 0x3436622e6c68730a,0x2c3731326c722520,0x2c3631326c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c383132,0x3b3233202c373132,0x203220636f6c2e0a\n"
".quad 0x730a312035333733,0x25203436622e6c68,0x25202c3931326c72,0x32202c3831326c72\n"
".quad 0x36732e6464610a3b,0x3032326c72252034,0x3638316c7225202c,0x3931326c7225202c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203430383320,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3032326c72,0x610a3b3736326625,0x25203436732e6464,0x25202c3132326c72\n"
".quad 0x3432202c37316c72,0x6f6c2e0a3b363735,0x3633373320322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3232326c,0x7225202c3132326c,0x7225202c3030356c\n"
".quad 0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3332,0x0a3b3233202c3232\n"
".quad 0x203436732e726873,0x202c3432326c7225,0x202c3332326c7225,0x636f6c2e0a3b3233\n"
".quad 0x2036333733203220,0x36622e6c68730a31,0x3532326c72252034,0x3432326c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c363232,0x6c7225202c363831\n"
".quad 0x6f6c2e0a3b353232,0x3530383320322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3632326c72255b20,0x3038326625202c5d,0x36732e6464610a3b,0x3732326c72252034\n"
".quad 0x2c37316c7225202c,0x0a3b323736383220,0x33203220636f6c2e,0x616d0a3120373337\n"
".quad 0x3436732e6f6c2e64,0x2c3832326c722520,0x2c3732326c722520,0x2c3030356c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3932326c72,0x33202c3832326c72\n"
".quad 0x732e7268730a3b32,0x33326c7225203436,0x32326c7225202c30,0x2e0a3b3233202c39\n"
".quad 0x3733203220636f6c,0x6c68730a31203733,0x6c7225203436622e,0x6c7225202c313332\n"
".quad 0x0a3b32202c303332,0x203436732e646461,0x202c3233326c7225,0x202c3638316c7225\n"
".quad 0x0a3b3133326c7225,0x33203220636f6c2e,0x74730a3120363038,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d323332,0x6464610a3b303932,0x6c7225203436732e\n"
".quad 0x6c7225202c333332,0x36373233202c3731,0x20636f6c2e0a3b38,0x3120383337332032\n"
".quad 0x2e6f6c2e64616d0a,0x326c722520343673,0x326c7225202c3433,0x356c7225202c3333\n"
".quad 0x356c7225202c3030,0x36622e6c68730a3b,0x3533326c72252034,0x3433326c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3633326c,0x3233202c3533326c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203833373320,0x203436622e6c6873,0x202c3733326c7225\n"
".quad 0x202c3633326c7225,0x732e6464610a3b32,0x33326c7225203436,0x38316c7225202c38\n"
".quad 0x33326c7225202c36,0x20636f6c2e0a3b37,0x3120373038332032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3833326c7225,0x0a3b393932662520,0x203436732e646461\n"
".quad 0x202c3933326c7225,0x33202c37316c7225,0x6c2e0a3b34363836,0x333733203220636f\n"
".quad 0x2e64616d0a312039,0x25203436732e6f6c,0x25202c3034326c72,0x25202c3933326c72\n"
".quad 0x25202c3030356c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c313432\n"
".quad 0x3b3233202c303432,0x3436732e7268730a,0x2c3234326c722520,0x2c3134326c722520\n"
".quad 0x6f6c2e0a3b323320,0x3933373320322063,0x622e6c68730a3120,0x34326c7225203436\n"
".quad 0x34326c7225202c33,0x64610a3b32202c32,0x7225203436732e64,0x7225202c3434326c\n"
".quad 0x7225202c3638316c,0x6c2e0a3b3334326c,0x303833203220636f,0x672e74730a312038\n"
".quad 0x33662e6c61626f6c,0x34326c72255b2032,0x30336625202c5d34,0x732e6464610a3b37\n"
".quad 0x34326c7225203436,0x37316c7225202c35,0x3b3036393034202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312030343733,0x36732e6f6c2e6461,0x3634326c72252034,0x3534326c7225202c\n"
".quad 0x3030356c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3734326c7225\n"
".quad 0x202c3634326c7225,0x2e7268730a3b3233,0x326c722520343673,0x326c7225202c3834\n"
".quad 0x0a3b3233202c3734,0x33203220636f6c2e,0x68730a3120303437,0x7225203436622e6c\n"
".quad 0x7225202c3934326c,0x3b32202c3834326c,0x3436732e6464610a,0x2c3035326c722520\n"
".quad 0x2c3638316c722520,0x3b3934326c722520,0x203220636f6c2e0a,0x730a312039303833\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3035326c,0x64610a3b37313366\n"
".quad 0x7225203436732e64,0x7225202c3135326c,0x303534202c37316c,0x636f6c2e0a3b3635\n"
".quad 0x2031343733203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c323532\n"
".quad 0x6c7225202c313532,0x6c7225202c303035,0x622e6c68730a3b35,0x35326c7225203436\n"
".quad 0x35326c7225202c33,0x730a3b3233202c32,0x25203436732e7268,0x25202c3435326c72\n"
".quad 0x33202c3335326c72,0x20636f6c2e0a3b32,0x3120313437332032,0x3436622e6c68730a\n"
".quad 0x2c3535326c722520,0x2c3435326c722520,0x2e6464610a3b3220,0x326c722520343673\n"
".quad 0x316c7225202c3635,0x326c7225202c3638,0x636f6c2e0a3b3535,0x2030313833203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3635326c72255b,0x3b3632336625202c\n"
".quad 0x3436732e6464610a,0x2c3735326c722520,0x202c37316c722520,0x2e0a3b3235313934\n"
".quad 0x3733203220636f6c,0x64616d0a31203234,0x203436732e6f6c2e,0x202c3835326c7225\n"
".quad 0x202c3735326c7225,0x202c3030356c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3935326c,0x3233202c3835326c,0x36732e7268730a3b,0x3036326c72252034\n"
".quad 0x3935326c7225202c,0x6c2e0a3b3233202c,0x343733203220636f,0x2e6c68730a312032\n"
".quad 0x326c722520343662,0x326c7225202c3136,0x610a3b32202c3036,0x25203436732e6464\n"
".quad 0x25202c3236326c72,0x25202c3638316c72,0x2e0a3b3136326c72,0x3833203220636f6c\n"
".quad 0x2e74730a31203131,0x662e6c61626f6c67,0x326c72255b203233,0x336625202c5d3236\n"
".quad 0x636f6c2e0a3b3633,0x2033343733203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c343632,0x356c7225202c3831,0x356c7225202c3030,0x36622e6c68730a3b\n"
".quad 0x3536326c72252034,0x3436326c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3636326c,0x3233202c3536326c,0x3220636f6c2e0a3b,0x0a31203334373320\n"
".quad 0x203436622e6c6873,0x202c3736326c7225,0x202c3636326c7225,0x732e6464610a3b32\n"
".quad 0x36326c7225203436,0x38316c7225202c38,0x36326c7225202c36,0x20636f6c2e0a3b37\n"
".quad 0x3120323138332032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3836326c7225\n"
".quad 0x0a3b353433662520,0x33203220636f6c2e,0x616d0a3120343437,0x3436732e6f6c2e64\n"
".quad 0x2c3037326c722520,0x202c34326c722520,0x202c3030356c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3137326c,0x3233202c3037326c,0x36732e7268730a3b\n"
".quad 0x3237326c72252034,0x3137326c7225202c,0x6c2e0a3b3233202c,0x343733203220636f\n"
".quad 0x2e6c68730a312034,0x326c722520343662,0x326c7225202c3337,0x610a3b32202c3237\n"
".quad 0x25203436732e6464,0x25202c3437326c72,0x25202c3638316c72,0x2e0a3b3337326c72\n"
".quad 0x3833203220636f6c,0x2e74730a31203331,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x336625202c5d3437,0x636f6c2e0a3b3135,0x2035343733203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c363732,0x356c7225202c3932,0x356c7225202c3030\n"
".quad 0x36622e6c68730a3b,0x3737326c72252034,0x3637326c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3837326c,0x3233202c3737326c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203534373320,0x203436622e6c6873,0x202c3937326c7225,0x202c3837326c7225\n"
".quad 0x732e6464610a3b32,0x38326c7225203436,0x38316c7225202c30,0x37326c7225202c36\n"
".quad 0x20636f6c2e0a3b39,0x3120343138332032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3038326c7225,0x0a3b313633662520,0x33203220636f6c2e,0x616d0a3120363437\n"
".quad 0x3436732e6f6c2e64,0x2c3238326c722520,0x202c34336c722520,0x202c3030356c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3338326c,0x3233202c3238326c\n"
".quad 0x36732e7268730a3b,0x3438326c72252034,0x3338326c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x343733203220636f,0x2e6c68730a312036,0x326c722520343662,0x326c7225202c3538\n"
".quad 0x610a3b32202c3438,0x25203436732e6464,0x25202c3638326c72,0x25202c3638316c72\n"
".quad 0x2e0a3b3538326c72,0x3833203220636f6c,0x2e74730a31203531,0x662e6c61626f6c67\n"
".quad 0x326c72255b203233,0x336625202c5d3638,0x636f6c2e0a3b3836,0x2037343733203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c383832,0x356c7225202c3933\n"
".quad 0x356c7225202c3030,0x36622e6c68730a3b,0x3938326c72252034,0x3838326c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3039326c,0x3233202c3938326c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203734373320,0x203436622e6c6873,0x202c3139326c7225\n"
".quad 0x202c3039326c7225,0x732e6464610a3b32,0x39326c7225203436,0x38316c7225202c32\n"
".quad 0x39326c7225202c36,0x20636f6c2e0a3b31,0x3120363138332032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3239326c7225,0x0a3b373733662520,0x33203220636f6c2e\n"
".quad 0x616d0a3120383437,0x3436732e6f6c2e64,0x2c3439326c722520,0x202c34346c722520\n"
".quad 0x202c3030356c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3539326c\n"
".quad 0x3233202c3439326c,0x36732e7268730a3b,0x3639326c72252034,0x3539326c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x343733203220636f,0x2e6c68730a312038,0x326c722520343662\n"
".quad 0x326c7225202c3739,0x610a3b32202c3639,0x25203436732e6464,0x25202c3839326c72\n"
".quad 0x25202c3638316c72,0x2e0a3b3739326c72,0x3833203220636f6c,0x2e74730a31203731\n"
".quad 0x662e6c61626f6c67,0x326c72255b203233,0x336625202c5d3839,0x636f6c2e0a3b3438\n"
".quad 0x2030323833203220,0x0a0a3b7465720a32,0x0a3a365f30334242,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c393934,0x41425f645f524c39,0x6d665f5366504344\n"
".quad 0x5f6d617261705f66,0x636f6c2e0a3b5d33,0x2031333733203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c343033,0x346c7225202c3535,0x356c7225202c3939\n"
".quad 0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3639346c72,0x5f645f524c395a5f\n"
".quad 0x5f53665043444142,0x617261705f666d66,0x76630a3b5d315f6d,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x2c3530336c722520,0x3b3639346c722520,0x3436622e6c68730a\n"
".quad 0x2c3630336c722520,0x2c3430336c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c373033,0x3b3233202c363033,0x203220636f6c2e0a,0x730a312031333733\n"
".quad 0x25203436622e6c68,0x25202c3830336c72,0x32202c3730336c72,0x36732e6464610a3b\n"
".quad 0x3930336c72252034,0x3530336c7225202c,0x3830336c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203437373320,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3930336c72\n"
".quad 0x6464610a3b386625,0x6c7225203436732e,0x6c7225202c303133,0x32393138202c3435\n"
".quad 0x3220636f6c2e0a3b,0x0a31203233373320,0x732e6f6c2e64616d,0x31336c7225203436\n"
".quad 0x31336c7225202c31,0x39346c7225202c30,0x3b356c7225202c39,0x3436622e6c68730a\n"
".quad 0x2c3231336c722520,0x2c3131336c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c333133,0x3b3233202c323133,0x203220636f6c2e0a,0x730a312032333733\n"
".quad 0x25203436622e6c68,0x25202c3431336c72,0x32202c3331336c72,0x36732e6464610a3b\n"
".quad 0x3531336c72252034,0x3530336c7225202c,0x3431336c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203537373320,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3531336c72\n"
".quad 0x6c2e0a3b32316625,0x333733203220636f,0x2e64616d0a312033,0x25203436732e6f6c\n"
".quad 0x25202c3731336c72,0x7225202c32366c72,0x7225202c3939346c,0x2e6c68730a3b356c\n"
".quad 0x336c722520343662,0x336c7225202c3831,0x0a3b3233202c3731,0x203436732e726873\n"
".quad 0x202c3931336c7225,0x202c3831336c7225,0x636f6c2e0a3b3233,0x2033333733203220\n"
".quad 0x36622e6c68730a31,0x3032336c72252034,0x3931336c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c313233,0x6c7225202c353033,0x6f6c2e0a3b303233\n"
".quad 0x3637373320322063,0x6c672e74730a3120,0x3233662e6c61626f,0x3132336c72255b20\n"
".quad 0x0a3b376625202c5d,0x203436732e646461,0x202c3232336c7225,0x31202c34356c7225\n"
".quad 0x6c2e0a3b34383336,0x333733203220636f,0x2e64616d0a312034,0x25203436732e6f6c\n"
".quad 0x25202c3332336c72,0x25202c3232336c72,0x25202c3939346c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c343233,0x3b3233202c333233,0x3436732e7268730a\n"
".quad 0x2c3532336c722520,0x2c3432336c722520,0x6f6c2e0a3b323320,0x3433373320322063\n"
".quad 0x622e6c68730a3120,0x32336c7225203436,0x32336c7225202c36,0x64610a3b32202c35\n"
".quad 0x7225203436732e64,0x7225202c3732336c,0x7225202c3530336c,0x6c2e0a3b3632336c\n"
".quad 0x373733203220636f,0x672e74730a312037,0x33662e6c61626f6c,0x32336c72255b2032\n"
".quad 0x3b396625202c5d37,0x3436732e6464610a,0x2c3832336c722520,0x202c34356c722520\n"
".quad 0x2e0a3b3038343032,0x3733203220636f6c,0x64616d0a31203533,0x203436732e6f6c2e\n"
".quad 0x202c3932336c7225,0x202c3832336c7225,0x202c3939346c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3033336c,0x3233202c3932336c,0x36732e7268730a3b\n"
".quad 0x3133336c72252034,0x3033336c7225202c,0x6c2e0a3b3233202c,0x333733203220636f\n"
".quad 0x2e6c68730a312035,0x336c722520343662,0x336c7225202c3233,0x610a3b32202c3133\n"
".quad 0x25203436732e6464,0x25202c3333336c72,0x25202c3530336c72,0x2e0a3b3233336c72\n"
".quad 0x3733203220636f6c,0x2e74730a31203837,0x662e6c61626f6c67,0x336c72255b203233\n"
".quad 0x316625202c5d3333,0x732e6464610a3b33,0x33336c7225203436,0x34356c7225202c34\n"
".quad 0x3b3637353432202c,0x203220636f6c2e0a,0x6d0a312036333733,0x36732e6f6c2e6461\n"
".quad 0x3533336c72252034,0x3433336c7225202c,0x3939346c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3633336c7225,0x202c3533336c7225,0x2e7268730a3b3233\n"
".quad 0x336c722520343673,0x336c7225202c3733,0x0a3b3233202c3633,0x33203220636f6c2e\n"
".quad 0x68730a3120363337,0x7225203436622e6c,0x7225202c3833336c,0x3b32202c3733336c\n"
".quad 0x3436732e6464610a,0x2c3933336c722520,0x2c3530336c722520,0x3b3833336c722520\n"
".quad 0x203220636f6c2e0a,0x730a312039373733,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3933336c,0x6464610a3b343166,0x6c7225203436732e,0x6c7225202c303433\n"
".quad 0x37363832202c3435,0x20636f6c2e0a3b32,0x3120373337332032,0x2e6f6c2e64616d0a\n"
".quad 0x336c722520343673,0x336c7225202c3134,0x346c7225202c3034,0x356c7225202c3939\n"
".quad 0x36622e6c68730a3b,0x3234336c72252034,0x3134336c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3334336c,0x3233202c3234336c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203733373320,0x203436622e6c6873,0x202c3434336c7225,0x202c3334336c7225\n"
".quad 0x732e6464610a3b32,0x34336c7225203436,0x30336c7225202c35,0x34336c7225202c35\n"
".quad 0x20636f6c2e0a3b34,0x3120303837332032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3534336c7225,0x610a3b3031662520,0x25203436732e6464,0x25202c3634336c72\n"
".quad 0x3233202c34356c72,0x6f6c2e0a3b383637,0x3833373320322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3734336c,0x7225202c3634336c,0x7225202c3939346c\n"
".quad 0x2e6c68730a3b356c,0x336c722520343662,0x336c7225202c3834,0x0a3b3233202c3734\n"
".quad 0x203436732e726873,0x202c3934336c7225,0x202c3834336c7225,0x636f6c2e0a3b3233\n"
".quad 0x2038333733203220,0x36622e6c68730a31,0x3035336c72252034,0x3934336c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c313533,0x6c7225202c353033\n"
".quad 0x6f6c2e0a3b303533,0x3138373320322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3135336c72255b20,0x3b31316625202c5d,0x3436732e6464610a,0x2c3235336c722520\n"
".quad 0x202c34356c722520,0x2e0a3b3436383633,0x3733203220636f6c,0x64616d0a31203933\n"
".quad 0x203436732e6f6c2e,0x202c3335336c7225,0x202c3235336c7225,0x202c3939346c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3435336c,0x3233202c3335336c\n"
".quad 0x36732e7268730a3b,0x3535336c72252034,0x3435336c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x333733203220636f,0x2e6c68730a312039,0x336c722520343662,0x336c7225202c3635\n"
".quad 0x610a3b32202c3535,0x25203436732e6464,0x25202c3735336c72,0x25202c3530336c72\n"
".quad 0x2e0a3b3635336c72,0x3733203220636f6c,0x2e74730a31203238,0x662e6c61626f6c67\n"
".quad 0x336c72255b203233,0x326625202c5d3735,0x732e6464610a3b30,0x35336c7225203436\n"
".quad 0x34356c7225202c38,0x3b3036393034202c,0x203220636f6c2e0a,0x6d0a312030343733\n"
".quad 0x36732e6f6c2e6461,0x3935336c72252034,0x3835336c7225202c,0x3939346c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3036336c7225,0x202c3935336c7225\n"
".quad 0x2e7268730a3b3233,0x336c722520343673,0x336c7225202c3136,0x0a3b3233202c3036\n"
".quad 0x33203220636f6c2e,0x68730a3120303437,0x7225203436622e6c,0x7225202c3236336c\n"
".quad 0x3b32202c3136336c,0x3436732e6464610a,0x2c3336336c722520,0x2c3530336c722520\n"
".quad 0x3b3236336c722520,0x203220636f6c2e0a,0x730a312033383733,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3336336c,0x6464610a3b333266,0x6c7225203436732e\n"
".quad 0x6c7225202c343633,0x35303534202c3435,0x20636f6c2e0a3b36,0x3120313437332032\n"
".quad 0x2e6f6c2e64616d0a,0x336c722520343673,0x336c7225202c3536,0x346c7225202c3436\n"
".quad 0x356c7225202c3939,0x36622e6c68730a3b,0x3636336c72252034,0x3536336c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3736336c,0x3233202c3636336c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203134373320,0x203436622e6c6873,0x202c3836336c7225\n"
".quad 0x202c3736336c7225,0x732e6464610a3b32,0x36336c7225203436,0x30336c7225202c39\n"
".quad 0x36336c7225202c35,0x20636f6c2e0a3b38,0x3120343837332032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3936336c7225,0x610a3b3432662520,0x25203436732e6464\n"
".quad 0x25202c3037336c72,0x3934202c34356c72,0x6f6c2e0a3b323531,0x3234373320322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3137336c,0x7225202c3037336c\n"
".quad 0x7225202c3939346c,0x2e6c68730a3b356c,0x336c722520343662,0x336c7225202c3237\n"
".quad 0x0a3b3233202c3137,0x203436732e726873,0x202c3337336c7225,0x202c3237336c7225\n"
".quad 0x636f6c2e0a3b3233,0x2032343733203220,0x36622e6c68730a31,0x3437336c72252034\n"
".quad 0x3337336c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c353733\n"
".quad 0x6c7225202c353033,0x6f6c2e0a3b343733,0x3538373320322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x3537336c72255b20,0x3b31326625202c5d,0x3436732e6464610a\n"
".quad 0x2c3637336c722520,0x202c34356c722520,0x2e0a3b3834323335,0x3733203220636f6c\n"
".quad 0x64616d0a31203334,0x203436732e6f6c2e,0x202c3737336c7225,0x202c3637336c7225\n"
".quad 0x202c3939346c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3837336c\n"
".quad 0x3233202c3737336c,0x36732e7268730a3b,0x3937336c72252034,0x3837336c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x343733203220636f,0x2e6c68730a312033,0x336c722520343662\n"
".quad 0x336c7225202c3038,0x610a3b32202c3937,0x25203436732e6464,0x25202c3138336c72\n"
".quad 0x25202c3530336c72,0x2e0a3b3038336c72,0x3733203220636f6c,0x2e74730a31203638\n"
".quad 0x662e6c61626f6c67,0x336c72255b203233,0x326625202c5d3138,0x732e6464610a3b32\n"
".quad 0x38336c7225203436,0x34356c7225202c32,0x3b3434333735202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312034343733,0x36732e6f6c2e6461,0x3338336c72252034,0x3238336c7225202c\n"
".quad 0x3939346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3438336c7225\n"
".quad 0x202c3338336c7225,0x2e7268730a3b3233,0x336c722520343673,0x336c7225202c3538\n"
".quad 0x0a3b3233202c3438,0x33203220636f6c2e,0x68730a3120343437,0x7225203436622e6c\n"
".quad 0x7225202c3638336c,0x3b32202c3538336c,0x3436732e6464610a,0x2c3738336c722520\n"
".quad 0x2c3530336c722520,0x3b3638336c722520,0x203220636f6c2e0a,0x730a312037383733\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3738336c,0x6464610a3b353166\n"
".quad 0x6c7225203436732e,0x6c7225202c383833,0x34343136202c3435,0x20636f6c2e0a3b30\n"
".quad 0x3120353437332032,0x2e6f6c2e64616d0a,0x336c722520343673,0x336c7225202c3938\n"
".quad 0x346c7225202c3838,0x356c7225202c3939,0x36622e6c68730a3b,0x3039336c72252034\n"
".quad 0x3938336c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3139336c\n"
".quad 0x3233202c3039336c,0x3220636f6c2e0a3b,0x0a31203534373320,0x203436622e6c6873\n"
".quad 0x202c3239336c7225,0x202c3139336c7225,0x732e6464610a3b32,0x39336c7225203436\n"
".quad 0x30336c7225202c33,0x39336c7225202c35,0x20636f6c2e0a3b32,0x3120383837332032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3339336c7225,0x610a3b3831662520\n"
".quad 0x25203436732e6464,0x25202c3439336c72,0x3536202c34356c72,0x6f6c2e0a3b363335\n"
".quad 0x3634373320322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3539336c\n"
".quad 0x7225202c3439336c,0x7225202c3939346c,0x2e6c68730a3b356c,0x336c722520343662\n"
".quad 0x336c7225202c3639,0x0a3b3233202c3539,0x203436732e726873,0x202c3739336c7225\n"
".quad 0x202c3639336c7225,0x636f6c2e0a3b3233,0x2036343733203220,0x36622e6c68730a31\n"
".quad 0x3839336c72252034,0x3739336c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c393933,0x6c7225202c353033,0x6f6c2e0a3b383933,0x3938373320322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3939336c72255b20,0x3b39316625202c5d\n"
".quad 0x3436732e6464610a,0x2c3030346c722520,0x202c34356c722520,0x2e0a3b3233363936\n"
".quad 0x3733203220636f6c,0x64616d0a31203734,0x203436732e6f6c2e,0x202c3130346c7225\n"
".quad 0x202c3030346c7225,0x202c3939346c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3230346c,0x3233202c3130346c,0x36732e7268730a3b,0x3330346c72252034\n"
".quad 0x3230346c7225202c,0x6c2e0a3b3233202c,0x343733203220636f,0x2e6c68730a312037\n"
".quad 0x346c722520343662,0x346c7225202c3430,0x610a3b32202c3330,0x25203436732e6464\n"
".quad 0x25202c3530346c72,0x25202c3530336c72,0x2e0a3b3430346c72,0x3733203220636f6c\n"
".quad 0x2e74730a31203039,0x662e6c61626f6c67,0x346c72255b203233,0x316625202c5d3530\n"
".quad 0x732e6464610a3b36,0x30346c7225203436,0x34356c7225202c36,0x3b3832373337202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312038343733,0x36732e6f6c2e6461,0x3730346c72252034\n"
".quad 0x3630346c7225202c,0x3939346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3830346c7225,0x202c3730346c7225,0x2e7268730a3b3233,0x346c722520343673\n"
".quad 0x346c7225202c3930,0x0a3b3233202c3830,0x33203220636f6c2e,0x68730a3120383437\n"
".quad 0x7225203436622e6c,0x7225202c3031346c,0x3b32202c3930346c,0x3436732e6464610a\n"
".quad 0x2c3131346c722520,0x2c3530336c722520,0x3b3031346c722520,0x203220636f6c2e0a\n"
".quad 0x730a312031393733,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3131346c\n"
".quad 0x6f6c2e0a3b373166,0x3032383320322063,0x0a3b7465720a3220,0x3a375f303342420a\n"
".quad 0x203220636f6c2e0a,0x610a312037333633,0x25203233732e6464,0x7225202c30323172\n"
".quad 0x6c2e0a3b31202c34,0x353633203220636f,0x2e7476630a312031,0x732e3233662e6e72\n"
".quad 0x3331366625203233,0x3b3032317225202c,0x3233662e6275730a,0x202c343136662520\n"
".quad 0x25202c3331366625,0x2e6c68730a3b3566,0x3231722520323362,0x202c347225202c31\n"
".quad 0x20636f6c2e0a3b36,0x3120313536332032,0x2e6e722e7476630a,0x203233732e323366\n"
".quad 0x25202c3531366625,0x64610a3b31323172,0x6625203233662e64,0x346625202c363136\n"
".quad 0x303046336630202c,0x64610a3b30303030,0x6625203233662e64,0x366625202c363036\n"
".quad 0x31366625202c3631,0x662e6464610a3b35,0x3131366625203233,0x30202c336625202c\n"
".quad 0x3030303030463366,0x752e766f6d0a3b30,0x3232317225203233,0x74090a0a3b30202c\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x2c35383366257b20,0x202c363833662520\n"
".quad 0x25202c3738336625,0x5b202c7d38383366,0x665f666552786574,0x3666257b202c4130\n"
".quad 0x30366625202c3131,0x2e090a0a3b5d7d36,0x3633203220636f6c,0x7476630a31203135\n"
".quad 0x2e3233662e6e722e,0x3136662520323373,0x0a3b347225202c37,0x203233662e627573\n"
".quad 0x25202c3831366625,0x31366625202c3566,0x622e6c68730a3b37,0x3332317225203233\n"
".quad 0x2c3032317225202c,0x636f6c2e0a3b3620,0x2031353633203220,0x6e722e7476630a31\n"
".quad 0x3233732e3233662e,0x202c393136662520,0x610a3b3332317225,0x25203233662e6464\n"
".quad 0x6625202c32313666,0x366625202c363136,0x6574090a0a3b3931,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x202c31393366257b,0x25202c3239336625,0x6625202c33393366\n"
".quad 0x745b202c7d343933,0x30665f6665527865,0x313666257b202c41,0x3231366625202c31\n"
".quad 0x756d090a0a3b5d7d,0x6625203233662e6c,0x366625202c303236,0x39336625202c3831\n"
".quad 0x722e616d660a3b31,0x6625203233662e6e,0x366625202c313236,0x38336625202c3431\n"
".quad 0x3032366625202c35,0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x6625202c37393366,0x336625202c383933,0x30346625202c3939,0x7865745b202c7d30\n"
".quad 0x2c4132665f666552,0x2c31313666257b20,0x5d7d363036662520,0x6574090a090a0a3b\n"
".quad 0x2e34762e64322e78,0x203233662e323366,0x202c33303466257b,0x25202c3430346625\n"
".quad 0x6625202c35303466,0x745b202c7d363034,0x32665f6665527865,0x313666257b202c41\n"
".quad 0x3231366625202c31,0x6c2e090a0a3b5d7d,0x353633203220636f,0x2e6c756d0a312032\n"
".quad 0x3236662520323366,0x3831366625202c32,0x3b3330346625202c,0x2e6e722e616d660a\n"
".quad 0x3236662520323366,0x3431366625202c33,0x2c3739336625202c,0x0a3b323236662520\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3466257b20323366,0x31346625202c3930\n"
".quad 0x3131346625202c30,0x7d3231346625202c,0x65527865745b202c,0x7b202c4134665f66\n"
".quad 0x25202c3131366625,0x0a3b5d7d36303666,0x2e786574090a090a,0x33662e34762e6432\n"
".quad 0x257b203233662e32,0x6625202c35313466,0x346625202c363134,0x31346625202c3731\n"
".quad 0x7865745b202c7d38,0x2c4134665f666552,0x2c31313666257b20,0x5d7d323136662520\n"
".quad 0x636f6c2e090a0a3b,0x2033353633203220,0x33662e6c756d0a31,0x2c34323666252032\n"
".quad 0x202c383136662520,0x660a3b3531346625,0x33662e6e722e616d,0x2c35323666252032\n"
".quad 0x202c343136662520,0x25202c3930346625,0x090a0a3b34323666,0x762e64322e786574\n"
".quad 0x33662e3233662e34,0x31323466257b2032,0x2c3232346625202c,0x202c333234662520\n"
".quad 0x202c7d3432346625,0x5f6665527865745b,0x66257b202c413966,0x366625202c313136\n"
".quad 0x090a0a3b5d7d3630,0x64322e786574090a,0x2e3233662e34762e,0x3466257b20323366\n"
".quad 0x32346625202c3732,0x3932346625202c38,0x7d3033346625202c,0x65527865745b202c\n"
".quad 0x7b202c4139665f66,0x25202c3131366625,0x0a3b5d7d32313666,0x3220636f6c2e090a\n"
".quad 0x0a31203435363320,0x203233662e6c756d,0x25202c3632366625,0x6625202c38313666\n"
".quad 0x616d660a3b373234,0x203233662e6e722e,0x25202c3732366625,0x6625202c34313666\n"
".quad 0x366625202c313234,0x6574090a0a3b3632,0x2e34762e64322e78,0x203233662e323366\n"
".quad 0x202c33333466257b,0x25202c3433346625,0x6625202c35333466,0x745b202c7d363334\n"
".quad 0x31665f6665527865,0x3666257b202c4131,0x30366625202c3131,0x0a090a0a3b5d7d36\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x333466257b203233,0x3034346625202c39\n"
".quad 0x2c3134346625202c,0x2c7d323434662520,0x6665527865745b20,0x7b202c413131665f\n"
".quad 0x25202c3131366625,0x0a3b5d7d32313666,0x3220636f6c2e090a,0x0a31203535363320\n"
".quad 0x203233662e6c756d,0x25202c3832366625,0x6625202c38313666,0x616d660a3b393334\n"
".quad 0x203233662e6e722e,0x25202c3932366625,0x6625202c34313666,0x366625202c333334\n"
".quad 0x6574090a0a3b3832,0x2e34762e64322e78,0x203233662e323366,0x202c35343466257b\n"
".quad 0x25202c3634346625,0x6625202c37343466,0x745b202c7d383434,0x31665f6665527865\n"
".quad 0x3666257b202c4133,0x30366625202c3131,0x0a090a0a3b5d7d36,0x2e64322e78657409\n"
".quad 0x662e3233662e3476,0x353466257b203233,0x3235346625202c31,0x2c3335346625202c\n"
".quad 0x2c7d343534662520,0x6665527865745b20,0x7b202c413331665f,0x25202c3131366625\n"
".quad 0x0a3b5d7d32313666,0x3220636f6c2e090a,0x0a31203635363320,0x203233662e6c756d\n"
".quad 0x25202c3033366625,0x6625202c38313666,0x616d660a3b313534,0x203233662e6e722e\n"
".quad 0x25202c3133366625,0x6625202c34313666,0x366625202c353434,0x6574090a0a3b3033\n"
".quad 0x2e34762e64322e78,0x203233662e323366,0x202c37353466257b,0x25202c3835346625\n"
".quad 0x6625202c39353466,0x745b202c7d303634,0x31665f6665527865,0x3666257b202c4134\n"
".quad 0x30366625202c3131,0x0a090a0a3b5d7d36,0x2e64322e78657409,0x662e3233662e3476\n"
".quad 0x363466257b203233,0x3436346625202c33,0x2c3536346625202c,0x2c7d363634662520\n"
".quad 0x6665527865745b20,0x7b202c413431665f,0x25202c3131366625,0x0a3b5d7d32313666\n"
".quad 0x3220636f6c2e090a,0x0a31203735363320,0x203233662e6c756d,0x25202c3233366625\n"
".quad 0x6625202c38313666,0x616d660a3b333634,0x203233662e6e722e,0x25202c3333366625\n"
".quad 0x6625202c34313666,0x366625202c373534,0x6574090a0a3b3233,0x2e34762e64322e78\n"
".quad 0x203233662e323366,0x202c39363466257b,0x25202c3037346625,0x6625202c31373466\n"
".quad 0x745b202c7d323734,0x31665f6665527865,0x3666257b202c4136,0x30366625202c3131\n"
".quad 0x0a090a0a3b5d7d36,0x2e64322e78657409,0x662e3233662e3476,0x373466257b203233\n"
".quad 0x3637346625202c35,0x2c3737346625202c,0x2c7d383734662520,0x6665527865745b20\n"
".quad 0x7b202c413631665f,0x25202c3131366625,0x0a3b5d7d32313666,0x3220636f6c2e090a\n"
".quad 0x0a31203835363320,0x203233662e6c756d,0x25202c3433366625,0x6625202c38313666\n"
".quad 0x616d660a3b353734,0x203233662e6e722e,0x25202c3533366625,0x6625202c34313666\n"
".quad 0x366625202c393634,0x6574090a0a3b3433,0x2e34762e64322e78,0x203233662e323366\n"
".quad 0x202c31383466257b,0x25202c3238346625,0x6625202c33383466,0x745b202c7d343834\n"
".quad 0x31665f6665527865,0x3666257b202c4138,0x30366625202c3131,0x0a090a0a3b5d7d36\n"
".quad 0x2e64322e78657409,0x662e3233662e3476,0x383466257b203233,0x3838346625202c37\n"
".quad 0x2c3938346625202c,0x2c7d303934662520,0x6665527865745b20,0x7b202c413831665f\n"
".quad 0x25202c3131366625,0x0a3b5d7d32313666,0x3220636f6c2e090a,0x0a31203935363320\n"
".quad 0x203233662e6c756d,0x25202c3633366625,0x6625202c38313666,0x616d660a3b373834\n"
".quad 0x203233662e6e722e,0x25202c3733366625,0x6625202c34313666,0x366625202c313834\n"
".quad 0x6574090a0a3b3633,0x2e34762e64322e78,0x203233662e323366,0x202c33393466257b\n"
".quad 0x25202c3439346625,0x6625202c35393466,0x745b202c7d363934,0x31665f6665527865\n"
".quad 0x313666257b202c41,0x3630366625202c31,0x090a090a0a3b5d7d,0x762e64322e786574\n"
".quad 0x33662e3233662e34,0x39393466257b2032,0x2c3030356625202c,0x202c313035662520\n"
".quad 0x202c7d3230356625,0x5f6665527865745b,0x66257b202c413166,0x366625202c313136\n"
".quad 0x090a0a3b5d7d3231,0x33203220636f6c2e,0x756d0a3120303636,0x6625203233662e6c\n"
".quad 0x366625202c383336,0x39346625202c3831,0x722e616d660a3b39,0x6625203233662e6e\n"
".quad 0x366625202c393336,0x39346625202c3431,0x3833366625202c33,0x2e786574090a0a3b\n"
".quad 0x33662e34762e6432,0x257b203233662e32,0x6625202c35303566,0x356625202c363035\n"
".quad 0x30356625202c3730,0x7865745b202c7d38,0x2c4133665f666552,0x2c31313666257b20\n"
".quad 0x5d7d363036662520,0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366\n"
".quad 0x202c31313566257b,0x25202c3231356625,0x6625202c33313566,0x745b202c7d343135\n"
".quad 0x33665f6665527865,0x313666257b202c41,0x3231366625202c31,0x6c2e090a0a3b5d7d\n"
".quad 0x363633203220636f,0x2e6c756d0a312031,0x3436662520323366,0x3831366625202c30\n"
".quad 0x3b3131356625202c,0x2e6e722e616d660a,0x3436662520323366,0x3431366625202c31\n"
".quad 0x2c3530356625202c,0x0a3b303436662520,0x64322e786574090a,0x2e3233662e34762e\n"
".quad 0x3566257b20323366,0x31356625202c3731,0x3931356625202c38,0x7d3032356625202c\n"
".quad 0x65527865745b202c,0x7b202c4135665f66,0x25202c3131366625,0x0a3b5d7d36303666\n"
".quad 0x2e786574090a090a,0x33662e34762e6432,0x257b203233662e32,0x6625202c33323566\n"
".quad 0x356625202c343235,0x32356625202c3532,0x7865745b202c7d36,0x2c4135665f666552\n"
".quad 0x2c31313666257b20,0x5d7d323136662520,0x636f6c2e090a0a3b,0x2032363633203220\n"
".quad 0x33662e6c756d0a31,0x2c32343666252032,0x202c383136662520,0x660a3b3332356625\n"
".quad 0x33662e6e722e616d,0x2c33343666252032,0x202c343136662520,0x25202c3731356625\n"
".quad 0x090a0a3b32343666,0x762e64322e786574,0x33662e3233662e34,0x39323566257b2032\n"
".quad 0x2c3033356625202c,0x202c313335662520,0x202c7d3233356625,0x5f6665527865745b\n"
".quad 0x66257b202c413666,0x366625202c313136,0x090a0a3b5d7d3630,0x64322e786574090a\n"
".quad 0x2e3233662e34762e,0x3566257b20323366,0x33356625202c3533,0x3733356625202c36\n"
".quad 0x7d3833356625202c,0x65527865745b202c,0x7b202c4136665f66,0x25202c3131366625\n"
".quad 0x0a3b5d7d32313666,0x3220636f6c2e090a,0x0a31203336363320,0x203233662e6c756d\n"
".quad 0x25202c3434366625,0x6625202c38313666,0x616d660a3b353335,0x203233662e6e722e\n"
".quad 0x25202c3534366625,0x6625202c34313666,0x366625202c393235,0x6574090a0a3b3434\n"
".quad 0x2e34762e64322e78,0x203233662e323366,0x202c31343566257b,0x25202c3234356625\n"
".quad 0x6625202c33343566,0x745b202c7d343435,0x37665f6665527865,0x313666257b202c41\n"
".quad 0x3630366625202c31,0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x37343566257b2032,0x2c3834356625202c,0x202c393435662520,0x202c7d3035356625\n"
".quad 0x5f6665527865745b,0x66257b202c413766,0x366625202c313136,0x090a0a3b5d7d3231\n"
".quad 0x33203220636f6c2e,0x756d0a3120343636,0x6625203233662e6c,0x366625202c363436\n"
".quad 0x34356625202c3831,0x722e616d660a3b37,0x6625203233662e6e,0x366625202c373436\n"
".quad 0x34356625202c3431,0x3634366625202c31,0x2e786574090a0a3b,0x33662e34762e6432\n"
".quad 0x257b203233662e32,0x6625202c33353566,0x356625202c343535,0x35356625202c3535\n"
".quad 0x7865745b202c7d36,0x2c4138665f666552,0x2c31313666257b20,0x5d7d363036662520\n"
".quad 0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366,0x202c39353566257b\n"
".quad 0x25202c3036356625,0x6625202c31363566,0x745b202c7d323635,0x38665f6665527865\n"
".quad 0x313666257b202c41,0x3231366625202c31,0x6c2e090a0a3b5d7d,0x363633203220636f\n"
".quad 0x2e6c756d0a312035,0x3436662520323366,0x3831366625202c38,0x3b3935356625202c\n"
".quad 0x2e6e722e616d660a,0x3436662520323366,0x3431366625202c39,0x2c3335356625202c\n"
".quad 0x0a3b383436662520,0x64322e786574090a,0x2e3233662e34762e,0x3566257b20323366\n"
".quad 0x36356625202c3536,0x3736356625202c36,0x7d3836356625202c,0x65527865745b202c\n"
".quad 0x202c413531665f66,0x202c31313666257b,0x3b5d7d3630366625,0x786574090a090a0a\n"
".quad 0x662e34762e64322e,0x7b203233662e3233,0x25202c3137356625,0x6625202c32373566\n"
".quad 0x356625202c333735,0x65745b202c7d3437,0x3531665f66655278,0x313666257b202c41\n"
".quad 0x3231366625202c31,0x6c2e090a0a3b5d7d,0x363633203220636f,0x2e6c756d0a312036\n"
".quad 0x3536662520323366,0x3831366625202c30,0x3b3137356625202c,0x2e6e722e616d660a\n"
".quad 0x3536662520323366,0x3431366625202c31,0x2c3536356625202c,0x0a3b303536662520\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3566257b20323366,0x37356625202c3737\n"
".quad 0x3937356625202c38,0x7d3038356625202c,0x65527865745b202c,0x202c413731665f66\n"
".quad 0x202c31313666257b,0x3b5d7d3630366625,0x786574090a090a0a,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x25202c3338356625,0x6625202c34383566,0x356625202c353835\n"
".quad 0x65745b202c7d3638,0x3731665f66655278,0x313666257b202c41,0x3231366625202c31\n"
".quad 0x6c2e090a0a3b5d7d,0x363633203220636f,0x2e6c756d0a312037,0x3536662520323366\n"
".quad 0x3831366625202c32,0x3b3338356625202c,0x2e6e722e616d660a,0x3536662520323366\n"
".quad 0x3431366625202c33,0x2c3737356625202c,0x0a3b323536662520,0x64322e786574090a\n"
".quad 0x2e3233662e34762e,0x3566257b20323366,0x39356625202c3938,0x3139356625202c30\n"
".quad 0x7d3239356625202c,0x65527865745b202c,0x202c413031665f66,0x202c31313666257b\n"
".quad 0x3b5d7d3630366625,0x786574090a090a0a,0x662e34762e64322e,0x7b203233662e3233\n"
".quad 0x25202c3539356625,0x6625202c36393566,0x356625202c373935,0x65745b202c7d3839\n"
".quad 0x3031665f66655278,0x313666257b202c41,0x3231366625202c31,0x6c2e090a0a3b5d7d\n"
".quad 0x363633203220636f,0x2e6c756d0a312038,0x3536662520323366,0x3831366625202c34\n"
".quad 0x3b3539356625202c,0x2e6e722e616d660a,0x3536662520323366,0x3431366625202c35\n"
".quad 0x2c3938356625202c,0x0a3b343536662520,0x64322e786574090a,0x2e3233662e34762e\n"
".quad 0x3666257b20323366,0x30366625202c3130,0x3330366625202c32,0x7d3430366625202c\n"
".quad 0x65527865745b202c,0x202c413231665f66,0x202c31313666257b,0x3b5d7d3630366625\n"
".quad 0x786574090a090a0a,0x662e34762e64322e,0x7b203233662e3233,0x25202c3730366625\n"
".quad 0x6625202c38303666,0x366625202c393036,0x65745b202c7d3031,0x3231665f66655278\n"
".quad 0x313666257b202c41,0x3231366625202c31,0x6c2e090a0a3b5d7d,0x363633203220636f\n"
".quad 0x2e6c756d0a312039,0x3536662520323366,0x3831366625202c36,0x3b3730366625202c\n"
".quad 0x2e6e722e616d660a,0x3536662520323366,0x3431366625202c37,0x2c3130366625202c\n"
".quad 0x0a3b363536662520,0x33203220636f6c2e,0x64610a3120313736,0x6625203233662e64\n"
".quad 0x366625202c383536,0x33366625202c3132,0x662e6464610a3b39,0x3935366625203233\n"
".quad 0x2c3835366625202c,0x0a3b333236662520,0x203233662e646461,0x25202c3036366625\n"
".quad 0x6625202c39353666,0x6464610a3b313436,0x366625203233662e,0x36366625202c3136\n"
".quad 0x3532366625202c30,0x33662e6464610a3b,0x2c32363666252032,0x202c313636662520\n"
".quad 0x610a3b3334366625,0x25203233662e6464,0x6625202c33363666,0x366625202c323636\n"
".quad 0x2e6464610a3b3534,0x3636662520323366,0x3336366625202c34,0x3b3734366625202c\n"
".quad 0x3233662e6464610a,0x202c353636662520,0x25202c3436366625,0x64610a3b39343666\n"
".quad 0x6625203233662e64,0x366625202c363636,0x32366625202c3536,0x662e6464610a3b37\n"
".quad 0x3736366625203233,0x2c3636366625202c,0x0a3b353536662520,0x203233662e646461\n"
".quad 0x25202c3836366625,0x6625202c37363666,0x6464610a3b393236,0x366625203233662e\n"
".quad 0x36366625202c3936,0x3735366625202c38,0x33662e6464610a3b,0x2c30373666252032\n"
".quad 0x202c393636662520,0x610a3b3133366625,0x25203233662e6464,0x6625202c31373666\n"
".quad 0x366625202c303736,0x2e6464610a3b3333,0x3736662520323366,0x3137366625202c32\n"
".quad 0x3b3135366625202c,0x3233662e6464610a,0x202c333736662520,0x25202c3237366625\n"
".quad 0x64610a3b35333666,0x6625203233662e64,0x366625202c343736,0x35366625202c3337\n"
".quad 0x662e6464610a3b33,0x3537366625203233,0x2c3437366625202c,0x0a3b373336662520\n"
".quad 0x203233662e627573,0x25202c3637366625,0x6625202c39333666,0x6464610a3b313436\n"
".quad 0x366625203233662e,0x37366625202c3737,0x3334366625202c36,0x33662e6275730a3b\n"
".quad 0x2c38373666252032,0x202c373736662520,0x730a3b3534366625,0x25203233662e6275\n"
".quad 0x6625202c39373666,0x366625202c383736,0x2e6464610a3b3734,0x3836662520323366\n"
".quad 0x3937366625202c30,0x3b3934366625202c,0x3233662e6464610a,0x202c313836662520\n"
".quad 0x25202c3038366625,0x75730a3b35353666,0x6625203233662e62,0x366625202c323836\n"
".quad 0x35366625202c3138,0x662e6464610a3b37,0x3338366625203233,0x2c3238366625202c\n"
".quad 0x0a3b313536662520,0x203233662e627573,0x25202c3438366625,0x6625202c33383666\n"
".quad 0x6275730a3b333536,0x366625203233662e,0x32366625202c3538,0x3532366625202c33\n"
".quad 0x33662e6464610a3b,0x2c36383666252032,0x202c353836662520,0x610a3b3334366625\n"
".quad 0x25203233662e6464,0x6625202c37383666,0x366625202c363836,0x2e6275730a3b3534\n"
".quad 0x3836662520323366,0x3738366625202c38,0x3b3734366625202c,0x3233662e6275730a\n"
".quad 0x202c393836662520,0x25202c3838366625,0x64610a3b39343666,0x6625203233662e64\n"
".quad 0x366625202c303936,0x32366625202c3938,0x662e6275730a3b39,0x3139366625203233\n"
".quad 0x2c3039366625202c,0x0a3b313336662520,0x203233662e646461,0x25202c3239366625\n"
".quad 0x6625202c31393666,0x6275730a3b353336,0x366625203233662e,0x39366625202c3339\n"
".quad 0x3733366625202c32,0x33662e6464610a3b,0x2c34393666252032,0x202c373236662520\n"
".quad 0x610a3b3535366625,0x25203233662e6464,0x6625202c35393666,0x366625202c343936\n"
".quad 0x2e6464610a3b3932,0x3936662520323366,0x3539366625202c36,0x3b3735366625202c\n"
".quad 0x3233662e6464610a,0x202c373936662520,0x25202c3639366625,0x75730a3b31333666\n"
".quad 0x6625203233662e62,0x366625202c383936,0x33366625202c3739,0x662e6275730a3b33\n"
".quad 0x3939366625203233,0x2c3839366625202c,0x0a3b313536662520,0x203233662e627573\n"
".quad 0x25202c3030376625,0x6625202c39393666,0x6275730a3b353336,0x376625203233662e\n"
".quad 0x30376625202c3130,0x3335366625202c30,0x33662e6275730a3b,0x2c32303766252032\n"
".quad 0x202c313037662520,0x6d0a3b3733366625,0x25203233662e6c75,0x6625202c33303766\n"
".quad 0x366625202c333936,0x2e616d660a3b3339,0x25203233662e6e72,0x6625202c34303766\n"
".quad 0x366625202c343836,0x30376625202c3438,0x662e6c756d0a3b33,0x3530376625203233\n"
".quad 0x2c3230376625202c,0x0a3b323037662520,0x662e6e722e616d66,0x3630376625203233\n"
".quad 0x2c3230376625202c,0x202c323037662520,0x6d0a3b3430376625,0x25203233662e6c75\n"
".quad 0x6625202c37303766,0x426630202c363037,0x3b44354444383146,0x2e6e722e616d660a\n"
".quad 0x3037662520323366,0x3537366625202c38,0x333445336630202c,0x6625202c30334330\n"
".quad 0x6c756d0a3b373037,0x376625203233662e,0x30376625202c3930,0x3044336630202c36\n"
".quad 0x660a3b4339433934,0x33662e6e722e616d,0x2c30313766252032,0x202c353736662520\n"
".quad 0x4434334444336630,0x30376625202c3533,0x722e616d660a3b39,0x6625203233662e6e\n"
".quad 0x366625202c313137,0x45336630202c3438,0x202c424141414132,0x660a3b3031376625\n"
".quad 0x33662e6e722e616d,0x2c32313766252032,0x202c333936662520,0x4141413245336630\n"
".quad 0x31376625202c4241,0x722e616d660a3b30,0x6625203233662e6e,0x366625202c333137\n"
".quad 0x45426630202c3438,0x202c424141414132,0x660a3b3031376625,0x33662e6e722e616d\n"
".quad 0x2c34313766252032,0x202c333936662520,0x4141413245426630,0x31376625202c4241\n"
".quad 0x662e6c756d0a3b30,0x3531376625203233,0x2c3630376625202c,0x3839304433663020\n"
".quad 0x616d660a3b343833,0x203233662e6e722e,0x25202c3631376625,0x6630202c35373666\n"
".quad 0x3032383032384333,0x3b3531376625202c,0x3233662e6464610a,0x202c373137662520\n"
".quad 0x25202c3438366625,0x6d660a3b33393666,0x3233662e6e722e61,0x202c383137662520\n"
".quad 0x30202c3731376625,0x4141414141443366,0x3631376625202c42,0x33662e6275730a3b\n"
".quad 0x2c39313766252032,0x202c343836662520,0x660a3b3339366625,0x33662e6e722e616d\n"
".quad 0x2c30323766252032,0x202c393137662520,0x4141414144426630,0x31376625202c4241\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x376625202c313237,0x44426630202c3731\n"
".quad 0x202c424141414141,0x660a3b3631376625,0x33662e6e722e616d,0x2c32323766252032\n"
".quad 0x202c393137662520,0x4141414144336630,0x31376625202c4241,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x376625202c333237,0x45336630202c3230,0x202c424141414132\n"
".quad 0x610a3b3031376625,0x25203233662e6464,0x6625202c34323766,0x376625202c343836\n"
".quad 0x2e616d660a3b3230,0x25203233662e6e72,0x6625202c35323766,0x336630202c343237\n"
".quad 0x2c42414141414144,0x0a3b363137662520,0x203233662e646461,0x25202c3632376625\n"
".quad 0x6625202c33393666,0x616d660a3b323037,0x203233662e6e722e,0x25202c3732376625\n"
".quad 0x6630202c36323766,0x4241414141414433,0x3b3631376625202c,0x3233662e6275730a\n"
".quad 0x202c383237662520,0x25202c3438366625,0x6d660a3b32303766,0x3233662e6e722e61\n"
".quad 0x202c393237662520,0x30202c3832376625,0x4141414141444266,0x3631376625202c42\n"
".quad 0x33662e6275730a3b,0x2c30333766252032,0x202c333936662520,0x660a3b3230376625\n"
".quad 0x33662e6e722e616d,0x2c31333766252032,0x202c303337662520,0x4141414144426630\n"
".quad 0x31376625202c4241,0x722e616d660a3b36,0x6625203233662e6e,0x376625202c323337\n"
".quad 0x45426630202c3230,0x202c424141414132,0x660a3b3031376625,0x33662e6e722e616d\n"
".quad 0x2c33333766252032,0x202c383237662520,0x4141414144336630,0x31376625202c4241\n"
".quad 0x722e616d660a3b36,0x6625203233662e6e,0x376625202c343337,0x44336630202c3033\n"
".quad 0x202c424141414141,0x660a3b3631376625,0x33662e6e722e616d,0x2c35333766252032\n"
".quad 0x202c343237662520,0x4141414144426630,0x31376625202c4241,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x376625202c363337,0x44426630202c3632,0x202c424141414141\n"
".quad 0x610a3b3631376625,0x25203233662e6464,0x6625202c37333766,0x366625202c343836\n"
".quad 0x2e616d660a3b3438,0x25203233662e6e72,0x6625202c38333766,0x366625202c333936\n"
".quad 0x30376625202c3339,0x662e67656e0a3b35,0x3933376625203233,0x3b3833376625202c\n"
".quad 0x2e6e722e616d660a,0x3437662520323366,0x3733376625202c30,0x2c3438366625202c\n"
".quad 0x0a3b393337662520,0x662e6e722e616d66,0x3134376625203233,0x2c3034376625202c\n"
".quad 0x3833364433663020,0x376625202c393345,0x2e67656e0a3b3131,0x3437662520323366\n"
".quad 0x3230376625202c32,0x6e722e616d660a3b,0x376625203233662e,0x34376625202c3334\n"
".quad 0x3230376625202c32,0x3b3330376625202c,0x3233662e6c756d0a,0x202c343437662520\n"
".quad 0x30202c3334376625,0x4141414141443366,0x722e616d660a3b42,0x6625203233662e6e\n"
".quad 0x376625202c353437,0x43426630202c3034,0x202c393345383345,0x610a3b3434376625\n"
".quad 0x25203233662e6464,0x6625202c36343766,0x376625202c323137,0x2e616d660a3b3534\n"
".quad 0x25203233662e6e72,0x6625202c37343766,0x336630202c303437,0x2c39334538333644\n"
".quad 0x0a3b333137662520,0x203233662e646461,0x25202c3834376625,0x6625202c34313766\n"
".quad 0x616d660a3b353437,0x203233662e6e722e,0x25202c3934376625,0x6630202c30343766\n"
".quad 0x3933453833454333,0x3b3434376625202c,0x3233662e6c756d0a,0x202c303537662520\n"
".quad 0x30202c3438366625,0x3030303038453366,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x376625202c313537,0x39366625202c3035,0x3934376625202c33,0x33662e6464610a3b\n"
".quad 0x2c32353766252032,0x202c383137662520,0x6d0a3b3135376625,0x25203233662e6c75\n"
".quad 0x6625202c33353766,0x426630202c343836,0x3b30303030303845,0x2e6e722e616d660a\n"
".quad 0x3537662520323366,0x3335376625202c34,0x2c3339366625202c,0x0a3b393437662520\n"
".quad 0x203233662e646461,0x25202c3535376625,0x6625202c30323766,0x6464610a3b343537\n"
".quad 0x376625203233662e,0x32376625202c3635,0x3135376625202c31,0x33662e6464610a3b\n"
".quad 0x2c37353766252032,0x202c323237662520,0x6d0a3b3435376625,0x25203233662e6c75\n"
".quad 0x6625202c38353766,0x426630202c333437,0x3b42414141414144,0x2e6e722e616d660a\n"
".quad 0x3537662520323366,0x3034376625202c39,0x334543426630202c,0x6625202c39334538\n"
".quad 0x6464610a3b383537,0x376625203233662e,0x32376625202c3036,0x3935376625202c33\n"
".quad 0x6e722e616d660a3b,0x376625203233662e,0x34376625202c3136,0x4543336630202c30\n"
".quad 0x25202c3933453833,0x6d660a3b38353766,0x3233662e6e722e61,0x202c323637662520\n"
".quad 0x25202c3035376625,0x6625202c32303766,0x6464610a3b313637,0x376625203233662e\n"
".quad 0x32376625202c3336,0x3236376625202c35,0x33662e6c756d0a3b,0x2c34363766252032\n"
".quad 0x202c303437662520,0x4538333644426630,0x2e6c756d0a3b3933,0x3637662520323366\n"
".quad 0x3339366625202c35,0x303845336630202c,0x756d0a3b30303030,0x6625203233662e6c\n"
".quad 0x376625202c363637,0x30376625202c3536,0x722e616d660a3b32,0x6625203233662e6e\n"
".quad 0x376625202c373637,0x44426630202c3034,0x202c393345383336,0x610a3b3636376625\n"
".quad 0x25203233662e6464,0x6625202c38363766,0x376625202c373237,0x2e616d660a3b3736\n"
".quad 0x25203233662e6e72,0x6625202c39363766,0x376625202c333537,0x36376625202c3230\n"
".quad 0x662e6464610a3b31,0x3037376625203233,0x2c3932376625202c,0x0a3b393637662520\n"
".quad 0x203233662e67656e,0x25202c3137376625,0x6d660a3b35363766,0x3233662e6e722e61\n"
".quad 0x202c323737662520,0x25202c3137376625,0x6625202c32303766,0x6464610a3b343637\n"
".quad 0x376625203233662e,0x33376625202c3337,0x3237376625202c31,0x33662e6464610a3b\n"
".quad 0x2c34373766252032,0x202c323337662520,0x610a3b3935376625,0x25203233662e6464\n"
".quad 0x6625202c35373766,0x376625202c333337,0x2e6c756d0a3b3936,0x3737662520323366\n"
".quad 0x3339366625202c36,0x303845426630202c,0x756d0a3b30303030,0x6625203233662e6c\n"
".quad 0x376625202c373737,0x30376625202c3637,0x722e616d660a3b32,0x6625203233662e6e\n"
".quad 0x376625202c383737,0x44426630202c3034,0x202c393345383336,0x610a3b3737376625\n"
".quad 0x25203233662e6464,0x6625202c39373766,0x376625202c343337,0x2e6464610a3b3837\n"
".quad 0x3837662520323366,0x3533376625202c30,0x3b3236376625202c,0x3233662e6464610a\n"
".quad 0x202c313837662520,0x25202c3633376625,0x6f6d0a3b37363766,0x6625203233662e76\n"
".quad 0x336630202c323837,0x3b30303030303846,0x617261702e646c0a,0x6625203233662e6d\n"
".quad 0x5a5f5b202c333238,0x41425f645f524c39,0x6d665f5366504344,0x5f6d617261705f66\n"
".quad 0x636f6c2e0a3b5d34,0x2031373633203220,0x33662e6275730a31,0x2c33383766252032\n"
".quad 0x202c323837662520,0x6d0a3b3332386625,0x25203233662e6c75,0x6625202c34383766\n"
".quad 0x376625202c333837,0x2e616d660a3b3830,0x25203233662e6e72,0x6625202c35383766\n"
".quad 0x386625202c313236,0x38376625202c3332,0x662e6c756d0a3b34,0x3638376625203233\n"
".quad 0x2c3338376625202c,0x0a3b313437662520,0x662e6e722e616d66,0x3738376625203233\n"
".quad 0x2c3933366625202c,0x202c333238662520,0x6d0a3b3638376625,0x25203233662e6c75\n"
".quad 0x6625202c38383766,0x376625202c333837,0x2e616d660a3b3634,0x25203233662e6e72\n"
".quad 0x6625202c39383766,0x386625202c333236,0x38376625202c3332,0x662e6c756d0a3b38\n"
".quad 0x3039376625203233,0x2c3338376625202c,0x0a3b373437662520,0x662e6e722e616d66\n"
".quad 0x3139376625203233,0x2c3134366625202c,0x202c333238662520,0x6d0a3b3039376625\n"
".quad 0x25203233662e6c75,0x6625202c32393766,0x376625202c333837,0x2e616d660a3b3834\n"
".quad 0x25203233662e6e72,0x6625202c33393766,0x386625202c353236,0x39376625202c3332\n"
".quad 0x662e6c756d0a3b32,0x3439376625203233,0x2c3338376625202c,0x0a3b323537662520\n"
".quad 0x662e6e722e616d66,0x3539376625203233,0x2c3334366625202c,0x202c333238662520\n"
".quad 0x6d0a3b3439376625,0x25203233662e6c75,0x6625202c36393766,0x376625202c333837\n"
".quad 0x2e616d660a3b3535,0x25203233662e6e72,0x6625202c37393766,0x386625202c353436\n"
".quad 0x39376625202c3332,0x662e6c756d0a3b36,0x3839376625203233,0x2c3338376625202c\n"
".quad 0x0a3b363537662520,0x662e6e722e616d66,0x3939376625203233,0x2c3734366625202c\n"
".quad 0x202c333238662520,0x6d0a3b3839376625,0x25203233662e6c75,0x6625202c30303866\n"
".quad 0x376625202c333837,0x2e616d660a3b3735,0x25203233662e6e72,0x6625202c31303866\n"
".quad 0x386625202c393436,0x30386625202c3332,0x662e6c756d0a3b30,0x3230386625203233\n"
".quad 0x2c3338376625202c,0x0a3b303637662520,0x662e6e722e616d66,0x3330386625203233\n"
".quad 0x2c3732366625202c,0x202c333238662520,0x6d0a3b3230386625,0x25203233662e6c75\n"
".quad 0x6625202c34303866,0x376625202c333837,0x2e616d660a3b3336,0x25203233662e6e72\n"
".quad 0x6625202c35303866,0x386625202c353536,0x30386625202c3332,0x662e6c756d0a3b34\n"
".quad 0x3630386625203233,0x2c3338376625202c,0x0a3b383637662520,0x662e6e722e616d66\n"
".quad 0x3730386625203233,0x2c3932366625202c,0x202c333238662520,0x6d0a3b3630386625\n"
".quad 0x25203233662e6c75,0x6625202c38303866,0x376625202c333837,0x2e616d660a3b3037\n"
".quad 0x25203233662e6e72,0x6625202c39303866,0x386625202c373536,0x30386625202c3332\n"
".quad 0x662e6c756d0a3b38,0x3031386625203233,0x2c3338376625202c,0x0a3b333737662520\n"
".quad 0x662e6e722e616d66,0x3131386625203233,0x2c3133366625202c,0x202c333238662520\n"
".quad 0x6d0a3b3031386625,0x25203233662e6c75,0x6625202c32313866,0x376625202c333837\n"
".quad 0x2e616d660a3b3437,0x25203233662e6e72,0x6625202c33313866,0x386625202c333336\n"
".quad 0x31386625202c3332,0x662e6c756d0a3b32,0x3431386625203233,0x2c3338376625202c\n"
".quad 0x0a3b353737662520,0x662e6e722e616d66,0x3531386625203233,0x2c3135366625202c\n"
".quad 0x202c333238662520,0x6d0a3b3431386625,0x25203233662e6c75,0x6625202c36313866\n"
".quad 0x376625202c333837,0x2e616d660a3b3937,0x25203233662e6e72,0x6625202c37313866\n"
".quad 0x386625202c353336,0x31386625202c3332,0x662e6c756d0a3b36,0x3831386625203233\n"
".quad 0x2c3338376625202c,0x0a3b303837662520,0x662e6e722e616d66,0x3931386625203233\n"
".quad 0x2c3335366625202c,0x202c333238662520,0x6d0a3b3831386625,0x25203233662e6c75\n"
".quad 0x6625202c30323866,0x376625202c333837,0x2e616d660a3b3138,0x25203233662e6e72\n"
".quad 0x6625202c31323866,0x386625202c373336,0x32386625202c3332,0x61702e646c0a3b30\n"
".quad 0x203436752e6d6172,0x202c3839346c7225,0x645f524c395a5f5b,0x536650434441425f\n"
".quad 0x7261705f666d665f,0x2e0a3b5d335f6d61,0x3633203220636f6c,0x64616d0a31203833\n"
".quad 0x203436732e6f6c2e,0x202c3631346c7225,0x25202c37316c7225,0x25202c3839346c72\n"
".quad 0x2e646c0a3b356c72,0x36752e6d61726170,0x3539346c72252034,0x524c395a5f5b202c\n"
".quad 0x50434441425f645f,0x705f666d665f5366,0x3b5d315f6d617261,0x6f742e617476630a\n"
".quad 0x2e6c61626f6c672e,0x346c722520343675,0x346c7225202c3731,0x2e6c68730a3b3539\n"
".quad 0x346c722520343662,0x346c7225202c3831,0x0a3b3233202c3631,0x203436732e726873\n"
".quad 0x202c3931346c7225,0x202c3831346c7225,0x636f6c2e0a3b3233,0x2030333733203220\n"
".quad 0x36622e6c68730a31,0x3032346c72252034,0x3931346c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c313234,0x6c7225202c373134,0x2e74730a3b303234\n"
".quad 0x662e6c61626f6c67,0x346c72255b203233,0x376625202c5d3132,0x2e6464610a3b3538\n"
".quad 0x346c722520343673,0x316c7225202c3232,0x3b36393034202c37,0x203220636f6c2e0a\n"
".quad 0x6d0a312031333733,0x36732e6f6c2e6461,0x3332346c72252034,0x3232346c7225202c\n"
".quad 0x3839346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3432346c7225\n"
".quad 0x202c3332346c7225,0x2e7268730a3b3233,0x346c722520343673,0x346c7225202c3532\n"
".quad 0x0a3b3233202c3432,0x33203220636f6c2e,0x68730a3120313337,0x7225203436622e6c\n"
".quad 0x7225202c3632346c,0x3b32202c3532346c,0x3436732e6464610a,0x2c3732346c722520\n"
".quad 0x2c3731346c722520,0x3b3632346c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3732346c7225,0x0a3b373837662520,0x203436732e646461,0x202c3832346c7225\n"
".quad 0x38202c37316c7225,0x6f6c2e0a3b323931,0x3233373320322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3932346c,0x7225202c3832346c,0x7225202c3839346c\n"
".quad 0x2e6c68730a3b356c,0x346c722520343662,0x346c7225202c3033,0x0a3b3233202c3932\n"
".quad 0x203436732e726873,0x202c3133346c7225,0x202c3033346c7225,0x636f6c2e0a3b3233\n"
".quad 0x2032333733203220,0x36622e6c68730a31,0x3233346c72252034,0x3133346c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c333334,0x6c7225202c373134\n"
".quad 0x2e74730a3b323334,0x662e6c61626f6c67,0x346c72255b203233,0x376625202c5d3333\n"
".quad 0x2e6464610a3b3938,0x346c722520343673,0x316c7225202c3433,0x3838323231202c37\n"
".quad 0x3220636f6c2e0a3b,0x0a31203333373320,0x732e6f6c2e64616d,0x33346c7225203436\n"
".quad 0x33346c7225202c35,0x39346c7225202c34,0x3b356c7225202c38,0x3436622e6c68730a\n"
".quad 0x2c3633346c722520,0x2c3533346c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c373334,0x3b3233202c363334,0x203220636f6c2e0a,0x730a312033333733\n"
".quad 0x25203436622e6c68,0x25202c3833346c72,0x32202c3733346c72,0x36732e6464610a3b\n"
".quad 0x3933346c72252034,0x3731346c7225202c,0x3833346c7225202c,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x5d3933346c72255b,0x3b3139376625202c,0x3436732e6464610a\n"
".quad 0x2c3034346c722520,0x202c37316c722520,0x2e0a3b3438333631,0x3733203220636f6c\n"
".quad 0x64616d0a31203433,0x203436732e6f6c2e,0x202c3134346c7225,0x202c3034346c7225\n"
".quad 0x202c3839346c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3234346c\n"
".quad 0x3233202c3134346c,0x36732e7268730a3b,0x3334346c72252034,0x3234346c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x333733203220636f,0x2e6c68730a312034,0x346c722520343662\n"
".quad 0x346c7225202c3434,0x610a3b32202c3334,0x25203436732e6464,0x25202c3534346c72\n"
".quad 0x25202c3731346c72,0x730a3b3434346c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3534346c,0x64610a3b33393766,0x7225203436732e64,0x7225202c3634346c\n"
".quad 0x343032202c37316c,0x636f6c2e0a3b3038,0x2035333733203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c373434,0x6c7225202c363434,0x6c7225202c383934\n"
".quad 0x622e6c68730a3b35,0x34346c7225203436,0x34346c7225202c38,0x730a3b3233202c37\n"
".quad 0x25203436732e7268,0x25202c3934346c72,0x33202c3834346c72,0x20636f6c2e0a3b32\n"
".quad 0x3120353337332032,0x3436622e6c68730a,0x2c3035346c722520,0x2c3934346c722520\n"
".quad 0x2e6464610a3b3220,0x346c722520343673,0x346c7225202c3135,0x346c7225202c3731\n"
".quad 0x672e74730a3b3035,0x33662e6c61626f6c,0x35346c72255b2032,0x39376625202c5d31\n"
".quad 0x732e6464610a3b35,0x35346c7225203436,0x37316c7225202c32,0x3b3637353432202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312036333733,0x36732e6f6c2e6461,0x3335346c72252034\n"
".quad 0x3235346c7225202c,0x3839346c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3435346c7225,0x202c3335346c7225,0x2e7268730a3b3233,0x346c722520343673\n"
".quad 0x346c7225202c3535,0x0a3b3233202c3435,0x33203220636f6c2e,0x68730a3120363337\n"
".quad 0x7225203436622e6c,0x7225202c3635346c,0x3b32202c3535346c,0x3436732e6464610a\n"
".quad 0x2c3735346c722520,0x2c3731346c722520,0x3b3635346c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3735346c7225,0x0a3b373937662520,0x203436732e646461\n"
".quad 0x202c3835346c7225,0x32202c37316c7225,0x6c2e0a3b32373638,0x333733203220636f\n"
".quad 0x2e64616d0a312037,0x25203436732e6f6c,0x25202c3935346c72,0x25202c3835346c72\n"
".quad 0x25202c3839346c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c303634\n"
".quad 0x3b3233202c393534,0x3436732e7268730a,0x2c3136346c722520,0x2c3036346c722520\n"
".quad 0x6f6c2e0a3b323320,0x3733373320322063,0x622e6c68730a3120,0x36346c7225203436\n"
".quad 0x36346c7225202c32,0x64610a3b32202c31,0x7225203436732e64,0x7225202c3336346c\n"
".quad 0x7225202c3731346c,0x74730a3b3236346c,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d333634,0x6464610a3b393937,0x6c7225203436732e,0x6c7225202c343634\n"
".quad 0x36373233202c3731,0x20636f6c2e0a3b38,0x3120383337332032,0x2e6f6c2e64616d0a\n"
".quad 0x346c722520343673,0x346c7225202c3536,0x346c7225202c3436,0x356c7225202c3839\n"
".quad 0x36622e6c68730a3b,0x3636346c72252034,0x3536346c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3736346c,0x3233202c3636346c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203833373320,0x203436622e6c6873,0x202c3836346c7225,0x202c3736346c7225\n"
".quad 0x732e6464610a3b32,0x36346c7225203436,0x31346c7225202c39,0x36346c7225202c37\n"
".quad 0x6c672e74730a3b38,0x3233662e6c61626f,0x3936346c72255b20,0x3130386625202c5d\n"
".quad 0x36732e6464610a3b,0x3037346c72252034,0x2c37316c7225202c,0x0a3b343638363320\n"
".quad 0x33203220636f6c2e,0x616d0a3120393337,0x3436732e6f6c2e64,0x2c3137346c722520\n"
".quad 0x2c3037346c722520,0x2c3839346c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3237346c72,0x33202c3137346c72,0x732e7268730a3b32,0x37346c7225203436\n"
".quad 0x37346c7225202c33,0x2e0a3b3233202c32,0x3733203220636f6c,0x6c68730a31203933\n"
".quad 0x6c7225203436622e,0x6c7225202c343734,0x0a3b32202c333734,0x203436732e646461\n"
".quad 0x202c3537346c7225,0x202c3731346c7225,0x0a3b3437346c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3537346c72,0x610a3b3330386625,0x25203436732e6464\n"
".quad 0x25202c3637346c72,0x3034202c37316c72,0x6f6c2e0a3b303639,0x3034373320322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3737346c,0x7225202c3637346c\n"
".quad 0x7225202c3839346c,0x2e6c68730a3b356c,0x346c722520343662,0x346c7225202c3837\n"
".quad 0x0a3b3233202c3737,0x203436732e726873,0x202c3937346c7225,0x202c3837346c7225\n"
".quad 0x636f6c2e0a3b3233,0x2030343733203220,0x36622e6c68730a31,0x3038346c72252034\n"
".quad 0x3937346c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c313834\n"
".quad 0x6c7225202c373134,0x2e74730a3b303834,0x662e6c61626f6c67,0x346c72255b203233\n"
".quad 0x386625202c5d3138,0x2e6464610a3b3530,0x346c722520343673,0x316c7225202c3238\n"
".quad 0x3635303534202c37,0x3220636f6c2e0a3b,0x0a31203134373320,0x732e6f6c2e64616d\n"
".quad 0x38346c7225203436,0x38346c7225202c33,0x39346c7225202c32,0x3b356c7225202c38\n"
".quad 0x3436622e6c68730a,0x2c3438346c722520,0x2c3338346c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c353834,0x3b3233202c343834,0x203220636f6c2e0a\n"
".quad 0x730a312031343733,0x25203436622e6c68,0x25202c3638346c72,0x32202c3538346c72\n"
".quad 0x36732e6464610a3b,0x3738346c72252034,0x3731346c7225202c,0x3638346c7225202c\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3738346c72255b,0x3b3730386625202c\n"
".quad 0x3436732e6464610a,0x2c3838346c722520,0x202c37316c722520,0x2e0a3b3235313934\n"
".quad 0x3733203220636f6c,0x64616d0a31203234,0x203436732e6f6c2e,0x202c3938346c7225\n"
".quad 0x202c3838346c7225,0x202c3839346c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3039346c,0x3233202c3938346c,0x36732e7268730a3b,0x3139346c72252034\n"
".quad 0x3039346c7225202c,0x6c2e0a3b3233202c,0x343733203220636f,0x2e6c68730a312032\n"
".quad 0x346c722520343662,0x346c7225202c3239,0x610a3b32202c3139,0x25203436732e6464\n"
".quad 0x25202c3339346c72,0x25202c3731346c72,0x730a3b3239346c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3339346c,0x6c2e0a3b39303866,0x343733203220636f\n"
".quad 0x672e74730a312033,0x33662e6c61626f6c,0x5d396c72255b2032,0x3b3131386625202c\n"
".quad 0x203220636f6c2e0a,0x730a312034343733,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x6625202c5d30316c,0x6f6c2e0a3b333138,0x3534373320322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x5d31316c72255b20,0x3b3531386625202c,0x203220636f6c2e0a\n"
".quad 0x730a312036343733,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d32316c\n"
".quad 0x6f6c2e0a3b373138,0x3734373320322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x5d33316c72255b20,0x3b3931386625202c,0x203220636f6c2e0a,0x730a312038343733\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d34316c,0x6f6c2e0a3b313238\n"
".quad 0x3032383320322063,0x0a3b7465720a3220,0x72746e652e0a0a7d,0x726d37315a5f2079\n"
".quad 0x416279685f645f74,0x506563726f665f42,0x535f536d665f5366,0x702e0a28695f535f\n"
".quad 0x36752e206d617261,0x726d37315a5f2034,0x416279685f645f74,0x506563726f665f42\n"
".quad 0x535f536d665f5366,0x7261705f695f535f,0x702e0a2c305f6d61,0x36752e206d617261\n"
".quad 0x726d37315a5f2034,0x416279685f645f74,0x506563726f665f42,0x535f536d665f5366\n"
".quad 0x7261705f695f535f,0x702e0a2c315f6d61,0x33662e206d617261,0x726d37315a5f2032\n"
".quad 0x416279685f645f74,0x506563726f665f42,0x535f536d665f5366,0x7261705f695f535f\n"
".quad 0x702e0a2c325f6d61,0x36752e206d617261,0x726d37315a5f2034,0x416279685f645f74\n"
".quad 0x506563726f665f42,0x535f536d665f5366,0x7261705f695f535f,0x702e0a2c335f6d61\n"
".quad 0x36752e206d617261,0x726d37315a5f2034,0x416279685f645f74,0x506563726f665f42\n"
".quad 0x535f536d665f5366,0x7261705f695f535f,0x702e0a2c345f6d61,0x36752e206d617261\n"
".quad 0x726d37315a5f2034,0x416279685f645f74,0x506563726f665f42,0x535f536d665f5366\n"
".quad 0x7261705f695f535f,0x702e0a2c355f6d61,0x36752e206d617261,0x726d37315a5f2034\n"
".quad 0x416279685f645f74,0x506563726f665f42,0x535f536d665f5366,0x7261705f695f535f\n"
".quad 0x702e0a2c365f6d61,0x33752e206d617261,0x726d37315a5f2032,0x416279685f645f74\n"
".quad 0x506563726f665f42,0x535f536d665f5366,0x7261705f695f535f,0x7b0a290a375f6d61\n"
".quad 0x662e206765722e0a,0x35343c6625203233,0x6765722e0a3b3e36,0x2520646572702e20\n"
".quad 0x2e0a3b3e38313c70,0x3233732e20676572,0x3e3833313c722520,0x2e206765722e0a3b\n"
".quad 0x3c6c722520343673,0x090a0a3b3e343432,0x206465726168732e,0x34206e67696c612e\n"
".quad 0x635f5f2038622e20,0x61636f6c5f616475,0x38335f7261765f6c,0x6e5f32335f373736\n"
".quad 0x74736e6f635f6e6f,0x35325b586d75735f,0x732e090a0a3b5d36,0x612e206465726168\n"
".quad 0x2e2034206e67696c,0x6475635f5f203862,0x5f6c61636f6c5f61,0x373638335f726176\n"
".quad 0x6e6f6e5f32345f37,0x735f74736e6f635f,0x5d3635325b596d75,0x6168732e090a0a3b\n"
".quad 0x696c612e20646572,0x38622e2034206e67,0x5f616475635f5f20,0x61765f6c61636f6c\n"
".quad 0x5f37373638335f72,0x635f6e6f6e5f3235,0x6d75735f74736e6f,0x0a3b5d3635325b5a\n"
".quad 0x65726168732e090a,0x6e67696c612e2064,0x5f2038622e203420,0x6f6c5f616475635f\n"
".quad 0x5f7261765f6c6163,0x30335f3837363833,0x6e6f635f6e6f6e5f,0x6b636568635f7473\n"
".quad 0x646c0a0a3b5d345b,0x752e6d617261702e,0x2c316c7225203436,0x726d37315a5f5b20\n"
".quad 0x416279685f645f74,0x506563726f665f42,0x535f536d665f5366,0x7261705f695f535f\n"
".quad 0x6c0a3b5d305f6d61,0x2e6d617261702e64,0x336c722520343675,0x6d37315a5f5b202c\n"
".quad 0x6279685f645f7472,0x6563726f665f4241,0x5f536d665f536650,0x61705f695f535f53\n"
".quad 0x0a3b5d335f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67,0x2c346c7225203436\n"
".quad 0x2e0a3b316c722520,0x3833203220636f6c,0x766f6d0a31203432,0x317225203233752e\n"
".quad 0x69746e25202c3733,0x766f6d0a3b782e64,0x317225203233752e,0x6961746325202c30\n"
".quad 0x766f6d0a3b782e64,0x317225203233752e,0x2e64697425202c31,0x6c2e64616d0a3b78\n"
".quad 0x7225203233732e6f,0x33317225202c3231,0x2c30317225202c37,0x2e0a3b3131722520\n"
".quad 0x3833203220636f6c,0x766f6d0a31203532,0x317225203233752e,0x6469746e25202c33\n"
".quad 0x2e766f6d0a3b792e,0x3431722520323375,0x646961746325202c,0x2e766f6d0a3b792e\n"
".quad 0x3531722520323375,0x792e64697425202c,0x6f6c2e64616d0a3b,0x327225203233732e\n"
".quad 0x202c33317225202c,0x7225202c34317225,0x636f6c2e0a3b3531,0x2036323833203220\n"
".quad 0x33752e766f6d0a31,0x202c363172252032,0x3b7a2e6469746e25,0x3233752e766f6d0a\n"
".quad 0x25202c3731722520,0x3b7a2e6469617463,0x3233752e766f6d0a,0x25202c3831722520\n"
".quad 0x6d0a3b7a2e646974,0x33732e6f6c2e6461,0x25202c3372252032,0x317225202c363172\n"
".quad 0x3b38317225202c37,0x3436752e7476630a,0x6c7225203233752e,0x3b32317225202c35\n"
".quad 0x203220636f6c2e0a,0x630a312037323833,0x732e3436732e7476,0x2c366c7225203233\n"
".quad 0x68730a3b32722520,0x7225203233622e6c,0x202c337225202c34,0x20636f6c2e0a3b36\n"
".quad 0x3120373238332032,0x3436732e7476630a,0x6c7225203233732e,0x0a3b347225202c37\n"
".quad 0x203436732e646461,0x25202c30316c7225,0x6c7225202c376c72,0x20636f6c2e0a3b36\n"
".quad 0x3120373238332032,0x2e6f6c2e64616d0a,0x386c722520343673,0x2c30316c7225202c\n"
".quad 0x25202c336c722520,0x766f6d0a3b356c72,0x317225203233752e,0x6c2e0a3b30202c39\n"
".quad 0x333833203220636f,0x732e74730a312031,0x33752e6465726168,0x6475635f5f5b2032\n"
".quad 0x5f6c61636f6c5f61,0x373638335f726176,0x6e6f6e5f30335f38,0x635f74736e6f635f\n"
".quad 0x25202c5d6b636568,0x6f6c2e0a3b393172,0x3233383320322063,0x732e7261620a3120\n"
".quad 0x730a3b3020636e79,0x25203436622e6c68,0x7225202c31316c72,0x0a3b3233202c386c\n"
".quad 0x203436732e726873,0x7225202c396c7225,0x3b3233202c31316c,0x203220636f6c2e0a\n"
".quad 0x730a312033343833,0x25203436622e6c68,0x7225202c32316c72,0x610a3b32202c396c\n"
".quad 0x25203436732e6464,0x7225202c33316c72,0x316c7225202c346c,0x6c672e646c0a3b32\n"
".quad 0x3233662e6c61626f,0x255b202c32662520,0x610a3b5d33316c72,0x25203233732e6464\n"
".quad 0x327225202c313272,0x6c2e0a3b312d202c,0x343833203220636f,0x2e7476630a312034\n"
".quad 0x203233732e343673,0x25202c34316c7225,0x6464610a3b313272,0x6c7225203436732e\n"
".quad 0x316c7225202c3531,0x3b376c7225202c34,0x3436732e6464610a,0x202c36316c722520\n"
".quad 0x38202c35316c7225,0x2e646c0a3b323931,0x36752e6d61726170,0x3334326c72252034\n"
".quad 0x6d37315a5f5b202c,0x6279685f645f7472,0x6563726f665f4241,0x5f536d665f536650\n"
".quad 0x61705f695f535f53,0x0a3b5d335f6d6172,0x33203220636f6c2e,0x616d0a3120343438\n"
".quad 0x3436732e6f6c2e64,0x202c37316c722520,0x25202c36316c7225,0x25202c3334326c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x316c7225202c3831,0x730a3b3233202c37\n"
".quad 0x25203436732e7268,0x7225202c39316c72,0x3b3233202c38316c,0x203220636f6c2e0a\n"
".quad 0x730a312034343833,0x25203436622e6c68,0x7225202c30326c72,0x0a3b32202c39316c\n"
".quad 0x203436732e646461,0x25202c31326c7225,0x6c7225202c346c72,0x672e646c0a3b3032\n"
".quad 0x33662e6c61626f6c,0x5b202c3366252032,0x0a3b5d31326c7225,0x33203220636f6c2e\n"
".quad 0x64610a3120353438,0x7225203233732e64,0x2c327225202c3332,0x2e7476630a3b3120\n"
".quad 0x203233732e343673,0x25202c32326c7225,0x6464610a3b333272,0x6c7225203436732e\n"
".quad 0x326c7225202c3332,0x3b376c7225202c32,0x3436732e6464610a,0x202c34326c722520\n"
".quad 0x31202c33326c7225,0x6c2e0a3b34383336,0x343833203220636f,0x2e64616d0a312035\n"
".quad 0x25203436732e6f6c,0x7225202c35326c72,0x6c7225202c34326c,0x6c7225202c333432\n"
".quad 0x622e6c68730a3b35,0x36326c7225203436,0x2c35326c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x326c7225202c3732,0x2e0a3b3233202c36,0x3833203220636f6c\n"
".quad 0x6c68730a31203534,0x6c7225203436622e,0x326c7225202c3832,0x64610a3b32202c37\n"
".quad 0x7225203436732e64,0x6c7225202c39326c,0x38326c7225202c34,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c346625,0x64610a3b5d39326c,0x7225203233732e64\n"
".quad 0x2c347225202c3532,0x6c2e0a3b34362d20,0x343833203220636f,0x2e7476630a312036\n"
".quad 0x203233732e343673,0x25202c30336c7225,0x6464610a3b353272,0x6c7225203436732e\n"
".quad 0x366c7225202c3133,0x3b30336c7225202c,0x3436732e6464610a,0x202c32336c722520\n"
".quad 0x33202c31336c7225,0x6c2e0a3b34363836,0x343833203220636f,0x2e64616d0a312036\n"
".quad 0x25203436732e6f6c,0x7225202c33336c72,0x6c7225202c32336c,0x6c7225202c333432\n"
".quad 0x622e6c68730a3b35,0x34336c7225203436,0x2c33336c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x336c7225202c3533,0x2e0a3b3233202c34,0x3833203220636f6c\n"
".quad 0x6c68730a31203634,0x6c7225203436622e,0x336c7225202c3633,0x64610a3b32202c35\n"
".quad 0x7225203436732e64,0x6c7225202c37336c,0x36336c7225202c34,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c356625,0x64610a3b5d37336c,0x7225203436732e64\n"
".quad 0x6c7225202c38336c,0x336c7225202c3431,0x732e6464610a3b30,0x39336c7225203436\n"
".quad 0x2c38336c7225202c,0x0a3b363530353420,0x33203220636f6c2e,0x616d0a3120373438\n"
".quad 0x3436732e6f6c2e64,0x202c30346c722520,0x25202c39336c7225,0x25202c3334326c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x346c7225202c3134,0x730a3b3233202c30\n"
".quad 0x25203436732e7268,0x7225202c32346c72,0x3b3233202c31346c,0x203220636f6c2e0a\n"
".quad 0x730a312037343833,0x25203436622e6c68,0x7225202c33346c72,0x0a3b32202c32346c\n"
".quad 0x203436732e646461,0x25202c34346c7225,0x6c7225202c346c72,0x672e646c0a3b3334\n"
".quad 0x33662e6c61626f6c,0x5b202c3666252032,0x0a3b5d34346c7225,0x203436732e646461\n"
".quad 0x25202c35346c7225,0x7225202c32326c72,0x6464610a3b30336c,0x6c7225203436732e\n"
".quad 0x346c7225202c3634,0x3834323335202c35,0x3220636f6c2e0a3b,0x0a31203834383320\n"
".quad 0x732e6f6c2e64616d,0x37346c7225203436,0x2c36346c7225202c,0x2c3334326c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x7225202c38346c72,0x3b3233202c37346c\n"
".quad 0x3436732e7268730a,0x202c39346c722520,0x33202c38346c7225,0x20636f6c2e0a3b32\n"
".quad 0x3120383438332032,0x3436622e6c68730a,0x202c30356c722520,0x32202c39346c7225\n"
".quad 0x36732e6464610a3b,0x2c31356c72252034,0x25202c346c722520,0x646c0a3b30356c72\n"
".quad 0x2e6c61626f6c672e,0x2c37662520323366,0x5d31356c72255b20,0x33732e6464610a3b\n"
".quad 0x202c393272252032,0x3b3436202c347225,0x203220636f6c2e0a,0x630a312039343833\n"
".quad 0x732e3436732e7476,0x32356c7225203233,0x0a3b39327225202c,0x203436732e646461\n"
".quad 0x25202c33356c7225,0x6c7225202c366c72,0x2e6464610a3b3235,0x356c722520343673\n"
".quad 0x33356c7225202c34,0x3b3434333735202c,0x203220636f6c2e0a,0x6d0a312039343833\n"
".quad 0x36732e6f6c2e6461,0x2c35356c72252034,0x202c34356c722520,0x202c3334326c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x6c7225202c36356c,0x0a3b3233202c3535\n"
".quad 0x203436732e726873,0x25202c37356c7225,0x3233202c36356c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203934383320,0x203436622e6c6873,0x25202c38356c7225,0x3b32202c37356c72\n"
".quad 0x3436732e6464610a,0x202c39356c722520,0x7225202c346c7225,0x2e646c0a3b38356c\n"
".quad 0x662e6c61626f6c67,0x202c386625203233,0x3b5d39356c72255b,0x3436732e6464610a\n"
".quad 0x202c30366c722520,0x25202c34316c7225,0x64610a3b32356c72,0x7225203436732e64\n"
".quad 0x6c7225202c31366c,0x33353536202c3036,0x20636f6c2e0a3b36,0x3120303538332032\n"
".quad 0x2e6f6c2e64616d0a,0x366c722520343673,0x31366c7225202c32,0x3334326c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x25202c33366c7225,0x3233202c32366c72\n"
".quad 0x36732e7268730a3b,0x2c34366c72252034,0x202c33366c722520,0x636f6c2e0a3b3233\n"
".quad 0x2030353833203220,0x36622e6c68730a31,0x2c35366c72252034,0x202c34366c722520\n"
".quad 0x732e6464610a3b32,0x36366c7225203436,0x202c346c7225202c,0x6c0a3b35366c7225\n"
".quad 0x6c61626f6c672e64,0x396625203233662e,0x36366c72255b202c,0x20636f6c2e0a3b5d\n"
".quad 0x3120313538332032,0x71652e707465730a,0x317025203233732e,0x36202c337225202c\n"
".quad 0x20317025400a3b33,0x3133424220617262,0x6f6c2e0a0a3b325f,0x3534383320322063\n"
".quad 0x752e7476630a3120,0x25203233752e3436,0x7225202c37366c72,0x636f6c2e0a3b3332\n"
".quad 0x2039343833203220,0x36752e7476630a31,0x7225203233752e34,0x327225202c38366c\n"
".quad 0x732e6464610a3b39,0x39366c7225203436,0x2c37366c7225202c,0x0a3b38366c722520\n"
".quad 0x203436732e646461,0x25202c30376c7225,0x3337202c39366c72,0x7476630a3b383237\n"
".quad 0x3233752e3436752e,0x202c31376c722520,0x646c0a3b32317225,0x752e6d617261702e\n"
".quad 0x34326c7225203436,0x37315a5f5b202c32,0x79685f645f74726d,0x63726f665f424162\n"
".quad 0x536d665f53665065,0x705f695f535f535f,0x3b5d335f6d617261,0x203220636f6c2e0a\n"
".quad 0x6d0a312032353833,0x36732e6f6c2e6461,0x2c32376c72252034,0x202c30376c722520\n"
".quad 0x202c3234326c7225,0x6c0a3b31376c7225,0x2e6d617261702e64,0x326c722520343675\n"
".quad 0x315a5f5b202c3733,0x685f645f74726d37,0x726f665f42416279,0x6d665f5366506563\n"
".quad 0x5f695f535f535f53,0x5d305f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f\n"
".quad 0x6c7225203436752e,0x326c7225202c3337,0x2e6c68730a3b3733,0x376c722520343662\n"
".quad 0x32376c7225202c34,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c35376c\n"
".quad 0x0a3b3233202c3437,0x33203220636f6c2e,0x68730a3120323538,0x7225203436622e6c\n"
".quad 0x6c7225202c36376c,0x610a3b32202c3537,0x25203436732e6464,0x7225202c37376c72\n"
".quad 0x6c7225202c33376c,0x672e646c0a3b3637,0x33662e6c61626f6c,0x2c35353466252032\n"
".quad 0x5d37376c72255b20,0x5f313342420a0a3b,0x732e6464610a3a32,0x2c32357225203233\n"
".quad 0x2d202c3231722520,0x20636f6c2e0a3b31,0x3120343538332032,0x2e6e722e7476630a\n"
".quad 0x203233732e323366,0x7225202c33386625,0x2e6464610a3b3235,0x3537662520323366\n"
".quad 0x202c33386625202c,0x3030303046336630,0x2e7476630a3b3030,0x732e3233662e6e72\n"
".quad 0x2c34386625203233,0x64610a3b32722520,0x6625203233662e64,0x34386625202c3538\n"
".quad 0x303046336630202c,0x76630a3b30303030,0x3233662e6e722e74,0x386625203233732e\n"
".quad 0x0a3b347225202c36,0x203233662e646461,0x6625202c34336625,0x36386625202c3538\n"
".quad 0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32,0x326625202c333266\n"
".quad 0x2c35326625202c34,0x202c7d3632662520,0x5f6665527865745b,0x66257b202c413166\n"
".quad 0x34336625202c3537,0x6c2e090a0a3b5d7d,0x353833203220636f,0x2e6464610a312035\n"
".quad 0x3336722520323373,0x202c32317225202c,0x722e7476630a3b31,0x33732e3233662e6e\n"
".quad 0x202c373866252032,0x64610a3b33367225,0x6625203233662e64,0x37386625202c3138\n"
".quad 0x303046336630202c,0x090a0a3b30303030,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x2c393266257b2032,0x25202c3033662520,0x336625202c313366,0x7865745b202c7d32\n"
".quad 0x2c4133665f666552,0x202c313866257b20,0x0a3b5d7d34336625,0x3220636f6c2e090a\n"
".quad 0x0a31203635383320,0x662e6e722e747663,0x25203233732e3233,0x327225202c383866\n"
".quad 0x662e6464610a3b31,0x2c39386625203233,0x30202c3838662520,0x3030303030463366\n"
".quad 0x662e6464610a3b30,0x2c36346625203233,0x25202c3938662520,0x74090a0a3b363866\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x202c353366257b20,0x6625202c36336625\n"
".quad 0x38336625202c3733,0x527865745b202c7d,0x202c4135665f6665,0x25202c353766257b\n"
".quad 0x0a0a3b5d7d363466,0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e\n"
".quad 0x32346625202c3134,0x202c33346625202c,0x5b202c7d34346625,0x665f666552786574\n"
".quad 0x3866257b202c4136,0x7d36346625202c31,0x6f6c2e090a0a3b5d,0x3835383320322063\n"
".quad 0x722e7476630a3120,0x33732e3233662e6e,0x202c303966252032,0x64610a3b33327225\n"
".quad 0x6625203233662e64,0x30396625202c3139,0x303046336630202c,0x64610a3b30303030\n"
".quad 0x6625203233662e64,0x31396625202c3835,0x0a3b36386625202c,0x64322e786574090a\n"
".quad 0x2e3233662e34762e,0x3466257b20323366,0x2c38346625202c37,0x25202c3934662520\n"
".quad 0x745b202c7d303566,0x37665f6665527865,0x313866257b202c41,0x5d7d38356625202c\n"
".quad 0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366,0x25202c333566257b\n"
".quad 0x356625202c343566,0x7d36356625202c35,0x65527865745b202c,0x7b202c4138665f66\n"
".quad 0x6625202c35376625,0x090a0a3b5d7d3835,0x33203220636f6c2e,0x76630a3120303638\n"
".quad 0x3233662e6e722e74,0x396625203233732e,0x3b39327225202c32,0x3233662e6464610a\n"
".quad 0x25202c3037662520,0x396625202c353866,0x786574090a0a3b32,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x6625202c39356625,0x31366625202c3036,0x2c7d32366625202c\n"
".quad 0x6665527865745b20,0x7b202c413531665f,0x6625202c35376625,0x090a0a3b5d7d3037\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3666257b20323366,0x2c36366625202c35\n"
".quad 0x25202c3736662520,0x745b202c7d383666,0x31665f6665527865,0x3866257b202c4137\n"
".quad 0x7d30376625202c31,0x6f6c2e090a0a3b5d,0x3236383320322063,0x722e7476630a3120\n"
".quad 0x33732e3233662e6e,0x202c333966252032,0x64610a3b35327225,0x6625203233662e64\n"
".quad 0x35386625202c3238,0x0a3b33396625202c,0x64322e786574090a,0x2e3233662e34762e\n"
".quad 0x3766257b20323366,0x2c32376625202c31,0x25202c3337662520,0x745b202c7d343766\n"
".quad 0x31665f6665527865,0x3766257b202c4130,0x7d32386625202c35,0x74090a090a0a3b5d\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x202c373766257b20,0x6625202c38376625\n"
".quad 0x30386625202c3937,0x527865745b202c7d,0x2c413231665f6665,0x202c313866257b20\n"
".quad 0x0a3b5d7d32386625,0x3220636f6c2e090a,0x730a312034313120,0x732e71652e707465\n"
".quad 0x202c327025203233,0x3336202c32317225,0x652e707465730a3b,0x7025203233732e71\n"
".quad 0x202c327225202c33,0x72702e726f0a3b30,0x202c347025206465,0x337025202c327025\n"
".quad 0x3220636f6c2e0a3b,0x730a312034313120,0x732e71652e707465,0x202c357025203233\n"
".quad 0x3b3336202c327225,0x646572702e726f0a,0x7025202c36702520,0x0a3b357025202c34\n"
".quad 0x31203220636f6c2e,0x7465730a31203431,0x3233732e71652e70,0x7225202c37702520\n"
".quad 0x726f0a3b30202c33,0x702520646572702e,0x202c367025202c38,0x2e726f0a3b377025\n"
".quad 0x3170252064657270,0x202c387025202c30,0x6f6c2e0a3b317025,0x3432383320322063\n"
".quad 0x752e766f6d0a3120,0x3633317225203233,0x782e64697425202c,0x69772e6c756d0a3b\n"
".quad 0x25203233752e6564,0x7225202c38376c72,0x0a3b34202c363331,0x203436752e766f6d\n"
".quad 0x5f202c39376c7225,0x6f6c5f616475635f,0x5f7261765f6c6163,0x32335f3737363833\n"
".quad 0x6e6f635f6e6f6e5f,0x3b586d75735f7473,0x3436732e6464610a,0x202c30386c722520\n"
".quad 0x25202c39376c7225,0x6c2e0a3b38376c72,0x373833203220636f,0x732e74730a312035\n"
".quad 0x33752e6465726168,0x30386c72255b2032,0x3b39317225202c5d,0x3436752e766f6d0a\n"
".quad 0x202c31386c722520,0x6c5f616475635f5f,0x7261765f6c61636f,0x345f37373638335f\n"
".quad 0x6f635f6e6f6e5f32,0x596d75735f74736e,0x36732e6464610a3b,0x2c32386c72252034\n"
".quad 0x202c31386c722520,0x2e0a3b38376c7225,0x3833203220636f6c,0x2e74730a31203637\n"
".quad 0x752e646572616873,0x386c72255b203233,0x39317225202c5d32,0x36752e766f6d0a3b\n"
".quad 0x2c33386c72252034,0x5f616475635f5f20,0x61765f6c61636f6c,0x5f37373638335f72\n"
".quad 0x635f6e6f6e5f3235,0x6d75735f74736e6f,0x732e6464610a3b5a,0x34386c7225203436\n"
".quad 0x2c33386c7225202c,0x0a3b38376c722520,0x33203220636f6c2e,0x74730a3120373738\n"
".quad 0x2e6465726168732e,0x6c72255b20323375,0x317225202c5d3438,0x20636f6c2e0a3b39\n"
".quad 0x0a31203431312032,0x7262203031702540,0x345f313342422061,0x20636f6c2e0a0a3b\n"
".quad 0x3120323439332032,0x3233662e6275730a,0x25202c3439662520,0x326625202c333266\n"
".quad 0x662e6464610a3b39,0x2c35396625203233,0x25202c3439662520,0x6275730a3b353366\n"
".quad 0x396625203233662e,0x2c35396625202c36,0x730a3b3134662520,0x25203233662e6275\n"
".quad 0x396625202c373966,0x3b37346625202c36,0x3233662e6464610a,0x25202c3839662520\n"
".quad 0x356625202c373966,0x662e6464610a3b33,0x2c39396625203233,0x25202c3839662520\n"
".quad 0x6275730a3b313766,0x316625203233662e,0x39396625202c3030,0x0a3b37376625202c\n"
".quad 0x203233662e646461,0x25202c3130316625,0x6625202c30303166,0x2e6275730a3b3935\n"
".quad 0x3031662520323366,0x3130316625202c32,0x0a3b35366625202c,0x203233662e627573\n"
".quad 0x25202c3330316625,0x3b346625202c3366,0x3233662e6464610a,0x202c343031662520\n"
".quad 0x25202c3330316625,0x6464610a3b353366,0x316625203233662e,0x30316625202c3530\n"
".quad 0x3b31346625202c34,0x3233662e6275730a,0x202c363031662520,0x25202c3530316625\n"
".quad 0x6275730a3b373466,0x316625203233662e,0x30316625202c3730,0x3b33356625202c36\n"
".quad 0x3233662e6464610a,0x202c383031662520,0x25202c3730316625,0x2e6275730a3b3666\n"
".quad 0x3031662520323366,0x3830316625202c39,0x610a3b376625202c,0x25203233662e6464\n"
".quad 0x6625202c30313166,0x396625202c393031,0x33662e6275730a3b,0x2c31313166252032\n"
".quad 0x202c303131662520,0x610a3b3535346625,0x25203233662e6464,0x6625202c32313166\n"
".quad 0x3b31376625202c35,0x3233662e6464610a,0x202c333131662520,0x25202c3231316625\n"
".quad 0x2e6464610a3b3666,0x3131662520323366,0x3331316625202c34,0x0a3b37376625202c\n"
".quad 0x203233662e646461,0x25202c3531316625,0x6625202c34313166,0x662e6275730a3b37\n"
".quad 0x3631316625203233,0x2c3531316625202c,0x75730a3b38662520,0x6625203233662e62\n"
".quad 0x316625202c373131,0x39356625202c3631,0x33662e6275730a3b,0x2c38313166252032\n"
".quad 0x202c373131662520,0x6275730a3b396625,0x316625203233662e,0x31316625202c3931\n"
".quad 0x3b35366625202c38,0x3233662e6275730a,0x202c303231662520,0x25202c3931316625\n"
".quad 0x75730a3b35353466,0x6625203233662e62,0x336625202c313231,0x0a3b326625202c35\n"
".quad 0x33203220636f6c2e,0x64610a3120323439,0x6625203233662e64,0x316625202c323231\n"
".quad 0x31346625202c3132,0x33662e6464610a3b,0x2c33323166252032,0x202c323231662520\n"
".quad 0x64610a3b37346625,0x6625203233662e64,0x316625202c343231,0x33356625202c3332\n"
".quad 0x33662e6464610a3b,0x2c35323166252032,0x202c343231662520,0x64610a3b31376625\n"
".quad 0x6625203233662e64,0x316625202c363231,0x3b366625202c3532,0x3233662e6464610a\n"
".quad 0x202c373231662520,0x25202c3632316625,0x6464610a3b373766,0x316625203233662e\n"
".quad 0x32316625202c3832,0x0a3b376625202c37,0x203233662e646461,0x25202c3932316625\n"
".quad 0x6625202c38323166,0x2e6464610a3b3935,0x3331662520323366,0x3932316625202c30\n"
".quad 0x610a3b396625202c,0x25203233662e6464,0x6625202c31333166,0x366625202c303331\n"
".quad 0x662e6464610a3b35,0x3233316625203233,0x2c3133316625202c,0x0a3b353534662520\n"
".quad 0x203233662e6c756d,0x25202c3333316625,0x6625202c31313166,0x616d660a3b313131\n"
".quad 0x203233662e6e722e,0x25202c3433316625,0x6625202c32303166,0x316625202c323031\n"
".quad 0x2e6c756d0a3b3333,0x3331662520323366,0x3032316625202c35,0x3b3032316625202c\n"
".quad 0x2e6e722e616d660a,0x3331662520323366,0x3032316625202c36,0x2c3032316625202c\n"
".quad 0x0a3b343331662520,0x203233662e627573,0x25202c3733316625,0x6625202c32333166\n"
".quad 0x6c756d0a3b363331,0x316625203233662e,0x33326625202c3833,0x303830436630202c\n"
".quad 0x6d660a3b30303030,0x3233662e6e722e61,0x202c393331662520,0x346630202c326625\n"
".quad 0x2c30303030303431,0x0a3b383331662520,0x662e6e722e616d66,0x3034316625203233\n"
".quad 0x30202c336625202c,0x3030303038304366,0x3933316625202c30,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x39326625202c3134,0x303830436630202c,0x6625202c30303030\n"
".quad 0x616d660a3b303431,0x203233662e6e722e,0x25202c3234316625,0x30436630202c3466\n"
".quad 0x202c303030303038,0x610a3b3134316625,0x25203233662e6464,0x6625202c33343166\n"
".quad 0x336625202c323431,0x662e6464610a3b35,0x3434316625203233,0x2c3334316625202c\n"
".quad 0x610a3b3134662520,0x25203233662e6464,0x6625202c35343166,0x346625202c343431\n"
".quad 0x662e6464610a3b37,0x3634316625203233,0x2c3534316625202c,0x660a3b3335662520\n"
".quad 0x33662e6e722e616d,0x2c37343166252032,0x6630202c35662520,0x3030303030383043\n"
".quad 0x3b3634316625202c,0x3233662e6464610a,0x202c383431662520,0x25202c3734316625\n"
".quad 0x6464610a3b313766,0x316625203233662e,0x34316625202c3934,0x0a3b366625202c38\n"
".quad 0x203233662e646461,0x25202c3035316625,0x6625202c39343166,0x2e6464610a3b3737\n"
".quad 0x3531662520323366,0x3035316625202c31,0x660a3b376625202c,0x33662e6e722e616d\n"
".quad 0x2c32353166252032,0x6630202c38662520,0x3030303030383043,0x3b3135316625202c\n"
".quad 0x3233662e6464610a,0x202c333531662520,0x25202c3235316625,0x6464610a3b393566\n"
".quad 0x316625203233662e,0x35316625202c3435,0x0a3b396625202c33,0x203233662e646461\n"
".quad 0x25202c3535316625,0x6625202c34353166,0x2e6464610a3b3536,0x3531662520323366\n"
".quad 0x3535316625202c36,0x3b3535346625202c,0x2e6e722e616d660a,0x3531662520323366\n"
".quad 0x3633316625202c37,0x314630346630202c,0x6625202c34313534,0x6c756d0a3b363531\n"
".quad 0x316625203233662e,0x39326625202c3835,0x304130346630202c,0x6d660a3b30303030\n"
".quad 0x3233662e6e722e61,0x202c393531662520,0x6630202c33326625,0x3030303030413043\n"
".quad 0x3b3835316625202c,0x2e6e722e616d660a,0x3631662520323366,0x3230316625202c30\n"
".quad 0x354446336630202c,0x6625202c35353535,0x6c756d0a3b393531,0x316625203233662e\n"
".quad 0x2c346625202c3136,0x3030413034663020,0x616d660a3b303030,0x203233662e6e722e\n"
".quad 0x25202c3236316625,0x30436630202c3366,0x202c303030303041,0x660a3b3136316625\n"
".quad 0x33662e6e722e616d,0x2c33363166252032,0x202c313131662520,0x3535354446336630\n"
".quad 0x36316625202c3535,0x662e6c756d0a3b32,0x3436316625203233,0x30202c386625202c\n"
".quad 0x3030303041303466,0x722e616d660a3b30,0x6625203233662e6e,0x356625202c353631\n"
".quad 0x304130436630202c,0x6625202c30303030,0x616d660a3b343631,0x203233662e6e722e\n"
".quad 0x25202c3636316625,0x6630202c30323166,0x3535353535444633,0x3b3536316625202c\n"
".quad 0x3233662e6464610a,0x202c373631662520,0x6625202c33326625,0x2e6275730a3b3332\n"
".quad 0x3631662520323366,0x3736316625202c38,0x2e0a3b336625202c,0x3933203220636f6c\n"
".quad 0x6464610a31203234,0x316625203233662e,0x39326625202c3936,0x0a3b39326625202c\n"
".quad 0x203233662e646461,0x25202c3037316625,0x6625202c38363166,0x6275730a3b393631\n"
".quad 0x316625203233662e,0x37316625202c3137,0x0a3b346625202c30,0x33203220636f6c2e\n"
".quad 0x64610a3120323439,0x6625203233662e64,0x316625202c323731,0x35336625202c3137\n"
".quad 0x33662e6464610a3b,0x2c33373166252032,0x202c323731662520,0x64610a3b31346625\n"
".quad 0x6625203233662e64,0x316625202c343731,0x37346625202c3337,0x33662e6464610a3b\n"
".quad 0x2c35373166252032,0x202c343731662520,0x75730a3b33356625,0x6625203233662e62\n"
".quad 0x316625202c363731,0x3b356625202c3537,0x203220636f6c2e0a,0x610a312032343933\n"
".quad 0x25203233662e6464,0x6625202c37373166,0x376625202c363731,0x662e766f6d0a3b31\n"
".quad 0x3837316625203233,0x303030436630202c,0x6c2e0a3b30303030,0x343933203220636f\n"
".quad 0x2e616d660a312032,0x25203233662e6e72,0x6625202c39373166,0x3030436630202c36\n"
".quad 0x25202c3030303030,0x64610a3b37373166,0x6625203233662e64,0x316625202c303831\n"
".quad 0x37376625202c3937,0x6e722e616d660a3b,0x316625203233662e,0x2c376625202c3138\n"
".quad 0x3030303043663020,0x316625202c303030,0x2e6275730a3b3038,0x3831662520323366\n"
".quad 0x3138316625202c32,0x2e0a3b386625202c,0x3933203220636f6c,0x6464610a31203234\n"
".quad 0x316625203233662e,0x38316625202c3338,0x3b39356625202c32,0x2e6e722e616d660a\n"
".quad 0x3831662520323366,0x202c396625202c34,0x3030303030436630,0x38316625202c3030\n"
".quad 0x662e6464610a3b33,0x3538316625203233,0x2c3438316625202c,0x660a3b3536662520\n"
".quad 0x33662e6e722e616d,0x2c36383166252032,0x202c353534662520,0x3030303030436630\n"
".quad 0x38316625202c3030,0x662e6464610a3b35,0x3738316625203233,0x2c3230316625202c\n"
".quad 0x0a3b323031662520,0x662e6e722e616d66,0x3838316625203233,0x2c3131316625202c\n"
".quad 0x202c313131662520,0x6e0a3b3533316625,0x25203233662e6765,0x6625202c39383166\n"
".quad 0x616d660a3b383831,0x203233662e6e722e,0x25202c3039316625,0x6625202c37383166\n"
".quad 0x316625202c323031,0x2e6275730a3b3938,0x3931662520323366,0x3638316625202c31\n"
".quad 0x3b3039316625202c,0x3233662e6464610a,0x202c323931662520,0x336625202c336625\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x33326625202c3339,0x303830436630202c\n"
".quad 0x6625202c30303030,0x616d660a3b323931,0x203233662e6e722e,0x25202c3439316625\n"
".quad 0x436630202c393266,0x2c30303030303830,0x0a3b333931662520,0x203233662e646461\n"
".quad 0x25202c3539316625,0x3b346625202c3466,0x3233662e6464610a,0x202c363931662520\n"
".quad 0x25202c3439316625,0x64610a3b35393166,0x6625203233662e64,0x316625202c373931\n"
".quad 0x35336625202c3639,0x33662e6464610a3b,0x2c38393166252032,0x202c373931662520\n"
".quad 0x64610a3b31346625,0x6625203233662e64,0x316625202c393931,0x37346625202c3839\n"
".quad 0x33662e6464610a3b,0x2c30303266252032,0x202c393931662520,0x64610a3b33356625\n"
".quad 0x6625203233662e64,0x356625202c313032,0x610a3b356625202c,0x25203233662e6464\n"
".quad 0x6625202c32303266,0x326625202c303032,0x2e6464610a3b3130,0x3032662520323366\n"
".quad 0x3230326625202c33,0x0a3b31376625202c,0x662e6e722e616d66,0x3430326625203233\n"
".quad 0x30202c366625202c,0x3030303030304366,0x3330326625202c30,0x33662e6464610a3b\n"
".quad 0x2c35303266252032,0x202c343032662520,0x6d660a3b37376625,0x3233662e6e722e61\n"
".quad 0x202c363032662520,0x436630202c376625,0x2c30303030303030,0x0a3b353032662520\n"
".quad 0x203233662e646461,0x25202c3730326625,0x3b386625202c3866,0x3233662e6464610a\n"
".quad 0x202c383032662520,0x25202c3630326625,0x64610a3b37303266,0x6625203233662e64\n"
".quad 0x326625202c393032,0x39356625202c3830,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x2c396625202c3031,0x3030303043663020,0x326625202c303030,0x2e6464610a3b3930\n"
".quad 0x3132662520323366,0x3031326625202c31,0x0a3b35366625202c,0x662e6e722e616d66\n"
".quad 0x3231326625203233,0x2c3535346625202c,0x3030303043663020,0x326625202c303030\n"
".quad 0x2e6464610a3b3131,0x3132662520323366,0x202c336625202c33,0x6464610a3b346625\n"
".quad 0x326625203233662e,0x31326625202c3431,0x3b35336625202c33,0x3233662e6464610a\n"
".quad 0x202c353132662520,0x25202c3431326625,0x6464610a3b313466,0x326625203233662e\n"
".quad 0x31326625202c3631,0x3b37346625202c35,0x3233662e6464610a,0x202c373132662520\n"
".quad 0x25202c3631326625,0x6275730a3b333566,0x326625203233662e,0x31326625202c3831\n"
".quad 0x0a3b356625202c37,0x203233662e627573,0x25202c3931326625,0x6625202c38313266\n"
".quad 0x2e6275730a3b3137,0x3232662520323366,0x3931326625202c30,0x0a3b37376625202c\n"
".quad 0x203233662e627573,0x25202c3132326625,0x6625202c30323266,0x662e6275730a3b38\n"
".quad 0x3232326625203233,0x2c3132326625202c,0x730a3b3935662520,0x25203233662e6275\n"
".quad 0x6625202c33323266,0x366625202c323232,0x20636f6c2e0a3b35,0x3120323439332032\n"
".quad 0x3233662e67656e0a,0x202c343232662520,0x660a3b3032316625,0x33662e6e722e616d\n"
".quad 0x2c35323266252032,0x202c343232662520,0x25202c3032316625,0x75730a3b33333166\n"
".quad 0x6625203233662e62,0x326625202c363232,0x32326625202c3332,0x662e67656e0a3b35\n"
".quad 0x3732326625203233,0x3b3539316625202c,0x2e6e722e616d660a,0x3232662520323366\n"
".quad 0x202c336625202c38,0x25202c3837316625,0x64610a3b37323266,0x6625203233662e64\n"
".quad 0x326625202c393232,0x35336625202c3832,0x33662e6464610a3b,0x2c30333266252032\n"
".quad 0x202c393232662520,0x64610a3b31346625,0x6625203233662e64,0x326625202c313332\n"
".quad 0x37346625202c3033,0x33662e6464610a3b,0x2c32333266252032,0x202c313332662520\n"
".quad 0x64610a3b33356625,0x6625203233662e64,0x326625202c333332,0x30326625202c3233\n"
".quad 0x662e6275730a3b31,0x3433326625203233,0x2c3333326625202c,0x730a3b3137662520\n"
".quad 0x25203233662e6275,0x6625202c35333266,0x376625202c343332,0x20636f6c2e0a3b37\n"
".quad 0x3120323439332032,0x3233662e6464610a,0x202c363332662520,0x25202c3533326625\n"
".quad 0x75730a3b37303266,0x6625203233662e62,0x326625202c373332,0x39356625202c3633\n"
".quad 0x33662e6275730a3b,0x2c38333266252032,0x202c373332662520,0x75730a3b35366625\n"
".quad 0x6625203233662e62,0x336625202c393332,0x3b31346625202c35,0x203220636f6c2e0a\n"
".quad 0x610a312032343933,0x25203233662e6464,0x6625202c30343266,0x346625202c393332\n"
".quad 0x662e6275730a3b37,0x3134326625203233,0x2c3034326625202c,0x2e0a3b3335662520\n"
".quad 0x3933203220636f6c,0x67656e0a31203234,0x326625203233662e,0x30316625202c3234\n"
".quad 0x722e616d660a3b32,0x6625203233662e6e,0x326625202c333432,0x31316625202c3234\n"
".quad 0x3134326625202c31,0x33662e6275730a3b,0x2c34343266252032,0x6625202c36662520\n"
".quad 0x662e6275730a3b37,0x3534326625203233,0x2c3434326625202c,0x6c2e0a3b39662520\n"
".quad 0x343933203220636f,0x2e6464610a312032,0x3432662520323366,0x3534326625202c36\n"
".quad 0x3b3535346625202c,0x3233662e67656e0a,0x202c373432662520,0x660a3b3131316625\n"
".quad 0x33662e6e722e616d,0x2c38343266252032,0x202c373432662520,0x25202c3032316625\n"
".quad 0x75730a3b36343266,0x6625203233662e62,0x376625202c393432,0x3b37376625202c31\n"
".quad 0x3233662e6275730a,0x202c303532662520,0x25202c3934326625,0x6f6c2e0a3b393566\n"
".quad 0x3234393320322063,0x662e6464610a3120,0x3135326625203233,0x2c3035326625202c\n"
".quad 0x660a3b3536662520,0x33662e6e722e616d,0x2c32353266252032,0x202c323432662520\n"
".quad 0x25202c3032316625,0x75730a3b31353266,0x6625203233662e62,0x326625202c333532\n"
".quad 0x37346625202c3933,0x3220636f6c2e0a3b,0x0a31203234393320,0x203233662e646461\n"
".quad 0x25202c3435326625,0x6625202c33353266,0x2e6275730a3b3335,0x3532662520323366\n"
".quad 0x3435326625202c35,0x0a3b31376625202c,0x203233662e646461,0x25202c3635326625\n"
".quad 0x6625202c35353266,0x2e6275730a3b3737,0x3532662520323366,0x3635326625202c37\n"
".quad 0x0a3b39356625202c,0x33203220636f6c2e,0x64610a3120323439,0x6625203233662e64\n"
".quad 0x326625202c383532,0x35366625202c3735,0x33662e67656e0a3b,0x2c39353266252032\n"
".quad 0x730a3b3134662520,0x25203233662e6275,0x6625202c30363266,0x336625202c393532\n"
".quad 0x20636f6c2e0a3b35,0x3120323439332032,0x3233662e6464610a,0x202c313632662520\n"
".quad 0x25202c3036326625,0x6464610a3b373466,0x326625203233662e,0x36326625202c3236\n"
".quad 0x3b33356625202c31,0x3233662e6464610a,0x202c333632662520,0x25202c3236326625\n"
".quad 0x2e6275730a3b3666,0x3632662520323366,0x3336326625202c34,0x2e0a3b376625202c\n"
".quad 0x3933203220636f6c,0x6464610a31203234,0x326625203233662e,0x36326625202c3536\n"
".quad 0x0a3b396625202c34,0x203233662e627573,0x25202c3636326625,0x6625202c35363266\n"
".quad 0x6275730a3b353534,0x326625203233662e,0x31376625202c3736,0x2e0a3b366625202c\n"
".quad 0x3933203220636f6c,0x6464610a31203234,0x326625203233662e,0x36326625202c3836\n"
".quad 0x3b37376625202c37,0x3233662e6275730a,0x202c393632662520,0x25202c3836326625\n"
".quad 0x2e6275730a3b3766,0x3732662520323366,0x3936326625202c30,0x0a3b39356625202c\n"
".quad 0x33203220636f6c2e,0x64610a3120323439,0x6625203233662e64,0x326625202c313732\n"
".quad 0x3b396625202c3037,0x3233662e6275730a,0x202c323732662520,0x25202c3137326625\n"
".quad 0x6f6c2e0a3b353666,0x3234393320322063,0x662e6464610a3120,0x3337326625203233\n"
".quad 0x2c3237326625202c,0x0a3b353534662520,0x203233662e766f6d,0x30202c3437326625\n"
".quad 0x3030303038453366,0x61702e646c0a3b30,0x203233662e6d6172,0x5b202c3435346625\n"
".quad 0x5f74726d37315a5f,0x5f42416279685f64,0x5366506563726f66,0x535f535f536d665f\n"
".quad 0x6d617261705f695f,0x6f6c2e0a3b5d325f,0x3234393320322063,0x662e6c756d0a3120\n"
".quad 0x3537326625203233,0x2c3435346625202c,0x3030384533663020,0x766f6d0a3b303030\n"
".quad 0x326625203233662e,0x45336630202c3637,0x0a3b303030303030,0x33203220636f6c2e\n"
".quad 0x756d0a3120323439,0x6625203233662e6c,0x326625202c373732,0x44336630202c3833\n"
".quad 0x0a3b424141414132,0x203233662e766f6d,0x30202c3837326625,0x4141414132443366\n"
".quad 0x20636f6c2e0a3b42,0x3120323439332032,0x3233662e6c756d0a,0x202c393732662520\n"
".quad 0x30202c3435346625,0x4141414141443366,0x662e6c756d0a3b42,0x3038326625203233\n"
".quad 0x2c3231326625202c,0x3833364333663020,0x6c756d0a3b393345,0x326625203233662e\n"
".quad 0x35346625202c3138,0x4543336630202c34,0x6d0a3b3933453833,0x25203233662e6c75\n"
".quad 0x6625202c32383266,0x326625202c313931,0x2e6c756d0a3b3138,0x3832662520323366\n"
".quad 0x3036316625202c33,0x434343336630202c,0x6f6d0a3b44434343,0x6625203233662e76\n"
".quad 0x336630202c343832,0x3b44434343434343,0x203220636f6c2e0a,0x6d0a312032343933\n"
".quad 0x25203233662e6c75,0x6625202c35383266,0x336630202c333631,0x3b44434343434343\n"
".quad 0x3233662e6c756d0a,0x202c363832662520,0x30202c3636316625,0x4343434343433366\n"
".quad 0x662e6c756d0a3b44,0x3738326625203233,0x2c3735316625202c,0x3032384233663020\n"
".quad 0x6c756d0a3b313238,0x326625203233662e,0x38326625202c3838,0x3431346630202c37\n"
".quad 0x660a3b3030303030,0x33662e6e722e616d,0x2c39383266252032,0x202c373331662520\n"
".quad 0x4643333745426630,0x38326625202c4433,0x662e6275730a3b38,0x3039326625203233\n"
".quad 0x25202c326625202c,0x756d0a3b39383266,0x6625203233662e6c,0x326625202c313932\n"
".quad 0x30436630202c3738,0x0a3b303030303038,0x662e6e722e616d66,0x3239326625203233\n"
".quad 0x2c3733316625202c,0x4332424442663020,0x326625202c443242,0x2e616d660a3b3139\n"
".quad 0x25203233662e6e72,0x6625202c33393266,0x436630202c333832,0x2c30303030303830\n"
".quad 0x0a3b323932662520,0x662e6e722e616d66,0x3439326625203233,0x2c3139316625202c\n"
".quad 0x202c313832662520,0x610a3b3238326625,0x25203233662e6464,0x6625202c35393266\n"
".quad 0x326625202c333932,0x2e616d660a3b3439,0x25203233662e6e72,0x6625202c36393266\n"
".quad 0x436630202c303832,0x2c30303030303830,0x0a3b353932662520,0x203233662e627573\n"
".quad 0x25202c3739326625,0x326625202c333266,0x2e616d660a3b3639,0x25203233662e6e72\n"
".quad 0x6625202c38393266,0x436630202c353832,0x2c30303030303830,0x0a3b323932662520\n"
".quad 0x203233662e67656e,0x25202c3939326625,0x6d660a3b31393166,0x3233662e6e722e61\n"
".quad 0x202c303033662520,0x25202c3939326625,0x6625202c31383266,0x6f6c2e0a3b383932\n"
".quad 0x3234393320322063,0x722e616d660a3120,0x6625203233662e6e,0x326625202c313033\n"
".quad 0x43336630202c3231,0x202c393345383336,0x610a3b3038326625,0x25203233662e6464\n"
".quad 0x6625202c32303366,0x336625202c303033,0x2e616d660a3b3130,0x25203233662e6e72\n"
".quad 0x6625202c33303366,0x326625202c363232,0x30336625202c3937,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x326625202c343033,0x30436630202c3737,0x202c303030303030\n"
".quad 0x730a3b3330336625,0x25203233662e6275,0x6625202c35303366,0x3430336625202c33\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x38326625202c3630,0x3830346630202c33\n"
".quad 0x25202c3030303030,0x64610a3b32393266,0x6625203233662e64,0x336625202c373033\n"
".quad 0x39326625202c3630,0x722e616d660a3b34,0x6625203233662e6e,0x326625202c383033\n"
".quad 0x30436630202c3038,0x202c303030303038,0x730a3b3730336625,0x25203233662e6275\n"
".quad 0x6625202c39303366,0x30336625202c3932,0x722e616d660a3b38,0x6625203233662e6e\n"
".quad 0x326625202c303133,0x30346630202c3538,0x202c303030303038,0x660a3b3239326625\n"
".quad 0x33662e6e722e616d,0x2c31313366252032,0x202c393932662520,0x25202c3138326625\n"
".quad 0x6c2e0a3b30313366,0x343933203220636f,0x2e6464610a312032,0x3133662520323366\n"
".quad 0x3131336625202c32,0x3b3130336625202c,0x2e6e722e616d660a,0x3133662520323366\n"
".quad 0x3632326625202c33,0x2c3937326625202c,0x0a3b323133662520,0x662e6e722e616d66\n"
".quad 0x3431336625203233,0x2c3737326625202c,0x3030303043663020,0x336625202c303030\n"
".quad 0x2e6275730a3b3331,0x3133662520323366,0x202c346625202c35,0x660a3b3431336625\n"
".quad 0x33662e6e722e616d,0x2c36313366252032,0x202c373331662520,0x3830323844336630\n"
".quad 0x38326625202c3032,0x722e616d660a3b37,0x6625203233662e6e,0x316625202c373133\n"
".quad 0x43336630202c3036,0x202c444343434343,0x660a3b3631336625,0x33662e6e722e616d\n"
".quad 0x2c38313366252032,0x202c333631662520,0x4343434343336630,0x31336625202c4443\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x316625202c393133,0x38326625202c3139\n"
".quad 0x3831336625202c31,0x6e722e616d660a3b,0x336625203233662e,0x31326625202c3032\n"
".quad 0x3643336630202c32,0x25202c3933453833,0x6d660a3b39313366,0x3233662e6e722e61\n"
".quad 0x202c313233662520,0x25202c3632326625,0x6625202c39373266,0x616d660a3b303233\n"
".quad 0x203233662e6e722e,0x25202c3232336625,0x6630202c38333266,0x4241414141324433\n"
".quad 0x3b3132336625202c,0x2e6e722e616d660a,0x3233662520323366,0x3334326625202c33\n"
".quad 0x303845336630202c,0x6625202c30303030,0x616d660a3b323233,0x203233662e6e722e\n"
".quad 0x25202c3432336625,0x6630202c38353266,0x3030303030304533,0x3b3332336625202c\n"
".quad 0x3233662e67656e0a,0x202c353233662520,0x660a3b3636326625,0x33662e6e722e616d\n"
".quad 0x2c36323366252032,0x202c353233662520,0x25202c3637326625,0x6c2e0a3b34323366\n"
".quad 0x343933203220636f,0x2e6275730a312032,0x3233662520323366,0x2c35336625202c37\n"
".quad 0x0a3b363233662520,0x203233662e67656e,0x25202c3832336625,0x6d660a3b30363166\n"
".quad 0x3233662e6e722e61,0x202c393233662520,0x25202c3832336625,0x6625202c34383266\n"
".quad 0x6f6c2e0a3b363133,0x3234393320322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x316625202c303333,0x43336630202c3336,0x202c444343434343,0x660a3b3932336625\n"
".quad 0x33662e6e722e616d,0x2c31333366252032,0x202c313931662520,0x25202c3138326625\n"
".quad 0x6d660a3b30333366,0x3233662e6e722e61,0x202c323333662520,0x30202c3231326625\n"
".quad 0x3345383336433366,0x3133336625202c39,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x32326625202c3333,0x3937326625202c36,0x3b3233336625202c,0x2e6e722e616d660a\n"
".quad 0x3333662520323366,0x3833326625202c34,0x413244336630202c,0x6625202c42414141\n"
".quad 0x67656e0a3b333333,0x336625203233662e,0x34326625202c3533,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x336625202c363333,0x37326625202c3533,0x3433336625202c34\n"
".quad 0x33662e67656e0a3b,0x2c37333366252032,0x0a3b383532662520,0x662e6e722e616d66\n"
".quad 0x3833336625203233,0x2c3733336625202c,0x202c363732662520,0x660a3b3633336625\n"
".quad 0x33662e6e722e616d,0x2c39333366252032,0x202c353233662520,0x25202c3637326625\n"
".quad 0x6c2e0a3b38333366,0x343933203220636f,0x2e6275730a312032,0x3433662520323366\n"
".quad 0x2c31346625202c30,0x0a3b393333662520,0x203233662e67656e,0x25202c3134336625\n"
".quad 0x6d660a3b33363166,0x3233662e6e722e61,0x202c323433662520,0x25202c3134336625\n"
".quad 0x6625202c34383266,0x6f6c2e0a3b393233,0x3234393320322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x316625202c333433,0x38326625202c3139,0x3234336625202c31\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x31326625202c3434,0x3643336630202c32\n"
".quad 0x25202c3933453833,0x6d660a3b33343366,0x3233662e6e722e61,0x202c353433662520\n"
".quad 0x25202c3632326625,0x6625202c39373266,0x616d660a3b343433,0x203233662e6e722e\n"
".quad 0x25202c3634336625,0x6630202c38333266,0x4241414141324433,0x3b3534336625202c\n"
".quad 0x2e6e722e616d660a,0x3433662520323366,0x3334326625202c37,0x303845336630202c\n"
".quad 0x6625202c30303030,0x616d660a3b363433,0x203233662e6e722e,0x25202c3834336625\n"
".quad 0x6625202c37333366,0x336625202c363732,0x636f6c2e0a3b3734,0x2032343933203220\n"
".quad 0x6e722e616d660a31,0x336625203233662e,0x36326625202c3934,0x3045336630202c36\n"
".quad 0x25202c3030303030,0x75730a3b38343366,0x6625203233662e62,0x346625202c303533\n"
".quad 0x3934336625202c37,0x6e722e616d660a3b,0x336625203233662e,0x34336625202c3135\n"
".quad 0x3438326625202c31,0x3b3731336625202c,0x203220636f6c2e0a,0x660a312032343933\n"
".quad 0x33662e6e722e616d,0x2c32353366252032,0x202c313931662520,0x25202c3138326625\n"
".quad 0x6d660a3b31353366,0x3233662e6e722e61,0x202c333533662520,0x30202c3231326625\n"
".quad 0x3345383336433366,0x3235336625202c39,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x32326625202c3435,0x3937326625202c36,0x3b3335336625202c,0x2e6e722e616d660a\n"
".quad 0x3533662520323366,0x3833326625202c35,0x413244336630202c,0x6625202c42414141\n"
".quad 0x616d660a3b343533,0x203233662e6e722e,0x25202c3635336625,0x6625202c35333366\n"
".quad 0x336625202c343732,0x636f6c2e0a3b3535,0x2032343933203220,0x6e722e616d660a31\n"
".quad 0x336625203233662e,0x35326625202c3735,0x3045336630202c38,0x25202c3030303030\n"
".quad 0x6d660a3b36353366,0x3233662e6e722e61,0x202c383533662520,0x30202c3636326625\n"
".quad 0x3030303030453366,0x3735336625202c30,0x33662e6275730a3b,0x2c39353366252032\n"
".quad 0x25202c3335662520,0x6d660a3b38353366,0x3233662e6e722e61,0x202c303633662520\n"
".quad 0x30202c3638326625,0x3030303038304366,0x3239326625202c30,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x39326625202c3136,0x3138326625202c39,0x3b3036336625202c\n"
".quad 0x203220636f6c2e0a,0x610a312032343933,0x25203233662e6464,0x6625202c32363366\n"
".quad 0x336625202c313633,0x2e67656e0a3b3130,0x3633662520323366,0x3632326625202c33\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x36336625202c3436,0x3937326625202c33\n"
".quad 0x3b3236336625202c,0x203220636f6c2e0a,0x660a312032343933,0x33662e6e722e616d\n"
".quad 0x2c35363366252032,0x202c383332662520,0x4141413244336630,0x37326625202c4241\n"
".quad 0x662e6464610a3b37,0x3636336625203233,0x2c3436336625202c,0x0a3b353633662520\n"
".quad 0x203233662e627573,0x25202c3736336625,0x36336625202c3566,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x316625202c383633,0x43336630202c3636,0x202c444343434343\n"
".quad 0x660a3b3731336625,0x33662e6e722e616d,0x2c39363366252032,0x202c313931662520\n"
".quad 0x25202c3138326625,0x6d660a3b38363366,0x3233662e6e722e61,0x202c303733662520\n"
".quad 0x30202c3231326625,0x3345383336433366,0x3936336625202c39,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x36336625202c3137,0x3937326625202c33,0x3b3037336625202c\n"
".quad 0x3233662e67656e0a,0x202c323733662520,0x660a3b3833326625,0x33662e6e722e616d\n"
".quad 0x2c33373366252032,0x202c323733662520,0x25202c3837326625,0x6c2e0a3b31373366\n"
".quad 0x343933203220636f,0x2e616d660a312032,0x25203233662e6e72,0x6625202c34373366\n"
".quad 0x326625202c323532,0x37336625202c3537,0x722e616d660a3b33,0x6625203233662e6e\n"
".quad 0x336625202c353733,0x37326625202c3733,0x3437336625202c36,0x3220636f6c2e0a3b\n"
".quad 0x0a31203234393320,0x662e6e722e616d66,0x3637336625203233,0x2c3337326625202c\n"
".quad 0x3030304533663020,0x336625202c303030,0x2e6275730a3b3537,0x3733662520323366\n"
".quad 0x2c31376625202c37,0x0a3b363733662520,0x662e6e722e616d66,0x3837336625203233\n"
".quad 0x2c3336316625202c,0x4343434333663020,0x336625202c444343,0x2e616d660a3b3631\n"
".quad 0x25203233662e6e72,0x6625202c39373366,0x336630202c363631,0x2c44434343434343\n"
".quad 0x0a3b383733662520,0x662e6e722e616d66,0x3038336625203233,0x2c3238326625202c\n"
".quad 0x3030303043663020,0x336625202c303030,0x2e616d660a3b3937,0x25203233662e6e72\n"
".quad 0x6625202c31383366,0x436630202c303832,0x2c30303030303030,0x0a3b303833662520\n"
".quad 0x662e6e722e616d66,0x3238336625203233,0x2c3834326625202c,0x3030384533663020\n"
".quad 0x336625202c303030,0x2e616d660a3b3138,0x25203233662e6e72,0x6625202c33383366\n"
".quad 0x336630202c363632,0x2c30303030303045,0x0a3b323833662520,0x203233662e67656e\n"
".quad 0x25202c3438336625,0x6d660a3b33373266,0x3233662e6e722e61,0x202c353833662520\n"
".quad 0x25202c3438336625,0x6625202c36373266,0x6f6c2e0a3b333833,0x3234393320322063\n"
".quad 0x662e6275730a3120,0x3638336625203233,0x25202c366625202c,0x6d660a3b35383366\n"
".quad 0x3233662e6e722e61,0x202c373833662520,0x30202c3636316625,0x4343434343433366\n"
".quad 0x3932336625202c44,0x6e722e616d660a3b,0x336625203233662e,0x39316625202c3838\n"
".quad 0x3138326625202c31,0x3b3738336625202c,0x2e6e722e616d660a,0x3833662520323366\n"
".quad 0x3231326625202c39,0x333643336630202c,0x6625202c39334538,0x616d660a3b383833\n"
".quad 0x203233662e6e722e,0x25202c3039336625,0x6625202c33363366,0x336625202c393732\n"
".quad 0x2e616d660a3b3938,0x25203233662e6e72,0x6625202c31393366,0x326625202c323733\n"
".quad 0x39336625202c3837,0x662e67656e0a3b30,0x3239336625203233,0x3b3235326625202c\n"
".quad 0x2e6e722e616d660a,0x3933662520323366,0x3239336625202c33,0x2c3537326625202c\n"
".quad 0x0a3b313933662520,0x33203220636f6c2e,0x6d660a3120323439,0x3233662e6e722e61\n"
".quad 0x202c343933662520,0x30202c3835326625,0x3030303030453366,0x3339336625202c30\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x37326625202c3539,0x3045336630202c33\n"
".quad 0x25202c3030303030,0x75730a3b34393366,0x6625203233662e62,0x376625202c363933\n"
".quad 0x3539336625202c37,0x6e722e616d660a3b,0x336625203233662e,0x34336625202c3739\n"
".quad 0x3438326625202c31,0x3b3631336625202c,0x203220636f6c2e0a,0x660a312032343933\n"
".quad 0x33662e6e722e616d,0x2c38393366252032,0x202c363631662520,0x4343434343336630\n"
".quad 0x39336625202c4443,0x722e616d660a3b37,0x6625203233662e6e,0x326625202c393933\n"
".quad 0x30436630202c3238,0x202c303030303030,0x660a3b3839336625,0x33662e6e722e616d\n"
".quad 0x2c30303466252032,0x202c303832662520,0x3030303030436630,0x39336625202c3030\n"
".quad 0x662e67656e0a3b39,0x3130346625203233,0x3b3834326625202c,0x2e6e722e616d660a\n"
".quad 0x3034662520323366,0x3130346625202c32,0x2c3437326625202c,0x0a3b303034662520\n"
".quad 0x662e6e722e616d66,0x3330346625203233,0x2c3532336625202c,0x202c363732662520\n"
".quad 0x660a3b3230346625,0x33662e6e722e616d,0x2c34303466252032,0x202c343833662520\n"
".quad 0x25202c3637326625,0x6c2e0a3b33303466,0x343933203220636f,0x2e6275730a312032\n"
".quad 0x3034662520323366,0x202c376625202c35,0x660a3b3430346625,0x33662e6e722e616d\n"
".quad 0x2c36303466252032,0x202c363832662520,0x3030303830346630,0x39326625202c3030\n"
".quad 0x722e616d660a3b32,0x6625203233662e6e,0x326625202c373034,0x38326625202c3939\n"
".quad 0x3630346625202c31,0x3220636f6c2e0a3b,0x0a31203234393320,0x203233662e646461\n"
".quad 0x25202c3830346625,0x6625202c37303466,0x616d660a3b313033,0x203233662e6e722e\n"
".quad 0x25202c3930346625,0x6625202c33363366,0x346625202c393732,0x636f6c2e0a3b3830\n"
".quad 0x2032343933203220,0x33662e6464610a31,0x2c30313466252032,0x202c393034662520\n"
".quad 0x730a3b3536336625,0x25203233662e6275,0x6625202c31313466,0x3031346625202c38\n"
".quad 0x33662e67656e0a3b,0x2c32313466252032,0x0a3b363631662520,0x662e6e722e616d66\n"
".quad 0x3331346625203233,0x2c3231346625202c,0x202c343832662520,0x2e0a3b3731336625\n"
".quad 0x3933203220636f6c,0x616d660a31203234,0x203233662e6e722e,0x25202c3431346625\n"
".quad 0x6625202c31393166,0x346625202c313832,0x2e616d660a3b3331,0x25203233662e6e72\n"
".quad 0x6625202c35313466,0x336630202c323132,0x2c39334538333643,0x0a3b343134662520\n"
".quad 0x662e6e722e616d66,0x3631346625203233,0x2c3336336625202c,0x202c393732662520\n"
".quad 0x660a3b3531346625,0x33662e6e722e616d,0x2c37313466252032,0x202c323733662520\n"
".quad 0x25202c3837326625,0x6d660a3b36313466,0x3233662e6e722e61,0x202c383134662520\n"
".quad 0x25202c3239336625,0x6625202c35373266,0x616d660a3b373134,0x203233662e6e722e\n"
".quad 0x25202c3931346625,0x6625202c37333366,0x346625202c363732,0x2e616d660a3b3831\n"
".quad 0x25203233662e6e72,0x6625202c30323466,0x326625202c343833,0x31346625202c3637\n"
".quad 0x20636f6c2e0a3b39,0x3120323439332032,0x3233662e6275730a,0x202c313234662520\n"
".quad 0x6625202c39356625,0x616d660a3b303234,0x203233662e6e722e,0x25202c3232346625\n"
".quad 0x6625202c32313466,0x336625202c343832,0x636f6c2e0a3b3837,0x2032343933203220\n"
".quad 0x6e722e616d660a31,0x346625203233662e,0x38326625202c3332,0x3030436630202c32\n"
".quad 0x25202c3030303030,0x6d660a3b32323466,0x3233662e6e722e61,0x202c343234662520\n"
".quad 0x30202c3038326625,0x3030303030304366,0x3332346625202c30,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x30346625202c3532,0x3437326625202c31,0x3b3432346625202c\n"
".quad 0x203220636f6c2e0a,0x660a312032343933,0x33662e6e722e616d,0x2c36323466252032\n"
".quad 0x202c363632662520,0x3030303045336630,0x32346625202c3030,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x326625202c373234,0x45336630202c3337,0x202c303030303030\n"
".quad 0x730a3b3632346625,0x25203233662e6275,0x6625202c38323466,0x3732346625202c39\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x31346625202c3932,0x3438326625202c32\n"
".quad 0x3b3932336625202c,0x203220636f6c2e0a,0x660a312032343933,0x33662e6e722e616d\n"
".quad 0x2c30333466252032,0x202c313931662520,0x25202c3138326625,0x6d660a3b39323466\n"
".quad 0x3233662e6e722e61,0x202c313334662520,0x30202c3231326625,0x3345383336433366\n"
".quad 0x3033346625202c39,0x6e722e616d660a3b,0x346625203233662e,0x36336625202c3233\n"
".quad 0x3937326625202c33,0x3b3133346625202c,0x2e6e722e616d660a,0x3334662520323366\n"
".quad 0x3237336625202c33,0x2c3837326625202c,0x0a3b323334662520,0x33203220636f6c2e\n"
".quad 0x6d660a3120323439,0x3233662e6e722e61,0x202c343334662520,0x25202c3235326625\n"
".quad 0x6625202c35373266,0x616d660a3b333334,0x203233662e6e722e,0x25202c3533346625\n"
".quad 0x6630202c38353266,0x3030303030304533,0x3b3433346625202c,0x2e6e722e616d660a\n"
".quad 0x3334662520323366,0x3438336625202c36,0x2c3637326625202c,0x0a3b353334662520\n"
".quad 0x33203220636f6c2e,0x75730a3120323439,0x6625203233662e62,0x366625202c373334\n"
".quad 0x3633346625202c35,0x6e722e616d660a3b,0x346625203233662e,0x31346625202c3833\n"
".quad 0x3438326625202c32,0x3b3739336625202c,0x203220636f6c2e0a,0x660a312032343933\n"
".quad 0x33662e6e722e616d,0x2c39333466252032,0x202c323832662520,0x3030303030436630\n"
".quad 0x33346625202c3030,0x722e616d660a3b38,0x6625203233662e6e,0x326625202c303434\n"
".quad 0x30436630202c3038,0x202c303030303030,0x660a3b3933346625,0x33662e6e722e616d\n"
".quad 0x2c31343466252032,0x202c383432662520,0x3030303845336630,0x34346625202c3030\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x336625202c323434,0x37326625202c3532\n"
".quad 0x3134346625202c36,0x3220636f6c2e0a3b,0x0a31203234393320,0x662e6e722e616d66\n"
".quad 0x3334346625203233,0x2c3337326625202c,0x3030304533663020,0x346625202c303030\n"
".quad 0x2e6275730a3b3234,0x3434662520323366,0x3535346625202c34,0x3b3334346625202c\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3134326c,0x645f74726d37315a\n"
".quad 0x665f42416279685f,0x5f5366506563726f,0x5f535f535f536d66,0x5f6d617261705f69\n"
".quad 0x636f6c2e0a3b5d33,0x2037323833203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x316c7225202c3938,0x34326c7225202c30,0x3b356c7225202c31,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3933326c,0x645f74726d37315a,0x665f42416279685f\n"
".quad 0x5f5366506563726f,0x5f535f535f536d66,0x5f6d617261705f69,0x617476630a3b5d31\n"
".quad 0x626f6c672e6f742e,0x25203436752e6c61,0x7225202c30396c72,0x68730a3b3933326c\n"
".quad 0x7225203436622e6c,0x6c7225202c31396c,0x0a3b3233202c3938,0x203436732e726873\n"
".quad 0x25202c32396c7225,0x3233202c31396c72,0x3220636f6c2e0a3b,0x0a31203734393320\n"
".quad 0x203436622e6c6873,0x25202c33396c7225,0x3b32202c32396c72,0x3436732e6464610a\n"
".quad 0x202c34396c722520,0x25202c30396c7225,0x74730a3b33396c72,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x326625202c5d3439,0x2e6464610a3b3039,0x396c722520343673\n"
".quad 0x30316c7225202c35,0x0a3b36393034202c,0x33203220636f6c2e,0x616d0a3120383439\n"
".quad 0x3436732e6f6c2e64,0x202c36396c722520,0x25202c35396c7225,0x25202c3134326c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x396c7225202c3739,0x730a3b3233202c36\n"
".quad 0x25203436732e7268,0x7225202c38396c72,0x3b3233202c37396c,0x203220636f6c2e0a\n"
".quad 0x730a312038343933,0x25203436622e6c68,0x7225202c39396c72,0x0a3b32202c38396c\n"
".quad 0x203436732e646461,0x202c3030316c7225,0x25202c30396c7225,0x74730a3b39396c72\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d303031,0x6464610a3b373932\n"
".quad 0x6c7225203436732e,0x6c7225202c313031,0x32393138202c3031,0x3220636f6c2e0a3b\n"
".quad 0x0a31203934393320,0x732e6f6c2e64616d,0x30316c7225203436,0x30316c7225202c32\n"
".quad 0x34326c7225202c31,0x3b356c7225202c31,0x3436622e6c68730a,0x2c3330316c722520\n"
".quad 0x2c3230316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c343031\n"
".quad 0x3b3233202c333031,0x203220636f6c2e0a,0x730a312039343933,0x25203436622e6c68\n"
".quad 0x25202c3530316c72,0x32202c3430316c72,0x36732e6464610a3b,0x3630316c72252034\n"
".quad 0x2c30396c7225202c,0x3b3530316c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3630316c7225,0x0a3b353033662520,0x203436732e646461,0x202c3730316c7225\n"
".quad 0x31202c30316c7225,0x6c2e0a3b38383232,0x353933203220636f,0x2e64616d0a312030\n"
".quad 0x25203436732e6f6c,0x25202c3830316c72,0x25202c3730316c72,0x25202c3134326c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c393031,0x3b3233202c383031\n"
".quad 0x3436732e7268730a,0x2c3031316c722520,0x2c3930316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3035393320322063,0x622e6c68730a3120,0x31316c7225203436,0x31316c7225202c31\n"
".quad 0x64610a3b32202c30,0x7225203436732e64,0x7225202c3231316c,0x6c7225202c30396c\n"
".quad 0x2e74730a3b313131,0x662e6c61626f6c67,0x316c72255b203233,0x336625202c5d3231\n"
".quad 0x2e6464610a3b3930,0x316c722520343673,0x316c7225202c3331,0x3438333631202c30\n"
".quad 0x3220636f6c2e0a3b,0x0a31203135393320,0x732e6f6c2e64616d,0x31316c7225203436\n"
".quad 0x31316c7225202c34,0x34326c7225202c33,0x3b356c7225202c31,0x3436622e6c68730a\n"
".quad 0x2c3531316c722520,0x2c3431316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c363131,0x3b3233202c353131,0x203220636f6c2e0a,0x730a312031353933\n"
".quad 0x25203436622e6c68,0x25202c3731316c72,0x32202c3631316c72,0x36732e6464610a3b\n"
".quad 0x3831316c72252034,0x2c30396c7225202c,0x3b3731316c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3831316c7225,0x0a3b353133662520,0x203436732e646461\n"
".quad 0x202c3931316c7225,0x32202c30316c7225,0x6c2e0a3b30383430,0x353933203220636f\n"
".quad 0x2e64616d0a312032,0x25203436732e6f6c,0x25202c3032316c72,0x25202c3931316c72\n"
".quad 0x25202c3134326c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c313231\n"
".quad 0x3b3233202c303231,0x3436732e7268730a,0x2c3232316c722520,0x2c3132316c722520\n"
".quad 0x6f6c2e0a3b323320,0x3235393320322063,0x622e6c68730a3120,0x32316c7225203436\n"
".quad 0x32316c7225202c33,0x64610a3b32202c32,0x7225203436732e64,0x7225202c3432316c\n"
".quad 0x6c7225202c30396c,0x2e74730a3b333231,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x336625202c5d3432,0x2e6464610a3b3732,0x316c722520343673,0x316c7225202c3532\n"
".quad 0x3637353432202c30,0x3220636f6c2e0a3b,0x0a31203335393320,0x732e6f6c2e64616d\n"
".quad 0x32316c7225203436,0x32316c7225202c36,0x34326c7225202c35,0x3b356c7225202c31\n"
".quad 0x3436622e6c68730a,0x2c3732316c722520,0x2c3632316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c383231,0x3b3233202c373231,0x203220636f6c2e0a\n"
".quad 0x730a312033353933,0x25203436622e6c68,0x25202c3932316c72,0x32202c3832316c72\n"
".quad 0x36732e6464610a3b,0x3033316c72252034,0x2c30396c7225202c,0x3b3932316c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3033316c7225,0x0a3b303433662520\n"
".quad 0x203436732e646461,0x202c3133316c7225,0x32202c30316c7225,0x6c2e0a3b32373638\n"
".quad 0x353933203220636f,0x2e64616d0a312034,0x25203436732e6f6c,0x25202c3233316c72\n"
".quad 0x25202c3133316c72,0x25202c3134326c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c333331,0x3b3233202c323331,0x3436732e7268730a,0x2c3433316c722520\n"
".quad 0x2c3333316c722520,0x6f6c2e0a3b323320,0x3435393320322063,0x622e6c68730a3120\n"
".quad 0x33316c7225203436,0x33316c7225202c35,0x64610a3b32202c34,0x7225203436732e64\n"
".quad 0x7225202c3633316c,0x6c7225202c30396c,0x2e74730a3b353331,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x336625202c5d3633,0x2e6464610a3b3035,0x316c722520343673\n"
".quad 0x316c7225202c3733,0x3836373233202c30,0x3220636f6c2e0a3b,0x0a31203535393320\n"
".quad 0x732e6f6c2e64616d,0x33316c7225203436,0x33316c7225202c38,0x34326c7225202c37\n"
".quad 0x3b356c7225202c31,0x3436622e6c68730a,0x2c3933316c722520,0x2c3833316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c303431,0x3b3233202c393331\n"
".quad 0x203220636f6c2e0a,0x730a312035353933,0x25203436622e6c68,0x25202c3134316c72\n"
".quad 0x32202c3034316c72,0x36732e6464610a3b,0x3234316c72252034,0x2c30396c7225202c\n"
".quad 0x3b3134316c722520,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3234316c7225\n"
".quad 0x0a3b393533662520,0x203436732e646461,0x202c3334316c7225,0x33202c30316c7225\n"
".quad 0x6c2e0a3b34363836,0x353933203220636f,0x2e64616d0a312036,0x25203436732e6f6c\n"
".quad 0x25202c3434316c72,0x25202c3334316c72,0x25202c3134326c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c353431,0x3b3233202c343431,0x3436732e7268730a\n"
".quad 0x2c3634316c722520,0x2c3534316c722520,0x6f6c2e0a3b323320,0x3635393320322063\n"
".quad 0x622e6c68730a3120,0x34316c7225203436,0x34316c7225202c37,0x64610a3b32202c36\n"
".quad 0x7225203436732e64,0x7225202c3834316c,0x6c7225202c30396c,0x2e74730a3b373431\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x336625202c5d3834,0x2e6464610a3b3736\n"
".quad 0x316c722520343673,0x316c7225202c3934,0x3036393034202c30,0x3220636f6c2e0a3b\n"
".quad 0x0a31203735393320,0x732e6f6c2e64616d,0x35316c7225203436,0x34316c7225202c30\n"
".quad 0x34326c7225202c39,0x3b356c7225202c31,0x3436622e6c68730a,0x2c3135316c722520\n"
".quad 0x2c3035316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c323531\n"
".quad 0x3b3233202c313531,0x203220636f6c2e0a,0x730a312037353933,0x25203436622e6c68\n"
".quad 0x25202c3335316c72,0x32202c3235316c72,0x36732e6464610a3b,0x3435316c72252034\n"
".quad 0x2c30396c7225202c,0x3b3335316c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3435316c7225,0x0a3b373733662520,0x203436732e646461,0x202c3535316c7225\n"
".quad 0x34202c30316c7225,0x6c2e0a3b36353035,0x353933203220636f,0x2e64616d0a312038\n"
".quad 0x25203436732e6f6c,0x25202c3635316c72,0x25202c3535316c72,0x25202c3134326c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c373531,0x3b3233202c363531\n"
".quad 0x3436732e7268730a,0x2c3835316c722520,0x2c3735316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3835393320322063,0x622e6c68730a3120,0x35316c7225203436,0x35316c7225202c39\n"
".quad 0x64610a3b32202c38,0x7225203436732e64,0x7225202c3036316c,0x6c7225202c30396c\n"
".quad 0x2e74730a3b393531,0x662e6c61626f6c67,0x316c72255b203233,0x336625202c5d3036\n"
".quad 0x2e6464610a3b3638,0x316c722520343673,0x316c7225202c3136,0x3235313934202c30\n"
".quad 0x3220636f6c2e0a3b,0x0a31203935393320,0x732e6f6c2e64616d,0x36316c7225203436\n"
".quad 0x36316c7225202c32,0x34326c7225202c31,0x3b356c7225202c31,0x3436622e6c68730a\n"
".quad 0x2c3336316c722520,0x2c3236316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c343631,0x3b3233202c333631,0x203220636f6c2e0a,0x730a312039353933\n"
".quad 0x25203436622e6c68,0x25202c3536316c72,0x32202c3436316c72,0x36732e6464610a3b\n"
".quad 0x3636316c72252034,0x2c30396c7225202c,0x3b3536316c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3636316c7225,0x0a3b363933662520,0x203436732e646461\n"
".quad 0x202c3736316c7225,0x35202c30316c7225,0x6c2e0a3b38343233,0x363933203220636f\n"
".quad 0x2e64616d0a312030,0x25203436732e6f6c,0x25202c3836316c72,0x25202c3736316c72\n"
".quad 0x25202c3134326c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c393631\n"
".quad 0x3b3233202c383631,0x3436732e7268730a,0x2c3037316c722520,0x2c3936316c722520\n"
".quad 0x6f6c2e0a3b323320,0x3036393320322063,0x622e6c68730a3120,0x37316c7225203436\n"
".quad 0x37316c7225202c31,0x64610a3b32202c30,0x7225203436732e64,0x7225202c3237316c\n"
".quad 0x6c7225202c30396c,0x2e74730a3b313731,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x346625202c5d3237,0x2e6464610a3b3530,0x316c722520343673,0x316c7225202c3337\n"
".quad 0x3434333735202c30,0x3220636f6c2e0a3b,0x0a31203136393320,0x732e6f6c2e64616d\n"
".quad 0x37316c7225203436,0x37316c7225202c34,0x34326c7225202c33,0x3b356c7225202c31\n"
".quad 0x3436622e6c68730a,0x2c3537316c722520,0x2c3437316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c363731,0x3b3233202c353731,0x203220636f6c2e0a\n"
".quad 0x730a312031363933,0x25203436622e6c68,0x25202c3737316c72,0x32202c3637316c72\n"
".quad 0x36732e6464610a3b,0x3837316c72252034,0x2c30396c7225202c,0x3b3737316c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3837316c7225,0x0a3b313134662520\n"
".quad 0x203436732e646461,0x202c3937316c7225,0x36202c30316c7225,0x6c2e0a3b30343431\n"
".quad 0x363933203220636f,0x2e64616d0a312032,0x25203436732e6f6c,0x25202c3038316c72\n"
".quad 0x25202c3937316c72,0x25202c3134326c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c313831,0x3b3233202c303831,0x3436732e7268730a,0x2c3238316c722520\n"
".quad 0x2c3138316c722520,0x6f6c2e0a3b323320,0x3236393320322063,0x622e6c68730a3120\n"
".quad 0x38316c7225203436,0x38316c7225202c33,0x64610a3b32202c32,0x7225203436732e64\n"
".quad 0x7225202c3438316c,0x6c7225202c30396c,0x2e74730a3b333831,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x346625202c5d3438,0x2e6464610a3b3132,0x316c722520343673\n"
".quad 0x316c7225202c3538,0x3633353536202c30,0x3220636f6c2e0a3b,0x0a31203336393320\n"
".quad 0x732e6f6c2e64616d,0x38316c7225203436,0x38316c7225202c36,0x34326c7225202c35\n"
".quad 0x3b356c7225202c31,0x3436622e6c68730a,0x2c3738316c722520,0x2c3638316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c383831,0x3b3233202c373831\n"
".quad 0x203220636f6c2e0a,0x730a312033363933,0x25203436622e6c68,0x25202c3938316c72\n"
".quad 0x32202c3838316c72,0x36732e6464610a3b,0x3039316c72252034,0x2c30396c7225202c\n"
".quad 0x3b3938316c722520,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3039316c7225\n"
".quad 0x0a3b383234662520,0x203436732e646461,0x202c3139316c7225,0x36202c30316c7225\n"
".quad 0x6c2e0a3b32333639,0x363933203220636f,0x2e64616d0a312034,0x25203436732e6f6c\n"
".quad 0x25202c3239316c72,0x25202c3139316c72,0x25202c3134326c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c333931,0x3b3233202c323931,0x3436732e7268730a\n"
".quad 0x2c3439316c722520,0x2c3339316c722520,0x6f6c2e0a3b323320,0x3436393320322063\n"
".quad 0x622e6c68730a3120,0x39316c7225203436,0x39316c7225202c35,0x64610a3b32202c34\n"
".quad 0x7225203436732e64,0x7225202c3639316c,0x6c7225202c30396c,0x2e74730a3b353931\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x346625202c5d3639,0x2e6464610a3b3733\n"
".quad 0x316c722520343673,0x316c7225202c3739,0x3832373337202c30,0x3220636f6c2e0a3b\n"
".quad 0x0a31203536393320,0x732e6f6c2e64616d,0x39316c7225203436,0x39316c7225202c38\n"
".quad 0x34326c7225202c37,0x3b356c7225202c31,0x3436622e6c68730a,0x2c3939316c722520\n"
".quad 0x2c3839316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c303032\n"
".quad 0x3b3233202c393931,0x203220636f6c2e0a,0x730a312035363933,0x25203436622e6c68\n"
".quad 0x25202c3130326c72,0x32202c3030326c72,0x36732e6464610a3b,0x3230326c72252034\n"
".quad 0x2c30396c7225202c,0x3b3130326c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3230326c7225,0x0a3b343434662520,0x20696e752e617262,0x0a3b355f31334242\n"
".quad 0x3a345f313342420a,0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3034326c\n"
".quad 0x645f74726d37315a,0x665f42416279685f,0x5f5366506563726f,0x5f535f535f536d66\n"
".quad 0x5f6d617261705f69,0x2e6c68730a3b5d33,0x326c722520343662,0x326c7225202c3330\n"
".quad 0x0a3b3231202c3034,0x33203220636f6c2e,0x64610a3120393738,0x7225203436732e64\n"
".quad 0x7225202c3430326c,0x326c7225202c396c,0x702e646c0a3b3330,0x3436752e6d617261\n"
".quad 0x2c3833326c722520,0x726d37315a5f5b20,0x416279685f645f74,0x506563726f665f42\n"
".quad 0x535f536d665f5366,0x7261705f695f535f,0x630a3b5d315f6d61,0x672e6f742e617476\n"
".quad 0x36752e6c61626f6c,0x3530326c72252034,0x3833326c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203937383320,0x203436622e6c6873,0x202c3630326c7225,0x202c3430326c7225\n"
".quad 0x732e6464610a3b32,0x30326c7225203436,0x30326c7225202c37,0x30326c7225202c35\n"
".quad 0x6c672e74730a3b36,0x3233662e6c61626f,0x3730326c72255b20,0x3b39326625202c5d\n"
".quad 0x3436622e6c68730a,0x2c3830326c722520,0x2c3034326c722520,0x6464610a3b343120\n"
".quad 0x6c7225203436732e,0x6c7225202c393032,0x6c7225202c373032,0x6f6c2e0a3b383032\n"
".quad 0x3038383320322063,0x6c672e74730a3120,0x3233662e6c61626f,0x3930326c72255b20\n"
".quad 0x0a3b346625202c5d,0x203436732e646461,0x202c3031326c7225,0x202c3930326c7225\n"
".quad 0x0a3b3830326c7225,0x33203220636f6c2e,0x74730a3120313838,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d303132,0x2e6464610a3b3332,0x326c722520343673\n"
".quad 0x326c7225202c3131,0x326c7225202c3031,0x636f6c2e0a3b3830,0x2032383833203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3131326c72255b,0x610a3b336625202c\n"
".quad 0x25203436732e6464,0x25202c3231326c72,0x25202c3131326c72,0x2e0a3b3830326c72\n"
".quad 0x3833203220636f6c,0x2e74730a31203338,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x346625202c5d3231,0x732e6464610a3b37,0x31326c7225203436,0x31326c7225202c33\n"
".quad 0x30326c7225202c32,0x20636f6c2e0a3b38,0x3120343838332032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3331326c7225,0x610a3b3335662520,0x25203436732e6464\n"
".quad 0x25202c3431326c72,0x25202c3331326c72,0x2e0a3b3830326c72,0x3833203220636f6c\n"
".quad 0x2e74730a31203538,0x662e6c61626f6c67,0x326c72255b203233,0x336625202c5d3431\n"
".quad 0x732e6464610a3b35,0x31326c7225203436,0x31326c7225202c35,0x30326c7225202c34\n"
".quad 0x20636f6c2e0a3b38,0x3120363838332032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3531326c7225,0x610a3b3134662520,0x25203436732e6464,0x25202c3631326c72\n"
".quad 0x25202c3531326c72,0x2e0a3b3830326c72,0x3833203220636f6c,0x2e74730a31203738\n"
".quad 0x662e6c61626f6c67,0x326c72255b203233,0x386625202c5d3631,0x36732e6464610a3b\n"
".quad 0x3731326c72252034,0x3631326c7225202c,0x3830326c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203838383320,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3731326c72\n"
".quad 0x64610a3b35366625,0x7225203436732e64,0x7225202c3831326c,0x7225202c3731326c\n"
".quad 0x6c2e0a3b3830326c,0x383833203220636f,0x672e74730a312039,0x33662e6c61626f6c\n"
".quad 0x31326c72255b2032,0x35346625202c5d38,0x732e6464610a3b35,0x31326c7225203436\n"
".quad 0x31326c7225202c39,0x30326c7225202c38,0x20636f6c2e0a3b38,0x3120303938332032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3931326c7225,0x610a3b3935662520\n"
".quad 0x25203436732e6464,0x25202c3032326c72,0x25202c3931326c72,0x2e0a3b3830326c72\n"
".quad 0x3833203220636f6c,0x2e74730a31203139,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x396625202c5d3032,0x36732e6464610a3b,0x3132326c72252034,0x3032326c7225202c\n"
".quad 0x3830326c7225202c,0x3220636f6c2e0a3b,0x0a31203239383320,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3132326c72,0x6464610a3b356625,0x6c7225203436732e\n"
".quad 0x6c7225202c323232,0x6c7225202c313232,0x6f6c2e0a3b383032,0x3339383320322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3232326c72255b20,0x3b37376625202c5d\n"
".quad 0x3436732e6464610a,0x2c3332326c722520,0x2c3232326c722520,0x3b3830326c722520\n"
".quad 0x203220636f6c2e0a,0x730a312034393833,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3332326c,0x2e6464610a3b3766,0x326c722520343673,0x326c7225202c3432\n"
".quad 0x326c7225202c3332,0x636f6c2e0a3b3830,0x2035393833203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x5d3432326c72255b,0x0a3b31376625202c,0x203436732e646461\n"
".quad 0x202c3532326c7225,0x202c3432326c7225,0x0a3b3830326c7225,0x33203220636f6c2e\n"
".quad 0x74730a3120363938,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d353232\n"
".quad 0x313342420a0a3b36,0x636f6c2e0a3a355f,0x2038363933203220,0x79732e7261620a31\n"
".quad 0x6c2e0a3b3020636e,0x363933203220636f,0x732e646c0a312039,0x33752e6465726168\n"
".quad 0x2c31323172252032,0x616475635f5f5b20,0x765f6c61636f6c5f,0x38373638335f7261\n"
".quad 0x5f6e6f6e5f30335f,0x68635f74736e6f63,0x65730a3b5d6b6365,0x33732e71652e7074\n"
".quad 0x202c313170252032,0x31202c3132317225,0x7261702e646c0a3b,0x25203233752e6d61\n"
".quad 0x5f5b202c34333172,0x645f74726d37315a,0x665f42416279685f,0x5f5366506563726f\n"
".quad 0x5f535f535f536d66,0x5f6d617261705f69,0x707465730a3b5d37,0x203233732e74672e\n"
".quad 0x7225202c32317025,0x393939202c343331,0x702e646e610a3b39,0x3331702520646572\n"
".quad 0x202c31317025202c,0x6c2e0a3b32317025,0x323833203220636f,0x2e766f6d0a312034\n"
".quad 0x3331722520323375,0x6469746e25202c35,0x636f6c2e0a3b782e,0x2032373933203220\n"
".quad 0x672e707465730a31,0x7025203233732e74,0x33317225202c3431,0x6e610a3b31202c35\n"
".quad 0x2520646572702e64,0x317025202c353170,0x3b34317025202c33,0x203220636f6c2e0a\n"
".quad 0x400a312039363933,0x7262203531702521,0x395f313342422061,0x5f313342420a0a3b\n"
".quad 0x20636f6c2e0a3a36,0x3120333739332032,0x3233732e7268730a,0x202c373331722520\n"
".quad 0x31202c3733317225,0x3220636f6c2e0a3b,0x0a31203437393320,0x2e65672e70746573\n"
".quad 0x3631702520323375,0x202c31317225202c,0x400a3b3733317225,0x6172622036317025\n"
".quad 0x3b385f3133424220,0x3220636f6c2e0a0a,0x0a31203537393320,0x203233732e646461\n"
".quad 0x25202c3432317225,0x317225202c313172,0x2e6c756d0a3b3733,0x3233752e65646977\n"
".quad 0x2c3632326c722520,0x202c343231722520,0x732e6464610a3b34,0x32326c7225203436\n"
".quad 0x39376c7225202c38,0x3632326c7225202c,0x69772e6c756d0a3b,0x25203233752e6564\n"
".quad 0x25202c3932326c72,0x0a3b34202c313172,0x203436732e646461,0x202c3033326c7225\n"
".quad 0x25202c39376c7225,0x2e0a3b3932326c72,0x3933203220636f6c,0x2e646c0a31203537\n"
".quad 0x662e646572616873,0x3534346625203233,0x33326c72255b202c,0x732e646c0a3b5d30\n"
".quad 0x33662e6465726168,0x2c36343466252032,0x3832326c72255b20,0x662e6464610a3b5d\n"
".quad 0x3734346625203233,0x2c3534346625202c,0x0a3b363434662520,0x65726168732e7473\n"
".quad 0x255b203233662e64,0x202c5d3033326c72,0x610a3b3734346625,0x25203436732e6464\n"
".quad 0x25202c3233326c72,0x7225202c31386c72,0x64610a3b3632326c,0x7225203436732e64\n"
".quad 0x7225202c3333326c,0x6c7225202c31386c,0x6f6c2e0a3b393232,0x3637393320322063\n"
".quad 0x68732e646c0a3120,0x3233662e64657261,0x202c383434662520,0x5d3333326c72255b\n"
".quad 0x6168732e646c0a3b,0x203233662e646572,0x5b202c3934346625,0x3b5d3233326c7225\n"
".quad 0x3233662e6464610a,0x202c303534662520,0x25202c3834346625,0x74730a3b39343466\n"
".quad 0x2e6465726168732e,0x6c72255b20323366,0x6625202c5d333332,0x6464610a3b303534\n"
".quad 0x6c7225203436732e,0x6c7225202c353332,0x326c7225202c3338,0x2e6464610a3b3632\n"
".quad 0x326c722520343673,0x386c7225202c3633,0x32326c7225202c33,0x20636f6c2e0a3b39\n"
".quad 0x3120373739332032,0x726168732e646c0a,0x25203233662e6465,0x255b202c31353466\n"
".quad 0x0a3b5d3633326c72,0x65726168732e646c,0x6625203233662e64,0x72255b202c323534\n"
".quad 0x610a3b5d3533326c,0x25203233662e6464,0x6625202c33353466,0x346625202c313534\n"
".quad 0x732e74730a3b3235,0x33662e6465726168,0x33326c72255b2032,0x35346625202c5d36\n"
".quad 0x313342420a0a3b33,0x636f6c2e0a3a385f,0x2039373933203220,0x79732e7261620a31\n"
".quad 0x6c2e0a3b3020636e,0x373933203220636f,0x707465730a312032,0x203233732e74672e\n"
".quad 0x7225202c37317025,0x0a3b31202c373331,0x7262203731702540,0x365f313342422061\n"
".quad 0x5f313342420a0a3b,0x0a3b7465720a3a39,0x72746e652e0a0a7d,0x726d37315a5f2079\n"
".quad 0x426279685f645f74,0x506563726f665f41,0x535f536d665f5366,0x702e0a28695f535f\n"
".quad 0x36752e206d617261,0x726d37315a5f2034,0x426279685f645f74,0x506563726f665f41\n"
".quad 0x535f536d665f5366,0x7261705f695f535f,0x702e0a2c305f6d61,0x36752e206d617261\n"
".quad 0x726d37315a5f2034,0x426279685f645f74,0x506563726f665f41,0x535f536d665f5366\n"
".quad 0x7261705f695f535f,0x702e0a2c315f6d61,0x33662e206d617261,0x726d37315a5f2032\n"
".quad 0x426279685f645f74,0x506563726f665f41,0x535f536d665f5366,0x7261705f695f535f\n"
".quad 0x702e0a2c325f6d61,0x36752e206d617261,0x726d37315a5f2034,0x426279685f645f74\n"
".quad 0x506563726f665f41,0x535f536d665f5366,0x7261705f695f535f,0x702e0a2c335f6d61\n"
".quad 0x36752e206d617261,0x726d37315a5f2034,0x426279685f645f74,0x506563726f665f41\n"
".quad 0x535f536d665f5366,0x7261705f695f535f,0x702e0a2c345f6d61,0x36752e206d617261\n"
".quad 0x726d37315a5f2034,0x426279685f645f74,0x506563726f665f41,0x535f536d665f5366\n"
".quad 0x7261705f695f535f,0x702e0a2c355f6d61,0x36752e206d617261,0x726d37315a5f2034\n"
".quad 0x426279685f645f74,0x506563726f665f41,0x535f536d665f5366,0x7261705f695f535f\n"
".quad 0x702e0a2c365f6d61,0x33752e206d617261,0x726d37315a5f2032,0x426279685f645f74\n"
".quad 0x506563726f665f41,0x535f536d665f5366,0x7261705f695f535f,0x7b0a290a375f6d61\n"
".quad 0x662e206765722e0a,0x35343c6625203233,0x6765722e0a3b3e36,0x2520646572702e20\n"
".quad 0x2e0a3b3e38313c70,0x3233732e20676572,0x3e3833313c722520,0x2e206765722e0a3b\n"
".quad 0x3c6c722520343673,0x090a0a3b3e343432,0x206465726168732e,0x34206e67696c612e\n"
".quad 0x635f5f2038622e20,0x61636f6c5f616475,0x38335f7261765f6c,0x6e5f32335f333038\n"
".quad 0x74736e6f635f6e6f,0x35325b586d75735f,0x732e090a0a3b5d36,0x612e206465726168\n"
".quad 0x2e2034206e67696c,0x6475635f5f203862,0x5f6c61636f6c5f61,0x303838335f726176\n"
".quad 0x6e6f6e5f32345f33,0x735f74736e6f635f,0x5d3635325b596d75,0x6168732e090a0a3b\n"
".quad 0x696c612e20646572,0x38622e2034206e67,0x5f616475635f5f20,0x61765f6c61636f6c\n"
".quad 0x5f33303838335f72,0x635f6e6f6e5f3235,0x6d75735f74736e6f,0x0a3b5d3635325b5a\n"
".quad 0x65726168732e090a,0x6e67696c612e2064,0x5f2038622e203420,0x6f6c5f616475635f\n"
".quad 0x5f7261765f6c6163,0x30335f3430383833,0x6e6f635f6e6f6e5f,0x6b636568635f7473\n"
".quad 0x646c0a0a3b5d345b,0x752e6d617261702e,0x2c316c7225203436,0x726d37315a5f5b20\n"
".quad 0x426279685f645f74,0x506563726f665f41,0x535f536d665f5366,0x7261705f695f535f\n"
".quad 0x6c0a3b5d305f6d61,0x2e6d617261702e64,0x336c722520343675,0x6d37315a5f5b202c\n"
".quad 0x6279685f645f7472,0x6563726f665f4142,0x5f536d665f536650,0x61705f695f535f53\n"
".quad 0x0a3b5d335f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67,0x2c346c7225203436\n"
".quad 0x2e0a3b316c722520,0x3933203220636f6c,0x766f6d0a31203539,0x317225203233752e\n"
".quad 0x69746e25202c3733,0x766f6d0a3b782e64,0x317225203233752e,0x6961746325202c30\n"
".quad 0x766f6d0a3b782e64,0x317225203233752e,0x2e64697425202c31,0x6c2e64616d0a3b78\n"
".quad 0x7225203233732e6f,0x33317225202c3231,0x2c30317225202c37,0x2e0a3b3131722520\n"
".quad 0x3933203220636f6c,0x766f6d0a31203639,0x317225203233752e,0x6469746e25202c33\n"
".quad 0x2e766f6d0a3b792e,0x3431722520323375,0x646961746325202c,0x2e766f6d0a3b792e\n"
".quad 0x3531722520323375,0x792e64697425202c,0x6f6c2e64616d0a3b,0x327225203233732e\n"
".quad 0x202c33317225202c,0x7225202c34317225,0x636f6c2e0a3b3531,0x2037393933203220\n"
".quad 0x33752e766f6d0a31,0x202c363172252032,0x3b7a2e6469746e25,0x3233752e766f6d0a\n"
".quad 0x25202c3731722520,0x3b7a2e6469617463,0x3233752e766f6d0a,0x25202c3831722520\n"
".quad 0x6d0a3b7a2e646974,0x33732e6f6c2e6461,0x25202c3372252032,0x317225202c363172\n"
".quad 0x3b38317225202c37,0x3436752e7476630a,0x6c7225203233752e,0x3b32317225202c35\n"
".quad 0x203220636f6c2e0a,0x630a312038393933,0x732e3436732e7476,0x2c366c7225203233\n"
".quad 0x68730a3b32722520,0x7225203233622e6c,0x202c337225202c34,0x20636f6c2e0a3b36\n"
".quad 0x3120383939332032,0x3436732e7476630a,0x6c7225203233732e,0x0a3b347225202c37\n"
".quad 0x203436732e646461,0x25202c30316c7225,0x6c7225202c376c72,0x20636f6c2e0a3b36\n"
".quad 0x3120383939332032,0x2e6f6c2e64616d0a,0x386c722520343673,0x2c30316c7225202c\n"
".quad 0x25202c336c722520,0x766f6d0a3b356c72,0x317225203233752e,0x6c2e0a3b30202c39\n"
".quad 0x303034203220636f,0x732e74730a312032,0x33752e6465726168,0x6475635f5f5b2032\n"
".quad 0x5f6c61636f6c5f61,0x303838335f726176,0x6e6f6e5f30335f34,0x635f74736e6f635f\n"
".quad 0x25202c5d6b636568,0x6f6c2e0a3b393172,0x3330303420322063,0x732e7261620a3120\n"
".quad 0x730a3b3020636e79,0x25203436622e6c68,0x7225202c31316c72,0x0a3b3233202c386c\n"
".quad 0x203436732e726873,0x7225202c396c7225,0x3b3233202c31316c,0x203220636f6c2e0a\n"
".quad 0x730a312034313034,0x25203436622e6c68,0x7225202c32316c72,0x610a3b32202c396c\n"
".quad 0x25203436732e6464,0x7225202c33316c72,0x316c7225202c346c,0x6c672e646c0a3b32\n"
".quad 0x3233662e6c61626f,0x255b202c32662520,0x610a3b5d33316c72,0x25203233732e6464\n"
".quad 0x327225202c313272,0x6c2e0a3b312d202c,0x313034203220636f,0x2e7476630a312035\n"
".quad 0x203233732e343673,0x25202c34316c7225,0x6464610a3b313272,0x6c7225203436732e\n"
".quad 0x316c7225202c3531,0x3b376c7225202c34,0x3436732e6464610a,0x202c36316c722520\n"
".quad 0x38202c35316c7225,0x2e646c0a3b323931,0x36752e6d61726170,0x3334326c72252034\n"
".quad 0x6d37315a5f5b202c,0x6279685f645f7472,0x6563726f665f4142,0x5f536d665f536650\n"
".quad 0x61705f695f535f53,0x0a3b5d335f6d6172,0x34203220636f6c2e,0x616d0a3120353130\n"
".quad 0x3436732e6f6c2e64,0x202c37316c722520,0x25202c36316c7225,0x25202c3334326c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x316c7225202c3831,0x730a3b3233202c37\n"
".quad 0x25203436732e7268,0x7225202c39316c72,0x3b3233202c38316c,0x203220636f6c2e0a\n"
".quad 0x730a312035313034,0x25203436622e6c68,0x7225202c30326c72,0x0a3b32202c39316c\n"
".quad 0x203436732e646461,0x25202c31326c7225,0x6c7225202c346c72,0x672e646c0a3b3032\n"
".quad 0x33662e6c61626f6c,0x5b202c3366252032,0x0a3b5d31326c7225,0x34203220636f6c2e\n"
".quad 0x64610a3120363130,0x7225203233732e64,0x2c327225202c3332,0x2e7476630a3b3120\n"
".quad 0x203233732e343673,0x25202c32326c7225,0x6464610a3b333272,0x6c7225203436732e\n"
".quad 0x326c7225202c3332,0x3b376c7225202c32,0x3436732e6464610a,0x202c34326c722520\n"
".quad 0x31202c33326c7225,0x6c2e0a3b34383336,0x313034203220636f,0x2e64616d0a312036\n"
".quad 0x25203436732e6f6c,0x7225202c35326c72,0x6c7225202c34326c,0x6c7225202c333432\n"
".quad 0x622e6c68730a3b35,0x36326c7225203436,0x2c35326c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x326c7225202c3732,0x2e0a3b3233202c36,0x3034203220636f6c\n"
".quad 0x6c68730a31203631,0x6c7225203436622e,0x326c7225202c3832,0x64610a3b32202c37\n"
".quad 0x7225203436732e64,0x6c7225202c39326c,0x38326c7225202c34,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c346625,0x64610a3b5d39326c,0x7225203233732e64\n"
".quad 0x2c347225202c3532,0x6c2e0a3b34362d20,0x313034203220636f,0x2e7476630a312037\n"
".quad 0x203233732e343673,0x25202c30336c7225,0x6464610a3b353272,0x6c7225203436732e\n"
".quad 0x366c7225202c3133,0x3b30336c7225202c,0x3436732e6464610a,0x202c32336c722520\n"
".quad 0x33202c31336c7225,0x6c2e0a3b34363836,0x313034203220636f,0x2e64616d0a312037\n"
".quad 0x25203436732e6f6c,0x7225202c33336c72,0x6c7225202c32336c,0x6c7225202c333432\n"
".quad 0x622e6c68730a3b35,0x34336c7225203436,0x2c33336c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x336c7225202c3533,0x2e0a3b3233202c34,0x3034203220636f6c\n"
".quad 0x6c68730a31203731,0x6c7225203436622e,0x336c7225202c3633,0x64610a3b32202c35\n"
".quad 0x7225203436732e64,0x6c7225202c37336c,0x36336c7225202c34,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x72255b202c356625,0x64610a3b5d37336c,0x7225203436732e64\n"
".quad 0x6c7225202c38336c,0x336c7225202c3431,0x732e6464610a3b30,0x39336c7225203436\n"
".quad 0x2c38336c7225202c,0x0a3b363530353420,0x34203220636f6c2e,0x616d0a3120383130\n"
".quad 0x3436732e6f6c2e64,0x202c30346c722520,0x25202c39336c7225,0x25202c3334326c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x346c7225202c3134,0x730a3b3233202c30\n"
".quad 0x25203436732e7268,0x7225202c32346c72,0x3b3233202c31346c,0x203220636f6c2e0a\n"
".quad 0x730a312038313034,0x25203436622e6c68,0x7225202c33346c72,0x0a3b32202c32346c\n"
".quad 0x203436732e646461,0x25202c34346c7225,0x6c7225202c346c72,0x672e646c0a3b3334\n"
".quad 0x33662e6c61626f6c,0x5b202c3666252032,0x0a3b5d34346c7225,0x203436732e646461\n"
".quad 0x25202c35346c7225,0x7225202c32326c72,0x6464610a3b30336c,0x6c7225203436732e\n"
".quad 0x346c7225202c3634,0x3834323335202c35,0x3220636f6c2e0a3b,0x0a31203931303420\n"
".quad 0x732e6f6c2e64616d,0x37346c7225203436,0x2c36346c7225202c,0x2c3334326c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x7225202c38346c72,0x3b3233202c37346c\n"
".quad 0x3436732e7268730a,0x202c39346c722520,0x33202c38346c7225,0x20636f6c2e0a3b32\n"
".quad 0x3120393130342032,0x3436622e6c68730a,0x202c30356c722520,0x32202c39346c7225\n"
".quad 0x36732e6464610a3b,0x2c31356c72252034,0x25202c346c722520,0x646c0a3b30356c72\n"
".quad 0x2e6c61626f6c672e,0x2c37662520323366,0x5d31356c72255b20,0x33732e6464610a3b\n"
".quad 0x202c393272252032,0x3b3436202c347225,0x203220636f6c2e0a,0x630a312030323034\n"
".quad 0x732e3436732e7476,0x32356c7225203233,0x0a3b39327225202c,0x203436732e646461\n"
".quad 0x25202c33356c7225,0x6c7225202c366c72,0x2e6464610a3b3235,0x356c722520343673\n"
".quad 0x33356c7225202c34,0x3b3434333735202c,0x203220636f6c2e0a,0x6d0a312030323034\n"
".quad 0x36732e6f6c2e6461,0x2c35356c72252034,0x202c34356c722520,0x202c3334326c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x6c7225202c36356c,0x0a3b3233202c3535\n"
".quad 0x203436732e726873,0x25202c37356c7225,0x3233202c36356c72,0x3220636f6c2e0a3b\n"
".quad 0x0a31203032303420,0x203436622e6c6873,0x25202c38356c7225,0x3b32202c37356c72\n"
".quad 0x3436732e6464610a,0x202c39356c722520,0x7225202c346c7225,0x2e646c0a3b38356c\n"
".quad 0x662e6c61626f6c67,0x202c386625203233,0x3b5d39356c72255b,0x3436732e6464610a\n"
".quad 0x202c30366c722520,0x25202c34316c7225,0x64610a3b32356c72,0x7225203436732e64\n"
".quad 0x6c7225202c31366c,0x33353536202c3036,0x20636f6c2e0a3b36,0x3120313230342032\n"
".quad 0x2e6f6c2e64616d0a,0x366c722520343673,0x31366c7225202c32,0x3334326c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x25202c33366c7225,0x3233202c32366c72\n"
".quad 0x36732e7268730a3b,0x2c34366c72252034,0x202c33366c722520,0x636f6c2e0a3b3233\n"
".quad 0x2031323034203220,0x36622e6c68730a31,0x2c35366c72252034,0x202c34366c722520\n"
".quad 0x732e6464610a3b32,0x36366c7225203436,0x202c346c7225202c,0x6c0a3b35366c7225\n"
".quad 0x6c61626f6c672e64,0x396625203233662e,0x36366c72255b202c,0x20636f6c2e0a3b5d\n"
".quad 0x3120323230342032,0x71652e707465730a,0x317025203233732e,0x36202c337225202c\n"
".quad 0x20317025400a3b33,0x3233424220617262,0x6f6c2e0a0a3b325f,0x3631303420322063\n"
".quad 0x752e7476630a3120,0x25203233752e3436,0x7225202c37366c72,0x636f6c2e0a3b3332\n"
".quad 0x2030323034203220,0x36752e7476630a31,0x7225203233752e34,0x327225202c38366c\n"
".quad 0x732e6464610a3b39,0x39366c7225203436,0x2c37366c7225202c,0x0a3b38366c722520\n"
".quad 0x203436732e646461,0x25202c30376c7225,0x3337202c39366c72,0x7476630a3b383237\n"
".quad 0x3233752e3436752e,0x202c31376c722520,0x646c0a3b32317225,0x752e6d617261702e\n"
".quad 0x34326c7225203436,0x37315a5f5b202c32,0x79685f645f74726d,0x63726f665f414262\n"
".quad 0x536d665f53665065,0x705f695f535f535f,0x3b5d335f6d617261,0x203220636f6c2e0a\n"
".quad 0x6d0a312033323034,0x36732e6f6c2e6461,0x2c32376c72252034,0x202c30376c722520\n"
".quad 0x202c3234326c7225,0x6c0a3b31376c7225,0x2e6d617261702e64,0x326c722520343675\n"
".quad 0x315a5f5b202c3733,0x685f645f74726d37,0x726f665f41426279,0x6d665f5366506563\n"
".quad 0x5f695f535f535f53,0x5d305f6d61726170,0x742e617476630a3b,0x6c61626f6c672e6f\n"
".quad 0x6c7225203436752e,0x326c7225202c3337,0x2e6c68730a3b3733,0x376c722520343662\n"
".quad 0x32376c7225202c34,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c35376c\n"
".quad 0x0a3b3233202c3437,0x34203220636f6c2e,0x68730a3120333230,0x7225203436622e6c\n"
".quad 0x6c7225202c36376c,0x610a3b32202c3537,0x25203436732e6464,0x7225202c37376c72\n"
".quad 0x6c7225202c33376c,0x672e646c0a3b3637,0x33662e6c61626f6c,0x2c35353466252032\n"
".quad 0x5d37376c72255b20,0x5f323342420a0a3b,0x732e6464610a3a32,0x2c32357225203233\n"
".quad 0x2d202c3231722520,0x20636f6c2e0a3b31,0x3120353230342032,0x2e6e722e7476630a\n"
".quad 0x203233732e323366,0x7225202c33386625,0x2e6464610a3b3235,0x3537662520323366\n"
".quad 0x202c33386625202c,0x3030303046336630,0x2e7476630a3b3030,0x732e3233662e6e72\n"
".quad 0x2c34386625203233,0x64610a3b32722520,0x6625203233662e64,0x34386625202c3538\n"
".quad 0x303046336630202c,0x76630a3b30303030,0x3233662e6e722e74,0x386625203233732e\n"
".quad 0x0a3b347225202c36,0x203233662e646461,0x6625202c34336625,0x36386625202c3538\n"
".quad 0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32,0x326625202c333266\n"
".quad 0x2c35326625202c34,0x202c7d3632662520,0x5f6665527865745b,0x66257b202c423166\n"
".quad 0x34336625202c3537,0x6c2e090a0a3b5d7d,0x323034203220636f,0x2e6464610a312036\n"
".quad 0x3336722520323373,0x202c32317225202c,0x722e7476630a3b31,0x33732e3233662e6e\n"
".quad 0x202c373866252032,0x64610a3b33367225,0x6625203233662e64,0x37386625202c3138\n"
".quad 0x303046336630202c,0x090a0a3b30303030,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x2c393266257b2032,0x25202c3033662520,0x336625202c313366,0x7865745b202c7d32\n"
".quad 0x2c4233665f666552,0x202c313866257b20,0x0a3b5d7d34336625,0x3220636f6c2e090a\n"
".quad 0x0a31203732303420,0x662e6e722e747663,0x25203233732e3233,0x327225202c383866\n"
".quad 0x662e6464610a3b31,0x2c39386625203233,0x30202c3838662520,0x3030303030463366\n"
".quad 0x662e6464610a3b30,0x2c36346625203233,0x25202c3938662520,0x74090a0a3b363866\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x202c353366257b20,0x6625202c36336625\n"
".quad 0x38336625202c3733,0x527865745b202c7d,0x202c4235665f6665,0x25202c353766257b\n"
".quad 0x0a0a3b5d7d363466,0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e\n"
".quad 0x32346625202c3134,0x202c33346625202c,0x5b202c7d34346625,0x665f666552786574\n"
".quad 0x3866257b202c4236,0x7d36346625202c31,0x6f6c2e090a0a3b5d,0x3932303420322063\n"
".quad 0x722e7476630a3120,0x33732e3233662e6e,0x202c303966252032,0x64610a3b33327225\n"
".quad 0x6625203233662e64,0x30396625202c3139,0x303046336630202c,0x64610a3b30303030\n"
".quad 0x6625203233662e64,0x31396625202c3835,0x0a3b36386625202c,0x64322e786574090a\n"
".quad 0x2e3233662e34762e,0x3466257b20323366,0x2c38346625202c37,0x25202c3934662520\n"
".quad 0x745b202c7d303566,0x37665f6665527865,0x313866257b202c42,0x5d7d38356625202c\n"
".quad 0x6574090a090a0a3b,0x2e34762e64322e78,0x203233662e323366,0x25202c333566257b\n"
".quad 0x356625202c343566,0x7d36356625202c35,0x65527865745b202c,0x7b202c4238665f66\n"
".quad 0x6625202c35376625,0x090a0a3b5d7d3835,0x34203220636f6c2e,0x76630a3120313330\n"
".quad 0x3233662e6e722e74,0x396625203233732e,0x3b39327225202c32,0x3233662e6464610a\n"
".quad 0x25202c3037662520,0x396625202c353866,0x786574090a0a3b32,0x662e34762e64322e\n"
".quad 0x7b203233662e3233,0x6625202c39356625,0x31366625202c3036,0x2c7d32366625202c\n"
".quad 0x6665527865745b20,0x7b202c423531665f,0x6625202c35376625,0x090a0a3b5d7d3037\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3666257b20323366,0x2c36366625202c35\n"
".quad 0x25202c3736662520,0x745b202c7d383666,0x31665f6665527865,0x3866257b202c4237\n"
".quad 0x7d30376625202c31,0x6f6c2e090a0a3b5d,0x3333303420322063,0x722e7476630a3120\n"
".quad 0x33732e3233662e6e,0x202c333966252032,0x64610a3b35327225,0x6625203233662e64\n"
".quad 0x35386625202c3238,0x0a3b33396625202c,0x64322e786574090a,0x2e3233662e34762e\n"
".quad 0x3766257b20323366,0x2c32376625202c31,0x25202c3337662520,0x745b202c7d343766\n"
".quad 0x31665f6665527865,0x3766257b202c4230,0x7d32386625202c35,0x74090a090a0a3b5d\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x202c373766257b20,0x6625202c38376625\n"
".quad 0x30386625202c3937,0x527865745b202c7d,0x2c423231665f6665,0x202c313866257b20\n"
".quad 0x0a3b5d7d32386625,0x3220636f6c2e090a,0x730a312034313120,0x732e71652e707465\n"
".quad 0x202c327025203233,0x3336202c32317225,0x652e707465730a3b,0x7025203233732e71\n"
".quad 0x202c327225202c33,0x72702e726f0a3b30,0x202c347025206465,0x337025202c327025\n"
".quad 0x3220636f6c2e0a3b,0x730a312034313120,0x732e71652e707465,0x202c357025203233\n"
".quad 0x3b3336202c327225,0x646572702e726f0a,0x7025202c36702520,0x0a3b357025202c34\n"
".quad 0x31203220636f6c2e,0x7465730a31203431,0x3233732e71652e70,0x7225202c37702520\n"
".quad 0x726f0a3b30202c33,0x702520646572702e,0x202c367025202c38,0x2e726f0a3b377025\n"
".quad 0x3170252064657270,0x202c387025202c30,0x6f6c2e0a3b317025,0x3539393320322063\n"
".quad 0x752e766f6d0a3120,0x3633317225203233,0x782e64697425202c,0x69772e6c756d0a3b\n"
".quad 0x25203233752e6564,0x7225202c38376c72,0x0a3b34202c363331,0x203436752e766f6d\n"
".quad 0x5f202c39376c7225,0x6f6c5f616475635f,0x5f7261765f6c6163,0x32335f3330383833\n"
".quad 0x6e6f635f6e6f6e5f,0x3b586d75735f7473,0x3436732e6464610a,0x202c30386c722520\n"
".quad 0x25202c39376c7225,0x6c2e0a3b38376c72,0x343034203220636f,0x732e74730a312036\n"
".quad 0x33752e6465726168,0x30386c72255b2032,0x3b39317225202c5d,0x3436752e766f6d0a\n"
".quad 0x202c31386c722520,0x6c5f616475635f5f,0x7261765f6c61636f,0x345f33303838335f\n"
".quad 0x6f635f6e6f6e5f32,0x596d75735f74736e,0x36732e6464610a3b,0x2c32386c72252034\n"
".quad 0x202c31386c722520,0x2e0a3b38376c7225,0x3034203220636f6c,0x2e74730a31203734\n"
".quad 0x752e646572616873,0x386c72255b203233,0x39317225202c5d32,0x36752e766f6d0a3b\n"
".quad 0x2c33386c72252034,0x5f616475635f5f20,0x61765f6c61636f6c,0x5f33303838335f72\n"
".quad 0x635f6e6f6e5f3235,0x6d75735f74736e6f,0x732e6464610a3b5a,0x34386c7225203436\n"
".quad 0x2c33386c7225202c,0x0a3b38376c722520,0x34203220636f6c2e,0x74730a3120383430\n"
".quad 0x2e6465726168732e,0x6c72255b20323375,0x317225202c5d3438,0x20636f6c2e0a3b39\n"
".quad 0x0a31203431312032,0x7262203031702540,0x345f323342422061,0x20636f6c2e0a0a3b\n"
".quad 0x3120353131342032,0x3233662e6275730a,0x25202c3439662520,0x326625202c333266\n"
".quad 0x662e6464610a3b39,0x2c35396625203233,0x25202c3439662520,0x6275730a3b353366\n"
".quad 0x396625203233662e,0x2c35396625202c36,0x730a3b3134662520,0x25203233662e6275\n"
".quad 0x396625202c373966,0x3b37346625202c36,0x3233662e6464610a,0x25202c3839662520\n"
".quad 0x356625202c373966,0x662e6464610a3b33,0x2c39396625203233,0x25202c3839662520\n"
".quad 0x6275730a3b313766,0x316625203233662e,0x39396625202c3030,0x0a3b37376625202c\n"
".quad 0x203233662e646461,0x25202c3130316625,0x6625202c30303166,0x2e6275730a3b3935\n"
".quad 0x3031662520323366,0x3130316625202c32,0x0a3b35366625202c,0x203233662e627573\n"
".quad 0x25202c3330316625,0x3b346625202c3366,0x3233662e6464610a,0x202c343031662520\n"
".quad 0x25202c3330316625,0x6464610a3b353366,0x316625203233662e,0x30316625202c3530\n"
".quad 0x3b31346625202c34,0x3233662e6275730a,0x202c363031662520,0x25202c3530316625\n"
".quad 0x6275730a3b373466,0x316625203233662e,0x30316625202c3730,0x3b33356625202c36\n"
".quad 0x3233662e6464610a,0x202c383031662520,0x25202c3730316625,0x2e6275730a3b3666\n"
".quad 0x3031662520323366,0x3830316625202c39,0x610a3b376625202c,0x25203233662e6464\n"
".quad 0x6625202c30313166,0x396625202c393031,0x33662e6275730a3b,0x2c31313166252032\n"
".quad 0x202c303131662520,0x610a3b3535346625,0x25203233662e6464,0x6625202c32313166\n"
".quad 0x3b31376625202c35,0x3233662e6464610a,0x202c333131662520,0x25202c3231316625\n"
".quad 0x2e6464610a3b3666,0x3131662520323366,0x3331316625202c34,0x0a3b37376625202c\n"
".quad 0x203233662e646461,0x25202c3531316625,0x6625202c34313166,0x662e6275730a3b37\n"
".quad 0x3631316625203233,0x2c3531316625202c,0x75730a3b38662520,0x6625203233662e62\n"
".quad 0x316625202c373131,0x39356625202c3631,0x33662e6275730a3b,0x2c38313166252032\n"
".quad 0x202c373131662520,0x6275730a3b396625,0x316625203233662e,0x31316625202c3931\n"
".quad 0x3b35366625202c38,0x3233662e6275730a,0x202c303231662520,0x25202c3931316625\n"
".quad 0x75730a3b35353466,0x6625203233662e62,0x336625202c313231,0x0a3b326625202c35\n"
".quad 0x34203220636f6c2e,0x64610a3120353131,0x6625203233662e64,0x316625202c323231\n"
".quad 0x31346625202c3132,0x33662e6464610a3b,0x2c33323166252032,0x202c323231662520\n"
".quad 0x64610a3b37346625,0x6625203233662e64,0x316625202c343231,0x33356625202c3332\n"
".quad 0x33662e6464610a3b,0x2c35323166252032,0x202c343231662520,0x64610a3b31376625\n"
".quad 0x6625203233662e64,0x316625202c363231,0x3b366625202c3532,0x3233662e6464610a\n"
".quad 0x202c373231662520,0x25202c3632316625,0x6464610a3b373766,0x316625203233662e\n"
".quad 0x32316625202c3832,0x0a3b376625202c37,0x203233662e646461,0x25202c3932316625\n"
".quad 0x6625202c38323166,0x2e6464610a3b3935,0x3331662520323366,0x3932316625202c30\n"
".quad 0x610a3b396625202c,0x25203233662e6464,0x6625202c31333166,0x366625202c303331\n"
".quad 0x662e6464610a3b35,0x3233316625203233,0x2c3133316625202c,0x0a3b353534662520\n"
".quad 0x203233662e6c756d,0x25202c3333316625,0x6625202c31313166,0x616d660a3b313131\n"
".quad 0x203233662e6e722e,0x25202c3433316625,0x6625202c32303166,0x316625202c323031\n"
".quad 0x2e6c756d0a3b3333,0x3331662520323366,0x3032316625202c35,0x3b3032316625202c\n"
".quad 0x2e6e722e616d660a,0x3331662520323366,0x3032316625202c36,0x2c3032316625202c\n"
".quad 0x0a3b343331662520,0x203233662e627573,0x25202c3733316625,0x6625202c32333166\n"
".quad 0x6c756d0a3b363331,0x316625203233662e,0x33326625202c3833,0x303830436630202c\n"
".quad 0x6d660a3b30303030,0x3233662e6e722e61,0x202c393331662520,0x346630202c326625\n"
".quad 0x2c30303030303431,0x0a3b383331662520,0x662e6e722e616d66,0x3034316625203233\n"
".quad 0x30202c336625202c,0x3030303038304366,0x3933316625202c30,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x39326625202c3134,0x303830436630202c,0x6625202c30303030\n"
".quad 0x616d660a3b303431,0x203233662e6e722e,0x25202c3234316625,0x30436630202c3466\n"
".quad 0x202c303030303038,0x610a3b3134316625,0x25203233662e6464,0x6625202c33343166\n"
".quad 0x336625202c323431,0x662e6464610a3b35,0x3434316625203233,0x2c3334316625202c\n"
".quad 0x610a3b3134662520,0x25203233662e6464,0x6625202c35343166,0x346625202c343431\n"
".quad 0x662e6464610a3b37,0x3634316625203233,0x2c3534316625202c,0x660a3b3335662520\n"
".quad 0x33662e6e722e616d,0x2c37343166252032,0x6630202c35662520,0x3030303030383043\n"
".quad 0x3b3634316625202c,0x3233662e6464610a,0x202c383431662520,0x25202c3734316625\n"
".quad 0x6464610a3b313766,0x316625203233662e,0x34316625202c3934,0x0a3b366625202c38\n"
".quad 0x203233662e646461,0x25202c3035316625,0x6625202c39343166,0x2e6464610a3b3737\n"
".quad 0x3531662520323366,0x3035316625202c31,0x660a3b376625202c,0x33662e6e722e616d\n"
".quad 0x2c32353166252032,0x6630202c38662520,0x3030303030383043,0x3b3135316625202c\n"
".quad 0x3233662e6464610a,0x202c333531662520,0x25202c3235316625,0x6464610a3b393566\n"
".quad 0x316625203233662e,0x35316625202c3435,0x0a3b396625202c33,0x203233662e646461\n"
".quad 0x25202c3535316625,0x6625202c34353166,0x2e6464610a3b3536,0x3531662520323366\n"
".quad 0x3535316625202c36,0x3b3535346625202c,0x2e6e722e616d660a,0x3531662520323366\n"
".quad 0x3633316625202c37,0x314630346630202c,0x6625202c34313534,0x6c756d0a3b363531\n"
".quad 0x316625203233662e,0x39326625202c3835,0x304130346630202c,0x6d660a3b30303030\n"
".quad 0x3233662e6e722e61,0x202c393531662520,0x6630202c33326625,0x3030303030413043\n"
".quad 0x3b3835316625202c,0x2e6e722e616d660a,0x3631662520323366,0x3230316625202c30\n"
".quad 0x354446336630202c,0x6625202c35353535,0x6c756d0a3b393531,0x316625203233662e\n"
".quad 0x2c346625202c3136,0x3030413034663020,0x616d660a3b303030,0x203233662e6e722e\n"
".quad 0x25202c3236316625,0x30436630202c3366,0x202c303030303041,0x660a3b3136316625\n"
".quad 0x33662e6e722e616d,0x2c33363166252032,0x202c313131662520,0x3535354446336630\n"
".quad 0x36316625202c3535,0x662e6c756d0a3b32,0x3436316625203233,0x30202c386625202c\n"
".quad 0x3030303041303466,0x722e616d660a3b30,0x6625203233662e6e,0x356625202c353631\n"
".quad 0x304130436630202c,0x6625202c30303030,0x616d660a3b343631,0x203233662e6e722e\n"
".quad 0x25202c3636316625,0x6630202c30323166,0x3535353535444633,0x3b3536316625202c\n"
".quad 0x3233662e6464610a,0x202c373631662520,0x6625202c33326625,0x2e6275730a3b3332\n"
".quad 0x3631662520323366,0x3736316625202c38,0x2e0a3b336625202c,0x3134203220636f6c\n"
".quad 0x6464610a31203531,0x316625203233662e,0x39326625202c3936,0x0a3b39326625202c\n"
".quad 0x203233662e646461,0x25202c3037316625,0x6625202c38363166,0x6275730a3b393631\n"
".quad 0x316625203233662e,0x37316625202c3137,0x0a3b346625202c30,0x34203220636f6c2e\n"
".quad 0x64610a3120353131,0x6625203233662e64,0x316625202c323731,0x35336625202c3137\n"
".quad 0x33662e6464610a3b,0x2c33373166252032,0x202c323731662520,0x64610a3b31346625\n"
".quad 0x6625203233662e64,0x316625202c343731,0x37346625202c3337,0x33662e6464610a3b\n"
".quad 0x2c35373166252032,0x202c343731662520,0x75730a3b33356625,0x6625203233662e62\n"
".quad 0x316625202c363731,0x3b356625202c3537,0x203220636f6c2e0a,0x610a312035313134\n"
".quad 0x25203233662e6464,0x6625202c37373166,0x376625202c363731,0x662e766f6d0a3b31\n"
".quad 0x3837316625203233,0x303030436630202c,0x6c2e0a3b30303030,0x313134203220636f\n"
".quad 0x2e616d660a312035,0x25203233662e6e72,0x6625202c39373166,0x3030436630202c36\n"
".quad 0x25202c3030303030,0x64610a3b37373166,0x6625203233662e64,0x316625202c303831\n"
".quad 0x37376625202c3937,0x6e722e616d660a3b,0x316625203233662e,0x2c376625202c3138\n"
".quad 0x3030303043663020,0x316625202c303030,0x2e6275730a3b3038,0x3831662520323366\n"
".quad 0x3138316625202c32,0x2e0a3b386625202c,0x3134203220636f6c,0x6464610a31203531\n"
".quad 0x316625203233662e,0x38316625202c3338,0x3b39356625202c32,0x2e6e722e616d660a\n"
".quad 0x3831662520323366,0x202c396625202c34,0x3030303030436630,0x38316625202c3030\n"
".quad 0x662e6464610a3b33,0x3538316625203233,0x2c3438316625202c,0x660a3b3536662520\n"
".quad 0x33662e6e722e616d,0x2c36383166252032,0x202c353534662520,0x3030303030436630\n"
".quad 0x38316625202c3030,0x662e6464610a3b35,0x3738316625203233,0x2c3230316625202c\n"
".quad 0x0a3b323031662520,0x662e6e722e616d66,0x3838316625203233,0x2c3131316625202c\n"
".quad 0x202c313131662520,0x6e0a3b3533316625,0x25203233662e6765,0x6625202c39383166\n"
".quad 0x616d660a3b383831,0x203233662e6e722e,0x25202c3039316625,0x6625202c37383166\n"
".quad 0x316625202c323031,0x2e6275730a3b3938,0x3931662520323366,0x3638316625202c31\n"
".quad 0x3b3039316625202c,0x3233662e6464610a,0x202c323931662520,0x336625202c336625\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x33326625202c3339,0x303830436630202c\n"
".quad 0x6625202c30303030,0x616d660a3b323931,0x203233662e6e722e,0x25202c3439316625\n"
".quad 0x436630202c393266,0x2c30303030303830,0x0a3b333931662520,0x203233662e646461\n"
".quad 0x25202c3539316625,0x3b346625202c3466,0x3233662e6464610a,0x202c363931662520\n"
".quad 0x25202c3439316625,0x64610a3b35393166,0x6625203233662e64,0x316625202c373931\n"
".quad 0x35336625202c3639,0x33662e6464610a3b,0x2c38393166252032,0x202c373931662520\n"
".quad 0x64610a3b31346625,0x6625203233662e64,0x316625202c393931,0x37346625202c3839\n"
".quad 0x33662e6464610a3b,0x2c30303266252032,0x202c393931662520,0x64610a3b33356625\n"
".quad 0x6625203233662e64,0x356625202c313032,0x610a3b356625202c,0x25203233662e6464\n"
".quad 0x6625202c32303266,0x326625202c303032,0x2e6464610a3b3130,0x3032662520323366\n"
".quad 0x3230326625202c33,0x0a3b31376625202c,0x662e6e722e616d66,0x3430326625203233\n"
".quad 0x30202c366625202c,0x3030303030304366,0x3330326625202c30,0x33662e6464610a3b\n"
".quad 0x2c35303266252032,0x202c343032662520,0x6d660a3b37376625,0x3233662e6e722e61\n"
".quad 0x202c363032662520,0x436630202c376625,0x2c30303030303030,0x0a3b353032662520\n"
".quad 0x203233662e646461,0x25202c3730326625,0x3b386625202c3866,0x3233662e6464610a\n"
".quad 0x202c383032662520,0x25202c3630326625,0x64610a3b37303266,0x6625203233662e64\n"
".quad 0x326625202c393032,0x39356625202c3830,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x2c396625202c3031,0x3030303043663020,0x326625202c303030,0x2e6464610a3b3930\n"
".quad 0x3132662520323366,0x3031326625202c31,0x0a3b35366625202c,0x662e6e722e616d66\n"
".quad 0x3231326625203233,0x2c3535346625202c,0x3030303043663020,0x326625202c303030\n"
".quad 0x2e6464610a3b3131,0x3132662520323366,0x202c336625202c33,0x6464610a3b346625\n"
".quad 0x326625203233662e,0x31326625202c3431,0x3b35336625202c33,0x3233662e6464610a\n"
".quad 0x202c353132662520,0x25202c3431326625,0x6464610a3b313466,0x326625203233662e\n"
".quad 0x31326625202c3631,0x3b37346625202c35,0x3233662e6464610a,0x202c373132662520\n"
".quad 0x25202c3631326625,0x6275730a3b333566,0x326625203233662e,0x31326625202c3831\n"
".quad 0x0a3b356625202c37,0x203233662e627573,0x25202c3931326625,0x6625202c38313266\n"
".quad 0x2e6275730a3b3137,0x3232662520323366,0x3931326625202c30,0x0a3b37376625202c\n"
".quad 0x203233662e627573,0x25202c3132326625,0x6625202c30323266,0x662e6275730a3b38\n"
".quad 0x3232326625203233,0x2c3132326625202c,0x730a3b3935662520,0x25203233662e6275\n"
".quad 0x6625202c33323266,0x366625202c323232,0x20636f6c2e0a3b35,0x3120353131342032\n"
".quad 0x3233662e67656e0a,0x202c343232662520,0x660a3b3032316625,0x33662e6e722e616d\n"
".quad 0x2c35323266252032,0x202c343232662520,0x25202c3032316625,0x75730a3b33333166\n"
".quad 0x6625203233662e62,0x326625202c363232,0x32326625202c3332,0x662e67656e0a3b35\n"
".quad 0x3732326625203233,0x3b3539316625202c,0x2e6e722e616d660a,0x3232662520323366\n"
".quad 0x202c336625202c38,0x25202c3837316625,0x64610a3b37323266,0x6625203233662e64\n"
".quad 0x326625202c393232,0x35336625202c3832,0x33662e6464610a3b,0x2c30333266252032\n"
".quad 0x202c393232662520,0x64610a3b31346625,0x6625203233662e64,0x326625202c313332\n"
".quad 0x37346625202c3033,0x33662e6464610a3b,0x2c32333266252032,0x202c313332662520\n"
".quad 0x64610a3b33356625,0x6625203233662e64,0x326625202c333332,0x30326625202c3233\n"
".quad 0x662e6275730a3b31,0x3433326625203233,0x2c3333326625202c,0x730a3b3137662520\n"
".quad 0x25203233662e6275,0x6625202c35333266,0x376625202c343332,0x20636f6c2e0a3b37\n"
".quad 0x3120353131342032,0x3233662e6464610a,0x202c363332662520,0x25202c3533326625\n"
".quad 0x75730a3b37303266,0x6625203233662e62,0x326625202c373332,0x39356625202c3633\n"
".quad 0x33662e6275730a3b,0x2c38333266252032,0x202c373332662520,0x75730a3b35366625\n"
".quad 0x6625203233662e62,0x336625202c393332,0x3b31346625202c35,0x203220636f6c2e0a\n"
".quad 0x610a312035313134,0x25203233662e6464,0x6625202c30343266,0x346625202c393332\n"
".quad 0x662e6275730a3b37,0x3134326625203233,0x2c3034326625202c,0x2e0a3b3335662520\n"
".quad 0x3134203220636f6c,0x67656e0a31203531,0x326625203233662e,0x30316625202c3234\n"
".quad 0x722e616d660a3b32,0x6625203233662e6e,0x326625202c333432,0x31316625202c3234\n"
".quad 0x3134326625202c31,0x33662e6275730a3b,0x2c34343266252032,0x6625202c36662520\n"
".quad 0x662e6275730a3b37,0x3534326625203233,0x2c3434326625202c,0x6c2e0a3b39662520\n"
".quad 0x313134203220636f,0x2e6464610a312035,0x3432662520323366,0x3534326625202c36\n"
".quad 0x3b3535346625202c,0x3233662e67656e0a,0x202c373432662520,0x660a3b3131316625\n"
".quad 0x33662e6e722e616d,0x2c38343266252032,0x202c373432662520,0x25202c3032316625\n"
".quad 0x75730a3b36343266,0x6625203233662e62,0x376625202c393432,0x3b37376625202c31\n"
".quad 0x3233662e6275730a,0x202c303532662520,0x25202c3934326625,0x6f6c2e0a3b393566\n"
".quad 0x3531313420322063,0x662e6464610a3120,0x3135326625203233,0x2c3035326625202c\n"
".quad 0x660a3b3536662520,0x33662e6e722e616d,0x2c32353266252032,0x202c323432662520\n"
".quad 0x25202c3032316625,0x75730a3b31353266,0x6625203233662e62,0x326625202c333532\n"
".quad 0x37346625202c3933,0x3220636f6c2e0a3b,0x0a31203531313420,0x203233662e646461\n"
".quad 0x25202c3435326625,0x6625202c33353266,0x2e6275730a3b3335,0x3532662520323366\n"
".quad 0x3435326625202c35,0x0a3b31376625202c,0x203233662e646461,0x25202c3635326625\n"
".quad 0x6625202c35353266,0x2e6275730a3b3737,0x3532662520323366,0x3635326625202c37\n"
".quad 0x0a3b39356625202c,0x34203220636f6c2e,0x64610a3120353131,0x6625203233662e64\n"
".quad 0x326625202c383532,0x35366625202c3735,0x33662e67656e0a3b,0x2c39353266252032\n"
".quad 0x730a3b3134662520,0x25203233662e6275,0x6625202c30363266,0x336625202c393532\n"
".quad 0x20636f6c2e0a3b35,0x3120353131342032,0x3233662e6464610a,0x202c313632662520\n"
".quad 0x25202c3036326625,0x6464610a3b373466,0x326625203233662e,0x36326625202c3236\n"
".quad 0x3b33356625202c31,0x3233662e6464610a,0x202c333632662520,0x25202c3236326625\n"
".quad 0x2e6275730a3b3666,0x3632662520323366,0x3336326625202c34,0x2e0a3b376625202c\n"
".quad 0x3134203220636f6c,0x6464610a31203531,0x326625203233662e,0x36326625202c3536\n"
".quad 0x0a3b396625202c34,0x203233662e627573,0x25202c3636326625,0x6625202c35363266\n"
".quad 0x6275730a3b353534,0x326625203233662e,0x31376625202c3736,0x2e0a3b366625202c\n"
".quad 0x3134203220636f6c,0x6464610a31203531,0x326625203233662e,0x36326625202c3836\n"
".quad 0x3b37376625202c37,0x3233662e6275730a,0x202c393632662520,0x25202c3836326625\n"
".quad 0x2e6275730a3b3766,0x3732662520323366,0x3936326625202c30,0x0a3b39356625202c\n"
".quad 0x34203220636f6c2e,0x64610a3120353131,0x6625203233662e64,0x326625202c313732\n"
".quad 0x3b396625202c3037,0x3233662e6275730a,0x202c323732662520,0x25202c3137326625\n"
".quad 0x6f6c2e0a3b353666,0x3531313420322063,0x662e6464610a3120,0x3337326625203233\n"
".quad 0x2c3237326625202c,0x0a3b353534662520,0x203233662e766f6d,0x30202c3437326625\n"
".quad 0x3030303038453366,0x61702e646c0a3b30,0x203233662e6d6172,0x5b202c3435346625\n"
".quad 0x5f74726d37315a5f,0x5f41426279685f64,0x5366506563726f66,0x535f535f536d665f\n"
".quad 0x6d617261705f695f,0x6f6c2e0a3b5d325f,0x3531313420322063,0x662e6c756d0a3120\n"
".quad 0x3537326625203233,0x2c3435346625202c,0x3030384533663020,0x766f6d0a3b303030\n"
".quad 0x326625203233662e,0x45336630202c3637,0x0a3b303030303030,0x34203220636f6c2e\n"
".quad 0x756d0a3120353131,0x6625203233662e6c,0x326625202c373732,0x44336630202c3833\n"
".quad 0x0a3b424141414132,0x203233662e766f6d,0x30202c3837326625,0x4141414132443366\n"
".quad 0x20636f6c2e0a3b42,0x3120353131342032,0x3233662e6c756d0a,0x202c393732662520\n"
".quad 0x30202c3435346625,0x4141414141443366,0x662e6c756d0a3b42,0x3038326625203233\n"
".quad 0x2c3231326625202c,0x3833364333663020,0x6c756d0a3b393345,0x326625203233662e\n"
".quad 0x35346625202c3138,0x4543336630202c34,0x6d0a3b3933453833,0x25203233662e6c75\n"
".quad 0x6625202c32383266,0x326625202c313931,0x2e6c756d0a3b3138,0x3832662520323366\n"
".quad 0x3036316625202c33,0x434343336630202c,0x6f6d0a3b44434343,0x6625203233662e76\n"
".quad 0x336630202c343832,0x3b44434343434343,0x203220636f6c2e0a,0x6d0a312035313134\n"
".quad 0x25203233662e6c75,0x6625202c35383266,0x336630202c333631,0x3b44434343434343\n"
".quad 0x3233662e6c756d0a,0x202c363832662520,0x30202c3636316625,0x4343434343433366\n"
".quad 0x662e6c756d0a3b44,0x3738326625203233,0x2c3735316625202c,0x3032384233663020\n"
".quad 0x6c756d0a3b313238,0x326625203233662e,0x38326625202c3838,0x3431346630202c37\n"
".quad 0x660a3b3030303030,0x33662e6e722e616d,0x2c39383266252032,0x202c373331662520\n"
".quad 0x4643333745426630,0x38326625202c4433,0x662e6275730a3b38,0x3039326625203233\n"
".quad 0x25202c326625202c,0x756d0a3b39383266,0x6625203233662e6c,0x326625202c313932\n"
".quad 0x30436630202c3738,0x0a3b303030303038,0x662e6e722e616d66,0x3239326625203233\n"
".quad 0x2c3733316625202c,0x4332424442663020,0x326625202c443242,0x2e616d660a3b3139\n"
".quad 0x25203233662e6e72,0x6625202c33393266,0x436630202c333832,0x2c30303030303830\n"
".quad 0x0a3b323932662520,0x662e6e722e616d66,0x3439326625203233,0x2c3139316625202c\n"
".quad 0x202c313832662520,0x610a3b3238326625,0x25203233662e6464,0x6625202c35393266\n"
".quad 0x326625202c333932,0x2e616d660a3b3439,0x25203233662e6e72,0x6625202c36393266\n"
".quad 0x436630202c303832,0x2c30303030303830,0x0a3b353932662520,0x203233662e627573\n"
".quad 0x25202c3739326625,0x326625202c333266,0x2e616d660a3b3639,0x25203233662e6e72\n"
".quad 0x6625202c38393266,0x436630202c353832,0x2c30303030303830,0x0a3b323932662520\n"
".quad 0x203233662e67656e,0x25202c3939326625,0x6d660a3b31393166,0x3233662e6e722e61\n"
".quad 0x202c303033662520,0x25202c3939326625,0x6625202c31383266,0x6f6c2e0a3b383932\n"
".quad 0x3531313420322063,0x722e616d660a3120,0x6625203233662e6e,0x326625202c313033\n"
".quad 0x43336630202c3231,0x202c393345383336,0x610a3b3038326625,0x25203233662e6464\n"
".quad 0x6625202c32303366,0x336625202c303033,0x2e616d660a3b3130,0x25203233662e6e72\n"
".quad 0x6625202c33303366,0x326625202c363232,0x30336625202c3937,0x722e616d660a3b32\n"
".quad 0x6625203233662e6e,0x326625202c343033,0x30436630202c3737,0x202c303030303030\n"
".quad 0x730a3b3330336625,0x25203233662e6275,0x6625202c35303366,0x3430336625202c33\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x38326625202c3630,0x3830346630202c33\n"
".quad 0x25202c3030303030,0x64610a3b32393266,0x6625203233662e64,0x336625202c373033\n"
".quad 0x39326625202c3630,0x722e616d660a3b34,0x6625203233662e6e,0x326625202c383033\n"
".quad 0x30436630202c3038,0x202c303030303038,0x730a3b3730336625,0x25203233662e6275\n"
".quad 0x6625202c39303366,0x30336625202c3932,0x722e616d660a3b38,0x6625203233662e6e\n"
".quad 0x326625202c303133,0x30346630202c3538,0x202c303030303038,0x660a3b3239326625\n"
".quad 0x33662e6e722e616d,0x2c31313366252032,0x202c393932662520,0x25202c3138326625\n"
".quad 0x6c2e0a3b30313366,0x313134203220636f,0x2e6464610a312035,0x3133662520323366\n"
".quad 0x3131336625202c32,0x3b3130336625202c,0x2e6e722e616d660a,0x3133662520323366\n"
".quad 0x3632326625202c33,0x2c3937326625202c,0x0a3b323133662520,0x662e6e722e616d66\n"
".quad 0x3431336625203233,0x2c3737326625202c,0x3030303043663020,0x336625202c303030\n"
".quad 0x2e6275730a3b3331,0x3133662520323366,0x202c346625202c35,0x660a3b3431336625\n"
".quad 0x33662e6e722e616d,0x2c36313366252032,0x202c373331662520,0x3830323844336630\n"
".quad 0x38326625202c3032,0x722e616d660a3b37,0x6625203233662e6e,0x316625202c373133\n"
".quad 0x43336630202c3036,0x202c444343434343,0x660a3b3631336625,0x33662e6e722e616d\n"
".quad 0x2c38313366252032,0x202c333631662520,0x4343434343336630,0x31336625202c4443\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x316625202c393133,0x38326625202c3139\n"
".quad 0x3831336625202c31,0x6e722e616d660a3b,0x336625203233662e,0x31326625202c3032\n"
".quad 0x3643336630202c32,0x25202c3933453833,0x6d660a3b39313366,0x3233662e6e722e61\n"
".quad 0x202c313233662520,0x25202c3632326625,0x6625202c39373266,0x616d660a3b303233\n"
".quad 0x203233662e6e722e,0x25202c3232336625,0x6630202c38333266,0x4241414141324433\n"
".quad 0x3b3132336625202c,0x2e6e722e616d660a,0x3233662520323366,0x3334326625202c33\n"
".quad 0x303845336630202c,0x6625202c30303030,0x616d660a3b323233,0x203233662e6e722e\n"
".quad 0x25202c3432336625,0x6630202c38353266,0x3030303030304533,0x3b3332336625202c\n"
".quad 0x3233662e67656e0a,0x202c353233662520,0x660a3b3636326625,0x33662e6e722e616d\n"
".quad 0x2c36323366252032,0x202c353233662520,0x25202c3637326625,0x6c2e0a3b34323366\n"
".quad 0x313134203220636f,0x2e6275730a312035,0x3233662520323366,0x2c35336625202c37\n"
".quad 0x0a3b363233662520,0x203233662e67656e,0x25202c3832336625,0x6d660a3b30363166\n"
".quad 0x3233662e6e722e61,0x202c393233662520,0x25202c3832336625,0x6625202c34383266\n"
".quad 0x6f6c2e0a3b363133,0x3531313420322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x316625202c303333,0x43336630202c3336,0x202c444343434343,0x660a3b3932336625\n"
".quad 0x33662e6e722e616d,0x2c31333366252032,0x202c313931662520,0x25202c3138326625\n"
".quad 0x6d660a3b30333366,0x3233662e6e722e61,0x202c323333662520,0x30202c3231326625\n"
".quad 0x3345383336433366,0x3133336625202c39,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x32326625202c3333,0x3937326625202c36,0x3b3233336625202c,0x2e6e722e616d660a\n"
".quad 0x3333662520323366,0x3833326625202c34,0x413244336630202c,0x6625202c42414141\n"
".quad 0x67656e0a3b333333,0x336625203233662e,0x34326625202c3533,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x336625202c363333,0x37326625202c3533,0x3433336625202c34\n"
".quad 0x33662e67656e0a3b,0x2c37333366252032,0x0a3b383532662520,0x662e6e722e616d66\n"
".quad 0x3833336625203233,0x2c3733336625202c,0x202c363732662520,0x660a3b3633336625\n"
".quad 0x33662e6e722e616d,0x2c39333366252032,0x202c353233662520,0x25202c3637326625\n"
".quad 0x6c2e0a3b38333366,0x313134203220636f,0x2e6275730a312035,0x3433662520323366\n"
".quad 0x2c31346625202c30,0x0a3b393333662520,0x203233662e67656e,0x25202c3134336625\n"
".quad 0x6d660a3b33363166,0x3233662e6e722e61,0x202c323433662520,0x25202c3134336625\n"
".quad 0x6625202c34383266,0x6f6c2e0a3b393233,0x3531313420322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x316625202c333433,0x38326625202c3139,0x3234336625202c31\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x31326625202c3434,0x3643336630202c32\n"
".quad 0x25202c3933453833,0x6d660a3b33343366,0x3233662e6e722e61,0x202c353433662520\n"
".quad 0x25202c3632326625,0x6625202c39373266,0x616d660a3b343433,0x203233662e6e722e\n"
".quad 0x25202c3634336625,0x6630202c38333266,0x4241414141324433,0x3b3534336625202c\n"
".quad 0x2e6e722e616d660a,0x3433662520323366,0x3334326625202c37,0x303845336630202c\n"
".quad 0x6625202c30303030,0x616d660a3b363433,0x203233662e6e722e,0x25202c3834336625\n"
".quad 0x6625202c37333366,0x336625202c363732,0x636f6c2e0a3b3734,0x2035313134203220\n"
".quad 0x6e722e616d660a31,0x336625203233662e,0x36326625202c3934,0x3045336630202c36\n"
".quad 0x25202c3030303030,0x75730a3b38343366,0x6625203233662e62,0x346625202c303533\n"
".quad 0x3934336625202c37,0x6e722e616d660a3b,0x336625203233662e,0x34336625202c3135\n"
".quad 0x3438326625202c31,0x3b3731336625202c,0x203220636f6c2e0a,0x660a312035313134\n"
".quad 0x33662e6e722e616d,0x2c32353366252032,0x202c313931662520,0x25202c3138326625\n"
".quad 0x6d660a3b31353366,0x3233662e6e722e61,0x202c333533662520,0x30202c3231326625\n"
".quad 0x3345383336433366,0x3235336625202c39,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x32326625202c3435,0x3937326625202c36,0x3b3335336625202c,0x2e6e722e616d660a\n"
".quad 0x3533662520323366,0x3833326625202c35,0x413244336630202c,0x6625202c42414141\n"
".quad 0x616d660a3b343533,0x203233662e6e722e,0x25202c3635336625,0x6625202c35333366\n"
".quad 0x336625202c343732,0x636f6c2e0a3b3535,0x2035313134203220,0x6e722e616d660a31\n"
".quad 0x336625203233662e,0x35326625202c3735,0x3045336630202c38,0x25202c3030303030\n"
".quad 0x6d660a3b36353366,0x3233662e6e722e61,0x202c383533662520,0x30202c3636326625\n"
".quad 0x3030303030453366,0x3735336625202c30,0x33662e6275730a3b,0x2c39353366252032\n"
".quad 0x25202c3335662520,0x6d660a3b38353366,0x3233662e6e722e61,0x202c303633662520\n"
".quad 0x30202c3638326625,0x3030303038304366,0x3239326625202c30,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x39326625202c3136,0x3138326625202c39,0x3b3036336625202c\n"
".quad 0x203220636f6c2e0a,0x610a312035313134,0x25203233662e6464,0x6625202c32363366\n"
".quad 0x336625202c313633,0x2e67656e0a3b3130,0x3633662520323366,0x3632326625202c33\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x36336625202c3436,0x3937326625202c33\n"
".quad 0x3b3236336625202c,0x203220636f6c2e0a,0x660a312035313134,0x33662e6e722e616d\n"
".quad 0x2c35363366252032,0x202c383332662520,0x4141413244336630,0x37326625202c4241\n"
".quad 0x662e6464610a3b37,0x3636336625203233,0x2c3436336625202c,0x0a3b353633662520\n"
".quad 0x203233662e627573,0x25202c3736336625,0x36336625202c3566,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x316625202c383633,0x43336630202c3636,0x202c444343434343\n"
".quad 0x660a3b3731336625,0x33662e6e722e616d,0x2c39363366252032,0x202c313931662520\n"
".quad 0x25202c3138326625,0x6d660a3b38363366,0x3233662e6e722e61,0x202c303733662520\n"
".quad 0x30202c3231326625,0x3345383336433366,0x3936336625202c39,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x36336625202c3137,0x3937326625202c33,0x3b3037336625202c\n"
".quad 0x3233662e67656e0a,0x202c323733662520,0x660a3b3833326625,0x33662e6e722e616d\n"
".quad 0x2c33373366252032,0x202c323733662520,0x25202c3837326625,0x6c2e0a3b31373366\n"
".quad 0x313134203220636f,0x2e616d660a312035,0x25203233662e6e72,0x6625202c34373366\n"
".quad 0x326625202c323532,0x37336625202c3537,0x722e616d660a3b33,0x6625203233662e6e\n"
".quad 0x336625202c353733,0x37326625202c3733,0x3437336625202c36,0x3220636f6c2e0a3b\n"
".quad 0x0a31203531313420,0x662e6e722e616d66,0x3637336625203233,0x2c3337326625202c\n"
".quad 0x3030304533663020,0x336625202c303030,0x2e6275730a3b3537,0x3733662520323366\n"
".quad 0x2c31376625202c37,0x0a3b363733662520,0x662e6e722e616d66,0x3837336625203233\n"
".quad 0x2c3336316625202c,0x4343434333663020,0x336625202c444343,0x2e616d660a3b3631\n"
".quad 0x25203233662e6e72,0x6625202c39373366,0x336630202c363631,0x2c44434343434343\n"
".quad 0x0a3b383733662520,0x662e6e722e616d66,0x3038336625203233,0x2c3238326625202c\n"
".quad 0x3030303043663020,0x336625202c303030,0x2e616d660a3b3937,0x25203233662e6e72\n"
".quad 0x6625202c31383366,0x436630202c303832,0x2c30303030303030,0x0a3b303833662520\n"
".quad 0x662e6e722e616d66,0x3238336625203233,0x2c3834326625202c,0x3030384533663020\n"
".quad 0x336625202c303030,0x2e616d660a3b3138,0x25203233662e6e72,0x6625202c33383366\n"
".quad 0x336630202c363632,0x2c30303030303045,0x0a3b323833662520,0x203233662e67656e\n"
".quad 0x25202c3438336625,0x6d660a3b33373266,0x3233662e6e722e61,0x202c353833662520\n"
".quad 0x25202c3438336625,0x6625202c36373266,0x6f6c2e0a3b333833,0x3531313420322063\n"
".quad 0x662e6275730a3120,0x3638336625203233,0x25202c366625202c,0x6d660a3b35383366\n"
".quad 0x3233662e6e722e61,0x202c373833662520,0x30202c3636316625,0x4343434343433366\n"
".quad 0x3932336625202c44,0x6e722e616d660a3b,0x336625203233662e,0x39316625202c3838\n"
".quad 0x3138326625202c31,0x3b3738336625202c,0x2e6e722e616d660a,0x3833662520323366\n"
".quad 0x3231326625202c39,0x333643336630202c,0x6625202c39334538,0x616d660a3b383833\n"
".quad 0x203233662e6e722e,0x25202c3039336625,0x6625202c33363366,0x336625202c393732\n"
".quad 0x2e616d660a3b3938,0x25203233662e6e72,0x6625202c31393366,0x326625202c323733\n"
".quad 0x39336625202c3837,0x662e67656e0a3b30,0x3239336625203233,0x3b3235326625202c\n"
".quad 0x2e6e722e616d660a,0x3933662520323366,0x3239336625202c33,0x2c3537326625202c\n"
".quad 0x0a3b313933662520,0x34203220636f6c2e,0x6d660a3120353131,0x3233662e6e722e61\n"
".quad 0x202c343933662520,0x30202c3835326625,0x3030303030453366,0x3339336625202c30\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x37326625202c3539,0x3045336630202c33\n"
".quad 0x25202c3030303030,0x75730a3b34393366,0x6625203233662e62,0x376625202c363933\n"
".quad 0x3539336625202c37,0x6e722e616d660a3b,0x336625203233662e,0x34336625202c3739\n"
".quad 0x3438326625202c31,0x3b3631336625202c,0x203220636f6c2e0a,0x660a312035313134\n"
".quad 0x33662e6e722e616d,0x2c38393366252032,0x202c363631662520,0x4343434343336630\n"
".quad 0x39336625202c4443,0x722e616d660a3b37,0x6625203233662e6e,0x326625202c393933\n"
".quad 0x30436630202c3238,0x202c303030303030,0x660a3b3839336625,0x33662e6e722e616d\n"
".quad 0x2c30303466252032,0x202c303832662520,0x3030303030436630,0x39336625202c3030\n"
".quad 0x662e67656e0a3b39,0x3130346625203233,0x3b3834326625202c,0x2e6e722e616d660a\n"
".quad 0x3034662520323366,0x3130346625202c32,0x2c3437326625202c,0x0a3b303034662520\n"
".quad 0x662e6e722e616d66,0x3330346625203233,0x2c3532336625202c,0x202c363732662520\n"
".quad 0x660a3b3230346625,0x33662e6e722e616d,0x2c34303466252032,0x202c343833662520\n"
".quad 0x25202c3637326625,0x6c2e0a3b33303466,0x313134203220636f,0x2e6275730a312035\n"
".quad 0x3034662520323366,0x202c376625202c35,0x660a3b3430346625,0x33662e6e722e616d\n"
".quad 0x2c36303466252032,0x202c363832662520,0x3030303830346630,0x39326625202c3030\n"
".quad 0x722e616d660a3b32,0x6625203233662e6e,0x326625202c373034,0x38326625202c3939\n"
".quad 0x3630346625202c31,0x3220636f6c2e0a3b,0x0a31203531313420,0x203233662e646461\n"
".quad 0x25202c3830346625,0x6625202c37303466,0x616d660a3b313033,0x203233662e6e722e\n"
".quad 0x25202c3930346625,0x6625202c33363366,0x346625202c393732,0x636f6c2e0a3b3830\n"
".quad 0x2035313134203220,0x33662e6464610a31,0x2c30313466252032,0x202c393034662520\n"
".quad 0x730a3b3536336625,0x25203233662e6275,0x6625202c31313466,0x3031346625202c38\n"
".quad 0x33662e67656e0a3b,0x2c32313466252032,0x0a3b363631662520,0x662e6e722e616d66\n"
".quad 0x3331346625203233,0x2c3231346625202c,0x202c343832662520,0x2e0a3b3731336625\n"
".quad 0x3134203220636f6c,0x616d660a31203531,0x203233662e6e722e,0x25202c3431346625\n"
".quad 0x6625202c31393166,0x346625202c313832,0x2e616d660a3b3331,0x25203233662e6e72\n"
".quad 0x6625202c35313466,0x336630202c323132,0x2c39334538333643,0x0a3b343134662520\n"
".quad 0x662e6e722e616d66,0x3631346625203233,0x2c3336336625202c,0x202c393732662520\n"
".quad 0x660a3b3531346625,0x33662e6e722e616d,0x2c37313466252032,0x202c323733662520\n"
".quad 0x25202c3837326625,0x6d660a3b36313466,0x3233662e6e722e61,0x202c383134662520\n"
".quad 0x25202c3239336625,0x6625202c35373266,0x616d660a3b373134,0x203233662e6e722e\n"
".quad 0x25202c3931346625,0x6625202c37333366,0x346625202c363732,0x2e616d660a3b3831\n"
".quad 0x25203233662e6e72,0x6625202c30323466,0x326625202c343833,0x31346625202c3637\n"
".quad 0x20636f6c2e0a3b39,0x3120353131342032,0x3233662e6275730a,0x202c313234662520\n"
".quad 0x6625202c39356625,0x616d660a3b303234,0x203233662e6e722e,0x25202c3232346625\n"
".quad 0x6625202c32313466,0x336625202c343832,0x636f6c2e0a3b3837,0x2035313134203220\n"
".quad 0x6e722e616d660a31,0x346625203233662e,0x38326625202c3332,0x3030436630202c32\n"
".quad 0x25202c3030303030,0x6d660a3b32323466,0x3233662e6e722e61,0x202c343234662520\n"
".quad 0x30202c3038326625,0x3030303030304366,0x3332346625202c30,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x30346625202c3532,0x3437326625202c31,0x3b3432346625202c\n"
".quad 0x203220636f6c2e0a,0x660a312035313134,0x33662e6e722e616d,0x2c36323466252032\n"
".quad 0x202c363632662520,0x3030303045336630,0x32346625202c3030,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x326625202c373234,0x45336630202c3337,0x202c303030303030\n"
".quad 0x730a3b3632346625,0x25203233662e6275,0x6625202c38323466,0x3732346625202c39\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x31346625202c3932,0x3438326625202c32\n"
".quad 0x3b3932336625202c,0x203220636f6c2e0a,0x660a312035313134,0x33662e6e722e616d\n"
".quad 0x2c30333466252032,0x202c313931662520,0x25202c3138326625,0x6d660a3b39323466\n"
".quad 0x3233662e6e722e61,0x202c313334662520,0x30202c3231326625,0x3345383336433366\n"
".quad 0x3033346625202c39,0x6e722e616d660a3b,0x346625203233662e,0x36336625202c3233\n"
".quad 0x3937326625202c33,0x3b3133346625202c,0x2e6e722e616d660a,0x3334662520323366\n"
".quad 0x3237336625202c33,0x2c3837326625202c,0x0a3b323334662520,0x34203220636f6c2e\n"
".quad 0x6d660a3120353131,0x3233662e6e722e61,0x202c343334662520,0x25202c3235326625\n"
".quad 0x6625202c35373266,0x616d660a3b333334,0x203233662e6e722e,0x25202c3533346625\n"
".quad 0x6630202c38353266,0x3030303030304533,0x3b3433346625202c,0x2e6e722e616d660a\n"
".quad 0x3334662520323366,0x3438336625202c36,0x2c3637326625202c,0x0a3b353334662520\n"
".quad 0x34203220636f6c2e,0x75730a3120353131,0x6625203233662e62,0x366625202c373334\n"
".quad 0x3633346625202c35,0x6e722e616d660a3b,0x346625203233662e,0x31346625202c3833\n"
".quad 0x3438326625202c32,0x3b3739336625202c,0x203220636f6c2e0a,0x660a312035313134\n"
".quad 0x33662e6e722e616d,0x2c39333466252032,0x202c323832662520,0x3030303030436630\n"
".quad 0x33346625202c3030,0x722e616d660a3b38,0x6625203233662e6e,0x326625202c303434\n"
".quad 0x30436630202c3038,0x202c303030303030,0x660a3b3933346625,0x33662e6e722e616d\n"
".quad 0x2c31343466252032,0x202c383432662520,0x3030303845336630,0x34346625202c3030\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x336625202c323434,0x37326625202c3532\n"
".quad 0x3134346625202c36,0x3220636f6c2e0a3b,0x0a31203531313420,0x662e6e722e616d66\n"
".quad 0x3334346625203233,0x2c3337326625202c,0x3030304533663020,0x346625202c303030\n"
".quad 0x2e6275730a3b3234,0x3434662520323366,0x3535346625202c34,0x3b3334346625202c\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3134326c,0x645f74726d37315a\n"
".quad 0x665f41426279685f,0x5f5366506563726f,0x5f535f535f536d66,0x5f6d617261705f69\n"
".quad 0x636f6c2e0a3b5d33,0x2038393933203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x316c7225202c3938,0x34326c7225202c30,0x3b356c7225202c31,0x617261702e646c0a\n"
".quad 0x7225203436752e6d,0x5f5b202c3933326c,0x645f74726d37315a,0x665f41426279685f\n"
".quad 0x5f5366506563726f,0x5f535f535f536d66,0x5f6d617261705f69,0x617476630a3b5d31\n"
".quad 0x626f6c672e6f742e,0x25203436752e6c61,0x7225202c30396c72,0x68730a3b3933326c\n"
".quad 0x7225203436622e6c,0x6c7225202c31396c,0x0a3b3233202c3938,0x203436732e726873\n"
".quad 0x25202c32396c7225,0x3233202c31396c72,0x3220636f6c2e0a3b,0x0a31203032313420\n"
".quad 0x203436622e6c6873,0x25202c33396c7225,0x3b32202c32396c72,0x3436732e6464610a\n"
".quad 0x202c34396c722520,0x25202c30396c7225,0x74730a3b33396c72,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x326625202c5d3439,0x2e6464610a3b3039,0x396c722520343673\n"
".quad 0x30316c7225202c35,0x0a3b36393034202c,0x34203220636f6c2e,0x616d0a3120313231\n"
".quad 0x3436732e6f6c2e64,0x202c36396c722520,0x25202c35396c7225,0x25202c3134326c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x396c7225202c3739,0x730a3b3233202c36\n"
".quad 0x25203436732e7268,0x7225202c38396c72,0x3b3233202c37396c,0x203220636f6c2e0a\n"
".quad 0x730a312031323134,0x25203436622e6c68,0x7225202c39396c72,0x0a3b32202c38396c\n"
".quad 0x203436732e646461,0x202c3030316c7225,0x25202c30396c7225,0x74730a3b39396c72\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d303031,0x6464610a3b373932\n"
".quad 0x6c7225203436732e,0x6c7225202c313031,0x32393138202c3031,0x3220636f6c2e0a3b\n"
".quad 0x0a31203232313420,0x732e6f6c2e64616d,0x30316c7225203436,0x30316c7225202c32\n"
".quad 0x34326c7225202c31,0x3b356c7225202c31,0x3436622e6c68730a,0x2c3330316c722520\n"
".quad 0x2c3230316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c343031\n"
".quad 0x3b3233202c333031,0x203220636f6c2e0a,0x730a312032323134,0x25203436622e6c68\n"
".quad 0x25202c3530316c72,0x32202c3430316c72,0x36732e6464610a3b,0x3630316c72252034\n"
".quad 0x2c30396c7225202c,0x3b3530316c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3630316c7225,0x0a3b353033662520,0x203436732e646461,0x202c3730316c7225\n"
".quad 0x31202c30316c7225,0x6c2e0a3b38383232,0x323134203220636f,0x2e64616d0a312033\n"
".quad 0x25203436732e6f6c,0x25202c3830316c72,0x25202c3730316c72,0x25202c3134326c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c393031,0x3b3233202c383031\n"
".quad 0x3436732e7268730a,0x2c3031316c722520,0x2c3930316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3332313420322063,0x622e6c68730a3120,0x31316c7225203436,0x31316c7225202c31\n"
".quad 0x64610a3b32202c30,0x7225203436732e64,0x7225202c3231316c,0x6c7225202c30396c\n"
".quad 0x2e74730a3b313131,0x662e6c61626f6c67,0x316c72255b203233,0x336625202c5d3231\n"
".quad 0x2e6464610a3b3930,0x316c722520343673,0x316c7225202c3331,0x3438333631202c30\n"
".quad 0x3220636f6c2e0a3b,0x0a31203432313420,0x732e6f6c2e64616d,0x31316c7225203436\n"
".quad 0x31316c7225202c34,0x34326c7225202c33,0x3b356c7225202c31,0x3436622e6c68730a\n"
".quad 0x2c3531316c722520,0x2c3431316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c363131,0x3b3233202c353131,0x203220636f6c2e0a,0x730a312034323134\n"
".quad 0x25203436622e6c68,0x25202c3731316c72,0x32202c3631316c72,0x36732e6464610a3b\n"
".quad 0x3831316c72252034,0x2c30396c7225202c,0x3b3731316c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3831316c7225,0x0a3b353133662520,0x203436732e646461\n"
".quad 0x202c3931316c7225,0x32202c30316c7225,0x6c2e0a3b30383430,0x323134203220636f\n"
".quad 0x2e64616d0a312035,0x25203436732e6f6c,0x25202c3032316c72,0x25202c3931316c72\n"
".quad 0x25202c3134326c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c313231\n"
".quad 0x3b3233202c303231,0x3436732e7268730a,0x2c3232316c722520,0x2c3132316c722520\n"
".quad 0x6f6c2e0a3b323320,0x3532313420322063,0x622e6c68730a3120,0x32316c7225203436\n"
".quad 0x32316c7225202c33,0x64610a3b32202c32,0x7225203436732e64,0x7225202c3432316c\n"
".quad 0x6c7225202c30396c,0x2e74730a3b333231,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x336625202c5d3432,0x2e6464610a3b3732,0x316c722520343673,0x316c7225202c3532\n"
".quad 0x3637353432202c30,0x3220636f6c2e0a3b,0x0a31203632313420,0x732e6f6c2e64616d\n"
".quad 0x32316c7225203436,0x32316c7225202c36,0x34326c7225202c35,0x3b356c7225202c31\n"
".quad 0x3436622e6c68730a,0x2c3732316c722520,0x2c3632316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c383231,0x3b3233202c373231,0x203220636f6c2e0a\n"
".quad 0x730a312036323134,0x25203436622e6c68,0x25202c3932316c72,0x32202c3832316c72\n"
".quad 0x36732e6464610a3b,0x3033316c72252034,0x2c30396c7225202c,0x3b3932316c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3033316c7225,0x0a3b303433662520\n"
".quad 0x203436732e646461,0x202c3133316c7225,0x32202c30316c7225,0x6c2e0a3b32373638\n"
".quad 0x323134203220636f,0x2e64616d0a312037,0x25203436732e6f6c,0x25202c3233316c72\n"
".quad 0x25202c3133316c72,0x25202c3134326c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c333331,0x3b3233202c323331,0x3436732e7268730a,0x2c3433316c722520\n"
".quad 0x2c3333316c722520,0x6f6c2e0a3b323320,0x3732313420322063,0x622e6c68730a3120\n"
".quad 0x33316c7225203436,0x33316c7225202c35,0x64610a3b32202c34,0x7225203436732e64\n"
".quad 0x7225202c3633316c,0x6c7225202c30396c,0x2e74730a3b353331,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x336625202c5d3633,0x2e6464610a3b3035,0x316c722520343673\n"
".quad 0x316c7225202c3733,0x3836373233202c30,0x3220636f6c2e0a3b,0x0a31203832313420\n"
".quad 0x732e6f6c2e64616d,0x33316c7225203436,0x33316c7225202c38,0x34326c7225202c37\n"
".quad 0x3b356c7225202c31,0x3436622e6c68730a,0x2c3933316c722520,0x2c3833316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c303431,0x3b3233202c393331\n"
".quad 0x203220636f6c2e0a,0x730a312038323134,0x25203436622e6c68,0x25202c3134316c72\n"
".quad 0x32202c3034316c72,0x36732e6464610a3b,0x3234316c72252034,0x2c30396c7225202c\n"
".quad 0x3b3134316c722520,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3234316c7225\n"
".quad 0x0a3b393533662520,0x203436732e646461,0x202c3334316c7225,0x33202c30316c7225\n"
".quad 0x6c2e0a3b34363836,0x323134203220636f,0x2e64616d0a312039,0x25203436732e6f6c\n"
".quad 0x25202c3434316c72,0x25202c3334316c72,0x25202c3134326c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c353431,0x3b3233202c343431,0x3436732e7268730a\n"
".quad 0x2c3634316c722520,0x2c3534316c722520,0x6f6c2e0a3b323320,0x3932313420322063\n"
".quad 0x622e6c68730a3120,0x34316c7225203436,0x34316c7225202c37,0x64610a3b32202c36\n"
".quad 0x7225203436732e64,0x7225202c3834316c,0x6c7225202c30396c,0x2e74730a3b373431\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x336625202c5d3834,0x2e6464610a3b3736\n"
".quad 0x316c722520343673,0x316c7225202c3934,0x3036393034202c30,0x3220636f6c2e0a3b\n"
".quad 0x0a31203033313420,0x732e6f6c2e64616d,0x35316c7225203436,0x34316c7225202c30\n"
".quad 0x34326c7225202c39,0x3b356c7225202c31,0x3436622e6c68730a,0x2c3135316c722520\n"
".quad 0x2c3035316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c323531\n"
".quad 0x3b3233202c313531,0x203220636f6c2e0a,0x730a312030333134,0x25203436622e6c68\n"
".quad 0x25202c3335316c72,0x32202c3235316c72,0x36732e6464610a3b,0x3435316c72252034\n"
".quad 0x2c30396c7225202c,0x3b3335316c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3435316c7225,0x0a3b373733662520,0x203436732e646461,0x202c3535316c7225\n"
".quad 0x34202c30316c7225,0x6c2e0a3b36353035,0x333134203220636f,0x2e64616d0a312031\n"
".quad 0x25203436732e6f6c,0x25202c3635316c72,0x25202c3535316c72,0x25202c3134326c72\n"
".quad 0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c373531,0x3b3233202c363531\n"
".quad 0x3436732e7268730a,0x2c3835316c722520,0x2c3735316c722520,0x6f6c2e0a3b323320\n"
".quad 0x3133313420322063,0x622e6c68730a3120,0x35316c7225203436,0x35316c7225202c39\n"
".quad 0x64610a3b32202c38,0x7225203436732e64,0x7225202c3036316c,0x6c7225202c30396c\n"
".quad 0x2e74730a3b393531,0x662e6c61626f6c67,0x316c72255b203233,0x336625202c5d3036\n"
".quad 0x2e6464610a3b3638,0x316c722520343673,0x316c7225202c3136,0x3235313934202c30\n"
".quad 0x3220636f6c2e0a3b,0x0a31203233313420,0x732e6f6c2e64616d,0x36316c7225203436\n"
".quad 0x36316c7225202c32,0x34326c7225202c31,0x3b356c7225202c31,0x3436622e6c68730a\n"
".quad 0x2c3336316c722520,0x2c3236316c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c343631,0x3b3233202c333631,0x203220636f6c2e0a,0x730a312032333134\n"
".quad 0x25203436622e6c68,0x25202c3536316c72,0x32202c3436316c72,0x36732e6464610a3b\n"
".quad 0x3636316c72252034,0x2c30396c7225202c,0x3b3536316c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3636316c7225,0x0a3b363933662520,0x203436732e646461\n"
".quad 0x202c3736316c7225,0x35202c30316c7225,0x6c2e0a3b38343233,0x333134203220636f\n"
".quad 0x2e64616d0a312033,0x25203436732e6f6c,0x25202c3836316c72,0x25202c3736316c72\n"
".quad 0x25202c3134326c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c393631\n"
".quad 0x3b3233202c383631,0x3436732e7268730a,0x2c3037316c722520,0x2c3936316c722520\n"
".quad 0x6f6c2e0a3b323320,0x3333313420322063,0x622e6c68730a3120,0x37316c7225203436\n"
".quad 0x37316c7225202c31,0x64610a3b32202c30,0x7225203436732e64,0x7225202c3237316c\n"
".quad 0x6c7225202c30396c,0x2e74730a3b313731,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x346625202c5d3237,0x2e6464610a3b3530,0x316c722520343673,0x316c7225202c3337\n"
".quad 0x3434333735202c30,0x3220636f6c2e0a3b,0x0a31203433313420,0x732e6f6c2e64616d\n"
".quad 0x37316c7225203436,0x37316c7225202c34,0x34326c7225202c33,0x3b356c7225202c31\n"
".quad 0x3436622e6c68730a,0x2c3537316c722520,0x2c3437316c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c363731,0x3b3233202c353731,0x203220636f6c2e0a\n"
".quad 0x730a312034333134,0x25203436622e6c68,0x25202c3737316c72,0x32202c3637316c72\n"
".quad 0x36732e6464610a3b,0x3837316c72252034,0x2c30396c7225202c,0x3b3737316c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3837316c7225,0x0a3b313134662520\n"
".quad 0x203436732e646461,0x202c3937316c7225,0x36202c30316c7225,0x6c2e0a3b30343431\n"
".quad 0x333134203220636f,0x2e64616d0a312035,0x25203436732e6f6c,0x25202c3038316c72\n"
".quad 0x25202c3937316c72,0x25202c3134326c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c313831,0x3b3233202c303831,0x3436732e7268730a,0x2c3238316c722520\n"
".quad 0x2c3138316c722520,0x6f6c2e0a3b323320,0x3533313420322063,0x622e6c68730a3120\n"
".quad 0x38316c7225203436,0x38316c7225202c33,0x64610a3b32202c32,0x7225203436732e64\n"
".quad 0x7225202c3438316c,0x6c7225202c30396c,0x2e74730a3b333831,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x346625202c5d3438,0x2e6464610a3b3132,0x316c722520343673\n"
".quad 0x316c7225202c3538,0x3633353536202c30,0x3220636f6c2e0a3b,0x0a31203633313420\n"
".quad 0x732e6f6c2e64616d,0x38316c7225203436,0x38316c7225202c36,0x34326c7225202c35\n"
".quad 0x3b356c7225202c31,0x3436622e6c68730a,0x2c3738316c722520,0x2c3638316c722520\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c383831,0x3b3233202c373831\n"
".quad 0x203220636f6c2e0a,0x730a312036333134,0x25203436622e6c68,0x25202c3938316c72\n"
".quad 0x32202c3838316c72,0x36732e6464610a3b,0x3039316c72252034,0x2c30396c7225202c\n"
".quad 0x3b3938316c722520,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3039316c7225\n"
".quad 0x0a3b383234662520,0x203436732e646461,0x202c3139316c7225,0x36202c30316c7225\n"
".quad 0x6c2e0a3b32333639,0x333134203220636f,0x2e64616d0a312037,0x25203436732e6f6c\n"
".quad 0x25202c3239316c72,0x25202c3139316c72,0x25202c3134326c72,0x6c68730a3b356c72\n"
".quad 0x6c7225203436622e,0x6c7225202c333931,0x3b3233202c323931,0x3436732e7268730a\n"
".quad 0x2c3439316c722520,0x2c3339316c722520,0x6f6c2e0a3b323320,0x3733313420322063\n"
".quad 0x622e6c68730a3120,0x39316c7225203436,0x39316c7225202c35,0x64610a3b32202c34\n"
".quad 0x7225203436732e64,0x7225202c3639316c,0x6c7225202c30396c,0x2e74730a3b353931\n"
".quad 0x662e6c61626f6c67,0x316c72255b203233,0x346625202c5d3639,0x2e6464610a3b3733\n"
".quad 0x316c722520343673,0x316c7225202c3739,0x3832373337202c30,0x3220636f6c2e0a3b\n"
".quad 0x0a31203833313420,0x732e6f6c2e64616d,0x39316c7225203436,0x39316c7225202c38\n"
".quad 0x34326c7225202c37,0x3b356c7225202c31,0x3436622e6c68730a,0x2c3939316c722520\n"
".quad 0x2c3839316c722520,0x7268730a3b323320,0x6c7225203436732e,0x6c7225202c303032\n"
".quad 0x3b3233202c393931,0x203220636f6c2e0a,0x730a312038333134,0x25203436622e6c68\n"
".quad 0x25202c3130326c72,0x32202c3030326c72,0x36732e6464610a3b,0x3230326c72252034\n"
".quad 0x2c30396c7225202c,0x3b3130326c722520,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3230326c7225,0x0a3b343434662520,0x20696e752e617262,0x0a3b355f32334242\n"
".quad 0x3a345f323342420a,0x617261702e646c0a,0x7225203436752e6d,0x5f5b202c3034326c\n"
".quad 0x645f74726d37315a,0x665f41426279685f,0x5f5366506563726f,0x5f535f535f536d66\n"
".quad 0x5f6d617261705f69,0x2e6c68730a3b5d33,0x326c722520343662,0x326c7225202c3330\n"
".quad 0x0a3b3231202c3034,0x34203220636f6c2e,0x64610a3120303530,0x7225203436732e64\n"
".quad 0x7225202c3430326c,0x326c7225202c396c,0x702e646c0a3b3330,0x3436752e6d617261\n"
".quad 0x2c3833326c722520,0x726d37315a5f5b20,0x426279685f645f74,0x506563726f665f41\n"
".quad 0x535f536d665f5366,0x7261705f695f535f,0x630a3b5d315f6d61,0x672e6f742e617476\n"
".quad 0x36752e6c61626f6c,0x3530326c72252034,0x3833326c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203035303420,0x203436622e6c6873,0x202c3630326c7225,0x202c3430326c7225\n"
".quad 0x732e6464610a3b32,0x30326c7225203436,0x30326c7225202c37,0x30326c7225202c35\n"
".quad 0x6c672e74730a3b36,0x3233662e6c61626f,0x3730326c72255b20,0x3b39326625202c5d\n"
".quad 0x3436622e6c68730a,0x2c3830326c722520,0x2c3034326c722520,0x6464610a3b343120\n"
".quad 0x6c7225203436732e,0x6c7225202c393032,0x6c7225202c373032,0x6f6c2e0a3b383032\n"
".quad 0x3135303420322063,0x6c672e74730a3120,0x3233662e6c61626f,0x3930326c72255b20\n"
".quad 0x0a3b346625202c5d,0x203436732e646461,0x202c3031326c7225,0x202c3930326c7225\n"
".quad 0x0a3b3830326c7225,0x34203220636f6c2e,0x74730a3120323530,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d303132,0x2e6464610a3b3332,0x326c722520343673\n"
".quad 0x326c7225202c3131,0x326c7225202c3031,0x636f6c2e0a3b3830,0x2033353034203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3131326c72255b,0x610a3b336625202c\n"
".quad 0x25203436732e6464,0x25202c3231326c72,0x25202c3131326c72,0x2e0a3b3830326c72\n"
".quad 0x3034203220636f6c,0x2e74730a31203435,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x346625202c5d3231,0x732e6464610a3b37,0x31326c7225203436,0x31326c7225202c33\n"
".quad 0x30326c7225202c32,0x20636f6c2e0a3b38,0x3120353530342032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3331326c7225,0x610a3b3335662520,0x25203436732e6464\n"
".quad 0x25202c3431326c72,0x25202c3331326c72,0x2e0a3b3830326c72,0x3034203220636f6c\n"
".quad 0x2e74730a31203635,0x662e6c61626f6c67,0x326c72255b203233,0x336625202c5d3431\n"
".quad 0x732e6464610a3b35,0x31326c7225203436,0x31326c7225202c35,0x30326c7225202c34\n"
".quad 0x20636f6c2e0a3b38,0x3120373530342032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3531326c7225,0x610a3b3134662520,0x25203436732e6464,0x25202c3631326c72\n"
".quad 0x25202c3531326c72,0x2e0a3b3830326c72,0x3034203220636f6c,0x2e74730a31203835\n"
".quad 0x662e6c61626f6c67,0x326c72255b203233,0x386625202c5d3631,0x36732e6464610a3b\n"
".quad 0x3731326c72252034,0x3631326c7225202c,0x3830326c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203935303420,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3731326c72\n"
".quad 0x64610a3b35366625,0x7225203436732e64,0x7225202c3831326c,0x7225202c3731326c\n"
".quad 0x6c2e0a3b3830326c,0x363034203220636f,0x672e74730a312030,0x33662e6c61626f6c\n"
".quad 0x31326c72255b2032,0x35346625202c5d38,0x732e6464610a3b35,0x31326c7225203436\n"
".quad 0x31326c7225202c39,0x30326c7225202c38,0x20636f6c2e0a3b38,0x3120313630342032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3931326c7225,0x610a3b3935662520\n"
".quad 0x25203436732e6464,0x25202c3032326c72,0x25202c3931326c72,0x2e0a3b3830326c72\n"
".quad 0x3034203220636f6c,0x2e74730a31203236,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x396625202c5d3032,0x36732e6464610a3b,0x3132326c72252034,0x3032326c7225202c\n"
".quad 0x3830326c7225202c,0x3220636f6c2e0a3b,0x0a31203336303420,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3132326c72,0x6464610a3b356625,0x6c7225203436732e\n"
".quad 0x6c7225202c323232,0x6c7225202c313232,0x6f6c2e0a3b383032,0x3436303420322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3232326c72255b20,0x3b37376625202c5d\n"
".quad 0x3436732e6464610a,0x2c3332326c722520,0x2c3232326c722520,0x3b3830326c722520\n"
".quad 0x203220636f6c2e0a,0x730a312035363034,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3332326c,0x2e6464610a3b3766,0x326c722520343673,0x326c7225202c3432\n"
".quad 0x326c7225202c3332,0x636f6c2e0a3b3830,0x2036363034203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x5d3432326c72255b,0x0a3b31376625202c,0x203436732e646461\n"
".quad 0x202c3532326c7225,0x202c3432326c7225,0x0a3b3830326c7225,0x34203220636f6c2e\n"
".quad 0x74730a3120373630,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d353232\n"
".quad 0x323342420a0a3b36,0x636f6c2e0a3a355f,0x2031343134203220,0x79732e7261620a31\n"
".quad 0x6c2e0a3b3020636e,0x343134203220636f,0x732e646c0a312032,0x33752e6465726168\n"
".quad 0x2c31323172252032,0x616475635f5f5b20,0x765f6c61636f6c5f,0x34303838335f7261\n"
".quad 0x5f6e6f6e5f30335f,0x68635f74736e6f63,0x65730a3b5d6b6365,0x33732e71652e7074\n"
".quad 0x202c313170252032,0x31202c3132317225,0x7261702e646c0a3b,0x25203233752e6d61\n"
".quad 0x5f5b202c34333172,0x645f74726d37315a,0x665f41426279685f,0x5f5366506563726f\n"
".quad 0x5f535f535f536d66,0x5f6d617261705f69,0x707465730a3b5d37,0x203233732e74672e\n"
".quad 0x7225202c32317025,0x393939202c343331,0x702e646e610a3b39,0x3331702520646572\n"
".quad 0x202c31317025202c,0x6c2e0a3b32317025,0x393933203220636f,0x2e766f6d0a312035\n"
".quad 0x3331722520323375,0x6469746e25202c35,0x636f6c2e0a3b782e,0x2035343134203220\n"
".quad 0x672e707465730a31,0x7025203233732e74,0x33317225202c3431,0x6e610a3b31202c35\n"
".quad 0x2520646572702e64,0x317025202c353170,0x3b34317025202c33,0x203220636f6c2e0a\n"
".quad 0x400a312032343134,0x7262203531702521,0x395f323342422061,0x5f323342420a0a3b\n"
".quad 0x20636f6c2e0a3a36,0x3120363431342032,0x3233732e7268730a,0x202c373331722520\n"
".quad 0x31202c3733317225,0x3220636f6c2e0a3b,0x0a31203734313420,0x2e65672e70746573\n"
".quad 0x3631702520323375,0x202c31317225202c,0x400a3b3733317225,0x6172622036317025\n"
".quad 0x3b385f3233424220,0x3220636f6c2e0a0a,0x0a31203834313420,0x203233732e646461\n"
".quad 0x25202c3432317225,0x317225202c313172,0x2e6c756d0a3b3733,0x3233752e65646977\n"
".quad 0x2c3632326c722520,0x202c343231722520,0x732e6464610a3b34,0x32326c7225203436\n"
".quad 0x39376c7225202c38,0x3632326c7225202c,0x69772e6c756d0a3b,0x25203233752e6564\n"
".quad 0x25202c3932326c72,0x0a3b34202c313172,0x203436732e646461,0x202c3033326c7225\n"
".quad 0x25202c39376c7225,0x2e0a3b3932326c72,0x3134203220636f6c,0x2e646c0a31203834\n"
".quad 0x662e646572616873,0x3534346625203233,0x33326c72255b202c,0x732e646c0a3b5d30\n"
".quad 0x33662e6465726168,0x2c36343466252032,0x3832326c72255b20,0x662e6464610a3b5d\n"
".quad 0x3734346625203233,0x2c3534346625202c,0x0a3b363434662520,0x65726168732e7473\n"
".quad 0x255b203233662e64,0x202c5d3033326c72,0x610a3b3734346625,0x25203436732e6464\n"
".quad 0x25202c3233326c72,0x7225202c31386c72,0x64610a3b3632326c,0x7225203436732e64\n"
".quad 0x7225202c3333326c,0x6c7225202c31386c,0x6f6c2e0a3b393232,0x3934313420322063\n"
".quad 0x68732e646c0a3120,0x3233662e64657261,0x202c383434662520,0x5d3333326c72255b\n"
".quad 0x6168732e646c0a3b,0x203233662e646572,0x5b202c3934346625,0x3b5d3233326c7225\n"
".quad 0x3233662e6464610a,0x202c303534662520,0x25202c3834346625,0x74730a3b39343466\n"
".quad 0x2e6465726168732e,0x6c72255b20323366,0x6625202c5d333332,0x6464610a3b303534\n"
".quad 0x6c7225203436732e,0x6c7225202c353332,0x326c7225202c3338,0x2e6464610a3b3632\n"
".quad 0x326c722520343673,0x386c7225202c3633,0x32326c7225202c33,0x20636f6c2e0a3b39\n"
".quad 0x3120303531342032,0x726168732e646c0a,0x25203233662e6465,0x255b202c31353466\n"
".quad 0x0a3b5d3633326c72,0x65726168732e646c,0x6625203233662e64,0x72255b202c323534\n"
".quad 0x610a3b5d3533326c,0x25203233662e6464,0x6625202c33353466,0x346625202c313534\n"
".quad 0x732e74730a3b3235,0x33662e6465726168,0x33326c72255b2032,0x35346625202c5d36\n"
".quad 0x323342420a0a3b33,0x636f6c2e0a3a385f,0x2032353134203220,0x79732e7261620a31\n"
".quad 0x6c2e0a3b3020636e,0x343134203220636f,0x707465730a312035,0x203233732e74672e\n"
".quad 0x7225202c37317025,0x0a3b31202c373331,0x7262203731702540,0x365f323342422061\n"
".quad 0x5f323342420a0a3b,0x0a3b7465720a3a39,0x72746e652e0a0a7d,0x726d31315a5f2079\n"
".quad 0x416279685f645f74,0x286d665f53665042,0x206d617261702e0a,0x315a5f203436752e\n"
".quad 0x685f645f74726d31,0x5f53665042416279,0x6d617261705f6d66,0x7261702e0a2c305f\n"
".quad 0x203436752e206d61,0x5f74726d31315a5f,0x5042416279685f64,0x61705f6d665f5366\n"
".quad 0x2e0a2c315f6d6172,0x662e206d61726170,0x6d31315a5f203233,0x6279685f645f7472\n"
".quad 0x6d665f5366504241,0x325f6d617261705f,0x6d617261702e0a2c,0x5a5f203436752e20\n"
".quad 0x5f645f74726d3131,0x5366504241627968,0x617261705f6d665f,0x0a7b0a290a335f6d\n"
".quad 0x33662e206765722e,0x3239353c66252032,0x206765722e0a3b3e,0x702520646572702e\n"
".quad 0x722e0a3b3e37313c,0x203233732e206765,0x3b3e3332313c7225,0x732e206765722e0a\n"
".quad 0x323c6c7225203436,0x6c0a0a0a3b3e3732,0x2e6d617261702e64,0x376c722520343675\n"
".quad 0x6d31315a5f5b202c,0x6279685f645f7472,0x6d665f5366504241,0x305f6d617261705f\n"
".quad 0x61702e646c0a3b5d,0x203436752e6d6172,0x5f5b202c326c7225,0x645f74726d31315a\n"
".quad 0x665042416279685f,0x7261705f6d665f53,0x630a3b5d335f6d61,0x672e6f742e617476\n"
".quad 0x36752e6c61626f6c,0x202c336c72252034,0x6c2e0a3b376c7225,0x363134203220636f\n"
".quad 0x2e766f6d0a312039,0x2c38722520323375,0x782e6469746e2520,0x33752e766f6d0a3b\n"
".quad 0x25202c3972252032,0x3b782e6469617463,0x3233752e766f6d0a,0x25202c3031722520\n"
".quad 0x6d0a3b782e646974,0x33732e6f6c2e6461,0x25202c3172252032,0x2c397225202c3872\n"
".quad 0x2e0a3b3031722520,0x3134203220636f6c,0x766f6d0a31203037,0x317225203233752e\n"
".quad 0x6469746e25202c31,0x2e766f6d0a3b792e,0x3231722520323375,0x646961746325202c\n"
".quad 0x2e766f6d0a3b792e,0x3331722520323375,0x792e64697425202c,0x6f6c2e64616d0a3b\n"
".quad 0x327225203233732e,0x202c31317225202c,0x7225202c32317225,0x636f6c2e0a3b3331\n"
".quad 0x2031373134203220,0x33752e766f6d0a31,0x202c343172252032,0x3b7a2e6469746e25\n"
".quad 0x3233752e766f6d0a,0x25202c3531722520,0x3b7a2e6469617463,0x3233752e766f6d0a\n"
".quad 0x25202c3631722520,0x6d0a3b7a2e646974,0x33732e6f6c2e6461,0x202c373172252032\n"
".quad 0x7225202c34317225,0x36317225202c3531,0x36752e7476630a3b,0x7225203233752e34\n"
".quad 0x3b317225202c346c,0x203220636f6c2e0a,0x630a312032373134,0x732e3436732e7476\n"
".quad 0x2c386c7225203233,0x68730a3b32722520,0x7225203233622e6c,0x37317225202c3831\n"
".quad 0x6f6c2e0a3b36202c,0x3237313420322063,0x732e7476630a3120,0x25203233732e3436\n"
".quad 0x317225202c396c72,0x732e6464610a3b38,0x30316c7225203436,0x202c396c7225202c\n"
".quad 0x6c2e0a3b386c7225,0x373134203220636f,0x2e64616d0a312032,0x25203436732e6f6c\n"
".quad 0x7225202c31316c72,0x6c7225202c30316c,0x3b346c7225202c32,0x3436622e6c68730a\n"
".quad 0x202c32316c722520,0x33202c31316c7225,0x732e7268730a3b32,0x33316c7225203436\n"
".quad 0x2c32316c7225202c,0x6f6c2e0a3b323320,0x3838313420322063,0x622e6c68730a3120\n"
".quad 0x34316c7225203436,0x2c33316c7225202c,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x2c336c7225202c35,0x0a3b34316c722520,0x61626f6c672e646c,0x6625203233662e6c\n"
".quad 0x316c72255b202c32,0x2e6464610a3b5d35,0x2c33722520323373,0x312d202c32722520\n"
".quad 0x3220636f6c2e0a3b,0x0a31203938313420,0x2e3436732e747663,0x316c722520323373\n"
".quad 0x0a3b337225202c36,0x203436732e646461,0x25202c37316c7225,0x7225202c36316c72\n"
".quad 0x2e6464610a3b396c,0x316c722520343673,0x37316c7225202c38,0x0a3b32393138202c\n"
".quad 0x34203220636f6c2e,0x616d0a3120393831,0x3436732e6f6c2e64,0x202c39316c722520\n"
".quad 0x25202c38316c7225,0x6c7225202c326c72,0x622e6c68730a3b34,0x30326c7225203436\n"
".quad 0x2c39316c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x326c7225202c3132\n"
".quad 0x2e0a3b3233202c30,0x3134203220636f6c,0x6c68730a31203938,0x6c7225203436622e\n"
".quad 0x326c7225202c3232,0x64610a3b32202c31,0x7225203436732e64,0x6c7225202c33326c\n"
".quad 0x32326c7225202c33,0x6f6c672e646c0a3b,0x203233662e6c6162,0x5b202c3738356625\n"
".quad 0x0a3b5d33326c7225,0x34203220636f6c2e,0x64610a3120303931,0x7225203233732e64\n"
".quad 0x202c327225202c34,0x732e7476630a3b31,0x25203233732e3436,0x347225202c356c72\n"
".quad 0x36732e6464610a3b,0x2c34326c72252034,0x25202c356c722520,0x6464610a3b396c72\n"
".quad 0x6c7225203436732e,0x326c7225202c3532,0x3438333631202c34,0x3220636f6c2e0a3b\n"
".quad 0x0a31203039313420,0x732e6f6c2e64616d,0x36326c7225203436,0x2c35326c7225202c\n"
".quad 0x25202c326c722520,0x6c68730a3b346c72,0x6c7225203436622e,0x326c7225202c3732\n"
".quad 0x730a3b3233202c36,0x25203436732e7268,0x7225202c38326c72,0x3b3233202c37326c\n"
".quad 0x203220636f6c2e0a,0x730a312030393134,0x25203436622e6c68,0x7225202c39326c72\n"
".quad 0x0a3b32202c38326c,0x203436732e646461,0x25202c30336c7225,0x6c7225202c336c72\n"
".quad 0x672e646c0a3b3932,0x33662e6c61626f6c,0x2c38383566252032,0x5d30336c72255b20\n"
".quad 0x33732e6464610a3b,0x25202c3572252032,0x34362d202c383172,0x3220636f6c2e0a3b\n"
".quad 0x0a31203139313420,0x2e3436732e747663,0x336c722520323373,0x0a3b357225202c31\n"
".quad 0x203436732e646461,0x25202c32336c7225,0x6c7225202c386c72,0x2e6464610a3b3133\n"
".quad 0x336c722520343673,0x32336c7225202c33,0x3b3436383633202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312031393134,0x36732e6f6c2e6461,0x2c34336c72252034,0x202c33336c722520\n"
".quad 0x7225202c326c7225,0x2e6c68730a3b346c,0x336c722520343662,0x34336c7225202c35\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c36336c,0x0a3b3233202c3533\n"
".quad 0x34203220636f6c2e,0x68730a3120313931,0x7225203436622e6c,0x6c7225202c37336c\n"
".quad 0x610a3b32202c3633,0x25203436732e6464,0x7225202c38336c72,0x336c7225202c336c\n"
".quad 0x6c672e646c0a3b37,0x3233662e6c61626f,0x202c313635662520,0x3b5d38336c72255b\n"
".quad 0x3436732e6464610a,0x202c39336c722520,0x25202c36316c7225,0x64610a3b31336c72\n"
".quad 0x7225203436732e64,0x6c7225202c30346c,0x35303534202c3933,0x20636f6c2e0a3b36\n"
".quad 0x3120323931342032,0x2e6f6c2e64616d0a,0x346c722520343673,0x30346c7225202c31\n"
".quad 0x202c326c7225202c,0x68730a3b346c7225,0x7225203436622e6c,0x6c7225202c32346c\n"
".quad 0x0a3b3233202c3134,0x203436732e726873,0x25202c33346c7225,0x3233202c32346c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203239313420,0x203436622e6c6873,0x25202c34346c7225\n"
".quad 0x3b32202c33346c72,0x3436732e6464610a,0x202c35346c722520,0x7225202c336c7225\n"
".quad 0x2e646c0a3b34346c,0x662e6c61626f6c67,0x3933356625203233,0x35346c72255b202c\n"
".quad 0x732e6464610a3b5d,0x36346c7225203436,0x202c356c7225202c,0x610a3b31336c7225\n"
".quad 0x25203436732e6464,0x7225202c37346c72,0x323335202c36346c,0x636f6c2e0a3b3834\n"
".quad 0x2033393134203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x346c7225202c3834\n"
".quad 0x2c326c7225202c37,0x730a3b346c722520,0x25203436622e6c68,0x7225202c39346c72\n"
".quad 0x3b3233202c38346c,0x3436732e7268730a,0x202c30356c722520,0x33202c39346c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120333931342032,0x3436622e6c68730a,0x202c31356c722520\n"
".quad 0x32202c30356c7225,0x36732e6464610a3b,0x2c32356c72252034,0x25202c336c722520\n"
".quad 0x646c0a3b31356c72,0x2e6c61626f6c672e,0x3435662520323366,0x356c72255b202c30\n"
".quad 0x2e6464610a3b5d32,0x2c36722520323373,0x36202c3831722520,0x20636f6c2e0a3b34\n"
".quad 0x3120343931342032,0x3436732e7476630a,0x6c7225203233732e,0x0a3b367225202c36\n"
".quad 0x203436732e646461,0x25202c33356c7225,0x6c7225202c386c72,0x732e6464610a3b36\n"
".quad 0x34356c7225203436,0x2c33356c7225202c,0x0a3b343433373520,0x34203220636f6c2e\n"
".quad 0x616d0a3120343931,0x3436732e6f6c2e64,0x202c35356c722520,0x25202c34356c7225\n"
".quad 0x6c7225202c326c72,0x622e6c68730a3b34,0x36356c7225203436,0x2c35356c7225202c\n"
".quad 0x7268730a3b323320,0x6c7225203436732e,0x356c7225202c3735,0x2e0a3b3233202c36\n"
".quad 0x3134203220636f6c,0x6c68730a31203439,0x6c7225203436622e,0x356c7225202c3835\n"
".quad 0x64610a3b32202c37,0x7225203436732e64,0x6c7225202c39356c,0x38356c7225202c33\n"
".quad 0x6f6c672e646c0a3b,0x203233662e6c6162,0x5b202c3236356625,0x0a3b5d39356c7225\n"
".quad 0x203436732e646461,0x25202c30366c7225,0x7225202c36316c72,0x2e6464610a3b366c\n"
".quad 0x366c722520343673,0x30366c7225202c31,0x3b3633353536202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312035393134,0x36732e6f6c2e6461,0x2c32366c72252034,0x202c31366c722520\n"
".quad 0x7225202c326c7225,0x2e6c68730a3b346c,0x366c722520343662,0x32366c7225202c33\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c34366c,0x0a3b3233202c3336\n"
".quad 0x34203220636f6c2e,0x68730a3120353931,0x7225203436622e6c,0x6c7225202c35366c\n"
".quad 0x610a3b32202c3436,0x25203436732e6464,0x7225202c36366c72,0x366c7225202c336c\n"
".quad 0x6c672e646c0a3b35,0x3233662e6c61626f,0x202c313435662520,0x3b5d36366c72255b\n"
".quad 0x203220636f6c2e0a,0x730a312037393134,0x732e71652e707465,0x202c317025203233\n"
".quad 0x3336202c37317225,0x6220317025400a3b,0x5f33334242206172,0x2e6464610a0a3b32\n"
".quad 0x366c722520343673,0x2c356c7225202c37,0x610a3b366c722520,0x25203436732e6464\n"
".quad 0x7225202c38366c72,0x373337202c37366c,0x702e646c0a3b3832,0x3436752e6d617261\n"
".quad 0x2c3632326c722520,0x726d31315a5f5b20,0x416279685f645f74,0x5f6d665f53665042\n"
".quad 0x5d335f6d61726170,0x3220636f6c2e0a3b,0x0a31203839313420,0x732e6f6c2e64616d\n"
".quad 0x39366c7225203436,0x2c38366c7225202c,0x2c3632326c722520,0x730a3b346c722520\n"
".quad 0x25203436622e6c68,0x7225202c30376c72,0x3b3233202c39366c,0x3436732e7268730a\n"
".quad 0x202c31376c722520,0x33202c30376c7225,0x20636f6c2e0a3b32,0x3120383931342032\n"
".quad 0x3436622e6c68730a,0x202c32376c722520,0x32202c31376c7225,0x36732e6464610a3b\n"
".quad 0x2c33376c72252034,0x25202c336c722520,0x646c0a3b32376c72,0x2e6c61626f6c672e\n"
".quad 0x3435662520323366,0x376c72255b202c39,0x3342420a0a3b5d33,0x766f6d0a3a325f33\n"
".quad 0x356625203233662e,0x34356625202c3234,0x732e6464610a3b39,0x2c38327225203233\n"
".quad 0x312d202c31722520,0x3220636f6c2e0a3b,0x0a31203030323420,0x662e6e722e747663\n"
".quad 0x25203233732e3233,0x7225202c31323166,0x2e6464610a3b3832,0x3131662520323366\n"
".quad 0x3132316625202c33,0x303046336630202c,0x76630a3b30303030,0x3233662e6e722e74\n"
".quad 0x316625203233732e,0x3b327225202c3232,0x3233662e6464610a,0x202c333231662520\n"
".quad 0x30202c3232316625,0x3030303030463366,0x722e7476630a3b30,0x33732e3233662e6e\n"
".quad 0x2c34323166252032,0x610a3b3831722520,0x25203233662e6464,0x316625202c323766\n"
".quad 0x32316625202c3332,0x752e766f6d0a3b34,0x3232317225203233,0x74090a0a3b30202c\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x202c313666257b20,0x6625202c32366625\n"
".quad 0x34366625202c3336,0x527865745b202c7d,0x202c4131665f6665,0x202c33313166257b\n"
".quad 0x0a3b5d7d32376625,0x3220636f6c2e090a,0x0a31203130323420,0x203233732e646461\n"
".quad 0x7225202c35337225,0x76630a3b31202c31,0x3233662e6e722e74,0x316625203233732e\n"
".quad 0x35337225202c3532,0x33662e6464610a3b,0x2c39313166252032,0x202c353231662520\n"
".quad 0x3030303046336630,0x6574090a0a3b3030,0x2e34762e64322e78,0x203233662e323366\n"
".quad 0x25202c373666257b,0x366625202c383666,0x7d30376625202c39,0x65527865745b202c\n"
".quad 0x7b202c4133665f66,0x25202c3931316625,0x0a0a3b5d7d323766,0x203220636f6c2e09\n"
".quad 0x630a312032303234,0x33662e6e722e7476,0x6625203233732e32,0x337225202c363231\n"
".quad 0x33662e6464610a3b,0x2c37323166252032,0x202c363231662520,0x3030303046336630\n"
".quad 0x2e6464610a3b3030,0x3438662520323366,0x2c3732316625202c,0x0a3b343231662520\n"
".quad 0x64322e786574090a,0x2e3233662e34762e,0x3766257b20323366,0x2c34376625202c33\n"
".quad 0x25202c3537662520,0x745b202c7d363766,0x35665f6665527865,0x313166257b202c41\n"
".quad 0x7d34386625202c33,0x74090a090a0a3b5d,0x34762e64322e7865,0x3233662e3233662e\n"
".quad 0x202c393766257b20,0x6625202c30386625,0x32386625202c3138,0x527865745b202c7d\n"
".quad 0x202c4136665f6665,0x202c39313166257b,0x0a3b5d7d34386625,0x3220636f6c2e090a\n"
".quad 0x0a31203430323420,0x662e6e722e747663,0x25203233732e3233,0x7225202c38323166\n"
".quad 0x662e6464610a3b34,0x3932316625203233,0x2c3832316625202c,0x3030304633663020\n"
".quad 0x6464610a3b303030,0x396625203233662e,0x3932316625202c36,0x3b3432316625202c\n"
".quad 0x322e786574090a0a,0x3233662e34762e64,0x66257b203233662e,0x36386625202c3538\n"
".quad 0x202c37386625202c,0x5b202c7d38386625,0x665f666552786574,0x3166257b202c4137\n"
".quad 0x36396625202c3931,0x090a090a0a3b5d7d,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x2c313966257b2032,0x25202c3239662520,0x396625202c333966,0x7865745b202c7d34\n"
".quad 0x2c4138665f666552,0x2c33313166257b20,0x3b5d7d3639662520,0x20636f6c2e090a0a\n"
".quad 0x3120363032342032,0x2e6e722e7476630a,0x203233732e323366,0x25202c3033316625\n"
".quad 0x2e6464610a3b3672,0x3031662520323366,0x3332316625202c38,0x3b3033316625202c\n"
".quad 0x322e786574090a0a,0x3233662e34762e64,0x66257b203233662e,0x38396625202c3739\n"
".quad 0x202c39396625202c,0x202c7d3030316625,0x5f6665527865745b,0x257b202c41353166\n"
".quad 0x6625202c33313166,0x0a0a3b5d7d383031,0x322e786574090a09,0x3233662e34762e64\n"
".quad 0x66257b203233662e,0x316625202c333031,0x30316625202c3430,0x3630316625202c35\n"
".quad 0x527865745b202c7d,0x2c413731665f6665,0x2c39313166257b20,0x5d7d383031662520\n"
".quad 0x636f6c2e090a0a3b,0x2038303234203220,0x6e722e7476630a31,0x3233732e3233662e\n"
".quad 0x202c313331662520,0x6464610a3b357225,0x316625203233662e,0x32316625202c3032\n"
".quad 0x3133316625202c33,0x2e786574090a0a3b,0x33662e34762e6432,0x257b203233662e32\n"
".quad 0x6625202c39303166,0x316625202c303131,0x31316625202c3131,0x7865745b202c7d32\n"
".quad 0x413031665f666552,0x33313166257b202c,0x7d3032316625202c,0x74090a090a0a3b5d\n"
".quad 0x34762e64322e7865,0x3233662e3233662e,0x2c35313166257b20,0x202c363131662520\n"
".quad 0x25202c3731316625,0x5b202c7d38313166,0x665f666552786574,0x66257b202c413231\n"
".quad 0x316625202c393131,0x090a0a3b5d7d3032,0x31203220636f6c2e,0x7465730a31203431\n"
".quad 0x3233732e71652e70,0x7225202c32702520,0x65730a3b30202c32,0x33732e71652e7074\n"
".quad 0x25202c3370252032,0x0a3b3336202c3172,0x20646572702e726f,0x337025202c347025\n"
".quad 0x2e0a3b327025202c,0x3131203220636f6c,0x707465730a312034,0x203233732e71652e\n"
".quad 0x327225202c357025,0x726f0a3b3336202c,0x702520646572702e,0x202c347025202c36\n"
".quad 0x6f6c2e0a3b357025,0x2034313120322063,0x652e707465730a31,0x7025203233732e71\n"
".quad 0x2c37317225202c37,0x702e726f0a3b3020,0x2c38702520646572,0x7025202c36702520\n"
".quad 0x72702e726f0a3b37,0x202c397025206465,0x317025202c387025,0x3220636f6c2e0a3b\n"
".quad 0x0a31203930323420,0x203233662e766f6d,0x25202c3630356625,0x6c2e0a3b35313166\n"
".quad 0x303234203220636f,0x2e766f6d0a312038,0x3535662520323366,0x3930316625202c32\n"
".quad 0x3220636f6c2e0a3b,0x0a31203730323420,0x203233662e766f6d,0x25202c3730356625\n"
".quad 0x6c2e0a3b33303166,0x303234203220636f,0x2e766f6d0a312036,0x3934662520323366\n"
".quad 0x3b37396625202c37,0x203220636f6c2e0a,0x6d0a312035303234,0x25203233662e766f\n"
".quad 0x6625202c35363566,0x636f6c2e0a3b3139,0x2034303234203220,0x33662e766f6d0a31\n"
".quad 0x2c35373566252032,0x2e0a3b3538662520,0x3234203220636f6c,0x766f6d0a31203330\n"
".quad 0x356625203233662e,0x39376625202c3437,0x3220636f6c2e0a3b,0x0a31203230323420\n"
".quad 0x203233662e766f6d,0x25202c3837356625,0x6f6c2e0a3b333766,0x3030323420322063\n"
".quad 0x662e766f6d0a3120,0x3139356625203233,0x0a3b31366625202c,0x31203220636f6c2e\n"
".quad 0x7025400a31203431,0x4242206172622039,0x2e0a0a3b355f3333,0x3131203220636f6c\n"
".quad 0x707465730a312036,0x203233732e71652e,0x7225202c30317025,0x25400a3b30202c31\n"
".quad 0x2061726220303170,0x0a3b345f33334242,0x20696e752e617262,0x0a3b365f33334242\n"
".quad 0x3a345f333342420a,0x3233752e766f6d0a,0x202c323231722520,0x752e6172620a3b33\n"
".quad 0x5f3333424220696e,0x333342420a0a3b36,0x2e766f6d0a3a355f,0x3231722520323375\n"
".quad 0x420a0a3b31202c32,0x2e0a3a365f333342,0x3234203220636f6c,0x7465730a31203331\n"
".quad 0x3233732e71652e70,0x25202c3131702520,0x3b31202c32323172,0x622031317025400a\n"
".quad 0x5f33334242206172,0x6f6c2e0a0a3b3032,0x3139323420322063,0x2e707465730a3120\n"
".quad 0x25203233732e7165,0x317225202c323170,0x400a3b33202c3232,0x6172622032317025\n"
".quad 0x3b385f3333424220,0x696e752e6172620a,0x39315f3333424220,0x5f333342420a0a3b\n"
".quad 0x20636f6c2e0a3a38,0x0a31203633312032,0x6172622032702540,0x32315f3333424220\n"
".quad 0x20636f6c2e0a0a3b,0x0a31203234312032,0x6172622035702540,0x31315f3333424220\n"
".quad 0x662e766f6d0a0a3b,0x3834356625203233,0x3b3234356625202c,0x3233662e766f6d0a\n"
".quad 0x202c373435662520,0x6d0a3b3134356625,0x25203233662e766f,0x6625202c31353566\n"
".quad 0x766f6d0a3b303435,0x356625203233662e,0x33356625202c3035,0x662e766f6d0a3b39\n"
".quad 0x3737356625203233,0x3b3537356625202c,0x3233662e766f6d0a,0x202c363735662520\n"
".quad 0x6d0a3b3437356625,0x25203233662e766f,0x6625202c30393566,0x766f6d0a3b383835\n"
".quad 0x356625203233662e,0x38356625202c3938,0x752e6172620a3b37,0x5f3333424220696e\n"
".quad 0x3342420a0a3b3331,0x6f6d0a3a31315f33,0x6625203233662e76,0x356625202c373435\n"
".quad 0x2e766f6d0a3b3134,0x3435662520323366,0x3134356625202c38,0x33662e766f6d0a3b\n"
".quad 0x2c30353566252032,0x0a3b393335662520,0x203233662e766f6d,0x25202c3135356625\n"
".quad 0x6f6d0a3b39333566,0x6625203233662e76,0x356625202c363735,0x2e766f6d0a3b3437\n"
".quad 0x3735662520323366,0x3437356625202c37,0x33662e766f6d0a3b,0x2c39383566252032\n"
".quad 0x0a3b373835662520,0x203233662e766f6d,0x25202c3039356625,0x72620a3b37383566\n"
".quad 0x424220696e752e61,0x0a0a3b33315f3333,0x3a32315f33334242,0x3233662e766f6d0a\n"
".quad 0x202c373435662520,0x6d0a3b3234356625,0x25203233662e766f,0x6625202c38343566\n"
".quad 0x766f6d0a3b323435,0x356625203233662e,0x34356625202c3035,0x662e766f6d0a3b30\n"
".quad 0x3135356625203233,0x3b3034356625202c,0x3233662e766f6d0a,0x202c363735662520\n"
".quad 0x6d0a3b3537356625,0x25203233662e766f,0x6625202c37373566,0x766f6d0a3b353735\n"
".quad 0x356625203233662e,0x38356625202c3938,0x662e766f6d0a3b38,0x3039356625203233\n"
".quad 0x3b3838356625202c,0x315f333342420a0a,0x662e766f6d0a3a33,0x3838356625203233\n"
".quad 0x3b3039356625202c,0x3233662e766f6d0a,0x202c373835662520,0x6d0a3b3938356625\n"
".quad 0x25203233662e766f,0x6625202c35373566,0x766f6d0a3b373735,0x356625203233662e\n"
".quad 0x37356625202c3437,0x662e766f6d0a3b36,0x2c34326625203233,0x0a3b313535662520\n"
".quad 0x203233662e766f6d,0x6625202c35326625,0x766f6d0a3b303535,0x326625203233662e\n"
".quad 0x3834356625202c32,0x33662e766f6d0a3b,0x202c333266252032,0x2e0a3b3734356625\n"
".quad 0x3431203220636f6c,0x377025400a312038,0x3342422061726220,0x2e0a0a3b37315f33\n"
".quad 0x3531203220636f6c,0x317025400a312035,0x3342422061726220,0x6d0a0a3b36315f33\n"
".quad 0x25203233662e766f,0x6625202c39303566,0x766f6d0a3b373035,0x356625203233662e\n"
".quad 0x30356625202c3830,0x662e766f6d0a3b36,0x3534356625203233,0x0a3b33326625202c\n"
".quad 0x203233662e766f6d,0x25202c3634356625,0x766f6d0a3b323266,0x356625203233662e\n"
".quad 0x35326625202c3334,0x33662e766f6d0a3b,0x2c34343566252032,0x6d0a3b3432662520\n"
".quad 0x25203233662e766f,0x6625202c34363566,0x766f6d0a3b323635,0x356625203233662e\n"
".quad 0x36356625202c3336,0x752e6172620a3b31,0x5f3333424220696e,0x3342420a0a3b3831\n"
".quad 0x6f6d0a3a36315f33,0x6625203233662e76,0x356625202c383035,0x2e766f6d0a3b3630\n"
".quad 0x3035662520323366,0x3630356625202c39,0x33662e766f6d0a3b,0x2c35343566252032\n"
".quad 0x6d0a3b3532662520,0x25203233662e766f,0x6625202c36343566,0x2e766f6d0a3b3432\n"
".quad 0x3435662520323366,0x3b35326625202c33,0x3233662e766f6d0a,0x202c343435662520\n"
".quad 0x6f6d0a3b34326625,0x6625203233662e76,0x356625202c333635,0x2e766f6d0a3b3136\n"
".quad 0x3635662520323366,0x3136356625202c34,0x6e752e6172620a3b,0x315f333342422069\n"
".quad 0x333342420a0a3b38,0x766f6d0a3a37315f,0x356625203233662e,0x30356625202c3830\n"
".quad 0x662e766f6d0a3b37,0x3930356625203233,0x3b3730356625202c,0x3233662e766f6d0a\n"
".quad 0x202c353435662520,0x6f6d0a3b33326625,0x6625203233662e76,0x326625202c363435\n"
".quad 0x662e766f6d0a3b32,0x3334356625203233,0x0a3b33326625202c,0x203233662e766f6d\n"
".quad 0x25202c3434356625,0x766f6d0a3b323266,0x356625203233662e,0x36356625202c3336\n"
".quad 0x662e766f6d0a3b32,0x3436356625203233,0x3b3236356625202c,0x315f333342420a0a\n"
".quad 0x662e766f6d0a3a38,0x3236356625203233,0x3b3436356625202c,0x3233662e766f6d0a\n"
".quad 0x202c313635662520,0x6d0a3b3336356625,0x25203233662e766f,0x6625202c32343566\n"
".quad 0x766f6d0a3b363435,0x356625203233662e,0x34356625202c3134,0x662e766f6d0a3b35\n"
".quad 0x3034356625203233,0x3b3434356625202c,0x3233662e766f6d0a,0x202c393335662520\n"
".quad 0x6d0a3b3334356625,0x25203233662e766f,0x6625202c37303566,0x766f6d0a3b393035\n"
".quad 0x356625203233662e,0x30356625202c3630,0x662e766f6d0a3b38,0x3233316625203233\n"
".quad 0x304330346630202c,0x6c2e0a3b30303030,0x393631203220636f,0x662e6c756d0a3120\n"
".quad 0x3333316625203233,0x2c3233316625202c,0x3030303030663020,0x766f6d0a3b303030\n"
".quad 0x316625203233662e,0x30306630202c3433,0x0a3b303030303030,0x203233662e766f6d\n"
".quad 0x30202c3533316625,0x3345383336443366,0x20636f6c2e0a3b39,0x0a35203035362033\n"
".quad 0x662e6e722e616d66,0x3139356625203233,0x2c3533316625202c,0x202c333331662520\n"
".quad 0x6c2e0a3b37366625,0x303731203220636f,0x662e6464610a3120,0x3633316625203233\n"
".quad 0x2c3433316625202c,0x4433414433663020,0x6c756d0a3b413037,0x316625203233662e\n"
".quad 0x33316625202c3733,0x4330346630202c36,0x6d0a3b3030303030,0x25203233662e766f\n"
".quad 0x6630202c38333166,0x3933453833454333,0x3320636f6c2e0a3b,0x660a352030353620\n"
".quad 0x33662e6e722e616d,0x2c38373566252032,0x202c383331662520,0x25202c3733316625\n"
".quad 0x6c2e0a3b35373566,0x313731203220636f,0x662e6275730a3120,0x3933316625203233\n"
".quad 0x2c3433316625202c,0x4433414433663020,0x6c756d0a3b413037,0x316625203233662e\n"
".quad 0x33316625202c3034,0x4330346630202c39,0x2e0a3b3030303030,0x3536203320636f6c\n"
".quad 0x2e616d660a352030,0x25203233662e6e72,0x6625202c35363566,0x316625202c383331\n"
".quad 0x37356625202c3034,0x20636f6c2e0a3b34,0x0a31203237312032,0x203233662e646461\n"
".quad 0x25202c3134316625,0x6630202c34333166,0x3030303030303030,0x33662e6c756d0a3b\n"
".quad 0x2c32343166252032,0x202c313431662520,0x3030304330346630,0x636f6c2e0a3b3030\n"
".quad 0x3520303536203320,0x2e6e722e616d660a,0x3535662520323366,0x3833316625202c32\n"
".quad 0x2c3234316625202c,0x0a3b373035662520,0x31203220636f6c2e,0x6275730a31203337\n"
".quad 0x316625203233662e,0x33316625202c3334,0x3030306630202c34,0x6d0a3b3030303030\n"
".quad 0x25203233662e6c75,0x6625202c34343166,0x346630202c333431,0x3b30303030304330\n"
".quad 0x203320636f6c2e0a,0x6d660a3520303536,0x3233662e6e722e61,0x202c373934662520\n"
".quad 0x25202c3833316625,0x6625202c34343166,0x42420a0a3b363035,0x2e0a3a39315f3333\n"
".quad 0x3234203220636f6c,0x6275730a31203539,0x316625203233662e,0x39356625202c3534\n"
".quad 0x3b37366625202c31,0x3233662e6464610a,0x202c363431662520,0x25202c3534316625\n"
".quad 0x75730a3b38373566,0x6625203233662e62,0x316625202c373431,0x37356625202c3634\n"
".quad 0x662e6275730a3b34,0x3834316625203233,0x2c3734316625202c,0x0a3b353735662520\n"
".quad 0x203233662e646461,0x25202c3934316625,0x6625202c38343166,0x6464610a3b353635\n"
".quad 0x316625203233662e,0x34316625202c3035,0x3235356625202c39,0x33662e6275730a3b\n"
".quad 0x2c31353166252032,0x202c303531662520,0x610a3b3630356625,0x25203233662e6464\n"
".quad 0x6625202c32353166,0x346625202c313531,0x2e6275730a3b3739,0x3531662520323366\n"
".quad 0x3235316625202c33,0x3b3730356625202c,0x3233662e6275730a,0x202c343531662520\n"
".quad 0x25202c3738356625,0x64610a3b38383566,0x6625203233662e64,0x316625202c353531\n"
".quad 0x37356625202c3435,0x662e6464610a3b38,0x3635316625203233,0x2c3535316625202c\n"
".quad 0x0a3b343735662520,0x203233662e627573,0x25202c3735316625,0x6625202c36353166\n"
".quad 0x6275730a3b353735,0x316625203233662e,0x35316625202c3835,0x3536356625202c37\n"
".quad 0x33662e6464610a3b,0x2c39353166252032,0x202c383531662520,0x730a3b3933356625\n"
".quad 0x25203233662e6275,0x6625202c30363166,0x356625202c393531,0x2e6464610a3b3034\n"
".quad 0x3631662520323366,0x3036316625202c31,0x3b3134356625202c,0x3233662e6275730a\n"
".quad 0x202c323631662520,0x25202c3136316625,0x64610a3b32343566,0x6625203233662e64\n"
".quad 0x356625202c333631,0x35356625202c3136,0x662e6464610a3b32,0x3436316625203233\n"
".quad 0x2c3336316625202c,0x0a3b393335662520,0x203233662e646461,0x25202c3536316625\n"
".quad 0x6625202c34363166,0x6464610a3b363035,0x316625203233662e,0x36316625202c3636\n"
".quad 0x3034356625202c35,0x33662e6275730a3b,0x2c37363166252032,0x202c363631662520\n"
".quad 0x730a3b3236356625,0x25203233662e6275,0x6625202c38363166,0x346625202c373631\n"
".quad 0x2e6275730a3b3739,0x3631662520323366,0x3836316625202c39,0x3b3134356625202c\n"
".quad 0x3233662e6275730a,0x202c303731662520,0x25202c3936316625,0x75730a3b37303566\n"
".quad 0x6625203233662e62,0x316625202c313731,0x34356625202c3037,0x662e6275730a3b32\n"
".quad 0x3237316625203233,0x2c3837356625202c,0x6c2e0a3b32662520,0x393234203220636f\n"
".quad 0x2e6464610a312035,0x3731662520323366,0x3237316625202c33,0x3b3437356625202c\n"
".quad 0x3233662e6464610a,0x202c343731662520,0x25202c3337316625,0x64610a3b35373566\n"
".quad 0x6625203233662e64,0x316625202c353731,0x36356625202c3437,0x662e6464610a3b35\n"
".quad 0x3637316625203233,0x2c3537316625202c,0x0a3b323535662520,0x203233662e646461\n"
".quad 0x25202c3737316625,0x6625202c36373166,0x6464610a3b393335,0x316625203233662e\n"
".quad 0x37316625202c3837,0x3630356625202c37,0x33662e6464610a3b,0x2c39373166252032\n"
".quad 0x202c383731662520,0x610a3b3034356625,0x25203233662e6464,0x6625202c30383166\n"
".quad 0x346625202c393731,0x2e6464610a3b3739,0x3831662520323366,0x3038316625202c31\n"
".quad 0x3b3134356625202c,0x3233662e6464610a,0x202c323831662520,0x25202c3138316625\n"
".quad 0x64610a3b37303566,0x6625203233662e64,0x316625202c333831,0x34356625202c3238\n"
".quad 0x662e6c756d0a3b32,0x3438316625203233,0x2c3236316625202c,0x0a3b323631662520\n"
".quad 0x662e6e722e616d66,0x3538316625203233,0x2c3335316625202c,0x202c333531662520\n"
".quad 0x6d0a3b3438316625,0x25203233662e6c75,0x6625202c36383166,0x316625202c313731\n"
".quad 0x2e616d660a3b3137,0x25203233662e6e72,0x6625202c37383166,0x316625202c313731\n"
".quad 0x38316625202c3137,0x662e6275730a3b35,0x3838316625203233,0x2c3338316625202c\n"
".quad 0x0a3b373831662520,0x203233662e6c756d,0x25202c3938316625,0x6630202c31393566\n"
".quad 0x3030303030383043,0x6e722e616d660a3b,0x316625203233662e,0x2c326625202c3039\n"
".quad 0x3030343134663020,0x316625202c303030,0x2e616d660a3b3938,0x25203233662e6e72\n"
".quad 0x6625202c31393166,0x436630202c373835,0x2c30303030303830,0x0a3b303931662520\n"
".quad 0x662e6e722e616d66,0x3239316625203233,0x202c37366625202c,0x3030303830436630\n"
".quad 0x39316625202c3030,0x722e616d660a3b31,0x6625203233662e6e,0x356625202c333931\n"
".quad 0x30436630202c3838,0x202c303030303038,0x610a3b3239316625,0x25203233662e6464\n"
".quad 0x6625202c34393166,0x356625202c333931,0x2e6464610a3b3837,0x3931662520323366\n"
".quad 0x3439316625202c35,0x3b3437356625202c,0x3233662e6464610a,0x202c363931662520\n"
".quad 0x25202c3539316625,0x64610a3b35373566,0x6625203233662e64,0x316625202c373931\n"
".quad 0x36356625202c3639,0x722e616d660a3b35,0x6625203233662e6e,0x356625202c383931\n"
".quad 0x30436630202c3136,0x202c303030303038,0x610a3b3739316625,0x25203233662e6464\n"
".quad 0x6625202c39393166,0x356625202c383931,0x2e6464610a3b3235,0x3032662520323366\n"
".quad 0x3939316625202c30,0x3b3933356625202c,0x3233662e6464610a,0x202c313032662520\n"
".quad 0x25202c3030326625,0x64610a3b36303566,0x6625203233662e64,0x326625202c323032\n"
".quad 0x34356625202c3130,0x722e616d660a3b30,0x6625203233662e6e,0x356625202c333032\n"
".quad 0x30436630202c3236,0x202c303030303038,0x610a3b3230326625,0x25203233662e6464\n"
".quad 0x6625202c34303266,0x346625202c333032,0x2e6464610a3b3739,0x3032662520323366\n"
".quad 0x3430326625202c35,0x3b3134356625202c,0x3233662e6464610a,0x202c363032662520\n"
".quad 0x25202c3530326625,0x64610a3b37303566,0x6625203233662e64,0x326625202c373032\n"
".quad 0x34356625202c3630,0x722e616d660a3b32,0x6625203233662e6e,0x316625202c383032\n"
".quad 0x30346630202c3738,0x202c343135343146,0x6d0a3b3730326625,0x25203233662e6c75\n"
".quad 0x6625202c39303266,0x30346630202c3736,0x0a3b303030303041,0x662e6e722e616d66\n"
".quad 0x3031326625203233,0x2c3139356625202c,0x3030413043663020,0x326625202c303030\n"
".quad 0x2e616d660a3b3930,0x25203233662e6e72,0x6625202c31313266,0x336630202c333531\n"
".quad 0x2c35353535354446,0x0a3b303132662520,0x203233662e6c756d,0x25202c3231326625\n"
".quad 0x6630202c38383566,0x3030303030413034,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x38356625202c3331,0x4130436630202c37,0x25202c3030303030,0x6d660a3b32313266\n"
".quad 0x3233662e6e722e61,0x202c343132662520,0x30202c3236316625,0x3535353544463366\n"
".quad 0x3331326625202c35,0x33662e6c756d0a3b,0x2c35313266252032,0x202c323635662520\n"
".quad 0x3030304130346630,0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c36313266\n"
".quad 0x436630202c313635,0x2c30303030304130,0x0a3b353132662520,0x662e6e722e616d66\n"
".quad 0x3731326625203233,0x2c3137316625202c,0x3535444633663020,0x326625202c353535\n"
".quad 0x2e6464610a3b3631,0x3132662520323366,0x3139356625202c38,0x3b3139356625202c\n"
".quad 0x3233662e6275730a,0x202c393132662520,0x25202c3831326625,0x6c2e0a3b37383566\n"
".quad 0x393234203220636f,0x2e6464610a312035,0x3232662520323366,0x2c37366625202c30\n"
".quad 0x610a3b3736662520,0x25203233662e6464,0x6625202c31323266,0x326625202c393132\n"
".quad 0x2e6275730a3b3032,0x3232662520323366,0x3132326625202c32,0x3b3838356625202c\n"
".quad 0x203220636f6c2e0a,0x610a312035393234,0x25203233662e6464,0x6625202c33323266\n"
".quad 0x356625202c323232,0x2e6464610a3b3837,0x3232662520323366,0x3332326625202c34\n"
".quad 0x3b3437356625202c,0x3233662e6464610a,0x202c353232662520,0x25202c3432326625\n"
".quad 0x64610a3b35373566,0x6625203233662e64,0x326625202c363232,0x36356625202c3532\n"
".quad 0x662e6275730a3b35,0x3732326625203233,0x2c3632326625202c,0x0a3b313635662520\n"
".quad 0x34203220636f6c2e,0x64610a3120353932,0x6625203233662e64,0x326625202c383232\n"
".quad 0x35356625202c3732,0x662e766f6d0a3b32,0x3932326625203233,0x303030436630202c\n"
".quad 0x6c2e0a3b30303030,0x393234203220636f,0x2e616d660a312035,0x25203233662e6e72\n"
".quad 0x6625202c30333266,0x436630202c393335,0x2c30303030303030,0x0a3b383232662520\n"
".quad 0x203233662e646461,0x25202c3133326625,0x6625202c30333266,0x616d660a3b363035\n"
".quad 0x203233662e6e722e,0x25202c3233326625,0x6630202c30343566,0x3030303030303043\n"
".quad 0x3b3133326625202c,0x3233662e6275730a,0x202c333332662520,0x25202c3233326625\n"
".quad 0x6c2e0a3b32363566,0x393234203220636f,0x2e6464610a312035,0x3332662520323366\n"
".quad 0x3333326625202c34,0x3b3739346625202c,0x2e6e722e616d660a,0x3332662520323366\n"
".quad 0x3134356625202c35,0x303030436630202c,0x6625202c30303030,0x6464610a3b343332\n"
".quad 0x326625203233662e,0x33326625202c3633,0x3730356625202c35,0x6e722e616d660a3b\n"
".quad 0x326625203233662e,0x34356625202c3733,0x3030436630202c32,0x25202c3030303030\n"
".quad 0x64610a3b36333266,0x6625203233662e64,0x316625202c383332,0x35316625202c3335\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x316625202c393332,0x36316625202c3236\n"
".quad 0x3638316625202c32,0x33662e67656e0a3b,0x2c30343266252032,0x0a3b393332662520\n"
".quad 0x662e6e722e616d66,0x3134326625203233,0x2c3833326625202c,0x202c333531662520\n"
".quad 0x730a3b3034326625,0x25203233662e6275,0x6625202c32343266,0x326625202c373332\n"
".quad 0x2e6464610a3b3134,0x3432662520323366,0x3738356625202c33,0x3b3738356625202c\n"
".quad 0x2e6e722e616d660a,0x3432662520323366,0x3139356625202c34,0x303830436630202c\n"
".quad 0x6625202c30303030,0x616d660a3b333432,0x203233662e6e722e,0x25202c3534326625\n"
".quad 0x436630202c373666,0x2c30303030303830,0x0a3b343432662520,0x203233662e646461\n"
".quad 0x25202c3634326625,0x6625202c38383566,0x6464610a3b383835,0x326625203233662e\n"
".quad 0x34326625202c3734,0x3634326625202c35,0x33662e6464610a3b,0x2c38343266252032\n"
".quad 0x202c373432662520,0x610a3b3837356625,0x25203233662e6464,0x6625202c39343266\n"
".quad 0x356625202c383432,0x2e6464610a3b3437,0x3532662520323366,0x3934326625202c30\n"
".quad 0x3b3537356625202c,0x3233662e6464610a,0x202c313532662520,0x25202c3035326625\n"
".quad 0x64610a3b35363566,0x6625203233662e64,0x356625202c323532,0x36356625202c3136\n"
".quad 0x662e6464610a3b31,0x3335326625203233,0x2c3135326625202c,0x0a3b323532662520\n"
".quad 0x203233662e646461,0x25202c3435326625,0x6625202c33353266,0x616d660a3b323535\n"
".quad 0x203233662e6e722e,0x25202c3535326625,0x6630202c39333566,0x3030303030303043\n"
".quad 0x3b3435326625202c,0x3233662e6464610a,0x202c363532662520,0x25202c3535326625\n"
".quad 0x6d660a3b36303566,0x3233662e6e722e61,0x202c373532662520,0x30202c3034356625\n"
".quad 0x3030303030304366,0x3635326625202c30,0x33662e6464610a3b,0x2c38353266252032\n"
".quad 0x202c323635662520,0x610a3b3236356625,0x25203233662e6464,0x6625202c39353266\n"
".quad 0x326625202c373532,0x2e6464610a3b3835,0x3632662520323366,0x3935326625202c30\n"
".quad 0x3b3739346625202c,0x2e6e722e616d660a,0x3632662520323366,0x3134356625202c31\n"
".quad 0x303030436630202c,0x6625202c30303030,0x6464610a3b303632,0x326625203233662e\n"
".quad 0x36326625202c3236,0x3730356625202c31,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x34356625202c3336,0x3030436630202c32,0x25202c3030303030,0x64610a3b32363266\n"
".quad 0x6625203233662e64,0x356625202c343632,0x38356625202c3738,0x662e6464610a3b38\n"
".quad 0x3536326625203233,0x2c3436326625202c,0x0a3b383735662520,0x203233662e646461\n"
".quad 0x25202c3636326625,0x6625202c35363266,0x6464610a3b343735,0x326625203233662e\n"
".quad 0x36326625202c3736,0x3537356625202c36,0x33662e6464610a3b,0x2c38363266252032\n"
".quad 0x202c373632662520,0x730a3b3536356625,0x25203233662e6275,0x6625202c39363266\n"
".quad 0x356625202c383632,0x2e6275730a3b3136,0x3732662520323366,0x3936326625202c30\n"
".quad 0x3b3235356625202c,0x3233662e6275730a,0x202c313732662520,0x25202c3037326625\n"
".quad 0x75730a3b36303566,0x6625203233662e62,0x326625202c323732,0x36356625202c3137\n"
".quad 0x662e6275730a3b32,0x3337326625203233,0x2c3237326625202c,0x0a3b373934662520\n"
".quad 0x203233662e627573,0x25202c3437326625,0x6625202c33373266,0x6f6c2e0a3b373035\n"
".quad 0x3539323420322063,0x662e67656e0a3120,0x3537326625203233,0x3b3137316625202c\n"
".quad 0x2e6e722e616d660a,0x3732662520323366,0x3537326625202c36,0x2c3137316625202c\n"
".quad 0x0a3b343831662520,0x203233662e627573,0x25202c3737326625,0x6625202c34373266\n"
".quad 0x67656e0a3b363732,0x326625203233662e,0x34326625202c3837,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x356625202c393732,0x32326625202c3738,0x3837326625202c39\n"
".quad 0x33662e6464610a3b,0x2c30383266252032,0x202c393732662520,0x610a3b3837356625\n"
".quad 0x25203233662e6464,0x6625202c31383266,0x356625202c303832,0x2e6464610a3b3437\n"
".quad 0x3832662520323366,0x3138326625202c32,0x3b3537356625202c,0x3233662e6464610a\n"
".quad 0x202c333832662520,0x25202c3238326625,0x64610a3b35363566,0x6625203233662e64\n"
".quad 0x326625202c343832,0x35326625202c3338,0x662e6275730a3b32,0x3538326625203233\n"
".quad 0x2c3438326625202c,0x0a3b323535662520,0x203233662e627573,0x25202c3638326625\n"
".quad 0x6625202c35383266,0x6f6c2e0a3b363035,0x3539323420322063,0x662e6464610a3120\n"
".quad 0x3738326625203233,0x2c3638326625202c,0x0a3b383532662520,0x203233662e627573\n"
".quad 0x25202c3838326625,0x6625202c37383266,0x6275730a3b373934,0x326625203233662e\n"
".quad 0x38326625202c3938,0x3730356625202c38,0x33662e6275730a3b,0x2c30393266252032\n"
".quad 0x202c383735662520,0x2e0a3b3437356625,0x3234203220636f6c,0x6464610a31203539\n"
".quad 0x326625203233662e,0x39326625202c3139,0x3537356625202c30,0x33662e6275730a3b\n"
".quad 0x2c32393266252032,0x202c313932662520,0x2e0a3b3536356625,0x3234203220636f6c\n"
".quad 0x67656e0a31203539,0x326625203233662e,0x35316625202c3339,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x326625202c343932,0x36316625202c3339,0x3239326625202c32\n"
".quad 0x33662e6275730a3b,0x2c35393266252032,0x202c393335662520,0x730a3b3034356625\n"
".quad 0x25203233662e6275,0x6625202c36393266,0x356625202c353932,0x636f6c2e0a3b3134\n"
".quad 0x2035393234203220,0x33662e6464610a31,0x2c37393266252032,0x202c363932662520\n"
".quad 0x6e0a3b3234356625,0x25203233662e6765,0x6625202c38393266,0x616d660a3b323631\n"
".quad 0x203233662e6e722e,0x25202c3939326625,0x6625202c38393266,0x326625202c313731\n"
".quad 0x2e6275730a3b3739,0x3033662520323366,0x3235356625202c30,0x3b3630356625202c\n"
".quad 0x3233662e6275730a,0x202c313033662520,0x25202c3030336625,0x6c2e0a3b37393466\n"
".quad 0x393234203220636f,0x2e6464610a312035,0x3033662520323366,0x3130336625202c32\n"
".quad 0x3b3730356625202c,0x2e6e722e616d660a,0x3033662520323366,0x3339326625202c33\n"
".quad 0x2c3137316625202c,0x0a3b323033662520,0x203233662e627573,0x25202c3430336625\n"
".quad 0x6625202c30393266,0x6f6c2e0a3b353735,0x3539323420322063,0x662e6464610a3120\n"
".quad 0x3530336625203233,0x2c3430336625202c,0x0a3b353635662520,0x203233662e627573\n"
".quad 0x25202c3630336625,0x6625202c35303366,0x6464610a3b323535,0x336625203233662e\n"
".quad 0x30336625202c3730,0x3630356625202c36,0x33662e6275730a3b,0x2c38303366252032\n"
".quad 0x202c373033662520,0x2e0a3b3739346625,0x3234203220636f6c,0x6464610a31203539\n"
".quad 0x336625203233662e,0x30336625202c3930,0x3730356625202c38,0x33662e67656e0a3b\n"
".quad 0x2c30313366252032,0x0a3b343735662520,0x203233662e627573,0x25202c3131336625\n"
".quad 0x6625202c30313366,0x6f6c2e0a3b383735,0x3539323420322063,0x662e6464610a3120\n"
".quad 0x3231336625203233,0x2c3131336625202c,0x0a3b353735662520,0x203233662e646461\n"
".quad 0x25202c3331336625,0x6625202c32313366,0x6464610a3b353635,0x336625203233662e\n"
".quad 0x31336625202c3431,0x3933356625202c33,0x33662e6275730a3b,0x2c35313366252032\n"
".quad 0x202c343133662520,0x2e0a3b3034356625,0x3234203220636f6c,0x6464610a31203539\n"
".quad 0x336625203233662e,0x31336625202c3631,0x3134356625202c35,0x33662e6275730a3b\n"
".quad 0x2c37313366252032,0x202c363133662520,0x730a3b3234356625,0x25203233662e6275\n"
".quad 0x6625202c38313366,0x356625202c323535,0x636f6c2e0a3b3933,0x2035393234203220\n"
".quad 0x33662e6464610a31,0x2c39313366252032,0x202c383133662520,0x730a3b3630356625\n"
".quad 0x25203233662e6275,0x6625202c30323366,0x356625202c393133,0x2e6275730a3b3034\n"
".quad 0x3233662520323366,0x3032336625202c31,0x3b3739346625202c,0x203220636f6c2e0a\n"
".quad 0x610a312035393234,0x25203233662e6464,0x6625202c32323366,0x356625202c313233\n"
".quad 0x2e6275730a3b3134,0x3233662520323366,0x3232336625202c33,0x3b3730356625202c\n"
".quad 0x203220636f6c2e0a,0x610a312035393234,0x25203233662e6464,0x6625202c34323366\n"
".quad 0x356625202c333233,0x2e766f6d0a3b3234,0x3233662520323366,0x3845336630202c35\n"
".quad 0x6c0a3b3030303030,0x2e6d617261702e64,0x3934662520323366,0x31315a5f5b202c36\n"
".quad 0x79685f645f74726d,0x665f536650424162,0x5f6d617261705f6d,0x636f6c2e0a3b5d32\n"
".quad 0x2035393234203220,0x33662e6c756d0a31,0x2c36323366252032,0x202c363934662520\n"
".quad 0x3030303845336630,0x2e766f6d0a3b3030,0x3233662520323366,0x3045336630202c37\n"
".quad 0x2e0a3b3030303030,0x3234203220636f6c,0x6c756d0a31203539,0x336625203233662e\n"
".quad 0x38326625202c3832,0x3244336630202c39,0x6d0a3b4241414141,0x25203233662e766f\n"
".quad 0x6630202c39323366,0x4241414141324433,0x3220636f6c2e0a3b,0x0a31203539323420\n"
".quad 0x203233662e6c756d,0x25202c3033336625,0x6630202c36393466,0x4241414141414433\n"
".quad 0x33662e6c756d0a3b,0x2c31333366252032,0x202c333632662520,0x4538333643336630\n"
".quad 0x2e6c756d0a3b3933,0x3333662520323366,0x3639346625202c32,0x334543336630202c\n"
".quad 0x756d0a3b39334538,0x6625203233662e6c,0x326625202c333333,0x33336625202c3234\n"
".quad 0x662e6c756d0a3b32,0x3433336625203233,0x2c3131326625202c,0x4343434333663020\n"
".quad 0x766f6d0a3b444343,0x336625203233662e,0x43336630202c3533,0x0a3b444343434343\n"
".quad 0x34203220636f6c2e,0x756d0a3120353932,0x6625203233662e6c,0x326625202c363333\n"
".quad 0x43336630202c3431,0x0a3b444343434343,0x203233662e6c756d,0x25202c3733336625\n"
".quad 0x6630202c37313266,0x4443434343434333,0x33662e6c756d0a3b,0x2c38333366252032\n"
".quad 0x202c383032662520,0x3830323842336630,0x2e6c756d0a3b3132,0x3333662520323366\n"
".quad 0x3833336625202c39,0x303431346630202c,0x6d660a3b30303030,0x3233662e6e722e61\n"
".quad 0x202c303433662520,0x30202c3838316625,0x3346433337454266,0x3933336625202c44\n"
".quad 0x33662e6275730a3b,0x2c31343366252032,0x6625202c32662520,0x6c756d0a3b303433\n"
".quad 0x336625203233662e,0x33336625202c3234,0x3830436630202c38,0x660a3b3030303030\n"
".quad 0x33662e6e722e616d,0x2c33343366252032,0x202c383831662520,0x4243324244426630\n"
".quad 0x34336625202c4432,0x722e616d660a3b32,0x6625203233662e6e,0x336625202c343433\n"
".quad 0x30436630202c3433,0x202c303030303038,0x660a3b3334336625,0x33662e6e722e616d\n"
".quad 0x2c35343366252032,0x202c323432662520,0x25202c3233336625,0x64610a3b33333366\n"
".quad 0x6625203233662e64,0x336625202c363433,0x34336625202c3434,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x336625202c373433,0x30436630202c3133,0x202c303030303038\n"
".quad 0x730a3b3634336625,0x25203233662e6275,0x6625202c38343366,0x336625202c313935\n"
".quad 0x2e616d660a3b3734,0x25203233662e6e72,0x6625202c39343366,0x436630202c363333\n"
".quad 0x2c30303030303830,0x0a3b333433662520,0x203233662e67656e,0x25202c3035336625\n"
".quad 0x6d660a3b32343266,0x3233662e6e722e61,0x202c313533662520,0x25202c3035336625\n"
".quad 0x6625202c32333366,0x6f6c2e0a3b393433,0x3539323420322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x326625202c323533,0x43336630202c3336,0x202c393345383336\n"
".quad 0x610a3b3133336625,0x25203233662e6464,0x6625202c33353366,0x336625202c313533\n"
".quad 0x2e616d660a3b3235,0x25203233662e6e72,0x6625202c34353366,0x336625202c373732\n"
".quad 0x35336625202c3033,0x722e616d660a3b33,0x6625203233662e6e,0x336625202c353533\n"
".quad 0x30436630202c3832,0x202c303030303030,0x730a3b3435336625,0x25203233662e6275\n"
".quad 0x6625202c36353366,0x336625202c373835,0x2e616d660a3b3535,0x25203233662e6e72\n"
".quad 0x6625202c37353366,0x346630202c343333,0x2c30303030303830,0x0a3b333433662520\n"
".quad 0x203233662e646461,0x25202c3835336625,0x6625202c37353366,0x616d660a3b353433\n"
".quad 0x203233662e6e722e,0x25202c3935336625,0x6630202c31333366,0x3030303030383043\n"
".quad 0x3b3835336625202c,0x3233662e6275730a,0x202c303633662520,0x6625202c37366625\n"
".quad 0x616d660a3b393533,0x203233662e6e722e,0x25202c3136336625,0x6630202c36333366\n"
".quad 0x3030303030383034,0x3b3334336625202c,0x2e6e722e616d660a,0x3633662520323366\n"
".quad 0x3035336625202c32,0x2c3233336625202c,0x0a3b313633662520,0x34203220636f6c2e\n"
".quad 0x64610a3120353932,0x6625203233662e64,0x336625202c333633,0x35336625202c3236\n"
".quad 0x722e616d660a3b32,0x6625203233662e6e,0x326625202c343633,0x33336625202c3737\n"
".quad 0x3336336625202c30,0x6e722e616d660a3b,0x336625203233662e,0x32336625202c3536\n"
".quad 0x3030436630202c38,0x25202c3030303030,0x75730a3b34363366,0x6625203233662e62\n"
".quad 0x356625202c363633,0x36336625202c3838,0x722e616d660a3b35,0x6625203233662e6e\n"
".quad 0x316625202c373633,0x44336630202c3838,0x202c303238303238,0x660a3b3833336625\n"
".quad 0x33662e6e722e616d,0x2c38363366252032,0x202c313132662520,0x4343434343336630\n"
".quad 0x36336625202c4443,0x722e616d660a3b37,0x6625203233662e6e,0x326625202c393633\n"
".quad 0x43336630202c3431,0x202c444343434343,0x660a3b3836336625,0x33662e6e722e616d\n"
".quad 0x2c30373366252032,0x202c323432662520,0x25202c3233336625,0x6d660a3b39363366\n"
".quad 0x3233662e6e722e61,0x202c313733662520,0x30202c3336326625,0x3345383336433366\n"
".quad 0x3037336625202c39,0x6e722e616d660a3b,0x336625203233662e,0x37326625202c3237\n"
".quad 0x3033336625202c37,0x3b3137336625202c,0x2e6e722e616d660a,0x3733662520323366\n"
".quad 0x3938326625202c33,0x413244336630202c,0x6625202c42414141,0x616d660a3b323733\n"
".quad 0x203233662e6e722e,0x25202c3437336625,0x6630202c34393266,0x3030303030384533\n"
".quad 0x3b3337336625202c,0x2e6e722e616d660a,0x3733662520323366,0x3930336625202c35\n"
".quad 0x303045336630202c,0x6625202c30303030,0x67656e0a3b343733,0x336625203233662e\n"
".quad 0x31336625202c3637,0x722e616d660a3b37,0x6625203233662e6e,0x336625202c373733\n"
".quad 0x32336625202c3637,0x3537336625202c37,0x3220636f6c2e0a3b,0x0a31203539323420\n"
".quad 0x203233662e627573,0x25202c3837336625,0x6625202c38373566,0x67656e0a3b373733\n"
".quad 0x336625203233662e,0x31326625202c3937,0x722e616d660a3b31,0x6625203233662e6e\n"
".quad 0x336625202c303833,0x33336625202c3937,0x3736336625202c35,0x3220636f6c2e0a3b\n"
".quad 0x0a31203539323420,0x662e6e722e616d66,0x3138336625203233,0x2c3431326625202c\n"
".quad 0x4343434333663020,0x336625202c444343,0x2e616d660a3b3038,0x25203233662e6e72\n"
".quad 0x6625202c32383366,0x336625202c323432,0x38336625202c3233,0x722e616d660a3b31\n"
".quad 0x6625203233662e6e,0x326625202c333833,0x43336630202c3336,0x202c393345383336\n"
".quad 0x660a3b3238336625,0x33662e6e722e616d,0x2c34383366252032,0x202c373732662520\n"
".quad 0x25202c3033336625,0x6d660a3b33383366,0x3233662e6e722e61,0x202c353833662520\n"
".quad 0x30202c3938326625,0x4141414132443366,0x3438336625202c42,0x33662e67656e0a3b\n"
".quad 0x2c36383366252032,0x0a3b343932662520,0x662e6e722e616d66,0x3738336625203233\n"
".quad 0x2c3638336625202c,0x202c353233662520,0x6e0a3b3538336625,0x25203233662e6765\n"
".quad 0x6625202c38383366,0x616d660a3b393033,0x203233662e6e722e,0x25202c3938336625\n"
".quad 0x6625202c38383366,0x336625202c373233,0x2e616d660a3b3738,0x25203233662e6e72\n"
".quad 0x6625202c30393366,0x336625202c363733,0x38336625202c3732,0x20636f6c2e0a3b39\n"
".quad 0x3120353932342032,0x3233662e6275730a,0x202c313933662520,0x25202c3437356625\n"
".quad 0x656e0a3b30393366,0x6625203233662e67,0x326625202c323933,0x2e616d660a3b3431\n"
".quad 0x25203233662e6e72,0x6625202c33393366,0x336625202c323933,0x38336625202c3533\n"
".quad 0x20636f6c2e0a3b30,0x3120353932342032,0x2e6e722e616d660a,0x3933662520323366\n"
".quad 0x3234326625202c34,0x2c3233336625202c,0x0a3b333933662520,0x662e6e722e616d66\n"
".quad 0x3539336625203233,0x2c3336326625202c,0x3833364333663020,0x336625202c393345\n"
".quad 0x2e616d660a3b3439,0x25203233662e6e72,0x6625202c36393366,0x336625202c373732\n"
".quad 0x39336625202c3033,0x722e616d660a3b35,0x6625203233662e6e,0x326625202c373933\n"
".quad 0x44336630202c3938,0x202c424141414132,0x660a3b3639336625,0x33662e6e722e616d\n"
".quad 0x2c38393366252032,0x202c343932662520,0x3030303845336630,0x39336625202c3030\n"
".quad 0x722e616d660a3b37,0x6625203233662e6e,0x336625202c393933,0x32336625202c3838\n"
".quad 0x3839336625202c37,0x3220636f6c2e0a3b,0x0a31203539323420,0x662e6e722e616d66\n"
".quad 0x3030346625203233,0x2c3731336625202c,0x3030304533663020,0x336625202c303030\n"
".quad 0x2e6275730a3b3939,0x3034662520323366,0x3537356625202c31,0x3b3030346625202c\n"
".quad 0x2e6e722e616d660a,0x3034662520323366,0x3239336625202c32,0x2c3533336625202c\n"
".quad 0x0a3b383633662520,0x34203220636f6c2e,0x6d660a3120353932,0x3233662e6e722e61\n"
".quad 0x202c333034662520,0x25202c3234326625,0x6625202c32333366,0x616d660a3b323034\n"
".quad 0x203233662e6e722e,0x25202c3430346625,0x6630202c33363266,0x3933453833364333\n"
".quad 0x3b3330346625202c,0x2e6e722e616d660a,0x3034662520323366,0x3737326625202c35\n"
".quad 0x2c3033336625202c,0x0a3b343034662520,0x662e6e722e616d66,0x3630346625203233\n"
".quad 0x2c3938326625202c,0x4141324433663020,0x346625202c424141,0x2e616d660a3b3530\n"
".quad 0x25203233662e6e72,0x6625202c37303466,0x336625202c363833,0x30346625202c3532\n"
".quad 0x20636f6c2e0a3b36,0x3120353932342032,0x2e6e722e616d660a,0x3034662520323366\n"
".quad 0x3930336625202c38,0x303045336630202c,0x6625202c30303030,0x616d660a3b373034\n"
".quad 0x203233662e6e722e,0x25202c3930346625,0x6630202c37313366,0x3030303030304533\n"
".quad 0x3b3830346625202c,0x3233662e6275730a,0x202c303134662520,0x25202c3536356625\n"
".quad 0x6d660a3b39303466,0x3233662e6e722e61,0x202c313134662520,0x30202c3733336625\n"
".quad 0x3030303038304366,0x3334336625202c30,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x35336625202c3231,0x3233336625202c30,0x3b3131346625202c,0x203220636f6c2e0a\n"
".quad 0x610a312035393234,0x25203233662e6464,0x6625202c33313466,0x336625202c323134\n"
".quad 0x2e67656e0a3b3235,0x3134662520323366,0x3737326625202c34,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x31346625202c3531,0x3033336625202c34,0x3b3331346625202c\n"
".quad 0x203220636f6c2e0a,0x660a312035393234,0x33662e6e722e616d,0x2c36313466252032\n"
".quad 0x202c393832662520,0x4141413244336630,0x32336625202c4241,0x662e6464610a3b38\n"
".quad 0x3731346625203233,0x2c3531346625202c,0x0a3b363134662520,0x203233662e627573\n"
".quad 0x25202c3831346625,0x6625202c31363566,0x616d660a3b373134,0x203233662e6e722e\n"
".quad 0x25202c3931346625,0x6630202c37313266,0x4443434343434333,0x3b3836336625202c\n"
".quad 0x2e6e722e616d660a,0x3234662520323366,0x3234326625202c30,0x2c3233336625202c\n"
".quad 0x0a3b393134662520,0x662e6e722e616d66,0x3132346625203233,0x2c3336326625202c\n"
".quad 0x3833364333663020,0x346625202c393345,0x2e616d660a3b3032,0x25203233662e6e72\n"
".quad 0x6625202c32323466,0x336625202c343134,0x32346625202c3033,0x662e67656e0a3b31\n"
".quad 0x3332346625203233,0x3b3938326625202c,0x2e6e722e616d660a,0x3234662520323366\n"
".quad 0x3332346625202c34,0x2c3932336625202c,0x0a3b323234662520,0x34203220636f6c2e\n"
".quad 0x6d660a3120353932,0x3233662e6e722e61,0x202c353234662520,0x25202c3330336625\n"
".quad 0x6625202c36323366,0x616d660a3b343234,0x203233662e6e722e,0x25202c3632346625\n"
".quad 0x6625202c38383366,0x346625202c373233,0x636f6c2e0a3b3532,0x2035393234203220\n"
".quad 0x6e722e616d660a31,0x346625203233662e,0x32336625202c3732,0x3045336630202c34\n"
".quad 0x25202c3030303030,0x75730a3b36323466,0x6625203233662e62,0x356625202c383234\n"
".quad 0x32346625202c3235,0x722e616d660a3b37,0x6625203233662e6e,0x326625202c393234\n"
".quad 0x43336630202c3431,0x202c444343434343,0x660a3b3736336625,0x33662e6e722e616d\n"
".quad 0x2c30333466252032,0x202c373132662520,0x4343434343336630,0x32346625202c4443\n"
".quad 0x722e616d660a3b39,0x6625203233662e6e,0x336625202c313334,0x30436630202c3333\n"
".quad 0x202c303030303030,0x660a3b3033346625,0x33662e6e722e616d,0x2c32333466252032\n"
".quad 0x202c313333662520,0x3030303030436630,0x33346625202c3030,0x722e616d660a3b31\n"
".quad 0x6625203233662e6e,0x326625202c333334,0x45336630202c3939,0x202c303030303038\n"
".quad 0x660a3b3233346625,0x33662e6e722e616d,0x2c34333466252032,0x202c373133662520\n"
".quad 0x3030303045336630,0x33346625202c3030,0x662e67656e0a3b33,0x3533346625203233\n"
".quad 0x3b3432336625202c,0x2e6e722e616d660a,0x3334662520323366,0x3533346625202c36\n"
".quad 0x2c3732336625202c,0x0a3b343334662520,0x34203220636f6c2e,0x75730a3120353932\n"
".quad 0x6625203233662e62,0x356625202c373334,0x33346625202c3933,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x326625202c383334,0x43336630202c3731,0x202c444343434343\n"
".quad 0x660a3b3038336625,0x33662e6e722e616d,0x2c39333466252032,0x202c323432662520\n"
".quad 0x25202c3233336625,0x6d660a3b38333466,0x3233662e6e722e61,0x202c303434662520\n"
".quad 0x30202c3336326625,0x3345383336433366,0x3933346625202c39,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x31346625202c3134,0x3033336625202c34,0x3b3034346625202c\n"
".quad 0x2e6e722e616d660a,0x3434662520323366,0x3332346625202c32,0x2c3932336625202c\n"
".quad 0x0a3b313434662520,0x203233662e67656e,0x25202c3334346625,0x6d660a3b33303366\n"
".quad 0x3233662e6e722e61,0x202c343434662520,0x25202c3334346625,0x6625202c36323366\n"
".quad 0x6f6c2e0a3b323434,0x3539323420322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x336625202c353434,0x45336630202c3930,0x202c303030303030,0x660a3b3434346625\n"
".quad 0x33662e6e722e616d,0x2c36343466252032,0x202c343233662520,0x3030303045336630\n"
".quad 0x34346625202c3030,0x662e6275730a3b35,0x3734346625203233,0x2c3630356625202c\n"
".quad 0x0a3b363434662520,0x662e6e722e616d66,0x3834346625203233,0x2c3239336625202c\n"
".quad 0x202c353333662520,0x2e0a3b3736336625,0x3234203220636f6c,0x616d660a31203539\n"
".quad 0x203233662e6e722e,0x25202c3934346625,0x6630202c37313266,0x4443434343434333\n"
".quad 0x3b3834346625202c,0x2e6e722e616d660a,0x3534662520323366,0x3333336625202c30\n"
".quad 0x303030436630202c,0x6625202c30303030,0x616d660a3b393434,0x203233662e6e722e\n"
".quad 0x25202c3135346625,0x6630202c31333366,0x3030303030303043,0x3b3035346625202c\n"
".quad 0x3233662e67656e0a,0x202c323534662520,0x660a3b3939326625,0x33662e6e722e616d\n"
".quad 0x2c33353466252032,0x202c323534662520,0x25202c3532336625,0x6d660a3b31353466\n"
".quad 0x3233662e6e722e61,0x202c343534662520,0x25202c3637336625,0x6625202c37323366\n"
".quad 0x616d660a3b333534,0x203233662e6e722e,0x25202c3535346625,0x6625202c35333466\n"
".quad 0x346625202c373233,0x636f6c2e0a3b3435,0x2035393234203220,0x33662e6275730a31\n"
".quad 0x2c36353466252032,0x202c303435662520,0x660a3b3535346625,0x33662e6e722e616d\n"
".quad 0x2c37353466252032,0x202c373333662520,0x3030303830346630,0x34336625202c3030\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x336625202c383534,0x33336625202c3035\n"
".quad 0x3735346625202c32,0x3220636f6c2e0a3b,0x0a31203539323420,0x203233662e646461\n"
".quad 0x25202c3935346625,0x6625202c38353466,0x616d660a3b323533,0x203233662e6e722e\n"
".quad 0x25202c3036346625,0x6625202c34313466,0x346625202c303333,0x636f6c2e0a3b3935\n"
".quad 0x2035393234203220,0x33662e6464610a31,0x2c31363466252032,0x202c303634662520\n"
".quad 0x730a3b3631346625,0x25203233662e6275,0x6625202c32363466,0x346625202c323635\n"
".quad 0x2e67656e0a3b3136,0x3634662520323366,0x3731326625202c33,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x36346625202c3436,0x3533336625202c33,0x3b3836336625202c\n"
".quad 0x203220636f6c2e0a,0x660a312035393234,0x33662e6e722e616d,0x2c35363466252032\n"
".quad 0x202c323432662520,0x25202c3233336625,0x6d660a3b34363466,0x3233662e6e722e61\n"
".quad 0x202c363634662520,0x30202c3336326625,0x3345383336433366,0x3536346625202c39\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x31346625202c3736,0x3033336625202c34\n"
".quad 0x3b3636346625202c,0x2e6e722e616d660a,0x3634662520323366,0x3332346625202c38\n"
".quad 0x2c3932336625202c,0x0a3b373634662520,0x662e6e722e616d66,0x3936346625203233\n"
".quad 0x2c3334346625202c,0x202c363233662520,0x660a3b3836346625,0x33662e6e722e616d\n"
".quad 0x2c30373466252032,0x202c383833662520,0x25202c3732336625,0x6d660a3b39363466\n"
".quad 0x3233662e6e722e61,0x202c313734662520,0x25202c3533346625,0x6625202c37323366\n"
".quad 0x6f6c2e0a3b303734,0x3539323420322063,0x662e6275730a3120,0x3237346625203233\n"
".quad 0x2c3739346625202c,0x0a3b313734662520,0x662e6e722e616d66,0x3337346625203233\n"
".quad 0x2c3336346625202c,0x202c353333662520,0x2e0a3b3932346625,0x3234203220636f6c\n"
".quad 0x616d660a31203539,0x203233662e6e722e,0x25202c3437346625,0x6630202c33333366\n"
".quad 0x3030303030303043,0x3b3337346625202c,0x2e6e722e616d660a,0x3734662520323366\n"
".quad 0x3133336625202c35,0x303030436630202c,0x6625202c30303030,0x616d660a3b343734\n"
".quad 0x203233662e6e722e,0x25202c3637346625,0x6625202c32353466,0x346625202c353233\n"
".quad 0x636f6c2e0a3b3537,0x2035393234203220,0x6e722e616d660a31,0x346625203233662e\n"
".quad 0x31336625202c3737,0x3045336630202c37,0x25202c3030303030,0x6d660a3b36373466\n"
".quad 0x3233662e6e722e61,0x202c383734662520,0x30202c3432336625,0x3030303030453366\n"
".quad 0x3737346625202c30,0x33662e6275730a3b,0x2c39373466252032,0x202c313435662520\n"
".quad 0x660a3b3837346625,0x33662e6e722e616d,0x2c30383466252032,0x202c333634662520\n"
".quad 0x25202c3533336625,0x6c2e0a3b30383366,0x393234203220636f,0x2e616d660a312035\n"
".quad 0x25203233662e6e72,0x6625202c31383466,0x336625202c323432,0x38346625202c3233\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x326625202c323834,0x43336630202c3336\n"
".quad 0x202c393345383336,0x660a3b3138346625,0x33662e6e722e616d,0x2c33383466252032\n"
".quad 0x202c343134662520,0x25202c3033336625,0x6d660a3b32383466,0x3233662e6e722e61\n"
".quad 0x202c343834662520,0x25202c3332346625,0x6625202c39323366,0x6f6c2e0a3b333834\n"
".quad 0x3539323420322063,0x722e616d660a3120,0x6625203233662e6e,0x336625202c353834\n"
".quad 0x32336625202c3330,0x3438346625202c36,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x30336625202c3638,0x3045336630202c39,0x25202c3030303030,0x6d660a3b35383466\n"
".quad 0x3233662e6e722e61,0x202c373834662520,0x25202c3533346625,0x6625202c37323366\n"
".quad 0x6f6c2e0a3b363834,0x3539323420322063,0x662e6275730a3120,0x3838346625203233\n"
".quad 0x2c3730356625202c,0x0a3b373834662520,0x662e6e722e616d66,0x3938346625203233\n"
".quad 0x2c3336346625202c,0x202c353333662520,0x2e0a3b3834346625,0x3234203220636f6c\n"
".quad 0x616d660a31203539,0x203233662e6e722e,0x25202c3039346625,0x6630202c33333366\n"
".quad 0x3030303030303043,0x3b3938346625202c,0x2e6e722e616d660a,0x3934662520323366\n"
".quad 0x3133336625202c31,0x303030436630202c,0x6625202c30303030,0x616d660a3b303934\n"
".quad 0x203233662e6e722e,0x25202c3239346625,0x6630202c39393266,0x3030303030384533\n"
".quad 0x3b3139346625202c,0x2e6e722e616d660a,0x3934662520323366,0x3637336625202c33\n"
".quad 0x2c3732336625202c,0x0a3b323934662520,0x34203220636f6c2e,0x6d660a3120353932\n"
".quad 0x3233662e6e722e61,0x202c343934662520,0x30202c3432336625,0x3030303030453366\n"
".quad 0x3339346625202c30,0x33662e6275730a3b,0x2c35393466252032,0x202c323435662520\n"
".quad 0x6c0a3b3439346625,0x2e6d617261702e64,0x326c722520343675,0x315a5f5b202c3532\n"
".quad 0x685f645f74726d31,0x5f53665042416279,0x6d617261705f6d66,0x6f6c2e0a3b5d335f\n"
".quad 0x3237313420322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c38376c\n"
".quad 0x326c7225202c3031,0x346c7225202c3532,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3332326c72,0x5f74726d31315a5f,0x5042416279685f64,0x61705f6d665f5366\n"
".quad 0x0a3b5d315f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67,0x39376c7225203436\n"
".quad 0x3332326c7225202c,0x36622e6c68730a3b,0x2c30386c72252034,0x202c38376c722520\n"
".quad 0x2e7268730a3b3233,0x386c722520343673,0x30386c7225202c31,0x6c2e0a3b3233202c\n"
".quad 0x303334203220636f,0x2e6c68730a312030,0x386c722520343662,0x31386c7225202c32\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x376c7225202c3338,0x32386c7225202c39\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x2c5d33386c72255b,0x0a3b313433662520\n"
".quad 0x203436732e646461,0x25202c34386c7225,0x3034202c30316c72,0x636f6c2e0a3b3639\n"
".quad 0x2031303334203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x386c7225202c3538\n"
".quad 0x32326c7225202c34,0x3b346c7225202c35,0x3436622e6c68730a,0x202c36386c722520\n"
".quad 0x33202c35386c7225,0x732e7268730a3b32,0x37386c7225203436,0x2c36386c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x3130333420322063,0x622e6c68730a3120,0x38386c7225203436\n"
".quad 0x2c37386c7225202c,0x2e6464610a3b3220,0x386c722520343673,0x39376c7225202c39\n"
".quad 0x3b38386c7225202c,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d39386c7225\n"
".quad 0x610a3b3834336625,0x25203436732e6464,0x7225202c30396c72,0x393138202c30316c\n"
".quad 0x20636f6c2e0a3b32,0x3120323033342032,0x2e6f6c2e64616d0a,0x396c722520343673\n"
".quad 0x30396c7225202c31,0x3532326c7225202c,0x0a3b346c7225202c,0x203436622e6c6873\n"
".quad 0x25202c32396c7225,0x3233202c31396c72,0x36732e7268730a3b,0x2c33396c72252034\n"
".quad 0x202c32396c722520,0x636f6c2e0a3b3233,0x2032303334203220,0x36622e6c68730a31\n"
".quad 0x2c34396c72252034,0x202c33396c722520,0x732e6464610a3b32,0x35396c7225203436\n"
".quad 0x2c39376c7225202c,0x0a3b34396c722520,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x25202c5d35396c72,0x64610a3b36353366,0x7225203436732e64,0x6c7225202c36396c\n"
".quad 0x38323231202c3031,0x20636f6c2e0a3b38,0x3120333033342032,0x2e6f6c2e64616d0a\n"
".quad 0x396c722520343673,0x36396c7225202c37,0x3532326c7225202c,0x0a3b346c7225202c\n"
".quad 0x203436622e6c6873,0x25202c38396c7225,0x3233202c37396c72,0x36732e7268730a3b\n"
".quad 0x2c39396c72252034,0x202c38396c722520,0x636f6c2e0a3b3233,0x2033303334203220\n"
".quad 0x36622e6c68730a31,0x3030316c72252034,0x2c39396c7225202c,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x376c7225202c3130,0x30316c7225202c39,0x6c672e74730a3b30\n"
".quad 0x3233662e6c61626f,0x3130316c72255b20,0x3036336625202c5d,0x36732e6464610a3b\n"
".quad 0x3230316c72252034,0x2c30316c7225202c,0x0a3b343833363120,0x34203220636f6c2e\n"
".quad 0x616d0a3120343033,0x3436732e6f6c2e64,0x2c3330316c722520,0x2c3230316c722520\n"
".quad 0x2c3532326c722520,0x730a3b346c722520,0x25203436622e6c68,0x25202c3430316c72\n"
".quad 0x33202c3330316c72,0x732e7268730a3b32,0x30316c7225203436,0x30316c7225202c35\n"
".quad 0x2e0a3b3233202c34,0x3334203220636f6c,0x6c68730a31203430,0x6c7225203436622e\n"
".quad 0x6c7225202c363031,0x0a3b32202c353031,0x203436732e646461,0x202c3730316c7225\n"
".quad 0x25202c39376c7225,0x730a3b3630316c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3730316c,0x64610a3b36363366,0x7225203436732e64,0x7225202c3830316c\n"
".quad 0x343032202c30316c,0x636f6c2e0a3b3038,0x2035303334203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c393031,0x6c7225202c383031,0x6c7225202c353232\n"
".quad 0x622e6c68730a3b34,0x31316c7225203436,0x30316c7225202c30,0x730a3b3233202c39\n"
".quad 0x25203436732e7268,0x25202c3131316c72,0x33202c3031316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120353033342032,0x3436622e6c68730a,0x2c3231316c722520,0x2c3131316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x376c7225202c3331,0x31316c7225202c39\n"
".quad 0x6c672e74730a3b32,0x3233662e6c61626f,0x3331316c72255b20,0x3837336625202c5d\n"
".quad 0x36732e6464610a3b,0x3431316c72252034,0x2c30316c7225202c,0x0a3b363735343220\n"
".quad 0x34203220636f6c2e,0x616d0a3120363033,0x3436732e6f6c2e64,0x2c3531316c722520\n"
".quad 0x2c3431316c722520,0x2c3532326c722520,0x730a3b346c722520,0x25203436622e6c68\n"
".quad 0x25202c3631316c72,0x33202c3531316c72,0x732e7268730a3b32,0x31316c7225203436\n"
".quad 0x31316c7225202c37,0x2e0a3b3233202c36,0x3334203220636f6c,0x6c68730a31203630\n"
".quad 0x6c7225203436622e,0x6c7225202c383131,0x0a3b32202c373131,0x203436732e646461\n"
".quad 0x202c3931316c7225,0x25202c39376c7225,0x730a3b3831316c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3931316c,0x64610a3b31393366,0x7225203436732e64\n"
".quad 0x7225202c3032316c,0x363832202c30316c,0x636f6c2e0a3b3237,0x2037303334203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c313231,0x6c7225202c303231\n"
".quad 0x6c7225202c353232,0x622e6c68730a3b34,0x32316c7225203436,0x32316c7225202c32\n"
".quad 0x730a3b3233202c31,0x25203436732e7268,0x25202c3332316c72,0x33202c3232316c72\n"
".quad 0x20636f6c2e0a3b32,0x3120373033342032,0x3436622e6c68730a,0x2c3432316c722520\n"
".quad 0x2c3332316c722520,0x2e6464610a3b3220,0x316c722520343673,0x376c7225202c3532\n"
".quad 0x32316c7225202c39,0x6c672e74730a3b34,0x3233662e6c61626f,0x3532316c72255b20\n"
".quad 0x3130346625202c5d,0x36732e6464610a3b,0x3632316c72252034,0x2c30316c7225202c\n"
".quad 0x0a3b383637323320,0x34203220636f6c2e,0x616d0a3120383033,0x3436732e6f6c2e64\n"
".quad 0x2c3732316c722520,0x2c3632316c722520,0x2c3532326c722520,0x730a3b346c722520\n"
".quad 0x25203436622e6c68,0x25202c3832316c72,0x33202c3732316c72,0x732e7268730a3b32\n"
".quad 0x32316c7225203436,0x32316c7225202c39,0x2e0a3b3233202c38,0x3334203220636f6c\n"
".quad 0x6c68730a31203830,0x6c7225203436622e,0x6c7225202c303331,0x0a3b32202c393231\n"
".quad 0x203436732e646461,0x202c3133316c7225,0x25202c39376c7225,0x730a3b3033316c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3133316c,0x64610a3b30313466\n"
".quad 0x7225203436732e64,0x7225202c3233316c,0x383633202c30316c,0x636f6c2e0a3b3436\n"
".quad 0x2039303334203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c333331\n"
".quad 0x6c7225202c323331,0x6c7225202c353232,0x622e6c68730a3b34,0x33316c7225203436\n"
".quad 0x33316c7225202c34,0x730a3b3233202c33,0x25203436732e7268,0x25202c3533316c72\n"
".quad 0x33202c3433316c72,0x20636f6c2e0a3b32,0x3120393033342032,0x3436622e6c68730a\n"
".quad 0x2c3633316c722520,0x2c3533316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x376c7225202c3733,0x33316c7225202c39,0x6c672e74730a3b36,0x3233662e6c61626f\n"
".quad 0x3733316c72255b20,0x3831346625202c5d,0x36732e6464610a3b,0x3833316c72252034\n"
".quad 0x2c30316c7225202c,0x0a3b303639303420,0x34203220636f6c2e,0x616d0a3120303133\n"
".quad 0x3436732e6f6c2e64,0x2c3933316c722520,0x2c3833316c722520,0x2c3532326c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3034316c72,0x33202c3933316c72\n"
".quad 0x732e7268730a3b32,0x34316c7225203436,0x34316c7225202c31,0x2e0a3b3233202c30\n"
".quad 0x3334203220636f6c,0x6c68730a31203031,0x6c7225203436622e,0x6c7225202c323431\n"
".quad 0x0a3b32202c313431,0x203436732e646461,0x202c3334316c7225,0x25202c39376c7225\n"
".quad 0x730a3b3234316c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3334316c\n"
".quad 0x64610a3b38323466,0x7225203436732e64,0x7225202c3434316c,0x303534202c30316c\n"
".quad 0x636f6c2e0a3b3635,0x2031313334203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c353431,0x6c7225202c343431,0x6c7225202c353232,0x622e6c68730a3b34\n"
".quad 0x34316c7225203436,0x34316c7225202c36,0x730a3b3233202c35,0x25203436732e7268\n"
".quad 0x25202c3734316c72,0x33202c3634316c72,0x20636f6c2e0a3b32,0x3120313133342032\n"
".quad 0x3436622e6c68730a,0x2c3834316c722520,0x2c3734316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x376c7225202c3934,0x34316c7225202c39,0x6c672e74730a3b38\n"
".quad 0x3233662e6c61626f,0x3934316c72255b20,0x3733346625202c5d,0x36732e6464610a3b\n"
".quad 0x3035316c72252034,0x2c30316c7225202c,0x0a3b323531393420,0x34203220636f6c2e\n"
".quad 0x616d0a3120323133,0x3436732e6f6c2e64,0x2c3135316c722520,0x2c3035316c722520\n"
".quad 0x2c3532326c722520,0x730a3b346c722520,0x25203436622e6c68,0x25202c3235316c72\n"
".quad 0x33202c3135316c72,0x732e7268730a3b32,0x35316c7225203436,0x35316c7225202c33\n"
".quad 0x2e0a3b3233202c32,0x3334203220636f6c,0x6c68730a31203231,0x6c7225203436622e\n"
".quad 0x6c7225202c343531,0x0a3b32202c333531,0x203436732e646461,0x202c3535316c7225\n"
".quad 0x25202c39376c7225,0x730a3b3435316c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3535316c,0x64610a3b37343466,0x7225203436732e64,0x7225202c3635316c\n"
".quad 0x323335202c30316c,0x636f6c2e0a3b3834,0x2033313334203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c373531,0x6c7225202c363531,0x6c7225202c353232\n"
".quad 0x622e6c68730a3b34,0x35316c7225203436,0x35316c7225202c38,0x730a3b3233202c37\n"
".quad 0x25203436732e7268,0x25202c3935316c72,0x33202c3835316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120333133342032,0x3436622e6c68730a,0x2c3036316c722520,0x2c3935316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x376c7225202c3136,0x36316c7225202c39\n"
".quad 0x6c672e74730a3b30,0x3233662e6c61626f,0x3136316c72255b20,0x3635346625202c5d\n"
".quad 0x36732e6464610a3b,0x3236316c72252034,0x2c30316c7225202c,0x0a3b343433373520\n"
".quad 0x34203220636f6c2e,0x616d0a3120343133,0x3436732e6f6c2e64,0x2c3336316c722520\n"
".quad 0x2c3236316c722520,0x2c3532326c722520,0x730a3b346c722520,0x25203436622e6c68\n"
".quad 0x25202c3436316c72,0x33202c3336316c72,0x732e7268730a3b32,0x36316c7225203436\n"
".quad 0x36316c7225202c35,0x2e0a3b3233202c34,0x3334203220636f6c,0x6c68730a31203431\n"
".quad 0x6c7225203436622e,0x6c7225202c363631,0x0a3b32202c353631,0x203436732e646461\n"
".quad 0x202c3736316c7225,0x25202c39376c7225,0x730a3b3636316c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3736316c,0x64610a3b32363466,0x7225203436732e64\n"
".quad 0x7225202c3836316c,0x343136202c30316c,0x636f6c2e0a3b3034,0x2035313334203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c393631,0x6c7225202c383631\n"
".quad 0x6c7225202c353232,0x622e6c68730a3b34,0x37316c7225203436,0x36316c7225202c30\n"
".quad 0x730a3b3233202c39,0x25203436732e7268,0x25202c3137316c72,0x33202c3037316c72\n"
".quad 0x20636f6c2e0a3b32,0x3120353133342032,0x3436622e6c68730a,0x2c3237316c722520\n"
".quad 0x2c3137316c722520,0x2e6464610a3b3220,0x316c722520343673,0x376c7225202c3337\n"
".quad 0x37316c7225202c39,0x6c672e74730a3b32,0x3233662e6c61626f,0x3337316c72255b20\n"
".quad 0x3237346625202c5d,0x36732e6464610a3b,0x3437316c72252034,0x2c30316c7225202c\n"
".quad 0x0a3b363335353620,0x34203220636f6c2e,0x616d0a3120363133,0x3436732e6f6c2e64\n"
".quad 0x2c3537316c722520,0x2c3437316c722520,0x2c3532326c722520,0x730a3b346c722520\n"
".quad 0x25203436622e6c68,0x25202c3637316c72,0x33202c3537316c72,0x732e7268730a3b32\n"
".quad 0x37316c7225203436,0x37316c7225202c37,0x2e0a3b3233202c36,0x3334203220636f6c\n"
".quad 0x6c68730a31203631,0x6c7225203436622e,0x6c7225202c383731,0x0a3b32202c373731\n"
".quad 0x203436732e646461,0x202c3937316c7225,0x25202c39376c7225,0x730a3b3837316c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3937316c,0x64610a3b39373466\n"
".quad 0x7225203436732e64,0x7225202c3038316c,0x363936202c30316c,0x636f6c2e0a3b3233\n"
".quad 0x2037313334203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c313831\n"
".quad 0x6c7225202c303831,0x6c7225202c353232,0x622e6c68730a3b34,0x38316c7225203436\n"
".quad 0x38316c7225202c32,0x730a3b3233202c31,0x25203436732e7268,0x25202c3338316c72\n"
".quad 0x33202c3238316c72,0x20636f6c2e0a3b32,0x3120373133342032,0x3436622e6c68730a\n"
".quad 0x2c3438316c722520,0x2c3338316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x376c7225202c3538,0x38316c7225202c39,0x6c672e74730a3b34,0x3233662e6c61626f\n"
".quad 0x3538316c72255b20,0x3838346625202c5d,0x36732e6464610a3b,0x3638316c72252034\n"
".quad 0x2c30316c7225202c,0x0a3b383237333720,0x34203220636f6c2e,0x616d0a3120383133\n"
".quad 0x3436732e6f6c2e64,0x2c3738316c722520,0x2c3638316c722520,0x2c3532326c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3838316c72,0x33202c3738316c72\n"
".quad 0x732e7268730a3b32,0x38316c7225203436,0x38316c7225202c39,0x2e0a3b3233202c38\n"
".quad 0x3334203220636f6c,0x6c68730a31203831,0x6c7225203436622e,0x6c7225202c303931\n"
".quad 0x0a3b32202c393831,0x203436732e646461,0x202c3139316c7225,0x25202c39376c7225\n"
".quad 0x730a3b3039316c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3139316c\n"
".quad 0x6c2e0a3b35393466,0x343334203220636f,0x3b7465720a322034,0x325f333342420a0a\n"
".quad 0x61702e646c0a3a30,0x203436752e6d6172,0x202c3432326c7225,0x74726d31315a5f5b\n"
".quad 0x42416279685f645f,0x705f6d665f536650,0x3b5d335f6d617261,0x3436622e6c68730a\n"
".quad 0x2c3239316c722520,0x2c3432326c722520,0x6f6c2e0a3b323120,0x3237313420322063\n"
".quad 0x752e7476630a3120,0x25203233752e3436,0x25202c3339316c72,0x2e7476630a3b3272\n"
".quad 0x203233752e343675,0x202c3439316c7225,0x64610a3b38317225,0x7225203436732e64\n"
".quad 0x7225202c3539316c,0x7225202c3439316c,0x76630a3b3339316c,0x33752e3436752e74\n"
".quad 0x3639316c72252032,0x2e0a3b317225202c,0x3134203220636f6c,0x64616d0a31203237\n"
".quad 0x203436732e6f6c2e,0x202c3739316c7225,0x202c3539316c7225,0x202c3432326c7225\n"
".quad 0x0a3b3639316c7225,0x203436622e6c6873,0x202c3839316c7225,0x202c3739316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3939,0x0a3b3233202c3839\n"
".quad 0x34203220636f6c2e,0x64610a3120353232,0x7225203436732e64,0x7225202c3030326c\n"
".quad 0x7225202c3939316c,0x646c0a3b3239316c,0x752e6d617261702e,0x32326c7225203436\n"
".quad 0x31315a5f5b202c32,0x79685f645f74726d,0x665f536650424162,0x5f6d617261705f6d\n"
".quad 0x617476630a3b5d31,0x626f6c672e6f742e,0x25203436752e6c61,0x25202c3130326c72\n"
".quad 0x2e0a3b3232326c72,0x3234203220636f6c,0x6c68730a31203532,0x6c7225203436622e\n"
".quad 0x6c7225202c323032,0x0a3b32202c303032,0x203436732e646461,0x202c3330326c7225\n"
".quad 0x202c3130326c7225,0x0a3b3230326c7225,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3330326c72,0x68730a3b37366625,0x7225203436622e6c,0x7225202c3430326c\n"
".quad 0x3431202c3432326c,0x36732e6464610a3b,0x3530326c72252034,0x3330326c7225202c\n"
".quad 0x3430326c7225202c,0x3220636f6c2e0a3b,0x0a31203632323420,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3530326c72,0x610a3b3838356625,0x25203436732e6464\n"
".quad 0x25202c3630326c72,0x25202c3530326c72,0x2e0a3b3430326c72,0x3234203220636f6c\n"
".quad 0x2e74730a31203732,0x662e6c61626f6c67,0x326c72255b203233,0x366625202c5d3630\n"
".quad 0x732e6464610a3b31,0x30326c7225203436,0x30326c7225202c37,0x30326c7225202c36\n"
".quad 0x20636f6c2e0a3b34,0x3120383232342032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3730326c7225,0x0a3b373835662520,0x203436732e646461,0x202c3830326c7225\n"
".quad 0x202c3730326c7225,0x0a3b3430326c7225,0x34203220636f6c2e,0x74730a3120393232\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d383032,0x2e6464610a3b3538\n"
".quad 0x326c722520343673,0x326c7225202c3930,0x326c7225202c3830,0x636f6c2e0a3b3430\n"
".quad 0x2030333234203220,0x6f6c672e74730a31,0x203233662e6c6162,0x5d3930326c72255b\n"
".quad 0x0a3b31396625202c,0x203436732e646461,0x202c3031326c7225,0x202c3930326c7225\n"
".quad 0x0a3b3430326c7225,0x34203220636f6c2e,0x74730a3120313332,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d303132,0x2e6464610a3b3337,0x326c722520343673\n"
".quad 0x326c7225202c3131,0x326c7225202c3031,0x636f6c2e0a3b3430,0x2032333234203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3131326c72255b,0x0a3b39376625202c\n"
".quad 0x203436732e646461,0x202c3231326c7225,0x202c3131326c7225,0x0a3b3430326c7225\n"
".quad 0x34203220636f6c2e,0x74730a3120333332,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d323132,0x6464610a3b323635,0x6c7225203436732e,0x6c7225202c333132\n"
".quad 0x6c7225202c323132,0x6f6c2e0a3b343032,0x3433323420322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x3331326c72255b20,0x3330316625202c5d,0x36732e6464610a3b\n"
".quad 0x3431326c72252034,0x3331326c7225202c,0x3430326c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203533323420,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3431326c72\n"
".quad 0x610a3b3234356625,0x25203436732e6464,0x25202c3531326c72,0x25202c3431326c72\n"
".quad 0x2e0a3b3430326c72,0x3234203220636f6c,0x2e74730a31203633,0x662e6c61626f6c67\n"
".quad 0x326c72255b203233,0x396625202c5d3531,0x732e6464610a3b37,0x31326c7225203436\n"
".quad 0x31326c7225202c36,0x30326c7225202c35,0x20636f6c2e0a3b34,0x3120373332342032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3631326c7225,0x0a3b313435662520\n"
".quad 0x203436732e646461,0x202c3731326c7225,0x202c3631326c7225,0x0a3b3430326c7225\n"
".quad 0x34203220636f6c2e,0x74730a3120383332,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d373132,0x6464610a3b313635,0x6c7225203436732e,0x6c7225202c383132\n"
".quad 0x6c7225202c373132,0x6f6c2e0a3b343032,0x3933323420322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x3831326c72255b20,0x3531316625202c5d,0x36732e6464610a3b\n"
".quad 0x3931326c72252034,0x3831326c7225202c,0x3430326c7225202c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203034323420,0x61626f6c672e7473,0x255b203233662e6c,0x202c5d3931326c72\n"
".quad 0x610a3b3034356625,0x25203436732e6464,0x25202c3032326c72,0x25202c3931326c72\n"
".quad 0x2e0a3b3430326c72,0x3234203220636f6c,0x2e74730a31203134,0x662e6c61626f6c67\n"
".quad 0x326c72255b203233,0x316625202c5d3032,0x2e6464610a3b3930,0x326c722520343673\n"
".quad 0x326c7225202c3132,0x326c7225202c3032,0x636f6c2e0a3b3430,0x2032343234203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3132326c72255b,0x3b3933356625202c\n"
".quad 0x203220636f6c2e0a,0x720a322034343334,0x2e0a0a7d0a3b7465,0x5a5f207972746e65\n"
".quad 0x5f645f74726d3131,0x5366504142627968,0x61702e0a286d665f,0x3436752e206d6172\n"
".quad 0x74726d31315a5f20,0x41426279685f645f,0x705f6d665f536650,0x0a2c305f6d617261\n"
".quad 0x2e206d617261702e,0x31315a5f20343675,0x79685f645f74726d,0x665f536650414262\n"
".quad 0x5f6d617261705f6d,0x617261702e0a2c31,0x5f203233662e206d,0x645f74726d31315a\n"
".quad 0x665041426279685f,0x7261705f6d665f53,0x702e0a2c325f6d61,0x36752e206d617261\n"
".quad 0x726d31315a5f2034,0x426279685f645f74,0x5f6d665f53665041,0x0a335f6d61726170\n"
".quad 0x6765722e0a7b0a29,0x6625203233662e20,0x2e0a3b3e3239353c,0x6572702e20676572\n"
".quad 0x3e37313c70252064,0x2e206765722e0a3b,0x313c722520323373,0x65722e0a3b3e3332\n"
".quad 0x25203436732e2067,0x3b3e3732323c6c72,0x61702e646c0a0a0a,0x203436752e6d6172\n"
".quad 0x5f5b202c376c7225,0x645f74726d31315a,0x665041426279685f,0x7261705f6d665f53\n"
".quad 0x6c0a3b5d305f6d61,0x2e6d617261702e64,0x326c722520343675,0x6d31315a5f5b202c\n"
".quad 0x6279685f645f7472,0x6d665f5366504142,0x335f6d617261705f,0x2e617476630a3b5d\n"
".quad 0x61626f6c672e6f74,0x7225203436752e6c,0x376c7225202c336c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203130353420,0x203233752e766f6d,0x746e25202c387225,0x6f6d0a3b782e6469\n"
".quad 0x7225203233752e76,0x6961746325202c39,0x766f6d0a3b782e64,0x317225203233752e\n"
".quad 0x2e64697425202c30,0x6c2e64616d0a3b78,0x7225203233732e6f,0x202c387225202c31\n"
".quad 0x317225202c397225,0x20636f6c2e0a3b30,0x3120323035342032,0x3233752e766f6d0a\n"
".quad 0x25202c3131722520,0x0a3b792e6469746e,0x203233752e766f6d,0x6325202c32317225\n"
".quad 0x0a3b792e64696174,0x203233752e766f6d,0x7425202c33317225,0x616d0a3b792e6469\n"
".quad 0x3233732e6f6c2e64,0x7225202c32722520,0x32317225202c3131,0x0a3b33317225202c\n"
".quad 0x34203220636f6c2e,0x6f6d0a3120333035,0x7225203233752e76,0x69746e25202c3431\n"
".quad 0x766f6d0a3b7a2e64,0x317225203233752e,0x6961746325202c35,0x766f6d0a3b7a2e64\n"
".quad 0x317225203233752e,0x2e64697425202c36,0x6c2e64616d0a3b7a,0x7225203233732e6f\n"
".quad 0x34317225202c3731,0x202c35317225202c,0x76630a3b36317225,0x33752e3436752e74\n"
".quad 0x202c346c72252032,0x6f6c2e0a3b317225,0x3430353420322063,0x732e7476630a3120\n"
".quad 0x25203233732e3436,0x327225202c386c72,0x33622e6c68730a3b,0x202c383172252032\n"
".quad 0x3b36202c37317225,0x203220636f6c2e0a,0x630a312034303534,0x732e3436732e7476\n"
".quad 0x2c396c7225203233,0x610a3b3831722520,0x25203436732e6464,0x7225202c30316c72\n"
".quad 0x386c7225202c396c,0x3220636f6c2e0a3b,0x0a31203430353420,0x732e6f6c2e64616d\n"
".quad 0x31316c7225203436,0x2c30316c7225202c,0x25202c326c722520,0x6c68730a3b346c72\n"
".quad 0x6c7225203436622e,0x316c7225202c3231,0x730a3b3233202c31,0x25203436732e7268\n"
".quad 0x7225202c33316c72,0x3b3233202c32316c,0x203220636f6c2e0a,0x730a312035313534\n"
".quad 0x25203436622e6c68,0x7225202c34316c72,0x0a3b32202c33316c,0x203436732e646461\n"
".quad 0x25202c35316c7225,0x6c7225202c336c72,0x672e646c0a3b3431,0x33662e6c61626f6c\n"
".quad 0x5b202c3266252032,0x0a3b5d35316c7225,0x203233732e646461,0x327225202c337225\n"
".quad 0x6c2e0a3b312d202c,0x323534203220636f,0x2e7476630a312034,0x203233732e343673\n"
".quad 0x25202c36316c7225,0x2e6464610a3b3372,0x316c722520343673,0x36316c7225202c37\n"
".quad 0x0a3b396c7225202c,0x203436732e646461,0x25202c38316c7225,0x3138202c37316c72\n"
".quad 0x636f6c2e0a3b3239,0x2034323534203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x316c7225202c3931,0x2c326c7225202c38,0x730a3b346c722520,0x25203436622e6c68\n"
".quad 0x7225202c30326c72,0x3b3233202c39316c,0x3436732e7268730a,0x202c31326c722520\n"
".quad 0x33202c30326c7225,0x20636f6c2e0a3b32,0x3120343235342032,0x3436622e6c68730a\n"
".quad 0x202c32326c722520,0x32202c31326c7225,0x36732e6464610a3b,0x2c33326c72252034\n"
".quad 0x25202c336c722520,0x646c0a3b32326c72,0x2e6c61626f6c672e,0x3835662520323366\n"
".quad 0x326c72255b202c37,0x636f6c2e0a3b5d33,0x2035323534203220,0x33732e6464610a31\n"
".quad 0x25202c3472252032,0x630a3b31202c3272,0x732e3436732e7476,0x2c356c7225203233\n"
".quad 0x64610a3b34722520,0x7225203436732e64,0x6c7225202c34326c,0x3b396c7225202c35\n"
".quad 0x3436732e6464610a,0x202c35326c722520,0x31202c34326c7225,0x6c2e0a3b34383336\n"
".quad 0x323534203220636f,0x2e64616d0a312035,0x25203436732e6f6c,0x7225202c36326c72\n"
".quad 0x6c7225202c35326c,0x3b346c7225202c32,0x3436622e6c68730a,0x202c37326c722520\n"
".quad 0x33202c36326c7225,0x732e7268730a3b32,0x38326c7225203436,0x2c37326c7225202c\n"
".quad 0x6f6c2e0a3b323320,0x3532353420322063,0x622e6c68730a3120,0x39326c7225203436\n"
".quad 0x2c38326c7225202c,0x2e6464610a3b3220,0x336c722520343673,0x2c336c7225202c30\n"
".quad 0x0a3b39326c722520,0x61626f6c672e646c,0x6625203233662e6c,0x72255b202c383835\n"
".quad 0x64610a3b5d30336c,0x7225203233732e64,0x2c38317225202c35,0x6c2e0a3b34362d20\n"
".quad 0x323534203220636f,0x2e7476630a312036,0x203233732e343673,0x25202c31336c7225\n"
".quad 0x2e6464610a3b3572,0x336c722520343673,0x2c386c7225202c32,0x0a3b31336c722520\n"
".quad 0x203436732e646461,0x25202c33336c7225,0x3633202c32336c72,0x6f6c2e0a3b343638\n"
".quad 0x3632353420322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c34336c\n"
".quad 0x326c7225202c3333,0x0a3b346c7225202c,0x203436622e6c6873,0x25202c35336c7225\n"
".quad 0x3233202c34336c72,0x36732e7268730a3b,0x2c36336c72252034,0x202c35336c722520\n"
".quad 0x636f6c2e0a3b3233,0x2036323534203220,0x36622e6c68730a31,0x2c37336c72252034\n"
".quad 0x202c36336c722520,0x732e6464610a3b32,0x38336c7225203436,0x202c336c7225202c\n"
".quad 0x6c0a3b37336c7225,0x6c61626f6c672e64,0x356625203233662e,0x6c72255b202c3136\n"
".quad 0x6464610a3b5d3833,0x6c7225203436732e,0x316c7225202c3933,0x31336c7225202c36\n"
".quad 0x36732e6464610a3b,0x2c30346c72252034,0x202c39336c722520,0x2e0a3b3635303534\n"
".quad 0x3534203220636f6c,0x64616d0a31203732,0x203436732e6f6c2e,0x25202c31346c7225\n"
".quad 0x7225202c30346c72,0x346c7225202c326c,0x36622e6c68730a3b,0x2c32346c72252034\n"
".quad 0x202c31346c722520,0x2e7268730a3b3233,0x346c722520343673,0x32346c7225202c33\n"
".quad 0x6c2e0a3b3233202c,0x323534203220636f,0x2e6c68730a312037,0x346c722520343662\n"
".quad 0x33346c7225202c34,0x6464610a3b32202c,0x6c7225203436732e,0x336c7225202c3534\n"
".quad 0x3b34346c7225202c,0x626f6c672e646c0a,0x25203233662e6c61,0x255b202c39333566\n"
".quad 0x610a3b5d35346c72,0x25203436732e6464,0x7225202c36346c72,0x336c7225202c356c\n"
".quad 0x732e6464610a3b31,0x37346c7225203436,0x2c36346c7225202c,0x0a3b383432333520\n"
".quad 0x34203220636f6c2e,0x616d0a3120383235,0x3436732e6f6c2e64,0x202c38346c722520\n"
".quad 0x25202c37346c7225,0x6c7225202c326c72,0x622e6c68730a3b34,0x39346c7225203436\n"
".quad 0x2c38346c7225202c,0x7268730a3b323320,0x6c7225203436732e,0x346c7225202c3035\n"
".quad 0x2e0a3b3233202c39,0x3534203220636f6c,0x6c68730a31203832,0x6c7225203436622e\n"
".quad 0x356c7225202c3135,0x64610a3b32202c30,0x7225203436732e64,0x6c7225202c32356c\n"
".quad 0x31356c7225202c33,0x6f6c672e646c0a3b,0x203233662e6c6162,0x5b202c3034356625\n"
".quad 0x0a3b5d32356c7225,0x203233732e646461,0x317225202c367225,0x2e0a3b3436202c38\n"
".quad 0x3534203220636f6c,0x7476630a31203932,0x3233732e3436732e,0x25202c366c722520\n"
".quad 0x2e6464610a3b3672,0x356c722520343673,0x2c386c7225202c33,0x610a3b366c722520\n"
".quad 0x25203436732e6464,0x7225202c34356c72,0x333735202c33356c,0x636f6c2e0a3b3434\n"
".quad 0x2039323534203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x356c7225202c3535\n"
".quad 0x2c326c7225202c34,0x730a3b346c722520,0x25203436622e6c68,0x7225202c36356c72\n"
".quad 0x3b3233202c35356c,0x3436732e7268730a,0x202c37356c722520,0x33202c36356c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120393235342032,0x3436622e6c68730a,0x202c38356c722520\n"
".quad 0x32202c37356c7225,0x36732e6464610a3b,0x2c39356c72252034,0x25202c336c722520\n"
".quad 0x646c0a3b38356c72,0x2e6c61626f6c672e,0x3635662520323366,0x356c72255b202c32\n"
".quad 0x2e6464610a3b5d39,0x366c722520343673,0x36316c7225202c30,0x0a3b366c7225202c\n"
".quad 0x203436732e646461,0x25202c31366c7225,0x3536202c30366c72,0x6f6c2e0a3b363335\n"
".quad 0x3033353420322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x6c7225202c32366c\n"
".quad 0x326c7225202c3136,0x0a3b346c7225202c,0x203436622e6c6873,0x25202c33366c7225\n"
".quad 0x3233202c32366c72,0x36732e7268730a3b,0x2c34366c72252034,0x202c33366c722520\n"
".quad 0x636f6c2e0a3b3233,0x2030333534203220,0x36622e6c68730a31,0x2c35366c72252034\n"
".quad 0x202c34366c722520,0x732e6464610a3b32,0x36366c7225203436,0x202c336c7225202c\n"
".quad 0x6c0a3b35366c7225,0x6c61626f6c672e64,0x356625203233662e,0x6c72255b202c3134\n"
".quad 0x6f6c2e0a3b5d3636,0x3233353420322063,0x2e707465730a3120,0x25203233732e7165\n"
".quad 0x37317225202c3170,0x25400a3b3336202c,0x4220617262203170,0x0a0a3b325f343342\n"
".quad 0x203436732e646461,0x25202c37366c7225,0x6c7225202c356c72,0x732e6464610a3b36\n"
".quad 0x38366c7225203436,0x2c37366c7225202c,0x0a3b383237333720,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c363232,0x5f645f74726d3131,0x5366504142627968\n"
".quad 0x617261705f6d665f,0x6c2e0a3b5d335f6d,0x333534203220636f,0x2e64616d0a312033\n"
".quad 0x25203436732e6f6c,0x7225202c39366c72,0x6c7225202c38366c,0x6c7225202c363232\n"
".quad 0x622e6c68730a3b34,0x30376c7225203436,0x2c39366c7225202c,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x376c7225202c3137,0x2e0a3b3233202c30,0x3534203220636f6c\n"
".quad 0x6c68730a31203333,0x6c7225203436622e,0x376c7225202c3237,0x64610a3b32202c31\n"
".quad 0x7225203436732e64,0x6c7225202c33376c,0x32376c7225202c33,0x6f6c672e646c0a3b\n"
".quad 0x203233662e6c6162,0x5b202c3934356625,0x0a3b5d33376c7225,0x3a325f343342420a\n"
".quad 0x3233662e766f6d0a,0x202c323435662520,0x610a3b3934356625,0x25203233732e6464\n"
".quad 0x317225202c383272,0x6c2e0a3b312d202c,0x333534203220636f,0x2e7476630a312035\n"
".quad 0x732e3233662e6e72,0x3132316625203233,0x0a3b38327225202c,0x203233662e646461\n"
".quad 0x25202c3331316625,0x6630202c31323166,0x3030303030304633,0x6e722e7476630a3b\n"
".quad 0x3233732e3233662e,0x202c323231662520,0x6464610a3b327225,0x316625203233662e\n"
".quad 0x32316625202c3332,0x3046336630202c32,0x630a3b3030303030,0x33662e6e722e7476\n"
".quad 0x6625203233732e32,0x317225202c343231,0x662e6464610a3b38,0x2c32376625203233\n"
".quad 0x202c333231662520,0x6d0a3b3432316625,0x25203233752e766f,0x3b30202c32323172\n"
".quad 0x322e786574090a0a,0x3233662e34762e64,0x66257b203233662e,0x32366625202c3136\n"
".quad 0x202c33366625202c,0x5b202c7d34366625,0x665f666552786574,0x3166257b202c4231\n"
".quad 0x32376625202c3331,0x6c2e090a0a3b5d7d,0x333534203220636f,0x2e6464610a312036\n"
".quad 0x3533722520323373,0x31202c317225202c,0x6e722e7476630a3b,0x3233732e3233662e\n"
".quad 0x202c353231662520,0x64610a3b35337225,0x6625203233662e64,0x316625202c393131\n"
".quad 0x46336630202c3532,0x0a3b303030303030,0x64322e786574090a,0x2e3233662e34762e\n"
".quad 0x3666257b20323366,0x2c38366625202c37,0x25202c3936662520,0x745b202c7d303766\n"
".quad 0x33665f6665527865,0x313166257b202c42,0x7d32376625202c39,0x6f6c2e090a0a3b5d\n"
".quad 0x3733353420322063,0x722e7476630a3120,0x33732e3233662e6e,0x2c36323166252032\n"
".quad 0x64610a3b33722520,0x6625203233662e64,0x316625202c373231,0x46336630202c3632\n"
".quad 0x0a3b303030303030,0x203233662e646461,0x6625202c34386625,0x316625202c373231\n"
".quad 0x6574090a0a3b3432,0x2e34762e64322e78,0x203233662e323366,0x25202c333766257b\n"
".quad 0x376625202c343766,0x7d36376625202c35,0x65527865745b202c,0x7b202c4235665f66\n"
".quad 0x25202c3331316625,0x0a0a3b5d7d343866,0x322e786574090a09,0x3233662e34762e64\n"
".quad 0x66257b203233662e,0x30386625202c3937,0x202c31386625202c,0x5b202c7d32386625\n"
".quad 0x665f666552786574,0x3166257b202c4236,0x34386625202c3931,0x6c2e090a0a3b5d7d\n"
".quad 0x333534203220636f,0x2e7476630a312039,0x732e3233662e6e72,0x3832316625203233\n"
".quad 0x610a3b347225202c,0x25203233662e6464,0x6625202c39323166,0x336630202c383231\n"
".quad 0x3b30303030303046,0x3233662e6464610a,0x25202c3639662520,0x6625202c39323166\n"
".quad 0x74090a0a3b343231,0x34762e64322e7865,0x3233662e3233662e,0x202c353866257b20\n"
".quad 0x6625202c36386625,0x38386625202c3738,0x527865745b202c7d,0x202c4237665f6665\n"
".quad 0x202c39313166257b,0x0a3b5d7d36396625,0x2e786574090a090a,0x33662e34762e6432\n"
".quad 0x257b203233662e32,0x396625202c313966,0x2c33396625202c32,0x202c7d3439662520\n"
".quad 0x5f6665527865745b,0x66257b202c423866,0x396625202c333131,0x2e090a0a3b5d7d36\n"
".quad 0x3534203220636f6c,0x7476630a31203134,0x2e3233662e6e722e,0x3331662520323373\n"
".quad 0x0a3b367225202c30,0x203233662e646461,0x25202c3830316625,0x6625202c33323166\n"
".quad 0x74090a0a3b303331,0x34762e64322e7865,0x3233662e3233662e,0x202c373966257b20\n"
".quad 0x6625202c38396625,0x30316625202c3939,0x7865745b202c7d30,0x423531665f666552\n"
".quad 0x33313166257b202c,0x7d3830316625202c,0x74090a090a0a3b5d,0x34762e64322e7865\n"
".quad 0x3233662e3233662e,0x2c33303166257b20,0x202c343031662520,0x25202c3530316625\n"
".quad 0x5b202c7d36303166,0x665f666552786574,0x66257b202c423731,0x316625202c393131\n"
".quad 0x090a0a3b5d7d3830,0x34203220636f6c2e,0x76630a3120333435,0x3233662e6e722e74\n"
".quad 0x316625203233732e,0x3b357225202c3133,0x3233662e6464610a,0x202c303231662520\n"
".quad 0x25202c3332316625,0x090a0a3b31333166,0x762e64322e786574,0x33662e3233662e34\n"
".quad 0x39303166257b2032,0x2c3031316625202c,0x202c313131662520,0x202c7d3231316625\n"
".quad 0x5f6665527865745b,0x257b202c42303166,0x6625202c33313166,0x0a0a3b5d7d303231\n"
".quad 0x322e786574090a09,0x3233662e34762e64,0x66257b203233662e,0x316625202c353131\n"
".quad 0x31316625202c3631,0x3831316625202c37,0x527865745b202c7d,0x2c423231665f6665\n"
".quad 0x2c39313166257b20,0x5d7d303231662520,0x636f6c2e090a0a3b,0x3120343131203220\n"
".quad 0x71652e707465730a,0x327025203233732e,0x30202c327225202c,0x652e707465730a3b\n"
".quad 0x7025203233732e71,0x202c317225202c33,0x702e726f0a3b3336,0x2c34702520646572\n"
".quad 0x7025202c33702520,0x20636f6c2e0a3b32,0x0a31203431312032,0x2e71652e70746573\n"
".quad 0x2c35702520323373,0x3336202c32722520,0x6572702e726f0a3b,0x25202c3670252064\n"
".quad 0x3b357025202c3470,0x203220636f6c2e0a,0x65730a3120343131,0x33732e71652e7074\n"
".quad 0x25202c3770252032,0x0a3b30202c373172,0x20646572702e726f,0x367025202c387025\n"
".quad 0x6f0a3b377025202c,0x2520646572702e72,0x2c387025202c3970,0x6c2e0a3b31702520\n"
".quad 0x343534203220636f,0x2e766f6d0a312034,0x3035662520323366,0x3531316625202c36\n"
".quad 0x3220636f6c2e0a3b,0x0a31203334353420,0x203233662e766f6d,0x25202c3235356625\n"
".quad 0x6c2e0a3b39303166,0x343534203220636f,0x2e766f6d0a312032,0x3035662520323366\n"
".quad 0x3330316625202c37,0x3220636f6c2e0a3b,0x0a31203134353420,0x203233662e766f6d\n"
".quad 0x25202c3739346625,0x6f6c2e0a3b373966,0x3034353420322063,0x662e766f6d0a3120\n"
".quad 0x3536356625203233,0x0a3b31396625202c,0x34203220636f6c2e,0x6f6d0a3120393335\n"
".quad 0x6625203233662e76,0x386625202c353735,0x20636f6c2e0a3b35,0x3120383335342032\n"
".quad 0x3233662e766f6d0a,0x202c343735662520,0x6c2e0a3b39376625,0x333534203220636f\n"
".quad 0x2e766f6d0a312037,0x3735662520323366,0x3b33376625202c38,0x203220636f6c2e0a\n"
".quad 0x6d0a312035333534,0x25203233662e766f,0x6625202c31393566,0x636f6c2e0a3b3136\n"
".quad 0x3120343131203220,0x726220397025400a,0x355f343342422061,0x20636f6c2e0a0a3b\n"
".quad 0x0a31203631312032,0x2e71652e70746573,0x3031702520323373,0x30202c317225202c\n"
".quad 0x2030317025400a3b,0x3433424220617262,0x2e6172620a3b345f,0x3433424220696e75\n"
".quad 0x3342420a0a3b365f,0x766f6d0a3a345f34,0x317225203233752e,0x620a3b33202c3232\n"
".quad 0x4220696e752e6172,0x0a0a3b365f343342,0x0a3a355f34334242,0x203233752e766f6d\n"
".quad 0x31202c3232317225,0x5f343342420a0a3b,0x20636f6c2e0a3a36,0x3120383435342032\n"
".quad 0x71652e707465730a,0x317025203233732e,0x3232317225202c31,0x7025400a3b31202c\n"
".quad 0x4220617262203131,0x0a3b30325f343342,0x203220636f6c2e0a,0x730a312036303634\n"
".quad 0x732e71652e707465,0x2c32317025203233,0x202c323231722520,0x32317025400a3b33\n"
".quad 0x3342422061726220,0x6172620a3b385f34,0x33424220696e752e,0x420a0a3b39315f34\n"
".quad 0x2e0a3a385f343342,0x3331203220636f6c,0x327025400a312036,0x3342422061726220\n"
".quad 0x2e0a0a3b32315f34,0x3431203220636f6c,0x357025400a312032,0x3342422061726220\n"
".quad 0x6d0a0a3b31315f34,0x25203233662e766f,0x6625202c38343566,0x766f6d0a3b323435\n"
".quad 0x356625203233662e,0x34356625202c3734,0x662e766f6d0a3b31,0x3135356625203233\n"
".quad 0x3b3034356625202c,0x3233662e766f6d0a,0x202c303535662520,0x6d0a3b3933356625\n"
".quad 0x25203233662e766f,0x6625202c37373566,0x766f6d0a3b353735,0x356625203233662e\n"
".quad 0x37356625202c3637,0x662e766f6d0a3b34,0x3039356625203233,0x3b3838356625202c\n"
".quad 0x3233662e766f6d0a,0x202c393835662520,0x620a3b3738356625,0x4220696e752e6172\n"
".quad 0x0a3b33315f343342,0x31315f343342420a,0x33662e766f6d0a3a,0x2c37343566252032\n"
".quad 0x0a3b313435662520,0x203233662e766f6d,0x25202c3834356625,0x6f6d0a3b31343566\n"
".quad 0x6625203233662e76,0x356625202c303535,0x2e766f6d0a3b3933,0x3535662520323366\n"
".quad 0x3933356625202c31,0x33662e766f6d0a3b,0x2c36373566252032,0x0a3b343735662520\n"
".quad 0x203233662e766f6d,0x25202c3737356625,0x6f6d0a3b34373566,0x6625203233662e76\n"
".quad 0x356625202c393835,0x2e766f6d0a3b3738,0x3935662520323366,0x3738356625202c30\n"
".quad 0x6e752e6172620a3b,0x315f343342422069,0x343342420a0a3b33,0x766f6d0a3a32315f\n"
".quad 0x356625203233662e,0x34356625202c3734,0x662e766f6d0a3b32,0x3834356625203233\n"
".quad 0x3b3234356625202c,0x3233662e766f6d0a,0x202c303535662520,0x6d0a3b3034356625\n"
".quad 0x25203233662e766f,0x6625202c31353566,0x766f6d0a3b303435,0x356625203233662e\n"
".quad 0x37356625202c3637,0x662e766f6d0a3b35,0x3737356625203233,0x3b3537356625202c\n"
".quad 0x3233662e766f6d0a,0x202c393835662520,0x6d0a3b3838356625,0x25203233662e766f\n"
".quad 0x6625202c30393566,0x42420a0a3b383835,0x6d0a3a33315f3433,0x25203233662e766f\n"
".quad 0x6625202c38383566,0x766f6d0a3b303935,0x356625203233662e,0x38356625202c3738\n"
".quad 0x662e766f6d0a3b39,0x3537356625203233,0x3b3737356625202c,0x3233662e766f6d0a\n"
".quad 0x202c343735662520,0x6d0a3b3637356625,0x25203233662e766f,0x356625202c343266\n"
".quad 0x2e766f6d0a3b3135,0x3532662520323366,0x3b3035356625202c,0x3233662e766f6d0a\n"
".quad 0x25202c3232662520,0x6f6d0a3b38343566,0x6625203233662e76,0x34356625202c3332\n"
".quad 0x20636f6c2e0a3b37,0x0a31203834312032,0x6172622037702540,0x37315f3433424220\n"
".quad 0x20636f6c2e0a0a3b,0x0a31203535312032,0x6172622031702540,0x36315f3433424220\n"
".quad 0x662e766f6d0a0a3b,0x3930356625203233,0x3b3730356625202c,0x3233662e766f6d0a\n"
".quad 0x202c383035662520,0x6d0a3b3630356625,0x25203233662e766f,0x6625202c35343566\n"
".quad 0x2e766f6d0a3b3332,0x3435662520323366,0x3b32326625202c36,0x3233662e766f6d0a\n"
".quad 0x202c333435662520,0x6f6d0a3b35326625,0x6625203233662e76,0x326625202c343435\n"
".quad 0x662e766f6d0a3b34,0x3436356625203233,0x3b3236356625202c,0x3233662e766f6d0a\n"
".quad 0x202c333635662520,0x620a3b3136356625,0x4220696e752e6172,0x0a3b38315f343342\n"
".quad 0x36315f343342420a,0x33662e766f6d0a3a,0x2c38303566252032,0x0a3b363035662520\n"
".quad 0x203233662e766f6d,0x25202c3930356625,0x6f6d0a3b36303566,0x6625203233662e76\n"
".quad 0x326625202c353435,0x662e766f6d0a3b35,0x3634356625203233,0x0a3b34326625202c\n"
".quad 0x203233662e766f6d,0x25202c3334356625,0x766f6d0a3b353266,0x356625203233662e\n"
".quad 0x34326625202c3434,0x33662e766f6d0a3b,0x2c33363566252032,0x0a3b313635662520\n"
".quad 0x203233662e766f6d,0x25202c3436356625,0x72620a3b31363566,0x424220696e752e61\n"
".quad 0x0a0a3b38315f3433,0x3a37315f34334242,0x3233662e766f6d0a,0x202c383035662520\n"
".quad 0x6d0a3b3730356625,0x25203233662e766f,0x6625202c39303566,0x766f6d0a3b373035\n"
".quad 0x356625203233662e,0x33326625202c3534,0x33662e766f6d0a3b,0x2c36343566252032\n"
".quad 0x6d0a3b3232662520,0x25203233662e766f,0x6625202c33343566,0x2e766f6d0a3b3332\n"
".quad 0x3435662520323366,0x3b32326625202c34,0x3233662e766f6d0a,0x202c333635662520\n"
".quad 0x6d0a3b3236356625,0x25203233662e766f,0x6625202c34363566,0x42420a0a3b323635\n"
".quad 0x6d0a3a38315f3433,0x25203233662e766f,0x6625202c32363566,0x766f6d0a3b343635\n"
".quad 0x356625203233662e,0x36356625202c3136,0x662e766f6d0a3b33,0x3234356625203233\n"
".quad 0x3b3634356625202c,0x3233662e766f6d0a,0x202c313435662520,0x6d0a3b3534356625\n"
".quad 0x25203233662e766f,0x6625202c30343566,0x766f6d0a3b343435,0x356625203233662e\n"
".quad 0x34356625202c3933,0x662e766f6d0a3b33,0x3730356625203233,0x3b3930356625202c\n"
".quad 0x3233662e766f6d0a,0x202c363035662520,0x6d0a3b3830356625,0x25203233662e766f\n"
".quad 0x6630202c32333166,0x3030303030433034,0x3220636f6c2e0a3b,0x6d0a312039363120\n"
".quad 0x25203233662e6c75,0x6625202c33333166,0x306630202c323331,0x3b30303030303030\n"
".quad 0x3233662e766f6d0a,0x202c343331662520,0x3030303030306630,0x2e766f6d0a3b3030\n"
".quad 0x3331662520323366,0x3644336630202c35,0x2e0a3b3933453833,0x3536203320636f6c\n"
".quad 0x2e616d660a352030,0x25203233662e6e72,0x6625202c31393566,0x316625202c353331\n"
".quad 0x37366625202c3333,0x3220636f6c2e0a3b,0x610a312030373120,0x25203233662e6464\n"
".quad 0x6625202c36333166,0x336630202c343331,0x3b41303744334144,0x3233662e6c756d0a\n"
".quad 0x202c373331662520,0x30202c3633316625,0x3030303043303466,0x662e766f6d0a3b30\n"
".quad 0x3833316625203233,0x334543336630202c,0x6c2e0a3b39334538,0x303536203320636f\n"
".quad 0x722e616d660a3520,0x6625203233662e6e,0x316625202c383735,0x33316625202c3833\n"
".quad 0x3537356625202c37,0x3220636f6c2e0a3b,0x730a312031373120,0x25203233662e6275\n"
".quad 0x6625202c39333166,0x336630202c343331,0x3b41303744334144,0x3233662e6c756d0a\n"
".quad 0x202c303431662520,0x30202c3933316625,0x3030303043303466,0x20636f6c2e0a3b30\n"
".quad 0x0a35203035362033,0x662e6e722e616d66,0x3536356625203233,0x2c3833316625202c\n"
".quad 0x202c303431662520,0x2e0a3b3437356625,0x3731203220636f6c,0x2e6464610a312032\n"
".quad 0x3431662520323366,0x3433316625202c31,0x303030306630202c,0x756d0a3b30303030\n"
".quad 0x6625203233662e6c,0x316625202c323431,0x30346630202c3134,0x0a3b303030303043\n"
".quad 0x36203320636f6c2e,0x616d660a35203035,0x203233662e6e722e,0x25202c3235356625\n"
".quad 0x6625202c38333166,0x356625202c323431,0x636f6c2e0a3b3730,0x3120333731203220\n"
".quad 0x3233662e6275730a,0x202c333431662520,0x30202c3433316625,0x3030303030303066\n"
".quad 0x662e6c756d0a3b30,0x3434316625203233,0x2c3334316625202c,0x3030433034663020\n"
".quad 0x6f6c2e0a3b303030,0x2030353620332063,0x6e722e616d660a35,0x346625203233662e\n"
".quad 0x33316625202c3739,0x3434316625202c38,0x3b3630356625202c,0x315f343342420a0a\n"
".quad 0x20636f6c2e0a3a39,0x3120323136342032,0x3233662e6275730a,0x202c353431662520\n"
".quad 0x25202c3139356625,0x6464610a3b373666,0x316625203233662e,0x34316625202c3634\n"
".quad 0x3837356625202c35,0x33662e6275730a3b,0x2c37343166252032,0x202c363431662520\n"
".quad 0x730a3b3437356625,0x25203233662e6275,0x6625202c38343166,0x356625202c373431\n"
".quad 0x2e6464610a3b3537,0x3431662520323366,0x3834316625202c39,0x3b3536356625202c\n"
".quad 0x3233662e6464610a,0x202c303531662520,0x25202c3934316625,0x75730a3b32353566\n"
".quad 0x6625203233662e62,0x316625202c313531,0x30356625202c3035,0x662e6464610a3b36\n"
".quad 0x3235316625203233,0x2c3135316625202c,0x0a3b373934662520,0x203233662e627573\n"
".quad 0x25202c3335316625,0x6625202c32353166,0x6275730a3b373035,0x316625203233662e\n"
".quad 0x38356625202c3435,0x3838356625202c37,0x33662e6464610a3b,0x2c35353166252032\n"
".quad 0x202c343531662520,0x610a3b3837356625,0x25203233662e6464,0x6625202c36353166\n"
".quad 0x356625202c353531,0x2e6275730a3b3437,0x3531662520323366,0x3635316625202c37\n"
".quad 0x3b3537356625202c,0x3233662e6275730a,0x202c383531662520,0x25202c3735316625\n"
".quad 0x64610a3b35363566,0x6625203233662e64,0x316625202c393531,0x33356625202c3835\n"
".quad 0x662e6275730a3b39,0x3036316625203233,0x2c3935316625202c,0x0a3b303435662520\n"
".quad 0x203233662e646461,0x25202c3136316625,0x6625202c30363166,0x6275730a3b313435\n"
".quad 0x316625203233662e,0x36316625202c3236,0x3234356625202c31,0x33662e6464610a3b\n"
".quad 0x2c33363166252032,0x202c313635662520,0x610a3b3235356625,0x25203233662e6464\n"
".quad 0x6625202c34363166,0x356625202c333631,0x2e6464610a3b3933,0x3631662520323366\n"
".quad 0x3436316625202c35,0x3b3630356625202c,0x3233662e6464610a,0x202c363631662520\n"
".quad 0x25202c3536316625,0x75730a3b30343566,0x6625203233662e62,0x316625202c373631\n"
".quad 0x36356625202c3636,0x662e6275730a3b32,0x3836316625203233,0x2c3736316625202c\n"
".quad 0x0a3b373934662520,0x203233662e627573,0x25202c3936316625,0x6625202c38363166\n"
".quad 0x6275730a3b313435,0x316625203233662e,0x36316625202c3037,0x3730356625202c39\n"
".quad 0x33662e6275730a3b,0x2c31373166252032,0x202c303731662520,0x730a3b3234356625\n"
".quad 0x25203233662e6275,0x6625202c32373166,0x326625202c383735,0x3220636f6c2e0a3b\n"
".quad 0x0a31203231363420,0x203233662e646461,0x25202c3337316625,0x6625202c32373166\n"
".quad 0x6464610a3b343735,0x316625203233662e,0x37316625202c3437,0x3537356625202c33\n"
".quad 0x33662e6464610a3b,0x2c35373166252032,0x202c343731662520,0x610a3b3536356625\n"
".quad 0x25203233662e6464,0x6625202c36373166,0x356625202c353731,0x2e6464610a3b3235\n"
".quad 0x3731662520323366,0x3637316625202c37,0x3b3933356625202c,0x3233662e6464610a\n"
".quad 0x202c383731662520,0x25202c3737316625,0x64610a3b36303566,0x6625203233662e64\n"
".quad 0x316625202c393731,0x34356625202c3837,0x662e6464610a3b30,0x3038316625203233\n"
".quad 0x2c3937316625202c,0x0a3b373934662520,0x203233662e646461,0x25202c3138316625\n"
".quad 0x6625202c30383166,0x6464610a3b313435,0x316625203233662e,0x38316625202c3238\n"
".quad 0x3730356625202c31,0x33662e6464610a3b,0x2c33383166252032,0x202c323831662520\n"
".quad 0x6d0a3b3234356625,0x25203233662e6c75,0x6625202c34383166,0x316625202c323631\n"
".quad 0x2e616d660a3b3236,0x25203233662e6e72,0x6625202c35383166,0x316625202c333531\n"
".quad 0x38316625202c3335,0x662e6c756d0a3b34,0x3638316625203233,0x2c3137316625202c\n"
".quad 0x0a3b313731662520,0x662e6e722e616d66,0x3738316625203233,0x2c3137316625202c\n"
".quad 0x202c313731662520,0x730a3b3538316625,0x25203233662e6275,0x6625202c38383166\n"
".quad 0x316625202c333831,0x2e6c756d0a3b3738,0x3831662520323366,0x3139356625202c39\n"
".quad 0x303830436630202c,0x6d660a3b30303030,0x3233662e6e722e61,0x202c303931662520\n"
".quad 0x346630202c326625,0x2c30303030303431,0x0a3b393831662520,0x662e6e722e616d66\n"
".quad 0x3139316625203233,0x2c3738356625202c,0x3030383043663020,0x316625202c303030\n"
".quad 0x2e616d660a3b3039,0x25203233662e6e72,0x6625202c32393166,0x30436630202c3736\n"
".quad 0x202c303030303038,0x660a3b3139316625,0x33662e6e722e616d,0x2c33393166252032\n"
".quad 0x202c383835662520,0x3030303830436630,0x39316625202c3030,0x662e6464610a3b32\n"
".quad 0x3439316625203233,0x2c3339316625202c,0x0a3b383735662520,0x203233662e646461\n"
".quad 0x25202c3539316625,0x6625202c34393166,0x6464610a3b343735,0x316625203233662e\n"
".quad 0x39316625202c3639,0x3537356625202c35,0x33662e6464610a3b,0x2c37393166252032\n"
".quad 0x202c363931662520,0x660a3b3536356625,0x33662e6e722e616d,0x2c38393166252032\n"
".quad 0x202c313635662520,0x3030303830436630,0x39316625202c3030,0x662e6464610a3b37\n"
".quad 0x3939316625203233,0x2c3839316625202c,0x0a3b323535662520,0x203233662e646461\n"
".quad 0x25202c3030326625,0x6625202c39393166,0x6464610a3b393335,0x326625203233662e\n"
".quad 0x30326625202c3130,0x3630356625202c30,0x33662e6464610a3b,0x2c32303266252032\n"
".quad 0x202c313032662520,0x660a3b3034356625,0x33662e6e722e616d,0x2c33303266252032\n"
".quad 0x202c323635662520,0x3030303830436630,0x30326625202c3030,0x662e6464610a3b32\n"
".quad 0x3430326625203233,0x2c3330326625202c,0x0a3b373934662520,0x203233662e646461\n"
".quad 0x25202c3530326625,0x6625202c34303266,0x6464610a3b313435,0x326625203233662e\n"
".quad 0x30326625202c3630,0x3730356625202c35,0x33662e6464610a3b,0x2c37303266252032\n"
".quad 0x202c363032662520,0x660a3b3234356625,0x33662e6e722e616d,0x2c38303266252032\n"
".quad 0x202c373831662520,0x3534314630346630,0x30326625202c3431,0x662e6c756d0a3b37\n"
".quad 0x3930326625203233,0x202c37366625202c,0x3030304130346630,0x2e616d660a3b3030\n"
".quad 0x25203233662e6e72,0x6625202c30313266,0x436630202c313935,0x2c30303030304130\n"
".quad 0x0a3b393032662520,0x662e6e722e616d66,0x3131326625203233,0x2c3335316625202c\n"
".quad 0x3535444633663020,0x326625202c353535,0x2e6c756d0a3b3031,0x3132662520323366\n"
".quad 0x3838356625202c32,0x304130346630202c,0x6d660a3b30303030,0x3233662e6e722e61\n"
".quad 0x202c333132662520,0x30202c3738356625,0x3030303041304366,0x3231326625202c30\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x36316625202c3431,0x4446336630202c32\n"
".quad 0x25202c3535353535,0x756d0a3b33313266,0x6625203233662e6c,0x356625202c353132\n"
".quad 0x30346630202c3236,0x0a3b303030303041,0x662e6e722e616d66,0x3631326625203233\n"
".quad 0x2c3136356625202c,0x3030413043663020,0x326625202c303030,0x2e616d660a3b3531\n"
".quad 0x25203233662e6e72,0x6625202c37313266,0x336630202c313731,0x2c35353535354446\n"
".quad 0x0a3b363132662520,0x203233662e646461,0x25202c3831326625,0x6625202c31393566\n"
".quad 0x6275730a3b313935,0x326625203233662e,0x31326625202c3931,0x3738356625202c38\n"
".quad 0x3220636f6c2e0a3b,0x0a31203231363420,0x203233662e646461,0x25202c3032326625\n"
".quad 0x366625202c373666,0x662e6464610a3b37,0x3132326625203233,0x2c3931326625202c\n"
".quad 0x0a3b303232662520,0x203233662e627573,0x25202c3232326625,0x6625202c31323266\n"
".quad 0x6f6c2e0a3b383835,0x3231363420322063,0x662e6464610a3120,0x3332326625203233\n"
".quad 0x2c3232326625202c,0x0a3b383735662520,0x203233662e646461,0x25202c3432326625\n"
".quad 0x6625202c33323266,0x6464610a3b343735,0x326625203233662e,0x32326625202c3532\n"
".quad 0x3537356625202c34,0x33662e6464610a3b,0x2c36323266252032,0x202c353232662520\n"
".quad 0x730a3b3536356625,0x25203233662e6275,0x6625202c37323266,0x356625202c363232\n"
".quad 0x636f6c2e0a3b3136,0x2032313634203220,0x33662e6464610a31,0x2c38323266252032\n"
".quad 0x202c373232662520,0x6d0a3b3235356625,0x25203233662e766f,0x6630202c39323266\n"
".quad 0x3030303030303043,0x3220636f6c2e0a3b,0x0a31203231363420,0x662e6e722e616d66\n"
".quad 0x3033326625203233,0x2c3933356625202c,0x3030303043663020,0x326625202c303030\n"
".quad 0x2e6464610a3b3832,0x3332662520323366,0x3033326625202c31,0x3b3630356625202c\n"
".quad 0x2e6e722e616d660a,0x3332662520323366,0x3034356625202c32,0x303030436630202c\n"
".quad 0x6625202c30303030,0x6275730a3b313332,0x326625203233662e,0x33326625202c3333\n"
".quad 0x3236356625202c32,0x3220636f6c2e0a3b,0x0a31203231363420,0x203233662e646461\n"
".quad 0x25202c3433326625,0x6625202c33333266,0x616d660a3b373934,0x203233662e6e722e\n"
".quad 0x25202c3533326625,0x6630202c31343566,0x3030303030303043,0x3b3433326625202c\n"
".quad 0x3233662e6464610a,0x202c363332662520,0x25202c3533326625,0x6d660a3b37303566\n"
".quad 0x3233662e6e722e61,0x202c373332662520,0x30202c3234356625,0x3030303030304366\n"
".quad 0x3633326625202c30,0x33662e6464610a3b,0x2c38333266252032,0x202c333531662520\n"
".quad 0x660a3b3335316625,0x33662e6e722e616d,0x2c39333266252032,0x202c323631662520\n"
".quad 0x25202c3236316625,0x656e0a3b36383166,0x6625203233662e67,0x326625202c303432\n"
".quad 0x2e616d660a3b3933,0x25203233662e6e72,0x6625202c31343266,0x316625202c383332\n"
".quad 0x34326625202c3335,0x662e6275730a3b30,0x3234326625203233,0x2c3733326625202c\n"
".quad 0x0a3b313432662520,0x203233662e646461,0x25202c3334326625,0x6625202c37383566\n"
".quad 0x616d660a3b373835,0x203233662e6e722e,0x25202c3434326625,0x6630202c31393566\n"
".quad 0x3030303030383043,0x3b3334326625202c,0x2e6e722e616d660a,0x3432662520323366\n"
".quad 0x2c37366625202c35,0x3030383043663020,0x326625202c303030,0x2e6464610a3b3434\n"
".quad 0x3432662520323366,0x3838356625202c36,0x3b3838356625202c,0x3233662e6464610a\n"
".quad 0x202c373432662520,0x25202c3534326625,0x64610a3b36343266,0x6625203233662e64\n"
".quad 0x326625202c383432,0x37356625202c3734,0x662e6464610a3b38,0x3934326625203233\n"
".quad 0x2c3834326625202c,0x0a3b343735662520,0x203233662e646461,0x25202c3035326625\n"
".quad 0x6625202c39343266,0x6464610a3b353735,0x326625203233662e,0x35326625202c3135\n"
".quad 0x3536356625202c30,0x33662e6464610a3b,0x2c32353266252032,0x202c313635662520\n"
".quad 0x610a3b3136356625,0x25203233662e6464,0x6625202c33353266,0x326625202c313532\n"
".quad 0x2e6464610a3b3235,0x3532662520323366,0x3335326625202c34,0x3b3235356625202c\n"
".quad 0x2e6e722e616d660a,0x3532662520323366,0x3933356625202c35,0x303030436630202c\n"
".quad 0x6625202c30303030,0x6464610a3b343532,0x326625203233662e,0x35326625202c3635\n"
".quad 0x3630356625202c35,0x6e722e616d660a3b,0x326625203233662e,0x34356625202c3735\n"
".quad 0x3030436630202c30,0x25202c3030303030,0x64610a3b36353266,0x6625203233662e64\n"
".quad 0x356625202c383532,0x36356625202c3236,0x662e6464610a3b32,0x3935326625203233\n"
".quad 0x2c3735326625202c,0x0a3b383532662520,0x203233662e646461,0x25202c3036326625\n"
".quad 0x6625202c39353266,0x616d660a3b373934,0x203233662e6e722e,0x25202c3136326625\n"
".quad 0x6630202c31343566,0x3030303030303043,0x3b3036326625202c,0x3233662e6464610a\n"
".quad 0x202c323632662520,0x25202c3136326625,0x6d660a3b37303566,0x3233662e6e722e61\n"
".quad 0x202c333632662520,0x30202c3234356625,0x3030303030304366,0x3236326625202c30\n"
".quad 0x33662e6464610a3b,0x2c34363266252032,0x202c373835662520,0x610a3b3838356625\n"
".quad 0x25203233662e6464,0x6625202c35363266,0x356625202c343632,0x2e6464610a3b3837\n"
".quad 0x3632662520323366,0x3536326625202c36,0x3b3437356625202c,0x3233662e6464610a\n"
".quad 0x202c373632662520,0x25202c3636326625,0x64610a3b35373566,0x6625203233662e64\n"
".quad 0x326625202c383632,0x36356625202c3736,0x662e6275730a3b35,0x3936326625203233\n"
".quad 0x2c3836326625202c,0x0a3b313635662520,0x203233662e627573,0x25202c3037326625\n"
".quad 0x6625202c39363266,0x6275730a3b323535,0x326625203233662e,0x37326625202c3137\n"
".quad 0x3630356625202c30,0x33662e6275730a3b,0x2c32373266252032,0x202c313732662520\n"
".quad 0x730a3b3236356625,0x25203233662e6275,0x6625202c33373266,0x346625202c323732\n"
".quad 0x2e6275730a3b3739,0x3732662520323366,0x3337326625202c34,0x3b3730356625202c\n"
".quad 0x203220636f6c2e0a,0x6e0a312032313634,0x25203233662e6765,0x6625202c35373266\n"
".quad 0x616d660a3b313731,0x203233662e6e722e,0x25202c3637326625,0x6625202c35373266\n"
".quad 0x316625202c313731,0x2e6275730a3b3438,0x3732662520323366,0x3437326625202c37\n"
".quad 0x3b3637326625202c,0x3233662e67656e0a,0x202c383732662520,0x660a3b3634326625\n"
".quad 0x33662e6e722e616d,0x2c39373266252032,0x202c373835662520,0x25202c3932326625\n"
".quad 0x64610a3b38373266,0x6625203233662e64,0x326625202c303832,0x37356625202c3937\n"
".quad 0x662e6464610a3b38,0x3138326625203233,0x2c3038326625202c,0x0a3b343735662520\n"
".quad 0x203233662e646461,0x25202c3238326625,0x6625202c31383266,0x6464610a3b353735\n"
".quad 0x326625203233662e,0x38326625202c3338,0x3536356625202c32,0x33662e6464610a3b\n"
".quad 0x2c34383266252032,0x202c333832662520,0x730a3b3235326625,0x25203233662e6275\n"
".quad 0x6625202c35383266,0x356625202c343832,0x2e6275730a3b3235,0x3832662520323366\n"
".quad 0x3538326625202c36,0x3b3630356625202c,0x203220636f6c2e0a,0x610a312032313634\n"
".quad 0x25203233662e6464,0x6625202c37383266,0x326625202c363832,0x2e6275730a3b3835\n"
".quad 0x3832662520323366,0x3738326625202c38,0x3b3739346625202c,0x3233662e6275730a\n"
".quad 0x202c393832662520,0x25202c3838326625,0x75730a3b37303566,0x6625203233662e62\n"
".quad 0x356625202c303932,0x37356625202c3837,0x20636f6c2e0a3b34,0x3120323136342032\n"
".quad 0x3233662e6464610a,0x202c313932662520,0x25202c3039326625,0x75730a3b35373566\n"
".quad 0x6625203233662e62,0x326625202c323932,0x36356625202c3139,0x20636f6c2e0a3b35\n"
".quad 0x3120323136342032,0x3233662e67656e0a,0x202c333932662520,0x660a3b3335316625\n"
".quad 0x33662e6e722e616d,0x2c34393266252032,0x202c333932662520,0x25202c3236316625\n"
".quad 0x75730a3b32393266,0x6625203233662e62,0x356625202c353932,0x34356625202c3933\n"
".quad 0x662e6275730a3b30,0x3639326625203233,0x2c3539326625202c,0x0a3b313435662520\n"
".quad 0x34203220636f6c2e,0x64610a3120323136,0x6625203233662e64,0x326625202c373932\n"
".quad 0x34356625202c3639,0x662e67656e0a3b32,0x3839326625203233,0x3b3236316625202c\n"
".quad 0x2e6e722e616d660a,0x3932662520323366,0x3839326625202c39,0x2c3137316625202c\n"
".quad 0x0a3b373932662520,0x203233662e627573,0x25202c3030336625,0x6625202c32353566\n"
".quad 0x6275730a3b363035,0x336625203233662e,0x30336625202c3130,0x3739346625202c30\n"
".quad 0x3220636f6c2e0a3b,0x0a31203231363420,0x203233662e646461,0x25202c3230336625\n"
".quad 0x6625202c31303366,0x616d660a3b373035,0x203233662e6e722e,0x25202c3330336625\n"
".quad 0x6625202c33393266,0x336625202c313731,0x2e6275730a3b3230,0x3033662520323366\n"
".quad 0x3039326625202c34,0x3b3537356625202c,0x203220636f6c2e0a,0x610a312032313634\n"
".quad 0x25203233662e6464,0x6625202c35303366,0x356625202c343033,0x2e6275730a3b3536\n"
".quad 0x3033662520323366,0x3530336625202c36,0x3b3235356625202c,0x3233662e6464610a\n"
".quad 0x202c373033662520,0x25202c3630336625,0x75730a3b36303566,0x6625203233662e62\n"
".quad 0x336625202c383033,0x39346625202c3730,0x20636f6c2e0a3b37,0x3120323136342032\n"
".quad 0x3233662e6464610a,0x202c393033662520,0x25202c3830336625,0x656e0a3b37303566\n"
".quad 0x6625203233662e67,0x356625202c303133,0x2e6275730a3b3437,0x3133662520323366\n"
".quad 0x3031336625202c31,0x3b3837356625202c,0x203220636f6c2e0a,0x610a312032313634\n"
".quad 0x25203233662e6464,0x6625202c32313366,0x356625202c313133,0x2e6464610a3b3537\n"
".quad 0x3133662520323366,0x3231336625202c33,0x3b3536356625202c,0x3233662e6464610a\n"
".quad 0x202c343133662520,0x25202c3331336625,0x75730a3b39333566,0x6625203233662e62\n"
".quad 0x336625202c353133,0x34356625202c3431,0x20636f6c2e0a3b30,0x3120323136342032\n"
".quad 0x3233662e6464610a,0x202c363133662520,0x25202c3531336625,0x75730a3b31343566\n"
".quad 0x6625203233662e62,0x336625202c373133,0x34356625202c3631,0x662e6275730a3b32\n"
".quad 0x3831336625203233,0x2c3235356625202c,0x0a3b393335662520,0x34203220636f6c2e\n"
".quad 0x64610a3120323136,0x6625203233662e64,0x336625202c393133,0x30356625202c3831\n"
".quad 0x662e6275730a3b36,0x3032336625203233,0x2c3931336625202c,0x0a3b303435662520\n"
".quad 0x203233662e627573,0x25202c3132336625,0x6625202c30323366,0x6f6c2e0a3b373934\n"
".quad 0x3231363420322063,0x662e6464610a3120,0x3232336625203233,0x2c3132336625202c\n"
".quad 0x0a3b313435662520,0x203233662e627573,0x25202c3332336625,0x6625202c32323366\n"
".quad 0x6f6c2e0a3b373035,0x3231363420322063,0x662e6464610a3120,0x3432336625203233\n"
".quad 0x2c3332336625202c,0x0a3b323435662520,0x203233662e766f6d,0x30202c3532336625\n"
".quad 0x3030303038453366,0x61702e646c0a3b30,0x203233662e6d6172,0x5b202c3639346625\n"
".quad 0x5f74726d31315a5f,0x5041426279685f64,0x61705f6d665f5366,0x0a3b5d325f6d6172\n"
".quad 0x34203220636f6c2e,0x756d0a3120323136,0x6625203233662e6c,0x346625202c363233\n"
".quad 0x45336630202c3639,0x0a3b303030303038,0x203233662e766f6d,0x30202c3732336625\n"
".quad 0x3030303030453366,0x20636f6c2e0a3b30,0x3120323136342032,0x3233662e6c756d0a\n"
".quad 0x202c383233662520,0x30202c3938326625,0x4141414132443366,0x662e766f6d0a3b42\n"
".quad 0x3932336625203233,0x413244336630202c,0x6c2e0a3b42414141,0x313634203220636f\n"
".quad 0x2e6c756d0a312032,0x3333662520323366,0x3639346625202c30,0x414144336630202c\n"
".quad 0x756d0a3b42414141,0x6625203233662e6c,0x326625202c313333,0x43336630202c3336\n"
".quad 0x0a3b393345383336,0x203233662e6c756d,0x25202c3233336625,0x6630202c36393466\n"
".quad 0x3933453833454333,0x33662e6c756d0a3b,0x2c33333366252032,0x202c323432662520\n"
".quad 0x6d0a3b3233336625,0x25203233662e6c75,0x6625202c34333366,0x336630202c313132\n"
".quad 0x3b44434343434343,0x3233662e766f6d0a,0x202c353333662520,0x4343434343336630\n"
".quad 0x636f6c2e0a3b4443,0x2032313634203220,0x33662e6c756d0a31,0x2c36333366252032\n"
".quad 0x202c343132662520,0x4343434343336630,0x2e6c756d0a3b4443,0x3333662520323366\n"
".quad 0x3731326625202c37,0x434343336630202c,0x756d0a3b44434343,0x6625203233662e6c\n"
".quad 0x326625202c383333,0x42336630202c3830,0x0a3b313238303238,0x203233662e6c756d\n"
".quad 0x25202c3933336625,0x6630202c38333366,0x3030303030343134,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x38316625202c3034,0x3745426630202c38,0x25202c4433464333\n"
".quad 0x75730a3b39333366,0x6625203233662e62,0x326625202c313433,0x3b3034336625202c\n"
".quad 0x3233662e6c756d0a,0x202c323433662520,0x30202c3833336625,0x3030303038304366\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x316625202c333433,0x44426630202c3838\n"
".quad 0x202c443242433242,0x660a3b3234336625,0x33662e6e722e616d,0x2c34343366252032\n"
".quad 0x202c343333662520,0x3030303830436630,0x34336625202c3030,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x326625202c353433,0x33336625202c3234,0x3333336625202c32\n"
".quad 0x33662e6464610a3b,0x2c36343366252032,0x202c343433662520,0x660a3b3534336625\n"
".quad 0x33662e6e722e616d,0x2c37343366252032,0x202c313333662520,0x3030303830436630\n"
".quad 0x34336625202c3030,0x662e6275730a3b36,0x3834336625203233,0x2c3139356625202c\n"
".quad 0x0a3b373433662520,0x662e6e722e616d66,0x3934336625203233,0x2c3633336625202c\n"
".quad 0x3030383043663020,0x336625202c303030,0x2e67656e0a3b3334,0x3533662520323366\n"
".quad 0x3234326625202c30,0x6e722e616d660a3b,0x336625203233662e,0x35336625202c3135\n"
".quad 0x3233336625202c30,0x3b3934336625202c,0x203220636f6c2e0a,0x660a312032313634\n"
".quad 0x33662e6e722e616d,0x2c32353366252032,0x202c333632662520,0x4538333643336630\n"
".quad 0x33336625202c3933,0x662e6464610a3b31,0x3335336625203233,0x2c3135336625202c\n"
".quad 0x0a3b323533662520,0x662e6e722e616d66,0x3435336625203233,0x2c3737326625202c\n"
".quad 0x202c303333662520,0x660a3b3335336625,0x33662e6e722e616d,0x2c35353366252032\n"
".quad 0x202c383233662520,0x3030303030436630,0x35336625202c3030,0x662e6275730a3b34\n"
".quad 0x3635336625203233,0x2c3738356625202c,0x0a3b353533662520,0x662e6e722e616d66\n"
".quad 0x3735336625203233,0x2c3433336625202c,0x3030383034663020,0x336625202c303030\n"
".quad 0x2e6464610a3b3334,0x3533662520323366,0x3735336625202c38,0x3b3534336625202c\n"
".quad 0x2e6e722e616d660a,0x3533662520323366,0x3133336625202c39,0x303830436630202c\n"
".quad 0x6625202c30303030,0x6275730a3b383533,0x336625203233662e,0x37366625202c3036\n"
".quad 0x3b3935336625202c,0x2e6e722e616d660a,0x3633662520323366,0x3633336625202c31\n"
".quad 0x303830346630202c,0x6625202c30303030,0x616d660a3b333433,0x203233662e6e722e\n"
".quad 0x25202c3236336625,0x6625202c30353366,0x336625202c323333,0x636f6c2e0a3b3136\n"
".quad 0x2032313634203220,0x33662e6464610a31,0x2c33363366252032,0x202c323633662520\n"
".quad 0x660a3b3235336625,0x33662e6e722e616d,0x2c34363366252032,0x202c373732662520\n"
".quad 0x25202c3033336625,0x6d660a3b33363366,0x3233662e6e722e61,0x202c353633662520\n"
".quad 0x30202c3832336625,0x3030303030304366,0x3436336625202c30,0x33662e6275730a3b\n"
".quad 0x2c36363366252032,0x202c383835662520,0x660a3b3536336625,0x33662e6e722e616d\n"
".quad 0x2c37363366252032,0x202c383831662520,0x3830323844336630,0x33336625202c3032\n"
".quad 0x722e616d660a3b38,0x6625203233662e6e,0x326625202c383633,0x43336630202c3131\n"
".quad 0x202c444343434343,0x660a3b3736336625,0x33662e6e722e616d,0x2c39363366252032\n"
".quad 0x202c343132662520,0x4343434343336630,0x36336625202c4443,0x722e616d660a3b38\n"
".quad 0x6625203233662e6e,0x326625202c303733,0x33336625202c3234,0x3936336625202c32\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x36326625202c3137,0x3643336630202c33\n"
".quad 0x25202c3933453833,0x6d660a3b30373366,0x3233662e6e722e61,0x202c323733662520\n"
".quad 0x25202c3737326625,0x6625202c30333366,0x616d660a3b313733,0x203233662e6e722e\n"
".quad 0x25202c3337336625,0x6630202c39383266,0x4241414141324433,0x3b3237336625202c\n"
".quad 0x2e6e722e616d660a,0x3733662520323366,0x3439326625202c34,0x303845336630202c\n"
".quad 0x6625202c30303030,0x616d660a3b333733,0x203233662e6e722e,0x25202c3537336625\n"
".quad 0x6630202c39303366,0x3030303030304533,0x3b3437336625202c,0x3233662e67656e0a\n"
".quad 0x202c363733662520,0x660a3b3731336625,0x33662e6e722e616d,0x2c37373366252032\n"
".quad 0x202c363733662520,0x25202c3732336625,0x6c2e0a3b35373366,0x313634203220636f\n"
".quad 0x2e6275730a312032,0x3733662520323366,0x3837356625202c38,0x3b3737336625202c\n"
".quad 0x3233662e67656e0a,0x202c393733662520,0x660a3b3131326625,0x33662e6e722e616d\n"
".quad 0x2c30383366252032,0x202c393733662520,0x25202c3533336625,0x6c2e0a3b37363366\n"
".quad 0x313634203220636f,0x2e616d660a312032,0x25203233662e6e72,0x6625202c31383366\n"
".quad 0x336630202c343132,0x2c44434343434343,0x0a3b303833662520,0x662e6e722e616d66\n"
".quad 0x3238336625203233,0x2c3234326625202c,0x202c323333662520,0x660a3b3138336625\n"
".quad 0x33662e6e722e616d,0x2c33383366252032,0x202c333632662520,0x4538333643336630\n"
".quad 0x38336625202c3933,0x722e616d660a3b32,0x6625203233662e6e,0x326625202c343833\n"
".quad 0x33336625202c3737,0x3338336625202c30,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x38326625202c3538,0x3244336630202c39,0x25202c4241414141,0x656e0a3b34383366\n"
".quad 0x6625203233662e67,0x326625202c363833,0x2e616d660a3b3439,0x25203233662e6e72\n"
".quad 0x6625202c37383366,0x336625202c363833,0x38336625202c3532,0x662e67656e0a3b35\n"
".quad 0x3838336625203233,0x3b3930336625202c,0x2e6e722e616d660a,0x3833662520323366\n"
".quad 0x3838336625202c39,0x2c3732336625202c,0x0a3b373833662520,0x662e6e722e616d66\n"
".quad 0x3039336625203233,0x2c3637336625202c,0x202c373233662520,0x2e0a3b3938336625\n"
".quad 0x3634203220636f6c,0x6275730a31203231,0x336625203233662e,0x37356625202c3139\n"
".quad 0x3039336625202c34,0x33662e67656e0a3b,0x2c32393366252032,0x0a3b343132662520\n"
".quad 0x662e6e722e616d66,0x3339336625203233,0x2c3239336625202c,0x202c353333662520\n"
".quad 0x2e0a3b3038336625,0x3634203220636f6c,0x616d660a31203231,0x203233662e6e722e\n"
".quad 0x25202c3439336625,0x6625202c32343266,0x336625202c323333,0x2e616d660a3b3339\n"
".quad 0x25203233662e6e72,0x6625202c35393366,0x336630202c333632,0x2c39334538333643\n"
".quad 0x0a3b343933662520,0x662e6e722e616d66,0x3639336625203233,0x2c3737326625202c\n"
".quad 0x202c303333662520,0x660a3b3539336625,0x33662e6e722e616d,0x2c37393366252032\n"
".quad 0x202c393832662520,0x4141413244336630,0x39336625202c4241,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x326625202c383933,0x45336630202c3439,0x202c303030303038\n"
".quad 0x660a3b3739336625,0x33662e6e722e616d,0x2c39393366252032,0x202c383833662520\n"
".quad 0x25202c3732336625,0x6c2e0a3b38393366,0x313634203220636f,0x2e616d660a312032\n"
".quad 0x25203233662e6e72,0x6625202c30303466,0x336630202c373133,0x2c30303030303045\n"
".quad 0x0a3b393933662520,0x203233662e627573,0x25202c3130346625,0x6625202c35373566\n"
".quad 0x616d660a3b303034,0x203233662e6e722e,0x25202c3230346625,0x6625202c32393366\n"
".quad 0x336625202c353333,0x636f6c2e0a3b3836,0x2032313634203220,0x6e722e616d660a31\n"
".quad 0x346625203233662e,0x34326625202c3330,0x3233336625202c32,0x3b3230346625202c\n"
".quad 0x2e6e722e616d660a,0x3034662520323366,0x3336326625202c34,0x333643336630202c\n"
".quad 0x6625202c39334538,0x616d660a3b333034,0x203233662e6e722e,0x25202c3530346625\n"
".quad 0x6625202c37373266,0x346625202c303333,0x2e616d660a3b3430,0x25203233662e6e72\n"
".quad 0x6625202c36303466,0x336630202c393832,0x2c42414141413244,0x0a3b353034662520\n"
".quad 0x662e6e722e616d66,0x3730346625203233,0x2c3638336625202c,0x202c353233662520\n"
".quad 0x2e0a3b3630346625,0x3634203220636f6c,0x616d660a31203231,0x203233662e6e722e\n"
".quad 0x25202c3830346625,0x6630202c39303366,0x3030303030304533,0x3b3730346625202c\n"
".quad 0x2e6e722e616d660a,0x3034662520323366,0x3731336625202c39,0x303045336630202c\n"
".quad 0x6625202c30303030,0x6275730a3b383034,0x346625203233662e,0x36356625202c3031\n"
".quad 0x3930346625202c35,0x6e722e616d660a3b,0x346625203233662e,0x33336625202c3131\n"
".quad 0x3830436630202c37,0x25202c3030303030,0x6d660a3b33343366,0x3233662e6e722e61\n"
".quad 0x202c323134662520,0x25202c3035336625,0x6625202c32333366,0x6f6c2e0a3b313134\n"
".quad 0x3231363420322063,0x662e6464610a3120,0x3331346625203233,0x2c3231346625202c\n"
".quad 0x0a3b323533662520,0x203233662e67656e,0x25202c3431346625,0x6d660a3b37373266\n"
".quad 0x3233662e6e722e61,0x202c353134662520,0x25202c3431346625,0x6625202c30333366\n"
".quad 0x6f6c2e0a3b333134,0x3231363420322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x326625202c363134,0x44336630202c3938,0x202c424141414132,0x610a3b3832336625\n"
".quad 0x25203233662e6464,0x6625202c37313466,0x346625202c353134,0x2e6275730a3b3631\n"
".quad 0x3134662520323366,0x3136356625202c38,0x3b3731346625202c,0x2e6e722e616d660a\n"
".quad 0x3134662520323366,0x3731326625202c39,0x434343336630202c,0x6625202c44434343\n"
".quad 0x616d660a3b383633,0x203233662e6e722e,0x25202c3032346625,0x6625202c32343266\n"
".quad 0x346625202c323333,0x2e616d660a3b3931,0x25203233662e6e72,0x6625202c31323466\n"
".quad 0x336630202c333632,0x2c39334538333643,0x0a3b303234662520,0x662e6e722e616d66\n"
".quad 0x3232346625203233,0x2c3431346625202c,0x202c303333662520,0x6e0a3b3132346625\n"
".quad 0x25203233662e6765,0x6625202c33323466,0x616d660a3b393832,0x203233662e6e722e\n"
".quad 0x25202c3432346625,0x6625202c33323466,0x346625202c393233,0x636f6c2e0a3b3232\n"
".quad 0x2032313634203220,0x6e722e616d660a31,0x346625203233662e,0x30336625202c3532\n"
".quad 0x3632336625202c33,0x3b3432346625202c,0x2e6e722e616d660a,0x3234662520323366\n"
".quad 0x3838336625202c36,0x2c3732336625202c,0x0a3b353234662520,0x34203220636f6c2e\n"
".quad 0x6d660a3120323136,0x3233662e6e722e61,0x202c373234662520,0x30202c3432336625\n"
".quad 0x3030303030453366,0x3632346625202c30,0x33662e6275730a3b,0x2c38323466252032\n"
".quad 0x202c323535662520,0x660a3b3732346625,0x33662e6e722e616d,0x2c39323466252032\n"
".quad 0x202c343132662520,0x4343434343336630,0x36336625202c4443,0x722e616d660a3b37\n"
".quad 0x6625203233662e6e,0x326625202c303334,0x43336630202c3731,0x202c444343434343\n"
".quad 0x660a3b3932346625,0x33662e6e722e616d,0x2c31333466252032,0x202c333333662520\n"
".quad 0x3030303030436630,0x33346625202c3030,0x722e616d660a3b30,0x6625203233662e6e\n"
".quad 0x336625202c323334,0x30436630202c3133,0x202c303030303030,0x660a3b3133346625\n"
".quad 0x33662e6e722e616d,0x2c33333466252032,0x202c393932662520,0x3030303845336630\n"
".quad 0x33346625202c3030,0x722e616d660a3b32,0x6625203233662e6e,0x336625202c343334\n"
".quad 0x45336630202c3731,0x202c303030303030,0x6e0a3b3333346625,0x25203233662e6765\n"
".quad 0x6625202c35333466,0x616d660a3b343233,0x203233662e6e722e,0x25202c3633346625\n"
".quad 0x6625202c35333466,0x346625202c373233,0x636f6c2e0a3b3433,0x2032313634203220\n"
".quad 0x33662e6275730a31,0x2c37333466252032,0x202c393335662520,0x660a3b3633346625\n"
".quad 0x33662e6e722e616d,0x2c38333466252032,0x202c373132662520,0x4343434343336630\n"
".quad 0x38336625202c4443,0x722e616d660a3b30,0x6625203233662e6e,0x326625202c393334\n"
".quad 0x33336625202c3234,0x3833346625202c32,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x36326625202c3034,0x3643336630202c33,0x25202c3933453833,0x6d660a3b39333466\n"
".quad 0x3233662e6e722e61,0x202c313434662520,0x25202c3431346625,0x6625202c30333366\n"
".quad 0x616d660a3b303434,0x203233662e6e722e,0x25202c3234346625,0x6625202c33323466\n"
".quad 0x346625202c393233,0x2e67656e0a3b3134,0x3434662520323366,0x3330336625202c33\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x34346625202c3434,0x3632336625202c33\n"
".quad 0x3b3234346625202c,0x203220636f6c2e0a,0x660a312032313634,0x33662e6e722e616d\n"
".quad 0x2c35343466252032,0x202c393033662520,0x3030303045336630,0x34346625202c3030\n"
".quad 0x722e616d660a3b34,0x6625203233662e6e,0x336625202c363434,0x45336630202c3432\n"
".quad 0x202c303030303030,0x730a3b3534346625,0x25203233662e6275,0x6625202c37343466\n"
".quad 0x346625202c363035,0x2e616d660a3b3634,0x25203233662e6e72,0x6625202c38343466\n"
".quad 0x336625202c323933,0x36336625202c3533,0x20636f6c2e0a3b37,0x3120323136342032\n"
".quad 0x2e6e722e616d660a,0x3434662520323366,0x3731326625202c39,0x434343336630202c\n"
".quad 0x6625202c44434343,0x616d660a3b383434,0x203233662e6e722e,0x25202c3035346625\n"
".quad 0x6630202c33333366,0x3030303030303043,0x3b3934346625202c,0x2e6e722e616d660a\n"
".quad 0x3534662520323366,0x3133336625202c31,0x303030436630202c,0x6625202c30303030\n"
".quad 0x67656e0a3b303534,0x346625203233662e,0x39326625202c3235,0x722e616d660a3b39\n"
".quad 0x6625203233662e6e,0x346625202c333534,0x32336625202c3235,0x3135346625202c35\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x37336625202c3435,0x3732336625202c36\n"
".quad 0x3b3335346625202c,0x2e6e722e616d660a,0x3534662520323366,0x3533346625202c35\n"
".quad 0x2c3732336625202c,0x0a3b343534662520,0x34203220636f6c2e,0x75730a3120323136\n"
".quad 0x6625203233662e62,0x356625202c363534,0x35346625202c3034,0x722e616d660a3b35\n"
".quad 0x6625203233662e6e,0x336625202c373534,0x30346630202c3733,0x202c303030303038\n"
".quad 0x660a3b3334336625,0x33662e6e722e616d,0x2c38353466252032,0x202c303533662520\n"
".quad 0x25202c3233336625,0x6c2e0a3b37353466,0x313634203220636f,0x2e6464610a312032\n"
".quad 0x3534662520323366,0x3835346625202c39,0x3b3235336625202c,0x2e6e722e616d660a\n"
".quad 0x3634662520323366,0x3431346625202c30,0x2c3033336625202c,0x0a3b393534662520\n"
".quad 0x34203220636f6c2e,0x64610a3120323136,0x6625203233662e64,0x346625202c313634\n"
".quad 0x31346625202c3036,0x662e6275730a3b36,0x3236346625203233,0x2c3236356625202c\n"
".quad 0x0a3b313634662520,0x203233662e67656e,0x25202c3336346625,0x6d660a3b37313266\n"
".quad 0x3233662e6e722e61,0x202c343634662520,0x25202c3336346625,0x6625202c35333366\n"
".quad 0x6f6c2e0a3b383633,0x3231363420322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x326625202c353634,0x33336625202c3234,0x3436346625202c32,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x36326625202c3636,0x3643336630202c33,0x25202c3933453833\n"
".quad 0x6d660a3b35363466,0x3233662e6e722e61,0x202c373634662520,0x25202c3431346625\n"
".quad 0x6625202c30333366,0x616d660a3b363634,0x203233662e6e722e,0x25202c3836346625\n"
".quad 0x6625202c33323466,0x346625202c393233,0x2e616d660a3b3736,0x25203233662e6e72\n"
".quad 0x6625202c39363466,0x336625202c333434,0x36346625202c3632,0x722e616d660a3b38\n"
".quad 0x6625203233662e6e,0x336625202c303734,0x32336625202c3838,0x3936346625202c37\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x33346625202c3137,0x3732336625202c35\n"
".quad 0x3b3037346625202c,0x203220636f6c2e0a,0x730a312032313634,0x25203233662e6275\n"
".quad 0x6625202c32373466,0x346625202c373934,0x2e616d660a3b3137,0x25203233662e6e72\n"
".quad 0x6625202c33373466,0x336625202c333634,0x32346625202c3533,0x20636f6c2e0a3b39\n"
".quad 0x3120323136342032,0x2e6e722e616d660a,0x3734662520323366,0x3333336625202c34\n"
".quad 0x303030436630202c,0x6625202c30303030,0x616d660a3b333734,0x203233662e6e722e\n"
".quad 0x25202c3537346625,0x6630202c31333366,0x3030303030303043,0x3b3437346625202c\n"
".quad 0x2e6e722e616d660a,0x3734662520323366,0x3235346625202c36,0x2c3532336625202c\n"
".quad 0x0a3b353734662520,0x34203220636f6c2e,0x6d660a3120323136,0x3233662e6e722e61\n"
".quad 0x202c373734662520,0x30202c3731336625,0x3030303030453366,0x3637346625202c30\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x32336625202c3837,0x3045336630202c34\n"
".quad 0x25202c3030303030,0x75730a3b37373466,0x6625203233662e62,0x356625202c393734\n"
".quad 0x37346625202c3134,0x722e616d660a3b38,0x6625203233662e6e,0x346625202c303834\n"
".quad 0x33336625202c3336,0x3038336625202c35,0x3220636f6c2e0a3b,0x0a31203231363420\n"
".quad 0x662e6e722e616d66,0x3138346625203233,0x2c3234326625202c,0x202c323333662520\n"
".quad 0x660a3b3038346625,0x33662e6e722e616d,0x2c32383466252032,0x202c333632662520\n"
".quad 0x4538333643336630,0x38346625202c3933,0x722e616d660a3b31,0x6625203233662e6e\n"
".quad 0x346625202c333834,0x33336625202c3431,0x3238346625202c30,0x6e722e616d660a3b\n"
".quad 0x346625203233662e,0x32346625202c3438,0x3932336625202c33,0x3b3338346625202c\n"
".quad 0x203220636f6c2e0a,0x660a312032313634,0x33662e6e722e616d,0x2c35383466252032\n"
".quad 0x202c333033662520,0x25202c3632336625,0x6d660a3b34383466,0x3233662e6e722e61\n"
".quad 0x202c363834662520,0x30202c3930336625,0x3030303030453366,0x3538346625202c30\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x33346625202c3738,0x3732336625202c35\n"
".quad 0x3b3638346625202c,0x203220636f6c2e0a,0x730a312032313634,0x25203233662e6275\n"
".quad 0x6625202c38383466,0x346625202c373035,0x2e616d660a3b3738,0x25203233662e6e72\n"
".quad 0x6625202c39383466,0x336625202c333634,0x34346625202c3533,0x20636f6c2e0a3b38\n"
".quad 0x3120323136342032,0x2e6e722e616d660a,0x3934662520323366,0x3333336625202c30\n"
".quad 0x303030436630202c,0x6625202c30303030,0x616d660a3b393834,0x203233662e6e722e\n"
".quad 0x25202c3139346625,0x6630202c31333366,0x3030303030303043,0x3b3039346625202c\n"
".quad 0x2e6e722e616d660a,0x3934662520323366,0x3939326625202c32,0x303845336630202c\n"
".quad 0x6625202c30303030,0x616d660a3b313934,0x203233662e6e722e,0x25202c3339346625\n"
".quad 0x6625202c36373366,0x346625202c373233,0x636f6c2e0a3b3239,0x2032313634203220\n"
".quad 0x6e722e616d660a31,0x346625203233662e,0x32336625202c3439,0x3045336630202c34\n"
".quad 0x25202c3030303030,0x75730a3b33393466,0x6625203233662e62,0x356625202c353934\n"
".quad 0x39346625202c3234,0x61702e646c0a3b34,0x203436752e6d6172,0x202c3532326c7225\n"
".quad 0x74726d31315a5f5b,0x41426279685f645f,0x705f6d665f536650,0x3b5d335f6d617261\n"
".quad 0x203220636f6c2e0a,0x6d0a312034303534,0x36732e6f6c2e6461,0x2c38376c72252034\n"
".quad 0x202c30316c722520,0x202c3532326c7225,0x646c0a3b346c7225,0x752e6d617261702e\n"
".quad 0x32326c7225203436,0x31315a5f5b202c33,0x79685f645f74726d,0x665f536650414262\n"
".quad 0x5f6d617261705f6d,0x617476630a3b5d31,0x626f6c672e6f742e,0x25203436752e6c61\n"
".quad 0x7225202c39376c72,0x68730a3b3332326c,0x7225203436622e6c,0x6c7225202c30386c\n"
".quad 0x0a3b3233202c3837,0x203436732e726873,0x25202c31386c7225,0x3233202c30386c72\n"
".quad 0x3220636f6c2e0a3b,0x0a31203631363420,0x203436622e6c6873,0x25202c32386c7225\n"
".quad 0x3b32202c31386c72,0x3436732e6464610a,0x202c33386c722520,0x25202c39376c7225\n"
".quad 0x74730a3b32386c72,0x2e6c61626f6c672e,0x6c72255b20323366,0x336625202c5d3338\n"
".quad 0x2e6464610a3b3134,0x386c722520343673,0x30316c7225202c34,0x0a3b36393034202c\n"
".quad 0x34203220636f6c2e,0x616d0a3120373136,0x3436732e6f6c2e64,0x202c35386c722520\n"
".quad 0x25202c34386c7225,0x25202c3532326c72,0x6c68730a3b346c72,0x6c7225203436622e\n"
".quad 0x386c7225202c3638,0x730a3b3233202c35,0x25203436732e7268,0x7225202c37386c72\n"
".quad 0x3b3233202c36386c,0x203220636f6c2e0a,0x730a312037313634,0x25203436622e6c68\n"
".quad 0x7225202c38386c72,0x0a3b32202c37386c,0x203436732e646461,0x25202c39386c7225\n"
".quad 0x7225202c39376c72,0x2e74730a3b38386c,0x662e6c61626f6c67,0x386c72255b203233\n"
".quad 0x34336625202c5d39,0x732e6464610a3b38,0x30396c7225203436,0x2c30316c7225202c\n"
".quad 0x2e0a3b3239313820,0x3634203220636f6c,0x64616d0a31203831,0x203436732e6f6c2e\n"
".quad 0x25202c31396c7225,0x7225202c30396c72,0x7225202c3532326c,0x2e6c68730a3b346c\n"
".quad 0x396c722520343662,0x31396c7225202c32,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c33396c,0x0a3b3233202c3239,0x34203220636f6c2e,0x68730a3120383136\n"
".quad 0x7225203436622e6c,0x6c7225202c34396c,0x610a3b32202c3339,0x25203436732e6464\n"
".quad 0x7225202c35396c72,0x6c7225202c39376c,0x672e74730a3b3439,0x33662e6c61626f6c\n"
".quad 0x35396c72255b2032,0x3635336625202c5d,0x36732e6464610a3b,0x2c36396c72252034\n"
".quad 0x202c30316c722520,0x2e0a3b3838323231,0x3634203220636f6c,0x64616d0a31203931\n"
".quad 0x203436732e6f6c2e,0x25202c37396c7225,0x7225202c36396c72,0x7225202c3532326c\n"
".quad 0x2e6c68730a3b346c,0x396c722520343662,0x37396c7225202c38,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x6c7225202c39396c,0x0a3b3233202c3839,0x34203220636f6c2e\n"
".quad 0x68730a3120393136,0x7225203436622e6c,0x7225202c3030316c,0x0a3b32202c39396c\n"
".quad 0x203436732e646461,0x202c3130316c7225,0x25202c39376c7225,0x730a3b3030316c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3130316c,0x64610a3b30363366\n"
".quad 0x7225203436732e64,0x7225202c3230316c,0x333631202c30316c,0x636f6c2e0a3b3438\n"
".quad 0x2030323634203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c333031\n"
".quad 0x6c7225202c323031,0x6c7225202c353232,0x622e6c68730a3b34,0x30316c7225203436\n"
".quad 0x30316c7225202c34,0x730a3b3233202c33,0x25203436732e7268,0x25202c3530316c72\n"
".quad 0x33202c3430316c72,0x20636f6c2e0a3b32,0x3120303236342032,0x3436622e6c68730a\n"
".quad 0x2c3630316c722520,0x2c3530316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x376c7225202c3730,0x30316c7225202c39,0x6c672e74730a3b36,0x3233662e6c61626f\n"
".quad 0x3730316c72255b20,0x3636336625202c5d,0x36732e6464610a3b,0x3830316c72252034\n"
".quad 0x2c30316c7225202c,0x0a3b303834303220,0x34203220636f6c2e,0x616d0a3120313236\n"
".quad 0x3436732e6f6c2e64,0x2c3930316c722520,0x2c3830316c722520,0x2c3532326c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3031316c72,0x33202c3930316c72\n"
".quad 0x732e7268730a3b32,0x31316c7225203436,0x31316c7225202c31,0x2e0a3b3233202c30\n"
".quad 0x3634203220636f6c,0x6c68730a31203132,0x6c7225203436622e,0x6c7225202c323131\n"
".quad 0x0a3b32202c313131,0x203436732e646461,0x202c3331316c7225,0x25202c39376c7225\n"
".quad 0x730a3b3231316c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3331316c\n"
".quad 0x64610a3b38373366,0x7225203436732e64,0x7225202c3431316c,0x353432202c30316c\n"
".quad 0x636f6c2e0a3b3637,0x2032323634203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c353131,0x6c7225202c343131,0x6c7225202c353232,0x622e6c68730a3b34\n"
".quad 0x31316c7225203436,0x31316c7225202c36,0x730a3b3233202c35,0x25203436732e7268\n"
".quad 0x25202c3731316c72,0x33202c3631316c72,0x20636f6c2e0a3b32,0x3120323236342032\n"
".quad 0x3436622e6c68730a,0x2c3831316c722520,0x2c3731316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x376c7225202c3931,0x31316c7225202c39,0x6c672e74730a3b38\n"
".quad 0x3233662e6c61626f,0x3931316c72255b20,0x3139336625202c5d,0x36732e6464610a3b\n"
".quad 0x3032316c72252034,0x2c30316c7225202c,0x0a3b323736383220,0x34203220636f6c2e\n"
".quad 0x616d0a3120333236,0x3436732e6f6c2e64,0x2c3132316c722520,0x2c3032316c722520\n"
".quad 0x2c3532326c722520,0x730a3b346c722520,0x25203436622e6c68,0x25202c3232316c72\n"
".quad 0x33202c3132316c72,0x732e7268730a3b32,0x32316c7225203436,0x32316c7225202c33\n"
".quad 0x2e0a3b3233202c32,0x3634203220636f6c,0x6c68730a31203332,0x6c7225203436622e\n"
".quad 0x6c7225202c343231,0x0a3b32202c333231,0x203436732e646461,0x202c3532316c7225\n"
".quad 0x25202c39376c7225,0x730a3b3432316c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3532316c,0x64610a3b31303466,0x7225203436732e64,0x7225202c3632316c\n"
".quad 0x373233202c30316c,0x636f6c2e0a3b3836,0x2034323634203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c373231,0x6c7225202c363231,0x6c7225202c353232\n"
".quad 0x622e6c68730a3b34,0x32316c7225203436,0x32316c7225202c38,0x730a3b3233202c37\n"
".quad 0x25203436732e7268,0x25202c3932316c72,0x33202c3832316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120343236342032,0x3436622e6c68730a,0x2c3033316c722520,0x2c3932316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x376c7225202c3133,0x33316c7225202c39\n"
".quad 0x6c672e74730a3b30,0x3233662e6c61626f,0x3133316c72255b20,0x3031346625202c5d\n"
".quad 0x36732e6464610a3b,0x3233316c72252034,0x2c30316c7225202c,0x0a3b343638363320\n"
".quad 0x34203220636f6c2e,0x616d0a3120353236,0x3436732e6f6c2e64,0x2c3333316c722520\n"
".quad 0x2c3233316c722520,0x2c3532326c722520,0x730a3b346c722520,0x25203436622e6c68\n"
".quad 0x25202c3433316c72,0x33202c3333316c72,0x732e7268730a3b32,0x33316c7225203436\n"
".quad 0x33316c7225202c35,0x2e0a3b3233202c34,0x3634203220636f6c,0x6c68730a31203532\n"
".quad 0x6c7225203436622e,0x6c7225202c363331,0x0a3b32202c353331,0x203436732e646461\n"
".quad 0x202c3733316c7225,0x25202c39376c7225,0x730a3b3633316c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3733316c,0x64610a3b38313466,0x7225203436732e64\n"
".quad 0x7225202c3833316c,0x393034202c30316c,0x636f6c2e0a3b3036,0x2036323634203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c393331,0x6c7225202c383331\n"
".quad 0x6c7225202c353232,0x622e6c68730a3b34,0x34316c7225203436,0x33316c7225202c30\n"
".quad 0x730a3b3233202c39,0x25203436732e7268,0x25202c3134316c72,0x33202c3034316c72\n"
".quad 0x20636f6c2e0a3b32,0x3120363236342032,0x3436622e6c68730a,0x2c3234316c722520\n"
".quad 0x2c3134316c722520,0x2e6464610a3b3220,0x316c722520343673,0x376c7225202c3334\n"
".quad 0x34316c7225202c39,0x6c672e74730a3b32,0x3233662e6c61626f,0x3334316c72255b20\n"
".quad 0x3832346625202c5d,0x36732e6464610a3b,0x3434316c72252034,0x2c30316c7225202c\n"
".quad 0x0a3b363530353420,0x34203220636f6c2e,0x616d0a3120373236,0x3436732e6f6c2e64\n"
".quad 0x2c3534316c722520,0x2c3434316c722520,0x2c3532326c722520,0x730a3b346c722520\n"
".quad 0x25203436622e6c68,0x25202c3634316c72,0x33202c3534316c72,0x732e7268730a3b32\n"
".quad 0x34316c7225203436,0x34316c7225202c37,0x2e0a3b3233202c36,0x3634203220636f6c\n"
".quad 0x6c68730a31203732,0x6c7225203436622e,0x6c7225202c383431,0x0a3b32202c373431\n"
".quad 0x203436732e646461,0x202c3934316c7225,0x25202c39376c7225,0x730a3b3834316c72\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3934316c,0x64610a3b37333466\n"
".quad 0x7225203436732e64,0x7225202c3035316c,0x313934202c30316c,0x636f6c2e0a3b3235\n"
".quad 0x2038323634203220,0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c313531\n"
".quad 0x6c7225202c303531,0x6c7225202c353232,0x622e6c68730a3b34,0x35316c7225203436\n"
".quad 0x35316c7225202c32,0x730a3b3233202c31,0x25203436732e7268,0x25202c3335316c72\n"
".quad 0x33202c3235316c72,0x20636f6c2e0a3b32,0x3120383236342032,0x3436622e6c68730a\n"
".quad 0x2c3435316c722520,0x2c3335316c722520,0x2e6464610a3b3220,0x316c722520343673\n"
".quad 0x376c7225202c3535,0x35316c7225202c39,0x6c672e74730a3b34,0x3233662e6c61626f\n"
".quad 0x3535316c72255b20,0x3734346625202c5d,0x36732e6464610a3b,0x3635316c72252034\n"
".quad 0x2c30316c7225202c,0x0a3b383432333520,0x34203220636f6c2e,0x616d0a3120393236\n"
".quad 0x3436732e6f6c2e64,0x2c3735316c722520,0x2c3635316c722520,0x2c3532326c722520\n"
".quad 0x730a3b346c722520,0x25203436622e6c68,0x25202c3835316c72,0x33202c3735316c72\n"
".quad 0x732e7268730a3b32,0x35316c7225203436,0x35316c7225202c39,0x2e0a3b3233202c38\n"
".quad 0x3634203220636f6c,0x6c68730a31203932,0x6c7225203436622e,0x6c7225202c303631\n"
".quad 0x0a3b32202c393531,0x203436732e646461,0x202c3136316c7225,0x25202c39376c7225\n"
".quad 0x730a3b3036316c72,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3136316c\n"
".quad 0x64610a3b36353466,0x7225203436732e64,0x7225202c3236316c,0x333735202c30316c\n"
".quad 0x636f6c2e0a3b3434,0x2030333634203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c333631,0x6c7225202c323631,0x6c7225202c353232,0x622e6c68730a3b34\n"
".quad 0x36316c7225203436,0x36316c7225202c34,0x730a3b3233202c33,0x25203436732e7268\n"
".quad 0x25202c3536316c72,0x33202c3436316c72,0x20636f6c2e0a3b32,0x3120303336342032\n"
".quad 0x3436622e6c68730a,0x2c3636316c722520,0x2c3536316c722520,0x2e6464610a3b3220\n"
".quad 0x316c722520343673,0x376c7225202c3736,0x36316c7225202c39,0x6c672e74730a3b36\n"
".quad 0x3233662e6c61626f,0x3736316c72255b20,0x3236346625202c5d,0x36732e6464610a3b\n"
".quad 0x3836316c72252034,0x2c30316c7225202c,0x0a3b303434313620,0x34203220636f6c2e\n"
".quad 0x616d0a3120313336,0x3436732e6f6c2e64,0x2c3936316c722520,0x2c3836316c722520\n"
".quad 0x2c3532326c722520,0x730a3b346c722520,0x25203436622e6c68,0x25202c3037316c72\n"
".quad 0x33202c3936316c72,0x732e7268730a3b32,0x37316c7225203436,0x37316c7225202c31\n"
".quad 0x2e0a3b3233202c30,0x3634203220636f6c,0x6c68730a31203133,0x6c7225203436622e\n"
".quad 0x6c7225202c323731,0x0a3b32202c313731,0x203436732e646461,0x202c3337316c7225\n"
".quad 0x25202c39376c7225,0x730a3b3237316c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3337316c,0x64610a3b32373466,0x7225203436732e64,0x7225202c3437316c\n"
".quad 0x353536202c30316c,0x636f6c2e0a3b3633,0x2032333634203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c353731,0x6c7225202c343731,0x6c7225202c353232\n"
".quad 0x622e6c68730a3b34,0x37316c7225203436,0x37316c7225202c36,0x730a3b3233202c35\n"
".quad 0x25203436732e7268,0x25202c3737316c72,0x33202c3637316c72,0x20636f6c2e0a3b32\n"
".quad 0x3120323336342032,0x3436622e6c68730a,0x2c3837316c722520,0x2c3737316c722520\n"
".quad 0x2e6464610a3b3220,0x316c722520343673,0x376c7225202c3937,0x37316c7225202c39\n"
".quad 0x6c672e74730a3b38,0x3233662e6c61626f,0x3937316c72255b20,0x3937346625202c5d\n"
".quad 0x36732e6464610a3b,0x3038316c72252034,0x2c30316c7225202c,0x0a3b323336393620\n"
".quad 0x34203220636f6c2e,0x616d0a3120333336,0x3436732e6f6c2e64,0x2c3138316c722520\n"
".quad 0x2c3038316c722520,0x2c3532326c722520,0x730a3b346c722520,0x25203436622e6c68\n"
".quad 0x25202c3238316c72,0x33202c3138316c72,0x732e7268730a3b32,0x38316c7225203436\n"
".quad 0x38316c7225202c33,0x2e0a3b3233202c32,0x3634203220636f6c,0x6c68730a31203333\n"
".quad 0x6c7225203436622e,0x6c7225202c343831,0x0a3b32202c333831,0x203436732e646461\n"
".quad 0x202c3538316c7225,0x25202c39376c7225,0x730a3b3438316c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3538316c,0x64610a3b38383466,0x7225203436732e64\n"
".quad 0x7225202c3638316c,0x373337202c30316c,0x636f6c2e0a3b3832,0x2034333634203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c373831,0x6c7225202c363831\n"
".quad 0x6c7225202c353232,0x622e6c68730a3b34,0x38316c7225203436,0x38316c7225202c38\n"
".quad 0x730a3b3233202c37,0x25203436732e7268,0x25202c3938316c72,0x33202c3838316c72\n"
".quad 0x20636f6c2e0a3b32,0x3120343336342032,0x3436622e6c68730a,0x2c3039316c722520\n"
".quad 0x2c3938316c722520,0x2e6464610a3b3220,0x316c722520343673,0x376c7225202c3139\n"
".quad 0x39316c7225202c39,0x6c672e74730a3b30,0x3233662e6c61626f,0x3139316c72255b20\n"
".quad 0x3539346625202c5d,0x3220636f6c2e0a3b,0x0a32203733363420,0x42420a0a3b746572\n"
".quad 0x6c0a3a30325f3433,0x2e6d617261702e64,0x326c722520343675,0x315a5f5b202c3432\n"
".quad 0x685f645f74726d31,0x5f53665041426279,0x6d617261705f6d66,0x6c68730a3b5d335f\n"
".quad 0x6c7225203436622e,0x6c7225202c323931,0x3b3231202c343232,0x203220636f6c2e0a\n"
".quad 0x630a312034303534,0x752e3436752e7476,0x39316c7225203233,0x0a3b327225202c33\n"
".quad 0x2e3436752e747663,0x316c722520323375,0x38317225202c3439,0x36732e6464610a3b\n"
".quad 0x3539316c72252034,0x3439316c7225202c,0x3339316c7225202c,0x36752e7476630a3b\n"
".quad 0x7225203233752e34,0x7225202c3639316c,0x20636f6c2e0a3b31,0x3120343035342032\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3739,0x326c7225202c3539\n"
".quad 0x316c7225202c3432,0x2e6c68730a3b3639,0x316c722520343662,0x316c7225202c3839\n"
".quad 0x0a3b3233202c3739,0x203436732e726873,0x202c3939316c7225,0x202c3839316c7225\n"
".quad 0x636f6c2e0a3b3233,0x2039343534203220,0x36732e6464610a31,0x3030326c72252034\n"
".quad 0x3939316c7225202c,0x3239316c7225202c,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3232326c72,0x5f74726d31315a5f,0x5041426279685f64,0x61705f6d665f5366\n"
".quad 0x0a3b5d315f6d6172,0x2e6f742e61747663,0x752e6c61626f6c67,0x30326c7225203436\n"
".quad 0x32326c7225202c31,0x20636f6c2e0a3b32,0x3120393435342032,0x3436622e6c68730a\n"
".quad 0x2c3230326c722520,0x2c3030326c722520,0x2e6464610a3b3220,0x326c722520343673\n"
".quad 0x326c7225202c3330,0x326c7225202c3130,0x672e74730a3b3230,0x33662e6c61626f6c\n"
".quad 0x30326c72255b2032,0x37366625202c5d33,0x36622e6c68730a3b,0x3430326c72252034\n"
".quad 0x3432326c7225202c,0x64610a3b3431202c,0x7225203436732e64,0x7225202c3530326c\n"
".quad 0x7225202c3330326c,0x6c2e0a3b3430326c,0x353534203220636f,0x672e74730a312030\n"
".quad 0x33662e6c61626f6c,0x30326c72255b2032,0x38356625202c5d35,0x732e6464610a3b38\n"
".quad 0x30326c7225203436,0x30326c7225202c36,0x30326c7225202c35,0x20636f6c2e0a3b34\n"
".quad 0x3120313535342032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3630326c7225\n"
".quad 0x610a3b3136662520,0x25203436732e6464,0x25202c3730326c72,0x25202c3630326c72\n"
".quad 0x2e0a3b3430326c72,0x3534203220636f6c,0x2e74730a31203235,0x662e6c61626f6c67\n"
".quad 0x326c72255b203233,0x356625202c5d3730,0x2e6464610a3b3738,0x326c722520343673\n"
".quad 0x326c7225202c3830,0x326c7225202c3730,0x636f6c2e0a3b3430,0x2033353534203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x5d3830326c72255b,0x0a3b35386625202c\n"
".quad 0x203436732e646461,0x202c3930326c7225,0x202c3830326c7225,0x0a3b3430326c7225\n"
".quad 0x34203220636f6c2e,0x74730a3120343535,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d393032,0x2e6464610a3b3139,0x326c722520343673,0x326c7225202c3031\n"
".quad 0x326c7225202c3930,0x636f6c2e0a3b3430,0x2035353534203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x5d3031326c72255b,0x0a3b33376625202c,0x203436732e646461\n"
".quad 0x202c3131326c7225,0x202c3031326c7225,0x0a3b3430326c7225,0x34203220636f6c2e\n"
".quad 0x74730a3120363535,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d313132\n"
".quad 0x2e6464610a3b3937,0x326c722520343673,0x326c7225202c3231,0x326c7225202c3131\n"
".quad 0x636f6c2e0a3b3430,0x2037353534203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x5d3231326c72255b,0x3b3236356625202c,0x3436732e6464610a,0x2c3331326c722520\n"
".quad 0x2c3231326c722520,0x3b3430326c722520,0x203220636f6c2e0a,0x730a312038353534\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3331326c,0x64610a3b33303166\n"
".quad 0x7225203436732e64,0x7225202c3431326c,0x7225202c3331326c,0x6c2e0a3b3430326c\n"
".quad 0x353534203220636f,0x672e74730a312039,0x33662e6c61626f6c,0x31326c72255b2032\n"
".quad 0x34356625202c5d34,0x732e6464610a3b32,0x31326c7225203436,0x31326c7225202c35\n"
".quad 0x30326c7225202c34,0x20636f6c2e0a3b34,0x3120303635342032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3531326c7225,0x610a3b3739662520,0x25203436732e6464\n"
".quad 0x25202c3631326c72,0x25202c3531326c72,0x2e0a3b3430326c72,0x3534203220636f6c\n"
".quad 0x2e74730a31203136,0x662e6c61626f6c67,0x326c72255b203233,0x356625202c5d3631\n"
".quad 0x2e6464610a3b3134,0x326c722520343673,0x326c7225202c3731,0x326c7225202c3631\n"
".quad 0x636f6c2e0a3b3430,0x2032363534203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x5d3731326c72255b,0x3b3136356625202c,0x3436732e6464610a,0x2c3831326c722520\n"
".quad 0x2c3731326c722520,0x3b3430326c722520,0x203220636f6c2e0a,0x730a312033363534\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3831326c,0x64610a3b35313166\n"
".quad 0x7225203436732e64,0x7225202c3931326c,0x7225202c3831326c,0x6c2e0a3b3430326c\n"
".quad 0x363534203220636f,0x672e74730a312034,0x33662e6c61626f6c,0x31326c72255b2032\n"
".quad 0x34356625202c5d39,0x732e6464610a3b30,0x32326c7225203436,0x31326c7225202c30\n"
".quad 0x30326c7225202c39,0x20636f6c2e0a3b34,0x3120353635342032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3032326c7225,0x0a3b393031662520,0x203436732e646461\n"
".quad 0x202c3132326c7225,0x202c3032326c7225,0x0a3b3430326c7225,0x34203220636f6c2e\n"
".quad 0x74730a3120363635,0x2e6c61626f6c672e,0x6c72255b20323366,0x6625202c5d313232\n"
".quad 0x6f6c2e0a3b393335,0x3733363420322063,0x0a3b7465720a3220,0x72746e652e0a0a7d\n"
".quad 0x726d32315a5f2079,0x676e69735f645f74,0x6d665f536650656c,0x6d617261702e0a28\n"
".quad 0x5a5f203436752e20,0x5f645f74726d3231,0x6650656c676e6973,0x7261705f6d665f53\n"
".quad 0x702e0a2c305f6d61,0x36752e206d617261,0x726d32315a5f2034,0x676e69735f645f74\n"
".quad 0x6d665f536650656c,0x315f6d617261705f,0x6d617261702e0a2c,0x5a5f203233662e20\n"
".quad 0x5f645f74726d3231,0x6650656c676e6973,0x7261705f6d665f53,0x702e0a2c325f6d61\n"
".quad 0x36752e206d617261,0x726d32315a5f2034,0x676e69735f645f74,0x6d665f536650656c\n"
".quad 0x335f6d617261705f,0x65722e0a7b0a290a,0x25203233662e2067,0x0a3b3e3132353c66\n"
".quad 0x72702e206765722e,0x38313c7025206465,0x206765722e0a3b3e,0x3c7225203233732e\n"
".quad 0x722e0a3b3e383331,0x203436732e206765,0x3e3937333c6c7225,0x702e646c0a0a0a3b\n"
".quad 0x3436752e6d617261,0x5b202c316c722520,0x5f74726d32315a5f,0x656c676e69735f64\n"
".quad 0x705f6d665f536650,0x3b5d305f6d617261,0x617261702e646c0a,0x7225203436752e6d\n"
".quad 0x315a5f5b202c336c,0x735f645f74726d32,0x536650656c676e69,0x617261705f6d665f\n"
".quad 0x76630a3b5d335f6d,0x6c672e6f742e6174,0x3436752e6c61626f,0x25202c346c722520\n"
".quad 0x6f6c2e0a3b316c72,0x3334363420322063,0x752e766f6d0a3120,0x202c357225203233\n"
".quad 0x3b782e6469746e25,0x3233752e766f6d0a,0x6325202c36722520,0x0a3b782e64696174\n"
".quad 0x203233752e766f6d,0x697425202c377225,0x64616d0a3b782e64,0x203233732e6f6c2e\n"
".quad 0x357225202c317225,0x25202c367225202c,0x636f6c2e0a3b3772,0x2034343634203220\n"
".quad 0x33752e766f6d0a31,0x25202c3872252032,0x0a3b792e6469746e,0x203233752e766f6d\n"
".quad 0x746325202c397225,0x6d0a3b792e646961,0x25203233752e766f,0x697425202c303172\n"
".quad 0x64616d0a3b792e64,0x203233732e6f6c2e,0x387225202c327225,0x25202c397225202c\n"
".quad 0x6f6c2e0a3b303172,0x3534363420322063,0x752e766f6d0a3120,0x2c31317225203233\n"
".quad 0x7a2e6469746e2520,0x33752e766f6d0a3b,0x202c323172252032,0x7a2e646961746325\n"
".quad 0x33752e766f6d0a3b,0x202c333172252032,0x0a3b7a2e64697425,0x732e6f6c2e64616d\n"
".quad 0x2c34317225203233,0x25202c3131722520,0x317225202c323172,0x752e7476630a3b33\n"
".quad 0x25203233752e3436,0x317225202c356c72,0x3220636f6c2e0a3b,0x0a31203634363420\n"
".quad 0x2e3436732e747663,0x366c722520323373,0x730a3b327225202c,0x25203233622e6c68\n"
".quad 0x34317225202c3372,0x6f6c2e0a3b36202c,0x3634363420322063,0x732e7476630a3120\n"
".quad 0x25203233732e3436,0x337225202c376c72,0x36732e6464610a3b,0x202c396c72252034\n"
".quad 0x7225202c376c7225,0x636f6c2e0a3b366c,0x2036343634203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x2c396c7225202c38,0x25202c336c722520,0x6f6c2e0a3b356c72\n"
".quad 0x2034313120322063,0x652e707465730a31,0x7025203233732e71,0x202c317225202c32\n"
".quad 0x707465730a3b3336,0x203233732e71652e,0x327225202c337025,0x2e726f0a3b30202c\n"
".quad 0x3470252064657270,0x25202c327025202c,0x636f6c2e0a3b3370,0x3120343131203220\n"
".quad 0x71652e707465730a,0x357025203233732e,0x36202c327225202c,0x72702e726f0a3b33\n"
".quad 0x202c367025206465,0x357025202c347025,0x3220636f6c2e0a3b,0x730a312034313120\n"
".quad 0x732e71652e707465,0x202c377025203233,0x3b30202c34317225,0x646572702e726f0a\n"
".quad 0x7025202c38702520,0x0a3b377025202c36,0x31203220636f6c2e,0x7465730a31203431\n"
".quad 0x3233732e71652e70,0x7225202c31702520,0x0a3b3336202c3431,0x20646572702e726f\n"
".quad 0x387025202c397025,0x2e0a3b317025202c,0x3131203220636f6c,0x397025400a312034\n"
".quad 0x3342422061726220,0x6c2e0a0a3b345f35,0x363131203220636f,0x2e707465730a3120\n"
".quad 0x25203233732e7165,0x317225202c303170,0x7025400a3b30202c,0x4220617262203031\n"
".quad 0x0a0a3b335f353342,0x203233752e766f6d,0x30202c3733317225,0x6e752e6172620a3b\n"
".quad 0x355f353342422069,0x5f353342420a0a3b,0x752e766f6d0a3a33,0x3733317225203233\n"
".quad 0x6172620a3b33202c,0x33424220696e752e,0x42420a0a3b355f35,0x6f6d0a3a345f3533\n"
".quad 0x7225203233752e76,0x0a3b31202c373331,0x3a355f353342420a,0x203220636f6c2e0a\n"
".quad 0x730a312030353634,0x732e74672e707465,0x2c31317025203233,0x3336202c31722520\n"
".quad 0x2031317025400a3b,0x3533424220617262,0x68730a0a3b33325f,0x7225203436622e6c\n"
".quad 0x6c7225202c30316c,0x730a3b3233202c38,0x25203436732e7268,0x7225202c31316c72\n"
".quad 0x3b3233202c30316c,0x203220636f6c2e0a,0x730a312036353634,0x25203436622e6c68\n"
".quad 0x7225202c32316c72,0x0a3b32202c31316c,0x203436732e646461,0x25202c33316c7225\n"
".quad 0x6c7225202c346c72,0x672e646c0a3b3231,0x33662e6c61626f6c,0x5b202c3266252032\n"
".quad 0x0a3b5d33316c7225,0x203233732e646461,0x7225202c39317225,0x630a3b312d202c31\n"
".quad 0x752e3436752e7476,0x34316c7225203233,0x0a3b39317225202c,0x203436732e646461\n"
".quad 0x25202c35316c7225,0x6c7225202c366c72,0x732e6464610a3b37,0x36316c7225203436\n"
".quad 0x2c35316c7225202c,0x6c0a3b3639303420,0x2e6d617261702e64,0x336c722520343675\n"
".quad 0x315a5f5b202c3837,0x735f645f74726d32,0x536650656c676e69,0x617261705f6d665f\n"
".quad 0x6c2e0a3b5d335f6d,0x353634203220636f,0x2e64616d0a312037,0x25203436732e6f6c\n"
".quad 0x7225202c37316c72,0x6c7225202c36316c,0x6c7225202c383733,0x2e6c68730a3b3431\n"
".quad 0x316c722520343662,0x37316c7225202c38,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x6c7225202c39316c,0x0a3b3233202c3831,0x34203220636f6c2e,0x68730a3120373536\n"
".quad 0x7225203436622e6c,0x6c7225202c30326c,0x610a3b32202c3931,0x25203436732e6464\n"
".quad 0x7225202c31326c72,0x326c7225202c346c,0x6c672e646c0a3b30,0x3233662e6c61626f\n"
".quad 0x202c303235662520,0x3b5d31326c72255b,0x203220636f6c2e0a,0x610a312038353634\n"
".quad 0x25203233732e6464,0x317225202c313272,0x7476630a3b31202c,0x3233752e3436752e\n"
".quad 0x202c32326c722520,0x64610a3b31327225,0x7225203436732e64,0x6c7225202c33326c\n"
".quad 0x38323231202c3531,0x20636f6c2e0a3b38,0x3120383536342032,0x2e6f6c2e64616d0a\n"
".quad 0x326c722520343673,0x33326c7225202c34,0x3837336c7225202c,0x3b32326c7225202c\n"
".quad 0x3436622e6c68730a,0x202c35326c722520,0x33202c34326c7225,0x732e7268730a3b32\n"
".quad 0x36326c7225203436,0x2c35326c7225202c,0x6f6c2e0a3b323320,0x3835363420322063\n"
".quad 0x622e6c68730a3120,0x37326c7225203436,0x2c36326c7225202c,0x2e6464610a3b3220\n"
".quad 0x326c722520343673,0x2c346c7225202c38,0x0a3b37326c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x326c72255b202c34,0x2e6464610a3b5d38,0x3332722520323373\n"
".quad 0x2d202c327225202c,0x20636f6c2e0a3b31,0x3120393536342032,0x3436732e7476630a\n"
".quad 0x6c7225203233732e,0x33327225202c3932,0x36732e6464610a3b,0x2c30336c72252034\n"
".quad 0x202c39326c722520,0x64610a3b376c7225,0x7225203436732e64,0x6c7225202c31336c\n"
".quad 0x32393138202c3033,0x3220636f6c2e0a3b,0x0a31203935363420,0x732e6f6c2e64616d\n"
".quad 0x32336c7225203436,0x2c31336c7225202c,0x2c3837336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x7225202c33336c72,0x3b3233202c32336c,0x3436732e7268730a\n"
".quad 0x202c34336c722520,0x33202c33336c7225,0x20636f6c2e0a3b32,0x3120393536342032\n"
".quad 0x3436622e6c68730a,0x202c35336c722520,0x32202c34336c7225,0x36732e6464610a3b\n"
".quad 0x2c36336c72252034,0x25202c346c722520,0x646c0a3b35336c72,0x2e6c61626f6c672e\n"
".quad 0x3135662520323366,0x336c72255b202c36,0x2e6464610a3b5d36,0x336c722520343673\n"
".quad 0x30336c7225202c37,0x3b3038343032202c,0x203220636f6c2e0a,0x6d0a312030363634\n"
".quad 0x36732e6f6c2e6461,0x2c38336c72252034,0x202c37336c722520,0x202c3837336c7225\n"
".quad 0x730a3b34316c7225,0x25203436622e6c68,0x7225202c39336c72,0x3b3233202c38336c\n"
".quad 0x3436732e7268730a,0x202c30346c722520,0x33202c39336c7225,0x20636f6c2e0a3b32\n"
".quad 0x3120303636342032,0x3436622e6c68730a,0x202c31346c722520,0x32202c30346c7225\n"
".quad 0x36732e6464610a3b,0x2c32346c72252034,0x25202c346c722520,0x646c0a3b31346c72\n"
".quad 0x2e6c61626f6c672e,0x3035662520323366,0x346c72255b202c37,0x2e6464610a3b5d32\n"
".quad 0x346c722520343673,0x30336c7225202c33,0x3b3637353432202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312031363634,0x36732e6f6c2e6461,0x2c34346c72252034,0x202c33346c722520\n"
".quad 0x202c3837336c7225,0x730a3b32326c7225,0x25203436622e6c68,0x7225202c35346c72\n"
".quad 0x3b3233202c34346c,0x3436732e7268730a,0x202c36346c722520,0x33202c35346c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120313636342032,0x3436622e6c68730a,0x202c37346c722520\n"
".quad 0x32202c36346c7225,0x36732e6464610a3b,0x2c38346c72252034,0x25202c346c722520\n"
".quad 0x646c0a3b37346c72,0x2e6c61626f6c672e,0x3035662520323366,0x346c72255b202c33\n"
".quad 0x636f6c2e0a3b5d38,0x2032363634203220,0x33732e6464610a31,0x202c373272252032\n"
".quad 0x0a3b31202c327225,0x2e3436732e747663,0x346c722520323373,0x3b37327225202c39\n"
".quad 0x3436732e6464610a,0x202c30356c722520,0x25202c39346c7225,0x6464610a3b376c72\n"
".quad 0x6c7225203436732e,0x356c7225202c3135,0x3438333631202c30,0x3220636f6c2e0a3b\n"
".quad 0x0a31203236363420,0x732e6f6c2e64616d,0x32356c7225203436,0x2c31356c7225202c\n"
".quad 0x2c3837336c722520,0x730a3b356c722520,0x25203436622e6c68,0x7225202c33356c72\n"
".quad 0x3b3233202c32356c,0x3436732e7268730a,0x202c34356c722520,0x33202c33356c7225\n"
".quad 0x20636f6c2e0a3b32,0x3120323636342032,0x3436622e6c68730a,0x202c35356c722520\n"
".quad 0x32202c34356c7225,0x36732e6464610a3b,0x2c36356c72252034,0x25202c346c722520\n"
".quad 0x646c0a3b35356c72,0x2e6c61626f6c672e,0x3135662520323366,0x356c72255b202c37\n"
".quad 0x2e6464610a3b5d36,0x356c722520343673,0x30356c7225202c37,0x3b3237363832202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312033363634,0x36732e6f6c2e6461,0x2c38356c72252034\n"
".quad 0x202c37356c722520,0x202c3837336c7225,0x730a3b32326c7225,0x25203436622e6c68\n"
".quad 0x7225202c39356c72,0x3b3233202c38356c,0x3436732e7268730a,0x202c30366c722520\n"
".quad 0x33202c39356c7225,0x20636f6c2e0a3b32,0x3120333636342032,0x3436622e6c68730a\n"
".quad 0x202c31366c722520,0x32202c30366c7225,0x36732e6464610a3b,0x2c32366c72252034\n"
".quad 0x25202c346c722520,0x646c0a3b31366c72,0x2e6c61626f6c672e,0x3035662520323366\n"
".quad 0x366c72255b202c34,0x2e6464610a3b5d32,0x366c722520343673,0x30356c7225202c33\n"
".quad 0x3b3836373233202c,0x203220636f6c2e0a,0x6d0a312034363634,0x36732e6f6c2e6461\n"
".quad 0x2c34366c72252034,0x202c33366c722520,0x202c3837336c7225,0x730a3b34316c7225\n"
".quad 0x25203436622e6c68,0x7225202c35366c72,0x3b3233202c34366c,0x3436732e7268730a\n"
".quad 0x202c36366c722520,0x33202c35366c7225,0x20636f6c2e0a3b32,0x3120343636342032\n"
".quad 0x3436622e6c68730a,0x202c37366c722520,0x32202c36366c7225,0x36732e6464610a3b\n"
".quad 0x2c38366c72252034,0x25202c346c722520,0x646c0a3b37366c72,0x2e6c61626f6c672e\n"
".quad 0x3934662520323366,0x366c72255b202c34,0x2e6464610a3b5d38,0x3133722520323373\n"
".quad 0x2d202c337225202c,0x636f6c2e0a3b3436,0x2035363634203220,0x36732e7476630a31\n"
".quad 0x7225203233732e34,0x337225202c39366c,0x732e6464610a3b31,0x30376c7225203436\n"
".quad 0x202c366c7225202c,0x610a3b39366c7225,0x25203436732e6464,0x7225202c31376c72\n"
".quad 0x383633202c30376c,0x636f6c2e0a3b3436,0x2035363634203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x376c7225202c3237,0x37336c7225202c31,0x3b356c7225202c38\n"
".quad 0x3436622e6c68730a,0x202c33376c722520,0x33202c32376c7225,0x732e7268730a3b32\n"
".quad 0x34376c7225203436,0x2c33376c7225202c,0x6f6c2e0a3b323320,0x3536363420322063\n"
".quad 0x622e6c68730a3120,0x35376c7225203436,0x2c34376c7225202c,0x2e6464610a3b3220\n"
".quad 0x376c722520343673,0x2c346c7225202c36,0x0a3b35376c722520,0x61626f6c672e646c\n"
".quad 0x6625203233662e6c,0x72255b202c303934,0x64610a3b5d36376c,0x7225203436732e64\n"
".quad 0x6c7225202c37376c,0x36393034202c3037,0x20636f6c2e0a3b30,0x3120363636342032\n"
".quad 0x2e6f6c2e64616d0a,0x376c722520343673,0x37376c7225202c38,0x3837336c7225202c\n"
".quad 0x3b34316c7225202c,0x3436622e6c68730a,0x202c39376c722520,0x33202c38376c7225\n"
".quad 0x732e7268730a3b32,0x30386c7225203436,0x2c39376c7225202c,0x6f6c2e0a3b323320\n"
".quad 0x3636363420322063,0x622e6c68730a3120,0x31386c7225203436,0x2c30386c7225202c\n"
".quad 0x2e6464610a3b3220,0x386c722520343673,0x2c346c7225202c32,0x0a3b31386c722520\n"
".quad 0x61626f6c672e646c,0x6625203233662e6c,0x72255b202c313834,0x64610a3b5d32386c\n"
".quad 0x7225203436732e64,0x6c7225202c33386c,0x366c7225202c3932,0x732e6464610a3b39\n"
".quad 0x34386c7225203436,0x2c33386c7225202c,0x0a3b363530353420,0x34203220636f6c2e\n"
".quad 0x616d0a3120373636,0x3436732e6f6c2e64,0x202c35386c722520,0x25202c34386c7225\n"
".quad 0x25202c3837336c72,0x6c68730a3b356c72,0x6c7225203436622e,0x386c7225202c3638\n"
".quad 0x730a3b3233202c35,0x25203436732e7268,0x7225202c37386c72,0x3b3233202c36386c\n"
".quad 0x203220636f6c2e0a,0x730a312037363634,0x25203436622e6c68,0x7225202c38386c72\n"
".quad 0x0a3b32202c37386c,0x203436732e646461,0x25202c39386c7225,0x6c7225202c346c72\n"
".quad 0x672e646c0a3b3838,0x33662e6c61626f6c,0x2c38363466252032,0x5d39386c72255b20\n"
".quad 0x36732e6464610a3b,0x2c30396c72252034,0x202c30376c722520,0x2e0a3b3235313934\n"
".quad 0x3634203220636f6c,0x64616d0a31203836,0x203436732e6f6c2e,0x25202c31396c7225\n"
".quad 0x7225202c30396c72,0x7225202c3837336c,0x6c68730a3b32326c,0x6c7225203436622e\n"
".quad 0x396c7225202c3239,0x730a3b3233202c31,0x25203436732e7268,0x7225202c33396c72\n"
".quad 0x3b3233202c32396c,0x203220636f6c2e0a,0x730a312038363634,0x25203436622e6c68\n"
".quad 0x7225202c34396c72,0x0a3b32202c33396c,0x203436732e646461,0x25202c35396c7225\n"
".quad 0x6c7225202c346c72,0x672e646c0a3b3439,0x33662e6c61626f6c,0x2c35333466252032\n"
".quad 0x5d35396c72255b20,0x36732e6464610a3b,0x2c36396c72252034,0x202c39346c722520\n"
".quad 0x610a3b39366c7225,0x25203436732e6464,0x7225202c37396c72,0x323335202c36396c\n"
".quad 0x636f6c2e0a3b3834,0x2039363634203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x396c7225202c3839,0x37336c7225202c37,0x3b356c7225202c38,0x3436622e6c68730a\n"
".quad 0x202c39396c722520,0x33202c38396c7225,0x732e7268730a3b32,0x30316c7225203436\n"
".quad 0x39396c7225202c30,0x6c2e0a3b3233202c,0x363634203220636f,0x2e6c68730a312039\n"
".quad 0x316c722520343662,0x316c7225202c3130,0x610a3b32202c3030,0x25203436732e6464\n"
".quad 0x25202c3230316c72,0x6c7225202c346c72,0x2e646c0a3b313031,0x662e6c61626f6c67\n"
".quad 0x3936346625203233,0x30316c72255b202c,0x2e6464610a3b5d32,0x3733722520323373\n"
".quad 0x36202c337225202c,0x20636f6c2e0a3b34,0x3120303736342032,0x3436732e7476630a\n"
".quad 0x6c7225203233732e,0x337225202c333031,0x732e6464610a3b37,0x30316c7225203436\n"
".quad 0x2c366c7225202c34,0x3b3330316c722520,0x3436732e6464610a,0x2c3530316c722520\n"
".quad 0x2c3430316c722520,0x0a3b343433373520,0x34203220636f6c2e,0x616d0a3120303736\n"
".quad 0x3436732e6f6c2e64,0x2c3630316c722520,0x2c3530316c722520,0x2c3837336c722520\n"
".quad 0x730a3b356c722520,0x25203436622e6c68,0x25202c3730316c72,0x33202c3630316c72\n"
".quad 0x732e7268730a3b32,0x30316c7225203436,0x30316c7225202c38,0x2e0a3b3233202c37\n"
".quad 0x3634203220636f6c,0x6c68730a31203037,0x6c7225203436622e,0x6c7225202c393031\n"
".quad 0x0a3b32202c383031,0x203436732e646461,0x202c3031316c7225,0x7225202c346c7225\n"
".quad 0x646c0a3b3930316c,0x2e6c61626f6c672e,0x3934662520323366,0x316c72255b202c31\n"
".quad 0x6464610a3b5d3031,0x6c7225203436732e,0x6c7225202c313131,0x343136202c343031\n"
".quad 0x636f6c2e0a3b3034,0x2031373634203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c323131,0x6c7225202c313131,0x6c7225202c383733,0x2e6c68730a3b3431\n"
".quad 0x316c722520343662,0x316c7225202c3331,0x0a3b3233202c3231,0x203436732e726873\n"
".quad 0x202c3431316c7225,0x202c3331316c7225,0x636f6c2e0a3b3233,0x2031373634203220\n"
".quad 0x36622e6c68730a31,0x3531316c72252034,0x3431316c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c363131,0x31316c7225202c34,0x6c672e646c0a3b35\n"
".quad 0x3233662e6c61626f,0x202c363234662520,0x5d3631316c72255b,0x36732e6464610a3b\n"
".quad 0x3731316c72252034,0x2c39326c7225202c,0x3b3330316c722520,0x3436732e6464610a\n"
".quad 0x2c3831316c722520,0x2c3731316c722520,0x0a3b363335353620,0x34203220636f6c2e\n"
".quad 0x616d0a3120323736,0x3436732e6f6c2e64,0x2c3931316c722520,0x2c3831316c722520\n"
".quad 0x2c3837336c722520,0x730a3b356c722520,0x25203436622e6c68,0x25202c3032316c72\n"
".quad 0x33202c3931316c72,0x732e7268730a3b32,0x32316c7225203436,0x32316c7225202c31\n"
".quad 0x2e0a3b3233202c30,0x3634203220636f6c,0x6c68730a31203237,0x6c7225203436622e\n"
".quad 0x6c7225202c323231,0x0a3b32202c313231,0x203436732e646461,0x202c3332316c7225\n"
".quad 0x7225202c346c7225,0x646c0a3b3232316c,0x2e6c61626f6c672e,0x3734662520323366\n"
".quad 0x316c72255b202c30,0x6464610a3b5d3332,0x6c7225203436732e,0x6c7225202c343231\n"
".quad 0x363936202c343031,0x636f6c2e0a3b3233,0x2033373634203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c353231,0x6c7225202c343231,0x6c7225202c383733\n"
".quad 0x2e6c68730a3b3232,0x316c722520343662,0x316c7225202c3632,0x0a3b3233202c3532\n"
".quad 0x203436732e726873,0x202c3732316c7225,0x202c3632316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2033373634203220,0x36622e6c68730a31,0x3832316c72252034,0x3732316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c393231,0x32316c7225202c34\n"
".quad 0x6c672e646c0a3b38,0x3233662e6c61626f,0x202c363334662520,0x5d3932316c72255b\n"
".quad 0x3220636f6c2e0a3b,0x0a31203537363420,0x6172622031702540,0x3b385f3533424220\n"
".quad 0x3220636f6c2e0a0a,0x0a31203236363420,0x2e3436752e747663,0x316c722520323375\n"
".quad 0x37327225202c3033,0x3220636f6c2e0a3b,0x0a31203037363420,0x2e3436752e747663\n"
".quad 0x316c722520323375,0x37337225202c3133,0x36732e6464610a3b,0x3233316c72252034\n"
".quad 0x3033316c7225202c,0x3133316c7225202c,0x36732e6464610a3b,0x3333316c72252034\n"
".quad 0x3233316c7225202c,0x3b3832373337202c,0x3436752e7476630a,0x6c7225203233752e\n"
".quad 0x317225202c343331,0x7261702e646c0a3b,0x25203436752e6d61,0x5b202c3737336c72\n"
".quad 0x5f74726d32315a5f,0x656c676e69735f64,0x705f6d665f536650,0x3b5d335f6d617261\n"
".quad 0x203220636f6c2e0a,0x6d0a312036373634,0x36732e6f6c2e6461,0x3533316c72252034\n"
".quad 0x3333316c7225202c,0x3737336c7225202c,0x3433316c7225202c,0x7261702e646c0a3b\n"
".quad 0x25203436752e6d61,0x5b202c3237336c72,0x5f74726d32315a5f,0x656c676e69735f64\n"
".quad 0x705f6d665f536650,0x3b5d305f6d617261,0x6f742e617476630a,0x2e6c61626f6c672e\n"
".quad 0x316c722520343675,0x336c7225202c3633,0x2e6c68730a3b3237,0x316c722520343662\n"
".quad 0x316c7225202c3733,0x0a3b3233202c3533,0x203436732e726873,0x202c3833316c7225\n"
".quad 0x202c3733316c7225,0x636f6c2e0a3b3233,0x2036373634203220,0x36622e6c68730a31\n"
".quad 0x3933316c72252034,0x3833316c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c303431,0x6c7225202c363331,0x2e646c0a3b393331,0x662e6c61626f6c67\n"
".quad 0x3837346625203233,0x34316c72255b202c,0x3342420a0a3b5d30,0x766f6d0a3a385f35\n"
".quad 0x346625203233662e,0x37346625202c3137,0x20636f6c2e0a3b38,0x3120383736342032\n"
".quad 0x71652e707465730a,0x317025203233732e,0x3733317225202c32,0x7025400a3b31202c\n"
".quad 0x4220617262203231,0x0a3b32325f353342,0x203220636f6c2e0a,0x730a312039393634\n"
".quad 0x732e71652e707465,0x2c33317025203233,0x202c373331722520,0x33317025400a3b33\n"
".quad 0x3342422061726220,0x72620a3b30315f35,0x424220696e752e61,0x0a0a3b31325f3533\n"
".quad 0x3a30315f35334242,0x203220636f6c2e0a,0x25400a3120363331,0x4220617262203370\n"
".quad 0x0a3b34315f353342,0x203220636f6c2e0a,0x25400a3120323431,0x4220617262203570\n"
".quad 0x0a3b33315f353342,0x3233662e766f6d0a,0x202c373734662520,0x6d0a3b3137346625\n"
".quad 0x25203233662e766f,0x6625202c36373466,0x766f6d0a3b303734,0x346625203233662e\n"
".quad 0x36346625202c3038,0x662e766f6d0a3b39,0x3937346625203233,0x3b3836346625202c\n"
".quad 0x3233662e766f6d0a,0x202c363035662520,0x6d0a3b3430356625,0x25203233662e766f\n"
".quad 0x6625202c35303566,0x766f6d0a3b333035,0x356625203233662e,0x31356625202c3931\n"
".quad 0x662e766f6d0a3b37,0x3831356625203233,0x3b3631356625202c,0x696e752e6172620a\n"
".quad 0x35315f3533424220,0x5f353342420a0a3b,0x2e766f6d0a3a3331,0x3734662520323366\n"
".quad 0x3037346625202c36,0x33662e766f6d0a3b,0x2c37373466252032,0x0a3b303734662520\n"
".quad 0x203233662e766f6d,0x25202c3937346625,0x6f6d0a3b38363466,0x6625203233662e76\n"
".quad 0x346625202c303834,0x2e766f6d0a3b3836,0x3035662520323366,0x3330356625202c35\n"
".quad 0x33662e766f6d0a3b,0x2c36303566252032,0x0a3b333035662520,0x203233662e766f6d\n"
".quad 0x25202c3831356625,0x6f6d0a3b36313566,0x6625203233662e76,0x356625202c393135\n"
".quad 0x2e6172620a3b3631,0x3533424220696e75,0x42420a0a3b35315f,0x6d0a3a34315f3533\n"
".quad 0x25203233662e766f,0x6625202c36373466,0x766f6d0a3b313734,0x346625203233662e\n"
".quad 0x37346625202c3737,0x662e766f6d0a3b31,0x3937346625203233,0x3b3936346625202c\n"
".quad 0x3233662e766f6d0a,0x202c303834662520,0x6d0a3b3936346625,0x25203233662e766f\n"
".quad 0x6625202c35303566,0x766f6d0a3b343035,0x356625203233662e,0x30356625202c3630\n"
".quad 0x662e766f6d0a3b34,0x3831356625203233,0x3b3731356625202c,0x3233662e766f6d0a\n"
".quad 0x202c393135662520,0x0a0a3b3731356625,0x3a35315f35334242,0x3233662e766f6d0a\n"
".quad 0x202c373135662520,0x6d0a3b3931356625,0x25203233662e766f,0x6625202c36313566\n"
".quad 0x766f6d0a3b383135,0x356625203233662e,0x30356625202c3430,0x662e766f6d0a3b36\n"
".quad 0x3330356625203233,0x3b3530356625202c,0x3233662e766f6d0a,0x25202c3432662520\n"
".quad 0x6f6d0a3b30383466,0x6625203233662e76,0x37346625202c3532,0x662e766f6d0a3b39\n"
".quad 0x2c32326625203233,0x0a3b373734662520,0x203233662e766f6d,0x6625202c33326625\n"
".quad 0x6f6c2e0a3b363734,0x2038343120322063,0x6220377025400a31,0x5f35334242206172\n"
".quad 0x6f6c2e0a0a3b3931,0x2035353120322063,0x6220317025400a31,0x5f35334242206172\n"
".quad 0x766f6d0a0a3b3831,0x346625203233662e,0x33346625202c3833,0x662e766f6d0a3b36\n"
".quad 0x3733346625203233,0x3b3533346625202c,0x3233662e766f6d0a,0x202c343734662520\n"
".quad 0x6f6d0a3b33326625,0x6625203233662e76,0x326625202c353734,0x662e766f6d0a3b32\n"
".quad 0x3237346625203233,0x0a3b35326625202c,0x203233662e766f6d,0x25202c3337346625\n"
".quad 0x766f6d0a3b343266,0x346625203233662e,0x39346625202c3339,0x662e766f6d0a3b31\n"
".quad 0x3239346625203233,0x3b3039346625202c,0x696e752e6172620a,0x30325f3533424220\n"
".quad 0x5f353342420a0a3b,0x2e766f6d0a3a3831,0x3334662520323366,0x3533346625202c37\n"
".quad 0x33662e766f6d0a3b,0x2c38333466252032,0x0a3b353334662520,0x203233662e766f6d\n"
".quad 0x25202c3437346625,0x766f6d0a3b353266,0x346625203233662e,0x34326625202c3537\n"
".quad 0x33662e766f6d0a3b,0x2c32373466252032,0x6d0a3b3532662520,0x25203233662e766f\n"
".quad 0x6625202c33373466,0x2e766f6d0a3b3432,0x3934662520323366,0x3039346625202c32\n"
".quad 0x33662e766f6d0a3b,0x2c33393466252032,0x0a3b303934662520,0x20696e752e617262\n"
".quad 0x3b30325f35334242,0x315f353342420a0a,0x662e766f6d0a3a39,0x3733346625203233\n"
".quad 0x3b3633346625202c,0x3233662e766f6d0a,0x202c383334662520,0x6d0a3b3633346625\n"
".quad 0x25203233662e766f,0x6625202c34373466,0x2e766f6d0a3b3332,0x3734662520323366\n"
".quad 0x3b32326625202c35,0x3233662e766f6d0a,0x202c323734662520,0x6f6d0a3b33326625\n"
".quad 0x6625203233662e76,0x326625202c333734,0x662e766f6d0a3b32,0x3239346625203233\n"
".quad 0x3b3139346625202c,0x3233662e766f6d0a,0x202c333934662520,0x0a0a3b3139346625\n"
".quad 0x3a30325f35334242,0x3233662e766f6d0a,0x202c313934662520,0x6d0a3b3339346625\n"
".quad 0x25203233662e766f,0x6625202c30393466,0x766f6d0a3b323934,0x346625203233662e\n"
".quad 0x37346625202c3137,0x662e766f6d0a3b35,0x3037346625203233,0x3b3437346625202c\n"
".quad 0x3233662e766f6d0a,0x202c393634662520,0x6d0a3b3337346625,0x25203233662e766f\n"
".quad 0x6625202c38363466,0x766f6d0a3b323734,0x346625203233662e,0x33346625202c3633\n"
".quad 0x662e766f6d0a3b38,0x3533346625203233,0x3b3733346625202c,0x3233662e766f6d0a\n"
".quad 0x30202c3136662520,0x3030303043303466,0x20636f6c2e0a3b30,0x0a31203936312032\n"
".quad 0x203233662e6c756d,0x6625202c32366625,0x30306630202c3136,0x0a3b303030303030\n"
".quad 0x203233662e766f6d,0x6630202c33366625,0x3030303030303030,0x33662e766f6d0a3b\n"
".quad 0x202c343666252032,0x4538333644336630,0x636f6c2e0a3b3933,0x3520303536203320\n"
".quad 0x2e6e722e616d660a,0x3235662520323366,0x2c34366625202c30,0x25202c3236662520\n"
".quad 0x636f6c2e0a3b3466,0x3120303731203220,0x3233662e6464610a,0x25202c3536662520\n"
".quad 0x336630202c333666,0x3b41303744334144,0x3233662e6c756d0a,0x25202c3636662520\n"
".quad 0x346630202c353666,0x3b30303030304330,0x3233662e766f6d0a,0x30202c3736662520\n"
".quad 0x3345383345433366,0x20636f6c2e0a3b39,0x0a35203035362033,0x662e6e722e616d66\n"
".quad 0x3730356625203233,0x202c37366625202c,0x6625202c36366625,0x6f6c2e0a3b343035\n"
".quad 0x2031373120322063,0x33662e6275730a31,0x202c383666252032,0x6630202c33366625\n"
".quad 0x4130374433414433,0x33662e6c756d0a3b,0x202c393666252032,0x6630202c38366625\n"
".quad 0x3030303030433034,0x3320636f6c2e0a3b,0x660a352030353620,0x33662e6e722e616d\n"
".quad 0x2c34393466252032,0x25202c3736662520,0x356625202c393666,0x636f6c2e0a3b3330\n"
".quad 0x3120323731203220,0x3233662e6464610a,0x25202c3037662520,0x306630202c333666\n"
".quad 0x3b30303030303030,0x3233662e6c756d0a,0x25202c3137662520,0x346630202c303766\n"
".quad 0x3b30303030304330,0x203320636f6c2e0a,0x6d660a3520303536,0x3233662e6e722e61\n"
".quad 0x202c313834662520,0x6625202c37366625,0x33346625202c3137,0x20636f6c2e0a3b36\n"
".quad 0x0a31203337312032,0x203233662e627573,0x6625202c32376625,0x30306630202c3336\n"
".quad 0x0a3b303030303030,0x203233662e6c756d,0x6625202c33376625,0x30346630202c3237\n"
".quad 0x0a3b303030303043,0x36203320636f6c2e,0x616d660a35203035,0x203233662e6e722e\n"
".quad 0x25202c3632346625,0x376625202c373666,0x3533346625202c33,0x5f353342420a0a3b\n"
".quad 0x636f6c2e0a3a3132,0x2034303734203220,0x33662e6275730a31,0x202c343766252032\n"
".quad 0x25202c3032356625,0x2e6464610a3b3466,0x3537662520323366,0x202c34376625202c\n"
".quad 0x730a3b3730356625,0x25203233662e6275,0x376625202c363766,0x3330356625202c35\n"
".quad 0x33662e6275730a3b,0x202c373766252032,0x6625202c36376625,0x6464610a3b343035\n"
".quad 0x376625203233662e,0x2c37376625202c38,0x0a3b343934662520,0x203233662e646461\n"
".quad 0x6625202c39376625,0x38346625202c3837,0x662e6275730a3b31,0x2c30386625203233\n"
".quad 0x25202c3937662520,0x64610a3b35333466,0x6625203233662e64,0x30386625202c3138\n"
".quad 0x3b3632346625202c,0x3233662e6275730a,0x25202c3238662520,0x346625202c313866\n"
".quad 0x2e6275730a3b3633,0x3338662520323366,0x2c3631356625202c,0x0a3b373135662520\n"
".quad 0x203233662e646461,0x6625202c34386625,0x30356625202c3338,0x662e6464610a3b37\n"
".quad 0x2c35386625203233,0x25202c3438662520,0x75730a3b33303566,0x6625203233662e62\n"
".quad 0x35386625202c3638,0x3b3430356625202c,0x3233662e6275730a,0x25202c3738662520\n"
".quad 0x346625202c363866,0x2e6464610a3b3439,0x3838662520323366,0x202c37386625202c\n"
".quad 0x730a3b3836346625,0x25203233662e6275,0x386625202c393866,0x3936346625202c38\n"
".quad 0x33662e6464610a3b,0x202c303966252032,0x6625202c39386625,0x6275730a3b303734\n"
".quad 0x396625203233662e,0x2c30396625202c31,0x0a3b313734662520,0x203233662e646461\n"
".quad 0x6625202c32396625,0x346625202c303934,0x2e6464610a3b3138,0x3339662520323366\n"
".quad 0x202c32396625202c,0x610a3b3836346625,0x25203233662e6464,0x396625202c343966\n"
".quad 0x3533346625202c33,0x33662e6464610a3b,0x202c353966252032,0x6625202c34396625\n"
".quad 0x6275730a3b393634,0x396625203233662e,0x2c35396625202c36,0x0a3b313934662520\n"
".quad 0x203233662e627573,0x6625202c37396625,0x32346625202c3639,0x662e6275730a3b36\n"
".quad 0x2c38396625203233,0x25202c3739662520,0x75730a3b30373466,0x6625203233662e62\n"
".quad 0x38396625202c3939,0x3b3633346625202c,0x3233662e6275730a,0x202c303031662520\n"
".quad 0x6625202c39396625,0x6275730a3b313734,0x316625203233662e,0x30356625202c3130\n"
".quad 0x0a3b326625202c37,0x34203220636f6c2e,0x64610a3120343037,0x6625203233662e64\n"
".quad 0x316625202c323031,0x30356625202c3130,0x662e6464610a3b33,0x3330316625203233\n"
".quad 0x2c3230316625202c,0x0a3b343035662520,0x203233662e646461,0x25202c3430316625\n"
".quad 0x6625202c33303166,0x6464610a3b343934,0x316625203233662e,0x30316625202c3530\n"
".quad 0x3138346625202c34,0x33662e6464610a3b,0x2c36303166252032,0x202c353031662520\n"
".quad 0x610a3b3836346625,0x25203233662e6464,0x6625202c37303166,0x346625202c363031\n"
".quad 0x2e6464610a3b3533,0x3031662520323366,0x3730316625202c38,0x3b3936346625202c\n"
".quad 0x3233662e6464610a,0x202c393031662520,0x25202c3830316625,0x64610a3b36323466\n"
".quad 0x6625203233662e64,0x316625202c303131,0x37346625202c3930,0x662e6464610a3b30\n"
".quad 0x3131316625203233,0x2c3031316625202c,0x0a3b363334662520,0x203233662e646461\n"
".quad 0x25202c3231316625,0x6625202c31313166,0x6c756d0a3b313734,0x316625203233662e\n"
".quad 0x31396625202c3331,0x0a3b31396625202c,0x662e6e722e616d66,0x3431316625203233\n"
".quad 0x202c32386625202c,0x6625202c32386625,0x6c756d0a3b333131,0x316625203233662e\n"
".quad 0x30316625202c3531,0x3030316625202c30,0x6e722e616d660a3b,0x316625203233662e\n"
".quad 0x30316625202c3631,0x3030316625202c30,0x3b3431316625202c,0x3233662e6275730a\n"
".quad 0x202c373131662520,0x25202c3231316625,0x756d0a3b36313166,0x6625203233662e6c\n"
".quad 0x356625202c383131,0x30436630202c3032,0x0a3b303030303038,0x662e6e722e616d66\n"
".quad 0x3931316625203233,0x30202c326625202c,0x3030303034313466,0x3831316625202c30\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x31356625202c3032,0x3830436630202c36\n"
".quad 0x25202c3030303030,0x6d660a3b39313166,0x3233662e6e722e61,0x202c313231662520\n"
".quad 0x436630202c346625,0x2c30303030303830,0x0a3b303231662520,0x662e6e722e616d66\n"
".quad 0x3232316625203233,0x2c3731356625202c,0x3030383043663020,0x316625202c303030\n"
".quad 0x2e6464610a3b3132,0x3231662520323366,0x3232316625202c33,0x3b3730356625202c\n"
".quad 0x3233662e6464610a,0x202c343231662520,0x25202c3332316625,0x64610a3b33303566\n"
".quad 0x6625203233662e64,0x316625202c353231,0x30356625202c3432,0x662e6464610a3b34\n"
".quad 0x3632316625203233,0x2c3532316625202c,0x0a3b343934662520,0x662e6e722e616d66\n"
".quad 0x3732316625203233,0x2c3039346625202c,0x3030383043663020,0x316625202c303030\n"
".quad 0x2e6464610a3b3632,0x3231662520323366,0x3732316625202c38,0x3b3138346625202c\n"
".quad 0x3233662e6464610a,0x202c393231662520,0x25202c3832316625,0x64610a3b38363466\n"
".quad 0x6625203233662e64,0x316625202c303331,0x33346625202c3932,0x662e6464610a3b35\n"
".quad 0x3133316625203233,0x2c3033316625202c,0x0a3b393634662520,0x662e6e722e616d66\n"
".quad 0x3233316625203233,0x2c3139346625202c,0x3030383043663020,0x316625202c303030\n"
".quad 0x2e6464610a3b3133,0x3331662520323366,0x3233316625202c33,0x3b3632346625202c\n"
".quad 0x3233662e6464610a,0x202c343331662520,0x25202c3333316625,0x64610a3b30373466\n"
".quad 0x6625203233662e64,0x316625202c353331,0x33346625202c3433,0x662e6464610a3b36\n"
".quad 0x3633316625203233,0x2c3533316625202c,0x0a3b313734662520,0x662e6e722e616d66\n"
".quad 0x3733316625203233,0x2c3631316625202c,0x3431463034663020,0x316625202c343135\n"
".quad 0x2e6c756d0a3b3633,0x3331662520323366,0x202c346625202c38,0x3030304130346630\n"
".quad 0x2e616d660a3b3030,0x25203233662e6e72,0x6625202c39333166,0x436630202c303235\n"
".quad 0x2c30303030304130,0x0a3b383331662520,0x662e6e722e616d66,0x3034316625203233\n"
".quad 0x202c32386625202c,0x3535354446336630,0x33316625202c3535,0x662e6c756d0a3b39\n"
".quad 0x3134316625203233,0x2c3731356625202c,0x3030413034663020,0x616d660a3b303030\n"
".quad 0x203233662e6e722e,0x25202c3234316625,0x6630202c36313566,0x3030303030413043\n"
".quad 0x3b3134316625202c,0x2e6e722e616d660a,0x3431662520323366,0x2c31396625202c33\n"
".quad 0x3535444633663020,0x316625202c353535,0x2e6c756d0a3b3234,0x3431662520323366\n"
".quad 0x3139346625202c34,0x304130346630202c,0x6d660a3b30303030,0x3233662e6e722e61\n"
".quad 0x202c353431662520,0x30202c3039346625,0x3030303041304366,0x3434316625202c30\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x30316625202c3634,0x4446336630202c30\n"
".quad 0x25202c3535353535,0x64610a3b35343166,0x6625203233662e64,0x356625202c373431\n"
".quad 0x32356625202c3032,0x662e6275730a3b30,0x3834316625203233,0x2c3734316625202c\n"
".quad 0x0a3b363135662520,0x34203220636f6c2e,0x64610a3120343037,0x6625203233662e64\n"
".quad 0x346625202c393431,0x610a3b346625202c,0x25203233662e6464,0x6625202c30353166\n"
".quad 0x316625202c383431,0x2e6275730a3b3934,0x3531662520323366,0x3035316625202c31\n"
".quad 0x3b3731356625202c,0x203220636f6c2e0a,0x610a312034303734,0x25203233662e6464\n"
".quad 0x6625202c32353166,0x356625202c313531,0x2e6464610a3b3730,0x3531662520323366\n"
".quad 0x3235316625202c33,0x3b3330356625202c,0x3233662e6464610a,0x202c343531662520\n"
".quad 0x25202c3335316625,0x64610a3b34303566,0x6625203233662e64,0x316625202c353531\n"
".quad 0x39346625202c3435,0x662e6275730a3b34,0x3635316625203233,0x2c3535316625202c\n"
".quad 0x0a3b303934662520,0x34203220636f6c2e,0x64610a3120343037,0x6625203233662e64\n"
".quad 0x316625202c373531,0x38346625202c3635,0x662e766f6d0a3b31,0x3835316625203233\n"
".quad 0x303030436630202c,0x6c2e0a3b30303030,0x303734203220636f,0x2e616d660a312034\n"
".quad 0x25203233662e6e72,0x6625202c39353166,0x436630202c383634,0x2c30303030303030\n"
".quad 0x0a3b373531662520,0x203233662e646461,0x25202c3036316625,0x6625202c39353166\n"
".quad 0x616d660a3b353334,0x203233662e6e722e,0x25202c3136316625,0x6630202c39363466\n"
".quad 0x3030303030303043,0x3b3036316625202c,0x3233662e6275730a,0x202c323631662520\n"
".quad 0x25202c3136316625,0x6c2e0a3b31393466,0x303734203220636f,0x2e6464610a312034\n"
".quad 0x3631662520323366,0x3236316625202c33,0x3b3632346625202c,0x2e6e722e616d660a\n"
".quad 0x3631662520323366,0x3037346625202c34,0x303030436630202c,0x6625202c30303030\n"
".quad 0x6464610a3b333631,0x316625203233662e,0x36316625202c3536,0x3633346625202c34\n"
".quad 0x6e722e616d660a3b,0x316625203233662e,0x37346625202c3636,0x3030436630202c31\n"
".quad 0x25202c3030303030,0x64610a3b35363166,0x6625203233662e64,0x386625202c373631\n"
".quad 0x3b32386625202c32,0x2e6e722e616d660a,0x3631662520323366,0x2c31396625202c38\n"
".quad 0x25202c3139662520,0x656e0a3b35313166,0x6625203233662e67,0x316625202c393631\n"
".quad 0x2e616d660a3b3836,0x25203233662e6e72,0x6625202c30373166,0x386625202c373631\n"
".quad 0x3936316625202c32,0x33662e6275730a3b,0x2c31373166252032,0x202c363631662520\n"
".quad 0x610a3b3037316625,0x25203233662e6464,0x6625202c32373166,0x356625202c363135\n"
".quad 0x2e616d660a3b3631,0x25203233662e6e72,0x6625202c33373166,0x436630202c303235\n"
".quad 0x2c30303030303830,0x0a3b323731662520,0x662e6e722e616d66,0x3437316625203233\n"
".quad 0x30202c346625202c,0x3030303038304366,0x3337316625202c30,0x33662e6464610a3b\n"
".quad 0x2c35373166252032,0x202c373135662520,0x610a3b3731356625,0x25203233662e6464\n"
".quad 0x6625202c36373166,0x316625202c343731,0x2e6464610a3b3537,0x3731662520323366\n"
".quad 0x3637316625202c37,0x3b3730356625202c,0x3233662e6464610a,0x202c383731662520\n"
".quad 0x25202c3737316625,0x64610a3b33303566,0x6625203233662e64,0x316625202c393731\n"
".quad 0x30356625202c3837,0x662e6464610a3b34,0x3038316625203233,0x2c3937316625202c\n"
".quad 0x0a3b343934662520,0x203233662e646461,0x25202c3138316625,0x6625202c30393466\n"
".quad 0x6464610a3b303934,0x316625203233662e,0x38316625202c3238,0x3138316625202c30\n"
".quad 0x33662e6464610a3b,0x2c33383166252032,0x202c323831662520,0x660a3b3138346625\n"
".quad 0x33662e6e722e616d,0x2c34383166252032,0x202c383634662520,0x3030303030436630\n"
".quad 0x38316625202c3030,0x662e6464610a3b33,0x3538316625203233,0x2c3438316625202c\n"
".quad 0x0a3b353334662520,0x662e6e722e616d66,0x3638316625203233,0x2c3936346625202c\n"
".quad 0x3030303043663020,0x316625202c303030,0x2e6464610a3b3538,0x3831662520323366\n"
".quad 0x3139346625202c37,0x3b3139346625202c,0x3233662e6464610a,0x202c383831662520\n"
".quad 0x25202c3638316625,0x64610a3b37383166,0x6625203233662e64,0x316625202c393831\n"
".quad 0x32346625202c3838,0x722e616d660a3b36,0x6625203233662e6e,0x346625202c303931\n"
".quad 0x30436630202c3037,0x202c303030303030,0x610a3b3938316625,0x25203233662e6464\n"
".quad 0x6625202c31393166,0x346625202c303931,0x2e616d660a3b3633,0x25203233662e6e72\n"
".quad 0x6625202c32393166,0x436630202c313734,0x2c30303030303030,0x0a3b313931662520\n"
".quad 0x203233662e646461,0x25202c3339316625,0x6625202c36313566,0x6464610a3b373135\n"
".quad 0x316625203233662e,0x39316625202c3439,0x3730356625202c33,0x33662e6464610a3b\n"
".quad 0x2c35393166252032,0x202c343931662520,0x610a3b3330356625,0x25203233662e6464\n"
".quad 0x6625202c36393166,0x356625202c353931,0x2e6464610a3b3430,0x3931662520323366\n"
".quad 0x3639316625202c37,0x3b3439346625202c,0x3233662e6275730a,0x202c383931662520\n"
".quad 0x25202c3739316625,0x75730a3b30393466,0x6625203233662e62,0x316625202c393931\n"
".quad 0x38346625202c3839,0x662e6275730a3b31,0x3030326625203233,0x2c3939316625202c\n"
".quad 0x0a3b353334662520,0x203233662e627573,0x25202c3130326625,0x6625202c30303266\n"
".quad 0x6275730a3b313934,0x326625203233662e,0x30326625202c3230,0x3632346625202c31\n"
".quad 0x33662e6275730a3b,0x2c33303266252032,0x202c323032662520,0x2e0a3b3633346625\n"
".quad 0x3734203220636f6c,0x67656e0a31203430,0x326625203233662e,0x30316625202c3430\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x326625202c353032,0x30316625202c3430\n"
".quad 0x3331316625202c30,0x33662e6275730a3b,0x2c36303266252032,0x202c333032662520\n"
".quad 0x6e0a3b3530326625,0x25203233662e6765,0x6625202c37303266,0x616d660a3b353731\n"
".quad 0x203233662e6e722e,0x25202c3830326625,0x6625202c36313566,0x326625202c383531\n"
".quad 0x2e6464610a3b3730,0x3032662520323366,0x3830326625202c39,0x3b3730356625202c\n"
".quad 0x3233662e6464610a,0x202c303132662520,0x25202c3930326625,0x64610a3b33303566\n"
".quad 0x6625203233662e64,0x326625202c313132,0x30356625202c3031,0x662e6464610a3b34\n"
".quad 0x3231326625203233,0x2c3131326625202c,0x0a3b343934662520,0x203233662e646461\n"
".quad 0x25202c3331326625,0x6625202c32313266,0x6275730a3b313831,0x326625203233662e\n"
".quad 0x31326625202c3431,0x3138346625202c33,0x33662e6275730a3b,0x2c35313266252032\n"
".quad 0x202c343132662520,0x2e0a3b3533346625,0x3734203220636f6c,0x6464610a31203430\n"
".quad 0x326625203233662e,0x31326625202c3631,0x3738316625202c35,0x33662e6275730a3b\n"
".quad 0x2c37313266252032,0x202c363132662520,0x730a3b3632346625,0x25203233662e6275\n"
".quad 0x6625202c38313266,0x346625202c373132,0x2e6275730a3b3633,0x3132662520323366\n"
".quad 0x3730356625202c39,0x3b3330356625202c,0x203220636f6c2e0a,0x610a312034303734\n"
".quad 0x25203233662e6464,0x6625202c30323266,0x356625202c393132,0x2e6275730a3b3430\n"
".quad 0x3232662520323366,0x3032326625202c31,0x3b3439346625202c,0x203220636f6c2e0a\n"
".quad 0x6e0a312034303734,0x25203233662e6765,0x6625202c32323266,0x2e616d660a3b3238\n"
".quad 0x25203233662e6e72,0x6625202c33323266,0x396625202c323232,0x3132326625202c31\n"
".quad 0x33662e6275730a3b,0x2c34323266252032,0x202c383634662520,0x730a3b3936346625\n"
".quad 0x25203233662e6275,0x6625202c35323266,0x346625202c343232,0x636f6c2e0a3b3037\n"
".quad 0x2034303734203220,0x33662e6464610a31,0x2c36323266252032,0x202c353232662520\n"
".quad 0x6e0a3b3137346625,0x25203233662e6765,0x6625202c37323266,0x2e616d660a3b3139\n"
".quad 0x25203233662e6e72,0x6625202c38323266,0x316625202c373232,0x32326625202c3030\n"
".quad 0x662e6275730a3b36,0x3932326625203233,0x2c3138346625202c,0x0a3b353334662520\n"
".quad 0x203233662e627573,0x25202c3033326625,0x6625202c39323266,0x6f6c2e0a3b363234\n"
".quad 0x3430373420322063,0x662e6464610a3120,0x3133326625203233,0x2c3033326625202c\n"
".quad 0x0a3b363334662520,0x662e6e722e616d66,0x3233326625203233,0x2c3232326625202c\n"
".quad 0x202c303031662520,0x730a3b3133326625,0x25203233662e6275,0x6625202c33333266\n"
".quad 0x356625202c393132,0x636f6c2e0a3b3430,0x2034303734203220,0x33662e6464610a31\n"
".quad 0x2c34333266252032,0x202c333332662520,0x730a3b3439346625,0x25203233662e6275\n"
".quad 0x6625202c35333266,0x346625202c343332,0x2e6464610a3b3138,0x3332662520323366\n"
".quad 0x3533326625202c36,0x3b3533346625202c,0x3233662e6275730a,0x202c373332662520\n"
".quad 0x25202c3633326625,0x6c2e0a3b36323466,0x303734203220636f,0x2e6464610a312034\n"
".quad 0x3332662520323366,0x3733326625202c38,0x3b3633346625202c,0x3233662e67656e0a\n"
".quad 0x202c393332662520,0x730a3b3330356625,0x25203233662e6275,0x6625202c30343266\n"
".quad 0x356625202c393332,0x636f6c2e0a3b3730,0x2034303734203220,0x33662e6464610a31\n"
".quad 0x2c31343266252032,0x202c303432662520,0x610a3b3430356625,0x25203233662e6464\n"
".quad 0x6625202c32343266,0x346625202c313432,0x2e6464610a3b3439,0x3432662520323366\n"
".quad 0x3234326625202c33,0x3b3836346625202c,0x3233662e6275730a,0x202c343432662520\n"
".quad 0x25202c3334326625,0x6c2e0a3b39363466,0x303734203220636f,0x2e6464610a312034\n"
".quad 0x3432662520323366,0x3434326625202c35,0x3b3037346625202c,0x3233662e6275730a\n"
".quad 0x202c363432662520,0x25202c3534326625,0x75730a3b31373466,0x6625203233662e62\n"
".quad 0x346625202c373432,0x36346625202c3138,0x20636f6c2e0a3b38,0x3120343037342032\n"
".quad 0x3233662e6464610a,0x202c383432662520,0x25202c3734326625,0x75730a3b35333466\n"
".quad 0x6625203233662e62,0x326625202c393432,0x36346625202c3834,0x662e6275730a3b39\n"
".quad 0x3035326625203233,0x2c3934326625202c,0x0a3b363234662520,0x34203220636f6c2e\n"
".quad 0x64610a3120343037,0x6625203233662e64,0x326625202c313532,0x37346625202c3035\n"
".quad 0x662e6275730a3b30,0x3235326625203233,0x2c3135326625202c,0x0a3b363334662520\n"
".quad 0x34203220636f6c2e,0x64610a3120343037,0x6625203233662e64,0x326625202c333532\n"
".quad 0x37346625202c3235,0x662e766f6d0a3b31,0x3435326625203233,0x303845336630202c\n"
".quad 0x646c0a3b30303030,0x662e6d617261702e,0x3532346625203233,0x6d32315a5f5b202c\n"
".quad 0x6e69735f645f7472,0x665f536650656c67,0x5f6d617261705f6d,0x636f6c2e0a3b5d32\n"
".quad 0x2034303734203220,0x33662e6c756d0a31,0x2c35353266252032,0x202c353234662520\n"
".quad 0x3030303845336630,0x2e766f6d0a3b3030,0x3532662520323366,0x3045336630202c36\n"
".quad 0x2e0a3b3030303030,0x3734203220636f6c,0x6c756d0a31203430,0x326625203233662e\n"
".quad 0x31326625202c3735,0x3244336630202c38,0x6d0a3b4241414141,0x25203233662e766f\n"
".quad 0x6630202c38353266,0x4241414141324433,0x3220636f6c2e0a3b,0x0a31203430373420\n"
".quad 0x203233662e6c756d,0x25202c3935326625,0x6630202c35323466,0x4241414141414433\n"
".quad 0x33662e6c756d0a3b,0x2c30363266252032,0x202c323931662520,0x4538333643336630\n"
".quad 0x2e6c756d0a3b3933,0x3632662520323366,0x3532346625202c31,0x334543336630202c\n"
".quad 0x756d0a3b39334538,0x6625203233662e6c,0x316625202c323632,0x36326625202c3137\n"
".quad 0x662e6c756d0a3b31,0x3336326625203233,0x2c3034316625202c,0x4343434333663020\n"
".quad 0x766f6d0a3b444343,0x326625203233662e,0x43336630202c3436,0x0a3b444343434343\n"
".quad 0x34203220636f6c2e,0x756d0a3120343037,0x6625203233662e6c,0x316625202c353632\n"
".quad 0x43336630202c3334,0x0a3b444343434343,0x203233662e6c756d,0x25202c3636326625\n"
".quad 0x6630202c36343166,0x4443434343434333,0x33662e6c756d0a3b,0x2c37363266252032\n"
".quad 0x202c373331662520,0x3830323842336630,0x2e6c756d0a3b3132,0x3632662520323366\n"
".quad 0x3736326625202c38,0x303431346630202c,0x6d660a3b30303030,0x3233662e6e722e61\n"
".quad 0x202c393632662520,0x30202c3731316625,0x3346433337454266,0x3836326625202c44\n"
".quad 0x33662e6275730a3b,0x2c30373266252032,0x6625202c32662520,0x6c756d0a3b393632\n"
".quad 0x326625203233662e,0x36326625202c3137,0x3830436630202c37,0x660a3b3030303030\n"
".quad 0x33662e6e722e616d,0x2c32373266252032,0x202c373131662520,0x4243324244426630\n"
".quad 0x37326625202c4432,0x722e616d660a3b31,0x6625203233662e6e,0x326625202c333732\n"
".quad 0x30436630202c3336,0x202c303030303038,0x660a3b3237326625,0x33662e6e722e616d\n"
".quad 0x2c34373266252032,0x202c313731662520,0x25202c3136326625,0x64610a3b32363266\n"
".quad 0x6625203233662e64,0x326625202c353732,0x37326625202c3337,0x722e616d660a3b34\n"
".quad 0x6625203233662e6e,0x326625202c363732,0x30436630202c3036,0x202c303030303038\n"
".quad 0x730a3b3537326625,0x25203233662e6275,0x6625202c37373266,0x326625202c303235\n"
".quad 0x2e616d660a3b3637,0x25203233662e6e72,0x6625202c38373266,0x436630202c353632\n"
".quad 0x2c30303030303830,0x0a3b323732662520,0x203233662e67656e,0x25202c3937326625\n"
".quad 0x6d660a3b31373166,0x3233662e6e722e61,0x202c303832662520,0x25202c3937326625\n"
".quad 0x6625202c31363266,0x6f6c2e0a3b383732,0x3430373420322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x316625202c313832,0x43336630202c3239,0x202c393345383336\n"
".quad 0x610a3b3036326625,0x25203233662e6464,0x6625202c32383266,0x326625202c303832\n"
".quad 0x2e616d660a3b3138,0x25203233662e6e72,0x6625202c33383266,0x326625202c363032\n"
".quad 0x38326625202c3935,0x722e616d660a3b32,0x6625203233662e6e,0x326625202c343832\n"
".quad 0x30436630202c3735,0x202c303030303030,0x730a3b3338326625,0x25203233662e6275\n"
".quad 0x6625202c35383266,0x326625202c363135,0x2e616d660a3b3438,0x25203233662e6e72\n"
".quad 0x6625202c36383266,0x346630202c333632,0x2c30303030303830,0x0a3b323732662520\n"
".quad 0x203233662e646461,0x25202c3738326625,0x6625202c36383266,0x616d660a3b343732\n"
".quad 0x203233662e6e722e,0x25202c3838326625,0x6630202c30363266,0x3030303030383043\n"
".quad 0x3b3738326625202c,0x3233662e6275730a,0x202c393832662520,0x326625202c346625\n"
".quad 0x2e616d660a3b3838,0x25203233662e6e72,0x6625202c30393266,0x346630202c353632\n"
".quad 0x2c30303030303830,0x0a3b323732662520,0x662e6e722e616d66,0x3139326625203233\n"
".quad 0x2c3937326625202c,0x202c313632662520,0x2e0a3b3039326625,0x3734203220636f6c\n"
".quad 0x6464610a31203430,0x326625203233662e,0x39326625202c3239,0x3138326625202c31\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x30326625202c3339,0x3935326625202c36\n"
".quad 0x3b3239326625202c,0x2e6e722e616d660a,0x3932662520323366,0x3735326625202c34\n"
".quad 0x303030436630202c,0x6625202c30303030,0x6275730a3b333932,0x326625203233662e\n"
".quad 0x31356625202c3539,0x3439326625202c37,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x31316625202c3639,0x3844336630202c37,0x25202c3032383032,0x6d660a3b37363266\n"
".quad 0x3233662e6e722e61,0x202c373932662520,0x30202c3034316625,0x4343434343433366\n"
".quad 0x3639326625202c44,0x6e722e616d660a3b,0x326625203233662e,0x34316625202c3839\n"
".quad 0x4343336630202c33,0x25202c4443434343,0x6d660a3b37393266,0x3233662e6e722e61\n"
".quad 0x202c393932662520,0x25202c3137316625,0x6625202c31363266,0x616d660a3b383932\n"
".quad 0x203233662e6e722e,0x25202c3030336625,0x6630202c32393166,0x3933453833364333\n"
".quad 0x3b3939326625202c,0x2e6e722e616d660a,0x3033662520323366,0x3630326625202c31\n"
".quad 0x2c3935326625202c,0x0a3b303033662520,0x662e6e722e616d66,0x3230336625203233\n"
".quad 0x2c3831326625202c,0x4141324433663020,0x336625202c424141,0x2e616d660a3b3130\n"
".quad 0x25203233662e6e72,0x6625202c33303366,0x336630202c333232,0x2c30303030303845\n"
".quad 0x0a3b323033662520,0x662e6e722e616d66,0x3430336625203233,0x2c3833326625202c\n"
".quad 0x3030304533663020,0x336625202c303030,0x2e67656e0a3b3330,0x3033662520323366\n"
".quad 0x3634326625202c35,0x6e722e616d660a3b,0x336625203233662e,0x30336625202c3630\n"
".quad 0x3635326625202c35,0x3b3430336625202c,0x203220636f6c2e0a,0x730a312034303734\n"
".quad 0x25203233662e6275,0x6625202c37303366,0x336625202c373035,0x2e67656e0a3b3630\n"
".quad 0x3033662520323366,0x3034316625202c38,0x6e722e616d660a3b,0x336625203233662e\n"
".quad 0x30336625202c3930,0x3436326625202c38,0x3b3639326625202c,0x203220636f6c2e0a\n"
".quad 0x660a312034303734,0x33662e6e722e616d,0x2c30313366252032,0x202c333431662520\n"
".quad 0x4343434343336630,0x30336625202c4443,0x722e616d660a3b39,0x6625203233662e6e\n"
".quad 0x316625202c313133,0x36326625202c3137,0x3031336625202c31,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x39316625202c3231,0x3643336630202c32,0x25202c3933453833\n"
".quad 0x6d660a3b31313366,0x3233662e6e722e61,0x202c333133662520,0x25202c3630326625\n"
".quad 0x6625202c39353266,0x616d660a3b323133,0x203233662e6e722e,0x25202c3431336625\n"
".quad 0x6630202c38313266,0x4241414141324433,0x3b3331336625202c,0x3233662e67656e0a\n"
".quad 0x202c353133662520,0x660a3b3332326625,0x33662e6e722e616d,0x2c36313366252032\n"
".quad 0x202c353133662520,0x25202c3435326625,0x656e0a3b34313366,0x6625203233662e67\n"
".quad 0x326625202c373133,0x2e616d660a3b3833,0x25203233662e6e72,0x6625202c38313366\n"
".quad 0x326625202c373133,0x31336625202c3635,0x722e616d660a3b36,0x6625203233662e6e\n"
".quad 0x336625202c393133,0x35326625202c3530,0x3831336625202c36,0x3220636f6c2e0a3b\n"
".quad 0x0a31203430373420,0x203233662e627573,0x25202c3032336625,0x6625202c33303566\n"
".quad 0x67656e0a3b393133,0x336625203233662e,0x34316625202c3132,0x722e616d660a3b33\n"
".quad 0x6625203233662e6e,0x336625202c323233,0x36326625202c3132,0x3930336625202c34\n"
".quad 0x3220636f6c2e0a3b,0x0a31203430373420,0x662e6e722e616d66,0x3332336625203233\n"
".quad 0x2c3137316625202c,0x202c313632662520,0x660a3b3232336625,0x33662e6e722e616d\n"
".quad 0x2c34323366252032,0x202c323931662520,0x4538333643336630,0x32336625202c3933\n"
".quad 0x722e616d660a3b33,0x6625203233662e6e,0x326625202c353233,0x35326625202c3630\n"
".quad 0x3432336625202c39,0x6e722e616d660a3b,0x336625203233662e,0x31326625202c3632\n"
".quad 0x3244336630202c38,0x25202c4241414141,0x6d660a3b35323366,0x3233662e6e722e61\n"
".quad 0x202c373233662520,0x30202c3332326625,0x3030303038453366,0x3632336625202c30\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x31336625202c3832,0x3635326625202c37\n"
".quad 0x3b3732336625202c,0x203220636f6c2e0a,0x660a312034303734,0x33662e6e722e616d\n"
".quad 0x2c39323366252032,0x202c363432662520,0x3030303045336630,0x32336625202c3030\n"
".quad 0x662e6275730a3b38,0x3033336625203233,0x2c3430356625202c,0x0a3b393233662520\n"
".quad 0x662e6e722e616d66,0x3133336625203233,0x2c3132336625202c,0x202c343632662520\n"
".quad 0x2e0a3b3739326625,0x3734203220636f6c,0x616d660a31203430,0x203233662e6e722e\n"
".quad 0x25202c3233336625,0x6625202c31373166,0x336625202c313632,0x2e616d660a3b3133\n"
".quad 0x25203233662e6e72,0x6625202c33333366,0x336630202c323931,0x2c39334538333643\n"
".quad 0x0a3b323333662520,0x662e6e722e616d66,0x3433336625203233,0x2c3630326625202c\n"
".quad 0x202c393532662520,0x660a3b3333336625,0x33662e6e722e616d,0x2c35333366252032\n"
".quad 0x202c383132662520,0x4141413244336630,0x33336625202c4241,0x722e616d660a3b34\n"
".quad 0x6625203233662e6e,0x336625202c363333,0x35326625202c3531,0x3533336625202c34\n"
".quad 0x3220636f6c2e0a3b,0x0a31203430373420,0x662e6e722e616d66,0x3733336625203233\n"
".quad 0x2c3833326625202c,0x3030304533663020,0x336625202c303030,0x2e616d660a3b3633\n"
".quad 0x25203233662e6e72,0x6625202c38333366,0x336630202c363432,0x2c30303030303045\n"
".quad 0x0a3b373333662520,0x203233662e627573,0x25202c3933336625,0x6625202c34393466\n"
".quad 0x616d660a3b383333,0x203233662e6e722e,0x25202c3034336625,0x6630202c36363266\n"
".quad 0x3030303030383043,0x3b3237326625202c,0x2e6e722e616d660a,0x3433662520323366\n"
".quad 0x3937326625202c31,0x2c3136326625202c,0x0a3b303433662520,0x34203220636f6c2e\n"
".quad 0x64610a3120343037,0x6625203233662e64,0x336625202c323433,0x38326625202c3134\n"
".quad 0x662e67656e0a3b31,0x3334336625203233,0x3b3630326625202c,0x2e6e722e616d660a\n"
".quad 0x3433662520323366,0x3334336625202c34,0x2c3935326625202c,0x0a3b323433662520\n"
".quad 0x34203220636f6c2e,0x6d660a3120343037,0x3233662e6e722e61,0x202c353433662520\n"
".quad 0x30202c3831326625,0x4141414132443366,0x3735326625202c42,0x33662e6464610a3b\n"
".quad 0x2c36343366252032,0x202c343433662520,0x730a3b3534336625,0x25203233662e6275\n"
".quad 0x6625202c37343366,0x336625202c303934,0x2e616d660a3b3634,0x25203233662e6e72\n"
".quad 0x6625202c38343366,0x336630202c363431,0x2c44434343434343,0x0a3b373932662520\n"
".quad 0x662e6e722e616d66,0x3934336625203233,0x2c3137316625202c,0x202c313632662520\n"
".quad 0x660a3b3834336625,0x33662e6e722e616d,0x2c30353366252032,0x202c323931662520\n"
".quad 0x4538333643336630,0x34336625202c3933,0x722e616d660a3b39,0x6625203233662e6e\n"
".quad 0x336625202c313533,0x35326625202c3334,0x3035336625202c39,0x33662e67656e0a3b\n"
".quad 0x2c32353366252032,0x0a3b383132662520,0x662e6e722e616d66,0x3335336625203233\n"
".quad 0x2c3235336625202c,0x202c383532662520,0x2e0a3b3135336625,0x3734203220636f6c\n"
".quad 0x616d660a31203430,0x203233662e6e722e,0x25202c3435336625,0x6625202c32333266\n"
".quad 0x336625202c353532,0x2e616d660a3b3335,0x25203233662e6e72,0x6625202c35353366\n"
".quad 0x326625202c373133,0x35336625202c3635,0x20636f6c2e0a3b34,0x3120343037342032\n"
".quad 0x2e6e722e616d660a,0x3533662520323366,0x3335326625202c36,0x303045336630202c\n"
".quad 0x6625202c30303030,0x6275730a3b353533,0x336625203233662e,0x38346625202c3735\n"
".quad 0x3635336625202c31,0x6e722e616d660a3b,0x336625203233662e,0x34316625202c3835\n"
".quad 0x4343336630202c33,0x25202c4443434343,0x6d660a3b36393266,0x3233662e6e722e61\n"
".quad 0x202c393533662520,0x30202c3634316625,0x4343434343433366,0x3835336625202c44\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x36326625202c3036,0x3030436630202c32\n"
".quad 0x25202c3030303030,0x6d660a3b39353366,0x3233662e6e722e61,0x202c313633662520\n"
".quad 0x30202c3036326625,0x3030303030304366,0x3036336625202c30,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x32326625202c3236,0x3845336630202c38,0x25202c3030303030\n"
".quad 0x6d660a3b31363366,0x3233662e6e722e61,0x202c333633662520,0x30202c3634326625\n"
".quad 0x3030303030453366,0x3236336625202c30,0x33662e67656e0a3b,0x2c34363366252032\n"
".quad 0x0a3b333532662520,0x662e6e722e616d66,0x3536336625203233,0x2c3436336625202c\n"
".quad 0x202c363532662520,0x2e0a3b3336336625,0x3734203220636f6c,0x6275730a31203430\n"
".quad 0x336625203233662e,0x36346625202c3636,0x3536336625202c38,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x34316625202c3736,0x4343336630202c36,0x25202c4443434343\n"
".quad 0x6d660a3b39303366,0x3233662e6e722e61,0x202c383633662520,0x25202c3137316625\n"
".quad 0x6625202c31363266,0x616d660a3b373633,0x203233662e6e722e,0x25202c3936336625\n"
".quad 0x6630202c32393166,0x3933453833364333,0x3b3836336625202c,0x2e6e722e616d660a\n"
".quad 0x3733662520323366,0x3334336625202c30,0x2c3935326625202c,0x0a3b393633662520\n"
".quad 0x662e6e722e616d66,0x3137336625203233,0x2c3235336625202c,0x202c383532662520\n"
".quad 0x6e0a3b3037336625,0x25203233662e6765,0x6625202c32373366,0x616d660a3b323332\n"
".quad 0x203233662e6e722e,0x25202c3337336625,0x6625202c32373366,0x336625202c353532\n"
".quad 0x636f6c2e0a3b3137,0x2034303734203220,0x6e722e616d660a31,0x336625203233662e\n"
".quad 0x33326625202c3437,0x3045336630202c38,0x25202c3030303030,0x6d660a3b33373366\n"
".quad 0x3233662e6e722e61,0x202c353733662520,0x30202c3335326625,0x3030303030453366\n"
".quad 0x3437336625202c30,0x33662e6275730a3b,0x2c36373366252032,0x202c353334662520\n"
".quad 0x660a3b3537336625,0x33662e6e722e616d,0x2c37373366252032,0x202c313233662520\n"
".quad 0x25202c3436326625,0x6c2e0a3b36393266,0x303734203220636f,0x2e616d660a312034\n"
".quad 0x25203233662e6e72,0x6625202c38373366,0x336630202c363431,0x2c44434343434343\n"
".quad 0x0a3b373733662520,0x662e6e722e616d66,0x3937336625203233,0x2c3236326625202c\n"
".quad 0x3030303043663020,0x336625202c303030,0x2e616d660a3b3837,0x25203233662e6e72\n"
".quad 0x6625202c30383366,0x436630202c303632,0x2c30303030303030,0x0a3b393733662520\n"
".quad 0x203233662e67656e,0x25202c3138336625,0x6d660a3b38323266,0x3233662e6e722e61\n"
".quad 0x202c323833662520,0x25202c3138336625,0x6625202c34353266,0x616d660a3b303833\n"
".quad 0x203233662e6e722e,0x25202c3338336625,0x6625202c35303366,0x336625202c363532\n"
".quad 0x2e616d660a3b3238,0x25203233662e6e72,0x6625202c34383366,0x326625202c343633\n"
".quad 0x38336625202c3635,0x20636f6c2e0a3b33,0x3120343037342032,0x3233662e6275730a\n"
".quad 0x202c353833662520,0x25202c3936346625,0x6d660a3b34383366,0x3233662e6e722e61\n"
".quad 0x202c363833662520,0x30202c3636326625,0x3030303038303466,0x3237326625202c30\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x37326625202c3738,0x3136326625202c39\n"
".quad 0x3b3638336625202c,0x203220636f6c2e0a,0x610a312034303734,0x25203233662e6464\n"
".quad 0x6625202c38383366,0x326625202c373833,0x2e616d660a3b3138,0x25203233662e6e72\n"
".quad 0x6625202c39383366,0x326625202c333433,0x38336625202c3935,0x20636f6c2e0a3b38\n"
".quad 0x3120343037342032,0x3233662e6464610a,0x202c303933662520,0x25202c3938336625\n"
".quad 0x75730a3b35343366,0x6625203233662e62,0x346625202c313933,0x39336625202c3139\n"
".quad 0x662e67656e0a3b30,0x3239336625203233,0x3b3634316625202c,0x2e6e722e616d660a\n"
".quad 0x3933662520323366,0x3239336625202c33,0x2c3436326625202c,0x0a3b373932662520\n"
".quad 0x34203220636f6c2e,0x6d660a3120343037,0x3233662e6e722e61,0x202c343933662520\n"
".quad 0x25202c3137316625,0x6625202c31363266,0x616d660a3b333933,0x203233662e6e722e\n"
".quad 0x25202c3539336625,0x6630202c32393166,0x3933453833364333,0x3b3439336625202c\n"
".quad 0x2e6e722e616d660a,0x3933662520323366,0x3334336625202c36,0x2c3935326625202c\n"
".quad 0x0a3b353933662520,0x662e6e722e616d66,0x3739336625203233,0x2c3235336625202c\n"
".quad 0x202c383532662520,0x660a3b3639336625,0x33662e6e722e616d,0x2c38393366252032\n"
".quad 0x202c323733662520,0x25202c3535326625,0x6d660a3b37393366,0x3233662e6e722e61\n"
".quad 0x202c393933662520,0x25202c3731336625,0x6625202c36353266,0x616d660a3b383933\n"
".quad 0x203233662e6e722e,0x25202c3030346625,0x6625202c34363366,0x336625202c363532\n"
".quad 0x636f6c2e0a3b3939,0x2034303734203220,0x33662e6275730a31,0x2c31303466252032\n"
".quad 0x202c363234662520,0x660a3b3030346625,0x33662e6e722e616d,0x2c32303466252032\n"
".quad 0x202c323933662520,0x25202c3436326625,0x6c2e0a3b38353366,0x303734203220636f\n"
".quad 0x2e616d660a312034,0x25203233662e6e72,0x6625202c33303466,0x436630202c323632\n"
".quad 0x2c30303030303030,0x0a3b323034662520,0x662e6e722e616d66,0x3430346625203233\n"
".quad 0x2c3036326625202c,0x3030303043663020,0x346625202c303030,0x2e616d660a3b3330\n"
".quad 0x25203233662e6e72,0x6625202c35303466,0x326625202c313833,0x30346625202c3435\n"
".quad 0x20636f6c2e0a3b34,0x3120343037342032,0x2e6e722e616d660a,0x3034662520323366\n"
".quad 0x3634326625202c36,0x303045336630202c,0x6625202c30303030,0x616d660a3b353034\n"
".quad 0x203233662e6e722e,0x25202c3730346625,0x6630202c33353266,0x3030303030304533\n"
".quad 0x3b3630346625202c,0x3233662e6275730a,0x202c383034662520,0x25202c3037346625\n"
".quad 0x6d660a3b37303466,0x3233662e6e722e61,0x202c393034662520,0x25202c3239336625\n"
".quad 0x6625202c34363266,0x6f6c2e0a3b393033,0x3430373420322063,0x722e616d660a3120\n"
".quad 0x6625203233662e6e,0x316625202c303134,0x36326625202c3137,0x3930346625202c31\n"
".quad 0x6e722e616d660a3b,0x346625203233662e,0x39316625202c3131,0x3643336630202c32\n"
".quad 0x25202c3933453833,0x6d660a3b30313466,0x3233662e6e722e61,0x202c323134662520\n"
".quad 0x25202c3334336625,0x6625202c39353266,0x616d660a3b313134,0x203233662e6e722e\n"
".quad 0x25202c3331346625,0x6625202c32353366,0x346625202c383532,0x636f6c2e0a3b3231\n"
".quad 0x2034303734203220,0x6e722e616d660a31,0x346625203233662e,0x33326625202c3431\n"
".quad 0x3535326625202c32,0x3b3331346625202c,0x2e6e722e616d660a,0x3134662520323366\n"
".quad 0x3833326625202c35,0x303045336630202c,0x6625202c30303030,0x616d660a3b343134\n"
".quad 0x203233662e6e722e,0x25202c3631346625,0x6625202c34363366,0x346625202c363532\n"
".quad 0x636f6c2e0a3b3531,0x2034303734203220,0x33662e6275730a31,0x2c37313466252032\n"
".quad 0x202c363334662520,0x660a3b3631346625,0x33662e6e722e616d,0x2c38313466252032\n"
".quad 0x202c323933662520,0x25202c3436326625,0x6c2e0a3b37373366,0x303734203220636f\n"
".quad 0x2e616d660a312034,0x25203233662e6e72,0x6625202c39313466,0x436630202c323632\n"
".quad 0x2c30303030303030,0x0a3b383134662520,0x662e6e722e616d66,0x3032346625203233\n"
".quad 0x2c3036326625202c,0x3030303043663020,0x346625202c303030,0x2e616d660a3b3931\n"
".quad 0x25203233662e6e72,0x6625202c31323466,0x336630202c383232,0x2c30303030303845\n"
".quad 0x0a3b303234662520,0x662e6e722e616d66,0x3232346625203233,0x2c3530336625202c\n"
".quad 0x202c363532662520,0x2e0a3b3132346625,0x3734203220636f6c,0x616d660a31203430\n"
".quad 0x203233662e6e722e,0x25202c3332346625,0x6630202c33353266,0x3030303030304533\n"
".quad 0x3b3232346625202c,0x3233662e6275730a,0x202c343234662520,0x25202c3137346625\n"
".quad 0x646c0a3b33323466,0x752e6d617261702e,0x37336c7225203436,0x32315a5f5b202c36\n"
".quad 0x69735f645f74726d,0x5f536650656c676e,0x6d617261705f6d66,0x6f6c2e0a3b5d335f\n"
".quad 0x3634363420322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3534316c\n"
".quad 0x336c7225202c396c,0x356c7225202c3637,0x7261702e646c0a3b,0x25203436752e6d61\n"
".quad 0x5b202c3437336c72,0x5f74726d32315a5f,0x656c676e69735f64,0x705f6d665f536650\n"
".quad 0x3b5d315f6d617261,0x6f742e617476630a,0x2e6c61626f6c672e,0x316c722520343675\n"
".quad 0x336c7225202c3634,0x2e6c68730a3b3437,0x316c722520343662,0x316c7225202c3734\n"
".quad 0x0a3b3233202c3534,0x203436732e726873,0x202c3834316c7225,0x202c3734316c7225\n"
".quad 0x636f6c2e0a3b3233,0x2039303734203220,0x36622e6c68730a31,0x3934316c72252034\n"
".quad 0x3834316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c303531\n"
".quad 0x6c7225202c363431,0x2e74730a3b393431,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x326625202c5d3035,0x2e6464610a3b3037,0x316c722520343673,0x396c7225202c3135\n"
".quad 0x0a3b36393034202c,0x34203220636f6c2e,0x616d0a3120393736,0x3436732e6f6c2e64\n"
".quad 0x2c3235316c722520,0x2c3135316c722520,0x2c3637336c722520,0x730a3b356c722520\n"
".quad 0x25203436622e6c68,0x25202c3335316c72,0x33202c3235316c72,0x732e7268730a3b32\n"
".quad 0x35316c7225203436,0x35316c7225202c34,0x2e0a3b3233202c33,0x3634203220636f6c\n"
".quad 0x6c68730a31203937,0x6c7225203436622e,0x6c7225202c353531,0x0a3b32202c343531\n"
".quad 0x203436732e646461,0x202c3635316c7225,0x202c3634316c7225,0x0a3b3535316c7225\n"
".quad 0x34203220636f6c2e,0x74730a3120303137,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d363531,0x6464610a3b373732,0x6c7225203436732e,0x6c7225202c373531\n"
".quad 0x3b32393138202c39,0x203220636f6c2e0a,0x6d0a312030383634,0x36732e6f6c2e6461\n"
".quad 0x3835316c72252034,0x3735316c7225202c,0x3637336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3935316c7225,0x202c3835316c7225,0x2e7268730a3b3233\n"
".quad 0x316c722520343673,0x316c7225202c3036,0x0a3b3233202c3935,0x34203220636f6c2e\n"
".quad 0x68730a3120303836,0x7225203436622e6c,0x7225202c3136316c,0x3b32202c3036316c\n"
".quad 0x3436732e6464610a,0x2c3236316c722520,0x2c3634316c722520,0x3b3136316c722520\n"
".quad 0x203220636f6c2e0a,0x730a312031313734,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3236316c,0x64610a3b35383266,0x7225203436732e64,0x7225202c3336316c\n"
".quad 0x38323231202c396c,0x20636f6c2e0a3b38,0x3120313836342032,0x2e6f6c2e64616d0a\n"
".quad 0x316c722520343673,0x316c7225202c3436,0x336c7225202c3336,0x356c7225202c3637\n"
".quad 0x36622e6c68730a3b,0x3536316c72252034,0x3436316c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3636316c,0x3233202c3536316c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203138363420,0x203436622e6c6873,0x202c3736316c7225,0x202c3636316c7225\n"
".quad 0x732e6464610a3b32,0x36316c7225203436,0x34316c7225202c38,0x36316c7225202c36\n"
".quad 0x20636f6c2e0a3b37,0x3120323137342032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x2c5d3836316c7225,0x0a3b393832662520,0x203436732e646461,0x202c3936316c7225\n"
".quad 0x3631202c396c7225,0x6f6c2e0a3b343833,0x3238363420322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3037316c,0x7225202c3936316c,0x7225202c3637336c\n"
".quad 0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3137,0x0a3b3233202c3037\n"
".quad 0x203436732e726873,0x202c3237316c7225,0x202c3137316c7225,0x636f6c2e0a3b3233\n"
".quad 0x2032383634203220,0x36622e6c68730a31,0x3337316c72252034,0x3237316c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c343731,0x6c7225202c363431\n"
".quad 0x6f6c2e0a3b333731,0x3331373420322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x3437316c72255b20,0x3539326625202c5d,0x36732e6464610a3b,0x3537316c72252034\n"
".quad 0x202c396c7225202c,0x2e0a3b3038343032,0x3634203220636f6c,0x64616d0a31203338\n"
".quad 0x203436732e6f6c2e,0x202c3637316c7225,0x202c3537316c7225,0x202c3637336c7225\n"
".quad 0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3737316c,0x3233202c3637316c\n"
".quad 0x36732e7268730a3b,0x3837316c72252034,0x3737316c7225202c,0x6c2e0a3b3233202c\n"
".quad 0x383634203220636f,0x2e6c68730a312033,0x316c722520343662,0x316c7225202c3937\n"
".quad 0x610a3b32202c3837,0x25203436732e6464,0x25202c3038316c72,0x25202c3634316c72\n"
".quad 0x2e0a3b3937316c72,0x3734203220636f6c,0x2e74730a31203431,0x662e6c61626f6c67\n"
".quad 0x316c72255b203233,0x336625202c5d3038,0x2e6464610a3b3730,0x316c722520343673\n"
".quad 0x396c7225202c3138,0x3b3637353432202c,0x203220636f6c2e0a,0x6d0a312034383634\n"
".quad 0x36732e6f6c2e6461,0x3238316c72252034,0x3138316c7225202c,0x3637336c7225202c\n"
".quad 0x0a3b356c7225202c,0x203436622e6c6873,0x202c3338316c7225,0x202c3238316c7225\n"
".quad 0x2e7268730a3b3233,0x316c722520343673,0x316c7225202c3438,0x0a3b3233202c3338\n"
".quad 0x34203220636f6c2e,0x68730a3120343836,0x7225203436622e6c,0x7225202c3538316c\n"
".quad 0x3b32202c3438316c,0x3436732e6464610a,0x2c3638316c722520,0x2c3634316c722520\n"
".quad 0x3b3538316c722520,0x203220636f6c2e0a,0x730a312035313734,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3638316c,0x64610a3b30323366,0x7225203436732e64\n"
".quad 0x7225202c3738316c,0x37363832202c396c,0x20636f6c2e0a3b32,0x3120353836342032\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x316c7225202c3838,0x336c7225202c3738\n"
".quad 0x356c7225202c3637,0x36622e6c68730a3b,0x3938316c72252034,0x3838316c7225202c\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x7225202c3039316c,0x3233202c3938316c\n"
".quad 0x3220636f6c2e0a3b,0x0a31203538363420,0x203436622e6c6873,0x202c3139316c7225\n"
".quad 0x202c3039316c7225,0x732e6464610a3b32,0x39316c7225203436,0x34316c7225202c32\n"
".quad 0x39316c7225202c36,0x20636f6c2e0a3b31,0x3120363137342032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3239316c7225,0x0a3b303333662520,0x203436732e646461\n"
".quad 0x202c3339316c7225,0x3233202c396c7225,0x6f6c2e0a3b383637,0x3638363420322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3439316c,0x7225202c3339316c\n"
".quad 0x7225202c3637336c,0x2e6c68730a3b356c,0x316c722520343662,0x316c7225202c3539\n"
".quad 0x0a3b3233202c3439,0x203436732e726873,0x202c3639316c7225,0x202c3539316c7225\n"
".quad 0x636f6c2e0a3b3233,0x2036383634203220,0x36622e6c68730a31,0x3739316c72252034\n"
".quad 0x3639316c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c383931\n"
".quad 0x6c7225202c363431,0x6f6c2e0a3b373931,0x3731373420322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x3839316c72255b20,0x3933336625202c5d,0x36732e6464610a3b\n"
".quad 0x3939316c72252034,0x202c396c7225202c,0x2e0a3b3436383633,0x3634203220636f6c\n"
".quad 0x64616d0a31203738,0x203436732e6f6c2e,0x202c3030326c7225,0x202c3939316c7225\n"
".quad 0x202c3637336c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3130326c\n"
".quad 0x3233202c3030326c,0x36732e7268730a3b,0x3230326c72252034,0x3130326c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x383634203220636f,0x2e6c68730a312037,0x326c722520343662\n"
".quad 0x326c7225202c3330,0x610a3b32202c3230,0x25203436732e6464,0x25202c3430326c72\n"
".quad 0x25202c3634316c72,0x2e0a3b3330326c72,0x3734203220636f6c,0x2e74730a31203831\n"
".quad 0x662e6c61626f6c67,0x326c72255b203233,0x336625202c5d3430,0x2e6464610a3b3734\n"
".quad 0x326c722520343673,0x396c7225202c3530,0x3b3036393034202c,0x203220636f6c2e0a\n"
".quad 0x6d0a312038383634,0x36732e6f6c2e6461,0x3630326c72252034,0x3530326c7225202c\n"
".quad 0x3637336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873,0x202c3730326c7225\n"
".quad 0x202c3630326c7225,0x2e7268730a3b3233,0x326c722520343673,0x326c7225202c3830\n"
".quad 0x0a3b3233202c3730,0x34203220636f6c2e,0x68730a3120383836,0x7225203436622e6c\n"
".quad 0x7225202c3930326c,0x3b32202c3830326c,0x3436732e6464610a,0x2c3031326c722520\n"
".quad 0x2c3634316c722520,0x3b3930326c722520,0x203220636f6c2e0a,0x730a312039313734\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3031326c,0x64610a3b37353366\n"
".quad 0x7225203436732e64,0x7225202c3131326c,0x35303534202c396c,0x20636f6c2e0a3b36\n"
".quad 0x3120393836342032,0x2e6f6c2e64616d0a,0x326c722520343673,0x326c7225202c3231\n"
".quad 0x336c7225202c3131,0x356c7225202c3637,0x36622e6c68730a3b,0x3331326c72252034\n"
".quad 0x3231326c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3431326c\n"
".quad 0x3233202c3331326c,0x3220636f6c2e0a3b,0x0a31203938363420,0x203436622e6c6873\n"
".quad 0x202c3531326c7225,0x202c3431326c7225,0x732e6464610a3b32,0x31326c7225203436\n"
".quad 0x34316c7225202c36,0x31326c7225202c36,0x20636f6c2e0a3b35,0x3120303237342032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3631326c7225,0x0a3b363633662520\n"
".quad 0x203436732e646461,0x202c3731326c7225,0x3934202c396c7225,0x6f6c2e0a3b323531\n"
".quad 0x3039363420322063,0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3831326c\n"
".quad 0x7225202c3731326c,0x7225202c3637336c,0x2e6c68730a3b356c,0x326c722520343662\n"
".quad 0x326c7225202c3931,0x0a3b3233202c3831,0x203436732e726873,0x202c3032326c7225\n"
".quad 0x202c3931326c7225,0x636f6c2e0a3b3233,0x2030393634203220,0x36622e6c68730a31\n"
".quad 0x3132326c72252034,0x3032326c7225202c,0x6464610a3b32202c,0x6c7225203436732e\n"
".quad 0x6c7225202c323232,0x6c7225202c363431,0x6f6c2e0a3b313232,0x3132373420322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x3232326c72255b20,0x3637336625202c5d\n"
".quad 0x36732e6464610a3b,0x3332326c72252034,0x202c396c7225202c,0x2e0a3b3834323335\n"
".quad 0x3634203220636f6c,0x64616d0a31203139,0x203436732e6f6c2e,0x202c3432326c7225\n"
".quad 0x202c3332326c7225,0x202c3637336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3532326c,0x3233202c3432326c,0x36732e7268730a3b,0x3632326c72252034\n"
".quad 0x3532326c7225202c,0x6c2e0a3b3233202c,0x393634203220636f,0x2e6c68730a312031\n"
".quad 0x326c722520343662,0x326c7225202c3732,0x610a3b32202c3632,0x25203436732e6464\n"
".quad 0x25202c3832326c72,0x25202c3634316c72,0x2e0a3b3732326c72,0x3734203220636f6c\n"
".quad 0x2e74730a31203232,0x662e6c61626f6c67,0x326c72255b203233,0x336625202c5d3832\n"
".quad 0x2e6464610a3b3538,0x326c722520343673,0x396c7225202c3932,0x3b3434333735202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312032393634,0x36732e6f6c2e6461,0x3033326c72252034\n"
".quad 0x3932326c7225202c,0x3637336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3133326c7225,0x202c3033326c7225,0x2e7268730a3b3233,0x326c722520343673\n"
".quad 0x326c7225202c3233,0x0a3b3233202c3133,0x34203220636f6c2e,0x68730a3120323936\n"
".quad 0x7225203436622e6c,0x7225202c3333326c,0x3b32202c3233326c,0x3436732e6464610a\n"
".quad 0x2c3433326c722520,0x2c3634316c722520,0x3b3333326c722520,0x203220636f6c2e0a\n"
".quad 0x730a312033323734,0x6c61626f6c672e74,0x72255b203233662e,0x25202c5d3433326c\n"
".quad 0x64610a3b31393366,0x7225203436732e64,0x7225202c3533326c,0x34343136202c396c\n"
".quad 0x20636f6c2e0a3b30,0x3120333936342032,0x2e6f6c2e64616d0a,0x326c722520343673\n"
".quad 0x326c7225202c3633,0x336c7225202c3533,0x356c7225202c3637,0x36622e6c68730a3b\n"
".quad 0x3733326c72252034,0x3633326c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3833326c,0x3233202c3733326c,0x3220636f6c2e0a3b,0x0a31203339363420\n"
".quad 0x203436622e6c6873,0x202c3933326c7225,0x202c3833326c7225,0x732e6464610a3b32\n"
".quad 0x34326c7225203436,0x34316c7225202c30,0x33326c7225202c36,0x20636f6c2e0a3b39\n"
".quad 0x3120343237342032,0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3034326c7225\n"
".quad 0x0a3b313034662520,0x203436732e646461,0x202c3134326c7225,0x3536202c396c7225\n"
".quad 0x6f6c2e0a3b363335,0x3439363420322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x7225202c3234326c,0x7225202c3134326c,0x7225202c3637336c,0x2e6c68730a3b356c\n"
".quad 0x326c722520343662,0x326c7225202c3334,0x0a3b3233202c3234,0x203436732e726873\n"
".quad 0x202c3434326c7225,0x202c3334326c7225,0x636f6c2e0a3b3233,0x2034393634203220\n"
".quad 0x36622e6c68730a31,0x3534326c72252034,0x3434326c7225202c,0x6464610a3b32202c\n"
".quad 0x6c7225203436732e,0x6c7225202c363432,0x6c7225202c363431,0x6f6c2e0a3b353432\n"
".quad 0x3532373420322063,0x6c672e74730a3120,0x3233662e6c61626f,0x3634326c72255b20\n"
".quad 0x3830346625202c5d,0x36732e6464610a3b,0x3734326c72252034,0x202c396c7225202c\n"
".quad 0x2e0a3b3233363936,0x3634203220636f6c,0x64616d0a31203539,0x203436732e6f6c2e\n"
".quad 0x202c3834326c7225,0x202c3734326c7225,0x202c3637336c7225,0x68730a3b356c7225\n"
".quad 0x7225203436622e6c,0x7225202c3934326c,0x3233202c3834326c,0x36732e7268730a3b\n"
".quad 0x3035326c72252034,0x3934326c7225202c,0x6c2e0a3b3233202c,0x393634203220636f\n"
".quad 0x2e6c68730a312035,0x326c722520343662,0x326c7225202c3135,0x610a3b32202c3035\n"
".quad 0x25203436732e6464,0x25202c3235326c72,0x25202c3634316c72,0x2e0a3b3135326c72\n"
".quad 0x3734203220636f6c,0x2e74730a31203632,0x662e6c61626f6c67,0x326c72255b203233\n"
".quad 0x346625202c5d3235,0x2e6464610a3b3731,0x326c722520343673,0x396c7225202c3335\n"
".quad 0x3b3832373337202c,0x203220636f6c2e0a,0x6d0a312036393634,0x36732e6f6c2e6461\n"
".quad 0x3435326c72252034,0x3335326c7225202c,0x3637336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3535326c7225,0x202c3435326c7225,0x2e7268730a3b3233\n"
".quad 0x326c722520343673,0x326c7225202c3635,0x0a3b3233202c3535,0x34203220636f6c2e\n"
".quad 0x68730a3120363936,0x7225203436622e6c,0x7225202c3735326c,0x3b32202c3635326c\n"
".quad 0x3436732e6464610a,0x2c3835326c722520,0x2c3634316c722520,0x3b3735326c722520\n"
".quad 0x203220636f6c2e0a,0x730a312037323734,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3835326c,0x6c2e0a3b34323466,0x333734203220636f,0x3b7465720a322030\n"
".quad 0x325f353342420a0a,0x61702e646c0a3a32,0x203436752e6d6172,0x202c3537336c7225\n"
".quad 0x74726d32315a5f5b,0x6c676e69735f645f,0x5f6d665f53665065,0x5d335f6d61726170\n"
".quad 0x3220636f6c2e0a3b,0x0a31203937363420,0x732e6f6c2e64616d,0x36326c7225203436\n"
".quad 0x36316c7225202c34,0x3537336c7225202c,0x0a3b356c7225202c,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x5a5f5b202c333733,0x5f645f74726d3231,0x6650656c676e6973\n"
".quad 0x7261705f6d665f53,0x630a3b5d315f6d61,0x672e6f742e617476,0x36752e6c61626f6c\n"
".quad 0x3536326c72252034,0x3337336c7225202c,0x36622e6c68730a3b,0x3636326c72252034\n"
".quad 0x3436326c7225202c,0x68730a3b3233202c,0x7225203436732e72,0x7225202c3736326c\n"
".quad 0x3233202c3636326c,0x3220636f6c2e0a3b,0x0a31203937363420,0x203436622e6c6873\n"
".quad 0x202c3836326c7225,0x202c3736326c7225,0x732e6464610a3b32,0x36326c7225203436\n"
".quad 0x36326c7225202c39,0x36326c7225202c35,0x6c672e74730a3b38,0x3233662e6c61626f\n"
".quad 0x3936326c72255b20,0x0a3b346625202c5d,0x203436732e646461,0x202c3037326c7225\n"
".quad 0x38202c35316c7225,0x6f6c2e0a3b323931,0x3038363420322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3137326c,0x7225202c3037326c,0x7225202c3537336c\n"
".quad 0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3237,0x0a3b3233202c3137\n"
".quad 0x203436732e726873,0x202c3337326c7225,0x202c3237326c7225,0x636f6c2e0a3b3233\n"
".quad 0x2030383634203220,0x36622e6c68730a31,0x3437326c72252034,0x3337326c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c353732,0x6c7225202c353632\n"
".quad 0x2e74730a3b343732,0x662e6c61626f6c67,0x326c72255b203233,0x356625202c5d3537\n"
".quad 0x636f6c2e0a3b3731,0x2031383634203220,0x6f6c2e64616d0a31,0x6c7225203436732e\n"
".quad 0x6c7225202c373732,0x336c7225202c3332,0x356c7225202c3537,0x36622e6c68730a3b\n"
".quad 0x3837326c72252034,0x3737326c7225202c,0x68730a3b3233202c,0x7225203436732e72\n"
".quad 0x7225202c3937326c,0x3233202c3837326c,0x3220636f6c2e0a3b,0x0a31203138363420\n"
".quad 0x203436622e6c6873,0x202c3038326c7225,0x202c3937326c7225,0x732e6464610a3b32\n"
".quad 0x38326c7225203436,0x36326c7225202c31,0x38326c7225202c35,0x6c672e74730a3b30\n"
".quad 0x3233662e6c61626f,0x3138326c72255b20,0x3032356625202c5d,0x36732e6464610a3b\n"
".quad 0x3238326c72252034,0x2c35316c7225202c,0x0a3b343833363120,0x34203220636f6c2e\n"
".quad 0x616d0a3120323836,0x3436732e6f6c2e64,0x2c3338326c722520,0x2c3238326c722520\n"
".quad 0x2c3537336c722520,0x730a3b356c722520,0x25203436622e6c68,0x25202c3438326c72\n"
".quad 0x33202c3338326c72,0x732e7268730a3b32,0x38326c7225203436,0x38326c7225202c35\n"
".quad 0x2e0a3b3233202c34,0x3634203220636f6c,0x6c68730a31203238,0x6c7225203436622e\n"
".quad 0x6c7225202c363832,0x0a3b32202c353832,0x203436732e646461,0x202c3738326c7225\n"
".quad 0x202c3536326c7225,0x0a3b3638326c7225,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x202c5d3738326c72,0x610a3b3631356625,0x25203436732e6464,0x25202c3838326c72\n"
".quad 0x3032202c35316c72,0x6f6c2e0a3b303834,0x3338363420322063,0x6c2e64616d0a3120\n"
".quad 0x7225203436732e6f,0x7225202c3938326c,0x7225202c3838326c,0x7225202c3537336c\n"
".quad 0x2e6c68730a3b356c,0x326c722520343662,0x326c7225202c3039,0x0a3b3233202c3938\n"
".quad 0x203436732e726873,0x202c3139326c7225,0x202c3039326c7225,0x636f6c2e0a3b3233\n"
".quad 0x2033383634203220,0x36622e6c68730a31,0x3239326c72252034,0x3139326c7225202c\n"
".quad 0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c333932,0x6c7225202c353632\n"
".quad 0x2e74730a3b323932,0x662e6c61626f6c67,0x326c72255b203233,0x356625202c5d3339\n"
".quad 0x2e6464610a3b3430,0x326c722520343673,0x316c7225202c3439,0x3637353432202c35\n"
".quad 0x3220636f6c2e0a3b,0x0a31203438363420,0x732e6f6c2e64616d,0x39326c7225203436\n"
".quad 0x39326c7225202c35,0x37336c7225202c34,0x3b356c7225202c35,0x3436622e6c68730a\n"
".quad 0x2c3639326c722520,0x2c3539326c722520,0x7268730a3b323320,0x6c7225203436732e\n"
".quad 0x6c7225202c373932,0x3b3233202c363932,0x203220636f6c2e0a,0x730a312034383634\n"
".quad 0x25203436622e6c68,0x25202c3839326c72,0x32202c3739326c72,0x36732e6464610a3b\n"
".quad 0x3939326c72252034,0x3536326c7225202c,0x3839326c7225202c,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x5d3939326c72255b,0x3b3439346625202c,0x3436732e6464610a\n"
".quad 0x2c3030336c722520,0x202c35316c722520,0x2e0a3b3237363832,0x3634203220636f6c\n"
".quad 0x64616d0a31203538,0x203436732e6f6c2e,0x202c3130336c7225,0x202c3030336c7225\n"
".quad 0x202c3537336c7225,0x68730a3b356c7225,0x7225203436622e6c,0x7225202c3230336c\n"
".quad 0x3233202c3130336c,0x36732e7268730a3b,0x3330336c72252034,0x3230336c7225202c\n"
".quad 0x6c2e0a3b3233202c,0x383634203220636f,0x2e6c68730a312035,0x336c722520343662\n"
".quad 0x336c7225202c3430,0x610a3b32202c3330,0x25203436732e6464,0x25202c3530336c72\n"
".quad 0x25202c3536326c72,0x730a3b3430336c72,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x25202c5d3530336c,0x64610a3b37303566,0x7225203436732e64,0x7225202c3630336c\n"
".quad 0x373233202c35316c,0x636f6c2e0a3b3836,0x2036383634203220,0x6f6c2e64616d0a31\n"
".quad 0x6c7225203436732e,0x6c7225202c373033,0x6c7225202c363033,0x6c7225202c353733\n"
".quad 0x622e6c68730a3b35,0x30336c7225203436,0x30336c7225202c38,0x730a3b3233202c37\n"
".quad 0x25203436732e7268,0x25202c3930336c72,0x33202c3830336c72,0x20636f6c2e0a3b32\n"
".quad 0x3120363836342032,0x3436622e6c68730a,0x2c3031336c722520,0x2c3930336c722520\n"
".quad 0x2e6464610a3b3220,0x336c722520343673,0x326c7225202c3131,0x336c7225202c3536\n"
".quad 0x672e74730a3b3031,0x33662e6c61626f6c,0x31336c72255b2032,0x30356625202c5d31\n"
".quad 0x732e6464610a3b33,0x31336c7225203436,0x35316c7225202c32,0x3b3436383633202c\n"
".quad 0x203220636f6c2e0a,0x6d0a312037383634,0x36732e6f6c2e6461,0x3331336c72252034\n"
".quad 0x3231336c7225202c,0x3537336c7225202c,0x0a3b356c7225202c,0x203436622e6c6873\n"
".quad 0x202c3431336c7225,0x202c3331336c7225,0x2e7268730a3b3233,0x336c722520343673\n"
".quad 0x336c7225202c3531,0x0a3b3233202c3431,0x34203220636f6c2e,0x68730a3120373836\n"
".quad 0x7225203436622e6c,0x7225202c3631336c,0x3b32202c3531336c,0x3436732e6464610a\n"
".quad 0x2c3731336c722520,0x2c3536326c722520,0x3b3631336c722520,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x2c5d3731336c7225,0x0a3b313934662520,0x203436732e646461\n"
".quad 0x202c3831336c7225,0x34202c35316c7225,0x6c2e0a3b30363930,0x383634203220636f\n"
".quad 0x2e64616d0a312038,0x25203436732e6f6c,0x25202c3931336c72,0x25202c3831336c72\n"
".quad 0x25202c3537336c72,0x6c68730a3b356c72,0x6c7225203436622e,0x6c7225202c303233\n"
".quad 0x3b3233202c393133,0x3436732e7268730a,0x2c3132336c722520,0x2c3032336c722520\n"
".quad 0x6f6c2e0a3b323320,0x3838363420322063,0x622e6c68730a3120,0x32336c7225203436\n"
".quad 0x32336c7225202c32,0x64610a3b32202c31,0x7225203436732e64,0x7225202c3332336c\n"
".quad 0x7225202c3536326c,0x74730a3b3232336c,0x2e6c61626f6c672e,0x6c72255b20323366\n"
".quad 0x6625202c5d333233,0x6464610a3b363334,0x6c7225203436732e,0x6c7225202c343233\n"
".quad 0x35303534202c3531,0x20636f6c2e0a3b36,0x3120393836342032,0x2e6f6c2e64616d0a\n"
".quad 0x336c722520343673,0x336c7225202c3532,0x336c7225202c3432,0x356c7225202c3537\n"
".quad 0x36622e6c68730a3b,0x3632336c72252034,0x3532336c7225202c,0x68730a3b3233202c\n"
".quad 0x7225203436732e72,0x7225202c3732336c,0x3233202c3632336c,0x3220636f6c2e0a3b\n"
".quad 0x0a31203938363420,0x203436622e6c6873,0x202c3832336c7225,0x202c3732336c7225\n"
".quad 0x732e6464610a3b32,0x32336c7225203436,0x36326c7225202c39,0x32336c7225202c35\n"
".quad 0x6c672e74730a3b38,0x3233662e6c61626f,0x3932336c72255b20,0x3137346625202c5d\n"
".quad 0x36732e6464610a3b,0x3033336c72252034,0x2c35316c7225202c,0x0a3b323531393420\n"
".quad 0x34203220636f6c2e,0x616d0a3120303936,0x3436732e6f6c2e64,0x2c3133336c722520\n"
".quad 0x2c3033336c722520,0x2c3537336c722520,0x730a3b356c722520,0x25203436622e6c68\n"
".quad 0x25202c3233336c72,0x33202c3133336c72,0x732e7268730a3b32,0x33336c7225203436\n"
".quad 0x33336c7225202c33,0x2e0a3b3233202c32,0x3634203220636f6c,0x6c68730a31203039\n"
".quad 0x6c7225203436622e,0x6c7225202c343333,0x0a3b32202c333333,0x203436732e646461\n"
".quad 0x202c3533336c7225,0x202c3536326c7225,0x0a3b3433336c7225,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x202c5d3533336c72,0x610a3b3632346625,0x25203436732e6464\n"
".quad 0x25202c3633336c72,0x3335202c35316c72,0x6f6c2e0a3b383432,0x3139363420322063\n"
".quad 0x6c2e64616d0a3120,0x7225203436732e6f,0x7225202c3733336c,0x7225202c3633336c\n"
".quad 0x7225202c3537336c,0x2e6c68730a3b356c,0x336c722520343662,0x336c7225202c3833\n"
".quad 0x0a3b3233202c3733,0x203436732e726873,0x202c3933336c7225,0x202c3833336c7225\n"
".quad 0x636f6c2e0a3b3233,0x2031393634203220,0x36622e6c68730a31,0x3034336c72252034\n"
".quad 0x3933336c7225202c,0x6464610a3b32202c,0x6c7225203436732e,0x6c7225202c313433\n"
".quad 0x6c7225202c353632,0x2e74730a3b303433,0x662e6c61626f6c67,0x336c72255b203233\n"
".quad 0x346625202c5d3134,0x2e6464610a3b3037,0x336c722520343673,0x316c7225202c3234\n"
".quad 0x3434333735202c35,0x3220636f6c2e0a3b,0x0a31203239363420,0x732e6f6c2e64616d\n"
".quad 0x34336c7225203436,0x34336c7225202c33,0x37336c7225202c32,0x3b356c7225202c35\n"
".quad 0x3436622e6c68730a,0x2c3434336c722520,0x2c3334336c722520,0x7268730a3b323320\n"
".quad 0x6c7225203436732e,0x6c7225202c353433,0x3b3233202c343433,0x203220636f6c2e0a\n"
".quad 0x730a312032393634,0x25203436622e6c68,0x25202c3634336c72,0x32202c3534336c72\n"
".quad 0x36732e6464610a3b,0x3734336c72252034,0x3536326c7225202c,0x3634336c7225202c\n"
".quad 0x6f6c672e74730a3b,0x203233662e6c6162,0x5d3734336c72255b,0x3b3039346625202c\n"
".quad 0x3436732e6464610a,0x2c3834336c722520,0x202c35316c722520,0x2e0a3b3034343136\n"
".quad 0x3634203220636f6c,0x64616d0a31203339,0x203436732e6f6c2e,0x202c3934336c7225\n"
".quad 0x202c3834336c7225,0x202c3537336c7225,0x68730a3b356c7225,0x7225203436622e6c\n"
".quad 0x7225202c3035336c,0x3233202c3934336c,0x36732e7268730a3b,0x3135336c72252034\n"
".quad 0x3035336c7225202c,0x6c2e0a3b3233202c,0x393634203220636f,0x2e6c68730a312033\n"
".quad 0x336c722520343662,0x336c7225202c3235,0x610a3b32202c3135,0x25203436732e6464\n"
".quad 0x25202c3335336c72,0x25202c3536326c72,0x730a3b3235336c72,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x25202c5d3335336c,0x64610a3b35333466,0x7225203436732e64\n"
".quad 0x7225202c3435336c,0x353536202c35316c,0x636f6c2e0a3b3633,0x2034393634203220\n"
".quad 0x6f6c2e64616d0a31,0x6c7225203436732e,0x6c7225202c353533,0x6c7225202c343533\n"
".quad 0x6c7225202c353733,0x622e6c68730a3b35,0x35336c7225203436,0x35336c7225202c36\n"
".quad 0x730a3b3233202c35,0x25203436732e7268,0x25202c3735336c72,0x33202c3635336c72\n"
".quad 0x20636f6c2e0a3b32,0x3120343936342032,0x3436622e6c68730a,0x2c3835336c722520\n"
".quad 0x2c3735336c722520,0x2e6464610a3b3220,0x336c722520343673,0x326c7225202c3935\n"
".quad 0x336c7225202c3536,0x672e74730a3b3835,0x33662e6c61626f6c,0x35336c72255b2032\n"
".quad 0x36346625202c5d39,0x732e6464610a3b39,0x36336c7225203436,0x35316c7225202c30\n"
".quad 0x3b3233363936202c,0x203220636f6c2e0a,0x6d0a312035393634,0x36732e6f6c2e6461\n"
".quad 0x3136336c72252034,0x3036336c7225202c,0x3537336c7225202c,0x0a3b356c7225202c\n"
".quad 0x203436622e6c6873,0x202c3236336c7225,0x202c3136336c7225,0x2e7268730a3b3233\n"
".quad 0x336c722520343673,0x336c7225202c3336,0x0a3b3233202c3236,0x34203220636f6c2e\n"
".quad 0x68730a3120353936,0x7225203436622e6c,0x7225202c3436336c,0x3b32202c3336336c\n"
".quad 0x3436732e6464610a,0x2c3536336c722520,0x2c3536326c722520,0x3b3436336c722520\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x2c5d3536336c7225,0x0a3b313834662520\n"
".quad 0x203436732e646461,0x202c3636336c7225,0x37202c35316c7225,0x6c2e0a3b38323733\n"
".quad 0x393634203220636f,0x2e64616d0a312036,0x25203436732e6f6c,0x25202c3736336c72\n"
".quad 0x25202c3636336c72,0x25202c3537336c72,0x6c68730a3b356c72,0x6c7225203436622e\n"
".quad 0x6c7225202c383633,0x3b3233202c373633,0x3436732e7268730a,0x2c3936336c722520\n"
".quad 0x2c3836336c722520,0x6f6c2e0a3b323320,0x3639363420322063,0x622e6c68730a3120\n"
".quad 0x37336c7225203436,0x36336c7225202c30,0x64610a3b32202c39,0x7225203436732e64\n"
".quad 0x7225202c3137336c,0x7225202c3536326c,0x74730a3b3037336c,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323366,0x6625202c5d313733,0x42420a0a3b383634,0x2e0a3a33325f3533\n"
".quad 0x3734203220636f6c,0x7465720a32203033,0x6e652e0a0a7d0a3b,0x37315a5f20797274\n"
".quad 0x696c616974696e69,0x6c676e69735f657a,0x702e0a286d665065,0x36752e206d617261\n"
".quad 0x6e6937315a5f2034,0x657a696c61697469,0x50656c676e69735f,0x6d617261705f6d66\n"
".quad 0x7261702e0a2c305f,0x203436752e206d61,0x74696e6937315a5f,0x735f657a696c6169\n"
".quad 0x6d6650656c676e69,0x315f6d617261705f,0x65722e0a7b0a290a,0x25203233662e2067\n"
".quad 0x2e0a3b3e32343c66,0x6572702e20676572,0x3b3e353c70252064,0x732e206765722e0a\n"
".quad 0x37353c7225203233,0x206765722e0a3b3e,0x6c7225203436732e,0x0a0a0a3b3e31363c\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x37315a5f5b202c35,0x696c616974696e69\n"
".quad 0x6c676e69735f657a,0x7261705f6d665065,0x6c0a3b5d305f6d61,0x2e6d617261702e64\n"
".quad 0x316c722520343675,0x6937315a5f5b202c,0x7a696c616974696e,0x656c676e69735f65\n"
".quad 0x617261705f6d6650,0x76630a3b5d315f6d,0x6c672e6f742e6174,0x3436752e6c61626f\n"
".quad 0x25202c326c722520,0x6f6c2e0a3b356c72,0x3534373420322063,0x752e766f6d0a3120\n"
".quad 0x202c337225203233,0x3b782e6469746e25,0x3233752e766f6d0a,0x6325202c34722520\n"
".quad 0x0a3b782e64696174,0x203233752e766f6d,0x697425202c357225,0x64616d0a3b782e64\n"
".quad 0x203233732e6f6c2e,0x337225202c367225,0x25202c347225202c,0x636f6c2e0a3b3572\n"
".quad 0x2036343734203220,0x33752e766f6d0a31,0x25202c3772252032,0x0a3b792e6469746e\n"
".quad 0x203233752e766f6d,0x746325202c387225,0x6d0a3b792e646961,0x25203233752e766f\n"
".quad 0x64697425202c3972,0x2e64616d0a3b792e,0x25203233732e6f6c,0x377225202c303172\n"
".quad 0x25202c387225202c,0x636f6c2e0a3b3972,0x2037343734203220,0x33752e766f6d0a31\n"
".quad 0x202c313172252032,0x3b7a2e6469746e25,0x3233752e766f6d0a,0x25202c3231722520\n"
".quad 0x3b7a2e6469617463,0x3233752e766f6d0a,0x25202c3331722520,0x6d0a3b7a2e646974\n"
".quad 0x33732e6f6c2e6461,0x202c343172252032,0x7225202c31317225,0x33317225202c3231\n"
".quad 0x3220636f6c2e0a3b,0x0a31203834373420,0x2e3436732e747663,0x366c722520323373\n"
".quad 0x0a3b30317225202c,0x203233622e6c6873,0x7225202c35317225,0x2e0a3b36202c3431\n"
".quad 0x3734203220636f6c,0x7476630a31203834,0x3233732e3436732e,0x25202c376c722520\n"
".quad 0x6464610a3b353172,0x6c7225203436732e,0x2c376c7225202c38,0x6d0a3b366c722520\n"
".quad 0x36732e6f6c2e6c75,0x202c336c72252034,0x7225202c386c7225,0x2e7476630a3b316c\n"
".quad 0x203233752e343675,0x7225202c396c7225,0x20636f6c2e0a3b36,0x3120383437342032\n"
".quad 0x2e6f6c2e64616d0a,0x316c722520343673,0x2c386c7225202c30,0x25202c316c722520\n"
".quad 0x766f6d0a3b396c72,0x316625203233662e,0x303030306630202c,0x6c2e0a3b30303030\n"
".quad 0x353734203220636f,0x2e6c756d0a312036,0x2c32662520323366,0x6630202c31662520\n"
".quad 0x3030303030303030,0x6e722e616d660a3b,0x336625203233662e,0x30202c316625202c\n"
".quad 0x3030303030303066,0x0a3b326625202c30,0x662e6e722e616d66,0x202c346625203233\n"
".quad 0x306630202c316625,0x2c30303030303030,0x6f6d0a3b33662520,0x6625203233662e76\n"
".quad 0x4346336630202c35,0x6d0a3b3030303030,0x25203233662e766f,0x46336630202c3666\n"
".quad 0x0a3b303030303038,0x34203220636f6c2e,0x656e0a3120383537,0x6625203233662e67\n"
".quad 0x0a3b346625202c37,0x662e6e722e616d66,0x202c386625203233,0x356625202c376625\n"
".quad 0x6d0a3b366625202c,0x25203233662e6c75,0x2c386625202c3966,0x4141414533663020\n"
".quad 0x6c68730a3b424141,0x6c7225203436622e,0x316c7225202c3131,0x730a3b3233202c30\n"
".quad 0x25203436732e7268,0x7225202c32316c72,0x3b3233202c31316c,0x203220636f6c2e0a\n"
".quad 0x730a312038353734,0x25203436622e6c68,0x7225202c33316c72,0x0a3b32202c32316c\n"
".quad 0x203436732e646461,0x25202c34316c7225,0x6c7225202c326c72,0x672e74730a3b3331\n"
".quad 0x33662e6c61626f6c,0x34316c72255b2032,0x0a3b396625202c5d,0x203233662e766f6d\n"
".quad 0x6630202c30316625,0x3030303030343034,0x3220636f6c2e0a3b,0x0a31203935373420\n"
".quad 0x662e6e722e616d66,0x2c31316625203233,0x30202c3031662520,0x3030303030303066\n"
".quad 0x3846336630202c30,0x6d0a3b3030303030,0x25203233662e766f,0x346630202c323166\n"
".quad 0x3b30303030303930,0x203220636f6c2e0a,0x6d0a312039353734,0x25203233662e6c75\n"
".quad 0x316625202c333166,0x3030306630202c32,0x660a3b3030303030,0x33662e6e722e616d\n"
".quad 0x202c343166252032,0x6630202c33316625,0x3030303030303030,0x0a3b31316625202c\n"
".quad 0x662e6e722e616d66,0x2c35316625203233,0x6625202c37662520,0x3b34316625202c35\n"
".quad 0x3233662e6c756d0a,0x25202c3631662520,0x336630202c353166,0x3b39334538333644\n"
".quad 0x3436622e6c68730a,0x202c35316c722520,0x3431202c316c7225,0x36732e6464610a3b\n"
".quad 0x2c36316c72252034,0x202c34316c722520,0x2e0a3b35316c7225,0x3734203220636f6c\n"
".quad 0x2e74730a31203935,0x662e6c61626f6c67,0x316c72255b203233,0x36316625202c5d36\n"
".quad 0x36732e6464610a3b,0x2c37316c72252034,0x202c36316c722520,0x2e0a3b35316c7225\n"
".quad 0x3734203220636f6c,0x2e74730a31203036,0x662e6c61626f6c67,0x316c72255b203233\n"
".quad 0x36316625202c5d37,0x3220636f6c2e0a3b,0x0a31203136373420,0x203233662e67656e\n"
".quad 0x6625202c37316625,0x2e616d660a3b3031,0x25203233662e6e72,0x316625202c383166\n"
".quad 0x202c316625202c37,0x616d660a3b366625,0x203233662e6e722e,0x6625202c39316625\n"
".quad 0x30306630202c3331,0x202c303030303030,0x6d660a3b38316625,0x3233662e6e722e61\n"
".quad 0x25202c3032662520,0x2c356625202c3766,0x6d0a3b3931662520,0x25203233662e6c75\n"
".quad 0x326625202c313266,0x3644336630202c30,0x610a3b3933453833,0x25203436732e6464\n"
".quad 0x7225202c38316c72,0x6c7225202c37316c,0x636f6c2e0a3b3531,0x2031363734203220\n"
".quad 0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d38316c72255b,0x610a3b3132662520\n"
".quad 0x25203436732e6464,0x7225202c39316c72,0x6c7225202c38316c,0x636f6c2e0a3b3531\n"
".quad 0x2032363734203220,0x6f6c672e74730a31,0x203233662e6c6162,0x2c5d39316c72255b\n"
".quad 0x2e0a3b3132662520,0x3734203220636f6c,0x6464610a31203336,0x326625203233662e\n"
".quad 0x202c316625202c32,0x3030303030306630,0x2e616d660a3b3030,0x25203233662e6e72\n"
".quad 0x326625202c333266,0x3430346630202c32,0x30202c3030303030,0x3030303038463366\n"
".quad 0x662e6c756d0a3b30,0x2c34326625203233,0x30202c3232662520,0x3030303039303466\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x34326625202c3532,0x202c32326625202c\n"
".quad 0x6d660a3b33326625,0x3233662e6e722e61,0x25202c3632662520,0x2c356625202c3766\n"
".quad 0x6d0a3b3532662520,0x25203233662e6c75,0x326625202c373266,0x4543336630202c36\n"
".quad 0x610a3b3933453833,0x25203436732e6464,0x7225202c30326c72,0x6c7225202c39316c\n"
".quad 0x636f6c2e0a3b3531,0x2033363734203220,0x6f6c672e74730a31,0x203233662e6c6162\n"
".quad 0x2c5d30326c72255b,0x730a3b3732662520,0x25203233662e6275,0x316625202c383266\n"
".quad 0x303030306630202c,0x6c2e0a3b30303030,0x363734203220636f,0x2e616d660a312034\n"
".quad 0x25203233662e6e72,0x326625202c393266,0x3430346630202c38,0x30202c3030303030\n"
".quad 0x3030303038463366,0x662e6c756d0a3b30,0x2c30336625203233,0x30202c3832662520\n"
".quad 0x3030303039303466,0x722e616d660a3b30,0x6625203233662e6e,0x30336625202c3133\n"
".quad 0x202c38326625202c,0x6d660a3b39326625,0x3233662e6e722e61,0x25202c3233662520\n"
".quad 0x2c356625202c3766,0x6d0a3b3133662520,0x25203233662e6c75,0x336625202c333366\n"
".quad 0x4543336630202c32,0x610a3b3933453833,0x25203436732e6464,0x7225202c31326c72\n"
".quad 0x6c7225202c30326c,0x636f6c2e0a3b3531,0x2034363734203220,0x6f6c672e74730a31\n"
".quad 0x203233662e6c6162,0x2c5d31326c72255b,0x2e0a3b3333662520,0x3734203220636f6c\n"
".quad 0x616d660a31203536,0x203233662e6e722e,0x6625202c34336625,0x30386630202c3031\n"
".quad 0x202c303030303030,0x3030303846336630,0x2e6c756d0a3b3030,0x3533662520323366\n"
".quad 0x202c32316625202c,0x3030303030386630,0x2e616d660a3b3030,0x25203233662e6e72\n"
".quad 0x336625202c363366,0x3030386630202c35,0x25202c3030303030,0x616d660a3b343366\n"
".quad 0x203233662e6e722e,0x6625202c37336625,0x202c356625202c37,0x756d0a3b36336625\n"
".quad 0x6625203233662e6c,0x37336625202c3833,0x334543336630202c,0x64610a3b39334538\n"
".quad 0x7225203436732e64,0x6c7225202c32326c,0x316c7225202c3132,0x20636f6c2e0a3b35\n"
".quad 0x3120353637342032,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d32326c7225\n"
".quad 0x64610a3b38336625,0x7225203436732e64,0x6c7225202c33326c,0x316c7225202c3232\n"
".quad 0x20636f6c2e0a3b35,0x3120363637342032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d33326c7225,0x64610a3b33336625,0x7225203436732e64,0x6c7225202c34326c\n"
".quad 0x316c7225202c3332,0x20636f6c2e0a3b35,0x3120373637342032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x202c5d34326c7225,0x64610a3b36316625,0x7225203436732e64\n"
".quad 0x6c7225202c35326c,0x316c7225202c3432,0x20636f6c2e0a3b35,0x3120383637342032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d35326c7225,0x64610a3b37326625\n"
".quad 0x7225203436732e64,0x6c7225202c36326c,0x316c7225202c3532,0x20636f6c2e0a3b35\n"
".quad 0x3120393637342032,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d36326c7225\n"
".quad 0x64610a3b37326625,0x7225203436732e64,0x6c7225202c37326c,0x316c7225202c3632\n"
".quad 0x20636f6c2e0a3b35,0x3120303737342032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d37326c7225,0x6c2e0a3b33336625,0x373734203220636f,0x2e616d660a312031\n"
".quad 0x25203233662e6e72,0x336625202c393366,0x2c32326625202c30,0x660a3b3932662520\n"
".quad 0x33662e6e722e616d,0x202c303466252032,0x356625202c376625,0x0a3b39336625202c\n"
".quad 0x203233662e6c756d,0x6625202c31346625,0x43336630202c3034,0x0a3b393345383345\n"
".quad 0x203436732e646461,0x25202c38326c7225,0x7225202c37326c72,0x6f6c2e0a3b35316c\n"
".quad 0x3137373420322063,0x6c672e74730a3120,0x3233662e6c61626f,0x5d38326c72255b20\n"
".quad 0x0a3b31346625202c,0x203436732e646461,0x25202c39326c7225,0x7225202c38326c72\n"
".quad 0x6f6c2e0a3b35316c,0x3237373420322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x5d39326c72255b20,0x0a3b31326625202c,0x203436732e646461,0x25202c30336c7225\n"
".quad 0x7225202c39326c72,0x6f6c2e0a3b35316c,0x3337373420322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x5d30336c72255b20,0x0a3b33336625202c,0x203436732e646461\n"
".quad 0x25202c31336c7225,0x7225202c30336c72,0x6f6c2e0a3b35316c,0x3437373420322063\n"
".quad 0x6c672e74730a3120,0x3233662e6c61626f,0x5d31336c72255b20,0x0a3b33336625202c\n"
".quad 0x203436732e646461,0x25202c32336c7225,0x7225202c31336c72,0x6f6c2e0a3b35316c\n"
".quad 0x3537373420322063,0x6c672e74730a3120,0x3233662e6c61626f,0x5d32336c72255b20\n"
".quad 0x0a3b38336625202c,0x203436732e646461,0x25202c33336c7225,0x7225202c32336c72\n"
".quad 0x6f6c2e0a3b35316c,0x3637373420322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x5d33336c72255b20,0x0a3b38336625202c,0x34203220636f6c2e,0x65730a3120393737\n"
".quad 0x33732e71652e7074,0x25202c3170252032,0x0a3b3336202c3672,0x34203220636f6c2e\n"
".quad 0x65730a3120303837,0x36752e74672e7074,0x25202c3270252034,0x3b3436202c316c72\n"
".quad 0x6572702e646e610a,0x25202c3370252064,0x3b327025202c3170,0x203220636f6c2e0a\n"
".quad 0x400a312039373734,0x6172622033702521,0x3b335f3633424220,0x7261702e646c0a0a\n"
".quad 0x25203436752e6d61,0x5f5b202c30366c72,0x6974696e6937315a,0x69735f657a696c61\n"
".quad 0x5f6d6650656c676e,0x5d315f6d61726170,0x36622e6c68730a3b,0x202c346c72252034\n"
".quad 0x31202c30366c7225,0x752e766f6d0a3b34,0x2c36357225203233,0x42420a0a3b343620\n"
".quad 0x76630a3a325f3633,0x33752e3436752e74,0x2c34336c72252032,0x2e0a3b3635722520\n"
".quad 0x3734203220636f6c,0x6464610a31203138,0x6c7225203436732e,0x336c7225202c3533\n"
".quad 0x3b34336c7225202c,0x3436622e6c68730a,0x202c36336c722520,0x33202c35336c7225\n"
".quad 0x732e7268730a3b32,0x37336c7225203436,0x2c36336c7225202c,0x6f6c2e0a3b323320\n"
".quad 0x3238373420322063,0x622e6c68730a3120,0x38336c7225203436,0x2c37336c7225202c\n"
".quad 0x2e6464610a3b3220,0x336c722520343673,0x2c326c7225202c39,0x0a3b38336c722520\n"
".quad 0x203233752e766f6d,0x3b30202c36337225,0x203220636f6c2e0a,0x730a312032383734\n"
".quad 0x6c61626f6c672e74,0x72255b203233752e,0x7225202c5d39336c,0x2e6464610a3b3633\n"
".quad 0x346c722520343673,0x39336c7225202c30,0x0a3b346c7225202c,0x34203220636f6c2e\n"
".quad 0x74730a3120333837,0x2e6c61626f6c672e,0x6c72255b20323375,0x337225202c5d3034\n"
".quad 0x732e6464610a3b36,0x31346c7225203436,0x2c30346c7225202c,0x2e0a3b346c722520\n"
".quad 0x3734203220636f6c,0x2e74730a31203438,0x752e6c61626f6c67,0x346c72255b203233\n"
".quad 0x36337225202c5d31,0x36732e6464610a3b,0x2c32346c72252034,0x202c31346c722520\n"
".quad 0x6c2e0a3b346c7225,0x383734203220636f,0x672e74730a312035,0x33752e6c61626f6c\n"
".quad 0x32346c72255b2032,0x3b36337225202c5d,0x3436732e6464610a,0x202c33346c722520\n"
".quad 0x25202c32346c7225,0x6f6c2e0a3b346c72,0x3638373420322063,0x6c672e74730a3120\n"
".quad 0x3233752e6c61626f,0x5d33346c72255b20,0x0a3b36337225202c,0x203436732e646461\n"
".quad 0x25202c34346c7225,0x7225202c33346c72,0x636f6c2e0a3b346c,0x2037383734203220\n"
".quad 0x6f6c672e74730a31,0x203233752e6c6162,0x2c5d34346c72255b,0x610a3b3633722520\n"
".quad 0x25203436732e6464,0x7225202c35346c72,0x6c7225202c34346c,0x20636f6c2e0a3b34\n"
".quad 0x3120383837342032,0x626f6c672e74730a,0x5b203233752e6c61,0x202c5d35346c7225\n"
".quad 0x64610a3b36337225,0x7225203436732e64,0x6c7225202c36346c,0x346c7225202c3534\n"
".quad 0x3220636f6c2e0a3b,0x0a31203938373420,0x61626f6c672e7473,0x255b203233752e6c\n"
".quad 0x25202c5d36346c72,0x6464610a3b363372,0x6c7225203436732e,0x346c7225202c3734\n"
".quad 0x3b346c7225202c36,0x203220636f6c2e0a,0x730a312030393734,0x6c61626f6c672e74\n"
".quad 0x72255b203233752e,0x7225202c5d37346c,0x2e6464610a3b3633,0x346c722520343673\n"
".quad 0x37346c7225202c38,0x0a3b346c7225202c,0x34203220636f6c2e,0x74730a3120313937\n"
".quad 0x2e6c61626f6c672e,0x6c72255b20323375,0x337225202c5d3834,0x732e6464610a3b36\n"
".quad 0x39346c7225203436,0x2c38346c7225202c,0x2e0a3b346c722520,0x3734203220636f6c\n"
".quad 0x2e74730a31203239,0x752e6c61626f6c67,0x346c72255b203233,0x36337225202c5d39\n"
".quad 0x36732e6464610a3b,0x2c30356c72252034,0x202c39346c722520,0x6c2e0a3b346c7225\n"
".quad 0x393734203220636f,0x672e74730a312033,0x33752e6c61626f6c,0x30356c72255b2032\n"
".quad 0x3b36337225202c5d,0x3436732e6464610a,0x202c31356c722520,0x25202c30356c7225\n"
".quad 0x6f6c2e0a3b346c72,0x3439373420322063,0x6c672e74730a3120,0x3233752e6c61626f\n"
".quad 0x5d31356c72255b20,0x0a3b36337225202c,0x203436732e646461,0x25202c32356c7225\n"
".quad 0x7225202c31356c72,0x636f6c2e0a3b346c,0x2035393734203220,0x6f6c672e74730a31\n"
".quad 0x203233752e6c6162,0x2c5d32356c72255b,0x610a3b3633722520,0x25203436732e6464\n"
".quad 0x7225202c33356c72,0x6c7225202c32356c,0x20636f6c2e0a3b34,0x3120363937342032\n"
".quad 0x626f6c672e74730a,0x5b203233752e6c61,0x202c5d33356c7225,0x64610a3b36337225\n"
".quad 0x7225203436732e64,0x6c7225202c34356c,0x346c7225202c3335,0x3220636f6c2e0a3b\n"
".quad 0x0a31203739373420,0x61626f6c672e7473,0x255b203233752e6c,0x25202c5d34356c72\n"
".quad 0x6464610a3b363372,0x6c7225203436732e,0x356c7225202c3535,0x3b346c7225202c34\n"
".quad 0x203220636f6c2e0a,0x730a312038393734,0x6c61626f6c672e74,0x72255b203233752e\n"
".quad 0x7225202c5d35356c,0x2e6464610a3b3633,0x356c722520343673,0x35356c7225202c36\n"
".quad 0x0a3b346c7225202c,0x34203220636f6c2e,0x74730a3120393937,0x2e6c61626f6c672e\n"
".quad 0x6c72255b20323375,0x337225202c5d3635,0x732e6464610a3b36,0x37356c7225203436\n"
".quad 0x2c36356c7225202c,0x2e0a3b346c722520,0x3834203220636f6c,0x2e74730a31203030\n"
".quad 0x752e6c61626f6c67,0x356c72255b203233,0x36337225202c5d37,0x3220636f6c2e0a3b\n"
".quad 0x3833203038373420,0x3233732e6464610a,0x25202c3635722520,0x0a3b31202c363572\n"
".quad 0x34203220636f6c2e,0x76630a3120303837,0x33732e3436732e74,0x2c38356c72252032\n"
".quad 0x6c0a3b3635722520,0x2e6d617261702e64,0x356c722520343675,0x37315a5f5b202c39\n"
".quad 0x696c616974696e69,0x6c676e69735f657a,0x7261705f6d665065,0x2e0a3b5d315f6d61\n"
".quad 0x3734203220636f6c,0x7465730a31203038,0x3436752e746c2e70,0x7225202c34702520\n"
".quad 0x6c7225202c38356c,0x347025400a3b3935,0x3342422061726220,0x42420a0a3b325f36\n"
".quad 0x6c2e0a3a335f3633,0x303834203220636f,0x3b7465720a322033,0x746e652e0a0a7d0a\n"
".quad 0x6933315a5f207972,0x7a696c616974696e,0x286d6650524c5f65,0x206d617261702e0a\n"
".quad 0x315a5f203436752e,0x6c616974696e6933,0x6650524c5f657a69,0x5f6d617261705f6d\n"
".quad 0x617261702e0a2c30,0x5f203436752e206d,0x6974696e6933315a,0x524c5f657a696c61\n"
".quad 0x617261705f6d6650,0x0a7b0a290a315f6d,0x33662e206765722e,0x3e32343c66252032\n"
".quad 0x2e206765722e0a3b,0x333c722520323373,0x6765722e0a3b3e33,0x7225203436732e20\n"
".quad 0x0a0a3b3e32333c6c,0x617261702e646c0a,0x7225203436752e6d,0x315a5f5b202c316c\n"
".quad 0x6c616974696e6933,0x6650524c5f657a69,0x5f6d617261705f6d,0x702e646c0a3b5d30\n"
".quad 0x3436752e6d617261,0x5b202c326c722520,0x74696e6933315a5f,0x4c5f657a696c6169\n"
".quad 0x7261705f6d665052,0x630a3b5d315f6d61,0x672e6f742e617476,0x36752e6c61626f6c\n"
".quad 0x202c336c72252034,0x6c2e0a3b316c7225,0x303834203220636f,0x2e766f6d0a312036\n"
".quad 0x2c31722520323375,0x782e6469746e2520,0x33752e766f6d0a3b,0x25202c3272252032\n"
".quad 0x3b782e6469617463,0x3233752e766f6d0a,0x7425202c33722520,0x616d0a3b782e6469\n"
".quad 0x3233732e6f6c2e64,0x7225202c34722520,0x202c327225202c31,0x6f6c2e0a3b337225\n"
".quad 0x3730383420322063,0x752e766f6d0a3120,0x202c357225203233,0x3b792e6469746e25\n"
".quad 0x3233752e766f6d0a,0x6325202c36722520,0x0a3b792e64696174,0x203233752e766f6d\n"
".quad 0x697425202c377225,0x64616d0a3b792e64,0x203233732e6f6c2e,0x357225202c387225\n"
".quad 0x25202c367225202c,0x636f6c2e0a3b3772,0x2038303834203220,0x33752e766f6d0a31\n"
".quad 0x25202c3972252032,0x0a3b7a2e6469746e,0x203233752e766f6d,0x6325202c30317225\n"
".quad 0x0a3b7a2e64696174,0x203233752e766f6d,0x7425202c31317225,0x616d0a3b7a2e6469\n"
".quad 0x3233732e6f6c2e64,0x25202c3231722520,0x30317225202c3972,0x0a3b31317225202c\n"
".quad 0x203233622e6c6873,0x7225202c33317225,0x2e0a3b36202c3231,0x3834203220636f6c\n"
".quad 0x7476630a31203930,0x3233752e3436752e,0x25202c346c722520,0x2e7476630a3b3872\n"
".quad 0x203233752e343675,0x7225202c356c7225,0x2e6464610a3b3331,0x366c722520343673\n"
".quad 0x202c356c7225202c,0x76630a3b346c7225,0x33752e3436752e74,0x202c376c72252032\n"
".quad 0x6f6c2e0a3b347225,0x3930383420322063,0x6c2e64616d0a3120,0x7225203436732e6f\n"
".quad 0x366c7225202c386c,0x202c326c7225202c,0x6f6d0a3b376c7225,0x6625203233662e76\n"
".quad 0x3030306630202c31,0x2e0a3b3030303030,0x3834203220636f6c,0x6c756d0a31203731\n"
".quad 0x326625203233662e,0x30202c316625202c,0x3030303030303066,0x722e616d660a3b30\n"
".quad 0x6625203233662e6e,0x202c316625202c33,0x3030303030306630,0x3b326625202c3030\n"
".quad 0x2e6e722e616d660a,0x2c34662520323366,0x6630202c31662520,0x3030303030303030\n"
".quad 0x6d0a3b336625202c,0x25203233662e766f,0x46336630202c3566,0x0a3b303030303043\n"
".quad 0x203233662e766f6d,0x336630202c366625,0x3b30303030303846,0x203220636f6c2e0a\n"
".quad 0x6e0a312039313834,0x25203233662e6765,0x3b346625202c3766,0x2e6e722e616d660a\n"
".quad 0x2c38662520323366,0x6625202c37662520,0x0a3b366625202c35,0x203233662e6c756d\n"
".quad 0x386625202c396625,0x414145336630202c,0x68730a3b42414141,0x7225203436622e6c\n"
".quad 0x386c7225202c396c,0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c30316c\n"
".quad 0x2e0a3b3233202c39,0x3834203220636f6c,0x6c68730a31203931,0x6c7225203436622e\n"
".quad 0x316c7225202c3131,0x64610a3b32202c30,0x7225203436732e64,0x6c7225202c32316c\n"
".quad 0x31316c7225202c33,0x6f6c672e74730a3b,0x203233662e6c6162,0x2c5d32316c72255b\n"
".quad 0x6f6d0a3b39662520,0x6625203233662e76,0x30346630202c3031,0x0a3b303030303034\n"
".quad 0x34203220636f6c2e,0x6d660a3120303238,0x3233662e6e722e61,0x25202c3131662520\n"
".quad 0x306630202c303166,0x2c30303030303030,0x3030384633663020,0x766f6d0a3b303030\n"
".quad 0x316625203233662e,0x3930346630202c32,0x2e0a3b3030303030,0x3834203220636f6c\n"
".quad 0x6c756d0a31203032,0x316625203233662e,0x2c32316625202c33,0x3030303030663020\n"
".quad 0x616d660a3b303030,0x203233662e6e722e,0x6625202c34316625,0x30306630202c3331\n"
".quad 0x202c303030303030,0x6d660a3b31316625,0x3233662e6e722e61,0x25202c3531662520\n"
".quad 0x2c356625202c3766,0x6d0a3b3431662520,0x25203233662e6c75,0x316625202c363166\n"
".quad 0x3644336630202c35,0x730a3b3933453833,0x25203436622e6c68,0x7225202c33316c72\n"
".quad 0x0a3b3431202c326c,0x203436732e646461,0x25202c34316c7225,0x7225202c32316c72\n"
".quad 0x6f6c2e0a3b33316c,0x3032383420322063,0x6c672e74730a3120,0x3233662e6c61626f\n"
".quad 0x5d34316c72255b20,0x0a3b36316625202c,0x203436732e646461,0x25202c35316c7225\n"
".quad 0x7225202c34316c72,0x6f6c2e0a3b33316c,0x3132383420322063,0x6c672e74730a3120\n"
".quad 0x3233662e6c61626f,0x5d35316c72255b20,0x0a3b36316625202c,0x34203220636f6c2e\n"
".quad 0x656e0a3120323238,0x6625203233662e67,0x30316625202c3731,0x6e722e616d660a3b\n"
".quad 0x316625203233662e,0x2c37316625202c38,0x6625202c31662520,0x722e616d660a3b36\n"
".quad 0x6625203233662e6e,0x33316625202c3931,0x303030306630202c,0x6625202c30303030\n"
".quad 0x2e616d660a3b3831,0x25203233662e6e72,0x376625202c303266,0x25202c356625202c\n"
".quad 0x6c756d0a3b393166,0x326625203233662e,0x2c30326625202c31,0x3833364433663020\n"
".quad 0x6464610a3b393345,0x6c7225203436732e,0x316c7225202c3631,0x33316c7225202c35\n"
".quad 0x3220636f6c2e0a3b,0x0a31203232383420,0x61626f6c672e7473,0x255b203233662e6c\n"
".quad 0x25202c5d36316c72,0x6464610a3b313266,0x6c7225203436732e,0x316c7225202c3731\n"
".quad 0x33316c7225202c36,0x3220636f6c2e0a3b,0x0a31203332383420,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x25202c5d37316c72,0x6f6c2e0a3b313266,0x3432383420322063\n"
".quad 0x662e6464610a3120,0x2c32326625203233,0x6630202c31662520,0x3030303030303030\n"
".quad 0x6e722e616d660a3b,0x326625203233662e,0x2c32326625202c33,0x3030343034663020\n"
".quad 0x336630202c303030,0x3b30303030303846,0x3233662e6c756d0a,0x25202c3432662520\n"
".quad 0x346630202c323266,0x3b30303030303930,0x2e6e722e616d660a,0x3532662520323366\n"
".quad 0x202c34326625202c,0x6625202c32326625,0x2e616d660a3b3332,0x25203233662e6e72\n"
".quad 0x376625202c363266,0x25202c356625202c,0x6c756d0a3b353266,0x326625203233662e\n"
".quad 0x2c36326625202c37,0x3833454333663020,0x6464610a3b393345,0x6c7225203436732e\n"
".quad 0x316c7225202c3831,0x33316c7225202c37,0x3220636f6c2e0a3b,0x0a31203432383420\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d38316c72,0x6275730a3b373266\n"
".quad 0x326625203233662e,0x202c316625202c38,0x3030303030306630,0x636f6c2e0a3b3030\n"
".quad 0x2035323834203220,0x6e722e616d660a31,0x326625203233662e,0x2c38326625202c39\n"
".quad 0x3030343034663020,0x336630202c303030,0x3b30303030303846,0x3233662e6c756d0a\n"
".quad 0x25202c3033662520,0x346630202c383266,0x3b30303030303930,0x2e6e722e616d660a\n"
".quad 0x3133662520323366,0x202c30336625202c,0x6625202c38326625,0x2e616d660a3b3932\n"
".quad 0x25203233662e6e72,0x376625202c323366,0x25202c356625202c,0x6c756d0a3b313366\n"
".quad 0x336625203233662e,0x2c32336625202c33,0x3833454333663020,0x6464610a3b393345\n"
".quad 0x6c7225203436732e,0x316c7225202c3931,0x33316c7225202c38,0x3220636f6c2e0a3b\n"
".quad 0x0a31203532383420,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d39316c72\n"
".quad 0x6f6c2e0a3b333366,0x3632383420322063,0x722e616d660a3120,0x6625203233662e6e\n"
".quad 0x30316625202c3433,0x303030386630202c,0x6630202c30303030,0x3030303030384633\n"
".quad 0x33662e6c756d0a3b,0x202c353366252032,0x6630202c32316625,0x3030303030303038\n"
".quad 0x6e722e616d660a3b,0x336625203233662e,0x2c35336625202c36,0x3030303038663020\n"
".quad 0x336625202c303030,0x722e616d660a3b34,0x6625203233662e6e,0x2c376625202c3733\n"
".quad 0x6625202c35662520,0x2e6c756d0a3b3633,0x3833662520323366,0x202c37336625202c\n"
".quad 0x4538334543336630,0x2e6464610a3b3933,0x326c722520343673,0x39316c7225202c30\n"
".quad 0x3b33316c7225202c,0x203220636f6c2e0a,0x730a312036323834,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x6625202c5d30326c,0x2e6464610a3b3833,0x326c722520343673\n"
".quad 0x30326c7225202c31,0x3b33316c7225202c,0x203220636f6c2e0a,0x730a312037323834\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d31326c,0x2e6464610a3b3333\n"
".quad 0x326c722520343673,0x31326c7225202c32,0x3b33316c7225202c,0x203220636f6c2e0a\n"
".quad 0x730a312038323834,0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d32326c\n"
".quad 0x2e6464610a3b3631,0x326c722520343673,0x32326c7225202c33,0x3b33316c7225202c\n"
".quad 0x203220636f6c2e0a,0x730a312039323834,0x6c61626f6c672e74,0x72255b203233662e\n"
".quad 0x6625202c5d33326c,0x2e6464610a3b3732,0x326c722520343673,0x33326c7225202c34\n"
".quad 0x3b33316c7225202c,0x203220636f6c2e0a,0x730a312030333834,0x6c61626f6c672e74\n"
".quad 0x72255b203233662e,0x6625202c5d34326c,0x2e6464610a3b3732,0x326c722520343673\n"
".quad 0x34326c7225202c35,0x3b33316c7225202c,0x203220636f6c2e0a,0x730a312031333834\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d35326c,0x636f6c2e0a3b3333\n"
".quad 0x2032333834203220,0x6e722e616d660a31,0x336625203233662e,0x2c30336625202c39\n"
".quad 0x25202c3232662520,0x616d660a3b393266,0x203233662e6e722e,0x6625202c30346625\n"
".quad 0x202c356625202c37,0x756d0a3b39336625,0x6625203233662e6c,0x30346625202c3134\n"
".quad 0x334543336630202c,0x64610a3b39334538,0x7225203436732e64,0x6c7225202c36326c\n"
".quad 0x316c7225202c3532,0x20636f6c2e0a3b33,0x3120323338342032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x202c5d36326c7225,0x64610a3b31346625,0x7225203436732e64\n"
".quad 0x6c7225202c37326c,0x316c7225202c3632,0x20636f6c2e0a3b33,0x3120333338342032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d37326c7225,0x64610a3b31326625\n"
".quad 0x7225203436732e64,0x6c7225202c38326c,0x316c7225202c3732,0x20636f6c2e0a3b33\n"
".quad 0x3120343338342032,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d38326c7225\n"
".quad 0x64610a3b33336625,0x7225203436732e64,0x6c7225202c39326c,0x316c7225202c3832\n"
".quad 0x20636f6c2e0a3b33,0x3120353338342032,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d39326c7225,0x64610a3b33336625,0x7225203436732e64,0x6c7225202c30336c\n"
".quad 0x316c7225202c3932,0x20636f6c2e0a3b33,0x3120363338342032,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x202c5d30336c7225,0x64610a3b38336625,0x7225203436732e64\n"
".quad 0x6c7225202c31336c,0x316c7225202c3033,0x20636f6c2e0a3b33,0x3120373338342032\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d31336c7225,0x6c2e0a3b38336625\n"
".quad 0x333834203220636f,0x3b7465720a322038,0x746e652e0a0a7d0a,0x6930315a5f207972\n"
".quad 0x7a696c616974696e,0x535f535f53665065,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x6d5f535f535f535f,0x6d617261702e0a28,0x5a5f203436752e20\n"
".quad 0x616974696e693031,0x5f536650657a696c,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x617261705f6d5f53,0x61702e0a2c305f6d\n"
".quad 0x3436752e206d6172,0x696e6930315a5f20,0x50657a696c616974,0x535f535f535f5366\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x705f6d5f535f535f\n"
".quad 0x0a2c315f6d617261,0x2e206d617261702e,0x30315a5f20343675,0x696c616974696e69\n"
".quad 0x5f535f536650657a,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f6d,0x617261702e0a2c32,0x5f203436752e206d\n"
".quad 0x6974696e6930315a,0x536650657a696c61,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x7261705f6d5f535f,0x702e0a2c335f6d61\n"
".quad 0x36752e206d617261,0x6e6930315a5f2034,0x657a696c61697469,0x5f535f535f536650\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d5f535f535f53\n"
".quad 0x2c345f6d61726170,0x206d617261702e0a,0x315a5f203436752e,0x6c616974696e6930\n"
".quad 0x535f536650657a69,0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x6d617261705f6d5f,0x7261702e0a2c355f,0x203436752e206d61\n"
".quad 0x74696e6930315a5f,0x6650657a696c6169,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x61705f6d5f535f53,0x2e0a2c365f6d6172\n"
".quad 0x752e206d61726170,0x6930315a5f203436,0x7a696c616974696e,0x535f535f53665065\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x535f535f535f535f,0x6d5f535f535f535f\n"
".quad 0x375f6d617261705f,0x6d617261702e0a2c,0x5a5f203436752e20,0x616974696e693031\n"
".quad 0x5f536650657a696c,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x617261705f6d5f53,0x61702e0a2c385f6d,0x3436752e206d6172\n"
".quad 0x696e6930315a5f20,0x50657a696c616974,0x535f535f535f5366,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x705f6d5f535f535f,0x0a2c395f6d617261\n"
".quad 0x2e206d617261702e,0x30315a5f20343675,0x696c616974696e69,0x5f535f536650657a\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d617261705f6d,0x7261702e0a2c3031,0x203436752e206d61,0x74696e6930315a5f\n"
".quad 0x6650657a696c6169,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x61705f6d5f535f53,0x0a2c31315f6d6172,0x2e206d617261702e\n"
".quad 0x30315a5f20343675,0x696c616974696e69,0x5f535f536650657a,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d617261705f6d\n"
".quad 0x7261702e0a2c3231,0x203436752e206d61,0x74696e6930315a5f,0x6650657a696c6169\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x61705f6d5f535f53,0x0a2c33315f6d6172,0x2e206d617261702e,0x30315a5f20343675\n"
".quad 0x696c616974696e69,0x5f535f536650657a,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d617261705f6d,0x7261702e0a2c3431\n"
".quad 0x203436752e206d61,0x74696e6930315a5f,0x6650657a696c6169,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x61705f6d5f535f53\n"
".quad 0x0a2c35315f6d6172,0x2e206d617261702e,0x30315a5f20343675,0x696c616974696e69\n"
".quad 0x5f535f536650657a,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f6d,0x7261702e0a2c3631,0x203436752e206d61\n"
".quad 0x74696e6930315a5f,0x6650657a696c6169,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x61705f6d5f535f53,0x0a2c37315f6d6172\n"
".quad 0x2e206d617261702e,0x30315a5f20343675,0x696c616974696e69,0x5f535f536650657a\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d617261705f6d,0x7261702e0a2c3831,0x203436752e206d61,0x74696e6930315a5f\n"
".quad 0x6650657a696c6169,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x61705f6d5f535f53,0x290a39315f6d6172,0x206765722e0a7b0a\n"
".quad 0x3c6625203233662e,0x65722e0a3b3e3234,0x25203233732e2067,0x2e0a3b3e33333c72\n"
".quad 0x3436732e20676572,0x3e37363c6c722520,0x702e646c0a0a0a3b,0x3436752e6d617261\n"
".quad 0x5b202c316c722520,0x74696e6930315a5f,0x6650657a696c6169,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x61705f6d5f535f53\n"
".quad 0x0a3b5d305f6d6172,0x6d617261702e646c,0x6c7225203436752e,0x30315a5f5b202c32\n"
".quad 0x696c616974696e69,0x5f535f536650657a,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d617261705f6d,0x702e646c0a3b5d31\n"
".quad 0x3436752e6d617261,0x5b202c336c722520,0x74696e6930315a5f,0x6650657a696c6169\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x61705f6d5f535f53,0x0a3b5d325f6d6172,0x6d617261702e646c,0x6c7225203436752e\n"
".quad 0x30315a5f5b202c34,0x696c616974696e69,0x5f535f536650657a,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d617261705f6d\n"
".quad 0x702e646c0a3b5d33,0x3436752e6d617261,0x5b202c356c722520,0x74696e6930315a5f\n"
".quad 0x6650657a696c6169,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x61705f6d5f535f53,0x0a3b5d345f6d6172,0x6d617261702e646c\n"
".quad 0x6c7225203436752e,0x30315a5f5b202c36,0x696c616974696e69,0x5f535f536650657a\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d617261705f6d,0x702e646c0a3b5d35,0x3436752e6d617261,0x5b202c376c722520\n"
".quad 0x74696e6930315a5f,0x6650657a696c6169,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x61705f6d5f535f53,0x0a3b5d365f6d6172\n"
".quad 0x6d617261702e646c,0x6c7225203436752e,0x30315a5f5b202c38,0x696c616974696e69\n"
".quad 0x5f535f536650657a,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f6d,0x702e646c0a3b5d37,0x3436752e6d617261\n"
".quad 0x5b202c396c722520,0x74696e6930315a5f,0x6650657a696c6169,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x61705f6d5f535f53\n"
".quad 0x0a3b5d385f6d6172,0x6d617261702e646c,0x6c7225203436752e,0x315a5f5b202c3031\n"
".quad 0x6c616974696e6930,0x535f536650657a69,0x535f535f535f535f,0x535f535f535f535f\n"
".quad 0x535f535f535f535f,0x535f535f535f535f,0x6d617261705f6d5f,0x2e646c0a3b5d395f\n"
".quad 0x36752e6d61726170,0x2c31316c72252034,0x6e6930315a5f5b20,0x657a696c61697469\n"
".quad 0x5f535f535f536650,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d5f535f535f53,0x30315f6d61726170,0x61702e646c0a3b5d,0x203436752e6d6172\n"
".quad 0x5b202c32316c7225,0x74696e6930315a5f,0x6650657a696c6169,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x61705f6d5f535f53\n"
".quad 0x3b5d31315f6d6172,0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c33316c\n"
".quad 0x616974696e693031,0x5f536650657a696c,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x617261705f6d5f53,0x6c0a3b5d32315f6d\n"
".quad 0x2e6d617261702e64,0x316c722520343675,0x30315a5f5b202c34,0x696c616974696e69\n"
".quad 0x5f535f536650657a,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f6d617261705f6d,0x2e646c0a3b5d3331,0x36752e6d61726170\n"
".quad 0x2c35316c72252034,0x6e6930315a5f5b20,0x657a696c61697469,0x5f535f535f536650\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d5f535f535f53\n"
".quad 0x34315f6d61726170,0x61702e646c0a3b5d,0x203436752e6d6172,0x5b202c36316c7225\n"
".quad 0x74696e6930315a5f,0x6650657a696c6169,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x61705f6d5f535f53,0x3b5d35315f6d6172\n"
".quad 0x617261702e646c0a,0x7225203436752e6d,0x5a5f5b202c37316c,0x616974696e693031\n"
".quad 0x5f536650657a696c,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x617261705f6d5f53,0x6c0a3b5d36315f6d,0x2e6d617261702e64\n"
".quad 0x316c722520343675,0x30315a5f5b202c38,0x696c616974696e69,0x5f535f536650657a\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f6d617261705f6d,0x2e646c0a3b5d3731,0x36752e6d61726170,0x2c39316c72252034\n"
".quad 0x6e6930315a5f5b20,0x657a696c61697469,0x5f535f535f536650,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x5f535f535f535f53,0x5f6d5f535f535f53,0x38315f6d61726170\n"
".quad 0x61702e646c0a3b5d,0x203436752e6d6172,0x5b202c30326c7225,0x74696e6930315a5f\n"
".quad 0x6650657a696c6169,0x5f535f535f535f53,0x5f535f535f535f53,0x5f535f535f535f53\n"
".quad 0x5f535f535f535f53,0x61705f6d5f535f53,0x3b5d39315f6d6172,0x6f742e617476630a\n"
".quad 0x2e6c61626f6c672e,0x326c722520343675,0x39316c7225202c31,0x3220636f6c2e0a3b\n"
".quad 0x0a31203934383420,0x203233752e766f6d,0x746e25202c317225,0x6f6d0a3b782e6469\n"
".quad 0x7225203233752e76,0x6961746325202c32,0x766f6d0a3b782e64,0x337225203233752e\n"
".quad 0x782e64697425202c,0x6f6c2e64616d0a3b,0x347225203233732e,0x25202c317225202c\n"
".quad 0x3b337225202c3272,0x203220636f6c2e0a,0x6d0a312030353834,0x25203233752e766f\n"
".quad 0x69746e25202c3572,0x766f6d0a3b792e64,0x367225203233752e,0x646961746325202c\n"
".quad 0x2e766f6d0a3b792e,0x2c37722520323375,0x3b792e6469742520,0x2e6f6c2e64616d0a\n"
".quad 0x2c38722520323373,0x7225202c35722520,0x0a3b377225202c36,0x34203220636f6c2e\n"
".quad 0x6f6d0a3120313538,0x7225203233752e76,0x6469746e25202c39,0x2e766f6d0a3b7a2e\n"
".quad 0x3031722520323375,0x646961746325202c,0x2e766f6d0a3b7a2e,0x3131722520323375\n"
".quad 0x7a2e64697425202c,0x6f6c2e64616d0a3b,0x317225203233732e,0x202c397225202c32\n"
".quad 0x7225202c30317225,0x2e6c68730a3b3131,0x3331722520323362,0x202c32317225202c\n"
".quad 0x20636f6c2e0a3b36,0x3120333538342032,0x3436752e7476630a,0x6c7225203233752e\n"
".quad 0x3b387225202c3232,0x3436752e7476630a,0x6c7225203233752e,0x33317225202c3332\n"
".quad 0x36732e6464610a3b,0x2c34326c72252034,0x202c33326c722520,0x630a3b32326c7225\n"
".quad 0x752e3436752e7476,0x35326c7225203233,0x2e0a3b347225202c,0x3834203220636f6c\n"
".quad 0x64616d0a31203335,0x203436732e6f6c2e,0x25202c36326c7225,0x7225202c34326c72\n"
".quad 0x6c7225202c30326c,0x2e766f6d0a3b3532,0x2c31662520323366,0x3030303030663020\n"
".quad 0x6f6c2e0a3b303030,0x3236383420322063,0x662e6c756d0a3120,0x202c326625203233\n"
".quad 0x306630202c316625,0x3b30303030303030,0x2e6e722e616d660a,0x2c33662520323366\n"
".quad 0x6630202c31662520,0x3030303030303030,0x660a3b326625202c,0x33662e6e722e616d\n"
".quad 0x25202c3466252032,0x30306630202c3166,0x202c303030303030,0x766f6d0a3b336625\n"
".quad 0x356625203233662e,0x304346336630202c,0x6f6d0a3b30303030,0x6625203233662e76\n"
".quad 0x3846336630202c36,0x2e0a3b3030303030,0x3834203220636f6c,0x67656e0a31203436\n"
".quad 0x376625203233662e,0x660a3b346625202c,0x33662e6e722e616d,0x25202c3866252032\n"
".quad 0x2c356625202c3766,0x756d0a3b36662520,0x6625203233662e6c,0x202c386625202c39\n"
".quad 0x4141414145336630,0x617476630a3b4241,0x626f6c672e6f742e,0x25203436752e6c61\n"
".quad 0x7225202c37326c72,0x2e6c68730a3b316c,0x326c722520343662,0x36326c7225202c38\n"
".quad 0x68730a3b3233202c,0x7225203436732e72,0x6c7225202c39326c,0x0a3b3233202c3832\n"
".quad 0x34203220636f6c2e,0x68730a3120353638,0x7225203436622e6c,0x6c7225202c30336c\n"
".quad 0x610a3b32202c3932,0x25203436732e6464,0x7225202c31336c72,0x6c7225202c37326c\n"
".quad 0x672e74730a3b3033,0x33662e6c61626f6c,0x31336c72255b2032,0x0a3b396625202c5d\n"
".quad 0x203233662e766f6d,0x6630202c30316625,0x3030303030343034,0x3220636f6c2e0a3b\n"
".quad 0x0a31203636383420,0x662e6e722e616d66,0x2c31316625203233,0x30202c3031662520\n"
".quad 0x3030303030303066,0x3846336630202c30,0x6d0a3b3030303030,0x25203233662e766f\n"
".quad 0x346630202c323166,0x3b30303030303930,0x203220636f6c2e0a,0x6d0a312036363834\n"
".quad 0x25203233662e6c75,0x316625202c333166,0x3030306630202c32,0x660a3b3030303030\n"
".quad 0x33662e6e722e616d,0x202c343166252032,0x6630202c33316625,0x3030303030303030\n"
".quad 0x0a3b31316625202c,0x662e6e722e616d66,0x2c35316625203233,0x6625202c37662520\n"
".quad 0x3b34316625202c35,0x3233662e6c756d0a,0x25202c3631662520,0x336630202c353166\n"
".quad 0x3b39334538333644,0x6f742e617476630a,0x2e6c61626f6c672e,0x336c722520343675\n"
".quad 0x3b326c7225202c32,0x203220636f6c2e0a,0x610a312037363834,0x25203436732e6464\n"
".quad 0x7225202c33336c72,0x6c7225202c32336c,0x672e74730a3b3033,0x33662e6c61626f6c\n"
".quad 0x33336c72255b2032,0x3b36316625202c5d,0x6f742e617476630a,0x2e6c61626f6c672e\n"
".quad 0x336c722520343675,0x3b336c7225202c34,0x203220636f6c2e0a,0x610a312039363834\n"
".quad 0x25203436732e6464,0x7225202c35336c72,0x6c7225202c34336c,0x672e74730a3b3033\n"
".quad 0x33662e6c61626f6c,0x35336c72255b2032,0x3b36316625202c5d,0x203220636f6c2e0a\n"
".quad 0x6e0a312030373834,0x25203233662e6765,0x316625202c373166,0x722e616d660a3b30\n"
".quad 0x6625203233662e6e,0x37316625202c3831,0x25202c316625202c,0x2e616d660a3b3666\n"
".quad 0x25203233662e6e72,0x316625202c393166,0x3030306630202c33,0x25202c3030303030\n"
".quad 0x616d660a3b383166,0x203233662e6e722e,0x6625202c30326625,0x202c356625202c37\n"
".quad 0x756d0a3b39316625,0x6625203233662e6c,0x30326625202c3132,0x333644336630202c\n"
".quad 0x76630a3b39334538,0x6c672e6f742e6174,0x3436752e6c61626f,0x202c36336c722520\n"
".quad 0x6c2e0a3b346c7225,0x373834203220636f,0x2e6464610a312031,0x336c722520343673\n"
".quad 0x36336c7225202c37,0x3b30336c7225202c,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d37336c7225,0x76630a3b31326625,0x6c672e6f742e6174,0x3436752e6c61626f\n"
".quad 0x202c38336c722520,0x6c2e0a3b356c7225,0x373834203220636f,0x2e6464610a312033\n"
".quad 0x336c722520343673,0x38336c7225202c39,0x3b30336c7225202c,0x626f6c672e74730a\n"
".quad 0x5b203233662e6c61,0x202c5d39336c7225,0x6c2e0a3b31326625,0x373834203220636f\n"
".quad 0x2e6464610a312034,0x3232662520323366,0x30202c316625202c,0x3030303030303066\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x32326625202c3332,0x303430346630202c\n"
".quad 0x6630202c30303030,0x3030303030384633,0x33662e6c756d0a3b,0x202c343266252032\n"
".quad 0x6630202c32326625,0x3030303030393034,0x6e722e616d660a3b,0x326625203233662e\n"
".quad 0x2c34326625202c35,0x25202c3232662520,0x616d660a3b333266,0x203233662e6e722e\n"
".quad 0x6625202c36326625,0x202c356625202c37,0x756d0a3b35326625,0x6625203233662e6c\n"
".quad 0x36326625202c3732,0x334543336630202c,0x76630a3b39334538,0x6c672e6f742e6174\n"
".quad 0x3436752e6c61626f,0x202c30346c722520,0x6c2e0a3b366c7225,0x373834203220636f\n"
".quad 0x2e6464610a312035,0x346c722520343673,0x30346c7225202c31,0x3b30336c7225202c\n"
".quad 0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d31346c7225,0x75730a3b37326625\n"
".quad 0x6625203233662e62,0x2c316625202c3832,0x3030303030663020,0x6f6c2e0a3b303030\n"
".quad 0x3637383420322063,0x722e616d660a3120,0x6625203233662e6e,0x38326625202c3932\n"
".quad 0x303430346630202c,0x6630202c30303030,0x3030303030384633,0x33662e6c756d0a3b\n"
".quad 0x202c303366252032,0x6630202c38326625,0x3030303030393034,0x6e722e616d660a3b\n"
".quad 0x336625203233662e,0x2c30336625202c31,0x25202c3832662520,0x616d660a3b393266\n"
".quad 0x203233662e6e722e,0x6625202c32336625,0x202c356625202c37,0x756d0a3b31336625\n"
".quad 0x6625203233662e6c,0x32336625202c3333,0x334543336630202c,0x76630a3b39334538\n"
".quad 0x6c672e6f742e6174,0x3436752e6c61626f,0x202c32346c722520,0x6c2e0a3b376c7225\n"
".quad 0x373834203220636f,0x2e6464610a312037,0x346c722520343673,0x32346c7225202c33\n"
".quad 0x3b30336c7225202c,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d33346c7225\n"
".quad 0x6c2e0a3b33336625,0x373834203220636f,0x2e616d660a312038,0x25203233662e6e72\n"
".quad 0x316625202c343366,0x3030386630202c30,0x30202c3030303030,0x3030303038463366\n"
".quad 0x662e6c756d0a3b30,0x2c35336625203233,0x30202c3231662520,0x3030303030303866\n"
".quad 0x722e616d660a3b30,0x6625203233662e6e,0x35336625202c3633,0x303030386630202c\n"
".quad 0x6625202c30303030,0x2e616d660a3b3433,0x25203233662e6e72,0x376625202c373366\n"
".quad 0x25202c356625202c,0x6c756d0a3b363366,0x336625203233662e,0x2c37336625202c38\n"
".quad 0x3833454333663020,0x7476630a3b393345,0x6f6c672e6f742e61,0x203436752e6c6162\n"
".quad 0x25202c34346c7225,0x6f6c2e0a3b386c72,0x3937383420322063,0x732e6464610a3120\n"
".quad 0x35346c7225203436,0x2c34346c7225202c,0x0a3b30336c722520,0x61626f6c672e7473\n"
".quad 0x255b203233662e6c,0x25202c5d35346c72,0x7476630a3b383366,0x6f6c672e6f742e61\n"
".quad 0x203436752e6c6162,0x25202c36346c7225,0x6f6c2e0a3b396c72,0x3138383420322063\n"
".quad 0x732e6464610a3120,0x37346c7225203436,0x2c36346c7225202c,0x0a3b30336c722520\n"
".quad 0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d37346c72,0x7476630a3b333366\n"
".quad 0x6f6c672e6f742e61,0x203436752e6c6162,0x25202c38346c7225,0x6c2e0a3b30316c72\n"
".quad 0x383834203220636f,0x2e6464610a312034,0x346c722520343673,0x38346c7225202c39\n"
".quad 0x3b30336c7225202c,0x626f6c672e74730a,0x5b203233662e6c61,0x202c5d39346c7225\n"
".quad 0x76630a3b36316625,0x6c672e6f742e6174,0x3436752e6c61626f,0x202c30356c722520\n"
".quad 0x2e0a3b31316c7225,0x3834203220636f6c,0x6464610a31203638,0x6c7225203436732e\n"
".quad 0x356c7225202c3135,0x30336c7225202c30,0x6f6c672e74730a3b,0x203233662e6c6162\n"
".quad 0x2c5d31356c72255b,0x630a3b3732662520,0x672e6f742e617476,0x36752e6c61626f6c\n"
".quad 0x2c32356c72252034,0x0a3b32316c722520,0x34203220636f6c2e,0x64610a3120383838\n"
".quad 0x7225203436732e64,0x6c7225202c33356c,0x336c7225202c3235,0x6c672e74730a3b30\n"
".quad 0x3233662e6c61626f,0x5d33356c72255b20,0x0a3b37326625202c,0x2e6f742e61747663\n"
".quad 0x752e6c61626f6c67,0x34356c7225203436,0x3b33316c7225202c,0x203220636f6c2e0a\n"
".quad 0x610a312030393834,0x25203436732e6464,0x7225202c35356c72,0x6c7225202c34356c\n"
".quad 0x672e74730a3b3033,0x33662e6c61626f6c,0x35356c72255b2032,0x3b33336625202c5d\n"
".quad 0x203220636f6c2e0a,0x660a312031393834,0x33662e6e722e616d,0x202c393366252032\n"
".quad 0x6625202c30336625,0x39326625202c3232,0x6e722e616d660a3b,0x346625203233662e\n"
".quad 0x202c376625202c30,0x336625202c356625,0x662e6c756d0a3b39,0x2c31346625203233\n"
".quad 0x30202c3034662520,0x3345383345433366,0x2e617476630a3b39,0x61626f6c672e6f74\n"
".quad 0x7225203436752e6c,0x6c7225202c36356c,0x636f6c2e0a3b3431,0x2032393834203220\n"
".quad 0x36732e6464610a31,0x2c37356c72252034,0x202c36356c722520,0x730a3b30336c7225\n"
".quad 0x6c61626f6c672e74,0x72255b203233662e,0x6625202c5d37356c,0x617476630a3b3134\n"
".quad 0x626f6c672e6f742e,0x25203436752e6c61,0x7225202c38356c72,0x6f6c2e0a3b35316c\n"
".quad 0x3439383420322063,0x732e6464610a3120,0x39356c7225203436,0x2c38356c7225202c\n"
".quad 0x0a3b30336c722520,0x61626f6c672e7473,0x255b203233662e6c,0x25202c5d39356c72\n"
".quad 0x7476630a3b313266,0x6f6c672e6f742e61,0x203436752e6c6162,0x25202c30366c7225\n"
".quad 0x6c2e0a3b36316c72,0x393834203220636f,0x2e6464610a312036,0x366c722520343673\n"
".quad 0x30366c7225202c31,0x3b30336c7225202c,0x626f6c672e74730a,0x5b203233662e6c61\n"
".quad 0x202c5d31366c7225,0x76630a3b33336625,0x6c672e6f742e6174,0x3436752e6c61626f\n"
".quad 0x202c32366c722520,0x2e0a3b37316c7225,0x3834203220636f6c,0x6464610a31203839\n"
".quad 0x6c7225203436732e,0x366c7225202c3336,0x30336c7225202c32,0x6f6c672e74730a3b\n"
".quad 0x203233662e6c6162,0x2c5d33366c72255b,0x630a3b3333662520,0x672e6f742e617476\n"
".quad 0x36752e6c61626f6c,0x2c34366c72252034,0x0a3b38316c722520,0x34203220636f6c2e\n"
".quad 0x64610a3120303039,0x7225203436732e64,0x6c7225202c35366c,0x336c7225202c3436\n"
".quad 0x6c672e74730a3b30,0x3233662e6c61626f,0x5d35366c72255b20,0x0a3b38336625202c\n"
".quad 0x34203220636f6c2e,0x64610a3120323039,0x7225203436732e64,0x6c7225202c36366c\n"
".quad 0x336c7225202c3132,0x6c672e74730a3b30,0x3233662e6c61626f,0x5d36366c72255b20\n"
".quad 0x0a3b38336625202c,0x34203220636f6c2e,0x65720a3220333039,0x000a0a0a7d0a3b74\n"
".text");

extern "C" {

extern const unsigned long long fatbinData[112624];

}


extern "C" {

static const struct {int m; int v; const unsigned long long* d; char* f;} __fatDeviceText __attribute__ ((aligned (8))) __attribute__ ((section (".nvFatBinSegment")))=
 { 0x466243b1, 1, fatbinData, 0 };

}
# 3 "MRT.cudafe1.stub.c" 2 3
extern void __device_stub__Z8testfuncPf(float *);
extern void __device_stub__Z11simple_copyPfS_m(float *, float *, size_t);
extern void __device_stub__Z11simple_textPfS_m(float *, float *, size_t);
extern void __device_stub__Z14ExtractFromC_dPfmf(float *, size_t, float);
extern void __device_stub__Z18LR_d_hybABCD_forcePfS_fmS_S_S_i(float *, float *, float, size_t, float *, float *, float *, int);
extern void __device_stub__Z18LR_d_hybBACD_forcePfS_fmS_S_S_i(float *, float *, float, size_t, float *, float *, float *, int);
extern void __device_stub__Z12LR_d_hybABCDPfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z13LR_d_hybABCD2PfS_fmi(float *, float *, float, size_t, int);
extern void __device_stub__Z12LR_d_hybABDCPfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z13LR_d_hybABDC2PfS_fmfi(float *, float *, float, size_t, float, int);
extern void __device_stub__Z19LR_d_hybABDC_InterpPfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z12LR_d_hybBADCPfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z13LR_d_hybBADC2PfS_fmfi(float *, float *, float, size_t, float, int);
extern void __device_stub__Z19LR_d_hybBADC_InterpPfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z9LR_d_ABCDPfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z9LR_d_ABDCPfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z9LR_d_BACDPfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z9LR_d_BADCPfS_fmf(float *, float *, float, size_t, float);
extern void __device_stub__Z17mrt_d_hybAB_forcePfS_fmS_S_S_i(float *, float *, float, size_t, float *, float *, float *, int);
extern void __device_stub__Z17mrt_d_hybBA_forcePfS_fmS_S_S_i(float *, float *, float, size_t, float *, float *, float *, int);
extern void __device_stub__Z11mrt_d_hybABPfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z11mrt_d_hybBAPfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z12mrt_d_singlePfS_fm(float *, float *, float, size_t);
extern void __device_stub__Z17initialize_singlePfm(float *, size_t);
extern void __device_stub__Z13initialize_LRPfm(float *, size_t);
extern void __device_stub__Z10initializePfS_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_m(float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, size_t);
static void __sti____cudaRegisterAll_11_MRT_cpp1_ii_887ef395(void) __attribute__((__constructor__));
void __device_stub__Z8testfuncPf(float *__par0){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(float *))testfunc)); (void)cudaLaunch(((char *)((void ( *)(float *))testfunc))); };}
# 1428 "MRT.cu"
void testfunc( float *__cuda_0)
# 1429 "MRT.cu"
{__device_stub__Z8testfuncPf( __cuda_0);
# 1474 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z11simple_copyPfS_m( float *__par0, float *__par1, size_t __par2) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, size_t))simple_copy)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, size_t))simple_copy))); }; }
# 1475 "MRT.cu"
void simple_copy( float *__cuda_0,float *__cuda_1,size_t __cuda_2)
# 1477 "MRT.cu"
{__device_stub__Z11simple_copyPfS_m( __cuda_0,__cuda_1,__cuda_2);
# 1485 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z11simple_textPfS_m( float *__par0, float *__par1, size_t __par2) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, size_t))simple_text)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, size_t))simple_text))); }; }
# 1486 "MRT.cu"
void simple_text( float *__cuda_0,float *__cuda_1,size_t __cuda_2)
# 1488 "MRT.cu"
{__device_stub__Z11simple_textPfS_m( __cuda_0,__cuda_1,__cuda_2);
# 1494 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z14ExtractFromC_dPfmf( float *__par0, size_t __par1, float __par2) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, size_t, float))ExtractFromC_d)); (void)cudaLaunch(((char *)((void ( *)(float *, size_t, float))ExtractFromC_d))); }; }
# 1496 "MRT.cu"
void ExtractFromC_d( float *__cuda_0,size_t __cuda_1,float __cuda_2)
# 1498 "MRT.cu"
{__device_stub__Z14ExtractFromC_dPfmf( __cuda_0,__cuda_1,__cuda_2);
# 1728 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z18LR_d_hybABCD_forcePfS_fmS_S_S_i( float *__par0, float *__par1, float __par2, size_t __par3, float *__par4, float *__par5, float *__par6, int __par7) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par7, sizeof(__par7), (size_t)56UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float *, float *, float *, int))LR_d_hybABCD_force)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float *, float *, float *, int))LR_d_hybABCD_force))); }; }
# 1729 "MRT.cu"
void LR_d_hybABCD_force( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float *__cuda_4,float *__cuda_5,float *__cuda_6,int __cuda_7)
# 1731 "MRT.cu"
{__device_stub__Z18LR_d_hybABCD_forcePfS_fmS_S_S_i( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6,__cuda_7);
# 1879 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z18LR_d_hybBACD_forcePfS_fmS_S_S_i( float *__par0, float *__par1, float __par2, size_t __par3, float *__par4, float *__par5, float *__par6, int __par7) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par7, sizeof(__par7), (size_t)56UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float *, float *, float *, int))LR_d_hybBACD_force)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float *, float *, float *, int))LR_d_hybBACD_force))); }; }
# 1880 "MRT.cu"
void LR_d_hybBACD_force( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float *__cuda_4,float *__cuda_5,float *__cuda_6,int __cuda_7)
# 1882 "MRT.cu"
{__device_stub__Z18LR_d_hybBACD_forcePfS_fmS_S_S_i( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6,__cuda_7);
# 2026 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z12LR_d_hybABCDPfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))LR_d_hybABCD)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))LR_d_hybABCD))); }; }
# 2027 "MRT.cu"
void LR_d_hybABCD( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 2029 "MRT.cu"
{__device_stub__Z12LR_d_hybABCDPfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 2127 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z13LR_d_hybABCD2PfS_fmi( float *__par0, float *__par1, float __par2, size_t __par3, int __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, int))LR_d_hybABCD2)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, int))LR_d_hybABCD2))); }; }
# 2128 "MRT.cu"
void LR_d_hybABCD2( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,int __cuda_4)
# 2130 "MRT.cu"
{__device_stub__Z13LR_d_hybABCD2PfS_fmi( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 2227 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z12LR_d_hybABDCPfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_hybABDC)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_hybABDC))); }; }
# 2228 "MRT.cu"
void LR_d_hybABDC( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 2230 "MRT.cu"
{__device_stub__Z12LR_d_hybABDCPfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 2329 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z13LR_d_hybABDC2PfS_fmfi( float *__par0, float *__par1, float __par2, size_t __par3, float __par4, int __par5) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)36UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float, int))LR_d_hybABDC2)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float, int))LR_d_hybABDC2))); }; }
# 2330 "MRT.cu"
void LR_d_hybABDC2( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4,int __cuda_5)
# 2332 "MRT.cu"
{__device_stub__Z13LR_d_hybABDC2PfS_fmfi( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5);
# 2431 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z19LR_d_hybABDC_InterpPfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_hybABDC_Interp)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_hybABDC_Interp))); }; }
# 2432 "MRT.cu"
void LR_d_hybABDC_Interp( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 2434 "MRT.cu"
{__device_stub__Z19LR_d_hybABDC_InterpPfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 2738 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z12LR_d_hybBADCPfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_hybBADC)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_hybBADC))); }; }
# 2739 "MRT.cu"
void LR_d_hybBADC( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 2741 "MRT.cu"
{__device_stub__Z12LR_d_hybBADCPfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 2840 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z13LR_d_hybBADC2PfS_fmfi( float *__par0, float *__par1, float __par2, size_t __par3, float __par4, int __par5) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)36UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float, int))LR_d_hybBADC2)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float, int))LR_d_hybBADC2))); }; }
# 2841 "MRT.cu"
void LR_d_hybBADC2( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4,int __cuda_5)
# 2843 "MRT.cu"
{__device_stub__Z13LR_d_hybBADC2PfS_fmfi( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5);
# 2942 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z19LR_d_hybBADC_InterpPfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_hybBADC_Interp)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_hybBADC_Interp))); }; }
# 2943 "MRT.cu"
void LR_d_hybBADC_Interp( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 2945 "MRT.cu"
{__device_stub__Z19LR_d_hybBADC_InterpPfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 3246 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z9LR_d_ABCDPfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))LR_d_ABCD)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))LR_d_ABCD))); }; }
# 3248 "MRT.cu"
void LR_d_ABCD( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 3250 "MRT.cu"
{__device_stub__Z9LR_d_ABCDPfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 3338 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z9LR_d_ABDCPfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_ABDC)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_ABDC))); }; }
# 3340 "MRT.cu"
void LR_d_ABDC( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 3342 "MRT.cu"
{__device_stub__Z9LR_d_ABDCPfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 3533 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z9LR_d_BACDPfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))LR_d_BACD)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))LR_d_BACD))); }; }
# 3535 "MRT.cu"
void LR_d_BACD( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 3537 "MRT.cu"
{__device_stub__Z9LR_d_BACDPfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 3625 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z9LR_d_BADCPfS_fmf( float *__par0, float *__par1, float __par2, size_t __par3, float __par4) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_BADC)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float))LR_d_BADC))); }; }
# 3627 "MRT.cu"
void LR_d_BADC( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float __cuda_4)
# 3629 "MRT.cu"
{__device_stub__Z9LR_d_BADCPfS_fmf( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
# 3820 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z17mrt_d_hybAB_forcePfS_fmS_S_S_i( float *__par0, float *__par1, float __par2, size_t __par3, float *__par4, float *__par5, float *__par6, int __par7) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par7, sizeof(__par7), (size_t)56UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float *, float *, float *, int))mrt_d_hybAB_force)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float *, float *, float *, int))mrt_d_hybAB_force))); }; }
# 3821 "MRT.cu"
void mrt_d_hybAB_force( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float *__cuda_4,float *__cuda_5,float *__cuda_6,int __cuda_7)
# 3823 "MRT.cu"
{__device_stub__Z17mrt_d_hybAB_forcePfS_fmS_S_S_i( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6,__cuda_7);
# 3991 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z17mrt_d_hybBA_forcePfS_fmS_S_S_i( float *__par0, float *__par1, float __par2, size_t __par3, float *__par4, float *__par5, float *__par6, int __par7) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par7, sizeof(__par7), (size_t)56UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t, float *, float *, float *, int))mrt_d_hybBA_force)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t, float *, float *, float *, int))mrt_d_hybBA_force))); }; }
# 3992 "MRT.cu"
void mrt_d_hybBA_force( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3,float *__cuda_4,float *__cuda_5,float *__cuda_6,int __cuda_7)
# 3994 "MRT.cu"
{__device_stub__Z17mrt_d_hybBA_forcePfS_fmS_S_S_i( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6,__cuda_7);
# 4164 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z11mrt_d_hybABPfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))mrt_d_hybAB)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))mrt_d_hybAB))); }; }
# 4166 "MRT.cu"
void mrt_d_hybAB( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 4168 "MRT.cu"
{__device_stub__Z11mrt_d_hybABPfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 4344 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z11mrt_d_hybBAPfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))mrt_d_hybBA)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))mrt_d_hybBA))); }; }
# 4498 "MRT.cu"
void mrt_d_hybBA( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 4500 "MRT.cu"
{__device_stub__Z11mrt_d_hybBAPfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 4637 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z12mrt_d_singlePfS_fm( float *__par0, float *__par1, float __par2, size_t __par3) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, size_t))mrt_d_single)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, size_t))mrt_d_single))); }; }
# 4640 "MRT.cu"
void mrt_d_single( float *__cuda_0,float *__cuda_1,float __cuda_2,size_t __cuda_3)
# 4642 "MRT.cu"
{__device_stub__Z12mrt_d_singlePfS_fm( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
# 4730 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z17initialize_singlePfm( float *__par0, size_t __par1) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, size_t))initialize_single)); (void)cudaLaunch(((char *)((void ( *)(float *, size_t))initialize_single))); }; }
# 4743 "MRT.cu"
void initialize_single( float *__cuda_0,size_t __cuda_1)
# 4744 "MRT.cu"
{__device_stub__Z17initialize_singlePfm( __cuda_0,__cuda_1);
# 4803 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z13initialize_LRPfm( float *__par0, size_t __par1) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, size_t))initialize_LR)); (void)cudaLaunch(((char *)((void ( *)(float *, size_t))initialize_LR))); }; }
# 4804 "MRT.cu"
void initialize_LR( float *__cuda_0,size_t __cuda_1)
# 4805 "MRT.cu"
{__device_stub__Z13initialize_LRPfm( __cuda_0,__cuda_1);
# 4838 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
void __device_stub__Z10initializePfS_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_m( float *__par0, float *__par1, float *__par2, float *__par3, float *__par4, float *__par5, float *__par6, float *__par7, float *__par8, float *__par9, float *__par10, float *__par11, float *__par12, float *__par13, float *__par14, float *__par15, float *__par16, float *__par17, float *__par18, size_t __par19) { if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par7, sizeof(__par7), (size_t)56UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par8, sizeof(__par8), (size_t)64UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par9, sizeof(__par9), (size_t)72UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par10, sizeof(__par10), (size_t)80UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par11, sizeof(__par11), (size_t)88UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par12, sizeof(__par12), (size_t)96UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par13, sizeof(__par13), (size_t)104UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par14, sizeof(__par14), (size_t)112UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par15, sizeof(__par15), (size_t)120UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par16, sizeof(__par16), (size_t)128UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par17, sizeof(__par17), (size_t)136UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par18, sizeof(__par18), (size_t)144UL) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par19, sizeof(__par19), (size_t)152UL) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, size_t))initialize)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, size_t))initialize))); }; }
# 4839 "MRT.cu"
void initialize( float *__cuda_0,float *__cuda_1,float *__cuda_2,float *__cuda_3,float *__cuda_4,float *__cuda_5,float *__cuda_6,float *__cuda_7,float *__cuda_8,float *__cuda_9,float *__cuda_10,float *__cuda_11,float *__cuda_12,float *__cuda_13,float *__cuda_14,float *__cuda_15,float *__cuda_16,float *__cuda_17,float *__cuda_18,size_t __cuda_19)
# 4848 "MRT.cu"
{__device_stub__Z10initializePfS_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_m( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6,__cuda_7,__cuda_8,__cuda_9,__cuda_10,__cuda_11,__cuda_12,__cuda_13,__cuda_14,__cuda_15,__cuda_16,__cuda_17,__cuda_18,__cuda_19);
# 4903 "MRT.cu"
}
# 1 "MRT.cudafe1.stub.c"
static void __sti____cudaRegisterAll_11_MRT_cpp1_ii_887ef395(void) { __cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); atexit(__cudaUnregisterBinaryUtil); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, float *, size_t))initialize), (char*)"_Z10initializePfS_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_m", "_Z10initializePfS_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_S_m", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, size_t))initialize_LR), (char*)"_Z13initialize_LRPfm", "_Z13initialize_LRPfm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, size_t))initialize_single), (char*)"_Z17initialize_singlePfm", "_Z17initialize_singlePfm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))mrt_d_single), (char*)"_Z12mrt_d_singlePfS_fm", "_Z12mrt_d_singlePfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))mrt_d_hybBA), (char*)"_Z11mrt_d_hybBAPfS_fm", "_Z11mrt_d_hybBAPfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))mrt_d_hybAB), (char*)"_Z11mrt_d_hybABPfS_fm", "_Z11mrt_d_hybABPfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float *, float *, float *, int))mrt_d_hybBA_force), (char*)"_Z17mrt_d_hybBA_forcePfS_fmS_S_S_i", "_Z17mrt_d_hybBA_forcePfS_fmS_S_S_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float *, float *, float *, int))mrt_d_hybAB_force), (char*)"_Z17mrt_d_hybAB_forcePfS_fmS_S_S_i", "_Z17mrt_d_hybAB_forcePfS_fmS_S_S_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))LR_d_BADC), (char*)"_Z9LR_d_BADCPfS_fmf", "_Z9LR_d_BADCPfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))LR_d_BACD), (char*)"_Z9LR_d_BACDPfS_fm", "_Z9LR_d_BACDPfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))LR_d_ABDC), (char*)"_Z9LR_d_ABDCPfS_fmf", "_Z9LR_d_ABDCPfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))LR_d_ABCD), (char*)"_Z9LR_d_ABCDPfS_fm", "_Z9LR_d_ABCDPfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))LR_d_hybBADC_Interp), (char*)"_Z19LR_d_hybBADC_InterpPfS_fmf", "_Z19LR_d_hybBADC_InterpPfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float, int))LR_d_hybBADC2), (char*)"_Z13LR_d_hybBADC2PfS_fmfi", "_Z13LR_d_hybBADC2PfS_fmfi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))LR_d_hybBADC), (char*)"_Z12LR_d_hybBADCPfS_fmf", "_Z12LR_d_hybBADCPfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))LR_d_hybABDC_Interp), (char*)"_Z19LR_d_hybABDC_InterpPfS_fmf", "_Z19LR_d_hybABDC_InterpPfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float, int))LR_d_hybABDC2), (char*)"_Z13LR_d_hybABDC2PfS_fmfi", "_Z13LR_d_hybABDC2PfS_fmfi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float))LR_d_hybABDC), (char*)"_Z12LR_d_hybABDCPfS_fmf", "_Z12LR_d_hybABDCPfS_fmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, int))LR_d_hybABCD2), (char*)"_Z13LR_d_hybABCD2PfS_fmi", "_Z13LR_d_hybABCD2PfS_fmi", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t))LR_d_hybABCD), (char*)"_Z12LR_d_hybABCDPfS_fm", "_Z12LR_d_hybABCDPfS_fm", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float *, float *, float *, int))LR_d_hybBACD_force), (char*)"_Z18LR_d_hybBACD_forcePfS_fmS_S_S_i", "_Z18LR_d_hybBACD_forcePfS_fmS_S_S_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, float, size_t, float *, float *, float *, int))LR_d_hybABCD_force), (char*)"_Z18LR_d_hybABCD_forcePfS_fmS_S_S_i", "_Z18LR_d_hybABCD_forcePfS_fmS_S_S_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, size_t, float))ExtractFromC_d), (char*)"_Z14ExtractFromC_dPfmf", "_Z14ExtractFromC_dPfmf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, size_t))simple_text), (char*)"_Z11simple_textPfS_m", "_Z11simple_textPfS_m", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *, float *, size_t))simple_copy), (char*)"_Z11simple_copyPfS_m", "_Z11simple_copyPfS_m", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__cudaFatCubinHandle, (const char*)((void ( *)(float *))testfunc), (char*)"_Z8testfuncPf", "_Z8testfuncPf", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f0A, (const void**)"texRef_f0A", "texRef_f0A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f1A, (const void**)"texRef_f1A", "texRef_f1A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f2A, (const void**)"texRef_f2A", "texRef_f2A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f3A, (const void**)"texRef_f3A", "texRef_f3A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f4A, (const void**)"texRef_f4A", "texRef_f4A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f5A, (const void**)"texRef_f5A", "texRef_f5A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f6A, (const void**)"texRef_f6A", "texRef_f6A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f7A, (const void**)"texRef_f7A", "texRef_f7A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f8A, (const void**)"texRef_f8A", "texRef_f8A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f9A, (const void**)"texRef_f9A", "texRef_f9A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f10A, (const void**)"texRef_f10A", "texRef_f10A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f11A, (const void**)"texRef_f11A", "texRef_f11A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f12A, (const void**)"texRef_f12A", "texRef_f12A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f13A, (const void**)"texRef_f13A", "texRef_f13A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f14A, (const void**)"texRef_f14A", "texRef_f14A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f15A, (const void**)"texRef_f15A", "texRef_f15A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f16A, (const void**)"texRef_f16A", "texRef_f16A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f17A, (const void**)"texRef_f17A", "texRef_f17A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f18A, (const void**)"texRef_f18A", "texRef_f18A", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f0B, (const void**)"texRef_f0B", "texRef_f0B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f1B, (const void**)"texRef_f1B", "texRef_f1B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f2B, (const void**)"texRef_f2B", "texRef_f2B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f3B, (const void**)"texRef_f3B", "texRef_f3B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f4B, (const void**)"texRef_f4B", "texRef_f4B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f5B, (const void**)"texRef_f5B", "texRef_f5B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f6B, (const void**)"texRef_f6B", "texRef_f6B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f7B, (const void**)"texRef_f7B", "texRef_f7B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f8B, (const void**)"texRef_f8B", "texRef_f8B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f9B, (const void**)"texRef_f9B", "texRef_f9B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f10B, (const void**)"texRef_f10B", "texRef_f10B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f11B, (const void**)"texRef_f11B", "texRef_f11B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f12B, (const void**)"texRef_f12B", "texRef_f12B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f13B, (const void**)"texRef_f13B", "texRef_f13B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f14B, (const void**)"texRef_f14B", "texRef_f14B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f15B, (const void**)"texRef_f15B", "texRef_f15B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f16B, (const void**)"texRef_f16B", "texRef_f16B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f17B, (const void**)"texRef_f17B", "texRef_f17B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f18B, (const void**)"texRef_f18B", "texRef_f18B", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f0C, (const void**)"texRef_f0C", "texRef_f0C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f1C, (const void**)"texRef_f1C", "texRef_f1C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f2C, (const void**)"texRef_f2C", "texRef_f2C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f3C, (const void**)"texRef_f3C", "texRef_f3C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f4C, (const void**)"texRef_f4C", "texRef_f4C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f5C, (const void**)"texRef_f5C", "texRef_f5C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f6C, (const void**)"texRef_f6C", "texRef_f6C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f7C, (const void**)"texRef_f7C", "texRef_f7C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f8C, (const void**)"texRef_f8C", "texRef_f8C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f9C, (const void**)"texRef_f9C", "texRef_f9C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f10C, (const void**)"texRef_f10C", "texRef_f10C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f11C, (const void**)"texRef_f11C", "texRef_f11C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f12C, (const void**)"texRef_f12C", "texRef_f12C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f13C, (const void**)"texRef_f13C", "texRef_f13C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f14C, (const void**)"texRef_f14C", "texRef_f14C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f15C, (const void**)"texRef_f15C", "texRef_f15C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f16C, (const void**)"texRef_f16C", "texRef_f16C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f17C, (const void**)"texRef_f17C", "texRef_f17C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f18C, (const void**)"texRef_f18C", "texRef_f18C", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f0D, (const void**)"texRef_f0D", "texRef_f0D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f1D, (const void**)"texRef_f1D", "texRef_f1D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f2D, (const void**)"texRef_f2D", "texRef_f2D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f3D, (const void**)"texRef_f3D", "texRef_f3D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f4D, (const void**)"texRef_f4D", "texRef_f4D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f5D, (const void**)"texRef_f5D", "texRef_f5D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f6D, (const void**)"texRef_f6D", "texRef_f6D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f7D, (const void**)"texRef_f7D", "texRef_f7D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f8D, (const void**)"texRef_f8D", "texRef_f8D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f9D, (const void**)"texRef_f9D", "texRef_f9D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f10D, (const void**)"texRef_f10D", "texRef_f10D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f11D, (const void**)"texRef_f11D", "texRef_f11D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f12D, (const void**)"texRef_f12D", "texRef_f12D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f13D, (const void**)"texRef_f13D", "texRef_f13D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f14D, (const void**)"texRef_f14D", "texRef_f14D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f15D, (const void**)"texRef_f15D", "texRef_f15D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f16D, (const void**)"texRef_f16D", "texRef_f16D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f17D, (const void**)"texRef_f17D", "texRef_f17D", 2, 0, 0); __cudaRegisterTexture(__cudaFatCubinHandle, (const struct textureReference*)&texRef_f18D, (const void**)"texRef_f18D", "texRef_f18D", 2, 0, 0); }
# 2 "MRT.cudafe1.stub.c" 2
# 1 "MRT.cudafe1.stub.c"
